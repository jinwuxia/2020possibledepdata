{
  "@schemaVersion" : "1.0",
  "name" : "pygments-main_und",
  "variables" : [ "tests.test_basic_api_py", "tests.test_examplefiles_py", "tests.test_html_formatter_py", "tests.test_cmdline_py", "tests.test_latex_formatter_py", "tests.test_string_asserts_py", "tests.test_irc_formatter_py", "tests.test_rtf_formatter_py", "pygments.lexers.rnc_py", "pygments.lexers.ncl_py", "pygments.filters.__init___py", "tests.test_julia_py", "pygments.lexers._cocoa_builtins_py", "pygments.lexers.agile_py", "pygments.lexers.stata_py", "tests.support.empty_py", "tests.test_token_py", "pygments.lexers.int_fiction_py", "pygments.styles.trac_py", "pygments.styles.bw_py", "pygments.styles.paraiso_light_py", "pygments.lexers._sourcemod_builtins_py", "pygments.lexers.pawn_py", "pygments.lexers.sas_py", "pygments.lexers.modeling_py", "tests.examplefiles.unicodedoc_py", "pygments.lexers.eiffel_py", "pygments.lexers._tsql_builtins_py", "pygments.lexers.c_like_py", "pygments.styles.monokai_py", "tests.test_textfmts_py", "tests.test_shell_py", "tests.test_sql_py", "pygments.lexers.j_py", "pygments.styles.friendly_py", "pygments.lexers.xorg_py", "pygments.styles.arduino_py", "pygments.lexers._cl_builtins_py", "pygments.lexers.math_py", "pygments.lexers.igor_py", "pygments.lexers.nit_py", "external.markdown-processor_py", "tests.test_clexer_py", "pygments.formatters.terminal_py", "pygments.lexers.asm_py", "pygments.lexers.apl_py", "pygments.styles.paraiso_dark_py", "tests.test_javascript_py", "pygments.formatters._mapping_py", "tests.test_inherit_py", "tests.test_smarty_py", "pygments.lexers.ml_py", "pygments.styles.stata_py", "pygments.lexers.theorem_py", "pygments.lexers.urbi_py", "pygments.lexers._mql_builtins_py", "pygments.lexers.javascript_py", "pygments.lexers.functional_py", "pygments.lexers.fortran_py", "tests.test_bibtex_py", "pygments.lexers.ecl_py", "pygments.lexers._lua_builtins_py", "pygments.lexers._lasso_builtins_py", "pygments.scanner_py", "tests.test_ezhil_py", "tests.test_ruby_py", "tests.test_php_py", "pygments.lexers.grammar_notation_py", "pygments.styles.perldoc_py", "pygments.lexers.tcl_py", "pygments.lexers.templates_py", "pygments.lexers.basic_py", "pygments.lexers.forth_py", "pygments.lexers.r_py", "pygments.lexers.haxe_py", "tests.support.python_lexer_py", "pygments.lexers.ampl_py", "pygments.lexers._asy_builtins_py", "pygments.formatters.html_py", "pygments.styles.native_py", "pygments.formatters.__init___py", "setup_py", "pygments.lexers.jvm_py", "pygments.lexers.varnish_py", "pygments.lexers.smalltalk_py", "pygments.styles.xcode_py", "pygments.lexers.capnproto_py", "pygments.lexers.lisp_py", "pygments.lexers.praat_py", "pygments.lexers.markup_py", "pygments.console_py", "tests.run_py", "pygments.lexers.elm_py", "pygments.lexers.console_py", "pygments.lexers.css_py", "pygments.styles.lovelace_py", "scripts.get_vimkw_py", "tests.support_py", "pygments.lexers.hdl_py", "pygments.lexers.typoscript_py", "pygments.styles.manni_py", "pygments.styles.vs_py", "pygments.lexers.__init___py", "pygments.lexers.oberon_py", "pygments.lexers.inferno_py", "pygments.lexers.ooc_py", "tests.test_qbasiclexer_py", "pygments.lexers._stata_builtins_py", "pygments.lexers.configs_py", "pygments.lexers.csound_py", "pygments.styles.colorful_py", "tests.test_objectiveclexer_py", "tests.test_unistring_py", "tests.test_whiley_py", "external.rst-directive_py", "pygments.lexers.qvt_py", "pygments.lexers.special_py", "pygments.styles.igor_py", "pygments.styles.vim_py", "pygments.lexers.compiled_py", "pygments.lexers.iolang_py", "pygments.lexers.graph_py", "pygments.lexers.nix_py", "tests.test_lexers_other_py", "pygments.lexers.esoteric_py", "pygments.lexers.bibtex_py", "pygments.lexers._csound_builtins_py", "pygments.lexers.sql_py", "tests.test_using_api_py", "pygments.lexers.idl_py", "pygments.lexers.snobol_py", "pygments.regexopt_py", "pygments.styles.tango_py", "pygments.formatters.other_py", "pygments.lexers.perl_py", "pygments.lexers.fantom_py", "pygments.lexers.go_py", "pygments.unistring_py", "tests.test_terminal_formatter_py", "pygments.lexers.erlang_py", "pygments.lexers.algebra_py", "pygments.lexers.automation_py", "pygments.lexers.textfmts_py", "pygments.plugin_py", "scripts.detect_missing_analyse_text_py", "scripts.debug_lexer_py", "pygments.lexers.foxpro_py", "pygments.lexers.prolog_py", "pygments.styles.algol_py", "pygments.modeline_py", "pygments.lexers.archetype_py", "pygments.lexers._mapping_py", "pygments.lexers.resource_py", "pygments.lexers.modula2_py", "tests.test_cpp_py", "pygments.__init___py", "pygments.formatters.bbcode_py", "pygments.lexers._postgres_builtins_py", "pygments.styles.default_py", "pygments.lexers.verification_py", "doc.conf_py", "pygments.lexers.roboconf_py", "pygments.lexers.html_py", "pygments.lexers.supercollider_py", "pygments.styles.fruity_py", "pygments.formatters.rtf_py", "pygments.formatters.irc_py", "pygments.lexers.objective_py", "pygments.lexers.factor_py", "pygments.filter_py", "tests.test_regexlexer_py", "pygments.formatters.latex_py", "pygments.formatters.terminal256_py", "pygments.styles.emacs_py", "pygments.styles.rrt_py", "tests.test_cfm_py", "tests.support.html_formatter_py", "pygments.lexers.rdf_py", "pygments.lexers.pascal_py", "pygments.sphinxext_py", "pygments.styles.autumn_py", "pygments.lexers._scilab_builtins_py", "pygments.lexers.dylan_py", "pygments.lexers.nimrod_py", "pygments.lexers.matlab_py", "tests.test_java_py", "pygments.cmdline_py", "pygments.lexers._openedge_builtins_py", "pygments.formatters.img_py", "pygments.lexers.webmisc_py", "pygments.styles.pastie_py", "tests.examplefiles.linecontinuation_py", "scripts.vim2pygments_py", "pygments.lexers.other_py", "pygments.lexers.parasail_py", "pygments.lexers.web_py", "pygments.lexers.trafficscript_py", "pygments.formatters.svg_py", "pygments.lexers.data_py", "pygments.lexers.hexdump_py", "pygments.lexers.ezhil_py", "tests.test_python_py", "pygments.util_py", "pygments.lexers.chapel_py", "pygments.lexers.actionscript_py", "pygments.lexers.x10_py", "pygments.styles.borland_py", "tests.test_regexopt_py", "tests.test_properties_py", "pygments.lexers.parsers_py", "pygments.lexers.ruby_py", "pygments.lexers.whiley_py", "pygments.styles.sas_py", "pygments.lexers._stan_builtins_py", "pygments.lexers.dalvik_py", "pygments.lexers.graphics_py", "pygments.lexers.julia_py", "tests.test_modeline_py", "pygments.formatter_py", "scripts.check_sources_py", "pygments.lexers.business_py", "pygments.lexers.dotnet_py", "pygments.lexers.text_py", "pygments.lexers.scripting_py", "tests.test_crystal_py", "pygments.lexers.haskell_py", "pygments.lexers.php_py", "pygments.lexers.shell_py", "pygments.styles.rainbow_dash_py", "pygments.lexers.c_cpp_py", "pygments.lexers.crystal_py", "pygments.lexers.rust_py", "pygments.lexers.rebol_py", "tests.test_data_py", "tests.test_util_py", "pygments.lexers._php_builtins_py", "pygments.lexers.diff_py", "pygments.lexers.testing_py", "pygments.styles.__init___py", "tests.test_perllexer_py", "pygments.token_py", "external.moin-parser_py", "pygments.lexers.make_py", "pygments.lexers.installers_py", "pygments.lexers.textedit_py", "pygments.styles.abap_py", "pygments.lexers.dsls_py", "pygments.lexers.clean_py", "pygments.lexers.robotframework_py", "pygments.lexers.python_py", "tests.test_praat_py", "pygments.lexer_py", "pygments.lexers.d_py", "pygments.lexers.smv_py", "pygments.style_py", "scripts.find_error_py", "tests.string_asserts_py", "pygments.lexers.monte_py", "pygments.lexers.felix_py", "pygments.styles.algol_nu_py", "pygments.styles.murphy_py", "pygments.lexers._vim_builtins_py", "pygments.lexers.ambient_py" ],
  "cells" : [ {
    "src" : 0,
    "dest" : 97,
    "values" : {
      "Use" : 1.0,
      "Import" : 1.0,
      "Raise" : 1.0,
      "Call" : 1.0
    }
  }, {
    "src" : 1,
    "dest" : 97,
    "values" : {
      "Raise" : 1.0,
      "Import" : 1.0
    }
  }, {
    "src" : 2,
    "dest" : 97,
    "values" : {
      "Import" : 1.0,
      "Use" : 1.0,
      "Call" : 1.0
    }
  }, {
    "src" : 3,
    "dest" : 97,
    "values" : {
      "Use" : 1.0,
      "Import" : 1.0,
      "Call" : 1.0
    }
  }, {
    "src" : 4,
    "dest" : 97,
    "values" : {
      "Raise" : 1.0,
      "Import" : 1.0,
      "Call" : 1.0,
      "Use" : 1.0
    }
  }, {
    "src" : 5,
    "dest" : 256,
    "values" : {
      "Inherit" : 1.0,
      "Import" : 1.0,
      "Import From" : 1.0
    }
  }, {
    "src" : 6,
    "dest" : 97,
    "values" : {
      "Import" : 1.0
    }
  }, {
    "src" : 7,
    "dest" : 256,
    "values" : {
      "Import From" : 1.0,
      "Inherit" : 1.0,
      "Import" : 1.0
    }
  } ]
}