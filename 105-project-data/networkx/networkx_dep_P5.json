{
  "@schemaVersion" : "1.0",
  "name" : "networkx\\networkx-sdsm",
  "variables" : [ "networkx/doc/conf.py", "networkx/doc/release/contribs.py", "networkx/doc/release/report_functions_without_rst_generated.py", "networkx/examples/3d_drawing/mayavi2_spring.py", "networkx/examples/advanced/iterated_dynamical_systems.py", "networkx/examples/advanced/plot_eigenvalues.py", "networkx/examples/advanced/plot_heavy_metal_umlaut.py", "networkx/examples/advanced/plot_parallel_betweenness.py", "networkx/examples/algorithms/beam_search.py", "networkx/examples/algorithms/plot_blockmodel.py", "networkx/examples/algorithms/plot_davis_club.py", "networkx/examples/algorithms/plot_krackhardt_centrality.py", "networkx/examples/algorithms/rcm.py", "networkx/examples/applications/circuits.py", "networkx/examples/basic/plot_properties.py", "networkx/examples/basic/plot_read_write.py", "networkx/examples/drawing/plot_atlas.py", "networkx/examples/drawing/plot_chess_masters.py", "networkx/examples/drawing/plot_circular_tree.py", "networkx/examples/drawing/plot_degree_histogram.py", "networkx/examples/drawing/plot_degree_rank.py", "networkx/examples/drawing/plot_directed.py", "networkx/examples/drawing/plot_edge_colormap.py", "networkx/examples/drawing/plot_ego_graph.py", "networkx/examples/drawing/plot_four_grids.py", "networkx/examples/drawing/plot_giant_component.py", "networkx/examples/drawing/plot_house_with_colors.py", "networkx/examples/drawing/plot_knuth_miles.py", "networkx/examples/drawing/plot_labels_and_colors.py", "networkx/examples/drawing/plot_lanl_routes.py", "networkx/examples/drawing/plot_node_colormap.py", "networkx/examples/drawing/plot_random_geometric_graph.py", "networkx/examples/drawing/plot_sampson.py", "networkx/examples/drawing/plot_simple_path.py", "networkx/examples/drawing/plot_spectral_grid.py", "networkx/examples/drawing/plot_unix_email.py", "networkx/examples/drawing/plot_weighted_graph.py", "networkx/examples/graph/atlas2.py", "networkx/examples/graph/expected_degree_sequence.py", "networkx/examples/graph/plot_degree_sequence.py", "networkx/examples/graph/plot_erdos_renyi.py", "networkx/examples/graph/plot_football.py", "networkx/examples/graph/plot_karate_club.py", "networkx/examples/graph/plot_napoleon_russian_campaign.py", "networkx/examples/graph/plot_roget.py", "networkx/examples/graph/words.py", "networkx/examples/javascript/force.py", "networkx/examples/jit/plot_rgraph.py", "networkx/examples/pygraphviz/pygraphviz_attributes.py", "networkx/examples/pygraphviz/pygraphviz_draw.py", "networkx/examples/pygraphviz/pygraphviz_simple.py", "networkx/examples/pygraphviz/write_dotfile.py", "networkx/examples/subclass/plot_antigraph.py", "networkx/examples/subclass/plot_printgraph.py", "networkx/networkx/algorithms/approximation/clique.py", "networkx/networkx/algorithms/approximation/clustering_coefficient.py", "networkx/networkx/algorithms/approximation/connectivity.py", "networkx/networkx/algorithms/approximation/dominating_set.py", "networkx/networkx/algorithms/approximation/independent_set.py", "networkx/networkx/algorithms/approximation/kcomponents.py", "networkx/networkx/algorithms/approximation/matching.py", "networkx/networkx/algorithms/approximation/ramsey.py", "networkx/networkx/algorithms/approximation/steinertree.py", "networkx/networkx/algorithms/approximation/tests/test_approx_clust_coeff.py", "networkx/networkx/algorithms/approximation/tests/test_clique.py", "networkx/networkx/algorithms/approximation/tests/test_connectivity.py", "networkx/networkx/algorithms/approximation/tests/test_dominating_set.py", "networkx/networkx/algorithms/approximation/tests/test_independent_set.py", "networkx/networkx/algorithms/approximation/tests/test_kcomponents.py", "networkx/networkx/algorithms/approximation/tests/test_matching.py", "networkx/networkx/algorithms/approximation/tests/test_ramsey.py", "networkx/networkx/algorithms/approximation/tests/test_steinertree.py", "networkx/networkx/algorithms/approximation/tests/test_treewidth.py", "networkx/networkx/algorithms/approximation/tests/test_vertex_cover.py", "networkx/networkx/algorithms/approximation/treewidth.py", "networkx/networkx/algorithms/approximation/vertex_cover.py", "networkx/networkx/algorithms/approximation/__init__.py", "networkx/networkx/algorithms/assortativity/connectivity.py", "networkx/networkx/algorithms/assortativity/correlation.py", "networkx/networkx/algorithms/assortativity/mixing.py", "networkx/networkx/algorithms/assortativity/neighbor_degree.py", "networkx/networkx/algorithms/assortativity/pairs.py", "networkx/networkx/algorithms/assortativity/tests/test_connectivity.py", "networkx/networkx/algorithms/assortativity/tests/test_correlation.py", "networkx/networkx/algorithms/assortativity/tests/test_mixing.py", "networkx/networkx/algorithms/assortativity/tests/test_neighbor_degree.py", "networkx/networkx/algorithms/assortativity/tests/test_pairs.py", "networkx/networkx/algorithms/assortativity/__init__.py", "networkx/networkx/algorithms/bipartite/basic.py", "networkx/networkx/algorithms/bipartite/centrality.py", "networkx/networkx/algorithms/bipartite/cluster.py", "networkx/networkx/algorithms/bipartite/covering.py", "networkx/networkx/algorithms/bipartite/edgelist.py", "networkx/networkx/algorithms/bipartite/generators.py", "networkx/networkx/algorithms/bipartite/matching.py", "networkx/networkx/algorithms/bipartite/matrix.py", "networkx/networkx/algorithms/bipartite/projection.py", "networkx/networkx/algorithms/bipartite/redundancy.py", "networkx/networkx/algorithms/bipartite/spectral.py", "networkx/networkx/algorithms/bipartite/tests/test_basic.py", "networkx/networkx/algorithms/bipartite/tests/test_centrality.py", "networkx/networkx/algorithms/bipartite/tests/test_cluster.py", "networkx/networkx/algorithms/bipartite/tests/test_covering.py", "networkx/networkx/algorithms/bipartite/tests/test_edgelist.py", "networkx/networkx/algorithms/bipartite/tests/test_generators.py", "networkx/networkx/algorithms/bipartite/tests/test_matching.py", "networkx/networkx/algorithms/bipartite/tests/test_matrix.py", "networkx/networkx/algorithms/bipartite/tests/test_project.py", "networkx/networkx/algorithms/bipartite/tests/test_redundancy.py", "networkx/networkx/algorithms/bipartite/tests/test_spectral_bipartivity.py", "networkx/networkx/algorithms/bipartite/__init__.py", "networkx/networkx/algorithms/boundary.py", "networkx/networkx/algorithms/bridges.py", "networkx/networkx/algorithms/centrality/betweenness.py", "networkx/networkx/algorithms/centrality/betweenness_subset.py", "networkx/networkx/algorithms/centrality/closeness.py", "networkx/networkx/algorithms/centrality/current_flow_betweenness.py", "networkx/networkx/algorithms/centrality/current_flow_betweenness_subset.py", "networkx/networkx/algorithms/centrality/current_flow_closeness.py", "networkx/networkx/algorithms/centrality/degree_alg.py", "networkx/networkx/algorithms/centrality/dispersion.py", "networkx/networkx/algorithms/centrality/eigenvector.py", "networkx/networkx/algorithms/centrality/flow_matrix.py", "networkx/networkx/algorithms/centrality/harmonic.py", "networkx/networkx/algorithms/centrality/katz.py", "networkx/networkx/algorithms/centrality/load.py", "networkx/networkx/algorithms/centrality/percolation.py", "networkx/networkx/algorithms/centrality/reaching.py", "networkx/networkx/algorithms/centrality/second_order.py", "networkx/networkx/algorithms/centrality/subgraph_alg.py", "networkx/networkx/algorithms/centrality/tests/test_betweenness_centrality.py", "networkx/networkx/algorithms/centrality/tests/test_betweenness_centrality_subset.py", "networkx/networkx/algorithms/centrality/tests/test_closeness_centrality.py", "networkx/networkx/algorithms/centrality/tests/test_current_flow_betweenness_centrality.py", "networkx/networkx/algorithms/centrality/tests/test_current_flow_betweenness_centrality_subset.py", "networkx/networkx/algorithms/centrality/tests/test_current_flow_closeness.py", "networkx/networkx/algorithms/centrality/tests/test_degree_centrality.py", "networkx/networkx/algorithms/centrality/tests/test_dispersion.py", "networkx/networkx/algorithms/centrality/tests/test_eigenvector_centrality.py", "networkx/networkx/algorithms/centrality/tests/test_harmonic_centrality.py", "networkx/networkx/algorithms/centrality/tests/test_katz_centrality.py", "networkx/networkx/algorithms/centrality/tests/test_load_centrality.py", "networkx/networkx/algorithms/centrality/tests/test_percolation_centrality.py", "networkx/networkx/algorithms/centrality/tests/test_reaching.py", "networkx/networkx/algorithms/centrality/tests/test_second_order_centrality.py", "networkx/networkx/algorithms/centrality/tests/test_subgraph.py", "networkx/networkx/algorithms/centrality/__init__.py", "networkx/networkx/algorithms/chains.py", "networkx/networkx/algorithms/chordal.py", "networkx/networkx/algorithms/clique.py", "networkx/networkx/algorithms/cluster.py", "networkx/networkx/algorithms/coloring/greedy_coloring.py", "networkx/networkx/algorithms/coloring/greedy_coloring_with_interchange.py", "networkx/networkx/algorithms/coloring/tests/test_coloring.py", "networkx/networkx/algorithms/coloring/__init__.py", "networkx/networkx/algorithms/communicability_alg.py", "networkx/networkx/algorithms/community/asyn_fluid.py", "networkx/networkx/algorithms/community/centrality.py", "networkx/networkx/algorithms/community/community_generators.py", "networkx/networkx/algorithms/community/community_utils.py", "networkx/networkx/algorithms/community/kclique.py", "networkx/networkx/algorithms/community/kernighan_lin.py", "networkx/networkx/algorithms/community/label_propagation.py", "networkx/networkx/algorithms/community/modularity_max.py", "networkx/networkx/algorithms/community/quality.py", "networkx/networkx/algorithms/community/tests/test_asyn_fluid.py", "networkx/networkx/algorithms/community/tests/test_centrality.py", "networkx/networkx/algorithms/community/tests/test_generators.py", "networkx/networkx/algorithms/community/tests/test_kclique.py", "networkx/networkx/algorithms/community/tests/test_kernighan_lin.py", "networkx/networkx/algorithms/community/tests/test_label_propagation.py", "networkx/networkx/algorithms/community/tests/test_modularity_max.py", "networkx/networkx/algorithms/community/tests/test_quality.py", "networkx/networkx/algorithms/community/tests/test_utils.py", "networkx/networkx/algorithms/community/__init__.py", "networkx/networkx/algorithms/components/attracting.py", "networkx/networkx/algorithms/components/biconnected.py", "networkx/networkx/algorithms/components/connected.py", "networkx/networkx/algorithms/components/semiconnected.py", "networkx/networkx/algorithms/components/strongly_connected.py", "networkx/networkx/algorithms/components/tests/test_attracting.py", "networkx/networkx/algorithms/components/tests/test_biconnected.py", "networkx/networkx/algorithms/components/tests/test_connected.py", "networkx/networkx/algorithms/components/tests/test_semiconnected.py", "networkx/networkx/algorithms/components/tests/test_strongly_connected.py", "networkx/networkx/algorithms/components/tests/test_subgraph_copies.py", "networkx/networkx/algorithms/components/tests/test_weakly_connected.py", "networkx/networkx/algorithms/components/weakly_connected.py", "networkx/networkx/algorithms/components/__init__.py", "networkx/networkx/algorithms/connectivity/connectivity.py", "networkx/networkx/algorithms/connectivity/cuts.py", "networkx/networkx/algorithms/connectivity/disjoint_paths.py", "networkx/networkx/algorithms/connectivity/edge_augmentation.py", "networkx/networkx/algorithms/connectivity/edge_kcomponents.py", "networkx/networkx/algorithms/connectivity/kcomponents.py", "networkx/networkx/algorithms/connectivity/kcutsets.py", "networkx/networkx/algorithms/connectivity/stoerwagner.py", "networkx/networkx/algorithms/connectivity/tests/test_connectivity.py", "networkx/networkx/algorithms/connectivity/tests/test_cuts.py", "networkx/networkx/algorithms/connectivity/tests/test_disjoint_paths.py", "networkx/networkx/algorithms/connectivity/tests/test_edge_augmentation.py", "networkx/networkx/algorithms/connectivity/tests/test_edge_kcomponents.py", "networkx/networkx/algorithms/connectivity/tests/test_kcomponents.py", "networkx/networkx/algorithms/connectivity/tests/test_kcutsets.py", "networkx/networkx/algorithms/connectivity/tests/test_stoer_wagner.py", "networkx/networkx/algorithms/connectivity/utils.py", "networkx/networkx/algorithms/connectivity/__init__.py", "networkx/networkx/algorithms/core.py", "networkx/networkx/algorithms/covering.py", "networkx/networkx/algorithms/cuts.py", "networkx/networkx/algorithms/cycles.py", "networkx/networkx/algorithms/dag.py", "networkx/networkx/algorithms/distance_measures.py", "networkx/networkx/algorithms/distance_regular.py", "networkx/networkx/algorithms/dominance.py", "networkx/networkx/algorithms/dominating.py", "networkx/networkx/algorithms/efficiency.py", "networkx/networkx/algorithms/euler.py", "networkx/networkx/algorithms/flow/boykovkolmogorov.py", "networkx/networkx/algorithms/flow/capacityscaling.py", "networkx/networkx/algorithms/flow/dinitz_alg.py", "networkx/networkx/algorithms/flow/edmondskarp.py", "networkx/networkx/algorithms/flow/gomory_hu.py", "networkx/networkx/algorithms/flow/maxflow.py", "networkx/networkx/algorithms/flow/mincost.py", "networkx/networkx/algorithms/flow/networksimplex.py", "networkx/networkx/algorithms/flow/preflowpush.py", "networkx/networkx/algorithms/flow/shortestaugmentingpath.py", "networkx/networkx/algorithms/flow/tests/test_gomory_hu.py", "networkx/networkx/algorithms/flow/tests/test_maxflow.py", "networkx/networkx/algorithms/flow/tests/test_maxflow_large_graph.py", "networkx/networkx/algorithms/flow/tests/test_mincost.py", "networkx/networkx/algorithms/flow/utils.py", "networkx/networkx/algorithms/flow/__init__.py", "networkx/networkx/algorithms/graphical.py", "networkx/networkx/algorithms/hierarchy.py", "networkx/networkx/algorithms/hybrid.py", "networkx/networkx/algorithms/isolate.py", "networkx/networkx/algorithms/isomorphism/isomorph.py", "networkx/networkx/algorithms/isomorphism/isomorphvf2.py", "networkx/networkx/algorithms/isomorphism/matchhelpers.py", "networkx/networkx/algorithms/isomorphism/temporalisomorphvf2.py", "networkx/networkx/algorithms/isomorphism/tests/test_isomorphism.py", "networkx/networkx/algorithms/isomorphism/tests/test_isomorphvf2.py", "networkx/networkx/algorithms/isomorphism/tests/test_match_helpers.py", "networkx/networkx/algorithms/isomorphism/tests/test_temporalisomorphvf2.py", "networkx/networkx/algorithms/isomorphism/tests/test_vf2userfunc.py", "networkx/networkx/algorithms/isomorphism/vf2userfunc.py", "networkx/networkx/algorithms/isomorphism/__init__.py", "networkx/networkx/algorithms/link_analysis/hits_alg.py", "networkx/networkx/algorithms/link_analysis/pagerank_alg.py", "networkx/networkx/algorithms/link_analysis/tests/test_hits.py", "networkx/networkx/algorithms/link_analysis/tests/test_pagerank.py", "networkx/networkx/algorithms/link_analysis/__init__.py", "networkx/networkx/algorithms/link_prediction.py", "networkx/networkx/algorithms/lowest_common_ancestors.py", "networkx/networkx/algorithms/matching.py", "networkx/networkx/algorithms/minors.py", "networkx/networkx/algorithms/mis.py", "networkx/networkx/algorithms/node_classification/hmn.py", "networkx/networkx/algorithms/node_classification/lgc.py", "networkx/networkx/algorithms/node_classification/tests/test_harmonic_function.py", "networkx/networkx/algorithms/node_classification/tests/test_local_and_global_consistency.py", "networkx/networkx/algorithms/node_classification/utils.py", "networkx/networkx/algorithms/node_classification/__init__.py", "networkx/networkx/algorithms/operators/all.py", "networkx/networkx/algorithms/operators/binary.py", "networkx/networkx/algorithms/operators/product.py", "networkx/networkx/algorithms/operators/tests/test_all.py", "networkx/networkx/algorithms/operators/tests/test_binary.py", "networkx/networkx/algorithms/operators/tests/test_product.py", "networkx/networkx/algorithms/operators/tests/test_unary.py", "networkx/networkx/algorithms/operators/unary.py", "networkx/networkx/algorithms/operators/__init__.py", "networkx/networkx/algorithms/planarity.py", "networkx/networkx/algorithms/reciprocity.py", "networkx/networkx/algorithms/richclub.py", "networkx/networkx/algorithms/shortest_paths/astar.py", "networkx/networkx/algorithms/shortest_paths/dense.py", "networkx/networkx/algorithms/shortest_paths/generic.py", "networkx/networkx/algorithms/shortest_paths/tests/test_astar.py", "networkx/networkx/algorithms/shortest_paths/tests/test_dense.py", "networkx/networkx/algorithms/shortest_paths/tests/test_dense_numpy.py", "networkx/networkx/algorithms/shortest_paths/tests/test_generic.py", "networkx/networkx/algorithms/shortest_paths/tests/test_unweighted.py", "networkx/networkx/algorithms/shortest_paths/tests/test_weighted.py", "networkx/networkx/algorithms/shortest_paths/unweighted.py", "networkx/networkx/algorithms/shortest_paths/weighted.py", "networkx/networkx/algorithms/shortest_paths/__init__.py", "networkx/networkx/algorithms/similarity.py", "networkx/networkx/algorithms/simple_paths.py", "networkx/networkx/algorithms/smallworld.py", "networkx/networkx/algorithms/smetric.py", "networkx/networkx/algorithms/sparsifiers.py", "networkx/networkx/algorithms/structuralholes.py", "networkx/networkx/algorithms/swap.py", "networkx/networkx/algorithms/tests/test_boundary.py", "networkx/networkx/algorithms/tests/test_bridges.py", "networkx/networkx/algorithms/tests/test_chains.py", "networkx/networkx/algorithms/tests/test_chordal.py", "networkx/networkx/algorithms/tests/test_clique.py", "networkx/networkx/algorithms/tests/test_cluster.py", "networkx/networkx/algorithms/tests/test_communicability.py", "networkx/networkx/algorithms/tests/test_core.py", "networkx/networkx/algorithms/tests/test_covering.py", "networkx/networkx/algorithms/tests/test_cuts.py", "networkx/networkx/algorithms/tests/test_cycles.py", "networkx/networkx/algorithms/tests/test_dag.py", "networkx/networkx/algorithms/tests/test_distance_measures.py", "networkx/networkx/algorithms/tests/test_distance_regular.py", "networkx/networkx/algorithms/tests/test_dominance.py", "networkx/networkx/algorithms/tests/test_dominating.py", "networkx/networkx/algorithms/tests/test_efficiency.py", "networkx/networkx/algorithms/tests/test_euler.py", "networkx/networkx/algorithms/tests/test_graphical.py", "networkx/networkx/algorithms/tests/test_hierarchy.py", "networkx/networkx/algorithms/tests/test_hybrid.py", "networkx/networkx/algorithms/tests/test_isolate.py", "networkx/networkx/algorithms/tests/test_link_prediction.py", "networkx/networkx/algorithms/tests/test_lowest_common_ancestors.py", "networkx/networkx/algorithms/tests/test_matching.py", "networkx/networkx/algorithms/tests/test_minors.py", "networkx/networkx/algorithms/tests/test_mis.py", "networkx/networkx/algorithms/tests/test_planarity.py", "networkx/networkx/algorithms/tests/test_reciprocity.py", "networkx/networkx/algorithms/tests/test_richclub.py", "networkx/networkx/algorithms/tests/test_similarity.py", "networkx/networkx/algorithms/tests/test_simple_paths.py", "networkx/networkx/algorithms/tests/test_smallworld.py", "networkx/networkx/algorithms/tests/test_smetric.py", "networkx/networkx/algorithms/tests/test_sparsifiers.py", "networkx/networkx/algorithms/tests/test_structuralholes.py", "networkx/networkx/algorithms/tests/test_swap.py", "networkx/networkx/algorithms/tests/test_threshold.py", "networkx/networkx/algorithms/tests/test_tournament.py", "networkx/networkx/algorithms/tests/test_triads.py", "networkx/networkx/algorithms/tests/test_vitality.py", "networkx/networkx/algorithms/tests/test_voronoi.py", "networkx/networkx/algorithms/tests/test_wiener.py", "networkx/networkx/algorithms/threshold.py", "networkx/networkx/algorithms/tournament.py", "networkx/networkx/algorithms/traversal/beamsearch.py", "networkx/networkx/algorithms/traversal/breadth_first_search.py", "networkx/networkx/algorithms/traversal/depth_first_search.py", "networkx/networkx/algorithms/traversal/edgebfs.py", "networkx/networkx/algorithms/traversal/edgedfs.py", "networkx/networkx/algorithms/traversal/tests/test_beamsearch.py", "networkx/networkx/algorithms/traversal/tests/test_bfs.py", "networkx/networkx/algorithms/traversal/tests/test_dfs.py", "networkx/networkx/algorithms/traversal/tests/test_edgebfs.py", "networkx/networkx/algorithms/traversal/tests/test_edgedfs.py", "networkx/networkx/algorithms/traversal/__init__.py", "networkx/networkx/algorithms/tree/branchings.py", "networkx/networkx/algorithms/tree/coding.py", "networkx/networkx/algorithms/tree/mst.py", "networkx/networkx/algorithms/tree/operations.py", "networkx/networkx/algorithms/tree/recognition.py", "networkx/networkx/algorithms/tree/tests/test_branchings.py", "networkx/networkx/algorithms/tree/tests/test_coding.py", "networkx/networkx/algorithms/tree/tests/test_mst.py", "networkx/networkx/algorithms/tree/tests/test_operations.py", "networkx/networkx/algorithms/tree/tests/test_recognition.py", "networkx/networkx/algorithms/tree/__init__.py", "networkx/networkx/algorithms/triads.py", "networkx/networkx/algorithms/vitality.py", "networkx/networkx/algorithms/voronoi.py", "networkx/networkx/algorithms/wiener.py", "networkx/networkx/algorithms/__init__.py", "networkx/networkx/classes/coreviews.py", "networkx/networkx/classes/digraph.py", "networkx/networkx/classes/filters.py", "networkx/networkx/classes/function.py", "networkx/networkx/classes/graph.py", "networkx/networkx/classes/graphviews.py", "networkx/networkx/classes/multidigraph.py", "networkx/networkx/classes/multigraph.py", "networkx/networkx/classes/ordered.py", "networkx/networkx/classes/reportviews.py", "networkx/networkx/classes/tests/historical_tests.py", "networkx/networkx/classes/tests/test_coreviews.py", "networkx/networkx/classes/tests/test_digraph.py", "networkx/networkx/classes/tests/test_digraph_historical.py", "networkx/networkx/classes/tests/test_filters.py", "networkx/networkx/classes/tests/test_function.py", "networkx/networkx/classes/tests/test_graph.py", "networkx/networkx/classes/tests/test_graphviews.py", "networkx/networkx/classes/tests/test_graph_historical.py", "networkx/networkx/classes/tests/test_multidigraph.py", "networkx/networkx/classes/tests/test_multigraph.py", "networkx/networkx/classes/tests/test_ordered.py", "networkx/networkx/classes/tests/test_reportviews.py", "networkx/networkx/classes/tests/test_special.py", "networkx/networkx/classes/tests/test_subgraphviews.py", "networkx/networkx/classes/__init__.py", "networkx/networkx/convert.py", "networkx/networkx/convert_matrix.py", "networkx/networkx/drawing/layout.py", "networkx/networkx/drawing/nx_agraph.py", "networkx/networkx/drawing/nx_pydot.py", "networkx/networkx/drawing/nx_pylab.py", "networkx/networkx/drawing/tests/test_agraph.py", "networkx/networkx/drawing/tests/test_layout.py", "networkx/networkx/drawing/tests/test_pydot.py", "networkx/networkx/drawing/tests/test_pylab.py", "networkx/networkx/drawing/__init__.py", "networkx/networkx/exception.py", "networkx/networkx/generators/atlas.py", "networkx/networkx/generators/classic.py", "networkx/networkx/generators/community.py", "networkx/networkx/generators/degree_seq.py", "networkx/networkx/generators/directed.py", "networkx/networkx/generators/duplication.py", "networkx/networkx/generators/ego.py", "networkx/networkx/generators/expanders.py", "networkx/networkx/generators/geometric.py", "networkx/networkx/generators/harary_graph.py", "networkx/networkx/generators/intersection.py", "networkx/networkx/generators/joint_degree_seq.py", "networkx/networkx/generators/lattice.py", "networkx/networkx/generators/line.py", "networkx/networkx/generators/mycielski.py", "networkx/networkx/generators/nonisomorphic_trees.py", "networkx/networkx/generators/random_clustered.py", "networkx/networkx/generators/random_graphs.py", "networkx/networkx/generators/small.py", "networkx/networkx/generators/social.py", "networkx/networkx/generators/spectral_graph_forge.py", "networkx/networkx/generators/stochastic.py", "networkx/networkx/generators/tests/test_atlas.py", "networkx/networkx/generators/tests/test_classic.py", "networkx/networkx/generators/tests/test_community.py", "networkx/networkx/generators/tests/test_degree_seq.py", "networkx/networkx/generators/tests/test_directed.py", "networkx/networkx/generators/tests/test_duplication.py", "networkx/networkx/generators/tests/test_ego.py", "networkx/networkx/generators/tests/test_expanders.py", "networkx/networkx/generators/tests/test_geometric.py", "networkx/networkx/generators/tests/test_harary_graph.py", "networkx/networkx/generators/tests/test_intersection.py", "networkx/networkx/generators/tests/test_joint_degree_seq.py", "networkx/networkx/generators/tests/test_lattice.py", "networkx/networkx/generators/tests/test_line.py", "networkx/networkx/generators/tests/test_mycielski.py", "networkx/networkx/generators/tests/test_nonisomorphic_trees.py", "networkx/networkx/generators/tests/test_random_clustered.py", "networkx/networkx/generators/tests/test_random_graphs.py", "networkx/networkx/generators/tests/test_small.py", "networkx/networkx/generators/tests/test_spectral_graph_forge.py", "networkx/networkx/generators/tests/test_stochastic.py", "networkx/networkx/generators/tests/test_trees.py", "networkx/networkx/generators/tests/test_triads.py", "networkx/networkx/generators/trees.py", "networkx/networkx/generators/triads.py", "networkx/networkx/generators/__init__.py", "networkx/networkx/linalg/algebraicconnectivity.py", "networkx/networkx/linalg/attrmatrix.py", "networkx/networkx/linalg/graphmatrix.py", "networkx/networkx/linalg/laplacianmatrix.py", "networkx/networkx/linalg/modularitymatrix.py", "networkx/networkx/linalg/spectrum.py", "networkx/networkx/linalg/tests/test_algebraic_connectivity.py", "networkx/networkx/linalg/tests/test_graphmatrix.py", "networkx/networkx/linalg/tests/test_laplacian.py", "networkx/networkx/linalg/tests/test_modularity.py", "networkx/networkx/linalg/tests/test_spectrum.py", "networkx/networkx/linalg/__init__.py", "networkx/networkx/readwrite/adjlist.py", "networkx/networkx/readwrite/edgelist.py", "networkx/networkx/readwrite/gexf.py", "networkx/networkx/readwrite/gml.py", "networkx/networkx/readwrite/gpickle.py", "networkx/networkx/readwrite/graph6.py", "networkx/networkx/readwrite/graphml.py", "networkx/networkx/readwrite/json_graph/adjacency.py", "networkx/networkx/readwrite/json_graph/cytoscape.py", "networkx/networkx/readwrite/json_graph/jit.py", "networkx/networkx/readwrite/json_graph/node_link.py", "networkx/networkx/readwrite/json_graph/tests/test_adjacency.py", "networkx/networkx/readwrite/json_graph/tests/test_cytoscape.py", "networkx/networkx/readwrite/json_graph/tests/test_jit.py", "networkx/networkx/readwrite/json_graph/tests/test_node_link.py", "networkx/networkx/readwrite/json_graph/tests/test_tree.py", "networkx/networkx/readwrite/json_graph/tree.py", "networkx/networkx/readwrite/json_graph/__init__.py", "networkx/networkx/readwrite/leda.py", "networkx/networkx/readwrite/multiline_adjlist.py", "networkx/networkx/readwrite/nx_shp.py", "networkx/networkx/readwrite/nx_yaml.py", "networkx/networkx/readwrite/p2g.py", "networkx/networkx/readwrite/pajek.py", "networkx/networkx/readwrite/sparse6.py", "networkx/networkx/readwrite/tests/test_adjlist.py", "networkx/networkx/readwrite/tests/test_edgelist.py", "networkx/networkx/readwrite/tests/test_gexf.py", "networkx/networkx/readwrite/tests/test_gml.py", "networkx/networkx/readwrite/tests/test_gpickle.py", "networkx/networkx/readwrite/tests/test_graph6.py", "networkx/networkx/readwrite/tests/test_graphml.py", "networkx/networkx/readwrite/tests/test_leda.py", "networkx/networkx/readwrite/tests/test_p2g.py", "networkx/networkx/readwrite/tests/test_pajek.py", "networkx/networkx/readwrite/tests/test_shp.py", "networkx/networkx/readwrite/tests/test_sparse6.py", "networkx/networkx/readwrite/tests/test_yaml.py", "networkx/networkx/readwrite/__init__.py", "networkx/networkx/relabel.py", "networkx/networkx/release.py", "networkx/networkx/testing/tests/test_utils.py", "networkx/networkx/testing/utils.py", "networkx/networkx/testing/__init__.py", "networkx/networkx/tests/test.py", "networkx/networkx/tests/test_all_random_functions.py", "networkx/networkx/tests/test_convert.py", "networkx/networkx/tests/test_convert_numpy.py", "networkx/networkx/tests/test_convert_pandas.py", "networkx/networkx/tests/test_convert_scipy.py", "networkx/networkx/tests/test_exceptions.py", "networkx/networkx/tests/test_relabel.py", "networkx/networkx/tests/__init__.py", "networkx/networkx/utils/contextmanagers.py", "networkx/networkx/utils/decorators.py", "networkx/networkx/utils/heaps.py", "networkx/networkx/utils/mapped_queue.py", "networkx/networkx/utils/misc.py", "networkx/networkx/utils/random_sequence.py", "networkx/networkx/utils/rcm.py", "networkx/networkx/utils/tests/test_contextmanager.py", "networkx/networkx/utils/tests/test_decorators.py", "networkx/networkx/utils/tests/test_heaps.py", "networkx/networkx/utils/tests/test_mapped_queue.py", "networkx/networkx/utils/tests/test_misc.py", "networkx/networkx/utils/tests/test_random_sequence.py", "networkx/networkx/utils/tests/test_rcm.py", "networkx/networkx/utils/tests/test_unionfind.py", "networkx/networkx/utils/union_find.py", "networkx/networkx/utils/__init__.py", "networkx/networkx/__init__.py", "networkx/setup.py", "networkx/tools/gitwash_dumper.py" ],
  "cells" : [ {
    "src" : 242,
    "dest" : 513,
    "values" : {
      "P5" : 16.0
    }
  }, {
    "src" : 242,
    "dest" : 515,
    "values" : {
      "P5" : 8.0
    }
  }, {
    "src" : 242,
    "dest" : 312,
    "values" : {
      "P5" : 8.0
    }
  }, {
    "src" : 242,
    "dest" : 239,
    "values" : {
      "P5" : 8.0
    }
  }, {
    "src" : 180,
    "dest" : 513,
    "values" : {
      "P5" : 16.0
    }
  }, {
    "src" : 180,
    "dest" : 515,
    "values" : {
      "P5" : 8.0
    }
  }, {
    "src" : 180,
    "dest" : 312,
    "values" : {
      "P5" : 8.0
    }
  }, {
    "src" : 180,
    "dest" : 239,
    "values" : {
      "P5" : 8.0
    }
  }, {
    "src" : 244,
    "dest" : 513,
    "values" : {
      "P5" : 4.0
    }
  }, {
    "src" : 244,
    "dest" : 515,
    "values" : {
      "P5" : 2.0
    }
  }, {
    "src" : 244,
    "dest" : 312,
    "values" : {
      "P5" : 2.0
    }
  }, {
    "src" : 244,
    "dest" : 239,
    "values" : {
      "P5" : 2.0
    }
  }, {
    "src" : 372,
    "dest" : 377,
    "values" : {
      "P5" : 4.0
    }
  }, {
    "src" : 372,
    "dest" : 74,
    "values" : {
      "P5" : 1.0
    }
  }, {
    "src" : 247,
    "dest" : 513,
    "values" : {
      "P5" : 4.0
    }
  }, {
    "src" : 247,
    "dest" : 515,
    "values" : {
      "P5" : 2.0
    }
  }, {
    "src" : 247,
    "dest" : 312,
    "values" : {
      "P5" : 2.0
    }
  }, {
    "src" : 247,
    "dest" : 239,
    "values" : {
      "P5" : 2.0
    }
  }, {
    "src" : 391,
    "dest" : 369,
    "values" : {
      "P5" : 2.0
    }
  }, {
    "src" : 391,
    "dest" : 274,
    "values" : {
      "P5" : 1.0
    }
  }, {
    "src" : 391,
    "dest" : 372,
    "values" : {
      "P5" : 2.0
    }
  }, {
    "src" : 391,
    "dest" : 468,
    "values" : {
      "P5" : 1.0
    }
  }, {
    "src" : 391,
    "dest" : 53,
    "values" : {
      "P5" : 1.0
    }
  }, {
    "src" : 391,
    "dest" : 374,
    "values" : {
      "P5" : 1.0
    }
  }, {
    "src" : 391,
    "dest" : 375,
    "values" : {
      "P5" : 1.0
    }
  }, {
    "src" : 391,
    "dest" : 472,
    "values" : {
      "P5" : 1.0
    }
  }, {
    "src" : 239,
    "dest" : 513,
    "values" : {
      "P5" : 32.0
    }
  }, {
    "src" : 239,
    "dest" : 515,
    "values" : {
      "P5" : 16.0
    }
  }, {
    "src" : 239,
    "dest" : 312,
    "values" : {
      "P5" : 16.0
    }
  }, {
    "src" : 383,
    "dest" : 369,
    "values" : {
      "P5" : 2.0
    }
  }, {
    "src" : 383,
    "dest" : 274,
    "values" : {
      "P5" : 2.0
    }
  }, {
    "src" : 383,
    "dest" : 372,
    "values" : {
      "P5" : 2.0
    }
  }, {
    "src" : 383,
    "dest" : 374,
    "values" : {
      "P5" : 2.0
    }
  }, {
    "src" : 383,
    "dest" : 375,
    "values" : {
      "P5" : 2.0
    }
  } ]
}