commit 6065540cb923cde2299b1c16a4e2bb9376186799
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2019-03-07 12:18:32 +0000

    .gitattributes: Add to improve git diff for minified css/js files

2	0	.gitattributes

commit fef56d28c3efec4876c379898cbc4d4c65303aee
Author: Alexander Kanavin <alex.kanavin@gmail.com>
Date:   2019-02-24 21:07:28 +0100

    bitbake: fix version comparison when one of the versions ends in .
    
    Previously, this would happen:
    
    ======================================================================
    ERROR: test_vercmpstring (bb.tests.utils.VerCmpString)
    ----------------------------------------------------------------------
    Traceback (most recent call last):
      File "/home/alexander/development/poky/bitbake/lib/bb/tests/utils.py", line 45, in test_vercmpstring
        result = bb.utils.vercmp_string('1.', '1.1')
      File "/home/alexander/development/poky/bitbake/lib/bb/utils.py", line 143, in vercmp_string
        return vercmp(ta, tb)
      File "/home/alexander/development/poky/bitbake/lib/bb/utils.py", line 135, in vercmp
        r = vercmp_part(va, vb)
      File "/home/alexander/development/poky/bitbake/lib/bb/utils.py", line 124, in vercmp_part
        elif ca < cb:
    TypeError: '<' not supported between instances of 'NoneType' and 'int'
    
    ----------------------------------------------------------------------
    
    Signed-off-by: Alexander Kanavin <alex.kanavin@gmail.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

4	0	lib/bb/tests/utils.py
4	0	lib/bb/utils.py

commit 4359b037de578095db2595f119dfb8e3340e1414
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2019-02-23 10:28:57 +0000

    cooker: Tweak multiconfig dependency resolution
    
    There were a couple of problems with the multiconfig dependency resolution:
    
    - the "if mc" condition triggering this code wasn't correct, it needs
      to be "if more than one multiconfig" configured
    - after adding providers we need to call add_unresolved again
      and rebuild mcdeps within the "while new" loop
    
    By fixing these issues we allow various other combinations of multiconfig
    builds to work which previously didn't.
    
    [YOCTO #13090]
    [YOCTO #13130]
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

24	29	lib/bb/cooker.py

commit c883dfe378af9dfc192a8e392e84325d68648806
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2019-02-23 10:27:30 +0000

    siggen: Fix multiconfig corner case
    
    There was already a fix to ignore some multiconfig dependencies but its
    'opposite' case wasn't covered. Cover that combination to so as to avoid
    tracebacks in multiconfig builds.
    
    [YOCTO #13090]
    [YOCTO #13130]
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	0	lib/bb/siggen.py

commit 531dcd221a10853f45cc057b52bb2d5083e0ee42
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2019-02-23 10:10:32 +0000

    runqueue: Filter out multiconfig dependencies from BB_TASKDEPDATA
    
    The consumers of BB_TASKDEPDATA in OE metadata can't cope with multiconfig
    dependencies. The choice is either to start adding code to each of them to
    filter out multiconfig dependencies, or do this at source.
    
    After consideration we've decided to do this at source as doing otherwise
    is code duplication and error prone and in any case we've looked at, they
    don't make sense.
    
    [YOCTO #13090]
    [YOCTO #13130]
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

19	0	lib/bb/runqueue.py

commit 8756e4ade67c16e35269ea0659e10b9ebaa6117f
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2019-02-16 12:57:02 +0000

    runqueue: Fix dependency loop analysis 'hangs'
    
    Currently the mechanism for breaking out of the dependnecy loop analysis
    code is broken and doesn't work leading to bitbake appearing to hang.
    
    Add in a custom exception for this purpose and fix the code to exit
    as intended, fixing the hang and making the dependency loop code
    usable again.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

9	3	lib/bb/runqueue.py

commit 4fa51afb56b090cf1f746842acd602c9536715d5
Author: Joshua Watt <jpewhacker@gmail.com>
Date:   2019-02-14 15:36:45 -0600

    bitbake: Allow arguments in FAKEROOTCMD
    
    Changes FAKEROOTCMD so that it can accept additional arguments to pass
    to the fakeroot implementation instead of being treated as a simple
    command
    
    Signed-off-by: Joshua Watt <JPEWhacker@gmail.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	2	lib/bb/runqueue.py

commit a1f251e5ab859d6d4a2cb908408d4ddcab5a5de1
Author: Robert Yang <liezhi.yang@windriver.com>
Date:   2019-01-25 15:09:29 +0800

    bitbake: cookerdata: Check duplicated BBFILE_COLLECTIONS
    
    It shouldn't work when there are duplicated BBFILE_COLLECTIONS.
    
    Signed-off-by: Robert Yang <liezhi.yang@windriver.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

4	0	lib/bb/cookerdata.py

commit 8da9242702fbef8cf3156b95a1076802e0f653c7
Author: Alexander Kanavin <alex.kanavin@gmail.com>
Date:   2019-02-11 15:13:01 +0100

    build.py: add unhandled exception information to the logger when executing python tasks
    
    Previously this information was simply discarded, which in some cases
    resulted in generic, unhelpful failures.
    
    With this change the user would see what the exception is, but
    without ugly tracebacks or bulky, irrelevant information from the log file.
    
    Signed-off-by: Alexander Kanavin <alex.kanavin@gmail.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	1	lib/bb/build.py

commit 3bba0dbd524cf72176a765957adff544ae5c255a
Author: André Draszik <andre.draszik@jci.com>
Date:   2019-01-13 11:18:24 +0000

    bitbake: remove True option to getVar calls
    
    getVar() has been defaulting to expanding by default for
    a long time (2016), thus remove the True option from
    getVar() calls with a regex search and replace.
    
    Search & replace made using the following command:
        sed -e 's|\(d\.getVar \?\)( \?\([^,()]*\), \?True)|\1(\2)|g' \
            -i $(git grep -E 'getVar ?\( ?([^,()]*), ?True\)' \
                 | cut -d':' -f1 \
                 | sort -u)
    
    Signed-off-by: André Draszik <andre.draszik@jci.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	classes/base.bbclass
1	1	lib/bb/fetch2/git.py
4	4	lib/bb/tests/fetch.py

commit 8b18ebb96e9f66649125f7cd1c8c8ffd1d691398
Author: Scott Rifenbark <srifenbark@gmail.com>
Date:   2019-02-12 13:17:16 -0800

    bitbake-user-manual: Fixed section head typo
    
    Unseting -> Unsetting
    
    Signed-off-by: Scott Rifenbark <srifenbark@gmail.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	doc/bitbake-user-manual/bitbake-user-manual-metadata.xml

commit d73dbc3580faa1225d95ae4cefac4879ca3c1b2f
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2019-02-05 21:34:37 +0000

    server/process: Add missing exception raise
    
    The intent of the code was to catch one kind of error, it was actually swallowing
    all exceptions and looping indefinitely. Fix it to work as intended.
    
    This explains some mystery hangs we've been seeing.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	0	lib/bb/server/process.py

commit 8c3bc15a7b5e0a81d7b6c9d3fe43fbff63207156
Author: Robert Yang <liezhi.yang@windriver.com>
Date:   2019-01-25 17:53:29 +0800

    bitbake: ConfHandler: Don't strip leading spaces
    
    Fixed:
    - Add the following lines to conf/local.conf:
      FOO = "BAR1"
      FOO_append = "\
          BAR2"
    
      $ bitbake -e | grep '^FOO'
      FOO="BAR1BAR2"
    
      The leading spaces in the second line have been removed.
    
    - But if add the previous two lines to base.bbclass:
      $ bitbake -e | grep '^FOO'
      FOO="BAR1    BAR2"
    
      The leading spaces in the second line are preserved, this is inconsistent, now
      fix ConfHandler to preserve leading spaces.
    
    [YOCTO #12380]
    
    Signed-off-by: Robert Yang <liezhi.yang@windriver.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/parse/parse_py/ConfHandler.py

commit 649a304b4d0a35553f665f0a748a7f21fcab51ba
Author: David Reyna <David.Reyna@windriver.com>
Date:   2019-02-04 19:40:31 -0800

    toaster: correctly register the thud branch
    
    There are typos in the fixture files that need to be fixed to correctly
    check out the 'thud' branch.
    
    [YOCTO #13064]
    
    Signed-off-by: David Reyna <David.Reyna@windriver.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/toaster/orm/fixtures/oe-core.xml
4	4	lib/toaster/orm/fixtures/poky.xml

commit 0ec98c01ae50f95c9c74acf53013ac59e0e72b08
Author: Mark Hatle <mark.hatle@windriver.com>
Date:   2019-01-26 20:04:23 -0500

    gitsm: The fetcher did not process some recursive submodules properly.
    
    Move the submodule processing outside of the if statement to avoid any
    optimizations that may happen.
    
    Update the test cases to include the additional case, and split the other
    test cases into individual tests to make it easier to figure out what
    the failure may be.
    
    Signed-off-by: Mark Hatle <mark.hatle@windriver.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	1	lib/bb/fetch2/gitsm.py
20	0	lib/bb/tests/fetch.py

commit 8c8ecec2a722bc2885e2648d41ac8df07bdf660d
Author: Mark Hatle <mark.hatle@windriver.com>
Date:   2019-01-23 10:28:18 -0500

    gitsmy.py: Fix unpack of submodules of submodules
    
    If the submodule is in a subdirectory, it needs to have that structure
    preserved.  This means the unpack path needs to be in the 'dirname' of the
    final path -- since the unpack directory name is specified in the URI.
    
    Additional specific test cases were added to ensure this is working properly
    based on two recent error reports.
    
    Signed-off-by: Mark Hatle <mark.hatle@windriver.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

6	3	lib/bb/fetch2/gitsm.py
26	0	lib/bb/tests/fetch.py

commit 14bb383af0ca98e0e04ec217e537b6a899f3658e
Author: Mark Hatle <mark.hatle@windriver.com>
Date:   2019-01-23 10:28:17 -0500

    gitsm.py: Fix relative URLs
    
    Prior code happened to work with relative URLs, when the code was recently
    restructured it caused all relative urls to no longer work.  Restore the prior
    code flow for relative support and better comment why that code is there.
    
    Signed-off-by: Mark Hatle <mark.hatle@windriver.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

6	5	lib/bb/fetch2/gitsm.py
2	2	lib/bb/tests/fetch.py

commit be022085fe1ea1b9a9d519f0455883e2da363d2c
Author: Christopher Larson <chris_larson@mentor.com>
Date:   2019-01-18 21:45:55 +0500

    bb.tests.codeparser: add parameter expansion modifiers test
    
    We don't want references including shell parameter expansion modifiers
    (i.e. `:-`, `#`, `%%`, etc) to be added to our vardeps, so add a test to
    ensure this.
    
    YOCTO #12987
    
    Signed-off-by: Christopher Larson <chris_larson@mentor.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

7	0	lib/bb/tests/codeparser.py

commit df2ac65370aa86cdbc1574fdede25e3519410e45
Author: Christopher Larson <chris_larson@mentor.com>
Date:   2019-01-18 21:45:54 +0500

    bb.data_smart: only try to expand refs to valid variable names
    
    This aligns the behavior of expansion with the recipe parser, only
    attempting to expand references to valid variable names. This avoids
    adding references for things like `${foo#${TOPDIR}}` to our vardeps
    without imposing much additional processing overhead beyond the change
    to the expansion regexp.
    
    YOCTO #12987
    
    Signed-off-by: Christopher Larson <chris_larson@mentor.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/data_smart.py

commit 610dbee5634677f5055e2b36a3043cd197fb8c51
Author: Mark Hatle <mark.hatle@windriver.com>
Date:   2019-01-15 16:31:37 -0500

    gitsm.py: Refactor the functions and simplify the class
    
    The update_submodules and unpack_submodules functions were nearly indentical,
    so we made a common function where the different behavior could be passed
    in by the download and unpack users.  The new function is process_submodules.
    
    Moved the parse_gitmodules function under the new process_submodules, since
    there are no external callers.
    
    Refactor the file relative path processing to the URL translation code.
    We also add a warning to the translation if a relative ssh URL has been
    detected.  Since this can cause a problem.
    
    In the case of a relative URL that does not work after being translated,
    it should be possible to use the MIRROR functions to manual translate the
    generated relative URL into one that works properly.
    
    Remove 'git config' processing on download contents.  It turns out this is not
    necessary since all of the later components work using the git fetcher.
    
    Limit the 'git submodule update' call to only when unpacking a non-bare
    repository.  Submodules are always loaded as bare, so this prevents
    intermediate unpacks from being attempted.
    
    Finally, the test cases were updated and the new commit ids in the test
    repository were updates as well.
    
    Signed-off-by: Mark Hatle <mark.hatle@windriver.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

88	144	lib/bb/fetch2/gitsm.py
10	2	lib/bb/tests/fetch.py

commit f9cc4684dcf4281acc557cda8cb35602354ac3d6
Author: Mark Hatle <mark.hatle@windriver.com>
Date:   2019-01-15 16:31:36 -0500

    gitsm.py: Rework the shallow fetcher and test case
    
    A custom shallow submodule is no longer necessary, as the regular git
    fetcher is used and shallow handling works with the same code.
    
    The only general difference between the regular change is simply declaring a
    clone as shallow, when appropriate.
    
    This also removes a potential race condition in copying repositories
    vs cloning them.
    
    The gitsm shallow fetcher test was revised to verify that the submodule
    is shallow cloned along with the primary repository.
    
    The first step of this change was to be sure to clean the gitsubmodule download
    directory, as was previously done with the may gitsource directory.
    
    Additional test components were added to verify commit counts, and an
    obsolete (and likely incorrect) test for the .git/modules directory to be
    empty was also removed.
    
    Signed-off-by: Mark Hatle <mark.hatle@windriver.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

4	62	lib/bb/fetch2/gitsm.py
9	1	lib/bb/tests/fetch.py

commit 7d7ee630f1c65e7dd234f945edf5e3b3bcb0fc30
Author: Mark Hatle <mark.hatle@windriver.com>
Date:   2019-01-15 16:31:35 -0500

    gitsm.py: revise unpack
    
    Greatly simply the unpack rule by copying the general functionality of
    update_submodules as unpack_submodules.  This will recursively construct
    a set of urls and unpack them using the standard system behaviors.
    
    The overall code may be slightly bigger, but this ensures that all of the
    standard locks are inplace, ensuring the code doesn't change out from
    under the unpack function.  (This could have happened before due to using
    'cp' instead of further unpacks on submodules.  This may still happen in
    shallow clones.)
    
    Signed-off-by: Mark Hatle <mark.hatle@windriver.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

78	38	lib/bb/fetch2/gitsm.py

commit 346338667edca1f58ace769ad417548da2b8d981
Author: Mark Hatle <mark.hatle@windriver.com>
Date:   2019-01-15 16:31:34 -0500

    gitsm.py: Optimize code and attempt to resolve locking issue
    
    It was reported that a race condition on a shared download directory could
    occur with the gitsm fetcher, the result happened with a call to
    
      git config
    
    that occured within the update_submodules.  Since the fetch is locked by the
    upper level, it was probably the prior need_update(...) function causing this
    because of some old code.
    
    The gitsm class inherits the git class.  The need_update was overridding the
    version in gitsm, so that it forceably checked the submodules.
    
    It's clear we can optimize the code by only updating if the primary repository
    needs updating.  Since we don't care if the submodule repository has changed
    because if the primary hasn't, references to the submodule won't change.
    
    Signed-off-by: Mark Hatle <mark.hatle@windriver.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

0	14	lib/bb/fetch2/gitsm.py

commit c8554cdc1287620fe8e8960561e614567879a010
Author: Mark Hatle <mark.hatle@windriver.com>
Date:   2019-01-15 16:31:33 -0500

    tests/fetch.py: Add alternative gitsm test case
    
    In order to test the ssh processing in gitsm, we add an alternative
    testcase that can be downloaded from git.yoctoproject.org.  However,
    this test case requries (read) access, via ssh, to git.yoctoproject.org.
    
    Signed-off-by: Mark Hatle <mark.hatle@windriver.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

5	1	lib/bb/tests/fetch.py

commit dcac05e7dc6b0c5f8e63d36ad105b7eab41f0016
Author: Mark Hatle <mark.hatle@windriver.com>
Date:   2019-01-15 16:31:32 -0500

    gitsm.py: Add support for alternative URL formats from submodule files
    
    The following appear to be the git supported formats:
    
      proto://user:pass@host/path  (URI format)
      user@host:path (SSH format)
      /path or ./path or ../path (local file format)
    
    We adjust the parsing to find out if we have a URI format or not.
    When we are NOT in URI format, we do our best to determine SSH or
    file format by looking for a ':' in the overall string.  If we find
    a ':' we assume SSH format and adjust accordingly.
    
    Note, in SSH format we simply replace the ':' with a '/' when constructing
    the URL.  However, if the original path was ":/...", we don't want '//' so
    we deal with this corner case as well.
    
    Signed-off-by: Mark Hatle <mark.hatle@windriver.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

15	2	lib/bb/fetch2/gitsm.py

commit 49e1ff920143dcd4e7f73933d7ab8a84b8ffa1a3
Author: Mark Hatle <mark.hatle@windriver.com>
Date:   2019-01-15 16:31:31 -0500

    gitsm.py: Fix when a submodule is defined, but not initialized
    
    It is possible for a submodule to be defined in the .gitmodules file, but
    never initialized in the repository itself.  This shows itself when searching
    for the defined module hash you will get back a empty value.
    
    Similarly we need to identify and skip defined but not initialized submodules
    during the unpack stages as well.
    
    Thanks to raphael.lisicki@siemens.com for their help is figuring out how
    to resolve this issue.
    
    Additionally a problem was found where, while unlikely, it may be possible
    for the wrong revision to have been searched using ls-tree.  This has been
    resolved in the update_submodules function by keeping the correct revision
    along with the submodule path.
    
    Signed-off-by: Mark Hatle <mark.hatle@windriver.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

28	4	lib/bb/fetch2/gitsm.py

commit c1fcc46e2498ddd41425d8756754f814d682aba3
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2019-01-14 15:50:51 +0000

    bitbake: Fix Deprecated warnings from regexs
    
    Fix handling of escape characters in regexs and hence fix python
    Deprecation warnings which will be problematic in python 3.8.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	2	lib/bb/fetch2/git.py
12	12	lib/bb/fetch2/wget.py
6	6	lib/bb/monitordisk.py
9	9	lib/bb/parse/parse_py/BBHandler.py
2	2	lib/bb/providers.py
1	1	lib/bb/siggen.py
6	6	lib/bs4/dammit.py
4	4	lib/bs4/element.py

commit 52a144a7daa94b2bd239d582cb71d1f03119918f
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2019-01-13 10:48:19 +0000

    bs4/element: Fix DeprecationWarning
    
    ./lib/bs4/element.py:1565: DeprecationWarning: Using or importing the
    ABCs from 'collections' instead of from 'collections.abc' is deprecated,
    and in 3.8 it will stop working
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

7	7	lib/bs4/element.py

commit 15d20d948359fa1d7a7a754b2a1d8ed9f4ca0480
Author: Robert Yang <liezhi.yang@windriver.com>
Date:   2019-01-11 16:49:53 +0800

    bitbake: runqueue: __find_md5__ -> __find_sha256
    
    Fixed:
    Create a new build
    $ bitbake quilt-native -ccleansstate -Snone
    $ bitbake quilt-native -ccleansstate -Sprintdiff
    
    [snip]
         latestmatch = sorted(matches.keys(), key=lambda f: matches[f])[-1]
    >    prevh = __find_md5__.search(latestmatch).group(0)
         output = bb.siggen.compare_sigfiles(latestmatch, match, recursecb)
    AttributeError: 'NoneType' object has no attribute 'group'
    
    Signed-off-by: Robert Yang <liezhi.yang@windriver.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	2	lib/bb/runqueue.py

commit 5e7f4e77e27bceaf6c68137cacb4f8d7d7de49dd
Author: Joshua Watt <jpewhacker@gmail.com>
Date:   2019-01-07 13:23:52 -0600

    bitbake: runqueue: Use multiconfig name to fetch unihash
    
    The unihash should be fetched using the task filename that includes the
    multiconfig prefixes.
    
    [YOCTO #13124]
    
    Signed-off-by: Joshua Watt <JPEWhacker@gmail.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/runqueue.py

commit 66f1b766997d53b4375fdd25719b1175f3828903
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2018-12-17 14:53:06 +0000

    data/siggen: Switch md5 -> sha256
    
    Similarly to the codeparser change, change to sha256 hashes due to worries
    over collisions. The main impact of this change is slightly slower parsing
    time as well as longer sstate file names.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/data.py
1	1	lib/bb/data_smart.py
3	3	lib/bb/siggen.py

commit 4bed7a97198176503fe8c72d8dd7c36b28fc9dd1
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2018-12-17 14:18:59 +0000

    codeparser: Switch to sha256 from md5
    
    We've reports of hash collision with codeparser. Looking at the way collision
    problems occur with md5 and the way our function templating works, I can believe
    we may run into issues.
    
    This patch therefore switches to sha256.
    
    Performance wise, parse time could appear to rise by 4s in 374s
    
    Before:
    
    384329 in 2.966s (md5)
    
    After:
    
    349743 in 2.340s (sha256)
    34723 in 1.245s (md5)
    
    since we still have md5 used elsewhere in the code, something we should look at
    next (using sha256 everywhere is around 5.3s in total)
    
    Unfortunately this does nearly double the size of the codeparser cache file
    due to the hash size change.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	2	lib/bb/codeparser.py

commit ae79868861568d673a70472e85a4bde9e2d84a8f
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2018-12-28 16:40:33 +0000

    cooker: Split recipes to parse amongst threads ahead of time
    
    We have two choices, split the recipes amongst the parsing threads in
    blocks ahead of time, or have a queue which parsers pull from when idle.
    
    The optimum approach depends on how similar the pieces are. For the single
    recipe reparse case, there is currently a significant wait for the feeder
    thread to start (around 0.25s in a 2s command).
    
    Its possible splitting into blocks in advance may be unluckly for some other
    workloads but experimentally it seems to work better overall for me at least.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

6	11	lib/bb/cooker.py

commit b2d39fc37fcf3c81a562ec1ef4f8b4c1a493fc57
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2018-12-28 10:23:05 +0000

    cooker: Remove Feeder() since its no longer needed with moderm multiprocessing
    
    There used to be many bugs in multiprocessing and we implemented our own
    feeder process to avoid them. Now that we have python 3.x, these are fixed
    and just using the standard Queue mechanism appears to work fine. We can
    therefore drop the unneeded code and simplify.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

5	37	lib/bb/cooker.py

commit 08c314eac231ac9292c8c95f1c5a6fc2023fe749
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2019-01-07 15:11:39 +0000

    tests.data: Add underscore+numeric in overrides datastore test
    
    Add a test for x86_64 in overrides where is was being incorrectly handled.
    There was a previous fix (3a3be518536acc868c7eeb3c1111ad1b321480b7) but
    this ensures we don't regress.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

9	0	lib/bb/tests/data.py

commit 1bb2ad0b44b94ee04870bf3f7dac4e663bed6e4d
Author: Joshua Watt <jpewhacker@gmail.com>
Date:   2019-01-04 10:20:14 -0600

    bitbake: hashserv: Add hash equivalence reference server
    
    Implements a reference implementation of the hash equivalence server.
    This server has minimal dependencies (and no dependencies outside of the
    standard Python library), and implements the minimum required to be a
    conforming hash equivalence server.
    
    [YOCTO #13030]
    
    Signed-off-by: Joshua Watt <JPEWhacker@gmail.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

67	0	bin/bitbake-hashserv
2	0	bin/bitbake-selftest
152	0	lib/hashserv/__init__.py
141	0	lib/hashserv/tests.py

commit 93cd15644f9d12b38abea276fee7b5bade0276df
Author: Joshua Watt <jpewhacker@gmail.com>
Date:   2019-01-03 10:36:11 -0600

    bitbake: persist_data: Fix Locking Protocol Error
    
    Under heavy load with process delays, sqlite can issues a "locking
    protocol" error (SQLITE_PROTOCOL). Unfortunately, it is impossible to
    distinguish between actual locking protocol errors and this race
    condition, so they best that can be done is to retry the operation when
    the error is detected.
    
    [YOCTO #13108]
    
    Signed-off-by: Joshua Watt <JPEWhacker@gmail.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/persist_data.py

commit 9a529bb2658a4046dafbf32e1eb503d84e64e947
Author: Joshua Watt <jpewhacker@gmail.com>
Date:   2018-12-18 21:10:30 -0600

    runqueue: Pass unique hash to hash validate
    
    If the unique hash is being used to track task dependencies, the hash
    validation function needs to know about it in order to properly validate
    the hash.
    
    [YOCTO #13030]
    
    Signed-off-by: Joshua Watt <JPEWhacker@gmail.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

30	11	lib/bb/runqueue.py

commit aab80b099f6f259e4b57cba2c26dd385d07c5947
Author: Joshua Watt <jpewhacker@gmail.com>
Date:   2018-12-18 21:10:29 -0600

    runqueue: Pass unique hash to task
    
    The unique hash is now passed to the task in the BB_UNIHASH variable
    
    [YOCTO #13030]
    
    Signed-off-by: Joshua Watt <JPEWhacker@gmail.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

4	3	bin/bitbake-worker
6	4	lib/bb/runqueue.py

commit 1ecc47f0831b35c8c92b37a81cef4e43ff9f67b2
Author: Joshua Watt <jpewhacker@gmail.com>
Date:   2018-12-18 21:10:28 -0600

    runqueue: Track task unique hash
    
    Requests the task unique hash from siggen and tracks it
    
    [YOCTO #13030]
    
    Signed-off-by: Joshua Watt <JPEWhacker@gmail.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

17	8	lib/bb/runqueue.py

commit d0065b34cea81fcadff14b0383779e9559d94508
Author: Joshua Watt <jpewhacker@gmail.com>
Date:   2018-12-18 21:10:27 -0600

    siggen: Split out task unique hash
    
    Abstracts the function to get the unique hash for a task. This hash is
    used as in place of the taskhash for the purpose of determine how other
    tasks depend on this one. Unless overridden, the taskhash is the same as
    the unique hash, preserving the original behavior.
    
    [YOCTO #13030]
    
    Signed-off-by: Joshua Watt <JPEWhacker@gmail.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

5	2	lib/bb/siggen.py

commit 8a6bc7584ad61b4de98af92a86066602006262f9
Author: Alejandro Enedino Hernandez Samaniego <alejandro.enedino.hernandez-samaniego@xilinx.com>
Date:   2018-12-28 12:47:46 -0800

    cooker: fix indirect multiconfig dependencies
    
    When an indirect multiconfig dependency exists, such as:
    
    A depends on B, B has a multiconfig dependency to C,and our build
    target is A, the multiconfig dependency to C is not processed on
    time, hence no providers are added for it, causing an exception in
    the runqueue because the dependency does exist in it.
    
    Call add_unresolved() for all available multiconfigs before processing
    providers for multiconfig dependencies, detecting mcdepends on time so
    providers for them can be added correctly.
    
    Signed-off-by: Alejandro Enedino Hernandez Samaniego <alejandr@xilinx.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

31	20	lib/bb/cooker.py

commit 353f0f3c77c3cdd75c1be2a565234a5e53dba3ef
Author: Peter Kjellerstedt <peter.kjellerstedt@axis.com>
Date:   2018-12-28 18:30:40 +0100

    bitbake-diffsigs: Support recursive deps with signature files
    
    Follow dependent hash changes recursively also when specifying two
    signature files explicitly. Previously this was only done when using the
    --task option.
    
    Signed-off-by: Peter Kjellerstedt <peter.kjellerstedt@axis.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	1	bin/bitbake-diffsigs

commit 3635b829e4eb940ada2b52bfb5b5e5be93a3b0aa
Author: Peter Kjellerstedt <peter.kjellerstedt@axis.com>
Date:   2018-12-28 18:30:39 +0100

    bitbake-diffsigs: Merge with bitbake-dumpsig
    
    The functionalities of bitbake-diffsigs and bitbake-dumpsig are so
    similar that they can be merged into one. Add an option --dump to make
    bitbake-diffsigs dump the last signature data instead of comparing it.
    Keep bitbake-dumpsig as a symbolic link to bitbake-diffsigs. When it is
    called as bitbake-dumpsig, it behaves as if --dump was specified.
    
    Also make -D the short option for --debug again (the way it used to be,
    and still was for bitbake-dumpsig), so that -d can be used as the short
    option for --dump.
    
    Signed-off-by: Peter Kjellerstedt <peter.kjellerstedt@axis.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

81	58	bin/bitbake-diffsigs
1	94	bin/bitbake-dumpsig

commit fb6de2057aae3fbdf37f007d2e47794b332020e1
Author: Scott Rifenbark <srifenbark@gmail.com>
Date:   2018-12-26 16:22:32 -0800

    bitbake-user-manual: Created unique tags for glossary variables.
    
    Fixes [YOCTO #12399]
    
    The bug was to get the BitBake User Manual into the YP Mega-manual.
    All the changes here create unique tags used with variables in the
    BitBake Manual.  Prior to the fix, tags were identical between like
    variables in the YP reference manual and the BitBake User Manual.
    The reason for this is because when I created the BitBake manual's
    glossary, it was a cut-and-paste operation to get the bulk of
    the work started.  At the time, the BitBake User Manual was not
    a part of the Mega-manual.  Once we decided to include the
    BitBake User Manual as part of the Mega-Manual, building the
    mega-manual produced warnings for all these duplicate links.
    
    To fix, I have updated the variable tags in the BitBake User
    Manual to use the following form:
    
       'var-bb-<variable_name>'
    
    The tags used in the YP ref-manual follow this form (original):
    
       'var-<variable_name>'
    
    Signed-off-by: Scott Rifenbark <srifenbark@gmail.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

39	39	doc/bitbake-user-manual/bitbake-user-manual-execution.xml
24	24	doc/bitbake-user-manual/bitbake-user-manual-fetching.xml
14	14	doc/bitbake-user-manual/bitbake-user-manual-hello.xml
1	1	doc/bitbake-user-manual/bitbake-user-manual-intro.xml
39	39	doc/bitbake-user-manual/bitbake-user-manual-metadata.xml
211	211	doc/bitbake-user-manual/bitbake-user-manual-ref-variables.xml

commit 02845a561b38658ac3edf5cc9c34625ed860d34f
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2018-12-24 16:34:32 +0000

    process: Rewrite multiple connection handling
    
    If the bitbake server recieved multiple connections, it currently closes
    ones it can't handle (while its dealing with another). This is rather
    antisocial behaviour which causes clients to quickly run through their
    retries and abort.
    
    Instead, queue any other connections until the current one is closed. This
    way the client can decide when it wants to stop waiting for the server. If the
    client is gone by the time we handle it, we handle that gracefully.
    
    This also fixes a number of bugs in the connection handling where connections
    which did drop early were badly handled causing tracebacks in the logs.
    
    Also, handle queue incomming connections in a loop to ensure that the main
    client handling doesn't starve that piece of the system.
    
    This code was stress tested by running 50 connection attempts in parallel at
    once, ensuring the code correctly handled them.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

34	22	lib/bb/server/process.py

commit d5b0a9a302ac0eafa4f797ac15ea77db87e82b3c
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2018-12-24 16:32:18 +0000

    process: Handle EWOULDBLOCK in socket connect
    
    Now that we set a timeout for the socket, it can return EWOULDBLOCK
    if a signal or other event happens to wake up even if we don't timeout.
    
    If this happens, retry the connection, else we simply see it quickly
    loop through the retries and abort the connection in a very short
    interval.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

8	1	lib/bb/server/process.py

commit 0774e6e03d27adb7aca6fa9c47ab6ad426c937de
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2018-12-24 16:30:01 +0000

    main: When retrying the connection, show the attempt number
    
    The current bitbake output makes it hard to know which retry is being
    attempted. Add this information to the output to make it clearer.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	2	lib/bb/main.py

commit 8a1f2fcf35d61d83bbafa8fa3ae215fd5f51728b
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2018-12-24 16:27:44 +0000

    process.py: Set socket timeout to 10 seconds
    
    The current value of 2 seconds has shown to be short in
    wider testing.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/server/process.py

commit 96a4155049e834af17069d981cc2215e50d18c1a
Author: Joshua Watt <jpewhacker@gmail.com>
Date:   2018-12-18 21:10:26 -0600

    tests/persist_data: Add tests
    
    Adds a test suite for testing the persistent data cache
    
    [YOCTO #13030]
    
    Signed-off-by: Joshua Watt <JPEWhacker@gmail.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	0	bin/bitbake-selftest
142	0	lib/bb/tests/persist_data.py

commit f02114cb70e8f6f1d32e19c02b758fe0aadecd19
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2018-12-14 17:49:16 +0000

    server/process: Ensure socket has a timeout set
    
    We're seeing hangs in oe-selftest where server startup and shutdown are
    racing. The assumption was a connect would timeout however no timeout is
    set which can leave processes hanging. Set a short timeout for
    the connection to avoid this.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	0	lib/bb/server/process.py

commit 5eaf9e7b26f09f5f106e1c3c6976d517b289450a
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2018-12-14 13:14:03 +0000

    utils: Add aarch64 support to ioprio_set
    
    With aarch64 hosts coming into use, set the syscall number to
    avoid ioprio warnings on that platform.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	0	lib/bb/utils.py

commit 3a3be518536acc868c7eeb3c1111ad1b321480b7
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2018-12-14 11:02:59 +0000

    data_smart: Allow numeric characters in overrides
    
    We're seeing problems due to the way x86-64 is handled (or not handled)
    as an override. Relax the containts on overrides from being lowercase
    to being lowercase or numeric. This fixes problem where MACHINE=qemux86
    would work but MACHINE=qemux86-64 would fail the same tests.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	1	lib/bb/data_smart.py

commit 8667605d016e82add95638fcb15c2bbc1b489ecc
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2018-12-14 11:02:33 +0000

    data_smart: Add missing regexp markup
    
    Fix some further python3 warnings about unescaped regexs.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	2	lib/bb/data_smart.py

commit 91e308992d676ea541b891261e21b840606fc1c4
Author: Yong, Jonathan <jonathan.yong@intel.com>
Date:   2018-12-10 10:46:03 -0800

    bitbake-user-manual: Added "usehead" parameter.
    
    Signed-off-by: Scott Rifenbark <srifenbark@gmail.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

8	0	doc/bitbake-user-manual/bitbake-user-manual-fetching.xml

commit 44790597951638e32eb1672de2e40bd5a603326b
Author: Robert Yang <liezhi.yang@windriver.com>
Date:   2018-12-04 10:06:03 +0800

    bitbake: pysh: Improve error handling for shell code
    
    The p_error() is used for printing errors when parse shell code, but it can't
    the EOF error correctly
    
    - Add the following lines to quilt.inc
      do_configure_prepend () {
          find ${s} -name "*.in" -exec sed -i -e "1s,^#\!.*@perl@ -w$,#\! @perl@\nuse warnings;," {} \;
          if [ hello ]; then
      }
    
    - Before the patch:
      $ rm -fr cache/ tmp/cache/; bitbake -p
      [snip]
      WARNING: /path/to/quilt/quilt-native_0.65.bb: Error during finalise of /path/to/quilt/quilt-native_0.65.bb
      [snip]
      bb.pysh.sherrors.ShellSyntaxError: None
      followed by:
    
      We can see that this isn't easy to debug, let p_error() check wheter it is EOF
      and print appropriate errors can improve the error message. And don't let
      codeparser.py except pyshlex.NeedMore (in fact, it never worked since p_error()
      only raise ShellSyntaxError), but make it print the last 5 lines which might be
      useful for debuging.
    
    - After the patch
      $ rm -fr cache/ tmp/cache/; bitbake -p
      [snip]
      ERROR: /path/to/quilt/quilt_0.65.bb: Error during parse shell code, the last 5 lines are:
          find /path/to/quilt/0.65-r0/quilt-0.65 -name "*.in" -exec sed -i -e "1s,^#\!.*@PERL@ -w$,#\! @PERL@\nuse warnings;," {} \;
          if [ hello ]; then
          autotools_do_configure
          sed -e 's,^COMPAT_SYMLINKS.*:=.*,COMPAT_SYMLINKS    :=,' -i /path/to/quilt/0.65-r0/quilt-0.65/Makefile
      [snip]
        File "/path/to/bb/pysh/pyshyacc.py", line 649, in p_error(p=None):
                   w('Unexpected EOF')
          >    raise sherrors.ShellSyntaxError(''.join(msg))
    
      bb.pysh.sherrors.ShellSyntaxError: Unexpected EOF
    
    Signed-off-by: Robert Yang <liezhi.yang@windriver.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	2	lib/bb/codeparser.py
10	7	lib/bb/pysh/pyshyacc.py

commit 118e9d8894e64d102543562314b318676006e710
Author: Robert Yang <liezhi.yang@windriver.com>
Date:   2018-12-04 10:06:02 +0800

    pysh/pyshlex.py: Set is not importable
    
    >>> from Set import Set
    Traceback (most recent call last):
      File "<stdin>", line 1, in <module>
    ImportError: No module named 'Set'
    
    So remove related code.
    
    Signed-off-by: Robert Yang <liezhi.yang@windriver.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

0	5	lib/bb/pysh/pyshlex.py

commit abee2ff5ee71bf8c3221cd9d3cd4243ebb4ca273
Author: Robert Yang <liezhi.yang@windriver.com>
Date:   2018-12-04 10:06:01 +0800

    pysh/sherrors.py: Remove unused classes
    
    The only two that we need are ShellSyntaxError and ShellError, others are not
    used, so remove them.
    
    Signed-off-by: Robert Yang <liezhi.yang@windriver.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

0	26	lib/bb/pysh/sherrors.py

commit 9cc4f12d2aef366a593c7977d3818a3002b1d8bf
Author: Robert Yang <liezhi.yang@windriver.com>
Date:   2018-12-04 10:06:00 +0800

    pysh: Remove unused modules
    
    We don't use these modules in bitbake, so remove them.
    
    And pysh's author declared that pysh is no longer maintained:
    http://pysh.sourceforge.net/
    
    Signed-off-by: Robert Yang <liezhi.yang@windriver.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

0	710	lib/bb/pysh/builtin.py
0	1367	lib/bb/pysh/interp.py
0	116	lib/bb/pysh/lsprof.py
0	167	lib/bb/pysh/pysh.py
0	77	lib/bb/pysh/subprocess_fix.py

commit 5a2a95b0396e39662968690b3065d2f88167a71c
Author: Joshua Watt <jpewhacker@gmail.com>
Date:   2018-12-07 15:59:28 -0600

    bitbake: persist_data: Retry database setup
    
    The configuration of the sqlite database can timeout due to locking
    under heavy load and should be subject to the same retry logic as the
    other statements.
    
    [YOCTO #13069]
    
    Signed-off-by: Joshua Watt <JPEWhacker@gmail.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

48	35	lib/bb/persist_data.py

commit 47f359f9b017f8d99d0bb2161ac0dcefcbd915de
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2018-12-07 15:39:15 +0000

    utils: Use utils.remove() within prunedir()
    
    We've already tweaked remove() for speed and not to error if it
    races for deletion. Therefore use this for prunedir() which was
    starting to show the same bug reports.
    
    [YOCTO #13003]
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	9	lib/bb/utils.py

commit 03aae96a8859409b1ce7e3d5c1197371fa96bd14
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2018-12-07 15:33:34 +0000

    fetch2: Fix os.errno references
    
    os.errno used to happen to work but is invalid. Correct to use errno.
    
    [YOCTO #13068]
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	2	lib/bb/fetch2/__init__.py

commit 704f27dc28d50a6dc02c8b64274ee4ecb3058c4a
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2018-12-07 13:08:38 +0000

    fetch2/wget: Fix typo in exception name
    
    This could clearly never have worked since the python3 migration
    but as its in an error path, it doesn't get tested/used much.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/fetch2/wget.py

commit 8d1fc115b8a176009f1f3a8ce840b422e7e0b45e
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2018-12-07 12:28:32 +0000

    cooker: Add some timing debug messages to the server startup
    
    We're seeing slow startup in bitbake, add some timeing debug messages so
    the logs are more useful for debugging when its slow.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

19	0	lib/bb/cooker.py

commit 7a4e105093c3080c1087cd06abc2883852a23e28
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2018-12-02 19:18:14 +0000

    server/process: Increase server startup time delay
    
    On loaded production systems we've seen bitbake server take over
    40s to start up. Increase the timeout to 90s which tries to avoid
    failures in selftests.
    
    The delays come from setting up the inotify watches (31s) so can't
    really be avoided.
    
    After 5s delay we now warn the user we're waiting for 90s so the
    interactive exeperience shouldn't be much changed and its very
    unlikely the user would see that anyway.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

4	1	lib/bb/server/process.py

commit 83ece2c6f4b000e906fec9148f25bd1dff66cfb0
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2018-12-07 00:05:49 +0000

    cache: Cleanup deprecated function usage
    
    Remove a deprecated warning and stop using our own deprecated API!
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/cache.py

commit ce241534d19b2f1c51dbdb3b92419676d234e464
Author: Joshua Watt <jpewhacker@gmail.com>
Date:   2018-12-03 21:42:37 -0600

    siggen: Split out stampfile hash fetch
    
    The mechanism used to get the hash for a stamp file is split out so that
    it can be overridden by derived classes
    
    [YOCTO #13030]
    
    Signed-off-by: Joshua Watt <JPEWhacker@gmail.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

9	4	lib/bb/siggen.py

commit 1e86d8c1bec7ea5d016a5ad2097f999362e29033
Author: Joshua Watt <jpewhacker@gmail.com>
Date:   2018-12-03 21:42:36 -0600

    bitbake-worker: Pass taskhash as runtask parameter
    
    Pass the task hash as a parameter to the 'runtask' message instead of
    passing the entire dictionary of hashes when the worker is setup. This
    is possible less efficient, but prevents the worker taskhashes from
    being out of sync with the runqueue in the event that the taskhashes in
    the runqueue change.
    
    [YOCTO #13030]
    
    Signed-off-by: Joshua Watt <JPEWhacker@gmail.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

4	4	bin/bitbake-worker
6	9	lib/bb/runqueue.py

commit 71b427bf01374973a971c10cb64024c8ef2a11eb
Author: Joshua Watt <jpewhacker@gmail.com>
Date:   2018-12-03 21:42:33 -0600

    persist_data: Disable enable_shared_cache
    
    Turns off the shared cache. It isn't a significant factor in performance
    (now that WAL is enabled), and is a really bad idea to have enabled in
    processes that fork() (as bitbake it prone to do).
    
    [YOCTO #13030]
    
    Signed-off-by: Joshua Watt <JPEWhacker@gmail.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

0	6	lib/bb/persist_data.py

commit 79100fa67539f9654af9bf6d3e6842eb5c12e989
Author: Joshua Watt <jpewhacker@gmail.com>
Date:   2018-12-03 21:42:32 -0600

    persist_data: Enable Write Ahead Log
    
    Enabling the write ahead log improves database reliability, speeds up
    writes (since they mostly happen sequentially), and speeds up readers
    (since they are no longer blocked by most write operations). The
    persistent database is very read heavy, so the auto-checkpoint size is
    reduced from the default (usually 1000) to 100 so that reads remain
    fast.
    
    [YOCTO #13030]
    
    Signed-off-by: Joshua Watt <JPEWhacker@gmail.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

5	0	lib/bb/persist_data.py

commit f5ba7775cfcb90401522d977cc66fe0f5aeb7a66
Author: Joshua Watt <jpewhacker@gmail.com>
Date:   2018-12-03 21:42:31 -0600

    persist_data: Add key constraints
    
    Constructs the "key" column in the persistent database as a non-NULL
    primary key. This significantly speeds up lookup operations in large
    databases.
    
    [YOCTO #13030]
    
    Signed-off-by: Joshua Watt <JPEWhacker@gmail.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/persist_data.py

commit e8b9d3f534ef404780be23b601d5a4bb9cec928a
Author: Joshua Watt <jpewhacker@gmail.com>
Date:   2018-12-03 21:42:30 -0600

    persist_data: Fix leaking cursors causing deadlock
    
    The original implementation of persistent data executed all SQL
    statements via sqlite3.Connection.execute(). Behind the scenes, this
    function created a sqlite3 Cursor object, executed the statement, then
    returned the cursor. However, the implementation did not account for
    this and failed to close the cursor object when it was done. The cursor
    would eventually be closed when the garbage collector got around to
    destroying it. However, sqlite has a limit on the number of cursors that
    can exist at any given time, and once this limit is reached it will
    block a query to wait for a cursor to be destroyed. Under heavy database
    queries, this can result in Python deadlocking with itself, since the
    SQL query will block waiting for a free cursor, but Python can no longer
    run garbage collection (as it is blocked) to free one.
    
    This restructures the SQLTable class to use two decorators to aid in
    performing actions correctly. The first decorator (@retry) wraps a
    member function in the retry logic that automatically restarts the
    function in the event that the database is locked.
    
    The second decorator (@transaction) wraps the function so that it occurs
    in a database transaction, which will automatically COMMIT the changes
    on success and ROLLBACK on failure. This function additionally creates
    an explicit cursor, passes it to the wrapped function, and cleans it up
    when the function is finished.
    
    Note that it is still possible to leak cursors when iterating. This is
    much less frequent, but can still be mitigated by wrapping the iteration
    in a `with` statement:
    
     with db.iteritems() as it:
         for (k, v) in it:
             ...
    
    As a side effect, since most statements are wrapped in a transaction,
    setting the isolation_level when the connection is created is no longer
    necessary.
    
    [YOCTO #13030]
    
    Signed-off-by: Joshua Watt <JPEWhacker@gmail.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

135	53	lib/bb/persist_data.py

commit b5686fc07d06e1f0a55161b5ebcec6552d74ceff
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2018-12-04 12:54:58 +0000

    main: Don't use print() directly, use logger
    
    Avoid failures like:
    
    2018-12-04 03:30:56,033 - oe-selftest - INFO - ======================================================================
    2018-12-04 03:30:56,033 - oe-selftest - INFO - FAIL: pkgdata.OePkgdataUtilTests.test_find_path (subunit.RemotedTestCase)
    2018-12-04 03:30:56,033 - oe-selftest - INFO - ----------------------------------------------------------------------
    2018-12-04 03:30:56,033 - oe-selftest - INFO - testtools.testresult.real._StringException: Traceback (most recent call last):
    [...]
    AssertionError: 'Previous bitbake instance shutting down?,[77 chars]xist' != 'ERROR: Unable to find any package produci[14 chars]xist'
    - Previous bitbake instance shutting down?, waiting to retry...
      ERROR: Unable to find any package producing path /not/exist
    
    We need to use the logger so output is correctly handled in such cases.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/main.py

commit 7c0b84cac892744225fa0462f918ea9a79b356cb
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2018-12-01 17:40:49 +0000

    process: Flush key output to logs
    
    Small tweak to ensure these items are printed into the log since there
    is other logging code which looks for the header and this makes it clearer
    the server did start but is slow somewhere in startup.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

4	0	lib/bb/server/process.py

commit 767c9596d129d21ddf5d2e00c55f0a0525c641dc
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2018-11-29 16:51:39 +0000

    server/process: Handle short reads
    
    Its possible the read may return a smaller number of characters. Remove
    the possibility by using a single character to signal the server is ready.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	3	lib/bb/server/process.py

commit a0b9cfaf2d03fd047a79d32e668001718d02c4bf
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2018-11-29 16:51:18 +0000

    server/process: Make lockfile handling clearer
    
    This simplifies the code and makes it easier to read but has the
    same functionality.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

6	4	lib/bb/server/process.py

commit 0cdc5b81fc1f5e5281a525a657e420ebc3bb9e90
Author: Robert Yang <liezhi.yang@windriver.com>
Date:   2018-11-23 19:13:44 +0800

    bitbake: BBHandler: Check tab indentation for python code
    
    The previous check was in data.py which only can check code like "python
    funcname()" in the dependency chain, but there are 3 kinds of python functions:
      - python()
      - def py_funcname()
      - python funcname()
    
    Add the checking to BBHandler to check and warn for all of them.
    
    The warning looks like:
    WARNING: /path/to/recipes-core/busybox/busybox_1.29.2.bb: python should use 4 spaces indentation, but found tabs in busybox.inc, line 75
    
    Signed-off-by: Robert Yang <liezhi.yang@windriver.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

0	2	lib/bb/data.py
11	0	lib/bb/parse/parse_py/BBHandler.py

commit 3f1f183a17bf3580da8a4ffd6dab30b62c2654a8
Author: Ulf Magnusson <Ulf.Magnusson@bmw.de>
Date:   2018-11-29 14:21:34 +0200

    fetch2/svn: Fix SVN repository concurrent update race
    
    The ${DL_DIR}/svn directory is used by BitBake to keep checked-out SVN
    repositories from which tarballs are generated. These repositories were
    protected from concurrent update with a lock on the tarballs. However,
    the tarballs are specific to the SRCREV and module checked out (many
    tarballs can come from the same repository), meaning a repository could
    be modified concurrently if two recipes checked out two different
    SRCREVs or modules from it in parallel. This caused errors like the
    following:
    
    ERROR: Fetcher failure: Fetch command failed with exit code 1, output:
    svn: E155004: Run 'svn cleanup' to remove locks (type 'svn help cleanup' for details)
    svn: E155004: Working copy '/home/foo/downloads/svn/repo/trunk' locked.
    svn: E155004: '/home/foo/downloads/svn/repo/trunk' is already locked.
    
    Fix it by adding a per-repository lock that's independent of the module
    and SRCREV.
    
    Signed-off-by: Ulf Magnusson <Ulf.Magnusson@bmw.de>
    Signed-off-by: Michael Ho <Michael.Ho@bmw.de>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

36	28	lib/bb/fetch2/svn.py

commit 5ba83ee25c1c9cba349edb68a22476b1d5fca6ce
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2018-11-29 12:10:28 +0000

    runqueue: Ensure disk monitor is started when no setscene tasks are run
    
    Currently if there are no setscene tasks, the disk monitor isn't started.
    
    Move the startup code to somewhere to ensure it always is started. This
    issue would partially explain occasional selftest failures.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

6	5	lib/bb/runqueue.py

commit 6998fd816ceb0034c852a8fb994901fdf1975cfd
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2018-11-28 16:30:12 +0000

    server/process: Fix ConnectionRefusedError tracebacks
    
    Improve connetion refused error handling:
    
    NOTE: Retrying server connection...
    NOTE: Reconnecting to bitbake server...
    NOTE: Retrying server connection... (Traceback (most recent call last):
      File "/home/pokybuild/yocto-worker/oe-selftest-opensuse/build/bitbake/lib/bb/server/process.py", line 471, in connectProcessServer
        sock.connect(os.path.basename(sockname))
    ConnectionRefusedError: [Errno 111] Connection refused
    
    During handling of the above exception, another exception occurred:
    
    Traceback (most recent call last):
      File "/home/pokybuild/yocto-worker/oe-selftest-opensuse/build/bitbake/lib/bb/main.py", line 464, in setup_bitbake
        server_connection = bb.server.process.connectProcessServer(sockname, featureset)
      File "/home/pokybuild/yocto-worker/oe-selftest-opensuse/build/bitbake/lib/bb/server/process.py", line 502, in connectProcessServer
        os.close(i)
    TypeError: an integer is required (got type NoneType)
    )
    WARNING: /home/pokybuild/yocto-worker/oe-selftest-opensuse/build/bitbake/lib/bb/main.py:481: ResourceWarning: unclosed <socket.socket fd=14, family=AddressFamily.AF_UNIX, type=SocketKind.SOCK_STREAM, proto=0>
      logger.info("Retrying server connection... (%s)" % traceback.format_exc())
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	1	lib/bb/server/process.py

commit 2f0b6cea2be7e89ef01181b10899b3e7f11e8f20
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2018-11-27 11:33:22 +0000

    fetch2: Avoid warning about incorrect character escaping in regex
    
    Fixes:
    
    lib/bb/fetch2/__init__.py:259: DeprecationWarning: invalid escape sequence \w
      re.compile("^\w+:(?!//)").match(uri):
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/fetch2/__init__.py

commit b8538c2088c199157404712a60a6740c926ce312
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2018-11-27 11:32:26 +0000

    server/process: Show the last 60 log lines, not the last 10
    
    10 log lines may not capture any full traceback, increase the number of
    lines to 60 which covers most tracebacks.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	2	lib/bb/server/process.py

commit c8c80b404e38fe96f65d6314cd95f4069319f3d6
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2018-11-27 11:31:21 +0000

    server/process: Show last 60 lines of the log if the server didn't start
    
    We're seeing issues where the server doesn't start with no logs as to why. Allow
    the server to print the last 60 log lines just in case this shows us something useful
    about what is failing.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

6	0	lib/bb/server/process.py

commit 7414b3537e8adfb41a9581d70bf8296c4f7d38c0
Author: Ross Burton <ross.burton@intel.com>
Date:   2018-11-23 15:01:22 +0000

    fetch: don't use shell=True when listing ar files
    
    Signed-off-by: Ross Burton <ross.burton@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/fetch2/__init__.py

commit cb4aab7406dc8aefb646b37330b722cf9060ad73
Author: Ross Burton <ross.burton@intel.com>
Date:   2018-11-23 15:01:21 +0000

    layerindex: don't use shell=True when cloning
    
    Signed-off-by: Ross Burton <ross.burton@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bblayers/layerindex.py

commit 19dee675bb9ad012d28e1e57a888931355a831cb
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2018-11-22 11:59:58 +0000

    tests/fetch: Update after recent gitsm message changes
    
    Also use assetIn instead of assertTrue which aids debugging failures.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	3	lib/bb/tests/fetch.py

commit bdbb558342ebb4e64384c9838d2485d9299d91a6
Author: Christopher Larson <chris_larson@mentor.com>
Date:   2018-11-21 23:14:07 +0500

    fetch/git: fix AttributeError in shallow extraction logic
    
    This code checks to see if shallow is either disabled or the tarball is
    missing, but the else block tries to print the tarball filename, and
    this attribute doesn't exist at all when shallow is disabled. Handle the
    two cases separately to give sane errors for both cases without the
    exception:
    
        Exception: AttributeError: 'FetchData' object has no attribute 'fullshallow'
    
    Signed-off-by: Christopher Larson <chris_larson@mentor.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

8	5	lib/bb/fetch2/git.py

commit f2106a3a767542359fdde238abcf5fe35ab3a144
Author: Alejandro Enedino Hernandez Samaniego <alejandro.enedino.hernandez-samaniego@xilinx.com>
Date:   2018-11-20 10:22:51 -0800

    cooker: Fix multiconfig dependencies
    
    When multiconfig is enabled the cooker adds providers
    for all the targets to be built on all the multiconfig
    variables that were set, regardless if there is a dependency
    to it or not.
    
    This causes an issue when a certain target is incompatible
    with one or more of the multiconfigs, e.g. the target is not
    in COMPATIBLE_MACHINE for one of the MACHINEs being built,
    causing the cooker to error out since no providers can be
    found for that certain target on that multiconfig.
    
    This patch modifies the behavior to only look for PROVIDERS
    for a target on the multiconfig that was selected to be built,
    PROVIDERS are then looked for in other multiconfigs only when
    there is a defined dependency to them.
    
    [YOCTO #12985]
    
    Signed-off-by: Alejandro Enedino Hernandez Samaniego <alejandr@xilinx.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	8	lib/bb/cooker.py

commit f76075aa1a5159fd4d62949cb588346888b9fe60
Author: Parthiban Nallathambi <pn@denx.de>
Date:   2018-11-16 19:07:12 +0100

    fetch2/npm.py: Allow shrinkwrap resolved relative URL which startswith 'http' (e.g http-proxy)
    
    shrinkwrap resolved relative URL can start with http. For example,
    "resolved: http-proxy/-/http-proxy-${PV}.tgz" is still relative URL
    to npm registry, but starts with http.
    
    Current if statement compares the startswith 'resolved' to 'http',
    which makes impossible to use npm download. Condtional comparison
    now strictly checks for "http://" and "https://"
    
    Signed-off-by: Parthiban Nallathambi <pn@denx.de>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/fetch2/npm.py

commit 79e62eef1c93f742bf71e9f25db57fdd2ffedd02
Author: Robert Yang <liezhi.yang@windriver.com>
Date:   2018-11-14 17:46:41 +0800

    BBHandler: Fix __python_func_regexp__ for comment lines
    
    Fixed:
    - Add a comment in base.bbclass:
      def oe_import(d):
          import sys
      # Comment
          bbpath = d.getVar("BBPATH").split(":")
      [snip]
    
      Note, '# Comment' is started with '#', it is legal in python's syntax
      (though maybe not a good style), but bitbake reported errors:
    
      $ bitbake -p
      ERROR: ParseError at /path/to/base.bbclass:20: unparsed line: '    bbpath = d.getVar("BBPATH").split(":")'
    
      This error report would mislead people, the real problem is that '# Comment'
      is not supported, but it reports the next line, this may make it hard to debug
      the code are complicated.
    
    We can make __python_func_regexp__ handle '^#' to fix the problem, since it
    already can handle blank line "^$" in a python function, so it would be pretty
    safe to handle "^#" as well.
    
    Signed-off-by: Robert Yang <liezhi.yang@windriver.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/parse/parse_py/BBHandler.py

commit 4adc582d2df7fdb9e51c4ebb5e66bbd21165b4dc
Author: Robert Yang <liezhi.yang@windriver.com>
Date:   2018-11-14 17:46:40 +0800

    server/process: print a message when no logfile
    
    [YOCTO #12898]
    
    There might be no bitbake-cookerdaemon.log, print a message for debugging.
    
    Signed-off-by: Robert Yang <liezhi.yang@windriver.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

4	0	lib/bb/server/process.py

commit 540b546be55e0f5f5d91695956da3a7732b2f90a
Author: Robert Yang <liezhi.yang@windriver.com>
Date:   2018-11-14 17:46:39 +0800

    data_smart: fix filename for compile()
    
    Fixed:
    Add the following two lines to conf/local.conf:
    FOO = "${@foo = 5}"
    HOSTTOOLS += "${FOO}"
    
    * Before the patch
      $ bitbake -p
      Check the first lines of bitbake bitbake-cookerdaemon.log
      [snip]
      File "/buildarea1/lyang1/poky/bitbake/lib/bb/data_smart.py", line 125, in python_sub
        codeobj = compile(code.strip(), self.varname or "<expansion>", "eval")
      File "FOO", line 1
      [snip]
    
      There isn't a file named 'FOO', but a variable name.
    
    * After the patch
      $ bitbake -p
      [snip]
      File "/buildarea1/lyang1/poky/bitbake/lib/bb/data_smart.py", line 129, in python_sub
        codeobj = compile(code.strip(), varname, "eval")
      File "Var <FOO>", line 1
        foo = 5
    
    Signed-off-by: Robert Yang <liezhi.yang@windriver.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

5	1	lib/bb/data_smart.py

commit c0fe524c1aeccb24ddd2e1f7bf235c00fdbf79a7
Author: Robert Yang <liezhi.yang@windriver.com>
Date:   2018-11-14 17:46:38 +0800

    data_smart: Add original traceback to ExpansionError
    
    This can make it print clearer errors, for exmaple:
    
    Add Runtime_error to 'def oe_import(d)"
    
     16 def oe_import(d):
     17     import sys
     18     Runtime_error
    [snip]
    
    * Before the patch:
      $ bitbake -p
      ERROR: Unable to parse /buildarea1/lyang1/poky/bitbake/lib/bb/data_smart.py
      Traceback (most recent call last):
        File "/buildarea1/lyang1/poky/bitbake/lib/bb/data_smart.py", line 430, in DataSmart.expandWithRefs(s='${@oe_import(d)}', varname='OE_IMPORTED[:=]'):
                       except Exception as exc:
          >                raise ExpansionError(varname, s, exc) from exc
    
      bb.data_smart.ExpansionError: Failure expanding variable OE_IMPORTED[:=], expression was ${@oe_import(d)} which triggered exception NameError: name 'Runtime_error' is not defined
    
      This error message has two problems:
      - "Unable to parse data_smart.py": This isn't the real cause.
      - It pionts to "raise ExpansionError(varname, s, exc) from exc" which isn't clear enough.
    
    * After the patch:
      $ bitbake -p
      ERROR: Unable to parse OE_IMPORTED[:=]
      Traceback (most recent call last):
        File "OE_IMPORTED[:=]", line 1, in <module>
        File "/buildarea1/lyang1/poky/meta/classes/base.bbclass", line 18, in oe_import(d=<bb.data_smart.DataSmart object at 0x7f9257e7a0b8>):
               import sys
          >    Runtime_error
    
      bb.data_smart.ExpansionError: Failure expanding variable OE_IMPORTED[:=], expression was ${@oe_import(d)} which triggered exception NameError: name 'Runtime_error' is not defined
    
    This one is more clearer than before.
    
    Signed-off-by: Robert Yang <liezhi.yang@windriver.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	1	lib/bb/data_smart.py

commit 7466c8765fcc792e5ea3daefda3c5895e782d6c4
Author: Robert Yang <liezhi.yang@windriver.com>
Date:   2018-11-14 17:46:37 +0800

    parse/ast: fix line number for anonymous function
    
    Fixed:
    - Define an error anonymous function in base.bbclass:
      15
      16 python() {
      17     Compile error
      18 }
    
      $ bitbake -p
      ERROR: Error in compiling python function in /buildarea1/lyang1/poky/meta/classes/base.bbclass, line 18:
    
      The code lines resulting in this error were:
           0001:def __anon_18__buildarea1_lyang1_poky_meta_classes_base_bbclass(d):
       *** 0002:    Compile error
           0003:
      SyntaxError: invalid syntax (base.bbclass, line 18)
    
      The lineno should be 17, but it reported 18, this would mislead people a lot
      when there more lines.
    
    - Now fix it to:
      ERROR: Error in compiling python function in /buildarea1/lyang1/poky/meta/classes/base.bbclass, line 17:
    
      The code lines resulting in this error were:
           0001:def __anon_18__buildarea1_lyang1_poky_meta_classes_base_bbclass(d):
       *** 0002:    Compile error
           0003:
      SyntaxError: invalid syntax (base.bbclass, line 17)
    
    This is because the anonymous function is constructed by:
    text = "def %s(d):\n" % (funcname) + text
    
    The len(self.body) doesn't include the "def " line, the length of the function
    should be "len(self.body) + 1", so we need pass "self.lineno - (len(self.body) + 1)"
    which is the same as 'self.lineno - len(self.body) - 1' to
    bb.methodpool.insert_method() as we already had done to named function. Otherwise, the
    lineno is wrong, and would cause other problems such as report which line is
    wrong, but the line is not what we want since it reports incorrect line.
    
    Signed-off-by: Robert Yang <liezhi.yang@windriver.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/parse/ast.py

commit bbb3d87d171da38fd8e9bce011d109fba28a75c0
Author: Robert Yang <liezhi.yang@windriver.com>
Date:   2018-11-14 17:46:36 +0800

    utils: better_compile(): Fix line number when report errors
    
    Fixed:
    - Add an error line in base.bbclass, e.g.:
      15
      16 def oe_import(d):
      17     import sys
      18     Compile error
      19     bbpath = d.getVar("BBPATH").split(":")
      [snip]
    
      Note the "Compile error" line, I added it for reporting errors.
    
      $ bitbake -p
      ERROR: Error in compiling python function in /buildarea1/lyang1/poky/meta/classes/base.bbclass, line 15:
    
      The code lines resulting in this error were:
           0014:    import oe.data
           0015:    for toimport in oe.data.typed_value("OE_IMPORTS", d):
           0016:        imported = __import__(toimport)
           0017:        inject(toimport.split(".", 1)[0], imported)
       *** 0018:
           0019:    return ""
           0020:
      SyntaxError: invalid syntax (base.bbclass, line 18)
    
      There are 2 problems:
      - The "line 15" is incorrect, it is a blank line, not the error line.
      - The "*** 0018" points to incorrect position.
    
      These two problems would mislead people a lot sometimes.
    
    - Now fix it to:
      $ bitbake -p
      ERROR: Error in compiling python function in /buildarea1/lyang1/poky/meta/classes/base.bbclass, line 18:
    
      The code lines resulting in this error were:
           0001:def oe_import(d):
           0002:    import sys
       *** 0003:    Compile error
           0004:    bbpath = d.getVar("BBPATH").split(":")
                    [snip]
      SyntaxError: invalid syntax (base.bbclass, line 18)
    
    Please see comments in the code for more details on how it is fixed.
    
    Signed-off-by: Robert Yang <liezhi.yang@windriver.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

5	2	lib/bb/utils.py

commit f1a2c23520832ee91e85338c1ad8af1fec0d0b19
Author: Peter Kjellerstedt <peter.kjellerstedt@axis.com>
Date:   2018-11-14 02:51:41 +0100

    siggen: Adapt colors used by bitbake-diffsigs to support light themes
    
    The colors specified for use with bitbake-diffsigs were adapted for a
    dark theme, e.g., by setting the background color to black, which made
    it look very bad when used with a light theme.
    
    To make it look good both with a dark or a light theme, it is better
    to drop the background color. It is also better to leave out the color
    altogether for the title and just use bold. Finally, dropping bold for
    the red and green texts indicating removed/added values better matches
    other colorized diff implementations as, e.g., git diff.
    
    Signed-off-by: Peter Kjellerstedt <peter.kjellerstedt@axis.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

4	4	lib/bb/siggen.py

commit bbf3cbae775383265292a778cd522d4e2f69a3a0
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2018-11-13 22:46:44 +0000

    utils: Avoid regex value escape warnings
    
    Avoid warnings such as:
    bitbake/lib/bb/utils.py:72: DeprecationWarning: invalid escape sequence \d
      numeric_regexp = re.compile('^(\d+)(.*)$')
    bitbake/lib/bb/utils.py:1165: DeprecationWarning: invalid escape sequence \(
      var_res[var] = re.compile('^(%s%s)[ \\t]*\([ \\t]*\)[ \\t]*{' % (var[:-2].rstrip(), override_re))
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

5	5	lib/bb/utils.py

commit 3c2cb35588e91fbd7b136e5e2c78eeb77e126c84
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2018-11-13 22:45:48 +0000

    utils: Avoid warnings about deprecated imp module
    
    The imp module is deprecated, port the code over to use importlib.
    
    bitbake/lib/bb/utils.py:30: DeprecationWarning: the imp module is deprecated in favour of importlib; see the module's documentation for alternative uses
      import imp
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

6	8	lib/bb/utils.py

commit ad79fadd855f5c10242ed17e9e0f3eb0274f26d2
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2018-11-09 15:57:50 +0000

    lib/bb/server: Avoid UnboundLocalError traceback
    
    Traceback (most recent call last):
      File "/home/pokybuild/yocto-worker/nightly-oe-selftest/build/bitbake/lib/bb/main.py", line 464, in setup_bitbake
        server_connection = bb.server.process.connectProcessServer(sockname, featureset)
      File "/home/pokybuild/yocto-worker/nightly-oe-selftest/build/bitbake/lib/bb/server/process.py", line 490, in connectProcessServer
        if command_chan_recv:
    UnboundLocalError: local variable 'command_chan_recv' referenced before assignment
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	3	lib/bb/server/process.py

commit afee3f594e1510051a0b18e430e92549caf72fa2
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2018-11-06 11:36:27 +0000

    server/process: Fix unclosed socket warnings upon server connection refused
    
    Extend the server error handling to avoid:
    
    Reconnecting to bitbake server...
    NOTE: Retrying server connection... (Traceback (most recent call last):
      File "/home/pokybuild/yocto-worker/nightly-oe-selftest/build/bitbake/lib/bb/main.py", line 464, in setup_bitbake
        server_connection = bb.server.process.connectProcessServer(sockname, featureset)
      File "/home/pokybuild/yocto-worker/nightly-oe-selftest/build/bitbake/lib/bb/server/process.py", line 457, in connectProcessServer
        sock.connect(os.path.basename(sockname))
    ConnectionRefusedError: [Errno 111] Connection refused
    )
    WARNING: /home/pokybuild/yocto-worker/nightly-oe-selftest/build/bitbake/lib/bb/main.py:481: ResourceWarning: unclosed <socket.socket fd=20, family=AddressFamily.AF_UNIX, type=SocketKind.SOCK_STREAM, proto=0>
      logger.info("Retrying server connection... (%s)" % traceback.format_exc())
    
    NOTE: Starting bitbake server...
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

7	8	lib/bb/server/process.py

commit 8e587386b0b3a0ed11edf71dfbe9fb508f60d0b3
Author: Mike Crowe <mac@mcrowe.com>
Date:   2018-11-05 14:29:05 +0000

    siggen: Correct format argument substitution
    
    Use % operator to ensure that the dependency is substituted into the error
    message correctly.
    
    Signed-off-by: Mike Crowe <mac@mcrowe.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/siggen.py

commit db46fb2755a4b1033ab60051ce511cc9dd7e34fb
Author: Mike Crowe <mac@mcrowe.com>
Date:   2018-11-02 14:32:15 +0000

    fetch: Also export GIT_SSH environment variable
    
    Support users who want to specify a custom ssh to Git using an environment
    variable. (This lets build systems work without requiring users to
    configure Git explicitly.)
    
    Signed-off-by: Mike Crowe <mac@mcrowe.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	0	lib/bb/fetch2/__init__.py

commit 9cc6fe4be797e106899d2448797a4b3af8eace4e
Author: Awais Belal <awais_belal@mentor.com>
Date:   2018-11-02 02:40:15 +0500

    bitbake: toaster: allow OE_ROOT to be provided through environment
    
    Updates for YOCTO #12891 allowed a user to have a directory
    structure different to that of yocto (bitbake isn't inside
    oe-core) whereas the definition of OE_ROOT in the main toaster
    binary still assumes the same while checking for .templateconf
    and hence we see an error on the cmdline in such cases:
    bash: <repo-path>/bitbake/bin/../../.templateconf: No such file or directory
    The change here now allows the user to provide OE_ROOT through
    the environment in such cases and otherwise defaults to the older
    mechanism to fix this issue.
    
    Signed-off-by: Awais Belal <awais_belal@mentor.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	1	bin/toaster

commit 5a7009c204f4d2254e3b2d83ad9319ac23f1cf4d
Author: Mark Hatle <mark.hatle@windriver.com>
Date:   2018-10-31 15:21:44 -0400

    fetch2/gitsm.py: Fix the references when the module and path are different
    
    Git does not require the module and target path to be the same in the
    .gitmodules file.  This incorrect assumption was being made previously
    causing various unpack failures.
    
    An example .gitmodule showing this issue:
    
       [submodule "plugins/WaveShaper/Libs/inih"]
            path = plugins/wolf-shaper/Libs/inih
            url = https://github.com/pdesaulniers/inih.git
    
    The unpack function also needed to work in a loop on the overall
    submodules_queue.  Before it could have missed items that were not in the
    primary repository.
    
    Signed-off-by: Mark Hatle <mark.hatle@windriver.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

34	35	lib/bb/fetch2/gitsm.py

commit fdc1dbf96f153b496de52acd8263366a1ff303ad
Author: Mark Hatle <mark.hatle@windriver.com>
Date:   2018-10-31 15:21:43 -0400

    fetch2/gitsm.py: Disable branch checking on submodules
    
    Submodules by definition refer to a specific commit, not branch.  If we don't
    ignore the branch, then any commits on a submodule on a branch different then
    the original module will trigger a failure that the commit is not on the
    branch.
    
    Signed-off-by: Mark Hatle <mark.hatle@windriver.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/fetch2/gitsm.py

commit 701f76f773a6e77258f307a4f8e2ec1a8552f6f3
Author: Scott Rifenbark <srifenbark@gmail.com>
Date:   2018-10-31 14:35:02 -0700

    bitbake-user-manual: Added hard-spacing to "_remove" example.
    
    Rendering the manual to its HTML form was collapsing the two
    leading and four trailing whitespace characters into single
    whitespace characters.  I inserted multiple "&nbsp;" strings
    to force the spacing to come through.
    
    Signed-off-by: Scott Rifenbark <srifenbark@gmail.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	2	doc/bitbake-user-manual/bitbake-user-manual-metadata.xml

commit 0cfc71d1a342b82781b0ba547421e41f6340902a
Author: Scott Rifenbark <srifenbark@gmail.com>
Date:   2018-10-24 16:11:03 -0700

    bitbake-user-manual: Updates to variable wildcard support.
    
    Fixes [YOCTO #12390]
    
    Applied some fixes to the variable wildcard support documentation
    in the BitBake manual.  Wording changes and changes to make links
    referencing Python syntax go to version 3 rather than version 2.
    
    Signed-off-by: Scott Rifenbark <srifenbark@gmail.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

12	11	doc/bitbake-user-manual/bitbake-user-manual-metadata.xml
12	5	doc/bitbake-user-manual/bitbake-user-manual-ref-variables.xml

commit 0a4377cb1837ede213d9640344f4908de3689d91
Author: Scott Rifenbark <srifenbark@gmail.com>
Date:   2018-10-18 13:15:49 -0700

    bitbake-user-manual: Added wildcarding descriptions
    
    Fixes [YOCTO #12390]
    
    Added specific descriptions for how wildcarding works for a variety
    of variables and files (e.g. append files).
    
    Signed-off-by: Scott Rifenbark <srifenbark@gmail.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

11	2	doc/bitbake-user-manual/bitbake-user-manual-intro.xml
25	0	doc/bitbake-user-manual/bitbake-user-manual-metadata.xml
43	7	doc/bitbake-user-manual/bitbake-user-manual-ref-variables.xml

commit 2820e7aab2203fc6cf7127e433a80b7d13ba75e0
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2018-10-20 14:26:41 +0100

    bitbake: Bump version to 1.40.0
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	bin/bitbake
1	1	lib/bb/__init__.py

commit 8f55010c18057be040f073d8bcb4c5c2c311d809
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2018-10-19 12:24:18 +0100

    data_smart: Fix removal handling interaction issue with overrides
    
    If a variable has a _remove applied to it but that variable is in turn
    'renamed' through OVERRIDES, the removal gets lost with the current code.
    
    TEST = "foo"
    TEST_someval = "bar"
    TEST_someval_remove = "bar"
    OVERRIDES = "someval"
    
    currently gives "bar" for TEST but should give "".
    
    This fixes the code to track the removal and adds a test case to ensure this
    doesn't regress again.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

13	4	lib/bb/data_smart.py
9	0	lib/bb/tests/data.py

commit 5463c16e3619d324aed137f47f93f0997a227d29
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2018-10-17 14:41:48 +0100

    test/data: Add new tests for task checksum changing/not changing
    
    This adds some basic tests for task checksums to ensure that the
    checksums:
    
    * change when variables change
    * change when active _remove operators are present
    * don't change when the _remove operators are not active
    * change when an active contains() expression is present
    * dont' change a contains() expression isn't active
    
    There is a lot of other functionality which should be added to this
    test but its a start.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

48	0	lib/bb/tests/data.py

commit 796a20d24dc18479de1975a37b9e52a5ac75c73f
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2018-10-17 14:40:38 +0100

    data/siggen: Extract task hash generation code into a function
    
    By creating a standalone function, we can add better functional testing
    of this code.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

38	0	lib/bb/data.py
4	33	lib/bb/siggen.py

commit 57d2ee17ae83a139a37081eb082e6184fa883581
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2018-10-16 17:15:20 +0100

    bitbake: data: Ensure task checksums account for remove data
    
    Currently remove operations are not being accounted for in the task
    checksums. This is a fairly serious oversight and needs to be fixed.
    
    To do so, we need internal data from getVarFlag combined with the
    expanded variable data so that only "active" remove operators are
    accounted for in the task checksum. We can get this from the new
    optional removes attribute in the returned parser object.
    
    The code can then use the data on active remove operators to account
    for the removals in task checksum but only when the removal is active.
    
    We have to be careful here not to reference any expanded data since this
    may for example contain build paths. This means we can only map back
    and reference the unsplit (and hence unexpanded) remove string which may
    expand to multiple removal values.
    
    [YOCTO #12913]
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

12	0	lib/bb/data.py
18	9	lib/bb/data_smart.py

commit 136100dc932c9019737f927d826955425134010f
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2018-10-17 11:42:28 +0100

    data/data_smart: Allow getVarFlag to return the variable parser object
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

5	6	lib/bb/data.py
13	5	lib/bb/data_smart.py

commit a039052f9b680eae53f3f12b7381b945f1d69253
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2018-10-17 10:51:19 +0100

    data_smart: Fix expand_cache and _remove operator interaction issues
    
    The contents of the expand_cache is meant to match the return value of
    getVarFlag() but the implementation was mostly in expandWithRefs(). If
    an incorrect key was passed to expandWithRefs(), or a variable was only
    partially expanded with no remove processing, the cache could become
    corrupted.
    
    Move the code to getVarFlag making the data lifecycle very clear, meaning
    other calls to expandWithRefs() cannot corrupt the cache.
    
    The expand_cache reset code needs to be moved ahead of any remote data
    connectors too, since the expand_cache is now on the local side of the
    connection.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

23	27	lib/bb/data_smart.py

commit 6d19eb3226b59922c0f888e33b28443635151501
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2018-10-16 22:35:36 +0100

    data_smart: Micro optimise _remove handling
    
    This brings _remove handling into line with _append/_prepend with regard
    to the parsing flag to getVarFlag.
    
    This is an internal flag and the only times this is used is through getVar
    during renameVar operations and when processing ?= operations to see if
    a variable is set. In either case we don't need to process remove operations.
    
    Therefore take the minor speedup and skip processing for parsing=True.
    
    [YOCTO #10945]
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/data_smart.py

commit a68de8ace62eaba23856bfb301efbbe1824322aa
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2018-10-17 10:54:40 +0100

    fetch2: Avoid incorrect getVarFlag call
    
    Calling getVarFlag with flag=None makes no sense, don't do it. Bitbake
    used to silently ignore this, it now warns so avoid the warning.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	1	lib/bb/fetch2/__init__.py

commit 3f4968c77129252e8d0833fbd683372fca243a90
Author: Chris Laplante via bitbake-devel <bitbake-devel@lists.openembedded.org>
Date:   2018-10-04 13:21:38 -0400

    bitbake-user-manual: fix description of BB_RUNTASK
    
    Contrary to what the manual said, BB_RUNTASK does include the do_
    prefix, unlike BB_CURRENTTASK.
    
    Signed-off-by: Chris Laplante <chris.laplante@agilent.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	2	doc/bitbake-user-manual/bitbake-user-manual-ref-variables.xml

commit 27a2214bf6f2e7c61bfc422a20959a55f7e0d25d
Author: Urs Fässler <urs.fassler@bbv.ch>
Date:   2018-10-08 08:15:12 +0000

    fetch2/git: provide information about missing sources
    
    Provide more information in the case the sources are not found in the
    unpack step.
    
    Signed-off-by: Urs Fässler <urs.fassler@bbv.ch>
    Signed-off-by: Pascal Bach <pascal.bach@siemens.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

21	8	lib/bb/fetch2/git.py
2	0	lib/bb/tests/fetch.py

commit 78d8fb3a7899e1404a513be1c2b2b4440da8b12d
Author: Urs Fässler <urs.fassler@bbv.ch>
Date:   2018-10-08 08:15:11 +0000

    fetch2/git: explicitly show the decision logic to select the source in code
    
    Signed-off-by: Urs Fässler <urs.fassler@bbv.ch>
    Signed-off-by: Pascal Bach <pascal.bach@siemens.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

4	3	lib/bb/fetch2/git.py

commit 30cf2506007d25162f0805051212f54c39034ff3
Author: Urs Fässler <urs.fassler@bbv.ch>
Date:   2018-10-08 08:15:10 +0000

    fetch2/git: prevent access to non-existing clonedir
    
    A user friendly error is throw when neither the clonedir nor
    fullshallow exist. Without the check, a difficult to interpret error
    is throw from within the fetch command.
    
    Signed-off-by: Urs Fässler <urs.fassler@bbv.ch>
    Signed-off-by: Pascal Bach <pascal.bach@siemens.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	1	lib/bb/fetch2/git.py
11	0	lib/bb/tests/fetch.py

commit 5e69ca56533666a097bb23d09ab673e5c862051c
Author: Urs Fässler <urs.fassler@bbv.ch>
Date:   2018-10-15 13:43:21 +0000

    fetch2: extract the function which ensures that a valid symlink exists
    
    For better readability and future use, we extract the function which
    ensures that a given symlink exists.
    
    Signed-off-by: Urs Fässler <urs.fassler@bbv.ch>
    Signed-off-by: Pascal Bach <pascal.bach@siemens.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

17	10	lib/bb/fetch2/__init__.py

commit 3434e64e7c077c1ecff7b36f02b6c6b59a7d1fe9
Author: Urs Fässler <urs.fassler@bbv.ch>
Date:   2018-10-15 13:43:20 +0000

    fetch2/git: use intention revealing names for premirror tests
    
    Signed-off-by: Urs Fässler <urs.fassler@bbv.ch>
    Signed-off-by: Pascal Bach <pascal.bach@siemens.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

11	11	lib/bb/tests/fetch.py

commit 05f2ac8e19a027d103921b5ae0070db609a83042
Author: Urs Fässler <urs.fassler@bbv.ch>
Date:   2018-10-15 13:43:19 +0000

    fetch2/git: add tests to capture existing behavior wrt. naming of git shallow tarball
    
    The mapping of the URLs to the local shallow tarballs is not obvious. For
    easier understanding, we add this tests to explicitly showing the mapping.
    
    Signed-off-by: Urs Fässler <urs.fassler@bbv.ch>
    Signed-off-by: Pascal Bach <pascal.bach@siemens.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

35	0	lib/bb/tests/fetch.py

commit c604d9402b4c9ad7eb5c794ab24f2f348d9719a9
Author: Urs Fässler <urs.fassler@bbv.ch>
Date:   2018-10-15 13:43:19 +0000

    fetch2/git: add tests to capture existing behavior wrt. naming of mirror tarball
    
    The mapping of the URLs to the local tarballs is not obvious. For easier
    understanding, we add this tests to explicitly showing the mapping.
    
    Signed-off-by: Urs Fässler <urs.fassler@bbv.ch>
    Signed-off-by: Pascal Bach <pascal.bach@siemens.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

34	0	lib/bb/tests/fetch.py

commit 5f92682389fee437d6df2ff7718c571b7444e179
Author: Urs Fässler <urs.fassler@bbv.ch>
Date:   2018-10-15 13:43:18 +0000

    fetch2/git: add tests to capture existing behavior wrt. naming of clone directories
    
    The mapping of the URLs to the local directory is not obvious. For easier
    understanding, we add this tests to explicitly showing the mapping.
    
    Signed-off-by: Urs Fässler <urs.fassler@bbv.ch>
    Signed-off-by: Pascal Bach <pascal.bach@siemens.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

49	0	lib/bb/tests/fetch.py

commit 05ee4845f925b8528a7ce9cffb4bae425b8fa1e9
Author: Peter Marko <peter.marko@siemens.com>
Date:   2018-10-10 12:34:40 +0200

    fetch2: avoid circular recursion with SRCPV in PR
    
    Some recent changes broke SRCPV and workaround was introduced
    to avoid circular dependency if SRCPV is in PV.
    However there is still the same error if SRCPV is in PR.
    
    Signed-off-by: Peter Marko <peter.marko@siemens.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	1	lib/bb/fetch2/__init__.py

commit 43f8a23d56995f552f98a666e86b6cc124e235a4
Author: Tobias Olausson <tol@hms.se>
Date:   2018-10-11 15:29:49 +0200

    taskexp: add focused search bar
    
    Searching in the task explorer requires one to focus the task list. A
    readily visible and focused search bar makes searching intuitive.
    
    Signed-off-by: Tobias Olausson <tol@hms.se>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

9	1	lib/bb/ui/taskexp.py

commit cddea4282820ef10ad4863d87327891ea9383916
Author: Mark Hatle <mark.hatle@windriver.com>
Date:   2018-10-11 17:18:33 -0400

    layerindexlib: Fix various type checking errors
    
    In the list_obj function, we can't check if the requested object is 'in',
    the index data -- as it's actually an attribute of the object.  Move to hasattr.
    
    The remaining items were incorrect usages of 'type' for class type comparison.
    Instead move to 'isinstance'.  Remaing 'type' comparisons are still valid.  The
    code was also reordered slightly to avoid a lot of:
    
    if not isinstance(x, y):
       ...
    else:
       ...
    
    reordering it removes the not and makes the code slightly easier to read.
    
    Signed-off-by: Mark Hatle <mark.hatle@windriver.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

25	26	lib/layerindexlib/__init__.py
11	8	lib/layerindexlib/cooker.py

commit 0bfbcc786fd67bd40153160db7fcd41cd9295234
Author: David Reyna <David.Reyna@windriver.com>
Date:   2018-10-15 00:14:19 -0700

    toaster: missing shutil import
    
    The "buildimport.py" script is missing the "import shutil" line,
    which causes a project import page failure.
    
    [YOCTO #12959]
    
    Signed-off-by: David Reyna <David.Reyna@windriver.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	0	lib/toaster/toastermain/management/commands/buildimport.py

commit b081b78a330fee30b172c2c8bdc9c196a65be9af
Author: David Reyna <David.Reyna@windriver.com>
Date:   2018-10-15 00:14:18 -0700

    toaster: bump django version to match build tools
    
    The version of django in the 2.6 release got bumped to 1.11.14.
    The toaster requirements file needs to be updated to accept it.
    
    [YOCTO #12958]
    
    Signed-off-by: David Reyna <David.Reyna@windriver.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	toaster-requirements.txt

commit e43ff061b03878057e49c44aa3ee2e4c7a5d5503
Author: David Reyna <David.Reyna@windriver.com>
Date:   2018-10-15 00:14:17 -0700

    toaster: bad link for distro conf file
    
    The distro source path link is missing "conf/distro/", and the
    display is using the machine link instead of the distro link.
    
    [YOCTO #12957]
    
    Signed-off-by: David Reyna <David.Reyna@windriver.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/toaster/orm/models.py
3	5	lib/toaster/toastergui/tables.py

commit c0a23dd9155c50a6b7df796980bc7b612cac7994
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2018-10-16 14:16:27 +0100

    data: Fix whitespace on _remove operations
    
    We have some slightly odd behaviours with the current implementation of
    _remove operations. For example:
    
    TEST = " A B"
    TEST_remove = "C"
    
    would trigger TEST to become "A B" even thought it doesn't contain "C".
    
    In particular, this means that an inactive remove operator added in a
    bbappend could change the task checksum which is not desireable.
    
    Fix the operation to preserve whitespace, adding new tests to make this
    explict and test further corner cases. Also update the manual to match.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	3	doc/bitbake-user-manual/bitbake-user-manual-metadata.xml
3	2	lib/bb/data_smart.py
16	4	lib/bb/tests/data.py

commit 11722c989077a8751a5d0653c523760bf91e6efa
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2018-10-14 16:04:35 +0100

    data_smart: Preserve history when renaming variables
    
    Currently when a variable is renamed, all the variable history is lost.
    This makes it hard for users to understand/debug where values came from.
    
    Improve the code so that history is preserved across renamed variables.
    
    (Expanded variable key names are a special case of variable renaming)
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

11	0	lib/bb/data_smart.py

commit ac15028391fdcc3fec2dd0e64a4f763ce63e5449
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2018-10-09 18:59:25 +0100

    main: Fix environment handling for UI module imports
    
    The environment was being cleared before the UI imports occurred which
    caused problems for graphical UIs like taskexp. The full environment was
    intended to be available to UI clients and it was only meant to be cleared
    for the server/cooker, so tweak the code order so this is the case.
    
    This fixes problems reported for taskexp.
    
    [YOCTO #12670]
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

4	3	lib/bb/main.py

commit fd9893c338df7828b2c01f1d548aa86dfcf7c50a
Author: Mark Hatle <mark.hatle@windriver.com>
Date:   2018-10-02 17:08:03 -0400

    gitsm: Allow relative URIs when fetching
    
    Some repositories may specify a relative submodule path.  If this happens,
    it is our responsibility to use the parents URL (ud) and handle any relative
    processing ourselves.
    
    Signed-off-by: Mark Hatle <mark.hatle@windriver.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

5	0	lib/bb/fetch2/gitsm.py

commit 377ed943357b6d47d41d84edbf971741f44affa9
Author: Laurent Bonnans <laurent.bonnans@here.com>
Date:   2018-10-01 16:52:14 +0200

    fetch2/gitsm: checkout submodules recursively
    
    The new fetcher did not run 'git submodule update' recursively.
    
    Signed-off-by: Laurent Bonnans <laurent.bonnans@here.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

38	30	lib/bb/fetch2/gitsm.py

commit 3dbc84e9c572f43209b79f3656d7dc35a6d982ba
Author: Laurent Bonnans <laurent.bonnans@here.com>
Date:   2018-10-01 16:52:13 +0200

    fetch2/gitsm: handle submodules nested inside subdirs
    
    The new gitsm fetcher assumed that submodules were living directly in
    the 'modules' directory, whereas they can be arbitrarily nested inside
    subdirectories.
    
    Solve it by first creating the parent of the destination directory for
    the symlink and copy steps.
    
    Signed-off-by: Laurent Bonnans <laurent.bonnans@here.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

9	6	lib/bb/fetch2/gitsm.py

commit b310031972a53d0881a87a627f07bdcf7d9c6b79
Author: David Reyna <David.Reyna@windriver.com>
Date:   2018-10-03 23:10:51 -0700

    toaster: custom image enable layer add, protect pre-cloned layers
    
    When creating custom image recipes, the layer add for new layers
    needs missing xhrLayerUrl data. Also, code is needed to check
    and inform user if the newly added layer has not been cloned yet,
    and provide helpful error message instead of the current frozen
    dialog.
    
    [YOCTO #12887]
    
    Signed-off-by: David Reyna <David.Reyna@windriver.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	2	lib/toaster/orm/models.py
7	1	lib/toaster/toastergui/api.py
2	1	lib/toaster/toastergui/static/js/libtoaster.js
7	0	lib/toaster/toastergui/static/js/newcustomimage_modal.js
5	1	lib/toaster/toastergui/templates/customise_btn.html

commit abccd40536b366a418802c5ba8427454c2e3bb2c
Author: David Reyna <David.Reyna@windriver.com>
Date:   2018-10-01 00:45:57 -0700

    toaster: disable git remote check to allow for firewalls
    
    Toaster users behind firewalls that block "git" access usually
    require developers to add remap rules in their "~/.gitconfig"
    to remap GIT accesses to HTTP* access. However, there is a
    "git remote" test in Toaster that is not aware of such remaps,
    resulting in a false error.
    
    For now, disable this nice-to-have check to support this release,
    and re-enable when we can add remapping accommodations for this
    test.
    
    [YOCTO #12944]
    
    Signed-off-by: David Reyna <David.Reyna@windriver.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

5	2	lib/toaster/bldcontrol/localhostbecontroller.py

commit 97be301c87a29921b6d9e5029928f8a2871ed127
Author: David Reyna <David.Reyna@windriver.com>
Date:   2018-10-01 00:45:56 -0700

    toaster: add 'thud' release to Toaster
    
    Toaster needs to include new YP-2.6 "Thud" release.
    
    [YOCTO #12943]
    
    Signed-off-by: David Reyna <David.Reyna@windriver.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

6	6	lib/toaster/orm/fixtures/oe-core.xml
5	5	lib/toaster/orm/fixtures/poky.xml

commit 6458cc4234337f551dfe189b6f8800d8da886c24
Author: David Reyna <David.Reyna@windriver.com>
Date:   2018-10-01 00:45:55 -0700

    toaster: error logs missing for cli builds
    
    The method 'store_log_event' in 'buildinfohelper.py' always puts log
    messages from CLI builds into the backlog but never takes them out.
    The "close" method now forces all backlogged CLI events to be registered.
    
    [YOCTO #12813]
    
    Signed-off-by: David Reyna <David.Reyna@windriver.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

5	4	lib/bb/ui/buildinfohelper.py

commit 90a3181f1397ae05862f4e89a9bbac606e74504e
Author: Laurent Bonnans <laurent.bonnans@here.com>
Date:   2018-10-01 16:52:12 +0200

    fetch2/gitsm: fix a typo
    
    'qbareclone' in place of 'bareclone'
    
    Signed-off-by: Laurent Bonnans <laurent.bonnans@here.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/fetch2/gitsm.py

commit 086eddcf8c7520ff5c52ce2a11ca9bf5b5fe5d7e
Author: Urs Fässler <urs.fassler@bbv.ch>
Date:   2018-10-03 12:04:07 +0000

    fetch2/git: use correct check to decide if the shallow tarball should be unpacked
    
    The shallow_tarball check is never true due a check on the caller side.
    The tarball check is not related to the code on the caller side.
    
    Signed-off-by: Urs Fässler <urs.fassler@bbv.ch>
    Signed-off-by: Pascal Bach <pascal.bach@siemens.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/fetch2/git.py

commit b7f00a8c11672a2ee0408e210fb174cda3384e3f
Author: Urs Fässler <urs.fassler@bbv.ch>
Date:   2018-10-03 12:04:06 +0000

    fetch2/git: prevent access to non-existing fullshallow tarball
    
    Signed-off-by: Urs Fässler <urs.fassler@bbv.ch>
    Signed-off-by: Pascal Bach <pascal.bach@siemens.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/fetch2/git.py
14	0	lib/bb/tests/fetch.py

commit 9038e029f4f0ab413727de76c74248cbb3cdc9ea
Author: Urs Fässler <urs.fassler@bbv.ch>
Date:   2018-10-03 12:04:06 +0000

    fetch2/git: improve readability of method need_update
    
    To improve the readability we extract the different scenarios of why
    the clonedir needs an update.
    
    Signed-off-by: Urs Fässler <urs.fassler@bbv.ch>
    Signed-off-by: Pascal Bach <pascal.bach@siemens.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

9	4	lib/bb/fetch2/git.py

commit fa42212a6cb7b64add4d6ca0f723a95c908c6b87
Author: Scott Rifenbark <srifenbark@gmail.com>
Date:   2018-09-05 10:40:13 -0700

    bitbake-user-manual: Added section on multicong dependencies
    
    Created a new section to show how to handle dependencies when
    you are doing a multiple configuration build.  Put it in the
    "Examples" section.
    
    Signed-off-by: Scott Rifenbark <srifenbark@gmail.com>

76	0	doc/bitbake-user-manual/bitbake-user-manual-intro.xml

commit 836f994ec530ba82c935cb41e006d1f128885dc2
Author: Scott Rifenbark <srifenbark@gmail.com>
Date:   2018-09-05 09:31:24 -0700

    bitbake-user-manual: Added BBMULTICONFIG support
    
    The BBMULTICONFIG variable is a variable used for BitBake and was
    not documented in the BitBake Manual glossary.  I added the
    definition.  I also added the variable to the example in the section
    describing how to execute builds for multiple configurations.
    
    Signed-off-by: Scott Rifenbark <srifenbark@gmail.com>

19	7	doc/bitbake-user-manual/bitbake-user-manual-intro.xml
39	0	doc/bitbake-user-manual/bitbake-user-manual-ref-variables.xml

commit f2d432674b187685591f60cec3b2980b377c63fe
Author: Scott Rifenbark <srifenbark@gmail.com>
Date:   2018-08-30 11:29:12 -0700

    bitbake-user-manual: Added new section on multiconfig builds
    
    Created a new example.  Also added a figure for the separate
    configuration file hierarchy
    
    Signed-off-by: Scott Rifenbark <srifenbark@gmail.com>

69	0	doc/bitbake-user-manual/bitbake-user-manual-intro.xml
-	-	doc/bitbake-user-manual/figures/bb_multiconfig_files.png

commit d47febbae4ff24be259037f12bafbc14b9e2d6a8
Author: Ross Burton <ross.burton@intel.com>
Date:   2018-09-21 10:58:26 +0100

    test/fetch: use canonical GitLab URLs
    
    GitLab returns a redirect from /foo to /foo.git which older releases of Git
    don't handle when cloning.  These tests don't clone so the redirect works, but
    let's be consistant with the structure of these URLs and add the .git suffix.
    
    Signed-off-by: Ross Burton <ross.burton@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	2	lib/bb/tests/fetch.py

commit 9c6b39adf9781fa6745f48913a97c859fa37eb5b
Author: Mark Hatle <mark.hatle@windriver.com>
Date:   2018-09-25 13:15:25 -0400

    fetch2/gitsm.py: Rework the git submodule fetcher
    
    The prior fetcher did not know how to work with MIRRORS, and did not
    honor BB_NO_NETWORK and similar.
    
    The new fetcher approach recursively calls 'gitsm' download on each
    submodule detected.  This ensures that it will go throug the
    standard download process.
    
    Each downloaded submodule is then 'attached' to the original download in
    the 'modules' directory.  This mimics the behavior of:
    
        git submodule init
    
    but there is no chance it will contact the network without permission.
    
    It then corrects upstream reference URIs.
    
    The unpack steps simply copies the items from the downloads to the destdir.
    Once copied the submodules are connected and we then run:
    
        git submodule update
    
    According to the git documentation, git submodule init can and will modify
    the project configuration and may connect to the network.  Doing the
    work manually prevents this.  (This manual process is allowed based
    on my reading of the documentation.)
    
    See: https://git-scm.com/book/en/v2/Git-Tools-Submodules
    
    The small change to the existing test is due to this new code always assuming
    the code is from a remote system, and not a 'local' repository.  If this
    assumption proves to be incorrect -- code will need to be added to deal
    with local repositories without an upstream URI.
    
    Signed-off-by: Mark Hatle <mark.hatle@windriver.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

156	123	lib/bb/fetch2/gitsm.py
3	0	lib/bb/tests/fetch.py

commit 7d5af23d560b38fb5558d4ac51c3c9611d6d904f
Author: Mark Hatle <mark.hatle@windriver.com>
Date:   2018-09-25 11:07:08 -0400

    lib/layerindexlib/tests/restapi.py: Fix test cases when BB_SKIP_NETTETS=yes
    
    Change the way the network related tests are skipped, based on how the
    fetch tests are handled.  We introduce a 'skipIfNoNetwork()' function that
    will report skipped tests through the standard unit test reporting system.
    
    [YOCTO #12928]
    
    Signed-off-by: Mark Hatle <mark.hatle@windriver.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

87	77	lib/layerindexlib/tests/restapi.py

commit 8c222c45148d1f21c2390d66ddd9d3e33b397f05
Author: Mark Hatle <mark.hatle@windriver.com>
Date:   2018-09-25 11:07:06 -0400

    lib/bb/tests/parse.py: Test case was changing chdir
    
    The test case was changing the current directory, but was never restoring it
    to the original location.  This causes occasional failures in later test cases.
    
    Signed-off-by: Mark Hatle <mark.hatle@windriver.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

4	0	lib/bb/tests/parse.py

commit 80fe44889a858bddaca230c2d49ccabfcbc236a3
Author: Mark Hatle <mark.hatle@windriver.com>
Date:   2018-09-25 11:15:52 -0400

    lib/layerindexlib/tests/cooker.py: Fix topdir to use an absolute (real) path
    
    The test case needs to access test case files.  Different versions of python
    may return absolute or relative locations in __file__.  Use the same approach
    as other test cases in determining the location of the test files.
    
    Signed-off-by: Mark Hatle <mark.hatle@windriver.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/layerindexlib/tests/cooker.py

commit 0cb64d0f85b41b2fa764baf6ff7ea1b13f95004e
Author: Ioan-Adrian Ratiu <adrian.ratiu@ni.com>
Date:   2018-09-25 15:34:19 +0300

    utils: lockfile: Fix infinite loop
    
    A nasty corner case leads to a hang when utils.lockfile is called from
    oe-core's package-manager:deploy_dir_lock (in turn called from
    rootfs:_create further up the call stack) with "name" owned by root
    and the user running bitbake has no write access.
    
    Because this code runs under pseudo, the UID and EUID of the bitbake
    worker process are 0, so the os.access(dirname, os.W_OK) returns True
    i.e. it thinks the path is writable when in fact it's not writable.
    
    Only later when trying to open the file an Exception it thrown because
    the OS prohibits writing, but the Exception is ignored and the open is
    retried leading to an infinite loop.
    
    So this fix is to not ignore the "Permission Denied" exception.
    
    An alternative fix would be to replace the os.access() call with an
    try: open() except() at the beginning of the function.
    
    Signed-off-by: Ioan-Adrian Ratiu <adrian.ratiu@ni.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

5	1	lib/bb/utils.py

commit e72be96cfa9f05fda5f420c7cfa8bcfa9304b884
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2018-09-21 20:14:03 -0700

    daemonize/build: Clean up /dev/null fd handling
    
    At the end of bitbake selftest we see:
    
    sys:1: ResourceWarning: unclosed file <_io.TextIOWrapper name='/dev/null' mode='r+' encoding='UTF-8'>
    
    Clean up the /dev/null handling to drop the unused entry in build.by and
    ensure the other open() calls are cleaned up.
    
    NULL was unused since http://git.yoctoproject.org/cgit.cgi/poky/commit/bitbake/lib/bb/build.py?id=4a081b5a52e3d27da8d4b062f3fda292e8d8fb0a
    back in 2012.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	5	lib/bb/build.py
2	2	lib/bb/daemonize.py

commit 407d6e07b09123c12c382b4a92107f002c314b05
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2018-09-21 19:55:26 -0700

    COW: Fix StopIteration warning
    
    Fix the warning:
    
    WARNING: lib/bb/data_smart.py:235: DeprecationWarning: generator 'COWDictMeta.iter' raised StopIteration
      for k, v in self.variables.iteritems():
    
    by using return from the generator, not raising StopIteration.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/COW.py

commit 464d0339add15bc8b4344ddd1e4c49706e3c0a02
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2018-09-07 17:41:27 +0100

    runqueue: Ensure setscene tasks that aren't covered get built
    
    Running "bitbake gconf-native -c cleansstate; bitbake core-image-sato:do_populate_sdk"
    
    results in a build where it fails to find gconf-native and fails to build it,
    merrily trying to build the SDK without gconf being present.
    
    The issue is the missing setscene tasks are effectively ignored as the later
    code in runqueue thinks that since other sstate tasks are present, these
    'cover' the missing one. In reality we need to call BB_SETSCENE_DEPVALID
    to make that decision. To do that we need a "reduced" setscene dependency
    graph which we don't have in main task graph context.
    
    Since that was already done in setscene, we should just assume anything
    in the non-covered list needs to be built.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

4	2	lib/bb/runqueue.py

commit 0c87ade5678e503899e3a6cdda5329f6fc212b63
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2018-09-07 14:08:59 +0100

    cooker/runqueue: Turn universe warnings into verbnotes
    
    If the user puts universe on the commandline, they don't really want warnings
    so use the new verbnote level instead.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/cooker.py
1	1	lib/bb/runqueue.py

commit 2076f12cc2f809345108b1606bd6201f41287505
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2018-09-07 14:06:37 +0100

    msg: Add explicit verbnote log level
    
    It has become apparant we need a log level which reaches the console but
    isn't a warning/error. Add "verbnote" as a way of doing this, behaves as
    a note but with a higher priority.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

16	0	lib/bb/__init__.py
3	0	lib/bb/msg.py

commit 0594faa0b52ce5dbd948d836d88617d38d9862d1
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2018-09-04 15:54:12 +0100

    server/process: Various server startup logging fixes
    
    There were various problems in the server startup loggin:
    
    a) stdout/stderr were not being flushed before forking which could potentially
       duplicate output
    
    b) there were separate buffers for stdout/stderr leading to confusing logs
       where the entries could be reordered. This was particularly confusing
       due to the separator the logs use to idendify new messages
    
    c) an fd wasn't being closed during server startup meaning if the
       server failed to start, the closed fd wasn't detected as it was held
       open by the other reference
    
    d) If the pipe was detected as being closed, the code incorrectly retried
       server startup
    
    e) The event code would remap stdout/stderr without flushing them, leading
       to lose log messages
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

9	3	lib/bb/daemonize.py
3	0	lib/bb/event.py
10	10	lib/bb/server/process.py

commit 1787cef7221b88f6920ea70fadaffc117d84c7aa
Author: Mark Hatle <mark.hatle@windriver.com>
Date:   2018-08-29 10:52:17 -0400

    cooker.py: Fix incorrect bb files matched warning
    
    In the case of a sublayer of an existing layer, where the sublayer and
    main layer share a path, the system may not match the paths properly resulting
    in:
    
        No bb files matched BBFILE_PATTERN_sublayer '^/path/main/sublayer'
    
    because it has already matched the main layer.
    
    Fix this issue by sorting the collection items based on the pattern, using
    longest to shortest.  Obviously regex wildcards could still be an issue
    but these are typically not used, so this simply fix should work in the
    existing cases.
    
    Signed-off-by: Mark Hatle <mark.hatle@windriver.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	0	bin/bitbake-selftest
4	1	lib/bb/cooker.py
83	0	lib/bb/tests/cooker.py

commit 43ff74d675baed13fc17e1d12c0e013b16ba249b
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2018-08-28 17:26:04 +0100

    tests/fetch: Update gnome.org urls after upstream changes
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	2	lib/bb/tests/fetch.py

commit 9c86c582a10c9b23abad7d34b6cbf12f7086294d
Author: Paulo Neves <ptsneves@gmail.com>
Date:   2018-08-27 21:38:59 +0200

    fetcher: Fixed remote removal not throwing exception.
    
    Before this fix it is assumed that the removal of the
    remote can only fail because there is not remote to remove. This
    is a false assumption. Example error which would be ignored:
    
    git -c core.fsyncobjectfiles=0 remote rm origin failed with exit code 1, output:
    Note: A branch outside the refs/remotes/ hierarchy was not removed;
    to delete it, use:
      git branch -d master
    error: could not lock config file config
    error: Could not remove config section 'remote.origin'
    
    Due to the masking of this error a stranger error will be
    presented to the user, because this time we do not mask the
    exception:
    
    git -c core.fsyncobjectfiles=0 remote add --mirror=fetch origin https://github.com/ptsneves/tl-wn722.git failed with exit code 128, output:
    fatal: remote origin already exists.
    
    The most likely reason that the remote cannot be removed nor
    modified is that the DL_DIR/git2 does not have permissions
    compatible with the user running bitbake.
    
    This commit fixes:
    https://bugzilla.yoctoproject.org/show_bug.cgi?id=12728
    
    Signed-off-by: Paulo Neves <ptsneves@gmail.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	4	lib/bb/fetch2/git.py

commit 8ce51fbd92ab42365a38e0c1c260bb4979377a89
Author: David Reyna <David.Reyna@windriver.com>
Date:   2018-08-26 15:33:32 -0700

    toaster: enable project import and merged Toaster settings
    
    Enable the ability to select an existing build directory into Toaster.
    This  opens to the user the backend features of 12823, for command line
    user compatibility.
    
    Enable the ability to select saving Toaster settings in the regular
    "bblayers.conf" and "local.conf" instead of the default
    "toaster_bblayers.conf" and "toaster.conf". This opens to the user the
    backend features of 12821, for command line user compatibility.
    
    [YOCTO #12902]
    
    Signed-off-by: David Reyna <David.Reyna@windriver.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

4	4	lib/toaster/bldcontrol/localhostbecontroller.py
26	27	lib/toaster/toastergui/templates/newproject.html
16	6	lib/toaster/toastergui/views.py
2	5	lib/toaster/toastermain/management/commands/buildimport.py

commit aa79967920b2617ce007f66c89f3343f1a7f34b4
Author: Awais Belal <awais_belal@mentor.com>
Date:   2018-08-26 15:33:31 -0700

    toaster/layerdetails.js: don't hide local layer info
    
    The local layer info (provided through custom fixtures) should
    not be hidden. It is better to handle it in the same manner
    as an imported layer, otherwise the layer path and dependency
    info is not shown. The layer editing fields are handled in the
    html side of things appropriately so this does not harm that
    implementation.
    
    [YOCTO #12891]
    
    Signed-off-by: Awais Belal <awais_belal@mentor.com>
    Signed-off-by: David Reyna <David.Reyna@windriver.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	1	lib/toaster/toastergui/static/js/layerdetails.js

commit 59f3e04122fca43835603779ac2d201464fbaebf
Author: Awais Belal <awais_belal@mentor.com>
Date:   2018-08-26 15:33:30 -0700

    toaster/models.py: allow local paths for custom recipe's base
    
    In a case where the layer source is local only and the recipe
    is not yet built, we can search for the path with layer's
    local_source_dir, and if available that should be used rather
    than just skipping the scenario.
    
    [YOCTO #12891]
    
    Signed-off-by: Awais Belal <awais_belal@mentor.com>
    Signed-off-by: David Reyna <David.Reyna@windriver.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

7	0	lib/toaster/orm/models.py

commit 55333f1c3ded1c53120e6cb32b440cc707521e2b
Author: Awais Belal <awais_belal@mentor.com>
Date:   2018-08-26 15:33:29 -0700

    toaster/checksettings: allow CUSTOM_XML_ONLY setting through env
    
    This change allows the CUSTOM_XML_ONLY toaster setting to be
    provided through the environment so the user can do this without
    mingling with the settings.xml, for scenarios where modifying
    settings.xml is not achievable.
    
    [YOCTO #12891]
    
    Signed-off-by: Awais Belal <awais_belal@mentor.com>
    Signed-off-by: David Reyna <David.Reyna@windriver.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	1	lib/toaster/bldcontrol/management/commands/checksettings.py

commit a6e20bddddd083fbecb5ed8d5f4824da640fdd44
Author: Awais Belal <awais_belal@mentor.com>
Date:   2018-08-26 15:33:28 -0700

    toastergui/newproject.html: fix release divs
    
    The release drop down divs are not being closed
    appropriately, which showed adverse reactions on
    the UI that aligned the "Create project" button
    with the left edge of the screen without any
    margins. This fixes these divs which in turn
    aligns the button appropriately.
    
    [YOCTO #12891]
    
    Signed-off-by: Awais Belal <awais_belal@mentor.com>
    Signed-off-by: David Reyna <David.Reyna@windriver.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	2	lib/toaster/toastergui/templates/newproject.html

commit 679c70aa32d23e9247f8a68efcb579ad733af84b
Author: Awais Belal <awais_belal@mentor.com>
Date:   2018-08-26 15:33:27 -0700

    toaster/widgets.py: avoid divide by zero issues
    
    There can be cases where the variables being used
    to divide in build percentage expressions can be
    zero. For example, a setup consisting of only local
    repos will have repos_to_clone=0 and will generate
    a divide by zero scenario.
    Fix this by checking the divisor in such cases.
    
    [YOCTO #12891]
    
    Signed-off-by: Awais Belal <awais_belal@mentor.com>
    Signed-off-by: David Reyna <David.Reyna@windriver.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

12	7	lib/toaster/toastergui/widgets.py

commit e073775d3b6980fc8004ae28a3ccc3c5bbf50fb2
Author: Awais Belal <awais_belal@mentor.com>
Date:   2018-08-26 15:33:26 -0700

    toaster: allow TOASTER_DIR to be overridden from cmdline
    
    TOASTER_DIR is used for higher level toaster artifacts
    such the SQL DB and creating toaster internal build
    directories for projects. Prior to this change it was
    evaluated as `dirname $BUILDDIR` and user had no control
    over it. This change allows to override this variable
    from the command line for more flexibility. The variable
    defaults to its original setting if the optional argument
    is not passed.
    
    [YOCTO #12891]
    
    Signed-off-by: Awais Belal <awais_belal@mentor.com>
    Signed-off-by: David Reyna <David.Reyna@windriver.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

7	2	bin/toaster

commit 365d8d94ae3e4e0f95e0806dbcb7c77c20a55d2d
Author: Awais Belal <awais_belal@mentor.com>
Date:   2018-08-26 15:33:25 -0700

    toaster: use a more flexible way to find bitbake
    
    The current mechanism for finding the bitbake binary
    assumes a directory structure which is identical to
    poky, where oe-core's meta and bitbake directories are
    at the same level. There can be a case where bitbake
    is used from elsewhere and in such cases the above
    mentioned assumption fails to hold, whereas this is
    totally allowed by the oe-init-build-env script which
    can take bitbakedir as an argument.
    The better approach is to allow bitbake to be derived
    from PATH, while keeping the older mechanism in place so
    it can be removed after tests are done in various
    environments. This makes more sense as toaster has
    also been launched from the same bitbake instance
    that is the one in PATH.
    
    [YOCTO #12891]
    
    Signed-off-by: Awais Belal <awais_belal@mentor.com>
    Signed-off-by: David Reyna <David.Reyna@windriver.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

12	1	lib/toaster/bldcontrol/localhostbecontroller.py

commit 6c3c196b28603591371ec7e62871fbb4296f2c71
Author: Awais Belal <awais_belal@mentor.com>
Date:   2018-08-26 15:33:24 -0700

    toaster: allow pokydirname to be evaluated when all layers are local
    
    Toaster depends on pokydirname for identifying the location of
    the oe-init-build-env script (and there might be other purposes
    in the future). The problem with current approach is that it
    only checks/sets the variable with git based repos, whereas
    toaster provides mechanisms to allow having layers that are all
    locally available. The evaluation of the variable fails in such
    scenarios, so use a more flexible mechanism in this case and
    try to locate poky in the local layers as well, if not already
    set.
    
    [YOCTO #12891]
    
    Signed-off-by: Awais Belal <awais.belal@mentor.com>
    Signed-off-by: David Reyna <David.Reyna@windriver.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

15	3	lib/toaster/bldcontrol/localhostbecontroller.py

commit e5f1f8fa201774e0c3c554d59b277baa2128708f
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2018-08-24 16:17:54 +1200

    parse/ast: ensure saved event handlers really do get restored
    
    In finalize() we save event handlers, register the ones relevant to the
    recipe being finalised, trigger events, and then restore the handlers so
    that one recipe's custom handlers (actually implemented within a class
    inherited by the recipe) do not affect other recipes. However, if an
    exception occurs during parsing, the saved handlers were not being
    restored. Use a try...finally block to ensure that the handlers are
    always restored.
    
    This issue became apparent since in OpenEmbedded-Core we have recently
    introduced a find_intercepts() handler for the
    bb.event.RecipePreFinalise event in image-postinst-intercepts.bbclass
    that images and old-style SDK recipes will end up inheriting. So far it
    doesn't seem that the the error has manifested itself in normal builds,
    but when parsing OE-Core recipes in the OE layer index it has:
    core-image-rt-* image recipes were parsed which in the default
    configuration raise SkipRecipe. The next non-image recipe that is parsed
    will trigger a real exception, because the find_intercepts() handler is
    still registered and gets fired, but in the context of the new recipe
    the POSTINST_INTERCEPTS_PATHS variable is not set, and the code in
    find_intercepts() is written with the reasonable assumption that that
    isn't possible given that the class itself sets a default, and thus it
    fails.
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

19	18	lib/bb/parse/ast.py

commit 49c3fd2489867c09dec6919a25b53d935a8204bb
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2018-08-23 09:02:49 +0100

    bitbake: Bump version 1.39.0 -> 1.39.1
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	bin/bitbake
1	1	lib/bb/__init__.py

commit fcc8e1ff53696f78dd64b4ee32f3c433b7a47df0
Author: Joshua Watt <jpewhacker@gmail.com>
Date:   2018-08-21 09:04:16 -0500

    daemonize: Flush stdio on exit
    
    In spite of a comment suggesting otherwise, os._exit() does not flush
    buffered output from file descriptors before exiting the process like
    os.exit() does. This means that any un-flushed output is lost in the
    daemon process, in particular the traceback from any thrown exceptions,
    making debugging exceptions in the daemon quite difficult.
    
    The solution is to flush stdout and stderr before exiting.
    
    Signed-off-by: Joshua Watt <JPEWhacker@gmail.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

7	2	lib/bb/daemonize.py

commit a53ffec4ed3d0f9221bca398e20e8f480fb2b325
Author: Karsten Strand <karstens@graphcore.ai>
Date:   2018-08-20 09:51:00 +0200

    toaster: Fix comparison in recipe template
    
    Use == instead of = when comparing task outcome to OUTCOME_FAILED.
    
    Prior to this fix the recipe template would cause a TemplateSyntaxError
    exception.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/toaster/toastergui/templates/recipe.html

commit 985d6cec290bdd80998a63483561a73c75d82d65
Author: David Reyna <David.Reyna@windriver.com>
Date:   2018-08-15 18:04:09 -0700

    Toaster: Implement the project-specific feature and releated enhancements and defects.
    
    Here is the primary driving enhancement:
    
    *  Bug 12785 - Support Project Specific configuration for external
       tools (e.g. ISS, Eclipse)
    
      -  Isolated project-specific configuration page (full Toaster context
         hidden)
      -  Support for new project, reconfigure existing project, and import
         existing command line project
      -  Ability to define variables (e.g. image recipe) and pass them back
         to external GUI
      -  Ability to execute the cloning phase, so that external GUI receive
         a buildable project
      -  Ability to call back to the external GUI when updates are completed
         and ready
      -  Compatibility of above projects with the normal full Toaster interface
      -  Ability to pass to a 'complete' or 'cancel' web page so that the
         external GUI can immediately stop that Toaster instance, and not
         leave dangling servers nor edit sessions open
    
    Here are the supporting enhancements, where at least the
    back end is implemented:
    
    *  Bug 12821 - Make Toaster conf changes compatible with command line usage
    *  Bug 12822 - Support importing user changes to conf files into Toaster
    *  Bug 12823 - Support importing user build directories into Toaster
    *  Bug 12824 - Scan imported layers for content so that they are
                   immediately available
    *  Bug 12825 - show layer clone item in progress bar
    
    Here are defects fixed:
    
    *  Bug 12817 - builddelete.py requires explicit 'add_arguments'
    *  Bug 12818 - Remove orphaned imported layers when project is deleted
    *  Bug 12826 - fix imported layer management
    *  Bug 12819 - build using selected bitbake env, not Toaster's env
    *  Bug 12820 - Toaster randomizes the layer order in toaster_bblayers.conf
    
    [YOCTO #12785]
    
    Signed-off-by: David Reyna <David.Reyna@windriver.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

139	33	lib/toaster/bldcontrol/localhostbecontroller.py
1	1	lib/toaster/bldcontrol/management/commands/runbuilds.py
28	0	lib/toaster/orm/migrations/0018_project_specific.py
55	6	lib/toaster/orm/models.py
166	2	lib/toaster/toastergui/api.py
12	0	lib/toaster/toastergui/static/js/layerBtn.js
105	0	lib/toaster/toastergui/static/js/libtoaster.js
3	1	lib/toaster/toastergui/static/js/mrbsection.js
22	0	lib/toaster/toastergui/static/js/projecttopbar.js
4	0	lib/toaster/toastergui/tables.py
128	0	lib/toaster/toastergui/templates/base_specific.html
48	0	lib/toaster/toastergui/templates/baseprojectspecificpage.html
1	1	lib/toaster/toastergui/templates/generic-toastertable-page.html
2	2	lib/toaster/toastergui/templates/importlayer.html
50	0	lib/toaster/toastergui/templates/landing_specific.html
2	1	lib/toaster/toastergui/templates/layerdetails.html
1	1	lib/toaster/toastergui/templates/mrb_section.html
2	2	lib/toaster/toastergui/templates/newcustomimage.html
95	0	lib/toaster/toastergui/templates/newproject_specific.html
5	2	lib/toaster/toastergui/templates/project.html
162	0	lib/toaster/toastergui/templates/project_specific.html
80	0	lib/toaster/toastergui/templates/project_specific_topbar.html
5	2	lib/toaster/toastergui/templates/projectconf.html
23	0	lib/toaster/toastergui/templates/recipe_add_btn.html
13	0	lib/toaster/toastergui/urls.py
151	0	lib/toaster/toastergui/views.py
6	0	lib/toaster/toastergui/widgets.py
5	1	lib/toaster/toastermain/management/commands/builddelete.py
586	0	lib/toaster/toastermain/management/commands/buildimport.py

commit 7ae93cf40ab91965147055100432961436bce46c
Author: Rasmus Villemoes <rasmus.villemoes@prevas.dk>
Date:   2018-07-10 14:03:34 +0200

    bb/utils.py: add break_hardlinks helper
    
    bb.utils.copyfile is called in a few places with identical src and dst
    in order to create an st_nlinks==1 version of the file. That that even
    works relies on an implementation detail of copyfile (namely, that it
    creates a temporary file and then does a rename). Moreover, it's a waste
    of time if the file already has st_nlinks==1.
    
    So create a helper that optimizes away the copy in the st_nlinks==1
    case. Of course, this helper relies on the same implementation detail,
    but that's now contained within bb.utils itself.
    
    To test that we do at least sometimes hit the no-copy path, I tested
    locally with
    
         if sstat[stat.ST_NLINK] == 1:
    +        bb.note("Woohoo, 2*%d bytes I/O avoided" % sstat[stat.ST_SIZE])
             return True
    
    (and the obvious places in oe-core patched), and the do_package log files
    are indeed filled with woohoo notes.
    
    Signed-off-by: Rasmus Villemoes <rasmus.villemoes@prevas.dk>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

17	0	lib/bb/utils.py

commit 99d9e4389e1f1d78d17a23ee078fe3f4a12cb31d
Author: Andreas Müller <schnitzeltony@gmail.com>
Date:   2018-08-13 23:04:44 +0200

    runqueue: Move decision if a task can be started to one common place
    
    Signed-off-by: Andreas Müller <schnitzeltony@gmail.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

8	4	lib/bb/runqueue.py

commit a0ac8d67f1471a0c611d691b856fede67efb53f6
Author: Ross Burton <ross.burton@intel.com>
Date:   2018-08-13 19:02:25 +0100

    utils/md5_file: don't iterate line-by-line
    
    Opening a file in binary mode and iterating it seems like the simple solution
    but will still break on newlines, which for binary files isn't really useful as
    the size of the chunks could be huge or tiny.
    
    Instead, let's be a bit more clever: we'll be MD5ing lots of files, but we don't
    want to fill up memory: use mmap() to open the file and read the file in 8k
    blocks.
    
    Signed-off-by: Ross Burton <ross.burton@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

9	4	lib/bb/utils.py

commit e7cd4c86ef8a2c2bbf068e84c83fdc9e052b6e3d
Author: Ross Burton <ross.burton@intel.com>
Date:   2018-08-13 19:02:26 +0100

    checksum: sanity check path when recursively checksumming
    
    In case something goes tragically wrong, catch a request to checksum / and
    refuse.
    
    Signed-off-by: Ross Burton <ross.burton@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	0	lib/bb/checksum.py

commit d49483eb733ee27325349246fa37a84140c0941d
Author: Kai Kang <kai.kang@windriver.com>
Date:   2018-08-09 19:57:50 -0700

    event.py: fix typo
    
    Signed-off-by: Kai Kang <kai.kang@windriver.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/event.py

commit ec037d3e49264037b81212f498d98e292ae7c334
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2018-08-07 14:24:19 +0000

    runqueue: Allow the hash validate function to have an idea of build completion
    
    There is an oversight in the current hash validation API in that the
    function can't know how many setscene tasks already completed. Rather
    than trying to add additional parameters to the function, causing
    incompatibilities, store the value in the datastore.
    
    This is useful to allow build status reporting to the user for
    figures on sstate reusage and build completion.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

5	0	lib/bb/runqueue.py

commit 8e482342c652e298b5f5ea58eda72c5eb14ce2bd
Author: Mark Hatle <mark.hatle@windriver.com>
Date:   2018-07-25 11:48:54 -0400

    toaster/orm/management/commands/lsupdates.py: Use new layerindexlib module
    
    Change lsupdates.py to use the new layerindexlib module to load the data from
    the public layer index.  It still does all of the manual parsing.  This
    is intended to be a stop gap until the toaster can use the module itself to
    manage the data.
    
    Everything else is functionally equivalent to the prior version.
    
    Signed-off-by: Mark Hatle <mark.hatle@windriver.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

97	131	lib/toaster/orm/management/commands/lsupdates.py

commit 6a242a399ae93393c3fc60eda541c1f8f77fed57
Author: Mark Hatle <mark.hatle@windriver.com>
Date:   2018-07-23 22:29:13 -0400

    bitbake-layers: disable parsing for layerindex commands
    
    These don't need to access recipe information, so let's not waste the
    user's time parsing all recipes.
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Mark Hatle <mark.hatle@windriver.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	2	lib/bblayers/layerindex.py

commit 478c4b5489943f756ae03d6b6d3b5d665cedbce0
Author: Mark Hatle <mark.hatle@windriver.com>
Date:   2018-07-23 22:29:12 -0400

    bblayers/layerindex.py: Switch to use the new layerindexlib class
    
    Display changes:
    The output will now include references to the layers that the user already
    has on their system.  It does this by querying the cooker derived index.
    
    The code that enables this behavior is labeled as 'TODO' currently.  As
    part of the work we need to make a final determination if this is the
    desired output.
    
    Also changed the default branch to no longer define itself as 'master'.
    
    When the user does NOT set a branch, the default is now the
    'LAYERSERIES_CORENAMES', and if that doesn't exist 'master'.  This is
    subtly different in behavior, but more consistent with user expectations.
    
    Signed-off-by: Mark Hatle <mark.hatle@windriver.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

119	185	lib/bblayers/layerindex.py

commit fd0ee6c10dbb5592731e56f4c592fe687682a3e6
Author: Mark Hatle <mark.hatle@windriver.com>
Date:   2018-07-23 22:29:11 -0400

    layerindexlib: Initial layer index processing module implementation
    
    The layer index module is expected to be used by various parts of the system
    in order to access a layerindex-web (such as layers.openembedded.org) and
    perform basic processing on the information, such as dependency scanning.
    
    Along with the layerindex implementation are associated tests.  The tests
    properly honor BB_SKIP_NETTESTS='yes' to prevent test failures.
    
    Tests Implemented:
       - Branch, LayerItem, LayerBranch, LayerDependency, Recipe, Machine and
          Distro objects
       - LayerIndex setup using the layers.openembedded.org restapi
       - LayerIndex storing and retrieving from a file
       - LayerIndex verify dependency resolution ordering
       - LayerIndex setup using simulated cooker data
    
    Signed-off-by: Mark Hatle <mark.hatle@windriver.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

5	1	bin/bitbake-selftest
28	0	lib/layerindexlib/README
1364	0	lib/layerindexlib/__init__.py
341	0	lib/layerindexlib/cooker.py
60	0	lib/layerindexlib/plugin.py
398	0	lib/layerindexlib/restapi.py
0	0	lib/layerindexlib/tests/__init__.py
43	0	lib/layerindexlib/tests/common.py
123	0	lib/layerindexlib/tests/cooker.py
226	0	lib/layerindexlib/tests/layerindexobj.py
174	0	lib/layerindexlib/tests/restapi.py
11	0	lib/layerindexlib/tests/testdata/README
15	0	lib/layerindexlib/tests/testdata/build/conf/bblayers.conf
17	0	lib/layerindexlib/tests/testdata/layer1/conf/layer.conf
20	0	lib/layerindexlib/tests/testdata/layer2/conf/layer.conf
19	0	lib/layerindexlib/tests/testdata/layer3/conf/layer.conf
22	0	lib/layerindexlib/tests/testdata/layer4/conf/layer.conf

commit 8aeaabf13db645f33495e00b82117327e153d70a
Author: Mark Hatle <mark.hatle@windriver.com>
Date:   2018-07-23 22:29:10 -0400

    bblayers/layerindex.py: Fix addition of layers
    
    When a layer is added it needs to be in a list, otherwise the system will
    error such as:
    
        Specified layer directory / doesn't contain a conf/layer.conf file
    
    Additionally, instead of calling the add layer function over and over, it
    is better to add all of the new content in one command.  Otherwise the
    order is important as the system now checks if the layer can be added.  For
    instance, trying to add meta-python:
    
       Layer                Required by          Git repository                                          Subdirectory
       ===================================================================================================================
       meta-python          -                    git://git.openembedded.org/meta-openembedded            meta-python
       meta-oe              meta-python          git://git.openembedded.org/meta-openembedded            meta-oe
       openembedded-core    meta-python          git://git.openembedded.org/openembedded-core            meta
       Adding layer "meta-python" (.../oe-core/meta-openembedded/meta-python) to conf/bblayers.conf
       ERROR: Layer 'meta-python' depends on layer 'openembedded-layer', but this layer is not enabled in your configuration
    
    The system would try to add meta-python before the dependent meta-oe.  Adding
    them both at the same time resolves this issue.
    
    Signed-off-by: Mark Hatle <mark.hatle@windriver.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

9	6	lib/bblayers/layerindex.py

commit cfd1302031f3cca96300a0e445a47b1614ecd00c
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2018-07-31 12:43:54 +0000

    bblayers: Don't parse all recipes when calling add-layer
    
    When adding multiple layers in a chain of commands, reparsing all recipes
    each time can be painfully slow. Instead just parse the base configuration
    which gives some confidence things worked out correctly without as much
    overhead.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bblayers/action.py

commit da8cb8633504bdc815bdcefc538340b9bce5065d
Author: Alejandro Enedino Hernandez Samaniego <alejandro.enedino.hernandez-samaniego@xilinx.com>
Date:   2018-07-25 09:01:01 -0700

    bitbake: Add support for multiconfig dependencies
    
    This patch adds the capability for tasks from different
    multiconfigs to depend on one another.
    
    These dependencies can be enabled using the following format:
    
    task[mcdepends] = "multiconfig:FROM-MC:TO-MC:PN:task-to-depend-on"
    
    For the sake of simplicity consider the following example:
    
    Assuming we have set up multiconfig builds, one for qemux86 and one for
    qemuarm, named x86 and arm respectively.
    
    Adding the following line to an image recipe (core-image-sato):
    do_image[mcdepends] = "multiconfig:x86:arm:core-image-minimal:do_rootfs"
    
    Would state that core-image-sato:do_image from x86 will depend on
    core-image-minimal:do_rootfs from arm so it can be executed.
    
    This patch makes modifications to:
    - cooker: To glue both multiconfigs in one place and make sure
      the dependencies can be provided.
    - taskdata: To parse and add a new kind of dependency (mcdepends) to
      the taskdata object.
    - runqueue: To differentiate tasks from different multiconfigs,
      add the specified dependencies to the corresponding tasks, and
      create a working runqueue that contains tasks from both multiconfigs.
    - siggen: To avoid looking for tasks from different multiconfigs on
      objects where they dont belong.
    
    The taskdata objects are still not aware of the concept of multiconfig,
    so each object doesnt know which multiconfig its building, hence why
    the mcdepends are added to all taskdata objects equally (we really
    dont expect many of these), but the actual dependencies are added only
    to the required tasks by the runqueue.
    
    Signed-off-by: Alejandro Enedino Hernandez Samaniego <alejandr@xilinx.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	0	lib/bb/build.py
31	3	lib/bb/cooker.py
19	2	lib/bb/runqueue.py
11	2	lib/bb/siggen.py
17	1	lib/bb/taskdata.py

commit 5156b4bb6876dac636be9726df22c8ee792714dd
Author: Martin Jansa <martin.jansa@gmail.com>
Date:   2018-07-26 11:10:31 +0000

    codeparser: Track oe.utils.conditional usage
    
    * base_conditional was already removed from oe-core:
      http://git.openembedded.org/openembedded-core/commit/?id=0391fcad9103abca0796a068f957d0df63ab4776
      after the usage was migrated to oe.utils.conditional:
      http://git.openembedded.org/openembedded-core/commit/?id=c97acbd034532895ce57c6717ed1b3ccc7900b0d
      so we can handle just ".conditional" version
    
    * add 1st parameter to variable dependencies, that way when you use
      FOO = "${@oe.utils.conditional('VAR', 'VALUE', 'true', 'false')"
      FOO variable will have dependency on VAR variable and you don't need
      to add FOO[vardeps] += "VAR" manually every time you use
      oe.utils.conditional
    
    * this is similar to contains tracking from:
      https://bugzilla.yoctoproject.org/show_bug.cgi?id=3890
      http://git.openembedded.org/bitbake/commit/?id=ed2d0a22a80299de0cfd377999950cf4b26c512e
      http://git.openembedded.org/bitbake/commit/?id=0b9d117631ce909312d53b93289e61defc6be01c
      but conditional is simpler, we don't need to handle the first
      parameter as a set
    
    Signed-off-by: Martin Jansa <Martin.Jansa@gmail.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/cache.py
2	2	lib/bb/codeparser.py

commit bfedb4e85a84e817dbe5d8694b8f8fcdd6f2f22a
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2018-07-26 16:24:21 +0200

    utils: add optional callback to edit_bblayers_conf()
    
    Add a callback that lets you modify or remove items in addition to the
    current scheme where you can only add or remove. This enables you to for
    example replace a layer with a temporary copy (which is what we will use
    this for first in OE's oe-selftest).
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

14	1	lib/bb/utils.py

commit 1620dbc48ffb2a882371cf9174a7b12648befc8a
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2018-07-25 13:38:10 +0000

    server/process: Always place the server logfile in the build directory
    
    Currently the bitbake-cookerdaemon.log is placed into cwd. This seems like a
    bad idea, we can place it in the build directory alongside the lockfile that
    represents the server instead.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	2	lib/bb/server/process.py

commit 9876b5da1c65bf09a790542cb4057f2d93868cf7
Author: Joshua Watt <jpewhacker@gmail.com>
Date:   2018-07-06 10:42:00 -0500

    runqueue: Stop on first unsatisfied dependency
    
    Signed-off-by: Joshua Watt <JPEWhacker@gmail.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

4	3	lib/bb/runqueue.py

commit 91e5540f53aca93e3489255cfd95feaa0afd0498
Author: Joshua Watt <jpewhacker@gmail.com>
Date:   2018-07-06 10:41:59 -0500

    runqueue: Remove unused variable
    
    Signed-off-by: Joshua Watt <JPEWhacker@gmail.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

0	2	lib/bb/runqueue.py

commit b2fd783fa23403e8f08d998951b05bcabb458af1
Author: Joshua Watt <jpewhacker@gmail.com>
Date:   2018-07-06 10:41:58 -0500

    siggen: Delete trailing whitespace
    
    Signed-off-by: Joshua Watt <JPEWhacker@gmail.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	2	lib/bb/siggen.py

commit 9b9aecbbb1a3fa67f7d3b1669186c9f4ced3a590
Author: Joshua Watt <jpewhacker@gmail.com>
Date:   2018-07-06 10:41:57 -0500

    runqueue: Remove trailing whitespace
    
    Signed-off-by: Joshua Watt <JPEWhacker@gmail.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/runqueue.py

commit da37bdad46e11e7ce93ba7a59d58757b769dc16b
Author: Ming Liu <liu.ming50@gmail.com>
Date:   2018-06-29 17:43:23 +0200

    runqueue.py: Fix a virtual class extension stamps issue
    
    The file_name parameter passed to bb.parse.siggen.invalidate_task
    should be a virtual file name instead of a real file name, or else you
    will encounter a following error, for instance, when you run:
    
    $ bitbake nativesdk-lzip -c unpack -f
    
    the error arise:
    | ERROR: An uncaught exception occurred in runqueue
    | if file_name:
    |    > taintfn = d.stamp[file_name] + '.' + task + '.taint'
    | else:
    | KeyError: 'virtual:nativesdk:/opt/poky/meta/recipes-extended/lzip/lzip_1.19.bb'
    
    when multilib builds are used on OE.
    
    Signed-off-by: Ming Liu <liu.ming50@gmail.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/runqueue.py

commit 8efa7826a61501589afa33eb698c0ab3a622bf2e
Author: Nikolai Merinov <n.merinov@inango-systems.com>
Date:   2018-05-13 19:48:49 +0500

    fetch2: Use correct check in parameter handling in uri_replace()
    
    If uri_find contain parameters then original URI parameters should
    be checked against parameters from uri_find instead of parameters
    from uri_replace.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	2	lib/bb/fetch2/__init__.py
2	0	lib/bb/tests/fetch.py

commit 4937ed392fdc4442dd91f644f329dda29f27242c
Author: Scott Rifenbark <srifenbark@gmail.com>
Date:   2018-06-18 15:06:16 -0700

    bitbake-user-manual: Added "number_threads" varflag
    
    You can now limit on a task-specific basis the number of threads
    a task will use.  This is useful for machines that have high
    numbers of cores and need to be rate-limited due to various
    resource constraints.
    
    Signed-off-by: Scott Rifenbark <srifenbark@gmail.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

32	0	doc/bitbake-user-manual/bitbake-user-manual-metadata.xml

commit 055865047c63b9c3b213b47a1884924ce0adeda0
Author: Mark Hatle <mark.hatle@windriver.com>
Date:   2018-05-14 10:21:39 -0400

    runqueue.py: Initial implementation of per task process limits
    
    On high core machines, in do_fetch, it is possible to DDoS your own machine.
    A method to limit any arbitrary task type to a certain number of simultaneous
    threads is needed.  (Similar to how BB_NUMBER_THREADS works in the general
    case.)  The format of this new limitation is:
    
        do_fetch[number_threads] = "2"
    
    This should be set globally.  If it is set in individual recipes it could
    result in unpredictable behavior.
    
    Note: a value for number_threads > BB_NUMBER_THREADS will have no effect.
    
    Signed-off-by: Mark Hatle <mark.hatle@windriver.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

21	0	lib/bb/runqueue.py

commit 26d5ea9bb892bd6a2e1fd29a9023e0b0644edc16
Author: Mark Hatle <mark.hatle@windriver.com>
Date:   2018-05-14 10:21:38 -0400

    runqueue.py: Minor cleanup for RunQueueStats and users
    
    The RunQueueStats:taskCompleted and RunQueueStats:taskSkipped can take
    multiple arguments.  However, nowehere in bitbake are multiple arguments used.
    Change this to match the behavior of the other APIs where it needs to be
    called once for each task.
    
    Additionally, these two functions were usually called in tandem, however in
    the wrong order.  It really doesn't matter as there is no specific preemption
    point between the calls.  But the taskSkipped should be called first to
    increment the 'active' count, and then taskCompleted called to decrement it.
    
    Signed-off-by: Mark Hatle <mark.hatle@windriver.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

9	9	lib/bb/runqueue.py

commit efd5e35af4b08501c67e8b30f30d9457f6fdf610
Author: Andre McCurdy <armccurdy@gmail.com>
Date:   2018-06-05 12:13:50 -0700

    fetch2: unify the way fetchers determine DL_DIR and FETCHCMD
    
    Currently there is quite some variation between the fetchers in terms
    of how they determine the subdirectory within DL_DIR and the base
    fetch command to run. Some rely on variables being set externally
    (e.g. from bitbake.conf in oe-core), some respect these external
    variables but provide fallback defaults and some use only hardcoded
    internal values. Try to unify the approach used across the various
    fetchers.
    
    Signed-off-by: Andre McCurdy <armccurdy@gmail.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	2	lib/bb/fetch2/bzr.py
3	2	lib/bb/fetch2/cvs.py
1	1	lib/bb/fetch2/git.py
1	1	lib/bb/fetch2/hg.py
3	2	lib/bb/fetch2/osc.py
2	6	lib/bb/fetch2/perforce.py
7	5	lib/bb/fetch2/repo.py
3	2	lib/bb/fetch2/svn.py

commit 11b6a5d5c1b1bb0ce0c5bb3983610d13a3e8f84a
Author: Matt Hoosier <matt.hoosier@gmail.com>
Date:   2018-06-06 11:55:54 -0500

    fetch/gitsm: avoid live submodule fetching during unpack()
    
    Although the submodules' histories have been fetched during the
    do_fetch() phase, the mechanics used to clone the workdir copy
    of the repo haven't been transferring the actual .git/modules
    directory from the repo fetched into downloads/ during the
    fetch task.
    
    Fix that, and for good measure also explicitly tell Git to avoid
    hitting the network during do_unpack() of the submodules.
    
    [YOCTO #12739]
    
    Signed-off-by: Matt Hoosier <matt.hoosier@gmail.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

75	8	lib/bb/fetch2/gitsm.py

commit a6a4dd35e3fd112b9fac6fcefe61253a61b8aa2c
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2018-06-06 13:34:04 +0100

    bitbake: Update version to post release 1.39
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	bin/bitbake
1	1	lib/bb/__init__.py

commit bd9a1b063633af2936ba1dd87b19202424900151
Author: Tzu Hsiang Lin <t9360341@ntut.org.tw>
Date:   2018-05-22 01:56:44 +0800

    fetch2: fix import error for Python 3.6.5
    
    When running bitbake command with Python 3.6.5 always result in
    import error causing by the change of distutils module.
    This patch replaces the method to search executable in PATH by
    "/usr/bin/env <command>".
    
    Signed-off-by: Tzu Hsiang Lin <t9360341@ntut.org.tw>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	2	lib/bb/fetch2/clearcase.py
0	1	lib/bb/fetch2/npm.py

commit 7799b17e7ac748e3639e5ab1e59b9b9c2a047bf6
Author: Scott Rifenbark <srifenbark@gmail.com>
Date:   2018-05-18 15:49:14 -0700

    bitbake-user-manual: Updated copyright year on title page to 2018
    
    Signed-off-by: Scott Rifenbark <srifenbark@gmail.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	doc/bitbake-user-manual/bitbake-user-manual.xml

commit d822ae24ef5485e550804cbd9130ebd73b2aa48e
Author: Jakub Dębski <jdebski@enigma.com.pl>
Date:   2018-04-17 12:00:17 +0200

    fetch2/__init__.py: Fixed handling of uris with empty path
    
    For mirrors or premirrors defined like: "http://.*/.* http://somewhere.org"
    fetching ends with errors because function fetch2/__init__.py:encodeurl()
    creates url like "http://somewhere.orgsomefile.tar.gz".
    
    It happens because function fetch2/__init__.py:decodeurl()
    for url "http://somewhere.org" returns
    ['http', 'somewhere.org', '', '', '', {}]
    and then in function fetch2/__init__.py:uri_replace()
    variable result_decode will be
    ['http', 'somewhere.org', 'somefile.tar.gz', '', '', {}]
    (because of line: result_decoded[loc] = os.path.join(result_decoded[loc], basename))
    for which encodeurl returns "http://somewhere.orgsomefile.tar.gz".
    
    In addition for mirror "http://.*/.* http://somewhere.org/"
    everything works fine.
    
    Signed-off-by: Jakub Dębski <jdebski@enigma.com.pl>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/fetch2/__init__.py
5	1	lib/bb/tests/fetch.py

commit 61b0df5523afc8f805043f3adc9c106690e6f133
Author: Andre McCurdy <armccurdy@gmail.com>
Date:   2018-05-07 18:02:12 -0700

    fetch/git: make fewer calls to _contains_ref() from download()
    
    Updating a local git repo clone currently results in multiple calls
    to self._contains_ref(), some of which appear to be redundant and can
    be eliminated by minor tweaks to the logic in download().
    
    Also drop redundant calls to os.path.exists(ud.clonedir) before
    self.need_update(), since need_update() includes its own built-in
    check for the existance of ud.clonedir.
    
    Signed-off-by: Andre McCurdy <armccurdy@gmail.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

6	6	lib/bb/fetch2/git.py

commit 76b17ffcea5c7275c2f9735a058256ba909b1a75
Author: David Reyna <david.reyna@windriver.com>
Date:   2018-04-26 00:53:28 -0500

    toaster: add 'Sumo' to release selection
    
    Add Sumo (YP-2.5) to the release selection for new projects.
    
    [YOCTO #12713]
    
    Signed-off-by: David Reyna <david.reyna@windriver.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

21	5	lib/toaster/orm/fixtures/oe-core.xml
61	15	lib/toaster/orm/fixtures/poky.xml

commit 82ea737a0b42a8b53e11c9cde141e9e9c0bd8c40
Author: Mattias Hansson <mattias.hansson@axis.com>
Date:   2018-04-10 16:44:51 +0200

    lib/bb/utils: prevent movefile from changing dest dir permissions
    
    Prevent movefile from falsely setting the source file's owner and
    permissions on the destination directory instead of the destination
    file when moving between devices.
    
    This bug caused the last file moved into a directory to dictate the
    directory's owner and permissions.
    
    Signed-off-by: Mattias Hansson <mattias.hansson@axis.com>
    Signed-off-by: Peter Kjellerstedt <peter.kjellerstedt@axis.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	2	lib/bb/utils.py

commit 103bbc6642261cd5da038ba2071621919ee01253
Author: Scott Rifenbark <srifenbark@gmail.com>
Date:   2018-04-12 12:55:29 -0700

    bitbake-user-manual: Updated "Task Checksums and Setscene" section
    
    Fixes [#YOCTO 12030]
    
    Updated the "Task Checksums and Setscene" section to provide a bit
    of user information around the bitbake-dumpsigs use that lets a
    user examine signatures and inputs that determine if a do_compile
    task is indeed supposed to be run.
    
    Added more explanation of how a user can examine signatures used
    to determine if a do_compile task is indeed supposed to be run.
    
    Signed-off-by: Scott Rifenbark <srifenbark@gmail.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

46	28	doc/bitbake-user-manual/bitbake-user-manual-metadata.xml

commit 677e58f8616a4bf58772e54d2313af3885a3b110
Author: Scott Rifenbark <srifenbark@gmail.com>
Date:   2018-04-07 14:38:42 -0700

    bitbake-user-manual: Updated "OpenEmbedded-Core" term.
    
    Made sure that the terms "OpenEmbedded-Core" and "OE-Core"
    are used as such throughout the manual.
    
    Signed-off-by: Scott Rifenbark <srifenbark@gmail.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	doc/bitbake-user-manual/bitbake-user-manual-execution.xml
3	3	doc/bitbake-user-manual/bitbake-user-manual-ref-variables.xml

commit cca81e33b58c390dcf5cc3a31555a43b79177166
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2018-04-06 10:58:48 +0100

    cookerdata: Issue warning if layer doesn't set LAYERSERIES_COMPAT_x
    
    We'd like layers to set this variable so that we know which layers are compatible
    with which others, even if the branch is a generic un-updated "master" branch.
    
    Start printing a warning to highlight this issue.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	0	lib/bb/cookerdata.py

commit 256990943075e89cb9aee2bc6488344b6783e07b
Author: David Reyna <David.Reyna@windriver.com>
Date:   2018-02-15 20:26:02 -0800

    Toaster: fix shutdown and extra threads
    
    Fix typo in shutdown code to kill threads when "kill -0" is not enough.
    Use the '--noreload' flag for 'runserver' so that there are no extra
    and unaccounted threads.
    
    [YOCTO #12555]
    
    Signed-off-by: David Reyna <David.Reyna@windriver.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	2	bin/toaster

commit 132458939d3987ebc58685397714af3d6d5cd8fd
Author: David Reyna <David.Reyna@windriver.com>
Date:   2018-02-15 20:26:01 -0800

    toaster: do not fail on optional 'custom.xml' file
    
    Explicitly capture and ignore errors when trying to load the optional
    'custom.xml' fixture file.
    
    [YOCTO #12554]
    
    Signed-off-by: David Reyna <David.Reyna@windriver.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

4	1	lib/toaster/bldcontrol/management/commands/checksettings.py

commit 8212446de11c0e370c55f88cde86334b760cd939
Author: Ross Burton <ross.burton@intel.com>
Date:   2018-03-27 11:21:58 +0100

    fetch2/git: log exception if ls-remote fails
    
    Signed-off-by: Ross Burton <ross.burton@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	1	lib/bb/fetch2/git.py

commit 21098de09ee2f7a9f0b3f895bf2ffbdeb8c9ded5
Author: Ross Burton <ross.burton@intel.com>
Date:   2018-03-27 11:01:41 +0100

    tests/fetch: state which upstream failed
    
    Signed-off-by: Ross Burton <ross.burton@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	2	lib/bb/tests/fetch.py

commit 39d6a30a28f66c599e18beddbd847f40dcff623c
Author: Amanda Brindle <amanda.r.brindle@intel.com>
Date:   2018-03-05 11:11:52 -0800

    utils.py: Add option for explode_dep_versions2 to return unsorted
    
    Before, explode_dep_versions2 would sort the OrderedDict before
    returning. This function will still sort the OrderedDict by default, but
    will now have the option to return the OrderedDict unsorted. This option will
    allow us to check if the order of the package list has changed.
    
    Signed-off-by: Amanda Brindle <amanda.r.brindle@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	2	lib/bb/utils.py

commit 6138897de5ac6becf3bff56ce7a78f3ec208fcdf
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2018-03-03 23:28:08 +0000

    cooker: Fix environment double key expansion issue
    
    The base configuration needs key expansion and anon python execution,
    the parsed configurations do not. Fix this consistently, its been
    broken and causing double key expansion for a while, only relised
    when we started double anonymous python exeution too.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	3	lib/bb/cooker.py

commit bcdc2f73e3b4a10b1e479c2891f251d9507a9e30
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2018-03-02 18:17:05 +0000

    cooker: Run registered anonymous python before displaying environment
    
    The output of bitbake -e can differ from what actually is used due
    to anonymous python making changes to the data store. Execute any
    anonymous python added in the base configuration to make things
    more consistent.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	1	lib/bb/cooker.py

commit c6be487f9bd5d95915f2495d555b9f539adb1d44
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2018-03-02 18:16:33 +0000

    parse/ast: Abstract anonymous function execution into a function
    
    This allows us to call this code from other contexts without
    duplicating it.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

7	4	lib/bb/parse/ast.py

commit 4cfca360891e1ed876a9c19487b4f6210686af26
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2018-02-27 13:44:17 +0000

    runqueue: Ensure only recursive task dependencies are pruned
    
    If a standalone tasks adds a dependency on X:do_build, the code in runqueue would
    currently remove it if that do_build was part of an image recipe which uses
    recrdeptask on do_build.
    
    Such individual tasks shouldn't do this, therefore tweak the recursive reference code
    to only process recurseive tasks, not all tasks.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/runqueue.py

commit 34da85efb4cf76389f97d233571f79b733986ede
Author: Scott Rifenbark <srifenbark@gmail.com>
Date:   2018-02-20 11:18:58 -0800

    bitbake-user-manual: Added cross reference to "Layers" section.
    
    Signed-off-by: Scott Rifenbark <srifenbark@gmail.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

4	4	doc/bitbake-user-manual/bitbake-user-manual-hello.xml

commit 80de8c2369da5856b68458774ea63730063fcfa3
Author: Kristi Rifenbark <kristi@buzzcollectivemarketing.com>
Date:   2018-02-19 13:07:01 -0800

    bitbake-user-manual: Updated BitBake help output due to runall command-line options.
    
    Fixed [YOCTO #12547]
    
    Signed-off-by: Kristi Rifenbark <kristi@buzzcollectivemarketing.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

6	2	doc/bitbake-user-manual/bitbake-user-manual-intro.xml

commit 1cf084cee506574b7bb6ed03344597b3b2f2fe08
Author: Nicolas Cornu <nicolac76@yahoo.fr>
Date:   2018-02-09 08:42:07 -0800

    bitbake-user-manual: Added google-repo fetcher and REPODIR var.
    
    Added a new repo Fetcher section in the same spirit as the existing
    sections for other supported fetchers.  Changes included the new section,
    removal of the bulleted item that mentioned this fetcher as an
    "additional" fetcher, and the creation of a new variable in the glossary
    named REPODIR.
    
    Signed-off-by: Nicolas Cornu <nicolac76@yahoo.fr>
    Signed-off-by: Scott Rifenbark <srifenbark@gmail.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

37	3	doc/bitbake-user-manual/bitbake-user-manual-fetching.xml
10	0	doc/bitbake-user-manual/bitbake-user-manual-ref-variables.xml

commit 038a5f4b767df7944e73b2e859ac3af2d3a08bf1
Author: Robert Yang <liezhi.yang@windriver.com>
Date:   2018-02-08 12:29:38 +0800

    bitbake: toaster: don't use git fetch --all
    
    The '--all'' fetches all remotes, including the ones in $HOME/.gitconfig, which
    causes the fetching very slow, so don't use "--all", git fetch should be
    enough.
    
    Signed-off-by: Robert Yang <liezhi.yang@windriver.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/toaster/bldcontrol/localhostbecontroller.py

commit a335dbbb65d5b56e71d98cf3e4fa9bfbec1dcde6
Author: Nathan Rossi <nathan@nathanrossi.com>
Date:   2018-02-02 23:51:15 +1000

    fetch2: Handle missing donestamp file when content is valid
    
    In order to allow users to manually populate the download directory with
    valid content change the assumption that missing the donestamp file
    means unfetched content.
    
    This allows users to populate the download dir without needing to create
    dummy .done files such that a user does not need a PREMIRROR when using
    BB_NO_NETWORK to provide valid content files in the download directory.
    
    To ensure the correct result this change also fails first if the
    localpath does not exist. This prevents further parts of the function
    attempting to calculating the checksum on non-existent files. This also
    fixes some edge conditions around where if the donestamp exists but the
    localpath does not it returns, and did not remove the donestamp.
    
    Also added test cases to cover this use case and additional use cases
    where for example the fetcher does not support checksums.
    
    Signed-off-by: Nathan Rossi <nathan@nathanrossi.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

10	11	lib/bb/fetch2/__init__.py
104	0	lib/bb/tests/fetch.py

commit 545540420112992e53f4a83104af10452df168d0
Author: Böszörményi Zoltán <zboszor@pr.hu>
Date:   2018-02-04 09:36:15 +0100

    fetch2/npm.py: Fix inverted condition to prevent infinite loop
    
    At least the cli-color node module has dependencies that have
    cyclic dependency among themselves. npm.py is prepared to deal
    with such a case but the condition is handled only for downloading
    or not a dependency again, but then it goes checking the its
    dependency which causes an infinite loop in _getdependencies().
    Make this function simply return when a dependency is already
    downloaded and only download and check its dependencies when not.
    
    Signed-off-by: Zoltán Böszörményi <zboszor@pr.hu>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

5	3	lib/bb/fetch2/npm.py

commit 104572438dfedf6025fbfd125aef1d56134012e7
Author: Robert Yang <liezhi.yang@windriver.com>
Date:   2018-02-07 16:01:59 +0800

    contrib/dump_cache.py: make it can dump everything
    
    Have a simple tool to dump bb_cache.dat is useful for investigating and
    studying bitbake cache. The old contrib/dump_cache.py can dump pn, pv and
    packages for it, now enhance it dump everything.
    
    Here is the usage:
    $ /path/to/dump_cache.py --help
    usage: dump_cache.py [-h] [-r RECIPE] [-m MEMBERS] [-s] cachefile
    
    bb_cache.dat's dumper
    
    positional arguments:
      cachefile             specify bb_cache.dat
    
    optional arguments:
      -h, --help            show this help message and exit
      -r RECIPE, --recipe RECIPE
                            specify the recipe, default: all recipes
      -m MEMBERS, --members MEMBERS
                            specify the member, use comma as separator for
                            multiple ones, default: all members
      -s, --skip            skip skipped recipes
    
    Use dump_cache.py --help to get help
    
    Signed-off-by: Robert Yang <liezhi.yang@windriver.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

51	34	contrib/dump_cache.py

commit 4682571107323a39b42cd9ec8ee67419e7f15acc
Author: Robert Yang <liezhi.yang@windriver.com>
Date:   2018-02-01 23:15:27 +0800

    bitbake: parse: fixes for resolve_file()
    
    The resolve_file() calls mark_dependency(), so the one which calls
    resolve_file() doesn't need call mark_dependency() again.
    
    Signed-off-by: Robert Yang <liezhi.yang@windriver.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	1	lib/bb/parse/__init__.py
0	3	lib/bb/parse/parse_py/BBHandler.py
0	3	lib/bb/parse/parse_py/ConfHandler.py

commit c8d3a2016f432e8ed9e99d9c28850149ab6fd6d8
Author: Robert Yang <liezhi.yang@windriver.com>
Date:   2018-02-01 23:15:26 +0800

    bitbake: cache: improve debug message
    
    * Print message when cachefile is found/not can help debug.
    * Update "Using cache in" to "Cache dir:" since it was the same as the debug
      message of "codeparser & file checksum caches", which caused confusion. And
      whether the cache file will be used or not is still unknown at that time, so
      just print the cache dir.
    
    Signed-off-by: Robert Yang <liezhi.yang@windriver.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

4	1	lib/bb/cache.py

commit a6a641cb9c5f3abe901b150da915372e295383d7
Author: Robert Yang <liezhi.yang@windriver.com>
Date:   2018-02-01 23:15:24 +0800

    bitbake: cooker: don't stop file notifier when cooker is shutdown
    
    It should be live/exited with server rather than cooker, fixed:
    $ bitbake --server-only -T -1
    Set MACHINE = "qemux86" in conf/local.conf
    $ bitbake quilt
    Set MACHINE = "qemuppc" in conf/local.conf
    $ bitbake quilt
    [snip]
    ERROR: When reparsing /workspace1/lyang1/poky/meta/recipes-connectivity/openssl/openssl_1.0.2m.bb.do_package, the basehash value changed from c216f7f4fdd3cf4a0b10b975a636426c to d5a8e9431ab261381752d7a64c7b2fa9. The metadata is not deterministic and this needs to be fixed.
    [snip]
    
    This is because the server doesn't know local.conf is changed since the
    notifiers are stopped, so it doesn't reparse, and then we would get the errors,
    let the notifiers live/exited with server can fix the problem.
    
    Signed-off-by: Robert Yang <liezhi.yang@windriver.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

0	2	lib/bb/cooker.py
2	0	lib/bb/server/process.py

commit ec90245d28e52ea718d2ce084eb304cdc4355c9c
Author: Robert Yang <liezhi.yang@windriver.com>
Date:   2018-02-01 23:15:23 +0800

    bitbake: cooker: fix for BBFILE_PATTERN matches bbappend
    
    The old code couldn't handle nestled layers correctly, e.g.:
    parent_layer/sub_layer/foo.bb
    
    Note there are two layers, parent_layer and sub_layer.
    And in parent_layer/conf/layer.conf:
    BBFILE_PATTERN_parent_layer = ""^${LAYERDIR}/"
    
    This setting is incorrect since it also matches parent_layer/sub_layer/foo.bb,
    so it warns that no files matched sub_layer, this is the expected behavior, but
    it doesn't warn when there is a parent_layer/sub_layer/bar.bbappend, this was
    incorrect since the bbappend is also matched by BBFILE_PATTERN_parent_layer, it
    should warn and let the user fix the problem. Check the bbappend in already
    "matched set" before return it as matched by "unmatched set" can fix the problem.
    
    Signed-off-by: Robert Yang <liezhi.yang@windriver.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

7	3	lib/bb/cooker.py

commit b7da31641c24c53d47ea45a7119d1bd353011b39
Author: Robert Yang <liezhi.yang@windriver.com>
Date:   2018-02-01 23:15:22 +0800

    bitbake: cooker: skip when BBFILE_PATTERN is empty
    
    There is nothing to do when BBFILE_PATTERN is empty.
    
    Signed-off-by: Robert Yang <liezhi.yang@windriver.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	0	lib/bb/cooker.py

commit 6b508ab8fd5aa796c1c00c970e81e5e93f84d35d
Author: Nathan Rossi <nathan@nathanrossi.com>
Date:   2018-02-03 00:04:30 +1000

    fetch/git: Use 'git-make-shallow' from bin directory
    
    Move the code that existed in tests/fetch.py for determining the path to
    'git-make-shallow' into the git module and reference it.
    
    This ensures that 'git-make-shallow' is always available and the desired
    version regardless of the path variable or whether git exposes the
    command.
    
    Signed-off-by: Nathan Rossi <nathan@nathanrossi.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

4	1	lib/bb/fetch2/git.py
1	4	lib/bb/tests/fetch.py

commit 546a662c877b2d3af35e3996950582ed2df41fe4
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2018-02-09 09:21:00 +0000

    main/runqueue: Rework runall task and add runonly option
    
    The runall commandline option was confusing people. There are in fact two
    different behaviours people may want.
    
    a) For a given target (or set of targets) look through the task graph and
    run task X only if its present and would have been built.
    
    b) For a given target (or set of targets) look through the task graph and
    run task X if any recipe in the taskgraph has such a target even if it wasn't
    in the original task graph.
    
    I've decided to interpret the existing "runall" option as b), even if right
    now if behaves like a). For a), which is a valid use case, this patch adds
    a "runonly" option.
    
    With both behaviours present, I'm hoping we can then kill off the "fetchall",
    "checkuriall" and other tasks from OE metadata and replace them with this
    option. This would significantly speed up task graph processing.
    
    (Deleting the checkuriall and fetchall tasks takes "bitbake core-image-sato -g"
    from 22s to 8s).
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	1	lib/bb/cookerdata.py
6	2	lib/bb/main.py
38	11	lib/bb/runqueue.py

commit b2642e4d5adc765b205e73fee65da679add33ed0
Author: Kristi Rifenbark <kristi@buzzcollectivemarketing.com>
Date:   2018-02-02 12:24:02 -0800

    bitbake-user-manual: Commented out Placeholder Paragraph
    
    Fixes [YOCTO #12030]
    
    Signed-off-by: Kristi Rifenbark <kristi@buzzcollectivemarketing.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

7	2	doc/bitbake-user-manual/bitbake-user-manual-metadata.xml

commit eba738ac5672556eaab4f3374c8025c322761c4a
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2018-01-28 10:36:06 +0000

    runqueue: Rewrite and optimize recrdepends handling
    
    This is a performance sensitive piece of code and the shear number
    of recursive loops is causing a significant and unscalable performance
    pain point.
    
    This change moves to a two step approach, firstly generating a list of recursive
    dependencies for any task, then applying this to the recursive tasks, iterating
    over things until no further dependencies are added.
    
    It was noticed an optimisation is possible and the list of recursive tasks need not
    contain the taskname, only the base task id. This allows a significant performance
    improvement and limits the size of the resursive task lists, improving speed.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

83	51	lib/bb/runqueue.py

commit 4ad281224e92b5f94e3a9c17e8898ec8f1086cdc
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2018-01-26 11:50:55 +0000

    runqueue: Optimize recrdepends handling
    
    We can optimise the loops slightly so we only process given substrings
    once rather than many times. This means expanding out add_resolved_dependencies.
    
    Also add a function which allows replacement of the task element of a
    task id, reducing the amount of string handling we're doing in a performance
    critical loop.
    
    Its also clear that later code adds to the tasks depends so we don't need
    to add .depends() to extradeps at the start.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

13	10	lib/bb/runqueue.py

commit 7e56c285f5ebae9b4b367514e60e3a6ba8cd5693
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2018-01-28 10:43:08 +0000

    runqueue: Remove unused variables
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

0	2	lib/bb/runqueue.py

commit aec2f07d56a19b97b6515897532b113cdead8338
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2018-01-25 14:06:35 +0000

    runqueue: Fix recidepends handling
    
    Currently we only run through the recidepends/recrdepends code once. This
    means that we can miss some expansions of dependency trees where one
    rec{r,i}depends tasks depends on another rec{r,i}depends task.
    
    In reality we need to iterate over the data until we stop adding
    dependencies.
    
    In doing this we can't show quite so granular progress information since
    we don't know how many times we'll need to do this.
    
    This does slow down the runqueue prepare phase however some optimisations
    are possible and can be handled in subsequent patches.
    
    This fix means some missing dependencies, such as:
    
    <image>:do_fetchall -> <image>:do_rootfs -> <pkgs>:do_package_write_X
      -> <ca-certs>:do_package_write_X -> debianutils-native
    (via PAKAGE_WRITE_DEPS)
    
    are now found/added.
    
    [YOCTO #12510]
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

51	41	lib/bb/runqueue.py

commit f8126aaf774186a6eaf0bd4067b89c074594886c
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2018-01-28 10:28:54 +0000

    fetch/git: Add pack-refs command to mirror handling code
    
    We've noticed issues on our infrastucture iterating over the many
    tag/branch/head reference files that some git repositories may contain.
    
    By issuing the pack-refs command, we move these all to a single file
    which speeds up operations with the mirror repos in the downloads
    directory in general.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	0	lib/bb/fetch2/git.py

commit 5f7c6ec785f70beb1a4a1bbc0eb83cfa6cd7740d
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2018-01-26 22:35:13 +0000

    cooker: Sort task graph (dot) file output
    
    This means two different graph files can easily be compared, currently
    you'd have to sort them as the output is randomized.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

6	6	lib/bb/cooker.py

commit a783bd7e457f183a279dbe5a4ef3d4c17bb4c18c
Author: Kristi Rifenbark <kristi.rifenbark@gmail.com>
Date:   2017-12-22 11:37:47 -0800

    bitbake-user-manual: Removed stray parenthesis
    
    Fixes [YOCTO #12016]
    
    Signed-off-by: Kristi Rifenbark <kristi.rifenbark@gmail.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	doc/bitbake-user-manual/bitbake-user-manual-hello.xml

commit bc5b2e7e7fab53ee9ee0db762de822bb88062419
Author: Kristi Rifenbark <kristi.rifenbark@gmail.com>
Date:   2017-09-25 15:58:45 -0700

    bitbake-user-manual: Updated Hello World tutorial
    
    Fixes [YOCTO #12016]
    
    Signed-off-by: Kristi Rifenbark <kristi.rifenbark@gmail.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

21	3	doc/bitbake-user-manual/bitbake-user-manual-hello.xml

commit ec0331cc039ab514d719ed34cec7a0a351c8d52b
Author: Kristi Rifenbark <kristi.rifenbark@gmail.com>
Date:   2017-06-16 14:20:00 -0700

    bitbake-user-manual: Replaced bad link
    
    Fixes [YOCTO #11675]
    
    There was a "hambedded" link that was broken. The link was
    intended to show the bitbake.conf file. I replaced it
    with the link to show the actual bitbake.conf file.
    
    Signed-off-by: Kristi Rifenbark <kristi.rifenbark@gmail.com>
    Signed-off-by: Scott Rifenbark <srifenbark@gmail.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

13	13	doc/bitbake-user-manual/bitbake-user-manual-hello.xml

commit da671cb4df0e1a00746c3e4ee94a4068fb5d9692
Author: Scott Rifenbark <srifenbark@gmail.com>
Date:   2017-10-24 12:32:42 -0700

    bitbake-user-manual: Updated copyright year.
    
    Signed-off-by: Scott Rifenbark <srifenbark@gmail.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	doc/bitbake-user-manual/bitbake-user-manual.xml

commit 3e2a6f2a820482c360b66af777d9a38734b56c92
Author: Scott Rifenbark <srifenbark@gmail.com>
Date:   2017-10-17 16:58:17 -0700

    bitbake-user-manual: Updated 'bitbake -h' output example.
    
    Signed-off-by: Scott Rifenbark <srifenbark@gmail.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

25	22	doc/bitbake-user-manual/bitbake-user-manual-intro.xml

commit 28720c85e64a56677b71d2170a0a07901d52b180
Author: Scott Rifenbark <srifenbark@gmail.com>
Date:   2017-10-17 14:44:37 -0700

    bitbake-user-manual: Updated "Events" for BuildStarted event
    
    BitBake now fires off one "BuildStarted" event per configuration when
    it is configured for multiple configurations (multiconfig).  I updated
    the bullet item for "bb.envent.BuildStarted()" to indicate that
    behavior.
    
    Signed-off-by: Scott Rifenbark <srifenbark@gmail.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	0	doc/bitbake-user-manual/bitbake-user-manual-metadata.xml

commit ceaca281cafa662aa2385b95641bce309dce843d
Author: Peter Kjellerstedt <peter.kjellerstedt@axis.com>
Date:   2014-02-20 15:55:51 +0100

    fetch2/__init__: Disable pseudo in runfetchcmd()
    
    If a fetcher, e.g., git, is run when pseudo is active it will think it
    is running as root. If it in turn uses ssh (as git does), ssh too will
    think it is running as root. This will cause it to try to read root's
    ssh configuration from /root/.ssh which will fail. If ssh then needs to
    ask for credentials it will hang indefinitely as there is nowhere for it
    to ask the user for them (and even if there was it would not access the
    correct private keys).
    
    The solution to the above is to temporarily disable pseudo while
    executing any fetcher commands. There should be no reason for them to be
    executed under pseudo anyway so this should not be a problem.
    
    RP Ammendum:
    
    We finally did get more information about how to reproduce this problem,
    something needs to trigger bb.fetch2.get_srcrev() in a pseudo context,
    for example when AUTOREV is in use or the recipe doesn't have a defined
    SRCREV. That SRC_URI needs to be using protocol=ssh. This would trigger
    an ls-remote of the remote repo and if that happens under pseudo, the
    wrong ssh credentials may be attempted which can hang.
    
    [YOCTO #12464]
    
    Signed-off-by: Peter Kjellerstedt <peter.kjellerstedt@axis.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	0	lib/bb/fetch2/__init__.py

commit bd4b9e4460b60f142c3bf346fb04e360e512eaee
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2018-01-07 11:56:25 +0000

    events: Drop unused cfg property
    
    The cfg property on events doesn't add much, all code appears to access
    "data" at this point. Remove it to clean up the interface.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

0	9	lib/bb/event.py

commit 643eacb162b8710330ef292bfda21cfeab97f95c
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2018-01-07 11:48:43 +0000

    tests/fetch: Allow bit/bitbake-selftest to function correctly
    
    Without this the paths to git-make-shallow are incorrect and cause test
    failures if bitbake isn't executed from cwd or PATH.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/tests/fetch.py

commit ee5fe4431713b8a29bdb424a29460965374b3234
Author: Jair Gonzalez <jair.de.jesus.gonzalez.plascencia@linux.intel.com>
Date:   2017-08-16 15:59:41 -0500

    tests/event: tests: Add event classes test class
    
    This change adds EventClassesTest class to bb/tests/event.py,
    including 47 new test cases for the public interfaces of the
    bitbake event and related helper classes.
    
    [YOCTO #10773]
    
    Signed-off-by: Jair Gonzalez <jair.de.jesus.gonzalez.plascencia@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

499	0	lib/bb/tests/event.py

commit a8cac827dd15227a3940ea25c673d91b5e2c2a75
Author: Jair Gonzalez <jair.de.jesus.gonzalez.plascencia@linux.intel.com>
Date:   2017-08-15 17:37:55 -0500

    tests/event: Remove empty assignments from event tests
    
    Remove assignments from non-returning calls.
    
    Signed-off-by: Jair Gonzalez <jair.de.jesus.gonzalez.plascencia@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

4	4	lib/bb/tests/event.py

commit daa59a2057c811b20d75235526ac6c2079ac6e10
Author: Jair Gonzalez <jair.de.jesus.gonzalez.plascencia@linux.intel.com>
Date:   2017-08-14 19:19:05 -0500

    tests/event: Add test for bb.event.worker_fire
    
    Test the triggering of bb.event.worker_fire callback.
    
    Signed-off-by: Jair Gonzalez <jair.de.jesus.gonzalez.plascencia@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

8	0	lib/bb/tests/event.py

commit 4a19dde704fd0bf262ea991ef530f991a4897d31
Author: Jair Gonzalez <jair.de.jesus.gonzalez.plascencia@linux.intel.com>
Date:   2017-08-14 16:04:19 -0500

    tests/event: Include tests for event filtering features
    
    This change includes unit tests for the following functions,
    helper class and methods in bitbake.event:
    
    - set_eventfilter(func)
    - set_UIHmask(handlerNum, level, debug_domains, mask)
    - getName(e)
    - class UIEventFilter(object)
        def __init__(self, level, debug_domains)
        def update(self, eventmask, level, debug_domains)
        def filter(self, event)
    
    [YOCTO #10773]
    
    Signed-off-by: Jair Gonzalez <jair.de.jesus.gonzalez.plascencia@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

111	9	lib/bb/tests/event.py

commit dcd58d351c0478ba7b9fe6c0e5b6a97098c1eb21
Author: David Reyna <David.Reyna@windriver.com>
Date:   2017-12-30 22:56:18 -0800

    toaster: corrupted patch for bldcollector URL file
    
    Fix a fatal error introduced by a corrupted patch file
    submission.
    
    [YOCTO #12459]
    
    Signed-off-by: David Reyna <David.Reyna@windriver.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/toaster/bldcollector/urls.py

commit b7a81cb91e82ba64b63c9153dc161a2ab4696715
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2017-12-19 12:38:20 +0000

    build.py: Don't return dependencies for tasks which don't exist
    
    If for example you deltask do_build but it has recrdeps set, its confusing
    to have that list returned when the task no longer exists (same would apply
    to deps too  if it was set after the deltask).
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

6	0	lib/bb/build.py

commit 2d14d6004b6add5ce07295fff1144ade2e54e1c9
Author: David Reyna <David.Reyna@windriver.com>
Date:   2017-11-30 00:55:28 -0800

    toaster: add 'nobuild' option to Toaster
    
    Add a 'nobuild' option for starting Toaster without the project
    and hosted builds support. This allows a Toaster host to provide
    local build statistics without opening the host to external users
    building projects.
    
    [YOCTO #12315]
    
    Signed-off-by: David Reyna <David.Reyna@windriver.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

14	5	bin/toaster
4	0	lib/toaster/toastergui/templates/base.html
2	0	lib/toaster/toastergui/templates/landing.html
34	23	lib/toaster/toastergui/views.py
4	0	lib/toaster/toastergui/widgets.py

commit d0358432ca9dd3deef623f6d0585d99d23b3aede
Author: David Reyna <David.Reyna@windriver.com>
Date:   2017-11-30 00:55:27 -0800

    toaster: landing page show cmdline capture
    
    The Toaster initial landing page needs to show that it still has
    the command line build capture support in addition to the new
    project support.
    
    [YOCTO #12316]
    
    Signed-off-by: David Reyna <David.Reyna@windriver.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

7	1	lib/toaster/toastergui/templates/landing.html

commit b4717888c55681a49803c4842140af644a5cdc71
Author: David Reyna <David.Reyna@windriver.com>
Date:   2017-11-30 00:55:26 -0800

    toaster: enable custom env support for shell calls
    
    Allow for custom environment additions for git cloning, for example
    for anspass support.
    
    [YOCTO #12193]
    
    Signed-off-by: David Reyna <David.Reyna@windriver.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

15	11	lib/toaster/bldcontrol/localhostbecontroller.py

commit 567f072ff260614cde3da220a40a95d5a8b9ab92
Author: David Reyna <David.Reyna@windriver.com>
Date:   2017-11-30 00:55:25 -0800

    toaster: some recipe events do not include packages
    
    Allow for "SinglePackageInfo" events that do not include package data,
    for example OPKGN equal 'lib32-*' or 'lib64-*'.
    
    [YOCTO #12204]
    
    Signed-off-by: David Reyna <David.Reyna@windriver.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

5	1	lib/bb/ui/buildinfohelper.py

commit 1b34e3c0075b4bb8a4800fef3e12c3f39743973c
Author: David Reyna <David.Reyna@windriver.com>
Date:   2017-11-30 00:55:24 -0800

    toaster: update Toaster for Django 1.11
    
    Toaster needs to accomodate API changes in Django 1.11.
    
    [YOCTO #12192]
    
    Signed-off-by: David Reyna <David.Reyna@windriver.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/toaster/bldcollector/urls.py
1	1	lib/toaster/toastergui/urls.py
1	1	lib/toaster/toastergui/views.py
1	1	lib/toaster/toastermain/settings.py
1	1	lib/toaster/toastermain/urls.py
1	1	toaster-requirements.txt

commit 21dde782c049108dd9455ffbf431de214437e800
Author: David Reyna <David.Reyna@windriver.com>
Date:   2017-11-30 00:55:23 -0800

    toaster: unset BBPATH before starting bbserver for backwards compatibility
    
    The latest build enviroment script is now setting BBPATH. This breaks
    building previous releases from a master-based Toaster, because with this
    newly inherited BBPATH value the 'bitbake.lock' file ends up in the
    Toaster build directory instead of the project's build directory.
    
    Toaster should always clear BBPATH so that the bbserver's environment
    is clean (enough).
    
    [YOCTO #12363]
    
    Signed-off-by: David Reyna <David.Reyna@windriver.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

12	6	lib/toaster/bldcontrol/localhostbecontroller.py

commit ebce92bf8d71f8a6e8af1c6cf6ba335faf9d67c8
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2017-12-10 22:31:24 +0000

    providers: Fix determinism issue
    
    We saw builds where runtime providers were sometimes changing order and the
    build result was therefore non-deterministic. For example it could show:
    
    DEBUG: providers for lib32-initd-functions are: ['lib32-lsbinitscripts', 'lib32-initscripts']
    or
    DEBUG: providers for lib32-initd-functions are: ['lib32-initscripts', 'lib32-lsbinitscripts']
    
    which could cause a test to pass or fail.
    
    This change ensures we don't rely on the random order of dictonaries in
    memory and act deterministically.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	3	lib/bb/providers.py

commit 2ba8a6b25ccc12e7b543e8450121e5311c7a701d
Author: André Draszik <git@andred.net>
Date:   2017-11-16 09:21:44 +0000

    fetch2: fix unpack of .txz files
    
    .txz is the same as .tar.xz, and can be found in the wild.
    
    Signed-off-by: André Draszik <git@andred.net>
    Signed-off-by: Ross Burton <ross.burton@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/fetch2/__init__.py

commit 8c487176d311557031cedba76185f14f0e7a14cd
Author: Ross Burton <ross.burton@intel.com>
Date:   2017-11-03 12:38:45 +0000

    fetch/wget: use with to ensure the response is closed
    
    Signed-off-by: Ross Burton <ross.burton@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	1	lib/bb/fetch2/wget.py

commit 7b072ef91d16331eae11bd60f229ce1f0c175995
Author: Ross Burton <ross.burton@intel.com>
Date:   2017-11-07 14:49:17 +0000

    fetch/wget: improve proxy object
    
    The connection cache class uses a dummy file object but it doesn't have a closed
    attribute, so we can't use it in a context manager.
    
    Signed-off-by: Ross Burton <ross.burton@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	0	lib/bb/fetch2/wget.py

commit 80f72ac6c56ba8f3e2f7b5f0cb95bee6c0101323
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2017-11-08 15:20:28 +1300

    cooker: fix typo in bitbake -g message
    
    Flatened -> flattened.
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/cooker.py

commit 431e89e322850a2497157c3c0843da9df6bc9a3e
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2017-11-08 15:20:27 +1300

    tinfoil: ensure get_recipe_info() returns Null if recipe not found
    
    If a matching recipe is not found then return Null instead of raising
    KeyError because we were blindly using None as a key for pkg_fn.
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

10	7	lib/bb/tinfoil.py

commit 1060955c4aa2ef66cdb4f0549f9bd8c1c332673c
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2017-11-08 15:17:08 +1300

    bitbake-layers: show-recipes: fix help to mention -i supports multiple classes
    
    The -i option supports more than one class, but the help didn't mention
    that.
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bblayers/query.py

commit 2f2033836a5ce4064d9e4f263788a563001bc008
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2017-11-08 15:17:07 +1300

    bitbake-layers: remove-layer: support removing multiple layers at a time
    
    If you can add multiple layers at once, it stands to reason that you
    should also be able to remove more than one at a time.
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

12	9	lib/bblayers/action.py

commit ad6b14f01aa326a1c6baa31bfac33be238bce805
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2017-11-08 15:17:06 +1300

    bitbake-layers: add-layer: enable adding multiple layers at once
    
    Allow specifying multiple layers with bitbake-layers add-layer so that
    you can add more than one in a single command. This is not just useful,
    it's actually pretty important if you need to add a layer and its
    dependencies at the same time - since we now go through a parse process
    when the layer is added, without this you have to add them all in just
    the right order and wait for the parse each time which is somewhat
    painful.
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

13	11	lib/bblayers/action.py

commit 1e59ae8729513e19a801c723b67911491c2a66fe
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2017-11-11 12:19:11 +0000

    runqueue: Fix typo builable -> buildable
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	2	lib/bb/runqueue.py

commit af7d63b1f76fd3f7fa92ed15ae61ca47d9e13472
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2017-11-08 14:04:50 +0000

    tinfoil: Ensure we clean up loggers
    
    This is primarily paranoid but ensure we remove any loggers we setup
    either directly or indirectly so the initial state is restored after
    we exit.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

8	2	lib/bb/tinfoil.py

commit 25b7bf6672be66bcbfe5760610dce7d3e866cdcc
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2017-11-08 14:03:59 +0000

    event: Ensure we clean up loggers
    
    Whilst we're likely exiting in this case, clean up the loggers we add
    so that in the case of certain server retries there is no possibility
    multiple loggers stack up.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

4	0	lib/bb/event.py

commit e1e8565b5e19dd3f7ef6e7e41932456adaa3df81
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2017-11-07 14:30:55 +0000

    tests/fetch: Add ftp test url
    
    Add in a tets ftp url so we ensure ftp urls contnue to work after the loss
    of the ftp.gnu.org ones.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	0	lib/bb/tests/fetch.py

commit c4c4465b32e82d4b6e46a44e776be5039aef6b18
Author: Ross Burton <ross.burton@intel.com>
Date:   2017-11-03 11:48:36 +0000

    tests/fetch: use subtests in the wget tests
    
    As we test multiple URLs in this these tests and one failing abandons the test,
    use subtests so all URLs are tested. This should help us identify patterns in
    the failing URLs.
    
    Signed-off-by: Ross Burton <ross.burton@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

10	8	lib/bb/tests/fetch.py

commit 892a08245ddb21a464aeb37d3e32377e99dd7e2b
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2017-11-05 23:51:16 +0000

    tests/fetch: Switch gnu.org urls from ftp -> http/https
    
    The ftp server at ftp.gnu.org is likely to be retired at some point soon
    so siwtch over to the http/https services.
    
    This means bitbake-selftest doesn't have ftp test urls, however finding stable
    ftp test servers is proving increasingly hard.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	3	lib/bb/tests/fetch.py

commit f8e027d26603db2f1fe757dca767ea35d95174c7
Author: Oleksandr Andrushchenko <oleksandr_andrushchenko@epam.com>
Date:   2017-10-23 09:13:00 +0300

    fetch2: Fix missing logger import in repo fetcher
    
    After cleaning deprecated API usage repo fetcher is missing
    logger as it was indirectly imported via deprecated bb.data.
    Fix this by importing logger directly.
    
    Fixes: 9752fd1c10b8 ("fetch2: don't use deprecated bb.data APIs")
    
    Signed-off-by: Oleksandr Andrushchenko <oleksandr_andrushchenko@epam.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	0	lib/bb/fetch2/repo.py

commit d72c1a91c261d78004d80e2fe5634f0e5f1ef947
Author: Mark Hatle <mark.hatle@windriver.com>
Date:   2017-11-01 20:01:08 -0400

    bitbake-layers: Add support for multiple recipes at once
    
    bitbake-layers show-recipes and show-appends supported listing all recipes
    or one recipe.  Adjust the system to permit specifying more then one recipe.
    
    Also update show-appends to match the --help description and support file
    style wildcards for selecting the recipe to display.
    
    Signed-off-by: Mark Hatle <mark.hatle@windriver.com>
    Signed-off-by: Ross Burton <ross.burton@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

16	5	lib/bblayers/query.py

commit 286dce008d6e0bd3121393b28ca02de1385519fb
Author: Ross Burton <ross.burton@intel.com>
Date:   2017-10-10 17:26:30 +0100

    bitbake: be more explicit when warning about locale choice
    
    Signed-off-by: Ross Burton <ross.burton@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	bin/bitbake
1	2	bin/bitbake-worker

commit cc420f430b1dafd9ca944bea259a564aaab34595
Author: Ross Burton <ross.burton@intel.com>
Date:   2017-11-03 11:44:35 +0000

    tests/fetch: skip network tests the idiomatic way
    
    Instead of not even having the test functions if network tests are disabled, use
    a custom decorator to mark the network tests and skip them.
    
    Signed-off-by: Ross Burton <ross.burton@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

222	212	lib/bb/tests/fetch.py

commit 562f9ee674a8b392437096422b9cceab9c3cba2e
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2017-10-21 12:50:07 +0100

    main: Give a user readable error if we can't locate topdir
    
    Currently if you run bitbake in an invalid directory, the user experience
    is poor:
    
    birbake/lib/bb/main.py", line 427, in setup_bitbake
        topdir, lock = lockBitbake()
      File "./bitbake/lib/bb/main.py", line 494, in lockBitbake
        lockfile = topdir + "/bitbake.lock"
    TypeError: unsupported operand type(s) for +: 'NoneType' and 'str'
    
    This ensures we exit straight away with a better error message.
    
    [YOCTO #12163]
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

8	0	lib/bb/main.py

commit d02e90db32e7ee341c2ba3be79b0627d8796bdd6
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2017-10-19 16:32:21 +1300

    cooker: fix watching directories with Python 3.6+
    
    In Python 3.6, glob.glob() was reimplemented to use os.scandir() (which
    itself appeared in Python 3.5), thus our monkey patching of os.listdir()
    here was no longer effective. The end result was not only that bitbake
    wouldn't notice added recipes or bbappends with BB_SERVER_TIMEOUT set
    when being run with Python 3.6 (the shipped Python version on Fedora 26
    and some other distribution versions), it also broke devtool modify,
    devtool upgrade and devtool extract since they rely on the ability to
    create a bbappend on the fly and have bitbake pick it up.
    
    To fix it, do the same monkey patching for os.scandir(), which needs to
    be conditional upon that actually existing since we have to support
    Python 3.4 that doesn't have it. Long term we should probably look for a
    better way to handle this that doesn't involve monkey patching Python
    library code.
    
    Fixes [YOCTO #12185].
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

11	1	lib/bb/cooker.py

commit 2a686d87a991089ad4e1fc12522d5c93919a221f
Author: Khem Raj <raj.khem@gmail.com>
Date:   2017-10-28 01:33:17 -0700

    bitbake: Update version to 1.37.0 for development
    
    Signed-off-by: Khem Raj <raj.khem@gmail.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	bin/bitbake
1	1	lib/bb/__init__.py

commit 83834a58b6c1ec866967c03494b9a7f4d5f1177e
Author: Khem Raj <raj.khem@gmail.com>
Date:   2017-10-28 01:29:56 -0700

    bitbake: Update version to 1.36.0 for stable release
    
    Signed-off-by: Khem Raj <raj.khem@gmail.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	bin/bitbake
1	1	lib/bb/__init__.py

commit be393f247a08c0a4a50a6a76b8fd57f78295d2a1
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2017-10-10 11:01:38 +0100

    toaster/highlight.pack.js: Fix corrupted file
    
    The newly added file in the last commit was corrupted, fix it.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/toaster/toastergui/static/js/highlight.pack.js

commit 6361698819530382541506b06a61f2c76dde59cb
Author: David Reyna <David.Reyna@windriver.com>
Date:   2017-10-09 20:31:40 -0700

    toaster: Remove prettify
    
    Remove "prettify.js" and "prettify.css" due to license issues with Apache2.
    Replace with "highlight.pack.js" with its BSD3 License.
    
    [YOCTO #12206]
    
    Signed-off-by: Jason Wessel <jason.wessel@windriver.com>
    Signed-off-by: Brian Avery <brian.avery@intel.com>
    Signed-off-by: David Reyna <david.reyna@windriver.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

0	1	lib/toaster/toastergui/static/css/prettify.css
2	0	lib/toaster/toastergui/static/js/highlight.pack.js
2	4	lib/toaster/toastergui/static/js/libtoaster.js
0	28	lib/toaster/toastergui/static/js/prettify.js
1	1	lib/toaster/toastergui/templates/base.html
1	1	lib/toaster/toastergui/templates/js-unit-tests.html

commit 28249c42701f9156a0b3153d72d7e46dacab37cb
Author: Leonardo Sandoval <leonardo.sandoval.gonzalez@linux.intel.com>
Date:   2017-10-06 08:10:43 -0700

    README: new readme file including main aspects of the project
    
    Includes brief description of the project, pointers to website, documentation,
    mailing list and source code.
    
    Signed-off-by: Leonardo Sandoval <leonardo.sandoval.gonzalez@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

35	0	README

commit 6775e2de9067d8f472d7bfb5b78ec835a5688755
Author: Leonardo Sandoval <leonardo.sandoval.gonzalez@linux.intel.com>
Date:   2017-10-06 08:10:42 -0700

    bitbake-user-manual-metadata: include a space on a append example
    
    By definition, the override operator "_append" does not include a space,
    so include it.
    
    Signed-off-by: Leonardo Sandoval <leonardo.sandoval.gonzalez@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	doc/bitbake-user-manual/bitbake-user-manual-metadata.xml

commit dc86d38816aeb0fcbceb34cbaaa6ed98d33383e9
Author: Leonardo Sandoval <leonardo.sandoval.gonzalez@linux.intel.com>
Date:   2017-10-06 08:10:41 -0700

    bitbake-user-manual/bitbake-user-manual: remove YP as build system
    
    YP is not a build system, so it can not be used as build system example.
    
    Signed-off-by: Leonardo Sandoval <leonardo.sandoval.gonzalez@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	doc/bitbake-user-manual/bitbake-user-manual-intro.xml

commit 4325f7a7df67eaf4b51af03b453e84bf88fae408
Author: Jeremy A. Puhlman <jpuhlman@mvista.com>
Date:   2017-10-04 09:43:45 -0700

    Add args.force to localargs before do_add_layer
    
    Adding layer "meta-signing-key" to conf/bblayers.conf
    Traceback (most recent call last):
      File "/local/build/project/build/poky/bitbake/bin/bitbake-layers",
    line 103, in <module>
        ret = main()
      File "/local/build/project/build/poky/bitbake/bin/bitbake-layers",
    line 96, in main
        return args.func(args)
      File
    "/local/build/project/build/poky/bitbake/lib/bblayers/layerindex.py",
    line 250, in do_layerindex_fetch
        self.do_add_layer(localargs)
      File
    "/local/build/project/build/poky/bitbake/lib/bblayers/action.py", line
    44, in do_add_layer
        if not (args.force or notadded):
    AttributeError: 'Namespace' object has no attribute 'force'
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	0	lib/bblayers/layerindex.py

commit ca10186d60a52af6464bd998fa0b7146513bed0e
Author: Mikko Ylinen <mikko.ylinen@linux.intel.com>
Date:   2017-10-06 11:47:35 +0300

    bitbake-user-manual: add more gitsm fetcher limitations
    
    The submodule sources fetched by the gitsm fetcher are not automatically
    tracked by the licensing and archiver infrastructures.
    
    Add these limitations to the existing 'warnings' sections for
    gitsm.
    
    [YOCTO #11594]
    
    Signed-off-by: Mikko Ylinen <mikko.ylinen@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	1	doc/bitbake-user-manual/bitbake-user-manual-fetching.xml

commit fa767d85f19a7af92a44fe11fdfb38633009ad71
Author: David Reyna <David.Reyna@windriver.com>
Date:   2017-10-06 12:06:54 +1300

    toaster: build missing toaster.conf settings
    
    The bitbake server changed such that the Toaster custom settings from
    'toaster.conf' and 'toaster-bblayers.conf' that were set when
    the '--server-only' mode was started were lost when the subsequent build
    request happened, resulting in builds missing all custom changes.
    
    This patch asserts those environment settings in both server calls.
    
    [YOCTO #12194]
    
    Signed-off-by: David Reyna <David.Reyna@windriver.com>
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	2	lib/toaster/bldcontrol/localhostbecontroller.py

commit 41ba3c8bfcd3501604f6a17bd327a8193b11b656
Author: Scott Rifenbark <srifenbark@gmail.com>
Date:   2017-09-25 14:34:38 -0700

    bitbake-user-manual: Updated kernel version in PREFERRED_VERSION example
    
    Signed-off-by: Scott Rifenbark <srifenbark@gmail.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	doc/bitbake-user-manual/bitbake-user-manual-ref-variables.xml

commit 14c17480827ced2e03c1b62dc839696421fc4de8
Author: Mardegan, Alberto <AMardegan@luxoft.com>
Date:   2017-09-21 14:33:52 +0000

    bitbake: lib/bb/utils: fix movefile() copy to dir fallback
    
    When the destination is a directory, building the the destination file
    path is always needed.  That's because even if the copy fallback is
    taken, it's always followed by a rename.
    
    Signed-off-by: Alberto Mardegan <amardegan@luxoft.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

10	9	lib/bb/utils.py

commit 131d4b8a5834781a93ed41e2967d8dcd4d80f29a
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2017-09-22 17:17:59 +0100

    server/process: Increase runCommand timeout
    
    We were seeing cases where we could hit the 5s timeout on large/fast machines
    running many different tasks at once. Increase this to 30s since the main
    connection timeout path should no longer hit this slow path.
    
    [YOCTO #12116]
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/server/process.py

commit 9c0f6e81dae0b91b425e6c0cdf64caa5c15d92b5
Author: David Reyna <David.Reyna@windriver.com>
Date:   2017-09-14 16:58:16 -0700

    toaster: allow dots in user path names
    
    The dot '.' character should be allowed in the user paths for
    local non-git layers, DL_DIR, and SSTATE_DIR.
    
    [YOCTO #10650]
    
    Signed-off-by: David Reyna <David.Reyna@windriver.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/toaster/toastergui/static/js/importlayer.js
1	1	lib/toaster/toastergui/templates/importlayer.html
4	4	lib/toaster/toastergui/templates/projectconf.html

commit 04bd9c9341e8390a7923fa0122cd4cb0befa569f
Author: David Reyna <David.Reyna@windriver.com>
Date:   2017-09-14 16:58:15 -0700

    toaster: reserve HEAD from imported layers
    
    The HEAD reference in Toaster layers are reserved for the
    "Local Yocto Project" layers, stored at the top directory.
    Imported layers are not allowed to use this since they are
    managed differently - for example the 'remotes' will collide.
    
    Fix the add layer handler to not drop the data fields when it
    is a git repo.
    
    Explicitly inform the user when an internal Toaster error is
    returned via AJAX, so that they know why clicking the layer add
    button did not do anything.
    
    [YOCTO #9924]
    
    Signed-off-by: David Reyna <David.Reyna@windriver.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	3	lib/toaster/toastergui/api.py
14	3	lib/toaster/toastergui/static/js/importlayer.js
1	1	lib/toaster/toastergui/templates/importlayer.html

commit 013047484a03185c0ce281c53c1db4949cdc4e69
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2017-09-14 16:09:42 +1200

    cooker: ensure monkey-patching in collect_bbfiles() gets undone on error
    
    In collect_bbfiles() we're monkey-patching os.listdir in order to find
    which directories to watch, and then undoing that when we're finished -
    however if an exception occurred for any reason there was nothing to
    ensure the latter occurred. This may not have caused any issues, but as
    this kind of thing really ought to be secured using try...finally just
    in case, so do that.
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

19	19	lib/bb/cooker.py

commit 47a34dee08fcc25d896a1bdf16fa86267f0b898f
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2017-09-14 16:09:41 +1200

    cooker: fix watching empty directories
    
    The code that was supposed to watch directories along BBFILES for
    creation of new files wasn't working in the case where the directory did
    not initially contain any matching files - since in updateCache() we are
    passing the directory path to add_filewatch() and the latter function
    calls os.path.dirname() on the path on the assumption that it is a file
    path, and thus the parent of the directory got watched but not the
    directory itself. (If the directory wasn't empty everything worked fine
    since add_filewatch() was called elsewhere with the path to one of the
    files in that directory, and thus the directory got watched). Add a
    parameter to add_filewatch() to tell it we are passing it directory
    path(s) rather than file path(s).
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

6	3	lib/bb/cooker.py

commit f0930f3216a8358759d561d244fa280932e8bf05
Author: Scott Rifenbark <srifenbark@gmail.com>
Date:   2017-09-13 09:02:02 -0700

    bitbake-user-manual: Edits to "inherit" section.
    
    Fixes [YOCTO #12031]
    
    Applied minor wording changes based on review feedback.
    
    Signed-off-by: Scott Rifenbark <srifenbark@gmail.com>

3	3	doc/bitbake-user-manual/bitbake-user-manual-metadata.xml

commit db298262189c94be700abfdb8c2ad7827b53afca
Author: Scott Rifenbark <srifenbark@gmail.com>
Date:   2017-09-02 10:40:03 -0700

    bitbake-user-manual: Removed bad links
    
    Fixes [YOCTO #12029]
    
    There were four links to an old blog post that was leveraged
    for the hello world example.  The post has evidently been
    removed and the links no longer resolved.  I have taken them out.
    
    Signed-off-by: Scott Rifenbark <srifenbark@gmail.com>

2	12	doc/bitbake-user-manual/bitbake-user-manual-hello.xml

commit f169ac5da18d55a40d0554668e1a0ace70f94768
Author: Scott Rifenbark <srifenbark@gmail.com>
Date:   2017-09-02 10:16:23 -0700

    bitbake-user-manual: Updated inherit and INHERIT sections
    
    Fixes [YOCTO #12031]
    
    Moved an inappropriate example from the bottom of the INHERIT
    Configuration Directive section up into the inherit directive
    section.
    
    Updated the example at the end of the INHERIT Configuration
    Directive section to apply to INHERIT.
    
    Signed-off-by: Scott Rifenbark <srifenbark@gmail.com>

13	5	doc/bitbake-user-manual/bitbake-user-manual-metadata.xml

commit fded970a0709d928f70224d8b61534e9353ee6dd
Author: Scott Rifenbark <srifenbark@gmail.com>
Date:   2017-09-02 10:01:47 -0700

    bitbake-user-manual: Clarified inherit, include, require relationships
    
    Fixes [YOCTO #12032]
    
    I applied some re-writing to help clarify the relationships between
    the inherit, include, and require directives.
    
    Signed-off-by: Scott Rifenbark <srifenbark@gmail.com>

34	7	doc/bitbake-user-manual/bitbake-user-manual-metadata.xml

commit 567f2cf1bc455b4f3cfb1cbd7f25145360b05a62
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2017-09-12 10:49:54 +1200

    server/process: ensure server failure log is limited to current session
    
    Printing the last 10 lines of bitbake-cookerdaemon.log when the server
    fails to start can sometimes result in printing the output from a
    previous run, which could lead the user completely down the wrong path
    in terms of the cause of the failure. Use a known start text containing
    the time which we can then look for when scanning through the log, and
    then grab the last 10 lines of that part instead.
    
    Fixes [YOCTO #11903].
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

25	3	lib/bb/server/process.py

commit 7b1e79c352ca6eef1693d8abfacf7505544f1caa
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2017-09-12 10:49:53 +1200

    runqueue: fix BB_SETSCENE_ENFORCE with empty BB_SETSCENE_ENFORCE_WHITELIST
    
    The whitelist shouldn't have to be populated in order for the
    enforcement to work properly - check if the list is not None in order to
    determine whether the functionality is enabled or not since that is how
    the function that sets up the list behaves.
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	3	lib/bb/runqueue.py

commit 60d4791e3dd05729d2a2adf6f3b203c80d466a73
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2017-09-11 23:17:43 +0100

    process/cooker: Improve readypipe handling
    
    Issues in start are not being correctly detected by the current readypipe
    code. Change it to use specific "ready" or "fail" messages to correctly
    determine the correct failure mode and avoid bitbake seeming to hang
    (it does currently timeout eventually).
    
    [YOCTO #12062]
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	5	lib/bb/cooker.py
13	4	lib/bb/server/process.py

commit ed3aab90dbf9b6efefd9eb66d81123cb94d3c7da
Author: David Reyna <David.Reyna@windriver.com>
Date:   2017-09-07 21:50:48 -0700

    toaster: update pyro to rocko as stable release
    
    Update the Toaster stable release selection to 'Rocko' and
    the bitbake version to '1.36'.
    
    [YOCTO #12037]
    
    Signed-off-by: David Reyna <David.Reyna@windriver.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

6	6	lib/toaster/orm/fixtures/oe-core.xml
9	9	lib/toaster/orm/fixtures/poky.xml

commit 2cd664097c29ad07b08c82d07a239ca199abbc9a
Author: David Reyna <David.Reyna@windriver.com>
Date:   2017-09-07 21:50:47 -0700

    toaster: handle early exceptions
    
    Stop the pending build and report to the user if there is
    an internal exception due to a git error, a bitbake server
    error, or if the server-only mode halts due to for example
    a user syntax error in a layer or recipe.
    
    These exceptions were not caught because they occure before
    the normal toastergui processing was started.
    
    [YOCTO #12056]
    
    Signed-off-by: David Reyna <David.Reyna@windriver.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

8	0	lib/toaster/bldcontrol/management/commands/runbuilds.py

commit 3f034d2172bf64ecc43577b43e0cf032a54b1358
Author: Ross Burton <ross.burton@intel.com>
Date:   2017-09-07 10:24:25 +0100

    tests/fetch: handle network failures gracefully
    
    If there is a network failure the return value from latest_versionstring() is
    ('','') which later causes an exception when comparing versions.
    
    Improve this by checking the return value and failing the test early.
    
    [ YOCTO #12053 ]
    
    Signed-off-by: Ross Burton <ross.burton@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	0	lib/bb/tests/fetch.py

commit c45453d1f6bc7bcecd84f58e2f7d93d6bd1e8499
Author: Ross Burton <ross.burton@intel.com>
Date:   2017-09-07 10:24:24 +0100

    fetch2: add stub latest_versionstring to FetchMethod
    
    Signed-off-by: Ross Burton <ross.burton@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

8	0	lib/bb/fetch2/__init__.py

commit 2ab50074c1a6c56a8a178755de108447d7b7acaf
Author: Andre Rosa <andre.rosa@lge.com>
Date:   2017-09-07 11:15:55 +0200

    Replace deprecated git branch parameter "--set-upstream"
    
    Since 2017-08-17 (git version 2.14.1.473.g3ec7d702a) using deprecated
    git branch parameter "--set-upstream" causes a fetcher error. Replace
    it by "--set-upstream-to".
    
    https://git.kernel.org/pub/scm/git/git.git/commit/?id=52668846ea2d41ffbd87cda7cb8e492dea9f2c4d
    says, it's deprecated since 2012-08-30 so hopefully all still supported
    host distributions have new enough git to support "--set-upstream-to".
    
    ERROR: PACKAGE do_unpack: Fetcher failure: ...;
    git -c core.fsyncobjectfiles=0 branch --set-upstream master origin/master failed with exit code 128, output:
    fatal: the '--set-upstream' option is no longer supported. Please use '--track' or '--set-upstream-to' instead.
    
    ERROR: PACKAGE do_unpack: Function failed: base_do_unpack
    
    Signed-off-by: Andre Rosa <andre.rosa@lge.com>
    Signed-off-by: Martin Jansa <Martin.Jansa@gmail.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/fetch2/git.py

commit 1ca2eec459424892391f060442ef38cf28d6a54a
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2017-09-04 14:00:31 +1200

    cooker: clear extra config settings and remote datastores on client disconnect
    
    When the UI disconnects, we can throw away any server-side remote
    datastores we created in response to calls from the UI, and we *must*
    drop everything in extraconfigdata or it will taint any future
    operations.
    
    Dropping extraconfigdata upon disconnect fixes taskhash mismatch errors
    when running devtool.DevtoolTests.test_devtool_update_recipe_local_files
    within oe-selftest with BB_SERVER_TIMEOUT=100 in OpenEmbedded.
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	0	lib/bb/command.py
2	0	lib/bb/cooker.py

commit a0eaf8c0f228f984bafff09e4e9739f758dc1a9b
Author: Mark Hatle <mark.hatle@windriver.com>
Date:   2017-09-02 10:09:43 -0500

    cooker.py: Fix layer priority processing
    
    If you have a layer with a blank BBFILE_PATTERN the layer was ignored
    when processing the list of layers with priorities.  This list is not
    only used for processing recipes, but also by additional programs such
    as bitbake-layers show-layers.
    
    Without this change, a layer that provides configuration or classes
    only does now show up in show-layers, which is used by the
    yocto-compat-layer.py script.  This causes a failures in the compatibility
    check.
    
    Signed-off-by: Mark Hatle <mark.hatle@windriver.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

7	7	lib/bb/cooker.py

commit 13f52d38fdbcb84c2a0c46f85baa44b22d53fdc1
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2017-09-04 21:03:12 +1200

    siggen: move reset() definition to base SignatureGenerator class
    
    If we're implementing reset() in SignatureGenerator at all (and we need
    to for a basic non-OE BitBake setup where that is the default signature
    generator), then we need it to be clearing out the internal values
    properly.
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	4	lib/bb/siggen.py

commit 17aa1ef8f0a00dd3456aac199e558a2f96bf7ad9
Author: David Reyna <David.Reyna@windriver.com>
Date:   2017-09-03 21:02:23 -0700

    toaster: edit column list not sorted
    
    The list of columns in the many 'Edit Columns' pop-ups became unsorted
    with the 'Toaster Table' implementation. These entries need to be
    gathered and sorted in the column processing.
    
    [YOCTO #12004]
    
    Signed-off-by: David Reyna <David.Reyna@windriver.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

10	1	lib/toaster/toastergui/static/js/table.js

commit 2ff5592baf011de9c778d3c2481b8ed3912f1a4b
Author: David Reyna <David.Reyna@windriver.com>
Date:   2017-09-03 21:02:22 -0700

    toaster: recipe links broken for default layers
    
    The default layers are missing the recipe link definitions in
    the fixture files, and because they are predefined they do not
    get the updated information from the Layer Index.
    
    [YOCTO #12006]
    
    Signed-off-by: David Reyna <David.Reyna@windriver.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	0	lib/toaster/orm/fixtures/oe-core.xml
9	0	lib/toaster/orm/fixtures/poky.xml
2	0	lib/toaster/orm/management/commands/lsupdates.py

commit d4aef1f1f03d88acc76423b55d8bd6c137f66f44
Author: David Reyna <David.Reyna@windriver.com>
Date:   2017-09-03 21:02:21 -0700

    toaster: missing ToasterSetting import
    
    The file "lsupdates.py" is missing the import of 'ToasterSetting',
    and that breaks setting up and updating Toaster and its database.
    
    [YOCTO #12036]
    
    Signed-off-by: David Reyna <David.Reyna@windriver.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	0	lib/toaster/orm/management/commands/lsupdates.py

commit 3b0f04c7b00aaf44ba146c432fcb5d6fd7dafcea
Author: Olaf Mandel <o.mandel@menlosystems.com>
Date:   2017-09-02 22:24:07 -0700

    toaster: set default pokydirname if no external layers
    
    If no external layers are defined, pokydirname is not set. Rectify
    this by taking the 'be.sourcedir' as the pokydirname.
    
    [YOCTO #12015]
    
    Signed-off-by: Olaf Mandel <o.mandel@menlosystems.com>
    Signed-off-by: David Reyna <David.Reyna@windriver.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

4	0	lib/toaster/bldcontrol/localhostbecontroller.py

commit 9fe38f94b54a8644ac6f493c49e63dd6da5bfbdf
Author: Olaf Mandel <o.mandel@menlosystems.com>
Date:   2017-09-02 22:24:06 -0700

    toaster: debug message for lists layers missing separators
    
    One of the debug messages during build contains a list of all layers
    but without spaces or other separators between them. Use pformat
    instead.
    
    [YOCTO #12014]
    
    Signed-off-by: Olaf Mandel <o.mandel@menlosystems.com>
    Signed-off-by: David Reyna <David.Reyna@windriver.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/toaster/bldcontrol/localhostbecontroller.py

commit 1f1cc1edb21aeec684ef7323554794b33d84d414
Author: Awais Belal <awais_belal@mentor.com>
Date:   2017-09-02 22:24:05 -0700

    toaster: Order column in Tasks selectable
    
    The build page provides tables related to performance that
    cover build time, CPU time and disk IO. The "Edit columns"
    drop down does not allow selection of the Order column and
    makes it hidden as well which is not accurate from user
    interaction point of view.
    This patch enables the hideable property for the Order column
    so it is hidden by default but the user can enable it through
    the drop down if need be.
    
    [YOCTO #11040]
    
    Signed-off-by: Awais Belal <awais_belal@mentor.com>
    Signed-off-by: David Reyna <David.Reyna@windriver.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	0	lib/toaster/toastergui/buildtables.py

commit 193577655b7491126ca5fa91fa76d79329e900c2
Author: David Reyna <David.Reyna@windriver.com>
Date:   2017-09-02 22:24:04 -0700

    toaster: display error when the fstype select is empty
    
    There must be at least one FSTYPE selected in the Toaster bitbake
    variable editor page. When the user deselects all the "Save"
    button gets disabled, but the error message is missing.
    
    [YOCTO #8126]
    
    Signed-off-by: David Reyna <David.Reyna@windriver.com>
    Signed-off-by: David Reyna <David.Reyna@windriver.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	0	lib/toaster/toastergui/templates/projectconf.html

commit 7234f33a7eb38ad51a8345f6689bc26e29f29f92
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2017-09-01 16:21:49 +0100

    cooker: Ensure parseConfiguration clears parsecache_valid
    
    BB_SERVER_TIMEOUT=100 oe-selftest -r bblayers
    
    was failing and highlighted that since parseConfiguation clears data
    structures, it needs to also clear parsecache_valid as it no longer
    contains correct data.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	0	lib/bb/cooker.py

commit 767c7ba8fc76ec667ac1567de1c971c3575f2ecd
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2017-08-31 17:32:15 +0100

    cookerdata/taskdata/runqueue: Drop remaining tryaltconfigs code and commandline option
    
    I can't actually see how this was working, nothing connected the commandline option
    to the data in TaskData(). Drop the remaining pieces of this option, it was a relic
    from a decade ago and we want deterministic builds, not random tries until something
    might work.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/cookerdata.py
0	5	lib/bb/main.py
1	6	lib/bb/runqueue.py
1	2	lib/bb/taskdata.py

commit 2a78c2d09aea0323632bbc927f370f1d3c9c249e
Author: Caio Marcelo de Oliveira Filho <caio.oliveira@intel.com>
Date:   2017-08-30 15:35:52 -0700

    siggen: Add reset to SignatureGenerator
    
    Fix failure after commit "cooker/siggen: Reset siggen when reparsing"
    (e4c6ca9440f63761560b49bbe12654441f54687e) when executing without
    specifying a BB_SIGNATURE_HANDLER.
    
    Signed-off-by: Caio Marcelo de Oliveira Filho <caio.oliveira@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	0	lib/bb/siggen.py

commit 0a7ee8c8378bba9877c260b1aee782878f1935b4
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2017-08-30 21:17:51 +0100

    cooker: Ensure buildFile doesn't have lasting side effects
    
    BB_SERVER_TIMEOUT=100 oe-selftest -r devtool.DevtoolTests.test_devtool_build_image
    
    fails, the reason is that internally, the limited_deps flag is set in
    the bitbake server and then never cleared. This causes the sysroots to
    be setup incorrectly (as per the limited dependency case) and builds
    break. There is also potential for corruption of recipecaches.
    
    Add shutdown/cleanup code to ensure these effects don't 'stick'.
    
    This bug is particularly nasty as you can destroy TMPDIR with large
    sysroots in build work directories which are prone to break.
    
    Also ensure mtime cache is cleared (to match buildTargets) and
    that no lasting changes are made to siggen either which ensures:
    
    BB_SERVER_TIMEOUT=100 oe-selftest -r devtool.DevtoolTests.test_devtool_upgrade_git devtool.DevtoolTests.test_devtool_virtual_kernel_modify
    
    works.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

5	0	lib/bb/cooker.py

commit 8c4b35d1e4d31bae9fddd129d5ba230acb72c3bb
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2017-08-31 11:30:47 +1200

    fetch2/npm: add noverify parameter to skip lockdown/shrinkwrap
    
    When fetching source for the first time within scripts such as
    OpenEmbedded's recipetool, we don't want to be showing warnings about
    NPM_SHRINKWRAP or NPM_LOCKDOWN not being set since there's no way we
    could have set them in advance. Previously we were using
    ud.ignore_checksums to suppress these but since we are now using a more
    standard task-based path to fetch the source, we need to disable these
    through the metadata. Look for a "noverify" parameter set on the npm URL
    and skip the checks if it is set to "1".
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

21	20	lib/bb/fetch2/npm.py

commit f120355eaec4571ba6d60fc5f7ae9e1f31d846d1
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2017-08-31 11:30:46 +1200

    cooker: ensure we can run buildFileInternal() after cache is populated
    
    If you run some other operations that result in the cache being
    populated, and then call buildFileInternal(), then you can end up in a
    situation where the cache already contains information about the recipe.
    For example in OE this can now happen when you use devtool upgrade.
    Normally this doesn't cause any problems, unless you have a non-absolute
    path in BBLAYERS - in buildFileInternal() we are calling matchfile() which
    will convert the filename to absolute, but later when taskdata goes to find
    the providers of the recipe it finds the non-absolute path, sets up the
    task information using this and then the runqueue can't find any tasks
    matching the absolute path. To fix this, back out the optimisation I did
    earlier in bitbake rev ba53e067a2d448dd63b4ca252557ce98aa8e6321 to avoid
    calling parseConfiguration() again, which is unfortunate but does result
    in the cached information being that causes the problem being cleared
    out.
    
    This fixes "Task do_unpack does not exist for target ..." running
    devtool upgrade within intel-iot-refkit.
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

4	4	lib/bb/cooker.py

commit cc8b4c81bb589fb70774a0151f87a8d277f40f06
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2017-08-31 11:30:45 +1200

    tinfoil: ensure variable history tracking works when parsing a recipe
    
    If you set tracking=True when creating the tinfoil object, that ensures
    history is collected for the main datastore, but at the end of parsing
    the configuration, history tracking gets turned off to save time with
    the result that we don't collect history for any recipes we parse.
    Enable tracking when we parse a recipe (and disable it afterwards if we
    enabled it) in order to fix this.
    
    This fixes functionality in OE's devtool that relies upon variable
    history (such as devtool upgrade updating PV when it's set within a
    recipe).
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

18	11	lib/bb/tinfoil.py

commit 24879df071d4803db3d39ae1d5cad852daa92f28
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2017-08-31 11:30:44 +1200

    tinfoil: ensure log lines get printed when tasks fail
    
    If a task fails during build_targets(), we need to print out the log
    lines as knotty does or the user will be missing information about the
    failure.
    
    (This should get some deeper refactoring, but now isn't the time for
    that.)
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

7	0	lib/bb/tinfoil.py
27	23	lib/bb/ui/knotty.py

commit b5e3b28b7c982dd8a3991d727f25710dbf58bb80
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2017-08-31 11:30:43 +1200

    tinfoil: fix log message doubling when config_only=False
    
    With config_only=False we launch the UI and it sets up a logger, whereas
    when config_only=True we don't, with the result that with True we are
    seeing log messages from both our logger and the one set up by the UI.
    Suppress our loggers with config_only=True to avoid this.
    
    Fixes [YOCTO #11275] (again).
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

11	0	lib/bb/tinfoil.py

commit c1b00a9265fa4146b8db8b7d03a51bf2bfcf9f51
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2017-08-31 17:23:16 +0100

    prserv/serv: Gracefully handle the PR server exiting quickly
    
    If the server exits quickly its PID may no longer exist. Handle
    this gracefully.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

5	1	lib/prserv/serv.py

commit ba7e3c73d8f4d2bd1d7434b97c326e7ab935231a
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2017-08-31 17:21:23 +0100

    prserv/serv: Rename self.quit -> self.quitflag
    
    self has a quit function and a variable. Separate this to two different
    things as the current setup is prone to breakage.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

6	6	lib/prserv/serv.py

commit a7591ef34ce70ff1d7aa9362d7473e6f16fbd10f
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2017-08-31 17:20:15 +0100

    prserv/serv: Send sentinel to stop handler thread
    
    Shutdown from SIGTERM currently has to wait for the handler thread to timeout.
    Add a sentinel value which triggers it to loop and allows for a quick exit.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

4	1	lib/prserv/serv.py

commit a38164620ebdc770690c5f39ff9ed69d3f82719e
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2017-08-31 17:12:52 +0100

    ui/knotty: Send updateConfig early
    
    If for example you run:
    
    bitbake -r somefile.inc
    rm somefile.inc
    bitbake -e
    
    bitbake will crash with an error about not being able to find somefile.inc. This
    is because it tries to reparse the base config for the early getVariable requests
    before it sees the updated missing -r option.
    
    Send the updateConfig command earlier to avoid this.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	1	lib/bb/ui/knotty.py

commit 8fd30ca6d271c125a8ea03ef0c5d7ab176900701
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2017-08-31 17:11:46 +0100

    cookerdata: Avoid tracebacks from early reset() calls
    
    cooker.reset() can be called before we've actually setup the datastore. Gracefully
    handle this case instead of the current traceback+exit.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	0	lib/bb/cookerdata.py

commit 971272e84f4efe7ebd0037e164ba54f013a2a34e
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2017-08-31 17:09:54 +0100

    cooker: Allow changes in PRSERV_HOST to be responded to
    
    When we reload the configuration, PRSERV_HOST can change. Therefore
    restart the PR Server depending on the new configuration at reparse.
    
    Note that the server has to be started from the right process, it
    can't be in the UI which shuts down as that shutdown triggers a shutdown
    of its children and the PR Server shuts down too. This is why we need
    pre_serve() which ensures its executed in the right context.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

11	8	lib/bb/cooker.py

commit b8616931bc0e523a3a3bb23b4f623f8b6e71d690
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2017-08-31 17:22:25 +0100

    prserv/serv: Shut down any existing server before restarting
    
    This allows for cleaner code in cooker as any existing server is dealt
    with before a new one is started.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	0	lib/prserv/serv.py

commit 638d366234fad78f283d3a13a12b07cb0ccbe914
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2017-08-31 17:07:24 +0100

    cooker: Change to consistent prefile/postfile handling
    
    Currently the original prefile and postfile passed when starting bitbake
    server are 'sticky'. With the new memory resident model this doesn't make
    sense as the server the system is started with isn't special.
    
    This patch changes the code so the prefile/postfile are used if specified
    on the commandline and not used otherwise. This makes the behaviour much
    more predictable and expected and as an added bonus simplifies the code.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

10	13	lib/bb/cooker.py
0	2	lib/bb/cookerdata.py
0	6	lib/bb/server/process.py

commit 9dc7f384db0479569ff93a76a623d5395fecaf47
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2017-08-31 17:04:49 +0100

    cooker: Handle datastore tracking for showEnvironment server side only
    
    The current passing of "tracking" backwards and forwards, client to server
    is ugly and complex and error prone. Instead, set this during showEnvironment
    commands triggering a reset there if/as required.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

10	1	lib/bb/cooker.py
1	6	lib/bb/cookerdata.py

commit 8104b33656de0b619943bd7a9884eb650ccafbf4
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2017-08-31 10:28:46 +0100

    prserv/cooker: Drop unused param
    
    Drop pointless unused function parameter.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/cooker.py
1	1	lib/prserv/serv.py

commit af3c8928a69f204d5ced02c947485990ac04a776
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2017-08-30 13:38:42 +0100

    command: Fix some bugs identified by BB_SERVER_TIMEOUT
    
    The 'needconfig' flag was meant to be the default as most commands do need
    it and the "False" cases were the exception. The code was written backwards
    with a default False value. Invert this to match the intent, resulting in
    the config being reparsed if metadata has changed.
    
    Also ensure the second level configuration is parsed for the getLayerPriorities
    command as otherwise it can return stale info.
    
    With these changes:
    
    BB_SERVER_TIMEOUT=100 oe-selftest -r bblayers.BitbakeLayers.test_bitbakelayers_add_remove
    
    passes instead of fails.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	1	lib/bb/command.py

commit 8a60106c6f7d586c793b965c5e9460b6016fab15
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2017-08-24 00:21:53 +0100

    main: Attempt to gain bitbake.lock rather than just waiting
    
    Rather than just waiting for 5s, try and get the lockfile. If we gain
    the lock, we know we're ready to retry and can skip any remaining timeout.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

9	1	lib/bb/main.py

commit f45196cf84669723382730944dddc7eaf50826f2
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2017-08-23 15:46:00 +0100

    process: Clean up connection retry logic
    
    Its possible for a connection to connect to the server as its shutting down
    but before its removed the socket file. This patch:
    
    a) Removes the socket file earlier to avoid connections.
    b) Handles EOFError in initial connections gracefully. These occur if the
       socket is closed during the server shutdown.
    c) Ensure duplicate events aren't shown on the console. This makes debugging
       these issues very very confusing.
    
    With these changes the backtrace that was concerning users is hidden and the
    server works as expected with a reconnect when it catches it in a bad state.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

10	3	lib/bb/main.py
4	4	lib/bb/server/process.py

commit d5cab2dbf5682d2fd08e58316a3bf39a10f63df2
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2017-08-24 00:10:28 +1200

    fetch2: don't mandate path element in encodeurl()
    
    URLs do not have to have a path; currently our npm URLs don't, so
    encodeurl() needs to handle if the path element isn't specified. This
    fixes errors using OpenEmbedded's devtool add / recipetool create on an
    npm URL after OE-Core revision ecca596b75cfda2f798a0bdde75f4f774e23a95b
    that uses decodeurl() and encodeurl() to change URL parameter values.
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

5	6	lib/bb/fetch2/__init__.py

commit 27ca94c33234f0ef9753f8285213dde2871a3fcf
Author: Jussi Kukkonen <jussi.kukkonen@intel.com>
Date:   2017-08-17 13:14:54 +0300

    bitbake: ui: Sort 'Dependent tasks' in taskexp
    
    The underlying model is already sorted for use in the other view,
    add a sorting model for the 'Dependent Tasks' view.
    
    Signed-off-by: Jussi Kukkonen <jussi.kukkonen@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	1	lib/bb/ui/taskexp.py

commit ac29d4a9078494544a2627d8b6b021096b49cb34
Author: David Reyna <David.Reyna@windriver.com>
Date:   2017-08-20 21:02:54 -0700

    toaster: support custom Layer Index URL and fixture override
    
    Toaster needs to allow the custom fixture file to specific an
    alternate Layer Index URL for users that host their own Layer
    Index Server via the 'CUSTOM_LAYERINDEX_SERVER' in
    'custom.xml'.
    
    Toaster also needs to allow the ability to completely override
    the default fixture files, otherwise that content can leak into
    the custom environment (by default the custom fixture is an
    overlay that cannot remove existing values from the default
    fixture) via the 'CUSTOM_XML_ONLY' value in 'setting.xml'.
    
    [YOCTO #11938]
    
    Signed-off-by: David Reyna <David.Reyna@windriver.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

4	1	lib/toaster/bldcontrol/management/commands/checksettings.py
5	1	lib/toaster/orm/management/commands/lsupdates.py

commit 12a73f6914488029f2b9dd680e004fba7dde41af
Author: David Reyna <David.Reyna@windriver.com>
Date:   2017-08-20 18:01:49 -0700

    Toaster: custom start and stop actions
    
    Toaster needs the ability to allow custom extensions to execute when
    Toaster is started and stopped. Toaster will look for a custom
    extension script in the fixtures directory and execute any applicable
    hooks.
    
    [YOCTO #11938]
    
    Signed-off-by: David Reyna <David.Reyna@windriver.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

20	2	bin/toaster
49	0	lib/toaster/orm/fixtures/custom_toaster_append.sh_sample

commit bcd68fd7231f166baff875fb88e4f9ce0d9bf91d
Author: David Reyna <David.Reyna@windriver.com>
Date:   2017-08-20 18:01:48 -0700

    toaster: custom image updates and original creation
    
    When Toaster removes a package from a custom image, it must
    also always remove the advised reverse-dependent recipes.
    Similarly, when adding a package it must always add its advised
    the packages it depends on. This code must be un-indented so
    that it applies to all respective added or removed packages.
    
    Toaster normally waits until a new custom image is built before
    creating the custom layer and the recipe. However, an intermediate
    different build can fail because the recipe has already been added
    to the project, so the image's default recipe must be created
    when the image is created.
    
    [YOCTO #11915]
    
    Signed-off-by: David Reyna <David.Reyna@windriver.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/toaster/orm/models.py
61	37	lib/toaster/toastergui/api.py

commit bbcce58e824b2793abf50efa52db158ae16e23e4
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2017-08-21 21:26:52 +0100

    process: Ensure we call select() to know which fds to read
    
    There is an interesting bug in the current code where a sync command
    is not seen until the current async command completes, by which time
    the UI may have shut down.
    
    The reason is that if there are idle commands, we may not end up sleeping
    in the select call at all, partiularly under heavy load like parsing.
    
    Fix this by calling select with a zero timeout so that we see active
    fds and know to read from them. This fixes various problems toaster was
    having with the recent server changes.
    
    [YOCTO #11898]
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/server/process.py

commit 8d4c120ec46d6d7a54947c64d33e18cb60b60505
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2017-08-15 10:16:27 +0100

    process: Increase server startup timeout
    
    We're seeing the server fail to start within 8s on heavily loaded
    autobuilders so increase this timeout to 30s which should be more
    than enough time.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/server/process.py

commit 5e267f14bb0155889615f567a920af4a37eb3c6b
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2017-08-13 23:32:30 +0100

    process: Improve client disconnects
    
    There have been cases where the server could loop indefinitely and incorrectly
    handle client disconnects. In the EOFError case, ensure a full disconnect
    happens in the alternative disconnect path to avoid this.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

23	15	lib/bb/server/process.py

commit 218e4b6418992588312b8ef5949b84ef43263d1a
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2017-08-09 12:58:39 +0100

    cooker: Ignore common bitbake files for the parse cache invalidation
    
    Writes to the cookerdaemon log and/or the lockfile were meaning the parser
    cache was always being invalidated and reparsed. This is unnecessary so
    spot accesses to these two common cases and ignore the files from a reparse
    perspective.
    
    This doesn't remove many sources of reparse but does improve several
    common cases.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	0	lib/bb/cooker.py

commit ec60459fe2ba16966544eebff43b061abb7ed3ba
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2017-08-09 12:57:57 +0100

    cooker: Improve inotify overflow handling
    
    Add a proper function for clearing the mtime cache. Clean up the inotify
    event overflow case to err on the side of caution and clear any potentially
    now out of sync caches.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

4	1	lib/bb/cooker.py
4	0	lib/bb/parse/__init__.py

commit bf76cd7e5881adf264b8ba64e27a5b6ca9df4fde
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2017-08-09 12:54:34 +0100

    cooker: Ensure we handle inotify before running the next command
    
    The inotify watch events are handled "at idle" which could in theory mean
    a command could run before any preceeding inotify events have been processed.
    This leads to a theoretical race window where those events may have a
    signficicant effect on the command.
    
    Add a mechanism to allow us to ensure all pending events are processed before
    running commands.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	0	lib/bb/command.py
10	7	lib/bb/cooker.py

commit 4d508d35a224e3a25d2d59c8415ab7985964b14f
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2017-08-09 12:53:06 +0100

    cooker: Track directories searched for bbappend/bb files
    
    Some of the directories searched by BBFILES are not currently being added
    to the inotify watch list. This can mean that added append files are not
    noticed leading to misleading metadata results when using
    BB_SERVER_TIMEOUT != 0.
    
    We use glob to expand the BBFILES references and without writing our own
    implentation, figuring out the directories it searches is hard. We use
    some horrible hacks here to intecept the listdir calls, I'm open
    to better ways to handle this but this does ensure we have the right
    watches set.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

21	3	lib/bb/cooker.py

commit 2bc47e887c3b41417edaa89a8708c223fd2085de
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2017-08-08 20:55:21 +0100

    server/process: Ensure we don't loop on client EOFError
    
    The server currently crashes if we hit an EOFError due to controllersock
    still being in ready and the continue meaning ready isn't re-evaluated.
    Setting the value to False can mean the shutdown code doesn't handle the
    situation cleanly.
    
    Clear ready to avoid the crash/loop instead and handle any OSError whilst
    we're in here.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	2	lib/bb/server/process.py

commit e4c6ca9440f63761560b49bbe12654441f54687e
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2017-08-08 20:44:36 +0100

    cooker/siggen: Reset siggen when reparsing
    
    If we don't do this, we get basehash mismatch errors occurring from the reparse
    which would then set bitbake's error exit code.
    
    This for example would cause oe-selftest -r bbtests.BitbakeTests.test_bbappend_order
    to fail with a non-zero BB_SERVER_TIMEOUT.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	0	lib/bb/cooker.py
3	0	lib/bb/siggen.py

commit 923d5567be6fd9969ca74c166f36817ec09305e3
Author: Robert Yang <liezhi.yang@windriver.com>
Date:   2017-08-08 02:12:08 -0700

    main: Handle BB_SERVER_TIMEOUT = -1 for no server timeout
    
    Make BB_SERVER_TIMEOUT = -1 mean no unload forever.
    
    Signed-off-by: Robert Yang <liezhi.yang@windriver.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

4	2	lib/bb/main.py
2	1	lib/bb/server/process.py

commit 7b739a38601b053d9bea4df2c0b44a952ab670c4
Author: Robert Yang <liezhi.yang@windriver.com>
Date:   2017-08-08 02:12:07 -0700

    process: Fix disconnect when BB_SERVER_TIMEOUT
    
    Fixed:
    $ export BB_SERVER_TIMEOUT=10000
    $ bitbake --server-only
    $ bitbake --status-only
    [snip]
      File "/buildarea/lyang1/poky/bitbake/lib/bb/server/process.py", line 472, in recvfds
        msg, ancdata, flags, addr = sock.recvmsg(1, socket.CMSG_LEN(bytes_size))
    OSError: [Errno 9] Bad file descriptor
    
    And:
    $ export BB_SERVER_TIMEOUT=10000
    $ bitbake --server-only -B localhost:-1
    $ bitbake --status-only # Everything is fine in first run
    $ bitbake --status-only
    [snip]
      File "/buildarea/lyang1/poky/bitbake/lib/bb/server/process.py", line 472, in recvfds
        msg, ancdata, flags, addr = sock.recvmsg(1, socket.CMSG_LEN(bytes_size))
    OSError: [Errno 9] Bad file descriptor
    
    This was because self.controllersock was not set to False, so it still ran
    sock.recvmsg() when sock was closed.
    
    And also need set command_channel to Flase, otherwise the
    self.command_channel.get() will always run when EOF, and cause infinite loop.
    
    Signed-off-by: Robert Yang <liezhi.yang@windriver.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	0	lib/bb/server/process.py

commit 7a4ea1e6a10f20d80009a78f4f0aebf8f90095fd
Author: Robert Yang <liezhi.yang@windriver.com>
Date:   2017-08-08 02:12:05 -0700

    main: Remove unneeded float()
    
    There is already a type=float, so the float() is not needed, which also makes
    the error clearer:
    
    $ export BB_SERVER_TIMEOUT=10000AA
    With float():
    $ bitbake quilt-native
    [snip]
    ValueError: could not convert string to float: '10000AA'
    
    Without float():
    $ bitbake quilt-native
    [snip]
    optparse.OptionValueError: option --idle-timeout: invalid floating-point value: '10000AA'
    
    The second one tells clearly where is wrong.
    
    Signed-off-by: Robert Yang <liezhi.yang@windriver.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/main.py

commit 645c8dd15762516ae5ab64a1df47fadb95d072d1
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2017-08-07 11:59:33 +0200

    Revert "tinfoil: fix duplication of log messages"
    
    In combination with the recent server reworking, this change actually
    prevents messages sent from tasks from being logged properly. This will
    of course give us the duplicated messages back, and I really hate to do
    that effectively a second time, but that's better than seeing no error
    at all in the case of a failure - we'll have to find the proper way of
    avoiding the duplication that doesn't result in some messages going
    missing.
    
    This reverts commit 8a5bae76f91f2411187c638a42fa3c762052cf11.
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	2	lib/bb/main.py
1	2	lib/bb/tinfoil.py

commit 76c4f2c20216719736766e8ae7d089ccd061b71b
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2017-08-02 06:37:01 +0100

    daemonize: Always print any remaning UI events at exit
    
    If there are events in the UI queue we want to print them regardless of
    whether we're handling an exception or something like SystemExit.
    
    This improves error messages for some other failure cases where currently
    no logging would get printed and leave the user confused as to what went
    wrong.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/daemonize.py

commit e2fbe728769f09ef4178e2ef4d69a2f60ffe3ebb
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2017-08-01 09:37:37 +0100

    cooker: Ensure all tasks are shown in task dependency tree
    
    "bitbake -g m4-native -c do_unpack" doesn't list any dependencies in
    task-depends.dot. This is because no header describing the task was
    added unless a task has dependencies. Tweak the code to fix this.
    
    [YOCTO #10893]
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	3	lib/bb/cooker.py

commit 3daa9001269e5b9156d0eb3299d2628d2d219fff
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2017-07-31 12:12:45 +0100

    daemonize: clean up code
    
    This was originally based on some other code but its mostly misleading
    comments now. Massively clean this up and accept its now a total fork.
    There are no funciton changes here, just cleanup.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

14	134	lib/bb/daemonize.py

commit dec1d2c26f6cb3ffeb44beaab0129cd531a6d08b
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2017-07-31 11:30:56 +0100

    daemonize: Ensure child process exits safely
    
    When we create the child, if an exception occurred it was transfering
    back into the parent context. We don't want to do that us use a try/finally
    to ensure we exit.
    
    We need to ensure a traceback is printed and any queued UI messages which
    may not have made it to the client UI at this point.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

8	3	lib/bb/daemonize.py

commit 10a6a48c0c5a2fe2051e90143e66075356853971
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2017-07-31 08:55:15 +0100

    process: Add some extra server startup logs
    
    We have cases where the server is being started but we're not seeing any messages
    from it. Add some earlier logging so we can try and better understand where
    issues may be occurring.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

4	1	lib/bb/server/process.py

commit 974281ed72d8366baa16ee85f7e93970689b5956
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2017-07-31 08:09:03 +0100

    process: Reorder server command processing and handle EOFError
    
    If the connection control socket and the command channel close together,
    we can race and hit EOFError exceptions before we close the channel.
    
    Reorder the code to handle this in the correct order and ignore the
    EOFError exceptions as they mean the client is disconnecting and shouldn't
    terminate the server.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

18	13	lib/bb/server/process.py

commit bb70ae0c9aac5ec688026d23a64ac0cac1947187
Author: Ross Burton <ross.burton@intel.com>
Date:   2017-07-29 18:23:33 +0100

    wget: fix FusionForge workaround
    
    My previous assertion about FusionForge appears to have been wrong, or
    FusionForge has changed behaviour, or both.
    
    FusionForge now mandates that downloads have the Accept header set, despite that
    header being optional, and returns a 406 Not Acceptable error if it isn't set.
    As we were pretending that 406 was actually 405 (Moved) and tried to handle it as a
    redirect this results in an infinite loop until Python kills the recursion.
    
    Delete the handling of 406 as 405, and pass Accept: */* in the headers.
    
    Signed-off-by: Ross Burton <ross.burton@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	6	lib/bb/fetch2/wget.py

commit 2aa7ad38f760ec003fb18faa5aa0014cff191a7a
Author: David Reyna <David.Reyna@windriver.com>
Date:   2017-07-28 17:14:14 -0700

    toaster: move to new bitbake xmlrpc default
    
    The bitbake option "-t SERVERTYPE" was deprecated and can be
    removed since the desired XMLRPC listener now the default.
    
    The bitbake server port cannot be "-1" anymore and must be
    explicitly passed.
    
    There is a race condition for the bblock file to not only
    be created but to actually be populated, so a delay test loop
    is required (usually only one pass).
    
    The 'xmlrpcclient' is now the class that allows Toaster to for
    example kill builds.
    
    The events for populating the recipe parsing now either show only
    the final result or are skipped entiredly, so the progress
    calculator needs to be changed to not block on the parsing phase.
    
    [YOCTO #11851]
    
    Signed-off-by: David Reyna <David.Reyna@windriver.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	2	lib/toaster/bldcontrol/bbcontroller.py
15	4	lib/toaster/bldcontrol/localhostbecontroller.py
1	1	lib/toaster/orm/models.py

commit d8e79661c69671dd424dca5cc3f7f2f855b0afed
Author: David Reyna <David.Reyna@windriver.com>
Date:   2017-07-28 17:14:13 -0700

    toaster: enable remote HTTP API for status aggregation
    
    Add support for Toaster aggregators with a set of api links that
    return JSON data for (a) builds in progress, (b) builds completed,
    (c) specific build data, and (d) an is-alive health ping link.
    
    [YOCTO #11794]
    
    Signed-off-by: David Reyna <David.Reyna@windriver.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

6	0	lib/toaster/toastergui/templates/health.html
6	1	lib/toaster/toastergui/urls.py
85	1	lib/toaster/toastergui/views.py
3	2	lib/toaster/toastermain/urls.py

commit 5753fe81194f75fbcf4ccdc733cc585d02794cb1
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2017-07-30 15:58:01 +0100

    runqueue: Tweak debug message to make it more readable/diffable
    
    Having this as one huge long line isn't easy to manipulate, split it into
    multiple lines for ease of debugging issues.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/runqueue.py

commit 57be5cc6228518e60f564570a39cebbeb6cf564e
Author: Ross Burton <ross.burton@intel.com>
Date:   2017-07-28 17:26:23 +0100

    fetch2: fix checkstatus fallback to MIRRORS
    
    The checkstatus() code was expecting checkstatus to throw exceptions if it
    failed, but in general it should return False.
    
    Signed-off-by: Ross Burton <ross.burton@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	3	lib/bb/fetch2/__init__.py

commit 2d0203fae08c5ff8dc3e9afaa9a819abc4a1af6f
Author: Christopher Larson <chris_larson@mentor.com>
Date:   2017-07-28 13:47:53 -0600

    tests/fetch: fix GitShallowTest.test_bitbake
    
    `git fetch --tags` seems to interact badly with `mirror=fetch`, resulting in
    the regular branches not being fetched, so drop the unnecessary `--tags`. This
    fixes this unit test failure: `bb.fetch2.FetchError: Fetcher failure: Unable
    to resolve 'master' in upstream git repository in git ls-remote output for
    /tmp/tmp4ag_mgmn/gitsource`
    
    [YOCTO #11698]
    
    Signed-off-by: Christopher Larson <chris_larson@mentor.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/tests/fetch.py

commit 0f85c54385f325f3ebbf911b35bbac11b8863b6b
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2017-07-28 16:19:56 +0100

    main: Always return 0 for bitbake --kill-server
    
    If the server isn't running return 0 as to do otherwise complicates
    scripts which do cleanup of bitbake servers which would potentially
    be memory resident.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

4	2	lib/bb/main.py

commit 8633b7cd03cfaba3e0359aa5da22fc76b66768c7
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2017-07-28 15:46:20 +0100

    process: Clean up server communication timeout errors
    
    This timeout path was commonly hit due to errors starting the server. Now we
    have a better way to handle that, the retry logic can be improved and cleaned
    up. This patch:
    
    * Makes the timeout 5s rather than intervals of 1s with a message. Paul
      noted some commands can take around 1s to run on a server which has just
      been started on a loaded system.
    * Allows a broke connection to exit immediately rather than retrying something
      which will never work.
    * Drops the Ctrl+C masking, we shouldn't need that anymore and any issues
      would be better handled in other ways.
    
    This should make things clearer and less confusing for users and is much cleaner
    code too.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	12	lib/bb/server/process.py

commit f41e4e971e807157be68cf4496580494b8b60643
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2017-07-28 15:42:50 +0100

    process: Don't leak open pipes upon reconnection
    
    If we reconnect to the server, stop leaking pipes and clean up
    after ourselves.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

18	1	lib/bb/server/process.py

commit 57000d44beb1aeba37dfc70782b0d6418943acc5
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2017-07-28 15:40:02 +0100

    process/cooker: Allow UI process to know if the cooker was started successfully
    
    Currently if the server fails to start, the user sees no error message and
    the server will be repeatedly attempted to be started until some longer
    timeouts expire. There are error messages in the cookerdeamon log but
    nobody thinks to look there.
    
    Add in a pipe which can be used to tell the starting process whether the cooker
    did actually start or not. If it fails to start, no further attempts can be
    made and if present, the log file can be shown to the user.
    
    [YOCTO #11834]
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

5	1	lib/bb/cooker.py
18	2	lib/bb/server/process.py

commit 77fd3a3a29a569e212374b27aea742ddbaafcdd5
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2017-07-28 15:37:29 +0100

    process: Move socket keep alive into BitBakeProcessServerConnection
    
    This cleans up the socket keep alive into better class structured code
    and adds cleanup of the open file descriptors upon shutdown.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

6	4	lib/bb/server/process.py

commit 930d077637928213e13a07c78fee3bf7a8c37ebf
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2017-07-28 15:33:32 +0100

    process: Allow BBUIEventQueue to exit cleanly
    
    Currently the monitoring thread exits with some error code or runs indefinitely. Allow
    closure of the pipe its monitoring to have the thread exit cleanly/silently.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

8	3	lib/bb/server/process.py

commit f79187f4ebfad7969be47b429995e7f7a3e33c1e
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2017-07-28 15:32:25 +0100

    process: Ensure ConnectionReader/Writer have fileno() and close() methods
    
    Expose the underlying close() and fileno() methods which allow connection
    monitoring and cleanup.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

9	0	lib/bb/server/process.py

commit 45cff5734ba2ba8c8d36d17d722a5804d39b258b
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2017-07-28 15:27:28 +0100

    event: Don't write duplicate logs to stdout and stderr in no UI case
    
    This code would duplicate messages to stdout and stderr when no UI connected
    and there were error level messages.
    
    Rework the code so it either uses stderr (for errors and above) or
    stdout for warnings/debug but not both for the same messages.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

17	10	lib/bb/event.py

commit fdcea991baa4f83d9c98d468d7b49c8c388a4a15
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2017-07-27 14:51:49 +0200

    bitbake-diffsigs: fix regression after recent server changes
    
    We were bridging the gap between the server and UI here by calling a
    bb.siggen.find_siginfo, a function defined and set on that module from
    the metadata. This worked from the UI side before but since the recent
    server changes is no longer accessible. Create a new command so this can
    execute on the server side and return the result by way of a new event.
    
    (We're still running compare_sigfiles() on the signature generator but
    that isn't quite the same thing and does still work.)
    
    Fixes [YOCTO #11844].
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

28	7	bin/bitbake-diffsigs
11	0	lib/bb/command.py
8	0	lib/bb/event.py

commit b8f477de204ab5d0680b2b7c42370d13395be46c
Author: Mark Hatle <mark.hatle@windriver.com>
Date:   2017-07-26 10:20:35 -0500

    lib/fetch2/__init__.py: Fix unpack comment
    
    Signed-off-by: Mark Hatle <mark.hatle@windriver.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/fetch2/__init__.py

commit a0cd748d2f830a305da086eff3462875f64f2a70
Author: Mark Hatle <mark.hatle@windriver.com>
Date:   2017-07-26 10:20:34 -0500

    lib/bb/utils.py: Add missing debug level
    
    Signed-off-by: Mark Hatle <mark.hatle@windriver.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	2	lib/bb/utils.py

commit 1b14f115a9e929e29e91e8ac70826a3fe7259961
Author: Andre McCurdy <armccurdy@gmail.com>
Date:   2017-07-25 14:30:01 -0700

    fetch2/__init__.py: replace stray logger.warn() with logger.warning()
    
    Update stray usage of deprecated logger.warn(), which was introduced
    to fetch2/__init__.py after all other instances had been replaced by
    logger.warning():
    
      http://git.openembedded.org/bitbake/commit/?id=5a53e7d7b017769a6eb0f0a6335735a1fe51a5ec
      http://git.openembedded.org/bitbake/commit/?id=676a5f592e8507e81b8f748d58acfea7572f8796
    
    Signed-off-by: Andre McCurdy <armccurdy@gmail.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/fetch2/__init__.py

commit 91d4ca93df092cf86ab84faaa94cc66ff9f43057
Author: Ross Burton <ross.burton@intel.com>
Date:   2017-07-24 22:42:01 +0100

    fetch/wget: mitigate a wget race condition when listing FTP directories
    
    When wget is fetching a listing for a directory over FTP it writes to a
    temporary file called .listing in the current directory.  If there are many such
    operations happening in parallel - for example during 'bitbake world -c
    checkpkg' - then up to BB_NUMBER_THREADS instances of wget will be racing to
    write to, read, and delete the same file.
    
    This results in various failures such as the file disappearing before wget has
    processed it or the file changing contents, which causes checkpkg to randomly
    fail.
    
    Mitigate the race condition by creating a temporary directory to run wget in
    when doing directory listings.
    
    [ YOCTO #11828 ]
    
    Signed-off-by: Ross Burton <ross.burton@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

11	12	lib/bb/fetch2/wget.py

commit b7514340cd6a2753eb217b059229bb279c3849ec
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2017-07-24 14:10:58 +0100

    process: Change timeout warning to a note
    
    The warning message currently shown can occur more frequently than previously
    if a previous bitbake server is shutting down and we're reconnecting to a new
    server. Change it to a note message to match the higher level connection
    logging retry messages and so as not to interfer with selftests.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/server/process.py

commit c0ddde7cf680225127d6285685652b905ed176c3
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2017-07-24 13:44:05 +0100

    cooker/process: Drop server_main function
    
    Now that there is only one server, this abstraction is no longer needed
    and causes indrection/confusion. The server shutdown is also broken with
    the cooker post_server calls happening too late, leading to "lock held"
    warnings in the logs if PRServ is enabled.
    
    Remove the abstraction and put the shutdown calls in the right order
    with respect to the locking.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

0	22	lib/bb/cooker.py
21	1	lib/bb/server/process.py

commit 0b5a837477d18442caf97dd0fa14a806c54f5842
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2017-07-24 13:39:12 +0100

    prserv/serv: Improve process exit handling
    
    The server shutdown is currenlty laggy and race prone. This patch:
    
    * adds a waitpid so that no zombie server is left around if its not
      running in daemon mode.
    * adds a quit "sentinal" using a pipe so that we're not sitting in
      a socket poll() until timeout in order just to quit.
    * use a select() call to poll the socket and the pipe for a quit signal.
    
    The net result of this change is that the prserv exits with the cooker server
    and it does so immediately and doesn't wait for the select/poll calls to
    timeout. This makes bitbake a lot more responsive for startup/shutdown and
    doesn't cause UI timeout errors as often when prserv is used.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

17	2	lib/prserv/serv.py

commit 6fa07752bbd3ac345cd8617da49a70e0b2dd565f
Author: Patrick Ohly <patrick.ohly@intel.com>
Date:   2017-07-17 15:25:10 +0200

    fetch2/wget.py: improve error handling during sstate check
    
    When the sstate is accessed via HTTP, the existence check can fail due
    to network issues, in which case bitbake silently continues without
    sstate.
    
    One such network issue is an HTTP server like Python's own SimpleHTTP
    which closes the TCP connection despite an explicit "Keep-Alive" in
    the HTTP request header. The server does that without a "close" in the
    HTTP response header, so the socket remains in the connection cache,
    leading to "urlopen failed: <urlopen error [Errno 9] Bad file
    descriptor>" (only visible in "bitbake -D -D" output) when trying to
    use the cached connection again.
    
    The connection might also get closed for other reasons (proxy,
    timeouts, etc.), so this is something that the client should be able
    to handle.
    
    This is achieved by checking for the error, removing the bad
    connection, and letting the check_status() method try again with a new
    connection. It is necessary to let the second attempt fail
    permanently, because bad proxy setups have been observed to also lead
    to such broken connections. In that case, we need to abort for real
    after trying twice, otherwise a build would just hang forever.
    
    [YOCTO #11782]
    
    Signed-off-by: Patrick Ohly <patrick.ohly@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

14	0	lib/bb/fetch2/wget.py

commit dd83c732b945ba6f9b7cdf66f6e88cfd15a745a0
Author: David Reyna <David.Reyna@windriver.com>
Date:   2017-07-11 14:56:10 -0700

    toaster: trim build target input
    
    Trim the entered built target value so that Toaster is not
    confused with no real targets nor a ghost second target.
    
    [YOCTO #11727]
    
    Signed-off-by: David Reyna <David.Reyna@windriver.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	2	lib/toaster/toastergui/static/js/projecttopbar.js

commit d25a3088150b2a277242027c12becdeb88c45517
Author: David Reyna <David.Reyna@windriver.com>
Date:   2017-07-11 14:56:09 -0700

    toaster: set clone progress default to off
    
    Set the clone progress to be off by default for the benefit of
    command line projects and 'Local Yocto' builds. For Toaster managed
    projects that do use the clone feature the clone progress status
    is already explicitly set by the existing code and thus displayed.
    
    [YOCTO #11744]
    
    Signed-off-by: David Reyna <David.Reyna@windriver.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	2	lib/toaster/orm/migrations/0016_clone_progress.py
2	2	lib/toaster/orm/models.py

commit 485b328430dcdfd0b52f09f01ebd490d09459ea3
Author: David Reyna <David.Reyna@windriver.com>
Date:   2017-07-11 14:56:08 -0700

    toaster: include setscene in task progress
    
    Change the task progress counting from the task order field
    which excludes setscene to the task completion field which
    counts all completed tasks regardless of type.
    
    [YOCTO #9971]
    
    Signed-off-by: David Reyna <David.Reyna@windriver.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

4	3	lib/toaster/orm/models.py

commit eef7a1a3eb0365da5ed2bc9688203fba3b6a61b5
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2017-07-21 08:43:06 +0100

    Update to version 1.35.0 (development version with server rework changes)
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	bin/bitbake
1	1	lib/bb/__init__.py

commit 8b2ccb4b865f2df118ef668847df682a83f9c500
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2017-07-19 11:56:11 +0200

    fetch2: fire an event when there are missing checksums
    
    If BB_STRICT_CHECKSUMS is set to anything other than "1" i.e. we're not
    going to raise an error, then fire an event so that scripts can listen
    for it and get the checksums.
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

10	0	lib/bb/fetch2/__init__.py

commit f15ca7339de8a448a93a14cf6130b3925178a920
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2017-07-19 11:56:10 +0200

    fetch2: allow hiding checksum warning
    
    If BB_STRICT_CHECKSUMS is set to "ignore" then don't display a warning
    if no checksums are specified in the recipe. This is not intended to be
    used from recipes - it is needed when we move to using more standard
    code paths to fetch new files from scripts i.e. where we don't know what
    the checksums are in advance.
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

6	0	lib/bb/fetch2/__init__.py

commit 3e0e002d6497caa987f327cd83ad4db82cca6810
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2017-07-19 11:56:09 +0200

    tinfoil: add more doc comments
    
    We want this API to be easier to use, so add missing function
    documentation to help with that.
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

65	0	lib/bb/tinfoil.py

commit 308994028e59735ca726c5d2c1f0f85baccfe89d
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2017-07-19 11:56:08 +0200

    tinfoil: add simple API for getting cached recipe information
    
    A common task for tinfoil-using scripts is to iterate over all recipes.
    This isn't too difficult with the current API, but the pkg_* variables
    are a little awkward and are really designed for bitbake's internal
    usage - and it gets a bit more difficult when you want to access some of
    the other information such as packages and rprovides. To resolve this,
    create a new recipe info class and add an all_recipes() function to
    generate this for all recipes. Also add a get_recipe_info() function to
    get the information for a specific recipe (by PN).
    
    (It might perhaps be suggested that we already have a structure similar
    to this in the cache, however the one we add here is designed for
    external use and allows the internal structures to change if needed
    without affecting the API).
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

142	0	lib/bb/tinfoil.py

commit 3df9b7c615174a6557581f3cd157842a28f6bb26
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2017-07-19 11:56:07 +0200

    tinfoil: enable access to additional cached items
    
    Add access to fn_provides, packages, packages_dynamic and rproviders on
    the recipecache object. This requires an additional corresponding
    command plumbing to be added.
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

32	0	lib/bb/command.py
8	0	lib/bb/tinfoil.py

commit 43761eee756be52a1021be53a40dc591a6c35fa7
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2017-07-19 11:56:06 +0200

    tinfoil: add functionality for running full builds
    
    Up to this point, if you wanted to run build tasks in the normal way
    they get run from a python script, there was no other way than to shell
    out to bitbake. Worse than that, you couldn't have tinfoil active during
    that because only one bitbake instance could be running at once. As long
    as we're prepared to handle the events produced, we can create a wrapper
    around calling the buildTargets command. Borrow code from knotty to do
    this in such a way that we get the expected running task display
    (courtesy of TermFilter) and Ctrl+C handling.
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

154	0	lib/bb/tinfoil.py

commit 7544de437fc66b81502ecdb5db859182c45827cb
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2017-07-19 11:56:05 +0200

    knotty: make it possible to use termfilter without either console
    
    This isn't useful for knotty itself, but for use from tinfoil
    in case we can't get access to either the console or errconsole, allow
    either to be unspecified (None).
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

4	2	lib/bb/ui/knotty.py

commit be498abfbbb19bdd31e5b53713a74049007e3737
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2017-07-19 11:56:04 +0200

    lib/bb/ui/uihelper: indicate to caller of eventHandler() if events handled
    
    It is useful for the caller to know whether the uihelper has handled the
    event passed so that it can skip other event handling code if so.
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	0	lib/bb/ui/uihelper.py

commit cb15db2a799be6d8eab9a2a43a9a573f89229cff
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2017-07-19 11:56:03 +0200

    lib/bb/event: refactor printing events
    
    We really ought to have just one place where the string representation
    of these events is produced. This doesn't take any real control away
    from the UI - if an alternative representation is desired, that can
    still be made.
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	0	lib/bb/command.py
32	0	lib/bb/event.py
6	0	lib/bb/runqueue.py
6	31	lib/bb/ui/knotty.py
1	1	lib/bb/ui/ncurses.py
2	18	lib/bb/ui/taskexp.py
4	21	lib/bb/ui/toasterui.py

commit 7efde2df2ff25063d36ac015146f1975284a69ff
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2017-07-19 11:56:02 +0200

    tinfoil: set a flag when recipes have been parsed
    
    Make it easy to determine if recipes are parsed (and thus information
    about available recipes is in memory).
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	0	lib/bb/tinfoil.py

commit 821f6c41d850752d2bcc2ccd4f8e75b2897a0a3e
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2017-07-19 11:56:01 +0200

    tinfoil: add a parse_recipes() function
    
    Python style recommends underscore based naming rather than camelCase,
    and thus the former has been used for most of tinfoil's functions. Add
    an underscored version of parseRecipes() for consistency and change the
    one place we call it to use the new version.
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	bin/bitbake-layers
7	1	lib/bb/tinfoil.py

commit ba53e067a2d448dd63b4ca252557ce98aa8e6321
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2017-07-19 11:56:00 +0200

    tinfoil: add internal mode to build_file() function
    
    In OE's devtool we want to repeatedly run build_file() without showing
    unnecessary messages and triggering buildhistory for each call.
    build_file() is just a wrapper around the buildFile command. Change
    the final "hidewarning" parameter of the buildFile command to "internal"
    and have this call a new buildFileInternal() function without triggering
    any of the normal build events, silencing the normal info messages from
    the runqueue ("Executing RunQueue Tasks", "Tasks Summary" etc.) and
    avoiding calling parseConfiguration() which we've already done at this
    point.
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

6	3	lib/bb/command.py
25	9	lib/bb/cooker.py
6	3	lib/bb/tinfoil.py

commit 4ffc91a2b3eb13e98078e6b1913f056a0c1797bc
Author: Robert Yang <liezhi.yang@windriver.com>
Date:   2017-07-17 03:17:03 -0700

    bb/main.py: fix logic for --observe-only
    
    Fixed:
    $ bitbake --observe-only
    FATAL: '--observe-only' can only be used by UI clients connecting to a server.
    
    And even:
    $bitbake --observe-only -B localhost:-1
    FATAL: '--observe-only' can only be used by UI clients connecting to a server.
    
    This was beucase the brackets were in a wrong position.
    
    Signed-off-by: Robert Yang <liezhi.yang@windriver.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/main.py

commit 335fd0106359dddfe1eeb0c7d0bc03f8454b895c
Author: Robert Yang <liezhi.yang@windriver.com>
Date:   2017-07-17 01:27:14 -0700

    bb/main.py: avoid starting server when not needed
    
    Fixed 1:
    $ . ../poky/oe-init-build-env-memres .
    $ bitbake -m
    $ bitbake -m # shutdown it again
    $ bitbake -m
    Starting bitbake server...
    Terminated bitbake server.
    
    It starts the server and kill it which is redundant.
    
    $ bitbake -m
    $ bitbake --status-only
    Starting bitbake server...
    
    It starts the server which is not what we need.
    
    Signed-off-by: Robert Yang <liezhi.yang@windriver.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

8	2	lib/bb/main.py

commit c4d5c3dab5b35f3c6713efad1c8a23229ce4e56b
Author: Robert Yang <liezhi.yang@windriver.com>
Date:   2017-07-14 02:58:12 -0700

    bb/main.py: fix infinite loop for --server-only
    
    Fixed:
    $ bitbake --server-only -B localhost:-1
    Infinite loop
    Reconnecting to bitbake server...
    [snip]
    
    Break the loop when server-only can fix the problem.
    
    Signed-off-by: Robert Yang <liezhi.yang@windriver.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/main.py

commit dbdd9010663cd8dcb328e1b6fb40e3a777293bc5
Author: Robert Yang <liezhi.yang@windriver.com>
Date:   2017-07-14 02:52:03 -0700

    server/process.py: fix self.bitbake_lock.write()
    
    There is no global var "configuration", so the old code hang at
    self.bitbake_lock.write(), and nothing wrote to bitbake.lock. I didn't
    figure out why it hang (but not print errors).
    
    Reproducer:
    $ bitbake -B localhost:-1 world -k
    
    Check bitbake.log, there was nothing, now fixed.
    
    Signed-off-by: Robert Yang <liezhi.yang@windriver.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	2	lib/bb/server/process.py

commit 67ae612ab890965357d24a9bd35610cf813b79ba
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2017-07-18 17:50:24 +0100

    cookerdata/cooker: Restore original datastore upon client disconnect
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	0	lib/bb/cooker.py
9	0	lib/bb/cookerdata.py

commit 72a3dbe13a23588e24c0baca6d58c35cdeba3f63
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2017-07-18 22:28:40 +0100

    server: Rework the server API so process and xmlrpc servers coexist
    
    This changes the way bitbake server works quite radically. Now, the
    server is always a process based server with the option of starting
    an XMLRPC listener on a specific inferface/port.
    
    Behind the scenes this is done with a "bitbake.sock" file alongside
    the bitbake.lock file. If we can obtain the lock, we know we need
    to start a server. The server always listens on the socket and UIs
    can then connect to this. UIs connect by sending a set of three file
    descriptors over the domain socket, one for sending commands, one for
    receiving command results and the other for receiving events.
    
    These changes meant we can throw away all the horrid server abstraction
    code, the plugable transport option to bitbake and the code becomes
    much more readable and debuggable. It also likely removes a ton of
    ways you could hang the UI/cooker in weird ways due to all the race
    conditions that existed with previous processes.
    
    Changes:
    
     * The foreground option for bitbake-server was dropped. Just tail
       the log if you really want this, the codepaths were complicated enough
       without adding one for this.
     * BBSERVER="autodetect" was dropped. The server will autostart and
       autoconnect in process mode. You have to specify an xmlrpc server
       address since that can't be autodetected. I can't see a use case
       for autodetect now.
     * The transport/servetype option to bitbake was dropped.
     * A BB_SERVER_TIMEOUT variable is added which allows the server
       to stay resident for a period of time after the last client
       disconnects before unloading. This is used if the -T/--idle-timeout
       option is not passed to bitbake.
    
    This change is invasive and may well introduce new issues however I
    believe the codebase is in a much better position for further
    development and debugging.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	57	lib/bb/cooker.py
3	2	lib/bb/cookerdata.py
77	153	lib/bb/main.py
0	6	lib/bb/server/__init__.py
393	203	lib/bb/server/process.py
0	492	lib/bb/server/xmlrpc.py
154	0	lib/bb/server/xmlrpcclient.py
158	0	lib/bb/server/xmlrpcserver.py
1	1	lib/bb/tinfoil.py
2	2	lib/prserv/serv.py

commit 4e780fa19fc720948cf73133f56f7d837ad9283a
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2017-07-18 22:22:12 +0100

    daemonize: Various fixes
    
    Currently if this code is used with something like oeqa's xml logging
    it fails as sys.stdout is an io stream. Add in try/except to handle
    this case.
    
    Add a waitpid() call to remove a zombie whilst forking.
    
    Also, append to the logfile, don't overwrite it (otherwise
    debugging can be a real pain when the server is restarting for
    unknown reasons).
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

12	8	lib/bb/daemonize.py

commit d196afe68032898c31a8599ca7d3ceba58d96b0a
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2017-07-18 22:18:53 +0100

    cookerdata: Add a function to find TOPDIR
    
    Finding the top level build directory is currently hard and relies on
    having a complete cooker being setup. Add a helper function which
    does the same thing without all the extra overhead. This is needed
    to be able to locate the bitbake lockfile and hence the socket
    for connecting clients in the new server model.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

21	0	lib/bb/cookerdata.py

commit a1c6151420d86bac658c08ae714647062edd6ef2
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2017-07-18 22:15:17 +0100

    server: Remove base classes and inline code
    
    In preparation for rewriting this code, expand the relatively useless
    base classes into the code itself.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

0	72	lib/bb/server/__init__.py
28	6	lib/bb/server/process.py
52	8	lib/bb/server/xmlrpc.py

commit f8cf2cb58b80ce74f756a11a9773b6b0e78d51ee
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2017-07-18 22:01:15 +0100

    event/command: Allow UI to request the UI eventhander ID
    
    The UI may want to change its event mask however to do this, it needs the
    event handler's ID. Tweak the code to allow this to be stored and add
    a command to query it.
    
    Use the new command in the process server backend.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

5	0	lib/bb/command.py
8	3	lib/bb/event.py
6	1	lib/bb/server/process.py

commit 6683338598ce97278f188fbcd780c3e3754e5b9a
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2017-06-23 16:25:57 +0200

    fetch2: fix indentation
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

47	47	lib/bb/fetch2/__init__.py

commit a5f9603988b0a897696e529391b4d95c5e339833
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2017-06-14 16:12:51 +0200

    cooker: fix whitespace
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

4	4	lib/bb/cooker.py

commit e22b1f1c0e57c6ada4fb044791159546e2260dad
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2017-06-14 16:11:39 +0200

    cache.py: fix whitespace
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

13	14	lib/bb/cache.py

commit 4dbf4f1907a32f303c2e9acf2f27817cf3c9ec38
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2017-06-09 16:59:53 +0200

    cookerdata: fix indentation and trailing spaces
    
    Fix one incorrect indentation and several lines with trailing spaces.
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

5	5	lib/bb/cookerdata.py

commit 06a96d267dec5b542725defb8f01403f505c4f44
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2017-05-19 13:32:40 +1200

    knotty: fix indentation
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/ui/knotty.py

commit 96bb174325493764718c61c12c943c37b882cd61
Author: Aníbal Limón <anibal.limon@linux.intel.com>
Date:   2017-07-17 16:45:12 -0500

    bb/server/process: Handle EINTR on idle_commands select
    
    If a signal is sent like SIGWINCH the select could be interrupted
    so ignore the InterruptError like in XMLRPC server [1].
    
    [1]
    http://git.yoctoproject.org/cgit/cgit.cgi/poky/tree/bitbake/lib/bb/server/xmlrpc.py#n307
    
    Signed-off-by: Aníbal Limón <anibal.limon@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

6	1	lib/bb/server/process.py

commit 4a14b44b3e4fad3a3e5e53461aa8ba9929a515b8
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2017-07-07 16:00:35 +0100

    knotty: Drop task prefix of PLAIN log messages
    
    To quote Paul:
    
    Not that long ago we added a prefix to logged messages to allow us to see
    where the message has been generated (recipe / task). This is undoubtedly
    useful for errors and warnings, however, I'm not sure it's really appropriate
    for bb.plain(). As an example, see the output for -c listtasks now:
    
    ...
    NOTE: Executing RunQueue Tasks
    nodejs-native-4.5.0-r0 do_listtasks: do_addto_recipe_sysroot
    nodejs-native-4.5.0-r0 do_listtasks: do_build                      Default task for a recipe - depends on all other normal tasks required to 'build' a recipe
    nodejs-native-4.5.0-r0 do_listtasks: do_checklicense
    nodejs-native-4.5.0-r0 do_listtasks: do_checklicenseall
    nodejs-native-4.5.0-r0 do_listtasks: do_checkpkg
    ...
    
    This patch excludes PLAIN messages from this prefixing making the log output
    neater.
    
    [YOCTO #11457]
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/ui/knotty.py

commit d43e97226dc7f53592c06a528f20390b68dc854f
Author: Enrico Scholz <enrico.scholz@sigma-chemnitz.de>
Date:   2017-05-18 18:17:01 +0200

    BBHandler: Remove old style bb.data.setVar() syntax usage
    
    Fixes
    
             except bb.parse.SkipRecipe:
        >        bb.data.setVar("__SKIPPED", True, d)
                 if include == 0:
    AttributeError: module 'bb.data' has no attribute 'setVar'
    
    Signed-off-by: Enrico Scholz <enrico.scholz@sigma-chemnitz.de>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/parse/parse_py/BBHandler.py

commit 00bf2e60222767b4dee84fb3f958732a83544e80
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2017-07-07 15:42:05 +0100

    server/xmlrpc: Add Heartbeat event support
    
    When heartbeat event support was added it was only added to process.py. Add
    it to server/xmlrpc too. There is duplicated code however since we're likely
    to combine the server abstractions soon its not worth worrying about now.
    
    This ensures the backends have the same event support.
    
    [YOCTO #10741]
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

26	0	lib/bb/server/xmlrpc.py

commit cb241fb8544dfb05646dbae1a1b04e17878a466c
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2017-07-07 15:41:41 +0100

    event: Queue offline events for the UI
    
    Messages printed when no UI is connected (e.g. memres) are currently lost.
    Use the existing queue mechanism to queue these until a UI attaches, then
    replay them. This isn't ideal but better than the current situation of
    losing them entirely.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

10	1	lib/bb/event.py
1	1	lib/bb/server/process.py
1	1	lib/bb/server/xmlrpc.py

commit 412bfab8721ea317898a1974f6a7a0d0bea763df
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2017-07-07 14:38:54 +0100

    server/process: Fix waitEvent() calls with 0 timeout
    
    You might think Queue.Queue.get(True, 0) would return an event immediately
    if present and otherwise return. It doesn't, it immediately "times out"
    and returns with nothing from the queue.
    
    The behaviour we want is not to wait but return anything present which is
    what .get(False) does so map to this.
    
    This fixes some odd behaviour observed in some of the tinfoil selftests.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	0	lib/bb/server/process.py

commit 9a36531ed2b2881a65e5d39ee4b68d2bb392ed78
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2017-07-06 15:13:03 +0100

    data: Micro performance optimisation tweak
    
    The datastore can assume internal API, this just removes the function indirection
    overhead involved in this very common codepath (800,000 calls in parsing OE-Core).
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/data.py

commit 0b00f0382780ab5390a5c3f756a9b4efafe0aec8
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2017-04-26 21:03:15 +0100

    cooker: Use multiple BuildStarted events for multiconfig
    
    Currently builds in multiple TMPDIRs with multiconfig can break
    since the BuildStarted event is used to create directory strutures in several
    cases (e.g. buildstats.bbclass) and there is only on BuildStarted event
    generated in a multiconfig build.
    
    We have two options, a) to add a new MultiConfigBuildStarted event which is
    generated once per multiconfig, or b) allow multiple BuildStarted events.
    
    Having reviewed the code and current users of BuildStarted, sending one event
    per multiconfig seems like its the best way forward and the existing code looks
    able to cope with the duplication of events. I did also check toaster and I think
    that can handle this issue too (multiconfig builds may have other issues there).
    
    I'm therefore proposing we send multiple BuildStarted events for multiconfig
    and for consistency, send multiple BuildCompleted events too.
    
    We need to ensure that BUILDNAME, BUILDSTART and DATE/TIME are set consistently
    in all the different multiconfig datastores. These events can write to the
    datastore so copies are not used. buildFile was also cleaned up to ensure it
    uses the right datastore in various places.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

16	12	lib/bb/cooker.py

commit 160e47f5df90850e64dcb857c81a5039abc9235f
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2017-07-06 12:53:33 +0100

    bitbake: Add MultiConfigParsed event
    
    There are some cases where the metadata needs to be aware a multiconfig build
    is happening and have access to the multiconfig data stores to merge data into
    the common build. This adds such an event allowing access to these datastores.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	0	lib/bb/cookerdata.py
6	0	lib/bb/event.py
1	0	lib/bb/ui/knotty.py

commit 877a1f476212dc151b74ce0f1febdc48956ef0e9
Author: Kristi Rifenbark <kristi.rifenbark@gmail.com>
Date:   2017-06-16 15:09:06 -0700

    bitbake-user-manual: Removed and replaced broken link
    
    Fixes [YOCTO #11675]
    
    THere was a "hambedded" link that was broken. The link was
    intended to give additional information on adding layers.
    Replaced with link about layers and replaced the wording.
    
    Signed-off-by: Kristi Rifenbark <kristi.rifenbark@gmail.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	2	doc/bitbake-user-manual/bitbake-user-manual-hello.xml

commit 3b8d101e564488ff1f5b27744404f9743da2b97d
Author: Kristi Rifenbark <kristi.rifenbark@gmail.com>
Date:   2017-06-16 14:20:00 -0700

    bitbake-user-manual: Replaced bad link
    
    Fixes [YOCTO #11675]
    
    There was a "hambedded" link that was broken. The link was
    intended to show the bitbake.conf file. I replaced it
    with the link to show the actual bitbake.conf file.
    
    Signed-off-by: Kristi Rifenbark <kristi.rifenbark@gmail.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	doc/bitbake-user-manual/bitbake-user-manual-hello.xml

commit a457cbfb1f20a47db3978290921d0708cd96bd70
Author: Ismo Puustinen <ismo.puustinen@intel.com>
Date:   2017-06-28 13:19:31 +0300

    npm fetcher: fix unknown variable name.
    
    'mirrortarball' is supposed to be a local variable to the function.
    
    Signed-off-by: Ismo Puustinen <ismo.puustinen@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/fetch2/npm.py

commit df31a88786ce5bd7708ff14e1379dc2a58a8c0cf
Author: Ross Burton <ross.burton@intel.com>
Date:   2017-06-20 19:47:34 +0100

    cache: don't insert PN into PACKAGES
    
    The cache code currently inserts PN into the package list if it isn't already
    present.  Whilst this ensures that the package list contains something which is
    important for native recipes that don't set PACKAGES, it causes confusing
    behaviour where a normal recipe doesn't have PN in PACKAGES: for example adding
    dhcp to IMAGE_INSTALL will parse successfully but fail at rootfs time as the
    dhcp recipe doesn't generate a dhcp package.
    
    Solve this by only adding PN to the cache's package list if the package list is
    empty.  This results in the package list for recipes such as DHCP being correct,
    but native recipes continue to have just PN in the list as before.
    
    [ YOCTO #5533 ]
    
    Signed-off-by: Ross Burton <ross.burton@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	2	lib/bb/cache.py

commit b303365ca3a1ba5fb8c6839180f1ec26df60c6ce
Author: David Reyna <David.Reyna@windriver.com>
Date:   2017-06-27 13:44:32 -0700

    toaster: test 'commit' first in get_vcs_reference
    
    The 'commit' value should be tested and used first when resolving the ref
    for a layer, since that is an explicit override in each layer index
    'layeritem' record. If should take precedence over more-global 'branch'
    and 'release' values, instead of being last.
    
    [YOCTO #11515]
    
    Signed-off-by: David Reyna <David.Reyna@windriver.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	2	lib/toaster/orm/models.py

commit 02cb2b7f7ff594de75a404396f39a2428750c798
Author: David Reyna <David.Reyna@windriver.com>
Date:   2017-06-27 13:44:31 -0700

    toaster: large package set breaks sqlite query
    
    If you build a project with a large package set, you will get a crash
    in "views.py" when the dashboard attempts to fetch the package set to
    calculate the package count and size. This is a sqlite limitation, and
    it fails with as few as 1220 packages.
    
    [YOCTO #11717]
    
    Signed-off-by: David Reyna <David.Reyna@windriver.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

9	4	lib/toaster/toastergui/views.py

commit a156a4eff67cdc3943494f5be72b96e3db656250
Author: David Reyna <David.Reyna@windriver.com>
Date:   2017-06-27 13:44:30 -0700

    toaster: Add distro selection support
    
    Add the ability to select a distro in the project page,
    based on values from the Layer Index. Add a distro selection
    page with the add layer feature, based on the add machine
    page.
    
    [YOCTO #10632]
    
    Signed-off-by: David Reyna <David.Reyna@windriver.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

19	0	lib/toaster/orm/management/commands/lsupdates.py
25	0	lib/toaster/orm/migrations/0017_distro_clone.py
31	0	lib/toaster/orm/models.py
10	3	lib/toaster/toastergui/api.py
73	0	lib/toaster/toastergui/static/js/projectpage.js
91	0	lib/toaster/toastergui/tables.py
1	0	lib/toaster/toastergui/templates/base.html
1	0	lib/toaster/toastergui/templates/baseprojectpage.html
20	0	lib/toaster/toastergui/templates/distro_btn.html
16	0	lib/toaster/toastergui/templates/project.html
30	0	lib/toaster/toastergui/typeaheads.py
8	0	lib/toaster/toastergui/urls.py

commit 0c94d947b74c4dee23d7b9d255facd3cf839ccbe
Author: David Reyna <David.Reyna@windriver.com>
Date:   2017-06-27 13:44:29 -0700

    toaster: git clone progress bar
    
    If a project has a lot of additional layers, the build may
    appear to hang while those layers are checked out.
    This patch adds a clone progress bar that is visible before
    the parsing progress appears.
    
    [YOCTO #9916]
    
    Signed-off-by: David Reyna <David.Reyna@windriver.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

12	0	lib/toaster/bldcontrol/localhostbecontroller.py
24	0	lib/toaster/orm/migrations/0016_clone_progress.py
15	0	lib/toaster/orm/models.py
15	0	lib/toaster/toastergui/static/js/mrbsection.js
28	1	lib/toaster/toastergui/templates/mrb_section.html
4	0	lib/toaster/toastergui/widgets.py

commit e4c7a94fac7a53fc146387a57e5a09b9ec3caca0
Author: David Reyna <David.Reyna@windriver.com>
Date:   2017-06-27 13:44:28 -0700

    toaster: address Django-1.10 API deprecations
    
    There are four main API deprecations in Django-1.10:
      (a) String view arguments to url() must be replaced by
          the explicit class reference
      (b) New TEMPLATES stucture in settings.py consolidates
          TEMPLATE_DIRS, TEMPLATE_CONTEXT_PROCESSORS,
          TEMPLATE_LOADERS, TEMPLATE_STRING_IF_INVALID, and
          TEMPLATE_DEBUG
      (c) patterns() wrapper in url() is removed, with
          urlpatterns now a simple list
      (d) NoArgsCommand in commands() must be replace by
          BaseCommand, and handle_noargs() changed to
          handle()
    
    Also, the Django version checker must be updated to accept
    two digit sub-version numbers (e.g. "1.8" < "1.10")
    
    [YOCTO #11684]
    
    Signed-off-by: David Reyna <David.Reyna@windriver.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

8	2	bin/toaster
6	4	lib/toaster/bldcollector/urls.py
3	3	lib/toaster/bldcontrol/management/commands/checksettings.py
3	3	lib/toaster/bldcontrol/management/commands/runbuilds.py
4	4	lib/toaster/orm/management/commands/lsupdates.py
31	30	lib/toaster/toastergui/urls.py
3	3	lib/toaster/toastermain/management/commands/buildslist.py
41	29	lib/toaster/toastermain/settings.py
5	3	lib/toaster/toastermain/urls.py
1	1	toaster-requirements.txt

commit 22cc318be1aff16f1b653ff0650fe71d0e9f60bb
Author: Jair Gonzalez <jair.de.jesus.gonzalez.plascencia@linux.intel.com>
Date:   2017-01-20 16:13:03 -0600

    bitbake-selftest: add bb.tests.event to bitbake-selftest
    
    Tests for bitbake event module were created on bb.tests.event.
    This change is to include them on the default test list in
    bitbake-selftest script.
    
    [YOCTO #10368]
    
    Signed-off-by: Jair Gonzalez <jair.de.jesus.gonzalez.plascencia@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	0	bin/bitbake-selftest

commit 0be3ad391adc73cc0dff81bd0ed7874f2c6a00be
Author: Jair Gonzalez <jair.de.jesus.gonzalez.plascencia@linux.intel.com>
Date:   2017-01-20 15:59:09 -0600

    tests: create unit tests for event module
    
    This change adds a new unit test module (bb.tests.event)
    for bitbake event.
    It includes the following items:
    
    - Client and server stubs setup
    - Testing the module's main functions including:
            - get_class_handlers
            - set_class_handlers
            - clean_class_handlers
            - enable_threadlock
            - disable_threadlock
            - get_handlers
            - set_handlers
            - execute_handler
            - fire_class_handlers
            - print_ui_queue
            - fire_ui_handlers
            - fire
            - fire_from_worker
            - register
            - remove
            - register_UIHhandler
            - unregister_UIHhandler
    - Testing event handling using:
            - class Event(object)
            - class OperationStarted(Event)
            - class OperationCompleted(Event)
            - class OperationProgress(Event)
            - class ConfigParsed(Event)
    
    [YOCTO #10368]
    
    Signed-off-by: Jair Gonzalez <jair.de.jesus.gonzalez.plascencia@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

377	0	lib/bb/tests/event.py

commit 839f83dea1e99d1d182b138e5aea1df1c45a92fc
Author: Jair Gonzalez <jair.de.jesus.gonzalez.plascencia@linux.intel.com>
Date:   2017-02-20 17:54:25 -0600

    event: remove mapping for deleted event handlers
    
    The current remove method for class event handlers does not update the
    event mapping after an event handler is deleted from the main dictionary.
    
    This change enhances the remove method by also updating the event mapping
    accordingly.
    
    This was detected after creating the bb.tests.event module.
    
    [YOCTO #10368]
    
    Signed-off-by: Jair Gonzalez <jair.de.jesus.gonzalez.plascencia@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

5	1	lib/bb/event.py

commit 022adb30dbb0df764c9fb515918cb9a88e4f8d6f
Author: Joshua Lock <joshua.g.lock@intel.com>
Date:   2017-06-14 20:30:22 +0100

    fetch: fix handling of files with incorrect checksums from a premirror
    
    Ensure that when an item fetched from a premirror has an invalid checksum the
    fetcher falls back to the usual logic of trying the upstream and any configured
    mirrors.
    
    Signed-off-by: Joshua Lock <joshua.g.lock@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

9	0	lib/bb/fetch2/__init__.py

commit 03ba8db0595723286ad462fa197f862e1efdf0de
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2017-06-15 16:33:28 +0200

    event: drop some unused events
    
    These were all used by support code for the Hob UI which has been
    removed - nothing will currently fire or respond to these events.
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

0	21	lib/bb/event.py

commit 910b96b9894c712aa32b5d4dadda88b766d86e35
Author: David Reyna <David.Reyna@windriver.com>
Date:   2017-06-14 21:57:29 -0700

    toaster: noweb should init database
    
    When the 'noweb' option for Toaster is used, perform the database
    check/create if the Toaster database does not yet exist.
    
    This will allow Toaster to not fail if the first use is with 'noweb'.
    This avoids potentially clashing database updates if there are
    multiple overlaping 'noweb' sessions (for example with a CI system).
    
    If the user wished to update the database, they can either use the
    explicit "lsupdate" command or (re)start a web hosted Toaster session
    (which is gated by the webserver's PID).
    
    [YOCTO #11378]
    
    Signed-off-by: David Reyna <David.Reyna@windriver.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

35	15	bin/toaster

commit c29e137a6e65317b8a36804126511c2137878715
Author: David Reyna <David.Reyna@windriver.com>
Date:   2017-06-14 21:54:32 -0700

    toaster: get_last_build_id not called correctly
    
    The method "get_last_build_id" missing the "()" in several calls. This
    has been failing silently with Django 1.8 but intermittently crash with
    Django 1.9.
    
    [YOCTO #11570]
    
    Signed-off-by: David Reyna <David.Reyna@windriver.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

6	6	lib/toaster/orm/models.py

commit d1ac359d460b1abe9815f323b3fd4cd0231cde6c
Author: David Reyna <David.Reyna@windriver.com>
Date:   2017-06-14 21:51:29 -0700

    toaster: add getMessage to MockEvent
    
    The MockEvent needs to not only stand in for Toaster and Bitbake quick events,
    it also needs to stand in for LogRecord, and for that it needs to provide
    the new getMessage method.
    
    [YOCTO #11440]
    
    Signed-off-by: David Reyna <David.Reyna@windriver.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

6	0	lib/bb/ui/buildinfohelper.py

commit 6f1a42af19220a6a8d75790893da995e84ecd7aa
Author: David Reyna <David.Reyna@windriver.com>
Date:   2017-06-14 21:48:31 -0700

    toaster: fail on layers with sub-layer
    
    For layers directories with sub-layers (for example meta-intel),
    Toaster breaks when trying to exact match a dependency event for
    that sub-layer against the top level layer directory paths.
    
    Given that top the level layer directory paths are unique, adding
    a test to see if the dependency path is a subset of a top level
    path is also unique.
    
    Also, since a warning was issued the processing should not fail
    on the assert but instead should continue and gather the recipes
    and tasks.
    
    [YOCTO #11149]
    
    Signed-off-by: David Reyna <David.Reyna@windriver.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

8	3	lib/bb/ui/buildinfohelper.py

commit 49d11490fad683a96f71de21f55035398ad8247a
Author: David Reyna <David.Reyna@windriver.com>
Date:   2017-06-14 21:45:15 -0700

    toaster: add ID's to build menu links
    
    Add IDs to the build page menu lines, for example "Tasks", "Recipes",
    "Time", "CPU Time", "Disk I/O", and so forth. This will support test
    automation.
    
    [YOCTO #11337]
    
    Signed-off-by: David Reyna <David.Reyna@windriver.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

10	10	lib/toaster/toastergui/templates/basebuildpage.html

commit 5cbf6f67994fc42dae72ece191e5c9630fc4b5af
Author: David Reyna <David.Reyna@windriver.com>
Date:   2017-06-14 21:40:56 -0700

    toaster: add ID's to navigation links
    
    Add IDs to the navigation bar links "All builds", "All projects",
    and "Documentation. This will support test automation.
    
    [YOCTO #11335]
    
    Signed-off-by: David Reyna <David.Reyna@windriver.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

5	3	lib/toaster/toastergui/templates/base.html

commit 7b4e81772ed8789521661a3b32b576c91276ae34
Author: Scott Rifenbark <srifenbark@gmail.com>
Date:   2017-06-14 12:10:42 -0700

    bitbake-user-manual: Updated BBLAYERS_FETCH_DIR variable description
    
    Just discovered a minor issue in the bitbake manual - under the variable
    glossary entry for BBLAYERS_FETCH_DIR we say there's a default value of
    ${COREBASE} but that's not actually true in bitbake itself - there's no
    default in bitbake, that default is set in OE-Core. We can keep this in the YP
    ref manual but in the bitbake manual that sentence should be removed.
    
    Signed-off-by: Scott Rifenbark <srifenbark@gmail.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

0	2	doc/bitbake-user-manual/bitbake-user-manual-ref-variables.xml

commit 5639faa3eef55cc476a82e810e61ca228cbdf221
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2017-06-14 12:10:25 +0200

    cooker: ensure graceful exit after exception during BuildCompleted handler
    
    If an event handler for bb.event.BuildCompleted fails, we still need to
    call finishAsyncCommand() or else BitBake will just exit immediately
    without showing any error summary, or worse in the case of memory
    resident mode BitBake will hang and if you Ctrl+C to break out, the
    command won't be marked as finished which means that no further commands
    will be able to be executed until the server is manually restarted.
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

4	2	lib/bb/cooker.py

commit 18dfd144d0da6ff662308ce4f9d135dc11412133
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2017-06-14 12:10:24 +0200

    cooker: fix always loading cache on every UI start with memres
    
    The main point of memory resident bitbake is to avoid loading data
    unnecessarily on every bitbake invocation. Unfortunately the code that
    updated options from the UI was simply treating the fact that either
    of the "prefile" or "postfile" options were in the list of options
    passed in as an indication that the configuration was invalid, which was
    bad because these are always passed in. We only need to mark the
    configuration as invalid and thus reload it (and thus reload the cache)
    if the option value has actually changed.
    
    At the same time, the recently handled "tracking" option needs to be
    treated in a similar manner since the configuration needs to be reparsed
    if that has changed. Also, add a few extra debug messages to aid
    debugging this code in future.
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

12	5	lib/bb/cooker.py

commit d848bff7cf78f63986467b51f701a998a480eb25
Author: Juro Bystricky <juro.bystricky@intel.com>
Date:   2017-06-13 17:46:43 -0700

    bitbake: runqueue: multiconfig fix
    
    Differentiate between fn and taskfn in "execute".
    This was somehow missed in "fakeroot" handling.
    
    Signed-off-by: Juro Bystricky <juro.bystricky@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/runqueue.py

commit 1f6e6aa8262369eafc3bbf9f01f8d981f90becdf
Author: Juro Bystricky <juro.bystricky@intel.com>
Date:   2017-06-13 09:21:54 -0700

    bitbake:process: flush stderr/stdout to log
    
    When a process terminates, some messages may still remain in stdout or
    stderr and do not make it into the log file.
    In addition, the messages that do make it to the log file may end up in
    the log file in incorrect order.
    This patch flushes all messages into the log file after the
    process terminates. Some additional log flushing is also needed
    to keep the various messages showing up in the log file in proper order.
    
    [YOCTO#10785]
    
    Signed-off-by: Juro Bystricky <juro.bystricky@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

43	36	lib/bb/process.py

commit 8d0a76f5a595dddf16b7268bae2c00ef5f568316
Author: Patrick Ohly <patrick.ohly@intel.com>
Date:   2017-06-07 15:56:25 +0200

    ConfHandler.py: allow require or include with multiple parameters
    
    "inherit" already allows inheriting more than one class in a single
    statement. The same also makes sense for "include" and "require",
    because then one can generate a list of files to be included
    dynamically also for the case that more than one file needs to be
    included.
    
    Signed-off-by: Patrick Ohly <patrick.ohly@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

12	8	lib/bb/parse/parse_py/ConfHandler.py

commit 8b39c6361758b96fce50a53a6dba8008cd7e6433
Author: Patrick Ohly <patrick.ohly@intel.com>
Date:   2017-06-07 15:56:24 +0200

    ConfHandler.py: allow require or include without parameter
    
    Writing .bbappends that only have an effect when some configuration
    variable like DISTRO_FEATURES is changed becomes easier when allowing
    "include" or "require" without a parameter. The same was already
    allowed for "inherit".
    
    Then one can write in a .bbappend:
    
      require ${@bb.utils.contains('DISTRO_FEATURES', 'foo', 'bar.inc', '', d)}
    
    Signed-off-by: Patrick Ohly <patrick.ohly@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

4	0	lib/bb/parse/parse_py/ConfHandler.py

commit 92c49b9b1a16dfd35444db8143bd4cae4cda70cc
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2017-06-07 10:18:49 +0100

    cookerdata: Implement LAYERSERIES_COMPAT and LAYERSERIES_CORENAMES
    
    Currently, someone trying a master branch of any given layer may
    or may not find it works with the version of OE-Core that they
    have picked.
    
    This patchset introduces LAYERSERIES_CORENAMES and
    LAYERSERIES_COMPAT_<layername> with the intention of allowing layers
    to indicate which versions of the core project they're compatible with.
    
    In general the master branch will use the next release codename as
    the value of LAYERSERIES_CORENAMES, meaning that the waterfall model
    of layer releases is supported with layers updating their
    LAYERSERIES_COMPAT_ values as they branch for release.
    
    Both variables support multiple strings and a given layer is accepted
    if there is overlap of any one value. This means a layer can be compatible
    with multiple core versions.
    
    Setting LAYERSERIES_COMPAT_ will be required by the Yocto Project
    Compatible v2 standard but the system will not error if its not set at this
    point.
    
    This should make it clear when a given layer is unmaintained and untested
    with new releaes of OE-Core, a common user pain point.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

7	0	lib/bb/cookerdata.py

commit 9bd96cf938f746ace8d157f6b1b6c2550798085f
Author: Ming Liu <peter.x.liu@external.atlascopco.com>
Date:   2017-06-06 05:27:52 +0200

    bitbake-user-manual-metadata.xml: fix a typo
    
    'buildCompleted' should be 'BuildCompleted'.
    
    Signed-off-by: Ming Liu <peter.x.liu@external.atlascopco.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	doc/bitbake-user-manual/bitbake-user-manual-metadata.xml

commit 66d866745f35468d1540a793d07e3a401298b84b
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2017-06-07 21:04:17 +0200

    knotty: prevent extra logger from being enabled for tinfoil
    
    tinfoil sets up its own logger by default, but if and when we initialise
    the UI (by default knotty) will also set one up, leading to duplicated
    messages specifically from tasks. To avoid this, rather than adding some
    kind of parameter, just check if there is already a logger outputting to
    stdout/stderr and if so, skip adding our own.
    
    Part of the fix for [YOCTO #11275].
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

7	0	lib/bb/msg.py
3	2	lib/bb/ui/knotty.py

commit 8a5bae76f91f2411187c638a42fa3c762052cf11
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2017-06-07 21:04:16 +0200

    tinfoil: fix duplication of log messages
    
    Adding an additional logger in setup_bitbake() interacts poorly with the
    logger we have added by default in tinfoil's constructor, with the
    result that messages may be doubled or even tripled in tinfoil-using
    scripts. Disable adding this one when calling setup_bitbake() from
    tinfoil to avoid this problem.
    
    Part of the fix for [YOCTO #11275].
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	2	lib/bb/main.py
2	1	lib/bb/tinfoil.py

commit a322f13183c66a28d93cc4bc3d839d95fc1d90f4
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2017-06-09 17:13:51 +0200

    command / cooker: drop Hob support commands and functions
    
    Drop a number of the commands and support functions that were created
    solely to support functionality in the now-removed Hob UI. In most cases
    we now have this functionality elsewhere e.g. to modify config files and
    recipes we have bb.utils.edit_metadata_file() and friends, and in OE we
    have oe.recipeutils.patch_recipe_file() and friends which build on top of
    the former. Additionally, some of it represented pretty egregious
    incursion of OE metadata-specific references into BitBake code.
    
    For now I have left in the find*File functions and commands as they are
    relatively generic and possibly still useful, but they might be removed
    in future.
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

0	60	lib/bb/command.py
0	193	lib/bb/cooker.py

commit 8ad31a3eff5cfcb7b1c462578a582dafcbc426d4
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2017-06-09 15:34:46 +0200

    cooker: add BB_CMDLINE to enable access to UI command line with memres
    
    In OpenEmbedded's buildhistory class we want access to the bitbake
    command line that launched the build, and up to now we were simply using
    sys.argv from within the event handler to get that. Unfortunately that
    doesn't work in memory resident mode, since the event handler is
    naturally executing within the server and thus will give you the command
    that launched the bitbake server which is much less interesting. Add a
    dynamic variable BB_CMDLINE to provide access to this, set from sys.argv
    within the UI process in updateToServer().
    
    (Note that BB_CMDLINE isn't currently passed through to the worker, so
    this is only really readable from event handlers plus any explicit
    getVariable calls - in theory an observe-only UI could read it for
    example.)
    
    Part of the fix for [YOCTO #11634].
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	1	lib/bb/command.py
6	1	lib/bb/cooker.py
1	1	lib/bb/cookerdata.py

commit 74d2ef99a920aa9e70470ba8e600ea973a3c672a
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2017-06-09 15:34:45 +0200

    cooker: set config valid flags in initConfigurationData()
    
    If we set these flags here then we can not only tidy up some of the code
    that calls initConfigurationData() (and reset() which simply calls the
    former), we also avoid calling initConfigurationData() an extra time
    unnecessarily during startup (since setting baseconfig_valid = False in
    updateConfigOpts() also resulted in initConfigurationData() being
    called from updateCacheSync() at the end of the command.)
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	6	lib/bb/cooker.py

commit fe4f3487368bc35043a1ba464e1c69d2c9cbefc6
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2017-06-09 15:34:44 +0200

    cooker: fix file changes not triggering task re-execution with memres
    
    If you build a recipe, modify one of the files referred to in SRC_URI,
    then build it again, it should re-run do_fetch and the tasks that depend
    upon it to incorporate the modified file. With memory resident mode this
    was not working unless you restarted the server, because the mtime of
    the file was cached and thus we never checked the actual file. Clear out
    the mtime caches in buildTargets() to ensure this isn't an issue. I did
    a minor refactoring to break this out to its own function since we were
    already clearing out the build mtime cache here.
    
    (The test I used for this was . ./oe-init-build-env-memres,
    bitbake -c fetch mdadm, modify the comments at the top of one of the
    patches referred to in the recipe, and then bitbake -c fetch mdadm again
    and it should re-execute the fetch task ("... 0 didn't need to be
    re-run".)
    
    Fixes [YOCTO #10732].
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

13	1	lib/bb/cooker.py

commit 57d4977555cf892b15dd0302dfe261fe37d49327
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2017-06-09 15:34:43 +0200

    cookerdata: fix variable history not showing in bitbake -e with memres
    
    CookerConfiguration sets the "tracking" option to True when -e is
    specified in order to have history tracking enabled in the datastore
    so that we can show variable history (which isn't enabled by default for
    performance reasons), however in memory resident mode this wasn't doing
    anything because it was happening on the UI side only. We do have a
    mechanism for updating the cooker configuration in the server, but the
    tracking option wasn't being included in the list of options we updated,
    so we just need to add this option to fix the issue.
    
    Fixes [YOCTO #10730].
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/cookerdata.py

commit 04f8bd50aa04b12cf91dd6a3154527ad2c24695c
Author: Patrick Ohly <patrick.ohly@intel.com>
Date:   2017-06-07 11:03:18 +0200

    cookerdata: Add support for BBFILES_DYNAMIC
    
    BBFILES_DYNAMIC can be used to activate content only when some other
    layers are present. The other layers are identified by the collections
    that they define.
    
    The main use case is to avoid .bbappends without the corresponding .bb
    file in layers that want to modify other layers via .bbappends without
    introducing a hard dependency on those other layers. .bb files could
    also be handled via BBFILES_DYNAMIC.
    
    Entries in BBFILES_DYNAMIC must have the form <collection
    name>:<filename pattern>. Example usage:
     BBFILES_DYNAMIC += " \
         clang-layer:${LAYERDIR}/bbappends/meta-clang/*/*/*.bbappend \
         core:${LAYERDIR}/bbappends/openembedded-core/meta/*/*/*.bbappend \
     "
    
    Parsing is aborted when invalid entries are found with an error
    message like this:
    
     ERROR: BBFILES_DYNAMIC entries must be of the form <collection name>:<filename pattern>, not:
         /work/my-layer/bbappends/meta-security-isafw/*/*/*.bbappend
         /work/my-layer/bbappends/openembedded-core/meta/*/*/*.bbappend
    
    Based on a patch by Richard Purdie.
    
    Signed-off-by: Patrick Ohly <patrick.ohly@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

14	0	lib/bb/cookerdata.py

commit 705ab252e631903e6d2e46202b419a9e8adcd861
Author: Chang Rebecca Swee Fun <rebecca.swee.fun.chang@intel.com>
Date:   2017-06-05 16:43:55 +0800

    bitbake-layers: check layer dependencies before adding
    
    In the original implementation, "bitbake-layers add-layers <layer>"
    succeeded without error checking. This will further introduce
    failures in recipe parsing only when "bitbake" command is executed.
    Adding a meta layer without its dependency layer(s) should failed
    and exit the process gracefully.
    
    Added extra argument "-F" to force add a layer without checking
    layer dependency.
    
    [YOCTO #10913]
    
    Signed-off-by: Phoong Stanley Cheong Kwan <stanley.cheong.kwan.phoong@intel.com>
    Signed-off-by: Chang Rebecca Swee Fun <rebecca.swee.fun.chang@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	0	bin/bitbake-layers
22	4	lib/bblayers/action.py

commit 2e35de1f19dc73a61a18a3eb186efede078d597d
Author: Andy Voltz <andy.voltz@timesys.com>
Date:   2017-05-18 12:09:10 -0400

    tinfoil: allow extra features to be passed to prepare
    
    Signed-off-by: Andy Voltz <andy.voltz@timesys.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

4	1	lib/bb/tinfoil.py

commit 37c298b27e3f72b21513124237cfeffb22c0e2f0
Author: Andy Voltz <andy.voltz@timesys.com>
Date:   2017-05-18 12:09:11 -0400

    cooker: fix undefined dep in generatePkgDepTreeData
    
    The loop for populating the depends of the tree data should use dep
    instead of item.
    
    Signed-off-by: Andy Voltz <andy.voltz@timesys.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	2	lib/bb/cooker.py

commit d2cf67bcaf001acb6be8fc5884fb450649849847
Author: Mikko Rapeli <mikko.rapeli@bmw.de>
Date:   2017-06-01 18:51:33 +0300

    bitbake: Fix return value checks from subprocess.call()'s
    
    Python function subprocess.call() returns the return value of the
    executed process. If return values are not checked, errors may
    go unnoticed and bad things can happen.
    
    Change all callers of subprocess.call() which do not check for
    the return value to use subprocess.check_call() which raises
    CalledProcessError if the subprocess returns with non-zero value.
    
    https://docs.python.org/2/library/subprocess.html#using-the-subprocess-module
    
    All users of the function were found with:
    
    $ git grep "subprocess\.call" | \
      egrep -v 'if.*subprocess\.call|=\ +subprocess\.call|return.*subprocess\.call'
    
    Tested similar patch on top of yocto jethro. Only compile tested
    core-image-minimal on poky master branch.
    
    Signed-off-by: Mikko Rapeli <mikko.rapeli@bmw.de>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/ui/ncurses.py
1	1	lib/bb/utils.py

commit 22bb7c9270f02ddae72e13d849375feee5f4a98b
Author: Ola x Nilsson <ola.x.nilsson@axis.com>
Date:   2017-05-31 10:46:48 +0200

    ConfHandler: Require whitespace between export and variable name
    
    Signed-off-by: Ola x Nilsson <olani@axis.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/parse/parse_py/ConfHandler.py
22	1	lib/bb/tests/parse.py

commit c11b4832879354b387a8c9c6a3096f2d621afeac
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2017-05-29 11:10:18 +0100

    siggen: Make calc_taskhash match get_taskhash for file checksums
    
    The code in these two functions is meant to be equivlanet in behaviour
    but isn't. Add in code to ensure files that don't exist are handled
    consistently by both functions. Users did report being able to generate
    tracebacks otherwise.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	1	lib/bb/siggen.py

commit 97f856f0455d014ea34c28b1c25f09e13cdc851b
Author: Christopher Larson <kergoth@gmail.com>
Date:   2017-05-13 02:46:33 +0500

    fetch/git: add support for removing arbitrary revs for shallow
    
    In certain cases, it's valuable to be able to exert more control over what
    history is removed, beyond srcrev+depth. As one example, you can remove most
    of the upstream kernel history from a kernel repository, keeping predominently
    the non-publically-accessible content. If the repository is private, the
    history in that repo couldn't be restored via `git fetch --unshallow`, but
    upstream history could be.
    
    Example usage:
    
        # Remove only these revs, not at a particular depth
        BB_GIT_SHALLOW_DEPTH_pn-linux-foo = "0"
        BB_GIT_SHALLOW_REVS_pn-linux-foo = "v4.1"
    
    Signed-off-by: Christopher Larson <chris_larson@mentor.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

17	1	lib/bb/fetch2/git.py
65	1	lib/bb/tests/fetch.py

commit ca0dd3c95502b22c369fbf37f915f45e02c06887
Author: Christopher Larson <kergoth@gmail.com>
Date:   2017-05-13 02:46:32 +0500

    fetch/gitannex: add support for shallow mirror tarballs
    
    When we're building from a shallow mirror tarball, we don't want to do
    anything with ud.clonedir, as it's not being used when we unpack. As such,
    disable updating annex in that case. Also include annex files in the shallow
    tarball.
    
    Signed-off-by: Christopher Larson <chris_larson@mentor.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

20	3	lib/bb/fetch2/gitannex.py
17	0	lib/bb/tests/fetch.py

commit 6c0613f1f2f9d4f009545f82a9173e80396f9d34
Author: Christopher Larson <kergoth@gmail.com>
Date:   2017-05-13 02:46:31 +0500

    fetch/gitsm: add support for shallow mirror tarballs
    
    When we're building from a shallow mirror tarball, we don't want to do
    anything with ud.clonedir, as it's not being used when we unpack. As such,
    disable updating the submodules in that case. Also include the repositories in
    .git/modules in the shallow tarball. It does not actually make the submodule
    repositories shallow at this time.
    
    Signed-off-by: Christopher Larson <chris_larson@mentor.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

11	6	lib/bb/fetch2/gitsm.py
27	4	lib/bb/tests/fetch.py

commit 1771934cd9f8b5847c6fcae0a906fb99d6b0db16
Author: Christopher Larson <kergoth@gmail.com>
Date:   2017-05-13 02:46:30 +0500

    fetch/git: add support for keeping extra refs for shallow
    
    By default, all unused refs (branches & tags) are removed from the repository,
    as shallow processing scales with the number of refs it has to process. Add
    the ability to explicitly specify additional refs to keep. This is
    particularly useful for recipes with custom checkout processes, or whose
    git-based versioning requires a tag be available (i.e. for `git describe
    --tags`). The new `BB_GIT_SHALLOW_EXTRA_REFS` variable is a space-separated
    list of refs, fully specified, and support wildcards.
    
    Example usages:
    
        BB_GIT_SHALLOW_EXTRA_REFS = "refs/tags/v1.0"
        BB_GIT_SHALLOW_EXTRA_REFS += "refs/heads/*"
    
    Signed-off-by: Christopher Larson <chris_larson@mentor.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

21	1	lib/bb/fetch2/git.py
42	0	lib/bb/tests/fetch.py

commit 9dfc517e5bcc6dd203a0ad685cc884676d2984c4
Author: Christopher Larson <kergoth@gmail.com>
Date:   2017-05-13 02:46:29 +0500

    fetch/git: support per-branch/per-url depths for shallow
    
    Allow the user to explicitly adjust the depth for named urls/branches. The
    un-suffixed BB_GIT_SHALLOW_DEPTH is used as the default.
    
    Example usage:
    
        BB_GIT_SHALLOW_DEPTH = "1"
        BB_GIT_SHALLOW_DEPTH_doc = "0"
        BB_GIT_SHALLOW_DEPTH_meta = "0"
    
    Signed-off-by: Christopher Larson <chris_larson@mentor.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

40	21	lib/bb/fetch2/git.py
33	2	lib/bb/tests/fetch.py

commit 5ed7d85fda7c671be10ec24d7981b87a7d0d3366
Author: Christopher Larson <kergoth@gmail.com>
Date:   2017-05-13 02:46:28 +0500

    fetch/git: add support for shallow mirror tarballs
    
    This adds support to the git fetcher for fetching, using, and generating
    mirror tarballs of shallow git repositories. The external git-make-shallow
    script is used for shallow mirror tarball creation.
    
    This implements support for shallow mirror tarballs, not shallow clones.
    Supporting shallow clones directly is not really doable for us, as we'd need
    to hardcode the depth between branch HEAD and the SRCREV, and that depth would
    change as the branch is updated.
    
    When BB_GIT_SHALLOW is enabled, we will always attempt to fetch a shallow
    mirror tarball. If the shallow mirror tarball cannot be fetched, it will try
    to fetch the full mirror tarball and use that. If a shallow tarball is to be
    used, it will be unpacked directly at `do_unpack` time, rather than extracting
    it to DL_DIR at `do_fetch` time and cloning from there, to keep things simple.
    There's no value in keeping a shallow repository in DL_DIR, and dealing with
    the state for when to convert the clonedir to/from shallow is not worthwhile.
    
    To clarify when shallow is used vs a real repository, a current clone is
    preferred to either tarball, a shallow tarball is preferred to an out of date
    clone, and a missing clone will use either tarball (attempting the shallow one
    first).
    
    All referenced branches are truncated to SRCREV (that is, commits *after*
    SRCREV but before HEAD are removed) to further shrink the repository. By
    default, the shallow construction process removes all unused refs
    (branches/tags) from the repository, other than those referenced by the URL.
    
    Example usage:
    
        BB_GIT_SHALLOW ?= "1"
    
        # Keep only the top commit
        BB_GIT_SHALLOW_DEPTH ?= "1"
    
        # This defaults to enabled if both BB_GIT_SHALLOW and
        # BB_GENERATE_MIRROR_TARBALLS are enabled
        BB_GENERATE_SHALLOW_TARBALLS ?= "1"
    
    Signed-off-by: Christopher Larson <chris_larson@mentor.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

118	15	lib/bb/fetch2/git.py
299	0	lib/bb/tests/fetch.py

commit 0254020f0e1911c0eaf99111b91828d2a74a4ee1
Author: Christopher Larson <kergoth@gmail.com>
Date:   2017-05-13 02:46:27 +0500

    git-make-shallow: add script to make a git repo shallow
    
    This script will be used by the git fetcher to create shallow mirror tarballs.
    
        usage: git-make-shallow [-h] [--ref REF] [--shrink] REVISION [REVISION ...]
    
        Remove the history of the specified revisions, then optionally filter the
        available refs to those specified.
    
        positional arguments:
          REVISION           a git revision/commit
    
        optional arguments:
          -h, --help         show this help message and exit
          --ref REF, -r REF  remove all but the specified refs (cumulative)
          --shrink, -s       shrink the git repository by repacking and pruning
    
    While git does provide the ability to clone at a specific depth, and fetch all
    remote refs at a particular depth, the depth is across all branches/tags, and
    doesn't provide the flexibility we need, hence this script.
    
    Refs (branches+tags) can be filtered, as the process of history removal scales
    up rapidly with the number of refs. Even the existing `git fetch --depth=` is
    extremely slow on an upstream kernel repository with all the branches and tags
    kept.
    
    This uses the same underlying mechanism to implement the history removal which
    git itself uses (.git/shallow), and the results, when configured similarly, are
    in line with the results git itself produces with `fetch --depth`.
    
    Signed-off-by: Christopher Larson <chris_larson@mentor.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

165	0	bin/git-make-shallow
127	0	lib/bb/tests/fetch.py

commit 02eebee6709e57b523862257f75929e64f16d6b0
Author: Christopher Larson <kergoth@gmail.com>
Date:   2017-05-13 02:46:26 +0500

    fetch: support multiple mirror tarball filenames
    
    Remove ud.mirrortarball in favor of ud.mirrortarballs. Each tarball will be
    attempted, in order, and the first available will be used. This is needed for
    git shallow mirror tarball support, as we want to be able to use either
    a shallow or full mirror tarball.
    
    Signed-off-by: Christopher Larson <chris_larson@mentor.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

37	35	lib/bb/fetch2/__init__.py
3	2	lib/bb/fetch2/git.py
3	2	lib/bb/fetch2/hg.py
4	3	lib/bb/fetch2/npm.py

commit 362f6044fcaafe51ab4377af8f2606165b112717
Author: Scott Rifenbark <srifenbark@gmail.com>
Date:   2017-05-11 12:03:48 -0700

    bitbake-user-manual: Updated INHERIT descriptions
    
    Fixes [YOCTO #11498]
    
    Enhanced the glossary description for the INHERIT variable to give more
    detail and to cross-reference the reader back into the Chapter 3
    section describing its use.
    
    Signed-off-by: Scott Rifenbark <srifenbark@gmail.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	1	doc/bitbake-user-manual/bitbake-user-manual-metadata.xml
13	3	doc/bitbake-user-manual/bitbake-user-manual-ref-variables.xml

commit 6eb56624e6d8dc1944e559b4f6584bfe66f566ba
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2016-05-24 15:22:23 +0100

    data_smart: Don't cache/process capitalised overrides
    
    Bitbake now only processes overrides which are lowercase since
    this allows variables like SRC_URI not to pollute the cache.
    
    There was a corner case where XXX_append_SomeThing was still being
    processed (yet XXX_append_SomeThing_SomeOtherThing would not be).
    
    This patch ensures we're consistent and only process lowercase
    _append/_prepend and _remove operators too.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/data_smart.py

commit c46f183b3ea94789dd83cb280a1bf5735189c9bc
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2017-05-15 09:29:56 +1200

    lib/bb/fetch2: fix typo in conflicting revision message
    
    spcify -> specify
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/fetch2/__init__.py

commit a6345899ffeb595ca287b295945713eb95032124
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2017-05-15 09:29:55 +1200

    lib/bb/COW.py: fix typo in Tim Ansell's name
    
    See AUTHORS for reference.
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/COW.py

commit 21d963149b5d97452420230a252101115b708d85
Author: David Reyna <David.Reyna@windriver.com>
Date:   2017-04-19 22:41:21 -0700

    toaster: move release lookup from morty to pyro
    
    Move the release name lookup into the layer index
    from 'morty' to the 'pyro'.
    
    Move the bitbake branch from 1.32 to 1.34.
    
    [YOCTO #11377]
    
    Signed-off-by: David Reyna <David.Reyna@windriver.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

6	6	lib/toaster/orm/fixtures/oe-core.xml
9	9	lib/toaster/orm/fixtures/poky.xml

commit b3d2c9917c5fd8278878328794daa107ddf79b64
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2017-04-20 14:20:29 +1200

    lib/bb/command: fix overrides in remote datastores where there is no default
    
    If you have, for example, no value set for a variable VARIABLE and a
    then VARIABLE_pn-something = "value" and then you parse something.bb,
    you expect getVar('VARIABLE') on the resulting datastore to return
    "value", but the code here assumed that if the variable wasn't set
    without overrides then we didn't need to return the overridedata and
    thus we didn't get the overridden value.
    
    In OE this affected the ability to get RECIPE_MAINTAINER for a recipe
    in a script using tinfoil (since this is only set from an inc file with
    _pn- overrides for each recipe, and no default is set).
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	0	lib/bb/command.py

commit b4da94a368c6c44c6e5b6e6e9a1e041ed84b4554
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2017-04-19 10:42:07 +0100

    bitbake: Update version to 1.34.0 for stable release
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	bin/bitbake
1	1	lib/bb/__init__.py

commit e9c03fbfd7b057b28645affa263cb4aebfa24b04
Author: Juro Bystricky <juro.bystricky@intel.com>
Date:   2017-04-10 08:51:04 -0700

    command.py: multiconfig support for findBestProvider
    
    In a multiconfig environment, a tinfoil call such as
    
        tinfoil.parse_recipe("multiconfig:arduino-101-sss:gcc")
    
    can fail with an error such as:
    
      File "/data/master/poky/bitbake/lib/bb/tinfoil.py", line 373, in get_recipe_file
        raise bb.providers.NoProvider('Unable to find any recipe file matching "%s"' % pn)
    bb.providers.NoProvider: Unable to find any recipe file matching "multiconfig:arduino-101-sss:gcc"
    
    The culprit is findBestProvider, which does not handle multiconfig.
    This patch fixes the error and in the case mentioned above the tinfoil call returns:
    
      "multiconfig:arduino-101-sss:/data/master/poky/meta/recipes-devtools/gcc/gcc_6.3.bb"
    
    [YOCTO#11210]
    
    Signed-off-by: Juro Bystricky <juro.bystricky@intel.com>
    Signed-off-by: Ross Burton <ross.burton@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

8	2	lib/bb/command.py

commit 4fca9a07f2d6b0544977112672b786982d7bb8f2
Author: Zhixiong Chi <zhixiong.chi@windriver.com>
Date:   2017-04-12 11:29:17 +0800

    bitbake-layers: add signal hander to avoid exception
    
    Fixed:
    bitbake-layers show-recipes | less
    press "q" to exit
    
    There will be a Broken pipe error output as follows:
    "BrokenPipeError: [Errno 32] Broken pipe"
    
    Signed-off-by: Zhixiong Chi <zhixiong.chi@windriver.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	0	bin/bitbake-layers

commit edf6e6094a9f7ad4b2ba06eef8fd34756edbedce
Author: Nathan Rossi <nathan@nathanrossi.com>
Date:   2017-04-11 23:07:50 +1000

    lib/bb/{data, siggen}: Don't warn on SkipRecipe exceptions
    
    Recipes/variables that raise a SkipRecipe exception are intentionally
    skipped, and should not generate warnings.
    
    [YOCTO #11319]
    
    Signed-off-by: Nathan Rossi <nathan@nathanrossi.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	0	lib/bb/data.py
2	0	lib/bb/siggen.py

commit 3a319f079d699c870d8531e051ab65e6278d1fa5
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2017-04-11 14:01:50 +0100

    data_smart: Ensure _remove operations on newly set variables are cleared
    
    We clear append/prepend on newly set variables, we should also clear
    remove operations. If we don't do this, there is no way we can actually
    delete a remove operation. Bitbake internally uses parsing=True to avoid
    these side effects when making its own internal calls.
    
    Also add a testcase to bitbake-selftest to ensure we remain consistent going
    forward from here.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	0	lib/bb/data_smart.py
6	0	lib/bb/tests/data.py

commit 1360d7b847cc01031edb2f4b289fac9560d72fa7
Author: David Reyna <David.Reyna@windriver.com>
Date:   2017-04-09 15:38:51 -0700

    toaster: fix SDK artifact capture
    
    Use the TaskArtifacts event to scan the SDK and ESDK manifests
    to cleanly collect the respective artifact files.
    
    The previous method was broken when the SDK file deployment moved
    from the do_populate_sdk[_ext] tasks to their sstate tasks. That
    method is disabled (but not yet removed) in preparation for the
    rest of refactor work for the parent #10283 work.
    
    [YOCTO #10850]
    
    Signed-off-by: David Reyna <David.Reyna@windriver.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

30	0	lib/bb/ui/buildinfohelper.py
1	3	lib/bb/ui/toasterui.py

commit 9011366689b26305281fcb2d412dcacece917e18
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2017-04-11 10:35:39 +1200

    bitbake-diffsigs: fix traceback with no arguments
    
    In the move over to argparse we've made the two signature file arguments
    optional and thus if -t is not in use we need to explicitly check if at
    least one signature file has been specified - and if not, show an error
    and the command-line help.
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

4	0	bin/bitbake-diffsigs

commit 227c5acd4b40154bc61202e7bb67a13818a7d727
Author: Markus Lehtonen <markus.lehtonen@linux.intel.com>
Date:   2017-04-10 13:50:41 +0300

    cache: prevent division-by-zero in load_cahefile()
    
    [YOCTO 11315]
    
    Signed-off-by: Markus Lehtonen <markus.lehtonen@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

4	0	lib/bb/cache.py

commit 54d61e7c64c97799de85b3563119f0f5d051675e
Author: David Reyna <David.Reyna@windriver.com>
Date:   2017-04-09 22:12:57 -0700

    toaster: fix add layer button for Machines
    
    Fix a missing close quote in the layer add button, and
    use the layer index for the xhr_layer call.
    
    [YOCTO #11213]
    
    Signed-off-by: David Reyna <David.Reyna@windriver.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	2	lib/toaster/toastergui/templates/machine_btn.html

commit 29c9fa31d0f03553e24391568d2a5cb588595420
Author: David Reyna <David.Reyna@windriver.com>
Date:   2017-04-10 06:29:55 -0700

    toaster: Toaster filters are broken
    
    A syntax fix inadvertantly broke the Toaster filter feature.
    
    [YOCTO #11317]
    
    Signed-off-by: David Reyna <David.Reyna@windriver.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/toaster/toastergui/static/js/table.js

commit 04a023c8fdea1e1812fcdcaf00345aab59f9abe1
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2017-04-07 09:52:11 +1200

    bitbake-diffsigs: colourise output
    
    If the output is a TTY, add colour to the output in order to make it
    easier to read. At the moment this is fairly basic, just add colour to
    the "titles" of each change and to the diff output.
    
    I tried to introduce this without changing the code too much - rather
    than moving everything over to the new python formatting style, I've
    introduced a color_format() function which takes care of the colour
    formatting, either accepting additional format arguments or
    alternatively leaving the caller to use the old-style formatting (%) to
    insert values.
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

12	6	bin/bitbake-diffsigs
73	28	lib/bb/siggen.py

commit 20db6b6553c80e18afc4f43dc2495435f7477822
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2017-04-07 09:52:10 +1200

    lib/bb/siggen: show word-diff for single-line values containing spaces
    
    If a variable value has changed and either the new or old value contains
    spaces, a word diff should be appropriate and may be a bit more readable.
    Import the "simplediff" module and use it to show a word diff (in the
    style of GNU wdiff and git diff --word-diff).
    
    Also use a similar style diff to show changes in the runtaskhashes list.
    I didn't use an actual word-diff here since it's a little different - we
    can be sure that the list is a list and not simply a free-format string.
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	0	LICENSE
37	1	lib/bb/siggen.py
22	0	lib/simplediff/LICENSE
198	0	lib/simplediff/__init__.py

commit 6543a59b1ebd3194a7c6421cffc66ebe31a67c62
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2017-04-07 09:52:09 +1200

    lib/bb/siggen: add collapsed mode to compare_sigfiles()
    
    If we just want to drill down to the actual differences then we don't
    need to see certain things in the output, e.g. basehash changing or the
    signature of dependent tasks. This will be used for comparing signatures
    within buildhistory-diff in OE-Core; the default mode as used by
    bitbake-diffsigs and bitbake -S printdiff remains unchanged for the
    moment.
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

28	23	lib/bb/siggen.py

commit d9813b1a4223cf8dc80cab90e467ddf4bf8d1078
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2017-04-07 09:52:08 +1200

    bitbake-diffsigs: add an option to find and compare specific signatures
    
    With the -t option which recurses to find the ultimate cause of a
    signature change, it was hardcoded to take the last two executions of
    the specified task. On the other hand, if you have two specific task
    hashes (say from bitbake output, or some other tool) then you'll want to
    pick those, so provide an option to specify those as well. (Note, the
    new -s option needs to be specified alongside -t rather than instead of
    it.)
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

59	36	bin/bitbake-diffsigs

commit 7f130e0b5ce6cfc6b35176465f260092cd3b3d64
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2017-04-07 09:52:07 +1200

    bitbake-diffsigs: change to use argparse
    
    Argparse is a bit easier to deal with than optparse, and since we're
    about to add some options, migrate this script over.
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

33	31	bin/bitbake-diffsigs

commit cb170543605288b3e8badfac3a54c588f4c95413
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2017-04-07 09:52:06 +1200

    lib/bb/siggen: don't show unchanged runtaskdeps list
    
    If the runtaskdeps list hasn't actually changed (but the signatures of
    some of the tasks did) then it doesn't make sense to print out the old
    and new lists as they are both the same and may be very long, e.g. for
    do_rootfs in OE.
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

6	2	lib/bb/siggen.py

commit 4d254ae63a35231c98e3f73f669b040ed1144042
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2017-04-07 09:52:05 +1200

    lib/bb/siggen: show a diff when dumping changes to multi-line values
    
    When dumping changes to signatures e.g. output of bitbake -s printdiff,
    if for example a function has changed, it's much more readable to see a
    unified diff of the changes rather than just printing the old function
    followed by the new function, so use difflib to do that.
    
    Note: I elected to keep to one item in the returned list per change,
    rather than one line per line of output, so that the caller can still
    look at changes individually if needed. Thus I've added some handling to
    bitbake-diffsigs to split the change into lines so that each line is
    displayed indented.
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	1	bin/bitbake-diffsigs
11	1	lib/bb/siggen.py

commit f0d7ab259d8ef95643e7229474b7850608aa4426
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2017-04-07 09:52:04 +1200

    bitbake-diffsigs: drop naive logic for removing duplicate files
    
    This logic doesn't work in practice, certainly not with current versions
    where sigdata files are preserved in the stamps directory and therefore
    there will often be multiple sigdata files - you can now easily get
    files for the same signature from sstate and the stamps directory with the
    result that bitbake-diffsigs reports nothing has changed. Instead, let's
    change the find_siginfo function in OE-Core to simply not return
    duplicates so we don't have to filter them out here.
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

0	16	bin/bitbake-diffsigs

commit c87764b9147792a10efad3ed5378f36f0a055bc6
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2017-04-07 09:52:03 +1200

    bitbake-diffsigs: properly report which signature is missing
    
    If just one of the two signatures we want to compare aren't available,
    report that one rather than misleadingly claiming both are missing.
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

7	3	bin/bitbake-diffsigs

commit 55cd4045a37afc954f4d5091f524756b266064fc
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2017-04-07 09:52:02 +1200

    lib/bb/siggen: add missing path separator to cleaned paths
    
    Printing "pbzip2pbzip2_1.1.13.bb" is ugly, we need to add a separating
    slash so that we get "pbzip2/pbzip2_1.1.13.bb" instead.
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/siggen.py

commit 99f49b56115b1f8d1a0a0b911da62ffd1f997b5f
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2017-04-07 09:52:01 +1200

    bitbake-diffsigs: fix -t picking wrong files to compare
    
    We weren't picking the right files to compare here - according to the
    order in which the list is sorted (by mtime), we need to be taking the
    last two items and not the first two.
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	3	bin/bitbake-diffsigs

commit eaeddaf96efb8079b307652eac208f4ab5019ad4
Author: David Reyna <David.Reyna@windriver.com>
Date:   2017-04-05 15:18:20 -0700

    toaster:test:Create selenium tests for project dashboard page
    
    Added 7 new testcases that verify the UI interface and elements of the project detail page.
    This testcases can be found on testopia in the links:
    
    Verifies that the project is created and that you get redirected to the configuration page
    https://bugzilla.yoctoproject.org/tr_show_case.cgi?case_id=1514
    
    Verifies that the left side bar menu, all links are clickable and they show on the UI
    https://bugzilla.yoctoproject.org/tr_show_case.cgi?case_id=1515
    
    Verifies that after creating a project the default project configuration is created
    https://bugzilla.yoctoproject.org/tr_show_case.cgi?case_id=1516
    
    Verifies that the default machine is set, once creating the project
    https://bugzilla.yoctoproject.org/tr_show_case.cgi?case_id=1517
    
    Verifies the built recipes information of the project detail page
    https://bugzilla.yoctoproject.org/tr_show_case.cgi?case_id=1518
    
    Verifies the default release information of the project
    https://bugzilla.yoctoproject.org/tr_show_case.cgi?case_id=1519
    
    Verifies that the default layers are assigned to the project
    https://bugzilla.yoctoproject.org/tr_show_case.cgi?case_id=1520
    
    Verifies that the links to the Configuration, Builds, Import layer and New Custom Image are present and work.
    
    [YOCTO #9808]
    
    Signed-off-by: Libertad Cruz <libertad.cruz@intel.com>
    Signed-off-by: Aníbal Limón <anibal.limon@linux.intel.com>
    Signed-off-by: David Reyna <David.Reyna@windriver.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

56	54	lib/toaster/tests/builds/buildtest.py
0	0	lib/toaster/tests/functional/__init__.py
122	0	lib/toaster/tests/functional/functional_helpers.py
243	0	lib/toaster/tests/functional/test_functional_basic.py

commit 6fb642935a3787659aa316ca906025d2d87964cf
Author: Belal, Awais <Awais_Belal@mentor.com>
Date:   2017-04-05 00:12:48 -0700

    toaster: toastergui: implement machine name validation
    
    Valid machine names cannot include spaces anywhere
    in the name and doing so will result in a build failure.
    This implements a mechanism to alert the user against
    such a misconfiguration and does not allow input of
    such machine names.
    
    [YOCTO #8721]
    
    Signed-off-by: Awais Belal <awais_belal@mentor.com>
    Signed-off-by: David Reyna <David.Reyna@windriver.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

17	0	lib/toaster/toastergui/static/js/projectpage.js
2	1	lib/toaster/toastergui/templates/project.html

commit fe5d8a0fdaec99721455dead626ecfb72bdeb616
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2017-04-06 12:18:13 +0100

    Bump version to 1.33.4
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	bin/bitbake
1	1	lib/bb/__init__.py

commit f93a77f2f188e18de9e3d812e86d77c2f3c71889
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2017-04-05 17:27:40 +0100

    runqueue: Allow recrdeptask not to exist for all recipes
    
    Currently if you specify a recrdeptask, it must exist for all recipes or
    you get a python traceback. This is a bug and it should be possible to have
    recipes which don't have the specified task.
    
    As well as preventing such a traceback (which shouldn't happen, it should be
    a user readable error), this allows us to fix issues in OE-Core which would
    otherwise trigger the traceback.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	0	lib/bb/runqueue.py

commit 751c9dc51fd01fa64a1ff37ba2638110335f71af
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2017-04-05 09:37:59 +0100

    fetch/local: Drop FILESDIR
    
    This has long since been deprecated and is no longer used anywhere, FILESPATH
    is the commonly used varaible which offers much more flexibility. Remove
    the FILESDIR code and references from bitbake.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

0	1	conf/bitbake.conf
0	9	doc/bitbake-user-manual/bitbake-user-manual-fetching.xml
0	18	doc/bitbake-user-manual/bitbake-user-manual-ref-variables.xml
0	9	lib/bb/fetch2/local.py

commit c1780bc1872bb35bc28c76eff9110717f02d9db2
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2017-04-03 11:19:06 +1200

    codeparser: add some comments
    
    Add a few comments at the top of the file explaining what it's for, and
    a comment pointing out that you need to increment the cache version when
    changing any code that changes the output.
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

23	0	lib/bb/codeparser.py

commit 88fda492df875dd79b7aecf1f34b38517fc1eb33
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2017-04-03 11:19:05 +1200

    bitbake-selftest: add contains tests
    
    Add some tests to verify that we are extracting "contains" information
    from python expressions in the code in the bb.data and bb.codeparser
    modules.
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

48	0	lib/bb/tests/codeparser.py

commit 496e3c84820a2a889d99d3604659e47a550941d5
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2017-04-03 11:19:04 +1200

    codeparser: improve handling of contains_any() and filter()
    
    Ensure we handle bb.utils.contains_any() as separate items, rather than
    how we handle contains() where every item must be in the list.
    Additionally, enable handling bb.utils.filter() which for the purposes
    of looking at dependencies is the same as contains_any().
    
    Additionally bump the codeparser cache and recipe cache versions to
    invalidate the user's existing caches (ensuring that the changes take
    effect and avoiding "taskhash mismatch" errors respectively).
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/cache.py
8	3	lib/bb/codeparser.py

commit 272f1245acdd4fb85cb78612aa03627a9c246d8f
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2017-04-03 11:19:03 +1200

    lib/bb/data: fix dependency handling for contains and multiple values
    
    The code that determines variable dependencies uses the codeparser to
    find references to "contains" type operations e.g. bb.utils.contains().
    That function can take multiple items to check, and all specified items
    have to be present. However this code didn't handle that - it assumed
    that only one item would be specified and thus it was treating the
    multiple items as a single item with spaces in between. Split the value
    and check if all words are present in order to determine whether the
    check is "set" or "unset".
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

6	4	lib/bb/data.py

commit 0476ec4605c94b9e0208cfd3fa48ecf3e3f04181
Author: Scott Rifenbark <srifenbark@gmail.com>
Date:   2017-04-03 14:24:34 -0700

    bitbake-user-manual: Fixed special character in -D output
    
    Fixes [YOCTO #9962]
    
    The new output for -D was copied into the manual and merged by
    the engineering team before checking to see if the manual
    would make properly.  The next output for -D introduced an
    error through the string "<task>".  The angled bracket
    characters are illegal in docbook and must be replaced by
    "&lt;" and "&gt;", respectively.  I made this fix.
    
    Signed-off-by: Scott Rifenbark <srifenbark@gmail.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	doc/bitbake-user-manual/bitbake-user-manual-intro.xml

commit 58a03531c8183b165bb7dcad86d8559c92bc150d
Author: Peter Kjellerstedt <peter.kjellerstedt@axis.com>
Date:   2017-03-31 16:59:56 +0200

    fetch2: Do not fail to create symbolic links if they already exist
    
    When the fetcher retrieves file:// URLs, there is no lock file being
    used. This means that in case two separate tasks (typically from two
    concurrent invocations of bitbake) want to download the same file://
    URL at the same time, there is a very small chance that they also end
    up wanting to create a symbolic link to the file at the same time.
    This would previously lead to one of the tasks failing as the other
    task would have created the link.
    
    Signed-off-by: Peter Kjellerstedt <pkj@axis.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

13	2	lib/bb/fetch2/__init__.py

commit 2c424b8cb39cba8f20f807e55efe6270996fa356
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2017-03-30 16:41:46 +0100

    bitbake: Bump version to 1.33.3
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	bin/bitbake
1	1	lib/bb/__init__.py

commit c0b94f02f0cba7a424aaa16cf98c0f7a3f62b889
Author: Ross Burton <ross.burton@intel.com>
Date:   2017-03-30 14:34:17 +0100

    bb/utils: extend which() so it can look for just executables
    
    Normally bb.utils.which() is used by the unpack code to find a file in a variety
    of places, but it is useful as a slightly more powerful version of os.which().
    
    Support this by allowing it to only return matches which are executable files,
    instead of just the first filename that matches.
    
    Signed-off-by: Ross Burton <ross.burton@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

12	3	lib/bb/utils.py

commit 6a917ec99d659e684b15fa8af94c325172676062
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2017-03-30 11:42:59 +0100

    wget: Fix handling of urls with user/password
    
    URL decoding was improved in the core a while ago and this looks like
    a leftover from those times which caused urls needing a user/password to
    fail. Use the parameters from the core instead of the broken split
    implementation.
    
    [YOCTO #11262]
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	3	lib/bb/fetch2/wget.py

commit 8922f1d23400049d2894a97915a533769a24ca07
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2017-03-30 15:24:00 +1300

    tinfoil: improve get_recipe_file() exception text
    
    * Turn reasons from a list into a string (usually there will be only one
      reason, but the interface provides for more than one) and state up
      front that the recipe is unavailable for clarity
    * Use quotes around invalid recipe name
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	2	lib/bb/tinfoil.py

commit 54a4757ca706afc6e98c7692f960592e80cab12b
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2017-03-30 15:23:59 +1300

    tinfoil: fix get_recipe_file() to return an error on invalid recipe
    
    This function calls cooker.findBestProvider() but didn't handle the fact
    that that function returns a tuple (None, None, None, None) when there
    is no matching recipe. (This fixes devtool in OpenEmbedded showing a
    traceback when an invalid recipe is specified instead of a proper error
    message.)
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/tinfoil.py

commit fdeaed70a7d1ff8be1a1de937cb864130b0c2c86
Author: Elizabeth 'pidge' Flanagan <pidge@toganlabs.com>
Date:   2017-03-30 11:06:13 +0200

    s3.py: Remove hardcoded aws
    
    This commit looks to see if FETCHCMD_s3 is set and if not, sets
    it.
    
    This is needed because I've use cases where I don't use aws, but
    s3cmd (due to license).
    
    Signed-off-by: Elizabeth 'pidge' Flanagan <pidge@toganlabs.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

4	2	lib/bb/fetch2/s3.py

commit 968a77388dd1a24c1dadec6ce49bf53ebb5b643f
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2017-03-29 09:41:47 +1300

    lib/bb/codeparser: ensure BufferedLogger respects target logging level
    
    BufferedLogger was sending log records to the target logger without
    checking if the logger is enabled for the level of the record - and
    handle() doesn't check this either (it's normally checked earlier when
    the relevant log function is called e.g. logger.debug()), leading for
    example to debug messages from codeparser getting printed when the log
    level for the main BitBake logger was set to logging.WARNING.
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	1	lib/bb/codeparser.py

commit b8b14d975a254444461ba857fc6fb8c725de8874
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2017-03-28 12:23:58 +0100

    fetch2: Ensure we don't have file downloads overwriting each other
    
    Imagine you have an sstate mirror accessed over http and an SSTATE_MIRRORS
    which maps file:// urls to http:// urls.
    
    File urls set donestampneeded = False, http urls don't. This can result in
    races in the try_mirror_url() code since it will trigger new downloads after
    aquiring the lockfile as verify_donestamp() doesn't look at origud and there
    is no donestamp.
    
    verify_donestamp() already has code to look at origud, we're just missing
    some code at the start of the function to do this. Fix it to avoid
    these races.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/fetch2/__init__.py

commit 921592026c69287cdb40ffd90944d5944f28e2c3
Author: Diana Thayer <garbados@gmail.com>
Date:   2017-03-21 13:27:05 -0700

    main: Improve -v and -D option documentation
    
    Expanded and clarify documentation for the -v, --verbose and -D, --debug
    options.
    
    [YOCTO #9962]
    
    Signed-off-by: Diana Thayer <garbados@gmail.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

13	3	doc/bitbake-user-manual/bitbake-user-manual-intro.xml
13	2	lib/bb/main.py

commit 824e73e0f3eaa96b4d84da7e31f9a17ce5c5d7ee
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2017-03-27 13:17:28 +1300

    tinfoil: enable client-side logger handling by default
    
    If you had a script that uses tinfoil and it failed to connect to the
    BitBake server, you did't see any of the expected messages - this was
    because client-side logging wasn't being handled at all. Since you'll
    almost always want this when using tinfoil, have it use the new
    bb.msg.logger_create() function to enable client-side logging by
    default.
    
    Relates to [YOCTO #11185].
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

5	1	lib/bb/tinfoil.py

commit b1ba7d1cc8ec33e2d081230287abd07f52136097
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2017-03-27 13:17:27 +1300

    lib/bb/msg: introduce logger_create() function
    
    We use this code to set up a logger with colour in a number of different
    places, so create one function that does this and make some of bitbake's
    utility scripts use it.
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	12	bin/bitbake-diffsigs
2	12	bin/bitbake-dumpsig
5	20	bin/bitbake-layers
15	0	lib/bb/msg.py

commit ff1ccd1db5d70b3fc9ad0d3e8f3d7b804c22bf36
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2017-03-27 13:17:26 +1300

    fetch2/git: prevent recursion on getting latest revision
    
    We call git ls-remote to get the latest revision from a git repository,
    however by calling runfetchcmd() we can end up recursively running
    git ls-remote a number of times with OE e.g. if ${SRCPV} is in PV, ${PV}
    is in WORKDIR, and ${WORKDIR} is in PATH (as a result of recipe-specific
    sysroots), our call to runfetchcmd() exports PATH so _lsremote() will
    get called again - with the end result that we run git ls-remote 30
    times in quick succession (!). Prevent that from happening by using a
    guard variable and returning a dummy value if it's called recursively.
    
    Fixes [YOCTO #11185].
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

20	8	lib/bb/fetch2/git.py

commit 751b06c25d22eea8240f9429cb49874082245e52
Author: Peter Kjellerstedt <peter.kjellerstedt@axis.com>
Date:   2017-03-11 06:22:17 +0100

    bitbake-diffsigs: Add debug support
    
    Currently shows the name of the signature files that were found when
    --task is used.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

9	0	bin/bitbake-diffsigs

commit 84533c6dbd175a51f4dd59735161adfd10056888
Author: Peter Kjellerstedt <peter.kjellerstedt@axis.com>
Date:   2017-03-11 06:22:16 +0100

    bitbake-dumpsig: Add debug support
    
    Currently shows the name of the signature file that was found when
    --task is used.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

8	0	bin/bitbake-dumpsig

commit bdc4356c7afc542b67b78e4e5225b813d7668ecd
Author: Peter Kjellerstedt <peter.kjellerstedt@axis.com>
Date:   2017-03-11 06:22:15 +0100

    bitbake-dumpsig: Allow recipe and task to be specified
    
    Use --task <recipe> <task> to dump the signature info for a given
    recipe and task. This is similar to the --task option of
    bitbake-diffsigs.
    
    Signed-off-by: Peter Kjellerstedt <peter.kjellerstedt@axis.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

42	11	bin/bitbake-dumpsig

commit cccd1578d84f041cd0c2dcddb91f317c69af70de
Author: Patrick Ohly <patrick.ohly@intel.com>
Date:   2017-03-22 14:36:10 +0100

    cooker.py: use correct multiconfig prefix in dependency graph
    
    The dependency graph in the bb.event.DepTreeGenerated and the
    corresponding pn-buildlist and task-depends.dot from "bitbake -g"
    contained entries like multiconfig:qemuarm.gcc (dot as last separator)
    instead of the correct multiconfig:qemuarm:gcc (colon as separator).
    
    Signed-off-by: Patrick Ohly <patrick.ohly@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/cooker.py

commit baa417e44b009149eb1dfb07d5a488740b6e68ef
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2017-03-21 20:46:14 +0000

    data/cooker: Sort output data shown by -e
    
    Displaying the environment data in a sorted manner makes it easier
    to compare data between different setups and means you can know
    where to find specific entries.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/cooker.py
1	1	lib/bb/data.py

commit 945fa980e027753df2c21d84eb63dcaddb2caaee
Author: Christopher Larson <chris_larson@mentor.com>
Date:   2017-03-21 11:41:04 -0700

    fetch/git: fix FetchError reference
    
    FetchError isn't defined, use bb.fetch2.FetchError in this context.
    
    Signed-off-by: Christopher Larson <chris_larson@mentor.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/fetch2/git.py

commit 955cbfdaa2400d15ec428b65848e6835c9f44860
Author: Christopher Larson <chris_larson@mentor.com>
Date:   2017-03-21 11:41:03 -0700

    fetch/git: drop pointless os.path.join, workdir=
    
    The touch of .done explicitly specifies the path, so there's no need for
    workdir=, and "os.path.join('.')" is identical to just '.'.
    
    Signed-off-by: Christopher Larson <chris_larson@mentor.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	2	lib/bb/fetch2/git.py

commit 4aebf12153369364eae2e6e773e2a921e9c91f72
Author: Christopher Larson <chris_larson@mentor.com>
Date:   2017-03-21 11:41:02 -0700

    fetch/git: kill pointless quotes around single % args
    
    Signed-off-by: Christopher Larson <chris_larson@mentor.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

5	5	lib/bb/fetch2/git.py

commit dec6e90a4d27ee335e9c78aeebd277098fec94d1
Author: Christopher Larson <chris_larson@mentor.com>
Date:   2017-03-21 11:41:01 -0700

    fetch/git: use enumerate for ud.names
    
    list.index() isn't a particularly efficient operation, so keep track of our
    position via enumerate() instead, which is more pythonic as well.
    
    Signed-off-by: Christopher Larson <chris_larson@mentor.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	2	lib/bb/fetch2/git.py

commit 27b501d1400d1942b5ba9f35218ca7aacd9bfefe
Author: Juro Bystricky <juro.bystricky@intel.com>
Date:   2017-03-17 12:44:07 -0700

    data.py: sort exported variables
    
    Various run.do_xxx files export dozens of variables.
    Presently they are in random order. Among other things,
    this makes it difficult to compare two files for relevant changes.
    This patch ensures they are enumerated/printed in a sorted
    (alphabetical) order.
    
    Signed-off-by: Juro Bystricky <juro.bystricky@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/data.py

commit 71185c19205a77d0511fc00baf95a5433e7106d6
Author: Joshua Lock <joshua.g.lock@intel.com>
Date:   2017-03-17 15:54:39 +0000

    lib/bb/tests/codeparser: update expand syntax in comment
    
    bb.data.expand(x, d) is deprecated API
    
    Signed-off-by: Joshua Lock <joshua.g.lock@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	2	lib/bb/tests/codeparser.py

commit eeeed7693710e4a78fec639b8050d8efe4ea3c33
Author: Patrick Ohly <patrick.ohly@intel.com>
Date:   2017-03-17 10:20:23 +0100

    taskdata.py: include more information in error message about broken task depends
    
    This is what was reported when variable expansion in the 'depends'
    varflag of a task was broken:
    
       ERROR: Error for .../refkit-image-common.bb, dependency ${@ does not contain exactly one ':' character.
        Task 'depends' should be specified in the form 'packagename:task'
    
    It's not clear which task had this broken 'depends' and while one can
    guess that variable expansion failed, the full expression isn't
    printed either.
    
    This is more useful:
    
       ERROR: Error for .../refkit-image-common.bb:do_stage_swupd_inputs[depends], dependency ${@ in '      virtual/fakeroot-native:do_populate_sysroot     ${@ ' '.join(['bundle-refkit-image-common-%s:do_swupd_list_bundle' % x for x in '${SWUPD_BUNDLES}'.split()]) } ' does not contain exactly one ':' character.
        Task 'depends' should be specified in the form 'packagename:task'
    
    The 'depends' part gets repeated intentionally, to ensure that it doesn't get overlooked.
    
    Signed-off-by: Patrick Ohly <patrick.ohly@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/taskdata.py

commit 7e6a3cd1472e1a1c8304b46611e1676914a68b59
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2017-03-20 17:07:04 +1300

    bitbake-layers: fix layerindex-fetch for Python 3
    
    The data we read from an HTTPConnection comes in the form of bytes, but
    we need it as a string, so in Python 3 we need to decode it (missed in
    the Python 3 migration).
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bblayers/layerindex.py

commit 282dc0719d22a39df746eea762ebe05c66aa8f8a
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2017-03-20 17:05:53 +1300

    data_smart: implement missing remote datastore operations
    
    Enable the following operations from a remote datastore to affect the
    other end:
    
    * setVarFlag()
    * delVar()
    * delVarFlag()
    * renameVar()
    
    In practice I don't expect these to be used much, but they should be
    present so that the implementation is at least reasonably filled out
    and that the tests pass.
    
    Also add tests for the interface, mostly by subclassing the existing
    local test classes so that they are using a remote datastore. (These
    don't actually test remote usage via tinfoil, just that the
    datastore's interface can be used.)
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

25	0	lib/bb/command.py
28	1	lib/bb/data_smart.py
110	18	lib/bb/tests/data.py
29	1	lib/bb/tinfoil.py

commit 4f9d6f060ed247fb6fa2f45668a892a1788d3f91
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2017-03-20 17:05:52 +1300

    tinfoil: fix override handling in remote datastores
    
    There was a huge gap in the remote datastore code introduced in the
    tinfoil2 rework - we weren't handling overrides at all, since these are
    stored separately from the actual data in the DataSmart object. Thus,
    when a datastore actually represents a remote datastore we need to go
    back to that remote datastore to get the override data as well, so
    introduce code to do that.
    
    To avoid a second round-trip I had to modify the _findVar() function to
    return the override data as well. This will increase the overhead a
    little when that data is superfluous, but without making the function
    even uglier I don't think there's a way to avoid that.
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

9	3	lib/bb/command.py
8	7	lib/bb/data_smart.py
4	0	lib/bb/tests/data.py
5	2	lib/bb/tinfoil.py

commit 1ff9b3c669fa187f152de7b8b57d14c2468d926c
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2017-03-16 12:53:15 +0000

    tests/data: Add inactive remove override test
    
    In 2bc4d35fb32defc59cd6ed1fc87e35924c201a5c we fixed cases where an inactive
    remove override was influecing the value of a variable. This adds a test
    case for this issue.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

7	0	lib/bb/tests/data.py

commit f2c151cd345788a135452f63f622a2bc0b10c2d4
Author: Andre McCurdy <armccurdy@gmail.com>
Date:   2017-03-14 19:36:26 -0700

    runqueue: minor typo fix
    
    Signed-off-by: Andre McCurdy <armccurdy@gmail.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/runqueue.py

commit acd2fd74ed467dc85ec75d5d0815f43e493f29bf
Author: Peter Kjellerstedt <peter.kjellerstedt@axis.com>
Date:   2017-03-11 06:30:32 +0100

    ConfHandler: Use the same regular expression for all variable names
    
    When the regular expression for matching a variable name was amended
    with allowing the ~ character as part of the variable name, this was
    never done to the regular expression that matches export
    lines. Similarly, the regular expression that was used for matching
    unset variables also used the one without support for the ~ character.
    
    This unifies the regular expressions. For good measures it also
    corrects the regular expression used to match a variable flag name for
    the unset command to match the one used when setting a variable flag.
    
    Signed-off-by: Peter Kjellerstedt <peter.kjellerstedt@axis.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

4	4	lib/bb/parse/parse_py/ConfHandler.py

commit 6540e98090d6a88607489a23c063be338bcc3b57
Author: Peter Kjellerstedt <peter.kjellerstedt@axis.com>
Date:   2017-03-11 06:30:06 +0100

    knotty: Remove extra whitespace after task progress bars
    
    For some reason, BBProgress.setextra() always adds a space at the end.
    This prevents the task progress bars from filling the entire width of
    the terminal, making them stop one character short. This looks odd
    when shown together with the main progress bar, which does fill the
    entire terminal width.
    
    Signed-off-by: Peter Kjellerstedt <peter.kjellerstedt@axis.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	3	lib/bb/ui/knotty.py

commit 7c0fa6ba66cdb956b37d94055307cde857633df9
Author: Matthew McClintock <msm-oss@mcclintock.net>
Date:   2017-03-08 14:24:38 -0600

    runqueue: add option to run all tasks in specific build target
    
    For example:
    
    $ bitbake core-image-minimal --runall unpack
    ...
    NOTE: Tasks Summary: Attempted 326 tasks of which 88 didn't need to be rerun and all succeeded.
    
    $ bitbake core-image-minimal --runall patch
    NOTE: Tasks Summary: Attempted 453 tasks of which 332 didn't need to be rerun and all succeeded.
    
    This can replace fetchall as well:
    $ bitbake core-image-minimal --runall fetch
    NOTE: Tasks Summary: Attempted 135 tasks of which 119 didn't need to be rerun and all succeeded.
    
    Signed-off-by: Matthew McClintock <msm-oss@mcclintock.net>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	0	lib/bb/cookerdata.py
3	0	lib/bb/main.py
17	0	lib/bb/runqueue.py

commit e455e40ba309837903b9e2d5f1dff55cce1135de
Author: David Reyna <David.Reyna@windriver.com>
Date:   2017-03-06 14:05:07 -0800

    toaster: resolve missing 'native[sdk]:' prefixes
    
    Some task events are missing the 'virtual:native[sdk]:' prefixes.
    The Toaster has code to help match missing prefixes, but needs
    additional help resolving between 'native:' and 'nativesdk:', by
    way of the '_package' event field.
    
    [YOCTO #10849]
    
    Signed-off-by: David Reyna <David.Reyna@windriver.com>
    Signed-off-by: brian avery <brian.avery@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

8	0	lib/bb/ui/buildinfohelper.py

commit 363a0f54dc7d9930537f0df25173fa31ca1f98ac
Author: Andre McCurdy <armccurdy@gmail.com>
Date:   2017-03-02 16:24:22 -0800

    fetch2: pass --no-same-owner when extracting tar files compressed with 7-Zip
    
    Treat tar files compressed with 7-Zip in the same way as tar files
    compressed with other compression formats.
    
    Signed-off-by: Andre McCurdy <armccurdy@gmail.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

4	4	lib/bb/fetch2/__init__.py

commit 62dc3c3b40a95f9df31f5c917574c3822fb8bb64
Author: Andre McCurdy <armccurdy@gmail.com>
Date:   2017-03-02 16:22:00 -0800

    fetch2: remove last remaining usage of deprecated bb.data APIs
    
    Signed-off-by: Andre McCurdy <armccurdy@gmail.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	2	lib/bb/fetch2/__init__.py
0	1	lib/bb/fetch2/npm.py

commit 6fe07ed25457dd7952b60f4b2153d56b15d5eea6
Author: Andre McCurdy <armccurdy@gmail.com>
Date:   2017-03-01 15:56:46 -0800

    fetch2: add initial Amazon AWS S3 fetcher
    
    Class for fetching files from Amazon S3 using the AWS Command Line
    Interface. The aws tool must be correctly installed and configured
    prior to use.
    
    The class supports both download() and checkstatus(), which therefore
    allows S3 mirrors to be used for SSTATE_MIRRORS.
    
    Signed-off-by: Andre McCurdy <armccurdy@gmail.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

4	2	lib/bb/fetch2/__init__.py
96	0	lib/bb/fetch2/s3.py

commit 044fb04dbe69313ee6908bf4d3cee7f797d0c41c
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2017-03-03 00:13:01 +0000

    fetch2: Allow whitespace only mirror entries
    
    Forcing the use of "\n" in mirror variables is pointless, we can just require that
    there are pairs of values.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

5	1	lib/bb/fetch2/__init__.py

commit 3ce6169afa646ef2b847e5fbabfe0191c93928b7
Author: Scott Rifenbark <srifenbark@gmail.com>
Date:   2017-02-20 10:30:58 -0800

    bitbake-user-manual: Added "path_spec" parameter to SVN Fetcher
    
    Fixes [YOCTO #10405]
    
    The section on the SVN Fetcher was missing information on the
    "path_spec" option.  I added this option and also updated the
    examples at the bottom of the section to include that parameter.
    Also, made the other two examples consistent.
    I also removed the "date" parameter.
    
    Also, updated the "protocol" parameter as well as the "modify"
    parameter.  For "modify" I removed the reference to "rsh". I
    applied a small wording change to the "protocol" parameter.
    
    Finally, I added a new "ssh" parameter.
    
    Signed-off-by: Scott Rifenbark <srifenbark@gmail.com>

18	12	doc/bitbake-user-manual/bitbake-user-manual-fetching.xml

commit f82537d27f2a5bf9d576aa841593db9ec0985ea8
Author: Scott Rifenbark <srifenbark@gmail.com>
Date:   2017-01-23 15:44:19 -0800

    bitbake-user-manual: Rewrite dependency dot file generation
    
    The package-depends.dot and pn-depends.dot files are inaccurate,
    missing out key dependencies such those made via the [depends]
    flags. As such they can be misleading to the user.
    
    They mainly exist for historical reasons, coming from a time
    before we had task based execution.
    
    This commit removes the two dated file formats and replaces
    them with a recipe-depends.dot which is a flattened version
    of task-depends.dot.
    
    The old format files are removed if present so that the user
    can't get confused about why data might not match between files.
    
    The code is also rewritten to use 'with f: f.write()' syntax as
    is more commonly used now. Also update the docs to match the change.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

10	5	doc/bitbake-user-manual/bitbake-user-manual-intro.xml

commit 9752fd1c10b8fcc819822fa6eabc2c1050fcc03b
Author: Andre McCurdy <armccurdy@gmail.com>
Date:   2017-02-27 15:14:09 -0800

    fetch2: don't use deprecated bb.data APIs
    
    Cleanup some more usage of bb.data APIs in the fetchers.
    
    Signed-off-by: Andre McCurdy <armccurdy@gmail.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	4	lib/bb/fetch2/bzr.py
0	1	lib/bb/fetch2/clearcase.py
1	1	lib/bb/fetch2/cvs.py
0	1	lib/bb/fetch2/git.py
0	1	lib/bb/fetch2/gitannex.py
0	1	lib/bb/fetch2/gitsm.py
0	1	lib/bb/fetch2/hg.py
0	1	lib/bb/fetch2/local.py
2	3	lib/bb/fetch2/osc.py
1	2	lib/bb/fetch2/perforce.py
0	1	lib/bb/fetch2/repo.py
0	2	lib/bb/fetch2/sftp.py
0	1	lib/bb/fetch2/ssh.py
2	3	lib/bb/fetch2/svn.py
2	3	lib/bb/fetch2/wget.py

commit f5ab65610d6d6c0587948b644292f57c07dece0c
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2017-02-24 13:17:20 -0800

    bitbake: Update version to 1.33.2
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	bin/bitbake
1	1	lib/bb/__init__.py

commit 03ae490366d2046f5b5c185fe4ec2adf1b0a902e
Author: Peter Kjellerstedt <peter.kjellerstedt@axis.com>
Date:   2017-02-21 16:18:59 +0100

    lib/bb/utils: Add filter()
    
    The bb.utils.filter() function can be used to filter a variable
    containing whitespace separated words based on another set of words.
    It has been modeled after the bb.utils.contains_any() function.
    
    A typical example of how it can be used is to simplify constructs for
    PACKAGECONFIG that depend on DISTRO_FEATURES:
    
    -PACKAGECONFIG ?= "\
    -    ${@bb.utils.contains('DISTRO_FEATURES', 'acl', 'acl', '', d)} \
    -    ${@bb.utils.contains('DISTRO_FEATURES', 'selinux', 'selinux', '', d)} \
    -"
    +PACKAGECONFIG ?= "${@bb.utils.filter('DISTRO_FEATURES', 'acl selinux', d)}"
    
    Signed-off-by: Peter Kjellerstedt <peter.kjellerstedt@axis.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

24	0	lib/bb/utils.py

commit c55e09fbd2b64a2b909d9992350b6b2e26e5e86d
Author: Alexander Kanavin <alexander.kanavin@linux.intel.com>
Date:   2017-02-21 13:36:42 +0200

    wget.py: match .lz tarballs as well when determining latest version
    
    Signed-off-by: Alexander Kanavin <alexander.kanavin@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/fetch2/wget.py

commit 0cf5589b7fb3582a6caca5014c4d8152347df545
Author: Mike Crowe <mac@mcrowe.com>
Date:   2017-02-24 16:20:04 +0000

    process: stop bb.process.communicate mixing bytes and str return types
    
    Python3 regards b"" as False so it is not being converted to a string by
    d0f904d407f57998419bd9c305ce53e5eaa36b24. This confusingly causes three
    different potential types for each member of the returned tuple.
    
    Let's just assume that everything that's not None is a bytes object and
    convert it to a string.
    
    Signed-off-by: Mike Crowe <mac@mcrowe.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	2	lib/bb/process.py

commit d3bd41d0ec9621307c362b394872b18b8b7ed8d6
Author: Anders Darander <anders@chargestorm.se>
Date:   2017-02-24 21:52:55 +0100

    lib/bb/fetch2: rewrite / to - in package names
    
    Most angular2 packages have names of the form @angular/xxx.
    The / obviously can't be used in a file name, replace it with -.
    
    Signed-off-by: Anders Darander <anders@chargestorm.se>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	2	lib/bb/fetch2/npm.py

commit 628c4bf6c89b3d62c9b864380b5c8e131a899bff
Author: Anders Darander <anders@chargestorm.se>
Date:   2017-02-24 21:52:54 +0100

    fetch2/__init__: handle @ in package names
    
    A number of npm packages use @ as a leading chararacter.
    Examples are most of the angular2 packages.
    
    Signed-off-by: Anders Darander <anders@chargestorm.se>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/fetch2/__init__.py

commit 5b364b02270b0d7c2b7ca8d67fa2731bf93720ee
Author: Markus Lehtonen <markus.lehtonen@linux.intel.com>
Date:   2017-02-17 11:39:18 +0200

    fetch2/svn: change 'rsh' parameter to 'ssh'
    
    The functionality around the 'rsh' parameter seemed to be broken. The
    'rsh' parameter was only used when 'protocol' was set to 'svn+ssh' which
    is confusing. The 'rsh' parameter was used for setting the value of
    'svn_RSH' environment variable, which however, is not supported by svn
    (not at least according to SVN documentation).
    
    This patch removes the 'rsh' parameter and replaces it with 'ssh'. This
    new (optional) parameter is used when svn+ssh protocol is used and it
    can be used to specify the ssh program used by svn. This is achieved by
    setting the SVN_SSH environment variable which is mentioned in SVN
    documentation.
    
    Signed-off-by: Markus Lehtonen <markus.lehtonen@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

5	5	lib/bb/fetch2/svn.py

commit 5ef2cb50041fa7106c8de170af73d2a54cb0b1f0
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2017-02-18 13:09:39 -0800

    runqueue: Fix collapsed setscene dependency tree
    
    When we removed the postinst sstate dependency handling code from
    setscene_depvalid, we noticed things being installed into the old
    style sysroot for rootfs tasks which should not have been there,
    causing a performance regression.
    
    Analysis revealed that setscene dependencies were "bubbling" over
    sstate tasks when they should have been stopping there. The
    'continue' added by this patch avoids this issue and eusures
    sstate tasks remain contained to their specific chains.
    
    There was another bug in the code this exposed where the acconting
    for tasks as they were removed from sq_revdeps was not correct. In
    fixing this, what looks like a workaround in another test can then
    be simplified.
    
    After this change, populate_sysroot tasks are no longer depending
    on package_write_rpm tasks for example, which would make no sense.
    
    A before/after analysis of image dependencies only revealed improved
    dependencies after this change.
    
    Recipe specific sysroots did highlight the issue here since the
    behaviour of the sysroot dependencies (and processing with depvalid)
    was not matching what bitbake itself was doing, with bitbake being
    incorrect. Failures were 'safe' in that too many dependencies would
    get installed.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

4	1	lib/bb/runqueue.py

commit 61ebe9a026652e32f9482f66fc3fe7a8672fc093
Author: Aníbal Limón <anibal.limon@linux.intel.com>
Date:   2017-02-02 16:29:21 -0600

    bitbake-layers: Handle exception raised bytinfoil.prepare()
    
    The tinfoil.prepare method can raise Exceptions when is parsing initial
     data so add this call inside try, finally to avoid get blocked for
    don't call tinfoil.shutdown().
    
    The tinfoil_init function was remove because isn't make sense now since
     tinfoil.prepare() needs to be inside try, finally closures.
    
    Example of raised exception and gets blocked:
    
    $ bitbake-layers add-layer ~/repos/meta-openembedded/meta-python/
    
    Traceback (most recent call last):
      File "/home/alimon/repos/poky/bitbake/bin/bitbake-layers", line 83, in
    main
        tinfoil.prepare(True)
    ...
      File "/home/alimon/repos/poky/bitbake/lib/bb/tinfoil.py", line 268, in
    run_command
        raise TinfoilCommandFailed(result[1])
    bb.tinfoil.TinfoilCommandFailed: Traceback (most recent call last):
      File "/home/alimon/repos/poky/bitbake/lib/bb/command.py", line 81, in
    runCommand
        result = command_method(self, commandline)
    ...
      File "/home/alimon/repos/poky/bitbake/lib/bb/cooker.py", line 1314, in
    handleCollections
        raise CollectionError("Errors during parsing layer configuration")
    bb.cooker.CollectionError: Errors during parsing layer configuration
    
    Signed-off-by: Aníbal Limón <anibal.limon@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	10	bin/bitbake-layers

commit 52d87e4a58a52174e8e0b6297abaac8fd93ffcc3
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2017-02-09 16:42:29 +1300

    tinfoil: ensure PATH includes bitbake's bin directory
    
    The runqueue expects to be able to run 'bitbake-worker' from PATH, but
    for example in the OE extensible SDK, tinfoil is used within devtool
    where this isn't the case (we're not exposing bitbake to the user, thus
    bitbake's bin directory isn't in PATH).
    
    This fixes devtool modify usage within the extensible SDK which has
    apparently been broken since the tinfoil2 changes went in.
    
    Fixes [YOCTO #11034].
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

13	0	lib/bb/tinfoil.py

commit 5a53e7d7b017769a6eb0f0a6335735a1fe51a5ec
Author: Khem Raj <raj.khem@gmail.com>
Date:   2017-02-08 22:41:50 -0800

    fetch2: Add NFS Stale file exception handling
    
    - In some cases the file descriptor
      is held by nfs client and none of os.path.* is catching
      that, it could mean that error is not doled out because
      client has cached the stat info. In this case we are
      out of luck. Needed to catch IOError, which would be
      causing the Stale error.
    
    - In download method, update_stamp is invoked
      md5sum validation which is found to be throwing
      Stale errors.
    - Added error handling to fix the stale errors.
    
    Signed-off-by: Balaji Punnuru <balaji_punnuru@cable.comcast.com>
    Signed-off-by: Khem Raj <raj.khem@gmail.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

12	0	lib/bb/fetch2/__init__.py

commit 4df59b027c02ef39d72476251ccd3fd62fc20bf6
Author: Robert P. J. Day <rpjday@crashcourse.ca>
Date:   2017-02-13 06:50:29 -0500

    fetch2: Rename "setup_revisons" to "setup_revisions"
    
    For spelling's sake, rename Python routine "setup_revisons" to
    "setup_revisions."
    
    Signed-off-by: Robert P. J. Day <rpjday@crashcourse.ca>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/fetch2/__init__.py
1	1	lib/bb/fetch2/bzr.py
1	1	lib/bb/fetch2/git.py
1	1	lib/bb/fetch2/hg.py
1	1	lib/bb/fetch2/perforce.py
1	1	lib/bb/fetch2/svn.py

commit 05f5421b2e44cd58c5912848de43d5884d070150
Author: Robert P. J. Day <rpjday@crashcourse.ca>
Date:   2017-02-13 06:38:47 -0500

    fetch2: Correct two examples of typo "revsion."
    
    Signed-off-by: Robert P. J. Day <rpjday@crashcourse.ca>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/fetch2/__init__.py
1	1	lib/bb/fetch2/git.py

commit 56ad67017e601c7e0f6085ca84e29c28d8d4519f
Author: Andre McCurdy <armccurdy@gmail.com>
Date:   2017-02-01 13:09:16 -0800

    cooker: detect malformed BBMASK expressions which begin with a separator
    
    When constructing an older style single regex, it's possible for BBMASK
    to end up beginning with '|', which matches and masks _everything_.
    
    Signed-off-by: Andre McCurdy <armccurdy@gmail.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

5	0	lib/bb/cooker.py

commit d3e182bc18ff2894f1efc8aad3d508dd432c996e
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2017-02-12 19:23:09 +0000

    cooker: Rewrite dependency dot file generation
    
    The package-depends.dot and pn-depends.dot files are inaccurate, missing
    out key dependencies such those made via the [depends] flags. As such
    they can be misleading to the user.
    
    They mainly exist for historical reasons, coming from a time before
    we had task based execution.
    
    This commit removes the two dated file formats and replaces them with
    a recipe-depends.dot which is a flattened version of task-depends.dot.
    
    The old format files are removed if present so that the user can't get
    confused about why data might not match between files.
    
    The code is also rewritten to use 'with f: f.write()' syntax as is more
    commonly used now.
    
    Also update the docs to match the change.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

4	9	doc/bitbake-user-manual/bitbake-user-manual-intro.xml
45	53	lib/bb/cooker.py

commit 814c2b232ea5f88b5ad5031fb9d389c9c594aa01
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2017-02-19 06:23:29 -0800

    doc: Replace depexp UI with taskexp and cleanup UI lists
    
    The depexp UI has been replaced with taskexp, also remove old
    references to goggle and hob.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	doc/bitbake-user-manual/bitbake-user-manual-intro.xml
1	1	doc/bitbake.1

commit 416a496edc692982af2feec768ac4df8fb799853
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2017-02-12 15:37:59 +0000

    ui: Replace depexp with taskexp
    
    The data displayed by the depexp UI is buggy, bitbake can't convey
    accurate runtime dependency information.
    
    Convert the UI to become taskexp ("Task Explorer") which provides
    a graphical way of exploring the task-depends.dot file. This data
    is accurate and being able to visualise the data is an often requested
    feature as standard dot file viewers can't usualy cope.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

9	25	lib/bb/ui/{depexp.py => taskexp.py}

commit b9777374cbe63cdcf80767033f628c26d23e90f9
Author: Juro Bystricky <juro.bystricky@intel.com>
Date:   2017-02-06 08:49:20 -0800

    cooker.py: run sanity checks for multiconfig
    
    Also run sanity check for all additional multiconfig configurations
    as listed in BBMULTICONFIG, not just the "default" configuration.
    
    [YOCTO#10810]
    
    Signed-off-by: Juro Bystricky <juro.bystricky@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	1	lib/bb/cooker.py

commit 6a3f6f1b5cc9ec69b28bebf70daed7579c60cd9e
Author: Sujith H <sujith.h@gmail.com>
Date:   2017-02-07 11:56:12 +0530

    bitbake: toaster: add wic.bmap support to toaster
    
    Add wic.bmap file extension support for toaster
    
    Signed-off-by: Sujith H <sujith.h@gmail.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/toaster/orm/models.py

commit e551e73a094f5a1937bce78de9e41908bf3e07c3
Author: brian avery <brian.avery@intel.com>
Date:   2017-02-07 12:36:13 -0800

    toaster: remove cut and paste cruft
    
    There was a superfluous section in toaster start/stop script that was
    setting the TOASTER_DIR and had a set of comments around that setting.
    This was done in two places and only the last one was effective. This
    patch removes the spurious section to make it clearer what was
    happening and what TOASTER_DIR was actually getting set to.
    
    Signed-off-by: brian avery <brian.avery@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	12	bin/toaster

commit 2c48168a86309c0cf2be793e7409a78ba21fca14
Author: brian avery <brian.avery@intel.com>
Date:   2017-02-07 12:36:12 -0800

    toaster: move sqlite database to TOASTER_DIR
    
    The toaster.sqlite database was located in TOASTER_DIR/build.  This
    meant that if you named your build directory something else (like cow),
    Toaster would fail to make/find the database.  TOASTER_DIR is on the
    whitelist unlike BUILDDIR and we need to be able to write there anyway
    given our current layout so this should not disrupt anything.
    
    [YOCTO #9992]
    
    Signed-off-by: brian avery <brian.avery@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	2	lib/toaster/toastermain/settings.py

commit 1f0eac0a172a4fbe1799675f2c3ce989743bd862
Author: brian avery <brian.avery@intel.com>
Date:   2017-02-07 12:36:13 -0800

    toaster: remove cut and paste cruft
    
    There was a superfluous section in toaster start/stop script that was
    setting the TOASTER_DIR and had a set of comments around that setting.
    This was done in two places and only the last one was effective. This
    patch removes the spurious section to make it clearer what was
    happening and what TOASTER_DIR was actually getting set to.
    
    Signed-off-by: brian avery <brian.avery@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

4	1	bin/toaster

commit 2300beb50333bb620013b058a7309e7f2042101d
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2017-02-09 17:17:38 +0000

    lib: Drop now unneeded update_data calls
    
    Now that the datastore works dynamically we don't need the update_data calls
    so we can just remove them. They're not actually done anything at all for
    a while.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

0	3	lib/bb/cooker.py
0	1	lib/bb/data_smart.py
0	3	lib/bb/parse/ast.py
0	1	lib/bb/providers.py
1	17	lib/bb/tests/data.py

commit 95deecabfffdb6a7009ecc385c8b12290fbfcb73
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2017-02-07 14:35:48 +0000

    bitbake: Update version to 1.33.1
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	bin/bitbake
1	1	lib/bb/__init__.py

commit 7aa6d1586417e0e7d9925917a82caee5884957db
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2017-02-07 09:08:51 +1300

    fetch2/npm: fix handling of os field
    
    When I originally added this check I didn't quite understand how the
    values in this field should be expressed - it seems from reading the
    documentation if there is an entry starting with '!' then the list is
    a blacklist and we shouldn't expect "linux" to be in the list, or we'll
    end up skipping important dependencies.
    
    This fixes fetching the "statsd" npm package.
    
    Fixes [YOCTO #10760].
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

6	1	lib/bb/fetch2/npm.py

commit c0c50d43266150a80be31ae2c6fcaf37f5ba231d
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2017-02-07 09:08:50 +1300

    fetch2/npm: handle items only in optionalDependencies
    
    An npm package.json file has two dependency fields: dependencies and
    optionalDependencies. An item in optionalDependencies *may* also be
    listed in dependencies, but this is not required (and not necessary
    since if it's in optionalDependencies it will be optional, adding it to
    dependencies won't do anything). The code here was assuming that an
    optional dependency would always be in both, that's probably because
    that was true of the examples I was looking at at the time. To fix it,
    just add the optional ones to the list we're iterating over.
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	0	lib/bb/fetch2/npm.py

commit 433379bf12cf31fdf46defdf66695cf8be9994b1
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2017-02-07 09:08:49 +1300

    lib/bb/build: add tasksbetween() function
    
    Add a utility function that gives the list of dependent tasks between
    two specified tasks (just within the same recipe). This is intended to
    be able to be executed from recipe context so it uses the datastore
    rather than having access to the runqueue.
    
    This will be used in OpenEmbedded-Core's populate_sdk_ext.bbclass to
    get the list of tasks between do_image_complete and do_build.
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

27	0	lib/bb/build.py

commit 2a309cd20cddf3d2258bd00ad06b26452e6cc043
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2017-01-27 10:40:44 +0000

    bitbake: Bump version to 1.33.0 (develoment version)
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	bin/bitbake
1	1	lib/bb/__init__.py

commit 25df3db5eeda9dbf417e67e96845f376e5c8e6b3
Author: Patrick Ohly <patrick.ohly@intel.com>
Date:   2017-01-24 17:32:24 +0100

    build.py: avoid exception when function is not defined
    
    exc_func() fails with a hard to debug exception when the
    function does not exist, for example due to a typo:
    
      ERROR: ...: Traceback (most recent call last):
        File "/work/bitbake/lib/bb/build.py", line 644, in exec_task
          return _exec_task(fn, task, d, quieterr)
        File "/work/bitbake/lib/bb/build.py", line 584, in _exec_task
          exec_func(func, localdata)
        File "/work/bitbake/lib/bb/build.py", line 198, in exec_func
          cleandirs = flags.get('cleandirs')
      AttributeError: 'NoneType' object has no attribute 'get'
    
    There is code further down which will print a warning, but we don't
    reach that unless we allow None as result of of d.getVarFlags() first.
    
    The warning is further down intentionally and has to stay there, to
    ensure that 'cleandirs' gets executed also for empty functions.
    
    Signed-off-by: Patrick Ohly <patrick.ohly@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	2	lib/bb/build.py

commit 50afcab054b2d93be96bfd3c224affebcab023cc
Author: Scott Rifenbark <srifenbark@gmail.com>
Date:   2017-01-23 15:11:26 -0800

    bitbake-user-manual: Fixed small typo in "Events" section
    
    There was a stra quote character after the word database
    and I removed it.
    
    Signed-off-by: Scott Rifenbark <srifenbark@gmail.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	doc/bitbake-user-manual/bitbake-user-manual-metadata.xml

commit e3b7e8430cb207756b59b32128aa3cef6a626fa1
Author: Scott Rifenbark <srifenbark@gmail.com>
Date:   2017-01-10 15:37:16 -0800

    bitbake-user-manual: Updated Event descriptions
    
    Fixes [YOCTO #10886]
    
    Added text descriptions for many of the events in the list of the
    "Events" section.
    
    Signed-off-by: Scott Rifenbark <srifenbark@gmail.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

127	61	doc/bitbake-user-manual/bitbake-user-manual-metadata.xml

commit 2ada2efb057a291eb34c66d975eb339232137956
Author: Aníbal Limón <anibal.limon@linux.intel.com>
Date:   2017-01-09 10:22:51 -0600

    lib/bb/main.py: Shutdown cooker when server isn't foreground
    
    The cooker is added to the BBServer and then detached creating
    a copy of the cooker in the process, if the server isn't in
    foreground it cause fd leaks on inotify this can be see using
    many instances of tinfoil.
    
    Example:
    
    from bb.tinfoil import Tinfoil
    while True:
        with Tinfoil() as tinfoil:
            input("Pre\n")
            tinfoil.prepare(config_only=True)
            input("Post\n")
    
    [YOCTO #10873]
    
    Signed-off-by: Aníbal Limón <anibal.limon@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	0	lib/bb/main.py

commit 12dfac442d2d5674198485fbeb708a01d215c576
Author: Aníbal Limón <anibal.limon@linux.intel.com>
Date:   2017-01-09 10:22:50 -0600

    bb/server/process.py: ProcessEventQueue add close of _writer pipe
    
    Call explicity close in _writer to avoid fd leakage because isn't
    called on Queue.close()
    
    [YOCTO #10873]
    
    Signed-off-by: Aníbal Limón <anibal.limon@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	1	lib/bb/server/process.py

commit 43668657a8a679acc957e26e6fd8f47ab4cb3da8
Author: Matthew McClintock <msm-oss@mcclintock.net>
Date:   2017-01-11 18:44:18 -0600

    bitbake-layers: show-appends: add optional argument to limit package list
    
    Add ability to limit output per package:
    
    $ bitbake-layers show-appends m4
    === Matched appended recipes ===
    m4_1.4.17.bb:
      /home/mattsm/git/openembedded-core/meta-selftest/recipes-test/m4/m4_1.4.17.bbappend
    
    Useful for writing tools to process the output, and debugging
    bbappends for specific packages
    
    Signed-off-by: Matthew McClintock <msm-oss@mcclintock.net>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

10	4	lib/bblayers/query.py

commit 2bc4d35fb32defc59cd6ed1fc87e35924c201a5c
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2017-01-20 11:28:04 +0000

    data_smart: Fix unneeded variable manipulation
    
    If was pointed out that if we have:
    
    XXX = " A"
    XXX_remove_inactive-override = "YY"
    
    then XXX can become "A" and the leading space can be removed. This is because
    the remove override code changes the variable value even when there is no
    removals active. In the process it dirties the cache.
    
    We don't really need to do this so tweak the code accordingly.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

8	7	lib/bb/data_smart.py

commit 70e297e5c285ce0a02e9efd3117ff62cdc77ec12
Author: Patrick Ohly <patrick.ohly@intel.com>
Date:   2017-01-19 20:35:16 +0100

    runqueue.py: revised completion scheduler
    
    The idea is that tasks which complete building a recipe (like
    do_package_qa) are more important than tasks which start building new
    recipes (do_fetch) or those which increase disk usage
    (do_compile). Therefore tasks get ordered like this (most important
    first, do_rm_work before do_build because the enhanced rm_work.bbclass
    was used):
    
    1. ID /work/poky/meta/recipes-support/popt/popt_1.16.bb:do_build
    2. ID /work/poky/meta/recipes-core/readline/readline_6.3.bb:do_build
    3. ID /work/poky/meta/recipes-connectivity/libnss-mdns/libnss-mdns_0.10.bb:do_build
    ...
    464. ID /work/poky/meta/recipes-sato/images/core-image-sato.bb:do_build
    465. ID /work/poky/meta/recipes-graphics/xorg-proto/inputproto_2.3.2.bb:do_rm_work
    466. ID /work/poky/meta/recipes-devtools/python/python3_3.5.2.bb:do_rm_work
    467. ID /work/poky/meta/recipes-core/packagegroups/packagegroup-base.bb:do_rm_work
    ...
    3620. ID virtual:native:/work/poky/meta/recipes-extended/pbzip2/pbzip2_1.1.13.bb:do_install
    3621. ID /work/poky/meta/recipes-devtools/qemu/qemu-helper-native_1.0.bb:do_install
    3622. ID /work/poky/meta/recipes-core/zlib/zlib_1.2.8.bb:do_compile_ptest_base
    3623. ID /work/poky/meta/recipes-extended/bzip2/bzip2_1.0.6.bb:do_compile_ptest_base
    ...
    3645. ID /work/poky/meta/recipes-support/libevent/libevent_2.0.22.bb:do_compile_ptest_base
    3646. ID /work/poky/meta/recipes-core/busybox/busybox_1.24.1.bb:do_compile_ptest_base
    3647. ID /work/poky/meta/recipes-kernel/linux/linux-yocto_4.8.bb:do_uboot_mkimage
    3648. ID /work/poky/meta/recipes-kernel/linux/linux-yocto_4.8.bb:do_sizecheck
    3649. ID /work/poky/meta/recipes-kernel/linux/linux-yocto_4.8.bb:do_strip
    3650. ID /work/poky/meta/recipes-kernel/linux/linux-yocto_4.8.bb:do_compile_kernelmodules
    3651. ID /work/poky/meta/recipes-kernel/linux/linux-yocto_4.8.bb:do_shared_workdir
    3652. ID /work/poky/meta/recipes-kernel/linux/linux-yocto_4.8.bb:do_kernel_link_images
    3653. ID /work/poky/meta/recipes-devtools/quilt/quilt-native_0.64.bb:do_compile
    3654. ID /work/poky/meta/recipes-extended/texinfo-dummy-native/texinfo-dummy-native.bb:do_compile
    ...
    
    The order of the same task between different recipes is the same as
    with the speed scheduler, i.e. more important recipes come first.
    
    Signed-off-by: Patrick Ohly <patrick.ohly@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

101	24	lib/bb/runqueue.py

commit 9289ab40e77906e983a2f79cd7602ee95be5025a
Author: Patrick Ohly <patrick.ohly@intel.com>
Date:   2017-01-19 20:35:15 +0100

    build.py: add preceedtask() API
    
    The API is required by the revised rm_work.bbclass implementation,
    which needs to know all tasks that do_build depends so that it
    can properly inject itself between do_build and those tasks.
    
    The new API primarily hides the internal implementation of the "after"
    and "before" dependency tracking. Because tasks defined as
    precondition via "recrdeptask" may or may not be relevant (they are for
    rm_work.bclass), the API also includes support for that.
    
    There's no default value for including recrdeptasks, so developers
    have to think about what they need.
    
    Signed-off-by: Patrick Ohly <patrick.ohly@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

16	0	lib/bb/build.py

commit ce1e70b8018340b54dba3a81d7d379182cb77514
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2017-01-14 14:17:13 +0000

    fetch2: Avoid recursive errors
    
    If PATH contains WORKDIR which contains PV which contains SRCPV we can end
    up in circular recursion within the fetcher. This code change allows for the recursion
    to be broken by giving PV a temporary dummy value in a data store copy.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

9	0	lib/bb/fetch2/__init__.py

commit 05763bc886024dcce2ce6b3060fb00abf79a9402
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2017-01-14 14:16:44 +0000

    cooker: Add BB_LIMITEDDEPS support
    
    When we're running with bitbake -b, BB_TASKDEPDATA is incorrect and limited.
    We really need a way to know this from the metadata and this new variable
    provides this in worker context. This means existing code can stop having
    to guess.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	0	bin/bitbake-worker
1	0	lib/bb/cooker.py
1	0	lib/bb/cookerdata.py

commit 4dcd0e53f5ff4bf4f2d6cbdc51ff33a5f5f206af
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2017-01-12 13:25:36 +0000

    event/ast: Add RecipeTaskPreProcess event before task finalisation
    
    There are various pieces of code which need to run after the tasks are
    finalised but before bitbake locks in on the task dependencies. This
    adds such an event so dependency changes in anonymous python can
    be accounted for and acted upon by these specific event handlers.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

11	0	lib/bb/event.py
1	0	lib/bb/parse/ast.py

commit c53e43f3c6a675c0934a7a4e358fd66b049ffca3
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2017-01-17 17:44:33 +0000

    runqueue: Fix traceback when using -b
    
    Without this, bitbake -b of image recipes cause tracebacks since
    the list of providers is empty.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	0	lib/bb/runqueue.py

commit 438986f4e39974930ee3205ca4c4d620090e57bb
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2017-01-16 14:40:24 +0000

    cooker: Only add universe targets where the task exists
    
    Currently "bitbake universe -c fetch" will error if every task in the system
    doesn't have a fetch task. This seems unreasonable so filter the list based
    upon whether the task exists. This implementation does assume if a task exits
    for a given provider name, it can run, even if the preferred provider that
    ends up getting built might be the namespace without the task. This is unlikely
    to be a real world issue at this point.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

9	0	lib/bb/cooker.py

commit 1559ad1fc3ae8b1e4e75b210f598b90be192571b
Author: Juro Bystricky <juro.bystricky@intel.com>
Date:   2017-01-15 11:13:36 -0800

    cooker.py: new multiconfig '*' syntax support
    
    Currently you cannot build a target for all the configured multiconfigs without
    specifying a list. The list can be quite long, requiring to type several lines
    of text.
    
    This enhancement is to support globbing so that you can do this,
    e.g. instead of:
    
        $ bitbake multiconfig:A:bash multiconfig:B:bash bash
    
    you can do:
    
        $ bitbake multiconfig:*:bash
    
    There are real world use cases where it is desirable to use multiconfig with
    two different tasks. For example:  SDKs with multiple toolchains but also
    containing set of additional host tools, or multiconfig builds requiring one image for
    the  main CPU(s) and a different co-image for a companion CPU.
    For this reason, two variations of the new syntax are supported.
    
    For example, the following:
    
        $ bitbake multiconfig:*:meta-toolhchain
    
    would expand to:
    
        $ bitbake multiconfig:A:meta-toolchain multiconfig:B:meta-toolchain meta-toolchain
    
    However the following:
    
        $ bitbake multiconfig:*:meta-toolhchain hosttools
    
    would expand to:
    
        $ bitbake multiconfig:A:meta-toolchain multiconfig:B:meta-toolchain hosttools
    
    In other words, if the user specified the "default" task explicitly, it replaces the implicit
    "default" task.
    
    [YOCTO#10680]
    
    Signed-off-by: Juro Bystricky <juro.bystricky@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

31	1	lib/bb/cooker.py

commit 2420953b3d03551d8254609300ca572717aecdcd
Author: brian avery <brian.avery@intel.com>
Date:   2017-01-14 19:18:32 -0800

    toaster: bin/toaster whitelist TOASTER_DIR
    
    Some of the tinfoil2 changes resulted in TOASTER_DIR being cleared by
    the memory resident bitbake server toaster starts up.  This prevented
    toaster from being able to connect to its sqlite database. Adding
    TOASTER_DIR to the BB_ENV_EXTRAWHITE list stops the cooker from clearing
    out the TOASTER_DIR variable.
    
    [YOCTO #9252]
    
    Signed-off-by: brian avery <brian.avery@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	0	bin/toaster

commit c05e1396625b14e66d795408ea2ae4cd2afc3209
Author: Ola Redell <ola.redell@retotech.se>
Date:   2017-01-12 11:33:27 +0100

    gitsm.py: Add force flag to git checkout command in update_submodules
    
    When the gitsm fetcher is used with a repo that includes a .gitattributes
    file that makes git modify files on cloning (e.g. line break characters),
    the subsequent checkout performed in the update_submodules function fails.
    This is fixed by adding the force flag (-f) to the checkout command.
    
    Signed-off-by: Ola Redell <ola.redell@retotech.se>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/fetch2/gitsm.py

commit 99d3703edd77a21770b366c6ad65a3c0f5183493
Author: Jianxun Zhang <jianxun.zhang@linux.intel.com>
Date:   2016-12-21 12:27:37 -0800

    use multiple processes to dump signatures.
    
    This change significantly shortens the time on reparsing stage
    of '-S' option.
    
    Each file is reparsed and then dumped within a dedicated
    process. The maximum number of the running processes is not
    greater than the value of BB_NUMBER_PARSE_THREADS if it is set.
    
    The dump_sigs() in class SignatureGeneratorBasic is _replaced_
    by a new dump_sigfn() interface, so calls from the outside and
    subclasses are dispatched to the implementation in the base
    class of SignatureGeneratorBasic.
    
    Fixes [YOCTO #10352]
    
    Signed-off-by: Jianxun Zhang <jianxun.zhang@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

27	5	lib/bb/runqueue.py
2	2	lib/bb/siggen.py

commit 4170cf874850b950f31d2e36c895c110c0b096c3
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2017-01-06 16:43:43 +0000

    event: Replace slightly elderly bbmake references!
    
    bbmake hasn't existed for a while (a decade+) so we should
    probably remove the references.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	3	lib/bb/event.py

commit 7ef12684e8647b006bf46cae695069d4bfece1cf
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2017-01-06 12:35:08 +0000

    prserv/persist_data/utils: Drop obsolete python2 imports
    
    These imports were from python 2.6 and earlier, 2.4 in some cases.
    Drop them since we're all python3 now.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	5	lib/bb/persist_data.py
5	17	lib/bb/utils.py
1	6	lib/prserv/serv.py

commit ae6045b84978940c365c95c33d6996359c3e299d
Author: Aníbal Limón <anibal.limon@linux.intel.com>
Date:   2017-01-05 17:44:46 -0600

    bb/cooker: BBCooker stops notifier at shutdown
    
    At end of  BBCooker needs to release fd's associated with pyinotify
    watchers to  avoid: Too many open files (EMFILE) error in different
    scenarios like several instances of tinfoil.
    
    [YOCTO #10873]
    
    Signed-off-by: Aníbal Limón <anibal.limon@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	0	lib/bb/cooker.py

commit 26243f04e3af652291d13e85c084057104fe155b
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2017-01-04 23:23:52 +0000

    prserv/serv: Tweak stdout manipulation to be stream safe
    
    We've been seeing oe-selftest failures under puzzling circumstances. It
    turns out if you run oe-selftest on a machine with xmlrunner installed
    and have the recent tinfoil2 changes, the launching of PR server crashes
    leading to selftest hanging if using an autoloaded PR server.
    
    The reason is that xmlrunner uses an io.StringIO object as stdout/stderr
    instead of the usual io.TextIOWrapper and StringIO lacks a fileno() method.
    
    We have to deal with both cases and in the python way, we try and then seek
    forgivness if we see an AttributeError or UnSupportedOperation exception.
    Unfortunately we have to deal with both cases as we may be performing a
    traditiional double fork() from the commandline, or a larger python program.
    
    [YOCTO #10866]
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

17	4	lib/prserv/serv.py

commit 518b9015c2be8d3894277a8e54890d6f04d656c0
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2016-12-20 19:02:11 +0000

    cookerdata: Convert multiconfig to use BB_CURRENT_MC
    
    People are struggling with multiconfig as the point the conf file
    is injected into the data store is not what people expect. We can't
    really use a post config since that is too late and we can't really
    use a pre config file since that is too early. In OE terms, we need
    something right around the local.conf point so it behaves in a similar
    way.
    
    A way to handle this is to set the new variable BB_CURRENT_MC to be the
    currently selected multiconfig, then the metadata itself can choose
    when to inject the approriate configuration.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	2	lib/bb/cookerdata.py

commit ab15486c636e451ed5a62e561980946887901c3b
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2016-12-21 14:11:24 +0000

    runqueue: Only start fakeroot workers when needed
    
    Fakeroot workers usually have dependencies that need to be ready before they
    can be started. Starting them as a block therefore doesn't work as the
    dependencies may or may not have been built. Therefore start the multiconfig
    fakeworkers individually upon demand.
    
    [YOCTO #10344]
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

7	8	lib/bb/runqueue.py

commit 937acf267fa9e45f538695b2cf8aa83232a96240
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2016-12-21 13:36:25 +0000

    runqueue: Ensure setscene tasks with overlapping stamps don't parallel execute
    
    In multiconfig, mutliple tasks can execute which share the same stamp file. These
    must not execute in parallel, the idea is the first should execute, the subsequent
    ones should see a valid stamp and get skipped.
    
    The normal task execution code has stamps code to handle this, this adds similar
    code to the setscene execute() function to handle the issue there too.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

5	1	lib/bb/runqueue.py

commit cead85cf219c07b40aeb7c0d948c25f0429136db
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2016-12-21 13:35:53 +0000

    runqueue: Fix setscene issues with multiconfig
    
    setscene was being entirelu skipped for multiconfig variants as the tasks
    were simply not being spotted. If the default config was also being built
    it masked the problem. When this was fixed by using taskfn instead of fn
    in lookups against dataCache, several other instances of this problem were
    highlighted.
    
    This goes through and corrects the setscene code to correclty use taskfn
    instead of fn in the appropriate places meaning setscene tasks for multiconfig
    now work correctly.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

20	20	lib/bb/runqueue.py

commit 4da296c0c93391ec37f8b6e2245071657759771e
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2016-12-20 23:31:11 +0000

    siggen: Fix clean_basepath to work with multiconfig
    
    Tasknames can now start with "multiconfig:" which broke the virtual: comparison code and
    lead to unpredictable checksums with nativesdk recipes. This adds in handling for
    the new additional prefix which unbreaks nativesdk builds when using multiconfig.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

5	0	lib/bb/siggen.py

commit d93ddd185dde53f50aea06ada094bb0d9b5ba4f0
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2016-12-20 21:15:31 +0000

    build/uihelper: Show better information about multiconfig tasks on UI
    
    Currently the UI shows X is building, possibly multiple times but doesn't
    say which of the multilibs that might be. This adds a prefix to the task
    name so the mulitconfig being built can be identified.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	0	lib/bb/build.py
4	1	lib/bb/ui/uihelper.py

commit 813a7600bc26b7132ac36d1515571d321f566afb
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2016-12-20 20:51:02 +0000

    runqueue: Ensure pseudo executes from the correct place (use the right datastore with multiconfig)
    
    The location of the fakeroot command and the various environmental values need
    to be taken from the right multiconfig datastore, not the shared one. This
    patch ensures the right one is used for cases like a split TMPDIR.
    
    [YOCTO #10344]
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	2	lib/bb/runqueue.py

commit c0c0af40ebddaf9dc99353c580a65d4c04295613
Author: Mark Asselstine <mark.asselstine@windriver.com>
Date:   2016-12-20 21:50:01 -0500

    fetch2/wget: fixup case with no useful netrc data
    
    Commit 873e33d0479e977520106b65d149ff1799195bf6 [fetch2/wget:
    add Basic Auth from netrc to checkstatus()] causes "Fetcher failure
    for URL: 'https://www.example.com/'. URL https://www.example.com/
    doesn't work." on new builds when a user has a .netrc file but there
    is no default and no matching host. The call to netrc.authenticators()
    will return None in these cases and the attempted assignment to the
    3-tuple will raise a TypeError exception. Add the TypeError to the
    exceptions caught to get around this issue.
    
    Signed-off-by: Mark Asselstine <mark.asselstine@windriver.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/fetch2/wget.py

commit 873e33d0479e977520106b65d149ff1799195bf6
Author: Matthew McClintock <msm-oss@mcclintock.net>
Date:   2016-12-16 03:32:42 -0600

    fetch2/wget: add Basic Auth from netrc to checkstatus()
    
    fetch2/wget uses urllib to check the status of the mirrors, wget will
    use netrc to pass login and password information however checkstatus
    will skip that.
    
    This adds netrc login and password to checkstatus so both will work the
    same.
    
    Signed-off-by: Matthew McClintock <msm-oss@mcclintock.net>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

14	2	lib/bb/fetch2/wget.py

commit 58f084291beb3a87d8d9fdb36dfe7eff911fa36b
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2016-12-16 07:09:13 +1300

    runqueue: dry-run real tasks when BB_SETSCENE_ENFORCE is set
    
    For the purposes BB_SETSCENE_ENFORCE is designed for (in OE, it is used
    by the installation process for the extensible SDK), we don't actually
    need the whitelisted real tasks to execute - we just need to have them
    in the dependency tree so that we get all of the setscene tasks they
    depend on to run. Therefore we can actually dry-run those real tasks
    i.e. they won't be run (and thus we won't waste a significant amount of
    time doing so) and won't be stamped as having run either. We do already
    have a dry-run mode in BitBake (activated by the -n or --dry-run command
    line option), but it dry-runs the setscene tasks as well which we don't
    want here.
    
    Note that this has no effect on the checking we are doing with
    BB_SETSCENE_ENFORCE to ensure that only whitelisted real tasks are
    scheduled to run - that's handled separately.
    
    Fixes [YOCTO #10369].
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

7	5	bin/bitbake-worker
7	6	lib/bb/runqueue.py

commit 50633012a64a3b5f0662145e29ff426374fb7683
Author: Ross Burton <ross.burton@intel.com>
Date:   2016-12-14 19:53:46 +0000

    BBHandler: use with instead of open/close
    
    This is more pythonic and can handle unclosed file warnings better
    than the previous code structure.
    
    Signed-off-by: Ross Burton <ross.burton@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

11	11	lib/bb/parse/parse_py/BBHandler.py

commit e3694e738e98f26f413ada6860ca7d829d3662f0
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2016-12-15 09:36:30 +0000

    cooker/command: Drop expanded_data
    
    Some of our metadata assumes that BuildStarted and BuildCompleted events
    see the same data store. This is the case for buildTarget but not for
    buildFile and recent changes mean this is now a problem.
    
    The update_data() call is now an empty operation and there is no difference
    between the expanded_data and data so we can simply remove the expanded_data
    and its references and use data everywhere. This has been inteded for a while
    but the above issue makes this more pressing to finally clean up.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	3	lib/bb/command.py
12	14	lib/bb/cooker.py
4	4	lib/bb/runqueue.py

commit f9961fd5beb31d5ab9656a5be59f7ab3effef2f0
Author: Joshua Lock <joshua.g.lock@intel.com>
Date:   2016-12-14 21:05:01 +0000

    bitbake: remove True option to getVar calls (take 2)
    
    getVar() now defaults to expanding by default, thus remove the True
    option from getVar() calls with a regex search and replace.
    
    Search made with the following regex: getVar ?\(( ?[^,()]*), True\)
    
    (a follow on patch to fix up a few recent introductions)
    
    Signed-off-by: Joshua Lock <joshua.g.lock@intel.com>
    Signed-off-by: Ross Burton <ross.burton@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/server/process.py
1	1	lib/bb/siggen.py
1	1	lib/bb/tests/data.py

commit f1cd6fab604f14d8686b1d783cbfe012d923ee42
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2016-12-13 10:53:51 +1300

    lib/bb/build: enable access to logger within tasks
    
    In certain circumstances it can be useful to get access to BitBake's
    logger within a task; the main example is in OpenEmbedded's image
    construction code where we want to be able to check the log file for
    errors and warnings, but we don't want to see any errors or warnings
    that were emitted through the logger; so we need a way to exclude those.
    In order to do this, pass the logger object into the task via a
    BB_TASK_LOGGER variable, and add a logging handler class to bb.utils
    that can be added to it in order to keep a list of warnings/errors that
    have been emitted.
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Ross Burton <ross.burton@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	0	lib/bb/build.py
11	0	lib/bb/utils.py

commit 58c60a951229dcbd8253863fb24228d046c23f6e
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2016-12-13 20:07:14 +1300

    server/process: don't change UI process signal handler on terminate
    
    On terminating the connection to the server, we were disabling SIGINT -
    and this is executed on the UI side. I'm not sure whether the intention
    here was to undo the SIGINT disabling we did in the server, and it was
    just a mistake that it disabled rather than restored and it's run on the
    wrong side, or whether we wanted to stop the user from breaking out of
    the shutdown code - the commit message provides no clues either way.
    Regardless, we do not want to permanently disable Ctrl+C here - it's
    legitimate to terminate the connection to the server and then
    re-establish it within the same process; at least currently, devtool
    modify by virtue of using tinfoil in two separate parts of the code does
    this, and the result of this disabling is that during the second tinfoil
    usage we can potentially be parsing all recipes without the ability to
    easily interrupt the process.
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

0	1	lib/bb/server/process.py

commit 5a80c0e210f26526afbe8f266b7b1a9c03334967
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2016-12-13 20:07:13 +1300

    siggen: add means of ignoring basehash mismatch
    
    If you run the setVariable command to set variables then you end up
    causing the basehash to not match the previously computed values, which
    triggers error messages. These mismatches are expected, so add a means
    of disabling them.
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	1	lib/bb/siggen.py

commit 69a3cd790da35c3898a8f50c284ad1a4677682a4
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2016-12-13 20:07:12 +1300

    runqueue: enable setVariable command to affect task execution
    
    Allow the client to set variables with the setVariable command and have
    those changes take effect when running tasks. This is accomplished by
    collecting changes made by setVariable separately and pass these to the
    worker so it can be applied on top of the datastore it creates.
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

10	2	bin/bitbake-worker
1	0	lib/bb/command.py
1	0	lib/bb/cooker.py
1	0	lib/bb/runqueue.py

commit bbbb2a53d5decf3b613a92c4ff77c84bfc5d4903
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2016-12-13 20:07:11 +1300

    data_smart: support serialisation
    
    The COW object used within VariableHistory can't be serialised itself,
    but we can convert it to a dict when serializing and then back when
    deserialising. This finally allows DataSmart objects to be serialized.
    NOTE: "serialisation" here means pickling, not over XMLRPC or any other
    transport.
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

13	0	lib/bb/data_smart.py
23	0	lib/bb/tests/data.py

commit 5cfbb60833e7b12d698c1c2970c17ccf2a4971bf
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2016-12-13 20:07:10 +1300

    cooker: allow buildFile warning to be hidden programmatically
    
    If we want to use this function/command internally, we don't want this
    warning shown.
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

5	1	lib/bb/command.py
5	4	lib/bb/cooker.py
2	2	lib/bb/tinfoil.py

commit cbc22a0a9aadc8606b927dbac0f1407ec2736b35
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2016-12-13 20:07:09 +1300

    tinfoil: pass datastore to server when expanding python references
    
    If you're expanding a value that refers to the value of a variable in
    python code, we need to ensure that the datastore that gets used to get
    the value of that variable is the client-side datastore and not just the
    part of it that's on the server side. For example, suppose you are in
    client code doing the following:
    
    d.setVar('HELLO', 'there')
    result = d.expand('${@d.getVar("HELLO", True)}')
    
    result should be "there" but if the client part wasn't taken into
    account, it would be whatever value HELLO had in the server portion of
    the datastore (if any).
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

5	6	lib/bb/command.py
1	1	lib/bb/data_smart.py
8	2	lib/bb/tests/data.py
4	2	lib/bb/tinfoil.py

commit 8f635815d191c9d848a92d51fdbf5e9fd3da1727
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2016-12-13 20:07:08 +1300

    tinfoil: implement server-side recipe parsing
    
    It's not really practical for us to parse recipes on the client side, we
    need to do it on the server because that's where we have the full python
    environment (including any "pure" python functions defined in classes).
    Thus, add some functions to tinfoil do this including a few shortcut
    functions.
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

44	0	lib/bb/command.py
37	17	lib/bb/tinfoil.py

commit 784d2f1a024efe632fc9049ce5b78692d419d938
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2016-12-13 20:07:07 +1300

    remotedata: enable transporting datastore from the client to the server
    
    For the purposes of server-side parsing and expansion allowing for
    client-side use of the datastore, we need a means of sending a datastore
    from the client back to the server, where the datastore probably
    consists of a remote (server-side) original plus some client-side
    modifications. To do this we need to take care of a couple of things:
    
    1) xmlrpc can't handle nested dicts, so if you enable memres and simply
       try passing a serialised datastore then things break. Instead of
       serialising the entire datastore, just take the naive option of
       transferring the internal dict alone (as a list of tuples) for now.
    
    2) Change the TinfoilDataStoreConnector object into simply the handle
       (number) when transmitting; it gets substituted with the real
       datastore when the server receives it.
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

42	0	lib/bb/remotedata.py

commit 3bbf8d611c859f74d563778115677a04f5c4ab43
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2016-12-13 20:07:06 +1300

    tinfoil: rewrite as a wrapper around the UI
    
    Rewrite tinfoil as a wrapper around the UI, instead of the earlier
    approach of starting up just enough of cooker to do what we want. This
    has several advantages:
    
    * It now works when bitbake is memory-resident instead of failing with
      "ERROR: Only one copy of bitbake should be run against a build
      directory".
    
    * We can now connect an actual UI, thus you get things like the recipe
      parsing / cache loading progress bar and parse error handling for free
    
    * We can now handle events generated by the server if we wish to do so
    
    * We can potentially extend this to do more stuff, e.g. actually running
      build operations - this needs to be made more practical before we can
      use it though (since you effectively have to become the UI yourself
      for this at the moment.)
    
    The downside is that tinfoil no longer has direct access to cooker, the
    global datastore, or the cache. To mitigate this I have extended
    data_smart to provide remote access capability for the datastore, and
    created "fake" cooker and cooker.recipecache / cooker.collection adapter
    objects in order to avoid breaking too many tinfoil-using scripts that
    might be out there (we've never officially documented tinfoil or
    BitBake's internal code, but we can still make accommodations where
    practical). I've at least gone far enough to support all of the
    utilities that use tinfoil in OE-Core with some changes, but I know
    there are scripts such as Chris Larson's "bb" out there that do make
    other calls into BitBake code that I'm not currently providing access to
    through the adapters.
    
    Part of the fix for [YOCTO #5470].
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

195	0	lib/bb/command.py
16	3	lib/bb/cooker.py
49	34	lib/bb/main.py
74	0	lib/bb/remotedata.py
325	60	lib/bb/tinfoil.py
6	22	lib/bblayers/query.py

commit 74db369c46043116359101cab70486afd82372c0
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2016-12-13 20:07:05 +1300

    command: provide a means to shut down from the client in memres mode
    
    In memory resident mode we don't really want to actually shut down since
    it's only the client going away.
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

8	0	lib/bb/command.py
7	0	lib/bb/cooker.py
1	0	lib/bb/cookerdata.py

commit a3edc3eefa2d03c4ad5d12187b32fa4dc495082a
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2016-12-13 20:07:04 +1300

    data_smart: implement remote datastore functionality
    
    This allows you to maintain a local reference to a remote datastore. The
    actual implementation of the remote connection is delegated to a
    connector object that the caller must define and supply. There is
    support for getting variable values and expanding python references
    (i.e. ${@...} remotely, however setting variables remotely is not
    supported - any variable setting is done locally as if the datastore
    were a copy (which it kind of is).
    
    Loosely based on an earlier prototype implementation by Qing He.
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

33	6	lib/bb/data_smart.py
39	0	lib/bb/tests/data.py

commit 0d659a7dfe5fb096f8aa4380320f9e2a464b3cb5
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2016-12-13 20:07:03 +1300

    server/xmlrpc: send back 503 response with correct encoding
    
    If you send back a string here you get "TypeError: 'str' does not
    support the buffer interface" errors in bitbake-cookerdaemon.log and
    "IncompleteRead(0 bytes read, 22 more expected)" errors on the client
    side.
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/server/xmlrpc.py

commit 2c5a8661430edebff67ab4a108995033d182b5d6
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2016-12-13 20:07:02 +1300

    knotty: fix --observe-only option
    
    If we're in observe-only mode then we cannot run commands that would
    affect the server's state, including getSetVariable, so prevent that
    from being called in observe-only mode.
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

7	3	lib/bb/ui/knotty.py

commit 6cf2582e17c28ca04f5cfb59858c4a9778c700d4
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2016-12-13 20:07:01 +1300

    knotty: make quiet option a level option
    
    Allow you to specify -q / --quiet more than once to reduce the messages
    even further. It will now operate as follows:
    
     Level  Option  Result
     -----  ------  ----------------------------------------
     0              Print usual output
     1      -q      Only show progress and warnings or above
     2      -qq     Only show warnings or above
     3+     -qqq    Only show errors
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	2	lib/bb/main.py
28	7	lib/bb/ui/knotty.py

commit febd5534b07edfdef15cedb0578730c582c7373f
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2016-12-13 20:07:00 +1300

    data_smart: fix resetting of reference on variablehistory
    
    There is no "datasmart" member, only dataroot. This dates back to the
    original implementation of variable history support - it's surprising we
    haven't noticed the issue until now, but I guess it's rare to change a
    copy of a datastore in a manner which using the old reference would
    cause an issue.
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/data_smart.py

commit b65a8193368ffa1d15af24a6acde8dce6bd4d383
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2016-12-09 16:52:55 +0000

    toaster: views Remove old code that converts template context to JSON
    
    Remove the template context to JSON decorator function as this is
    deprecated by having a proper REST API.
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	31	lib/toaster/toastergui/views.py

commit 81764ce3ebf0d2fcb3dc6965f6f07931d39e5524
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2016-12-09 16:52:54 +0000

    toaster: js test Update js tests to use correct url for layer REST
    
    Update js tests so that we use the new Layer REST API.
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

5	1	lib/toaster/toastergui/static/js/tests/test.js

commit 5ea25c49091f4d4b5007af948e063ed25ba5766f
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2016-12-09 16:52:53 +0000

    toaster: Switch front end to use Layer get REST API
    
    Switch the front end to use the proper REST API for retrieving layer
    information.
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

5	1	lib/toaster/toastergui/static/js/libtoaster.js
12	3	lib/toaster/toastergui/templates/layer_btn.html
1	0	lib/toaster/toastergui/templates/layerdetails.html
6	1	lib/toaster/toastergui/templates/machine_btn.html
7	1	lib/toaster/toastergui/templates/recipe_btn.html

commit d195f24a1b30ae8698bff5e87308347b9596a2e2
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2016-12-09 16:52:52 +0000

    toaster: typeaheads Layers add url to layer REST API to the layer
    
    Add the url to the Layer typeahead so that this can be used later on by
    the front end code to look up layer details.
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	0	lib/toaster/toastergui/typeaheads.py

commit 3fa5170c98c699d2a7a8380b696fc599efcc5dee
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2016-12-09 16:52:51 +0000

    toaster: api Add GET REST API for Layer information
    
    Add a get API for returning information about layers.
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

52	3	lib/toaster/toastergui/api.py

commit 28114be42174095b812a93d4b5a0e01e953d74f8
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2016-12-09 16:52:50 +0000

    toaster: importlayer Add git revision typeahead to that input field
    
    Add the front end mechanism to load the typeahead for the git revision
    field on importing a layer.
    Also fix one indentation issue and update the js test.
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

0	1	lib/toaster/toastergui/static/css/default.css
23	6	lib/toaster/toastergui/static/js/importlayer.js
1	1	lib/toaster/toastergui/static/js/tests/test.js
4	1	lib/toaster/toastergui/templates/importlayer.html

commit a94ae3ad0cb07a52004143c6f86f371b9e330e9f
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2016-12-09 16:52:49 +0000

    toaster: typeaheads Add a git revisions suggestions
    
    When we're importing a layer it's useful to suggest available git revisions of the
    layers. This uses git ls-remote to fetch the revisions and then filter on this.
    Caching is added for this typeahead to avoid having to fetch this
    information multiple times in a single session.
    
    [YOCTO #8429]
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

29	0	lib/toaster/toastergui/typeaheads.py
3	2	lib/toaster/toastergui/urls.py

commit be1f9f48da480d813e3364815cb3e002ba70dd22
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2016-12-09 16:52:48 +0000

    toaster: typeaheads widgets Fix flake8 issues and remove redundant code
    
    Fix flake8 issues and remove redundant __init__ function definitions
    from typeaheads (likely a copy and paste error).
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

41	39	lib/toaster/toastergui/typeaheads.py
4	4	lib/toaster/toastergui/widgets.py

commit d4c79cd60c12d329c533add73e88b7184dca6ca3
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2016-12-09 16:52:47 +0000

    toaster: tests Update import layer test to use new Layer add api
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

23	22	lib/toaster/tests/views/test_views.py

commit 6475fd7e0d2488bf300b75322f2c00297cd1440b
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2016-12-09 16:52:46 +0000

    toaster: importlayer Use new layer add API
    
    Switch the importlayer.js to use the new REST API for importing a new layer.
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

4	3	lib/toaster/toastergui/static/js/importlayer.js

commit 0c8e41d2217fd568a84e857d1be230fcfd4bb5c7
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2016-12-09 16:52:45 +0000

    toaster: api Add layer Add api
    
    Add layer adding REST api and remove old views method.
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

98	3	lib/toaster/toastergui/api.py
1	1	lib/toaster/toastergui/templates/importlayer.html
4	2	lib/toaster/toastergui/urls.py
0	115	lib/toaster/toastergui/views.py

commit 78dc7b9f1801e7f4c266ba1369e5706f177ddaa1
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2016-12-09 16:52:44 +0000

    toaster: models Layer_Version get_detailspage_url optional project_id
    
    Allow passing none as the project id, this is convenient for layers
    which belong to projects already and therefore have their own project
    field.
    
    Add documentation string to function
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

7	1	lib/toaster/orm/models.py

commit 8116cb4f71de09eff124cd48d80cc7a7c64da5e1
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2016-12-09 16:52:43 +0000

    toaster: models Layer fix whitespace
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/toaster/orm/models.py

commit 554c4992b33b77526b4b37c7484f1dd00032ddef
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2016-12-09 16:52:42 +0000

    toaster: tablejs Add visual indicator for table data loading
    
    Add a visual indicator when the data is changing in the table, for instance if
    it's being re-ordered, searched or paginated.
    
    [YOCTO #10104]
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

10	0	lib/toaster/toastergui/static/js/table.js

commit a2768ecae7846d72a1bdb7cbbc5e8d242af854f6
Author: Scott Rifenbark <srifenbark@gmail.com>
Date:   2016-10-19 09:10:17 -0700

    bitbake-user-manual: Added new "Line Joining" section.
    
    Fixes [YOCTO #10444]
    
    Added a new section about syntax called "Line Joining".  The
    section describes how you can use the backslash character (\)
    to joing stuff.
    
    Signed-off-by: Scott Rifenbark <srifenbark@gmail.com>

42	0	doc/bitbake-user-manual/bitbake-user-manual-metadata.xml

commit d7121d919beaa4be2c18d8f0bbd4afe01590eb7b
Author: Scott Rifenbark <srifenbark@gmail.com>
Date:   2016-10-14 08:20:20 -0700

    bitbake-user-manual: Refreshed the 'bitbake --help' output.
    
    Signed-off-by: Scott Rifenbark <srifenbark@gmail.com>

3	2	doc/bitbake-user-manual/bitbake-user-manual-intro.xml

commit 99136f5f591deef0c96d9aea2dbea1c216f38121
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2016-12-08 15:51:22 +0000

    toaster: Reference pip3 not pip
    
    Now that we use python3, we should refer to pip3, not pip.
    
    [YOCTO #10774]
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	bin/toaster
2	2	lib/toaster/tests/browser/README

commit 058f8517c041b80e8b591ad7d34a68281b2d03fc
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2016-12-07 14:20:48 +0000

    cooker: Handle inofity queue overflows more gracefully
    
    If many files change and the inotify queue overflows, rather than print
    a traceback, invalidate the caches and warn the user.
    
    [YOCTO #10676]
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

8	0	lib/bb/cooker.py

commit 3d7186353e804c9410096c408bc337a98c8b33fe
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2016-11-14 09:51:38 +0000

    cooker: Fix world taskgraph generation issue
    
    The processing of the "do_" prefix to tasks is currently inconsistent
    and has resulted in "bitbake world -g" being broken as task prefixes
    don't get handled correctly.
    
    Make the "do_" task prefix handling consistent through various codepaths.
    
    [YOCTO #10651]
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

10	4	lib/bb/cooker.py

commit 1aeb45abe56061f044c2347889c191d5256ff21f
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2016-12-07 12:07:06 +0000

    utils: Avoid traceback errors
    
    Avoid errors like:
    
    ERROR: Exception handler error: 'NoneType' object has no attribute 'decode'
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/utils.py

commit 38b857d086af43af6ea3aa60d3876a2c9b225401
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2016-12-07 12:04:45 +0000

    runqueue: Send BB_TASKDEPDATA for setscene tasks
    
    We now have code in OE that needs BB_TASKDEPDATA for setscene tasks. Therefore
    generate and send this data. In this case its a "pre collapsed" tree
    but that is fine for the use cases in question.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

42	2	lib/bb/runqueue.py

commit 758867e8dc74283bb1f031e158ec54cefdd5c2a6
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2016-12-07 12:04:44 +0000

    runqueue: Add the taskhash to BB_TASKDEPDATA
    
    Its useful to know the task hash in code using TASKDEPDATA so add this
    data to the data structure. The recipe specific sysroots in OE
    need this data.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	1	lib/bb/runqueue.py

commit 9375349e27b08b4d1cfe4825c042d4c82120e00b
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2016-12-07 12:04:43 +0000

    bitbake-worker: Further IO performance tweaks
    
    Looking further at the CPU loads on systems running large numbers of tasks,
    the following things helps performance:
    
    * Loop on waitpid until there are no processes still waiting
    * Using select to wait for the cooker pipe to be writable before writing
      avoiding pointless 100% cpu usage
    * Only reading from worker pipes that select highlights are readable
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

9	4	bin/bitbake-worker

commit 1679188f9c55c615cae780f2b5e6852dea9cf2ec
Author: Daniel Lublin <daniel@lublin.se>
Date:   2016-12-05 18:42:05 +0100

    lib/bs4: Fix imports from html5lib >= 0.9999999/1.0b8
    
    As of html5lib 0.9999999/1.0b8 (released on July 14, 2016), some modules
    have moved from _base to base. Handle this, while staying compatible
    with earlier versions.
    
    Signed-off-by: Daniel Lublin <daniel@lublin.se>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

12	5	lib/bs4/builder/_html5lib.py

commit efb0e47479b3526bc047112f7200087c5844bba4
Author: Sujith H <sujith.h@gmail.com>
Date:   2016-12-01 11:13:09 +0530

    cooker: convert type which needs to be marshalled
    
    We assume that the value taken by variable v can be string,
    integer or any type which can be marshalled by xmlrpc. This
    change would help us to convert the non marshallable types
    to string. So that we don't get exception from xmlrpc.
    
    [YOCTO #10740]
    
    Signed-off-by: Sujith H <sujith.h@gmail.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/cooker.py

commit 7df842f8f8b2ae640109ed06729ab59c9469fc64
Author: brian avery <avery.brian@gmail.com>
Date:   2016-11-30 19:35:27 -0800

    toaster: browser tests - add Selenium Docker container as driver
    
    Adds the ability to specify a Selenium Docker container server as
    a driver. This allows for repeatable tests independent of host.
    Currently we assume you are using the Firefox container. Instructions
    are located in the README in tests/browser.
    
    Signed-off-by: brian avery <brian.avery@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

19	2	lib/toaster/tests/browser/README
11	2	lib/toaster/tests/browser/selenium_helpers_base.py

commit 3c82af11b89cf251c3e56725a1eed2d3f4bd835b
Author: Ismo Puustinen <ismo.puustinen@intel.com>
Date:   2016-11-30 14:43:19 +0200

    depexp: fix string formatting.
    
    The parameters to Python string formatting need to be inside a tuple.
    
    Signed-off-by: Ismo Puustinen <ismo.puustinen@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/ui/depexp.py

commit f065ac17d0031dca6309ddbff18c8792630de865
Author: Patrick Ohly <patrick.ohly@intel.com>
Date:   2016-11-29 17:47:45 +0100

    monitordisk: add event
    
    The current disk usage is interesting and may be worth logging over
    time as part of the build statistics. Instead of re-implementing the
    code and the configuration option (BB_DISKMON_DIRS), the information
    gathered by monitordisk.py is made available to buildstats.bbclass via
    a new event.
    
    This has pros and cons:
    - there is already a useful default configuration for "interesting" directories
    - no code duplication
    - on the other hand, users cannot configure recording separately from
      monitoring (probably not that important)
    
    Signed-off-by: Patrick Ohly <patrick.ohly@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

17	0	lib/bb/event.py
8	0	lib/bb/monitordisk.py

commit 3c943e989964382c0b819d92de26a0c914ebed33
Author: Patrick Ohly <patrick.ohly@intel.com>
Date:   2016-11-29 17:47:44 +0100

    monitordisk.py: minor code and comment cleanup
    
    There's no need to encode and decode the hash key as a single string,
    a tuple works just fine. Iterating over entries can be written more
    concisely.
    
    Entries in the stat results are integers, not floating point values.
    
    Signed-off-by: Patrick Ohly <patrick.ohly@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

6	9	lib/bb/monitordisk.py

commit 4547eea26803a9cd355d8b045197bcbdbb36a9ad
Author: Patrick Ohly <patrick.ohly@intel.com>
Date:   2016-11-29 17:47:43 +0100

    runqueue.py: monitor disk space at regular time intervals
    
    Hooking the disk monitor into the regular heatbeat event instead
    of the runqueue solves two problems:
    
    - When there is just one long running task which fills up the disk,
      the previous approach did not notice that until after the completion
      of the task because _execute_runqueue() only gets called on task
      state changes. As a result, aborting a build did not work in this
      case.
    
    - When there are many short-lived tasks, disk space was getting
      checked very frequently. When the storage that is getting checked
      is on an NFS server, that can lead to noticable traffic to the
      server.
    
    Signed-off-by: Patrick Ohly <patrick.ohly@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

19	5	lib/bb/runqueue.py

commit 7cf22ea057d28c54bd98dc1ab7a43402a29ff1f5
Author: Patrick Ohly <patrick.ohly@intel.com>
Date:   2016-11-29 17:47:42 +0100

    cooker process: fire heartbeat event at regular time intervals
    
    The intended usage is for recording current system statistics from
    /proc in buildstats.bbclass during a build and for improving the
    BB_DISKMON_DIRS implementation.
    
    All other existing hooks are less suitable because they trigger at
    unpredictable rates: too often can be handled by doing rate-limiting
    in the event handler, but not often enough (for example, when there is
    only one long-running task) cannot because the handler does not get
    called at all.
    
    The implementation of the new heartbeat event hooks into the cooker
    process event queue. The process already wakes up every 0.1s, which is
    often enough for the intentionally coarse 1s delay between
    heartbeats. That value was chosen to keep the overhead low while still
    being frequent enough for the intended usage.
    
    If necessary, BB_HEARTBEAT_EVENT can be set to a float specifying
    the delay in seconds between these heartbeat events.
    
    Signed-off-by: Patrick Ohly <patrick.ohly@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

10	0	lib/bb/event.py
25	0	lib/bb/server/process.py
1	0	lib/bb/ui/knotty.py
3	0	lib/bb/ui/toasterui.py

commit 0bb188f01e396052b127e170a25246d79a6d6741
Author: Ross Burton <ross.burton@intel.com>
Date:   2016-11-16 17:22:05 +0000

    ast: remove BBVERSIONS support
    
    BBVERSIONS is moderately horrible and it doesn't appear to be actually used by
    anyone, so remove it to simplify the finalise codepaths.
    
    Signed-off-by: Ross Burton <ross.burton@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

0	67	lib/bb/parse/ast.py

commit d18a74de9ac75ba32f84c40620ca9d47c1ef96a3
Author: Patrick Ohly <patrick.ohly@intel.com>
Date:   2016-11-18 16:23:22 +0100

    codeparser.py: support deeply nested tokens
    
    For shell constructs like
       echo hello & wait $!
    the process_tokens() method ended up with a situation where "token"
    in the "name, value = token" assignment was a list of tuples
    and not the expected tuple, causing the assignment to fail.
    
    There were already two for loops (one in _parse_shell(), one in
    process_tokens()) which iterated over token lists. Apparently the
    actual nesting can also be deeper.
    
    Now there is just one such loop in process_token_list() which calls
    itself recursively when it detects that a list entry is another list.
    
    As a side effect (improvement?!) of the loop removal in
    _parse_shell(), the local function definitions in process_tokens() get
    executed less often.
    
    Fixes: [YOCTO #10668]
    
    Signed-off-by: Patrick Ohly <patrick.ohly@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

17	12	lib/bb/codeparser.py

commit ddd3bc2d64d7240ecb6b6e4a1ae29b1faef6cc22
Author: Markus Lehtonen <markus.lehtonen@linux.intel.com>
Date:   2016-11-21 14:31:43 +0200

    fetch2: obey BB_ALLOWED_NETWORKS when checking network access
    
    [YOCTO #10508]
    
    Signed-off-by: Markus Lehtonen <markus.lehtonen@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

5	2	lib/bb/fetch2/__init__.py
2	2	lib/bb/fetch2/git.py
1	1	lib/bb/fetch2/hg.py
1	1	lib/bb/fetch2/npm.py
4	4	lib/bb/fetch2/perforce.py
1	1	lib/bb/fetch2/svn.py
1	1	lib/bb/fetch2/wget.py

commit 5accd6c4d1dcdf6609b4ed25c2b5e4faaf7f0909
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2016-11-24 11:20:06 +0000

    toaster: buildinfohelper Clarify log message for build history
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	2	lib/bb/ui/buildinfohelper.py

commit ea298ece8d678889cd5bcde46e00545e9a73edb9
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2016-11-24 11:20:05 +0000

    toaster: buildinfohelper fix _get_layer_version_for_dependency
    
    This function is simplified by not trying to handle replacing the regex
    and just compiling and using it for matching.
    
    - Fix typo in logger output with undefined variable
    - Fix pyflake errors
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

20	12	lib/bb/ui/buildinfohelper.py

commit 6935cc06974ea94c9971ede89b6e8f0eae9c195b
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2016-11-24 11:20:04 +0000

    toaster: buildinfohelper Simplify layer event to toaster layer function
    
    Simplify the layer event information to layer version object in toaster
    function. Previously this attempted many different methods of trying to
    obtain the correct layer from toaster by manipulating the data from the
    event or the data from the known layers to try and match them together.
    
    We speed up and simplify this process by making better use of django's
    orm methods and by working down the most likely matching methods in order
    of accuracy.
    
    [YOCTO #10220]
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

28	41	lib/bb/ui/buildinfohelper.py

commit 15a42b36c01fccd79e5aa0788dea5640b253982b
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2016-11-24 11:20:03 +0000

    toaster: bldcontrol Move CustomImageRecipe file creation into own function
    
    Move the custom image file creation (i.e. create the layer file
    structure, conf and recipe file) into it's own function and remove the
    creation of the BRLayer as this is done at schedule_build just like all
    the other layers.
    
    Fix a bug where the toaster-custom-images layer was always being appened
    to the layer list if the directory exists.
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

75	69	lib/toaster/bldcontrol/localhostbecontroller.py

commit f8d3ea784937b6e416d3e5a4feb1283c478e4caa
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2016-11-24 11:20:02 +0000

    toaster: orm models Handle CustomImageRecipe BRLayer here
    
    The schedule_build function on the project object is where the BRLayers
    are created for the build. Instead of creating the BRLayer for the
    CustomImageRecipe in the localhostbbcontroller create it here so that
    all that mechanism is in one place.
    
    Also fix a number of pyflake errors.
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

37	21	lib/toaster/orm/models.py

commit 69f33397083f54f977fa0cd4dd621731f32fd034
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2016-11-24 11:20:01 +0000

    toaster: orm models Project class Fix pyflake errors
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

12	8	lib/toaster/orm/models.py

commit ba5332d4960d7f4f79aef63136796e2fa67284e3
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2016-11-24 11:20:00 +0000

    toaster: buildinfohelper toaster-custom-images layer
    
    This fixes the unidentified layers issue by making the
    toaster-custom-images layer a local layer. By doing this we also fix the
    git assumptions made for the local layers which stop recipes and other
    meta data being associated with them. This also removed some of the
    special casing previously needed when we didn't have the concept of a
    local (non git) layer.
    
    Also rename created flag var to a have a different var for each returned
    value so that the same value isn't used multiple times.
    
    [YOCTO #10220]
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	6	lib/bb/ui/buildinfohelper.py
18	7	lib/toaster/bldcontrol/localhostbecontroller.py
2	1	lib/toaster/orm/models.py
10	6	lib/toaster/toastergui/api.py

commit f3e99d820f3798869a2a1d1604709c1c324dbbab
Author: Sujith H <sujith.h@gmail.com>
Date:   2016-11-24 11:19:59 +0000

    toaster: localhostbecontroller write toaster layers for project to toaster-bblayers.conf
    
    Instead of updating conf/bblayers, here we update toaster-bblayers.conf
    file. So extra effort to update bblayers.conf can be removed safely.
    
    Signed-off-by: Sujith H <sujith.h@gmail.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

4	14	lib/toaster/bldcontrol/localhostbecontroller.py

commit 9d168bb5f05453bdb7156793eea25da0a3119b4d
Author: Sujith H <sujith.h@gmail.com>
Date:   2016-11-24 11:19:58 +0000

    toaster: localhostbecontroller accept custom init script for build
    
    When passed variable CUSTOM_BUILD_INIT_SCRIPT to toaster
    setting, it would be nice to use it. Else toaster
    can use oe-init script. This gives an oppurtunity to
    use customized build init scritps.
    
    Signed-off-by: Sujith H <sujith.h@gmail.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

7	2	lib/toaster/bldcontrol/localhostbecontroller.py

commit f3da9f85e6036e6f43377172cbcfe701e0efca7f
Author: Reyna, David <david.reyna@windriver.com>
Date:   2016-11-24 11:19:57 +0000

    toaster: tablejs Fix missing close square bracket
    
    There is a missing close square bracket.
    
    [YOCTO #10631]
    
    Signed-off-by: David Reyna <David.Reyna@windriver.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/toaster/toastergui/static/js/table.js

commit e9efef0bdb8068984c3013b87aac9e872ffb38ae
Author: Reyna, David <david.reyna@windriver.com>
Date:   2016-11-24 11:19:56 +0000

    toaster: orm gen_layerdeps Protect against circular Layer dependencies
    
    Limit the recursion (to say 20 levels) when processing layer dependencies
    so that circular dependecies do not cause infinite decent and an
    out-of-memory failure. The duplicate found layers are already immediately
    filtered in the code.
    
    [YOCTO #10630]
    
    Signed-off-by: David Reyna <David.Reyna@windriver.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

9	4	lib/toaster/orm/models.py

commit bc8401e78cea140349bded228d38f72f628b3980
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2016-11-24 11:19:55 +0000

    toaster: customrecipejs Consume click event on 'a' link if disabled
    
    Consume the click event on the download recipe link if it's disabled. To
    prevent the link from sending user to an error page.
    See http://getbootstrap.com/css/#forms-disabled-fieldsets and a link
    caveat.
    
    [YOCTO #10151]
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

6	0	lib/toaster/toastergui/static/js/customrecipe.js

commit 1a7c356491b88c8decced39fb2039ef90065f2d2
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2016-11-24 11:19:54 +0000

    toaster: Add an example production settings file
    
    Add an example settings that can be used for the basis of the production
    instance of Toaster.
    
    [YOCTO #10581]
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

58	0	lib/toaster/toastermain/settings_production_example.py

commit 161ea71519e7f70d4aadaafc9c3294a12612f0cb
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2016-11-24 11:19:53 +0000

    toaster: tests Add management command tests
    
    Add some simple sanity tests for the management commands that we use for
    Toaster.
    
    Can be executed with ./manage.py test tests.commands
    
    For faster execution use the test settings and keepdb flag:
    DJANGO_SETTINGS_MODULE=toastermain.settings_test ./manage.py test
    tests.commands --keepdb
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

0	0	lib/toaster/tests/commands/__init__.py
61	0	lib/toaster/tests/commands/test_loaddata.py
45	0	lib/toaster/tests/commands/test_lsupdates.py
88	0	lib/toaster/tests/commands/test_runbuilds.py

commit 999e980ee1a58d16f33ef6c0e41aecdcd0206f39
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2016-11-24 11:19:52 +0000

    toaster: runbuilds Write the pidfile in python rather than shell script
    
    Write the pid file out in the start up of this management command. This
    ensures this has happened instead of relying on the shell command having
    been run which may or may not be the case. This also makes it simpler for
    testing.
    
    Couple of clean ups of runbuilds as identified by pyflake
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	bin/toaster
14	7	lib/toaster/bldcontrol/management/commands/runbuilds.py
0	1	lib/toaster/orm/management/commands/lsupdates.py

commit c19baa8c19ea8ab9b9b64fd30298d8764c6fd2cd
Author: Joshua Lock <joshua.g.lock@intel.com>
Date:   2016-11-25 15:28:09 +0000

    bitbake: remove True option to getVarFlag calls
    
    getVarFlag() now defaults to expanding by default, thus remove the
    True option from getVarFlag() calls with a regex search and
    replace.
    
    Search made with the following regex:
    getVarFlag ?\(( ?[^,()]*, ?[^,()]*), True\)
    
    Signed-off-by: Joshua Lock <joshua.g.lock@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	bin/bitbake-worker
3	3	lib/bb/build.py
1	1	lib/bb/cache.py
1	1	lib/bb/cookerdata.py
4	4	lib/bb/data.py
2	2	lib/bb/data_smart.py
2	2	lib/bb/fetch2/__init__.py
1	1	lib/bb/parse/ast.py
1	1	lib/bb/tests/parse.py

commit 3b45c479de8640f92dd1d9f147b02e1eecfaadc8
Author: Joshua Lock <joshua.g.lock@intel.com>
Date:   2016-11-25 15:28:08 +0000

    bitbake: remove True option to getVar calls
    
    getVar() now defaults to expanding by default, thus remove the True
    option from getVar() calls with a regex search and replace.
    
    Search made with the following regex: getVar ?\(( ?[^,()]*), True\)
    
    Signed-off-by: Joshua Lock <joshua.g.lock@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	bin/bitbake-layers
2	2	bin/bitbake-worker
2	2	doc/bitbake-user-manual/bitbake-user-manual-fetching.xml
4	4	doc/bitbake-user-manual/bitbake-user-manual-metadata.xml
20	20	lib/bb/build.py
4	4	lib/bb/cache.py
21	21	lib/bb/cooker.py
5	5	lib/bb/cookerdata.py
9	9	lib/bb/data.py
6	6	lib/bb/data_smart.py
32	32	lib/bb/fetch2/__init__.py
5	5	lib/bb/fetch2/clearcase.py
7	7	lib/bb/fetch2/cvs.py
6	6	lib/bb/fetch2/git.py
5	5	lib/bb/fetch2/hg.py
6	6	lib/bb/fetch2/local.py
10	10	lib/bb/fetch2/npm.py
5	5	lib/bb/fetch2/osc.py
4	4	lib/bb/fetch2/perforce.py
2	2	lib/bb/fetch2/repo.py
1	1	lib/bb/fetch2/sftp.py
2	2	lib/bb/fetch2/ssh.py
1	1	lib/bb/fetch2/svn.py
6	6	lib/bb/fetch2/wget.py
2	2	lib/bb/monitordisk.py
1	1	lib/bb/parse/__init__.py
6	6	lib/bb/parse/ast.py
1	1	lib/bb/parse/parse_py/BBHandler.py
3	3	lib/bb/parse/parse_py/ConfHandler.py
2	2	lib/bb/persist_data.py
6	6	lib/bb/providers.py
16	16	lib/bb/runqueue.py
7	7	lib/bb/siggen.py
6	6	lib/bb/tests/codeparser.py
29	29	lib/bb/tests/data.py
13	13	lib/bb/tests/parse.py
8	8	lib/bb/utils.py
1	1	lib/bblayers/action.py
1	1	lib/bblayers/common.py
4	4	lib/bblayers/layerindex.py
5	5	lib/bblayers/query.py
2	2	lib/prserv/serv.py

commit 3cb0d1c78b4c2e4f251a59b86c8da583828ad08b
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2016-11-24 21:41:30 +0000

    bitbake-worker: Handle cooker/worker IO deadlocking
    
    I noiced builds where tasks seemed to be taking a surprisingly long time.
    When I looked at the output of top/pstree, these tasks were no longer
    running despite being listed in knotty. Some were in D/Z state waiting for
    their exit code to be collected, others were simply not present at all.
    
    strace showed communication problems between the worker and cooker, each
    was trying to write to the other and nearly deadlocking. Eventually, timeouts
    would allow them to echange 64kb of data but this was only happening every
    few seconds.
    
    Whilst this particularly affected builds on machines with large numbers
    of cores (and hence highly parallal task execution) and in cases where
    I had a lot of debug enabled, this situation is clearly bad in general.
    
    This patch introduces a thread to the worker which is used to write data
    back to cooker. This means that the deadlock can't occur and data flows
    much more freely and effectively.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

36	16	bin/bitbake-worker

commit d140f0ee6f301264e226914766d9f63558acfd6c
Author: Kai Kang <kai.kang@windriver.com>
Date:   2016-10-09 16:34:32 +0800

    COW.py: fix sample codes
    
    The call of methods iteritems() and itervalues() in sample codes were
    replaced by items() and values() to convert to Python 3 by Bitbake rev
    d0f904d407f57998419bd9c305ce53e5eaa36b24. But the methods iteritems()
    and itervalues() belong to class COWDictMeta not class dict or set. The
    modifications should not be made in purpose that it fails to run sample
    codes, so revert them.
    
    Signed-off-by: Kai Kang <kai.kang@windriver.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

12	12	lib/bb/COW.py

commit f981b68f66718d5b196684f4e378a5f195ff0337
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2016-11-09 19:52:34 -0800

    toaster: layerindex updater Take into account layers being predefined
    
    As we can now provide layer definitions through fixtures we need to be
    more clever how we update the metadata in the database to avoid
    duplicate metadata being created. To do this we make more effort to
    match existing data in the database and update only the fields which
    will be better provided by the layer index.
    
    This removes the need for us to special case layers which are provided
    as part of poky such as openembedded-core or meta-poky which exist on
    the layerindex but with different git urls.
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: brian avery <brian.avery@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

19	41	lib/toaster/orm/management/commands/lsupdates.py

commit c83ab92362378b22d3f4d6119bf362f704577ca2
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2016-11-09 19:52:33 -0800

    toaster: orm/fixtures Add the master release and correct morty release
    
    Add the master release option to base your project on and correct the
    morty release so that for poky based setups we use the poky provided
    version of the layer rather than checking out the layer from its own git
    repository.
    
    [YOCTO #10497]
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: brian avery <brian.avery@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

21	2	lib/toaster/orm/fixtures/oe-core.xml
75	7	lib/toaster/orm/fixtures/poky.xml

commit 115cee16a9aecfcd1061bb106ebca4e861d9b296
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2016-11-09 19:52:32 -0800

    toaster: settings fixture Set default release to master
    
    Now that morty has been released we now set the DEFAULT_RELEASE back to
    master.
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: brian avery <brian.avery@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/toaster/orm/fixtures/settings.xml

commit 063d255fdcb3f79b2d1b0badedc80384b295a3f5
Author: Patrick Ohly <patrick.ohly@intel.com>
Date:   2016-11-14 10:39:14 +0100

    taskdata.py: improve handling of depends/rdepends
    
    Error handling only caught the cause where a dependency did not have
    any colon, but ignored the case where more than one was given. Now
    "pn:task:garbage" will raise an error instead of ignoring ":garbage".
    
    The error message had a misplaced line break (?) with the full stop
    on the next line. Indenting the explanation with a space might have
    been intended and is kept.
    
    split() was called three times instead of just once.
    
    Instead of improving the two instances of the code (one for 'depends',
    one for 'rdepends'), the common code is now in a helper function.
    
    Signed-off-by: Patrick Ohly <patrick.ohly@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

15	18	lib/bb/taskdata.py

commit 3511d464f3a9d8b4334cda384b35016de69ce49e
Author: Patrick Ohly <patrick.ohly@intel.com>
Date:   2016-11-14 10:39:00 +0100

    data_smart.py: don't reorder internal bitbake variables when calculating hash
    
    Commit 260ced745 added __BBTASKS, __BBANONFUNCS, __BBHANDLERS to the
    data that gets hashed, but only after reordering these lists. The
    intention probably was to make the hash deterministic, but that's
    unnecessary (the content of the variables should already be
    deterministic) and hides potential reasons that might require
    re-parsing.
    
    Signed-off-by: Patrick Ohly <patrick.ohly@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

0	1	lib/bb/data_smart.py

commit caf5bb9b7fe254bca9da077ebcb84a37d1f96dd4
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2016-11-16 11:20:42 +0000

    data_smart: Default to expansion for getVar/getVarFlags
    
    We've been building to this for a while, default to return expanded
    values for getVar/getVarFlags.
    
    We can then go through and remove the "True" option to many of the
    calls to this function, all function calls should have a default by now
    though since the parameter has been required for a while.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	2	lib/bb/data_smart.py

commit 1825604d46fcd29fad6cfd325f1cb1e1b457d2c9
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2016-11-16 11:20:06 +0000

    data: Drop deprecated old style bitbake API
    
    The old style bb.data.getVar/setVar API has long since been deprecated in
    favour of d.getVar/setVar and friends.
    
    Now we're about to change the default expansion parameter, drop the old APIs
    to simplify the transition and ensure everyone is using the new style functions.
    Conversion is trivial if there are remaining stragglers.
    
    I've left bb.data.expand() for now since its more widely used but would make a good
    follow up patch series.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

0	53	lib/bb/data.py

commit ff7892fa808116acc1ac50effa023a4cb031a5fc
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2016-11-16 11:19:01 +0000

    lib/bb: Don't use deprecated bb.data.getVar/setVar API
    
    The old style bb.data.getVar/setVar API is obsolete. Most of bitbake
    doesn't use it but there were some pieces that escaped conversion. This
    patch fixes the remaining users mostly in the fetchers.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/fetch2/__init__.py
3	3	lib/bb/fetch2/clearcase.py
2	2	lib/bb/fetch2/git.py
1	1	lib/bb/fetch2/hg.py
4	4	lib/bb/fetch2/local.py
1	1	lib/bb/fetch2/npm.py
3	3	lib/bb/fetch2/repo.py
2	2	lib/bb/fetch2/sftp.py
7	7	lib/bb/tests/codeparser.py

commit cefb8c93c8299e68352cf7ec5ad9ca50c0d499ed
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2016-11-16 09:11:03 +1300

    fetch2: npm: conditionally hide NPM_LOCKDOWN / NPM_SHRINKWRAP warnings
    
    If ud.ignore_checksums is set (which we currently use to suppress the
    warnings for missing SRC_URI checksums when fetching files from
    scripts), then if we're fetching an npm package we should similarly
    suppress the warnings when NPM_LOCKDOWN and NPM_SHRINKWRAP aren't set.
    
    At the same time, make any errors reading either of these files actual
    errors since if the file is specified and could not be found, that
    should be an error - not the exact same warning.
    
    Fixes [YOCTO #10464].
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

14	8	lib/bb/fetch2/npm.py

commit 7f51149453c96a3f1da64ea85306518fd2b65f21
Author: brian avery <brian.avery@intel.com>
Date:   2016-11-04 12:27:06 +0000

    toaster: settings set ALLOWED_HOSTS to * in debug mode
    
    As of Django 1.8.16, Django is rejecting any HTTP_HOST header that is
    not on the ALLOWED_HOST list.  We often need to reference the
    toaster server via a fqdn, if we start it via webport=0.0.0.0:8000 for
    instance, and are hitting the server from a laptop. This change does
    reduce  the protection from a DNS rebinding attack, however, if you are
    running the toaster server outside a protected network, you should be
    using the production instance.
    
    [YOCTO #10578]
    
    Signed-off-by: brian avery <brian.avery@intel.com>
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

13	3	lib/toaster/toastermain/settings.py

commit 91c3b34625fac2a0f093a4b46a46e89f813e7972
Author: Robert Yang <liezhi.yang@windriver.com>
Date:   2016-10-27 01:50:18 -0700

    lib/bb/cooker.py: fix for BBFILE_PATTERN = ""
    
    There would be error when BBFILE_PATTERN = None:
      BBFILE_PATTERN_foo not defined
    
    This is the correct behaviour, but when the layer sets BBFILE_PATTERN = "",
    it would match all the remaining recipes, and cause "No bb files matched BBFILE_PATTERN"
    warnings for all the layers which behind it.
    
    When a layer sets BBFILE_PATTERN = "" (for example, a layer only
    provides git repos and source tarballs), now it means has no recipes.
    This is different from BBFILE_PATTERN_IGNORE_EMPTY, the later one means
    that it *may* not have any recipes.
    
    Signed-off-by: Robert Yang <liezhi.yang@windriver.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

4	0	lib/bb/cooker.py

commit 3570a8cf94354c8ab07513c304ebae33623fea33
Author: Olaf Mandel <o.mandel@menlosystems.com>
Date:   2016-10-28 14:04:10 +0000

    toasterui.py: warn if buildstats is missing
    
    Like for buildhistory, warn if buildstats is missing from INHERIT.
    
    CC: Joshua Lock <joshua.g.lock@linux.intel.com>
    Signed-off-by: Olaf Mandel <o.mandel@menlosystems.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	0	lib/bb/ui/toasterui.py

commit 0e675547166acc8650498e153bd3482420342c32
Author: Ed Bartosh <ed.bartosh@linux.intel.com>
Date:   2016-10-31 16:40:40 +0000

    toaster: add tests/eventreplay/README
    
    Put instructions on how to prepare event log files
    and run eventreplay tests.
    
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

22	0	lib/toaster/tests/eventreplay/README

commit c922f4904301174cc72ba35e76870fbf964082cf
Author: Ed Bartosh <ed.bartosh@linux.intel.com>
Date:   2016-10-31 16:40:39 +0000

    toaster: add eventreplay test case for zlib
    
    Run toaster-eventreplay with zlib.events.
    Check if zlib build and package present in Toaster database.
    
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

11	1	lib/toaster/tests/eventreplay/__init__.py

commit 73410e6dc965b2885c68e87ed6fa8d8b57e9c49d
Author: Ed Bartosh <ed.bartosh@linux.intel.com>
Date:   2016-10-31 16:40:38 +0000

    toaster: add eventreplay test case for core-image-minimal
    
    Run toaster-eventreplay with core-image-minimal.events and
    test if all required packages present in Target_Installed_Package
    table.
    
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

87	0	lib/toaster/tests/eventreplay/__init__.py

commit da631152a0db3f432709a05ff15a268d784ca3ab
Author: Ed Bartosh <ed.bartosh@linux.intel.com>
Date:   2016-10-31 16:40:37 +0000

    toaster: use current directory if BUILDDIR is not set
    
    If BUILDDIR environment variable is not set signal_runbuilds function
    throws TypeError as os.getenv('BUILDDIR') returns None:
    
    ERROR: unsupported operand type(s) for +=: 'NoneType' and 'str'
    Traceback (most recent call last):
      File "bitbake/lib/bb/ui/toasterui.py", line
    391, in main
        buildinfohelper.update_build_information(event, errors, warnings,
    taskfailures)
      File "bitbake/lib/bb/ui/buildinfohelper.py",
    line 1184, in update_build_information
        self.internal_state['build'], errors, warnings, taskfailures)
      File "bitbake/lib/bb/ui/buildinfohelper.py",
    line 238, in update_build_stats_and_outcome
        signal_runbuilds()
      File "bitbake/lib/toaster/orm/models.py", line
    1746, in signal_runbuilds
        '.runbuilds.pid')) as pidf:
      File "/usr/lib64/python3.4/posixpath.py", line 82, in join
        path += b
    TypeError: unsupported operand type(s) for +=: 'NoneType' and 'str'
    
    Used os.getenv('BUILDIR', '.') to make it always return meaningful
    directory path. Current directory '.' will be used if BUILDDIR is
    not set.
    
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/toaster/orm/models.py

commit e23b574fe52f416184ee43838b8ab28b5b8eb71d
Author: brian avery <brian.avery@intel.com>
Date:   2016-10-28 17:52:51 +0100

    toaster: buildinfohelper Handle regex paths
    
    We were presuming that all the layer dependency information was of the
    form "^/path/to/layer" to we were just stripping the leading "^" off of
    the layer information when we were matching the layer priorities to the
    toaster database.  This patch splits out the priorities layer match which
    gets a  regex from the task/recipe match which is gets a path.
    
    Signed-off-by: brian avery <brian.avery@intel.com>
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

26	1	lib/bb/ui/buildinfohelper.py

commit ecb94e50262b3f4ca8d5107f77f053335ef23511
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2016-10-28 18:48:49 +0300

    toaster: tests builds test_core_image_min Clean ups
    
    Instead of searching for the build for each test just use the returned
    value of the completed build.
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

20	30	lib/toaster/tests/builds/test_core_image_min.py

commit 448d1d9dc8989ef4c997a90c71cd7e1da0495c1c
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2016-10-28 18:48:48 +0300

    toaster: tests builds Update buildtest
    
    Now that we're using fixtures for configuration just load these instead
    of trying to search for a toasterconf json file.
    
    Also for convenience add the ability for the tests to source the build
    environment script. To use this test make sure that directories are in
    the same layout as poky.
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

81	48	lib/toaster/tests/builds/buildtest.py

commit 60d3f93836da5523705b0b2e25567d1c9040ec89
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2016-10-28 18:48:47 +0300

    toaster: orm models Handle run builds process not yet running
    
    During tests we may want to call the runbuilds process manually for
    example when doing a "one shot" approach rather than a long running
    process during tests.
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

6	2	lib/toaster/orm/models.py

commit 4b89db30af25da5f2c519cf684655d5af99f0e2c
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2016-10-28 18:48:46 +0300

    toaster: test browser test_layerdetails_page add wait_until_visible
    
    Add an additional wait_until_visible for the save buttons as firefox
    animates this into view so slowly we get a race on them being visible
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	1	lib/toaster/tests/browser/test_layerdetails_page.py

commit 7a82e45ca5c4d470f62f83e72d00cbe45baa1537
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2016-10-28 18:48:45 +0300

    toaster: Remove contrib tts
    
    Remove the "Toaster test system". We don't need a home brew
    test "framework" as the django test runner is more than adequate.
    None of these tests here are currently working and have been obsoleted
    by the work done on unit and browser tests in ./tests/.
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

0	6	lib/toaster/contrib/README
0	41	lib/toaster/contrib/tts/README
0	9	lib/toaster/contrib/tts/TODO
0	98	lib/toaster/contrib/tts/config.py
0	101	lib/toaster/contrib/tts/launcher.py
0	0	lib/toaster/contrib/tts/log/.create
0	56	lib/toaster/contrib/tts/recv.py
0	222	lib/toaster/contrib/tts/runner.py
0	5	lib/toaster/contrib/tts/settings.json
0	141	lib/toaster/contrib/tts/shellutils.py
0	115	lib/toaster/contrib/tts/tests.py
0	155	lib/toaster/contrib/tts/toasteruitest/run_toastertests.py
0	2376	lib/toaster/contrib/tts/toasteruitest/toaster_automation_test.py
0	25	lib/toaster/contrib/tts/toasteruitest/toaster_test.cfg
0	53	lib/toaster/contrib/tts/urlcheck.py
0	39	lib/toaster/contrib/tts/urllist.py

commit cf727757767d96b2cd2055f519289712bdf0e505
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2016-10-28 18:48:44 +0300

    toaster: Delete useless bldcontrol/test
    
    It doesn't work nor does it test anything useful
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

0	141	lib/toaster/bldcontrol/tests.py

commit 66076c006079237d97aaef4f242af5a4fa116d97
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2016-10-28 18:48:43 +0300

    toaster: Move views tests to main testing module
    
    Consolidating all the tests to live in the same place to make them more
    discoverable and consistent as well as not cluttering up the django app
    directory.
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

4	0	lib/toaster/tests/views/README
0	0	lib/toaster/tests/views/__init__.py
0	0	lib/toaster/{toastergui/tests.py => tests/views/test_views.py}

commit f407acefcea5619c76fd7b413d6356efc93e63e8
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2016-10-28 18:48:42 +0300

    toaster: views Tests fix all pyflake identified issues
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

47	48	lib/toaster/toastergui/tests.py

commit 9c7cc981408c9b4bbbff98ae93ff22199f6a8219
Author: Markus Lehtonen <markus.lehtonen@linux.intel.com>
Date:   2016-11-01 17:05:12 +0200

    bitbake-worker: print full traceback instead of message only
    
    Print full traceback instead of just the exception message in the
    child() function inside fork_off_task(). This makes debugging a lot
    easier as the function catches a generic "Exception" and the exception
    message alone might not give much information.
    
    [YOCTO #10393]
    
    Signed-off-by: Markus Lehtonen <markus.lehtonen@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	2	bin/bitbake-worker

commit f639f06cfa280adcc25438387567966271b9b2c3
Author: Markus Lehtonen <markus.lehtonen@linux.intel.com>
Date:   2016-11-01 17:05:11 +0200

    data: fix exception handling in exported_vars()
    
    Fix a bug where a totally wrong value of a variable would be exported if
    an exception happened during d.getVar(). Also, print a warning if an
    exception happends instead of silently ignoring it. It would probably be
    best just to raise the exception, instead, but use the warning for now
    in order to avoid breaking existing builds.
    
    [YOCTO #10393]
    
    Signed-off-by: Markus Lehtonen <markus.lehtonen@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

5	3	lib/bb/data.py

commit 291353b711670ce2da3d45617fc96520bdf09d3f
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2016-11-02 15:07:33 +0000

    siggen: Ensure taskhash mismatches don't override existing data
    
    We recalculate the taskhash to ensure the version we have matches
    what we think it should be. When we write out a sigdata file, use
    the calculated value so that we don't overwrite any existing file.
    This leaves any original taskhash sigdata file intact to allow a
    debugging comparison.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

9	9	lib/bb/siggen.py

commit 857829048c14338132784326ba98a71f12192db8
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2016-11-02 15:06:50 +0000

    siggen: Pass basehash to worker processes and sanity check reparsing result
    
    Bitbake can parse metadata in the cooker and in the worker during builds. If
    the metadata isn't deterministic, it can change between these two parses and
    this confuses things a lot. It turns out to be hard to debug these issues
    currently.
    
    This patch ensures the basehashes from the original parsing are passed into
    the workers and that these are checked when reparsing for consistency. The user
    is shown an error message if inconsistencies are found.
    
    There is debug code in siggen.py (see the "Slow but can be useful for debugging
    mismatched basehashes" commented code), we don't enable this by default due to
    performance issues. If you run into this message, enable this code and you will
    find "sigbasedata" files in tmp/stamps which should correspond to the hashes
    shown in this error message. bitbake-diffsigs on the files should show which
    variables are changing.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

9	4	lib/bb/siggen.py

commit 8b879fd81fdcf86645cfabad0f54454ba573df52
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2016-11-02 15:06:00 +0000

    build: Ensure we preserve sigbasedata files as well as sigdata ones
    
    We don't remove sigdata files, we also shouldn't remove sigbasedata files
    as this hinders debugging.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/build.py

commit 00f79096f639ce3a9c0b7c72cfb36f14e264733d
Author: brian avery <brian.avery@intel.com>
Date:   2016-10-14 16:28:01 +0100

    toaster: Update default release to Morty
    
    Set Morty to be the default release in toaster for the Morty release
    when creating new projects.
    
    Signed-off-by: brian avery <brian.avery@intel.com>
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/toaster/orm/fixtures/settings.xml

commit 2674ca33b900f4f3f16be504d7c67d0fc69c1c2d
Author: brian avery <brian.avery@intel.com>
Date:   2016-10-14 16:28:00 +0100

    toaster: Update poky fixture for Morty release
    
    Update the poky fixture to the Morty release.  This removes the
    master branch from the release and limits it to the morty branch.
    Normally, we would also support at least one past branch but the change
    from Python 2.7 -> Python 3 makes that infeasible.
    
    Signed-off-by: brian avery <brian.avery@intel.com>
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

6	6	lib/toaster/orm/fixtures/poky.xml

commit 93f1e6c3d022b1f12a230879160efa941cb1e250
Author: brian avery <brian.avery@intel.com>
Date:   2016-10-14 16:27:59 +0100

    toaster: Update oe-core fixture for Morty release
    
    Update the oe-core fixture to the Morty release.  This removes the
    master branch from the release and limits it to the morty branch.
    Normally, we would also support at least one past branch but the change
    from Python 2.7 -> Python 3 makes that infeasible.
    
    Signed-off-by: brian avery <brian.avery@intel.com>
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

8	8	lib/toaster/orm/fixtures/oe-core.xml

commit 46fecca9d531a07788b5cac8b2dc6a8267d8b6d0
Author: Aníbal Limón <anibal.limon@linux.intel.com>
Date:   2016-10-14 10:48:39 -0500

    bb.event: fix infinite loop on print_ui_queue
    
    If bitbake ends before _uiready and bb.event.LogHandler was add
    to the bitbake logger it causes an infinite loop when logging
    something.
    
    The scenario is print_ui_queue is called at exit and executes
    the log handlers [2] one of them is bb.event.LogHandler this handler
    appends the same entry to ui_queue causing the inifine loop [3].
    
    In order to fix a new copy of the ui_queue list is created when iterate
    ui_queue.
    
    [YOCTO #10399]
    
    [1] https://bugzilla.yoctoproject.org/show_bug.cgi?id=10399#c0
    [2] http://git.openembedded.org/bitbake/tree/lib/bb/event.py?id=41d9cd41d40b04746c82b4a940dca47df02514fc#n156
    [3]
    http://git.openembedded.org/bitbake/tree/lib/bb/event.py?id=41d9cd41d40b04746c82b4a940dca47df02514fc#n164
    
    Signed-off-by: Aníbal Limón <anibal.limon@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	2	lib/bb/event.py

commit 41d9cd41d40b04746c82b4a940dca47df02514fc
Author: Scott Rifenbark <srifenbark@gmail.com>
Date:   2016-10-13 15:00:23 -0700

    bitbake-user-manual: Changed BB_SETSCENE_VERIFY_FUNCTION name
    
    The BB_SETSCENE_VERIFY_FUNCTION variable has effectively changed
    to BB_SETSCENE_VERIFY_FUNCTION2.  I changed the three areas in the
    book.  Basically a name change.
    
    Signed-off-by: Scott Rifenbark <srifenbark@gmail.com>

1	1	doc/bitbake-user-manual/bitbake-user-manual-execution.xml
1	1	doc/bitbake-user-manual/bitbake-user-manual-metadata.xml
1	1	doc/bitbake-user-manual/bitbake-user-manual-ref-variables.xml

commit ec99f168fd0d6feca67f2890917ba4829933c73b
Author: Scott Rifenbark <srifenbark@gmail.com>
Date:   2016-10-11 07:59:46 -0700

    bitbake-user-manual: Fixes small typos for 'addtask' section
    
    Fixes [YOCTO #10401]
    
    Applied some edits to various areas of the section.  These
    were minor in nature.
    
    Signed-off-by: Scott Rifenbark <srifenbark@gmail.com>

3	3	doc/bitbake-user-manual/bitbake-user-manual-metadata.xml

commit b6a4a6147b9e455cc1fec37553fb577f187a2d73
Author: Scott Rifenbark <srifenbark@gmail.com>
Date:   2016-10-10 12:49:06 -0700

    bitbake-user-manual: Updated the [noexec] and [nostamp] flag descriptions
    
    Fixes [YOCTO #10401]
    
    Added some wording to clarify that setting these flags to "1"
    causes the desired action.  Also, provided a cautionary note
    about tasks depending on any [nostamp] task causes the task
    to always be executed and could cause unnecessary rebuild time.
    
    Signed-off-by: Scott Rifenbark <srifenbark@gmail.com>

13	4	doc/bitbake-user-manual/bitbake-user-manual-metadata.xml

commit c3373399c5d565de033c40a39e6f6f9399bb782e
Author: Scott Rifenbark <srifenbark@gmail.com>
Date:   2016-10-10 12:39:59 -0700

    bitbake-user-manual: Fleshed out the "addtask" documentation
    
    Fixes [YOCTO #10401]
    
    The "addtask" documentation was rewritten to tighten up the
    introductory section and to flesh out the actual examples.
    
    Signed-off-by: Scott Rifenbark <srifenbark@gmail.com>

91	33	doc/bitbake-user-manual/bitbake-user-manual-metadata.xml

commit 466b2c30f31754a7b6a2478e359f687ec6888e0d
Author: Scott Rifenbark <srifenbark@gmail.com>
Date:   2016-10-10 11:48:03 -0700

    bitbake-user-manual: Updated the datastore functions
    
    Fixes [YOCTO #10400]
    
    No information existed for cases when a variable did not exist.
    I added this information to each of the variables in the table.
    
    Signed-off-by: Scott Rifenbark <srifenbark@gmail.com>

32	12	doc/bitbake-user-manual/bitbake-user-manual-metadata.xml

commit f65e631ab6705dfd9188f19ee423eca33bca7d7d
Author: Randy Witt <randy.e.witt@linux.intel.com>
Date:   2016-10-11 15:36:19 -0700

    runqueue.py: Remove redundant whitelist checks
    
    The whitelist checks for BB_SETSCENE_ENFORCE were running for every call
    to execute(). Since the task list doesn't change for each call into
    execute, the checks only need to be ran once.
    
    [YOCTO #10369]
    
    Signed-off-by: Randy Witt <randy.e.witt@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

4	1	lib/bb/runqueue.py

commit d9713ed13d0c88c7ee38e8d7b52aa525318af6e3
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2016-10-11 08:46:35 +0100

    bitbake: Update version to 1.32.0
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	bin/bitbake
1	1	lib/bb/__init__.py

commit eee9231a543f1d0b9ef3cd8377fc46fd23afb97b
Author: Jussi Kukkonen <jussi.kukkonen@intel.com>
Date:   2016-10-10 11:30:04 +0300

    depexp: Close UI with error message on NoProvider event
    
    Without this the UI just sits there doing nothing. Showing an
    infobar in-UI would be nicer but not much more useful since currently
    user couldn't do anything in-UI to fix the situation. Implementation
    is based on the one in knotty.
    
    Fixes [YOCTO #9288]
    
    Signed-off-by: Jussi Kukkonen <jussi.kukkonen@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

24	0	lib/bb/ui/depexp.py

commit 35927a98daeeb854ef5782e900206af6cd96b3d7
Author: Benjamin Esquivel <benjamin.esquivel@linux.intel.com>
Date:   2016-10-07 16:46:26 -0500

    main: Check bitbake server-only port is a number
    
    Either using the memres script or the bitbake call with --server-only
    if the port is a string instead of a number then the process hangs
    indefinitely causing a loop that never ends.
    
    Add a check at the beginning for the port being a number otherwise
    show an error message and exit cleanly.
    
    [YOCTO #10397]
    
    Signed-off-by: Benjamin Esquivel <benjamin.esquivel@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

7	0	lib/bb/main.py

commit 1bf2ef874fbe47f1320007efa0bdeef8d630b8a1
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2016-10-07 08:26:48 +0100

    runqueue: Optimise task id string manipulations
    
    Some task id manipulations were suboptimal:
    
    * taskfn_fromtid and fn_from_tid were effectively the same function
    * many calls to split_tid(), then taskfn_fromtid()
    * taskfn_fromtid() called split_tid() internally
    
    This patch adds split_tid_mcfn() to replace split_tid() and returns the
    "taskfn" variant being used in many places. We update all core calls
    to the new function and ignore the return values we don't need since the
    function call overhead of the split_tid wrapper is higher than ignoring
    a return value.
    
    The one remaining standalone use of taskfn_fromtid is replaced with
    fn_from_tid. I couldn't see any external usage so it was dropped.
    
    There is external usage of split_tid so a wrapper remains for it.
    
    Combined together these changes should improve some of the runqueue task
    manipulation performance.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	6	lib/bb/cooker.py
33	46	lib/bb/runqueue.py

commit 858ade277d3bd62e84d3d78e9302f766c1b31dfb
Author: Ed Bartosh <ed.bartosh@linux.intel.com>
Date:   2016-10-07 09:23:20 +0300

    toaster: fix cloning of git+ssh repositories
    
    Replaced '+' -> '_' to avoid having '+' in folder name.
    
    Thanks Stephan Dünner for this fix.
    
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/toaster/bldcontrol/localhostbecontroller.py

commit 267e025cad44c8bd0fb157f1f7a2e08df117ba84
Author: Christopher Larson <chris_larson@mentor.com>
Date:   2016-10-06 21:07:41 -0700

    bb.runqueue: fix unexpected process death logic
    
    `if w in self.rq.worker` when w *is* self.rq.worker doesn't make a great deal
    of sense, and results in this error:
    
          File ".../poky/bitbake/lib/bb/runqueue.py", line 2372, in runQueuePipe.read():
                                 name = None
            >                    if w in self.rq.worker:
                                     name = "Worker"
        TypeError: unhashable type: 'dict'
    
    Most likely this was meant to be 'is' rather than 'in', but rather than
    checking after the fact, just include the name in the iteration, instead.
    
    While we're here, also clean up and fix the broken error message.
    
    Signed-off-by: Christopher Larson <chris_larson@mentor.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

5	10	lib/bb/runqueue.py

commit 812bd49cb569379ee90d5be28a4b6e60645f1e54
Author: Aníbal Limón <anibal.limon@linux.intel.com>
Date:   2016-10-06 16:52:07 -0500

    ui/knotty.py: Fix signal handling of SIGWINCH in BBProgress
    
    Add the ability to pass default signal handler for SIGWINCH in BBProgress
    because with multiple instace of BBProgress the original signal handler
    set by TerminalFilter (sigwinch_handle) is lost.
    
    This is a fix for stack trace due to multiple async calls of ProgressBar
    _handle_resize (ioctl to terminal fd), see:
    
    NOTE: Executing SetScene Tasks
    Fatal Python error: Cannot recover from stack overflow.
    
    Current thread 0x00007f70a4793700 (most recent call first):
      File
    "/home/alimonb/repos/poky/bitbake/lib/progressbar/progressbar.py", line
    183 in _handle_resize
      File "/home/alimonb/repos/poky/bitbake/lib/bb/ui/knotty.py", line 58
    in _handle_resize
      File "/home/alimonb/repos/poky/bitbake/lib/bb/ui/knotty.py", line 60
    in _handle_resize
    ...
      File "/home/alimonb/repos/poky/bitbake/lib/bb/ui/knotty.py", line 60
    in _handle_resize
    ...
    Aborted
    
    Signed-off-by: Aníbal Limón <anibal.limon@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

8	7	lib/bb/ui/knotty.py

commit 80f377ebcffd01dbe393ccffb999df4b04552f8a
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2016-10-05 17:08:54 -0700

    toaster: Update tests to reflect front end changes
    
     - Browser test we changed the project heading access to use the class name
     - Update toastergui unit test for additional gotoUrl property
     - On faster browsers we had a race for layer details inputs being
       visible
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: bavery <brian.avery@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

4	0	lib/toaster/tests/browser/test_layerdetails_page.py
1	1	lib/toaster/tests/browser/test_project_page.py
7	1	lib/toaster/toastergui/tests.py

commit e47a1cc160c0f1da060884a8585403b35375fb09
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2016-10-05 17:08:53 -0700

    toaster: Delete notification update front end implementation to design
    
    Update the delete notifications to reflect feedback from design
    review comments.
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: bavery <brian.avery@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/toaster/toastergui/api.py
2	0	lib/toaster/toastergui/static/js/layerdetails.js
1	1	lib/toaster/toastergui/static/js/libtoaster.js
1	1	lib/toaster/toastergui/templates/base.html
5	1	lib/toaster/toastergui/templates/basebuildpage.html

commit cfef79e98b023252cd116d6cc4f90d261d47d13f
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2016-10-05 17:08:52 -0700

    toaster: importlayer Fix layer dependencies button state toggle
    
    Fix regression introduced by switching typeahead library. Make sure we
    enable and disable the add button based on whether the selection event
    has fired or not.
    
    [YOCTO #9936]
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: bavery <brian.avery@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

5	25	lib/toaster/toastergui/static/js/importlayer.js

commit c57f20f9cd7cb4ea4d285291a1e71e5df7152799
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2016-10-05 17:08:51 -0700

    toaster: checksettings Remove confusing startup messages
    
    These "validation" messages are shown regardless as to whether the
    settings are being correctly set or not.
    For the time being remove them.
    
    [YOCTO #9097]
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: bavery <brian.avery@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

0	2	lib/toaster/bldcontrol/management/commands/checksettings.py

commit 11b3b6a7087554d14a2812a9ae463dce740b879e
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2016-10-05 17:08:50 -0700

    toaster: buildinfohelper: Use correct way to get message from LogMessage
    
    Use the correct method to get a message value from the LogMessage object
    rather than constructing it ourselves which is not recommended. This
    causes an exception when the msg contains a '%' such as when there are
    wildcards in file names (something2.%.bbappends)
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: bavery <brian.avery@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	6	lib/bb/ui/buildinfohelper.py

commit 263762a01a6460332ef0cfea5df1e5b81c086df4
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2016-10-05 17:08:49 -0700

    toaster: api / project Cancel any in progress builds before project delete
    
    Before we finally delete any project make sure we send the cancel command to
    any in-progress builds. This ensures that an inaccessible build doesn't block
    up the system and that we don't get errors after deletion.
    
    [YOCTO #10289]
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: bavery <brian.avery@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

34	21	lib/toaster/toastergui/api.py
7	5	lib/toaster/toastergui/templates/project.html

commit e6f12157a210084d1a870832107c910df792f1d9
Author: Scott Rifenbark <srifenbark@gmail.com>
Date:   2016-10-04 09:58:44 -0700

    bitbake-user-manual: Added new section on BB-style functions
    
    Fixes [YOCTO #10364]
    
    Added a new section titled "Bitbake-Style Python Functions
    Versus Python Functions".  This section describes differences
    for the user between the two types of functions.
    
    Also, cleaned up a consistency problem with the terms
    "BitBake style" and "BitBake-style".  I used the latter
    throughout the manual.
    
    Signed-off-by: Scott Rifenbark <srifenbark@gmail.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

96	3	doc/bitbake-user-manual/bitbake-user-manual-metadata.xml

commit 67d5501d5fd6b7ac3ee9ad97962fcf8a41d00cff
Author: Scott Rifenbark <srifenbark@gmail.com>
Date:   2016-09-22 16:27:41 -0700

    bitbake-user-manual: Updated minor wordings.
    
    Fixes [YOCTO #10296]
    
    Applied some minor wording changes per review edits.
    
    Signed-off-by: Scott Rifenbark <srifenbark@gmail.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

4	4	doc/bitbake-user-manual/bitbake-user-manual-metadata.xml

commit 6e6b7e10e04fdb94b59bd2ead3ccb79c899c7458
Author: Scott Rifenbark <srifenbark@gmail.com>
Date:   2016-09-21 15:30:14 -0700

    bitbake-user-manual: Added examples for using overrides with functions.
    
    Fixes [YOCTO #10296]
    
    This adds some bits clarifying you can append and prepend to
    functions.  Added a bit to the introduction paragraph of the
    "Appending and Prepending (Override Style Syntax)" section to
    note that you can do this.  Referenced some new examples.
    
    In the "Shell Functions" section I added an example.  In the
    "BitBake Style Python Functions" section I also added an example.
    
    Signed-off-by: Scott Rifenbark <srifenbark@gmail.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

104	13	doc/bitbake-user-manual/bitbake-user-manual-metadata.xml

commit 5087d856a39fd7be9716d1a2c185fc764f63f2c7
Author: Scott Rifenbark <srifenbark@gmail.com>
Date:   2016-09-22 16:07:13 -0700

    bitbake-user-manual: Fixed grammar from missing word
    
    Fixes [YOCTO #10293]
    
    I omitted the work "quote" and needed to have it there.
    
    Signed-off-by: Scott Rifenbark <srifenbark@gmail.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	doc/bitbake-user-manual/bitbake-user-manual-metadata.xml

commit f8f387de57b46c848e6521a5f6b08742403d4797
Author: bavery <brian.avery@intel.com>
Date:   2016-10-03 16:56:26 -0700

    toaster: add Font Awesome license
    
    Font Awesome fonts are bundled with the Toaster UI and are released
    under the SIL Open Font License 1.1.  This patch adds that information
    to the LICENSE file.
    
    Signed-off-by: bavery <brian.avery@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	0	LICENSE

commit ca5b788280ad4303cc08a376e847cbbeda31970c
Author: Christopher Larson <chris_larson@mentor.com>
Date:   2016-10-04 09:11:23 -0700

    bb.build: in _exec_task, catch errors from TaskStarted
    
    We don't always want a traceback when an exception is raised by the
    TaskStarted event handler. Silently return if we get a SystemExit or
    HandledException, and print the error and return for FuncFailed.
    
    This is done via a separate try/catch block, to avoid firing TaskFailed if all
    the TaskStarted event handlers didn't complete, otherwise the bitbake UIs get
    unhappy.
    
    Signed-off-by: Christopher Larson <chris_larson@mentor.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

24	16	lib/bb/build.py

commit 1e23b1f1a80066223b98e18b163840051ac74944
Author: Joshua Lock <joshua.g.lock@intel.com>
Date:   2016-10-04 11:03:55 +0100

    event: prevent unclosed file warning in print_ui_queue
    
    Use logger.addHandler(), rather than assigning an array of Handlers
    to the loggers handlers property directly, to avoid a warning from
    Python 3 about unclosed files:
    
    $ bitbake
    Nothing to do.  Use 'bitbake world' to build everything, or run 'bitbake --help' for usage information.
    WARNING: /home/joshuagl/Projects/poky/bitbake/lib/bb/event.py:143: ResourceWarning: unclosed file <_io.TextIOWrapper name='/home/joshuagl/Projects/poky/build/tmp/log/cooker/qemux86/20161004094928.log' mode='a' encoding='UTF-8'>
      logger.handlers = [stdout]
    
    Signed-off-by: Joshua Lock <joshua.g.lock@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	3	lib/bb/event.py

commit 100a0aef3d121d950d89c4152f56957628f2f933
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2016-10-05 10:08:59 +0100

    bitbake: Update version to 1.31.2
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	bin/bitbake
1	1	lib/bb/__init__.py

commit a583dc0b296415ec904c081c4de96ceef46732a8
Author: Aníbal Limón <anibal.limon@linux.intel.com>
Date:   2016-10-04 16:15:56 -0500

    bb/event.py: fire_ui_handlers enable threading lock support
    
    In some cases there is a need to fire bb events into multiple
    python threads so locking is needed (writing to a fd/socket).
    
    Adding a helper functions for disable/enable by request to avoid
    overhead.
    
    [YOCTO #10330]
    
    Signed-off-by: Aníbal Limón <anibal.limon@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

21	0	lib/bb/event.py
0	0	lib/toaster/tests/functional/README

commit 81bc8201c475d2b6bef0168573915ad0140f6dad
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2016-09-30 17:22:12 +0100

    data: Fix handling of vardepvalueexclude
    
    The value used for exclusion was always being expanded. This is actually
    a bad idea since in most cases you'd want to exclude an unexpanded
    value and makes it impossible to use the variable as intended.
    
    This adjusts things so the value is not expanded and we can correctly
    remove things from checksums much more easily.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/data.py

commit 603c7c13536d3fa1786270e863688c1d2e511196
Author: Ed Bartosh <ed.bartosh@linux.intel.com>
Date:   2016-09-27 16:16:56 +0100

    toaster: make error message more informative
    
    Error message
     ERROR: Unprocessed MetadataEvent <bb.event.MetadataEvent object at 0x7f750e671a58>
    doesn't give a lot of information about the event. It just prints
    event object, which is always bb.event.MetadataEvent.
    
    Including event type into the error message should make it more
    informative:
     ERROR: Unprocessed MetadataEvent TaskArtifacts
    
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/ui/toasterui.py

commit 114a3fe3f23ef09782c5aa18f425d0d0dbdfdd35
Author: Ed Bartosh <ed.bartosh@linux.intel.com>
Date:   2016-09-27 16:16:55 +0100

    toaster: fix 'Unhandled MetadataEvent' error
    
    New MetadataEvent 'TaskArtifacts' causes this error.
    Processing of this event will hopefully be implemented in future.
    For now it should be enough to just skip it.
    
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

4	0	lib/bb/ui/toasterui.py

commit c8f4ca008bf9396b0ed45d44bfe2220c82a614a9
Author: Ed Bartosh <ed.bartosh@linux.intel.com>
Date:   2016-09-27 16:16:54 +0100

    toaster: fix handling of EnvironmentError
    
    Due to the bug in processing EnvironmentError exception,
    toasterui ignores it. As EnvironmentError is a base for OSError
    and IOError this means that all OSError and IOError exceptions
    were silently ignored.
    
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

6	3	lib/bb/ui/toasterui.py

commit 54565e7ca84d2722a2454e7fa52cda564b28b527
Author: Ed Bartosh <ed.bartosh@linux.intel.com>
Date:   2016-09-27 16:16:53 +0100

    toaster: check if file exist
    
    Buildinfohelper assumes that all files mentioned in
    manifest exist in deploy/ directory, which is not always
    the case. Toaster crashes with OSError trying to
    call os.stat on non-existing file.
    
    Checking if file exists before processing it should
    fix this.
    
    [YOCTO #10185]
    
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	0	lib/bb/ui/buildinfohelper.py

commit 3b0967b160dc6123ef75e6f378221347bd923f1b
Author: Ed Bartosh <ed.bartosh@linux.intel.com>
Date:   2016-09-27 16:16:52 +0100

    toaster: stop modifying OEROOT in toaster script
    
    Setting OEROOT in toaster script makes oe-init-build-env to
    break with error:
      bash: ../bitbake/bin/../../scripts/oe-buildenv-internal: No such file or directory
    This happens because OEROOT contains path relative to build
    directory.
    
    Renamed OEROOT to OE_ROOT and unset it after it's used.
    
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

6	4	bin/toaster

commit 0b8d3ac48b5a0984963d664ff5630e3b02c4ecd1
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2016-09-26 13:59:37 +0300

    toaster: layerdetails Update implementation of delete imported layer
    
    Update the implementation of delete an imported layer so that it is
    consistent with the other delete messages and wording. Also use the new
    libtoaster way of setting a notification that the delete was successful.
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/toaster/toastergui/api.py
5	2	lib/toaster/toastergui/static/js/layerdetails.js
6	3	lib/toaster/toastergui/templates/layerdetails.html

commit 19aee3dd7fa290e12216f9a5cf25a8b2c8d80d20
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2016-09-26 13:59:36 +0300

    toaster: customrecipe Add frontend feature to delete custom image recipe
    
    [YOCTO #8132]
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

32	0	lib/toaster/toastergui/static/js/customrecipe.js
31	4	lib/toaster/toastergui/templates/customrecipe.html

commit 89d3acbc32eadd2acf90030d8b9703ce193dff0c
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2016-09-26 13:59:35 +0300

    toaster: importlayer Convert success import to new notification system
    
    Use the simpler libtoaster method of showing a notification about
    successful import of a layer.
    Also a number of whitespace clean ups.
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

45	14	lib/toaster/toastergui/static/js/importlayer.js
2	64	lib/toaster/toastergui/static/js/projectpage.js

commit 93bca6d877e0b2b5b8ef6b27288c0987a6c899b1
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2016-09-26 13:59:34 +0300

    toaster: Add front end controls for deleting a build
    
    Add front end modal and controls for deleting a build from the build
    dashboard.
    
    Also convert the Actions list to links instead of buttons as per the
    design.
    
    [YOCTO #6238]
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

104	34	lib/toaster/toastergui/templates/basebuildpage.html
1	1	lib/toaster/toastergui/templates/builddashboard.html

commit cdc380c188fd17e55d1d270e5b468d931aa436b2
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2016-09-26 13:59:33 +0300

    toaster: Add backend API for deleting a build
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

30	0	lib/toaster/toastergui/api.py
4	0	lib/toaster/toastergui/urls.py

commit c7f30a673ab973a2500092d2e981a47da05fbf12
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2016-09-26 13:59:32 +0300

    toaster: alerts and modals Avoid modals and alerts overlaying each other
    
    Make sure that when we spawn a modal we clear any notifications and also
    make sure that old notifications are cleared before showing a new one.
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

10	2	lib/toaster/toastergui/static/js/layerDepsModal.js
10	3	lib/toaster/toastergui/static/js/libtoaster.js

commit e1cca28826dfa66d905dd4daf9964564c355207e
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2016-09-26 13:59:31 +0300

    toaster: project page Implement front end feature to delete project
    
    Add confirm modal and api calls to delete a project from the project
    dashboard.
    
    [YOCTO #6238]
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

11	4	lib/toaster/toastergui/api.py
29	1	lib/toaster/toastergui/static/js/projectpage.js
3	3	lib/toaster/toastergui/static/js/projecttopbar.js
6	0	lib/toaster/toastergui/templates/baseprojectpage.html
21	14	lib/toaster/toastergui/templates/project.html
1	1	lib/toaster/toastergui/templates/projecttopbar.html

commit c8db313e907918b0df122006046b157d510ecc1d
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2016-09-26 13:59:30 +0300

    toaster: libtoaster Add a global notification set/show mechanism
    
    We now have a number of places where we show change notifications based
    on an event in a previous page (imported a layer, deleted a build,
    deleted a project etc) and we show these notifications on various pages
    so we add a simple notification utility to libtoaster.
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

26	0	lib/toaster/toastergui/static/js/libtoaster.js

commit 05428514e64ec896faae4055619e149e98bc8f57
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2016-09-26 13:59:29 +0300

    toaster: move MostRecentBuildsView to its own widget
    
    This view is specific to the builds dashboard rather than gernic api so
    like ToasterTable and ToasterTypeAhead we class it as a widget as it has
    a single purpose. Also clean up some flake8 identified issues.
    
    Original author of the code moved in this commit is Elliot Smith.
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

0	108	lib/toaster/toastergui/api.py
2	1	lib/toaster/toastergui/urls.py
125	16	lib/toaster/toastergui/widgets.py

commit 8b01767d6e787cdb09789116ebf57dfb70f521bc
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2016-09-26 13:59:28 +0300

    toaster: Clean up and convert to rest api project edit and get calls
    
    Convert the project xhr calls into proper rest api and port the client
    side calls to use the new API. Fix all the pyflakes identified issues
    and clean up unused fields.
    
    Also remove the api and client side code for changing release on the fly
    as this is no longer supported.
    
    [YOCTO #9519]
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

161	0	lib/toaster/toastergui/api.py
1	2	lib/toaster/toastergui/static/js/libtoaster.js
6	141	lib/toaster/toastergui/static/js/projectpage.js
3	4	lib/toaster/toastergui/static/js/tests/test.js
1	0	lib/toaster/toastergui/templates/base.html
4	0	lib/toaster/toastergui/urls.py
3	128	lib/toaster/toastergui/views.py

commit 0e9a2ff96d138641501874a1cd7aa6cc7e94d727
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2016-09-28 10:35:12 +0100

    runqueue: Ensure worker failure is accounted for in task statistics
    
    If the worker fails to launch, ensure the task is shown as failed rather
    than a confusing "all succeeded" message.
    
    Patch from Juro Bystricky
    
    [YOCTO #10335]
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	0	lib/bb/runqueue.py

commit 4bcf77589312d9936340d8c308006c2fc9baf67c
Author: Juro Bystricky <juro.bystricky@intel.com>
Date:   2016-09-26 13:53:13 -0700

    build.py: fix os.getcwd() exception
    
    When trying to obtain the current directory from a directory
    that does not exist anymore, an exception is raised.
    This patch handles such exception.
    
    [YOCTO #10331]
    
    Signed-off-by: Juro Bystricky <juro.bystricky@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

7	2	lib/bb/build.py

commit 326d18d96faf02675ba34ad3c3a20cd424b39b91
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2016-09-23 21:14:32 +1200

    knotty: ensure progress bar output is accounted for in display
    
    When calculating how many lines we'd printed we weren't properly taking
    the progress bars into account, with the result that sometimes if the
    last line printed on the terminal wrapped to the next line (which is
    possible) we backed up less lines than we should have.
    
    Additionally, we should always print a newline after updating the
    progress bar - there's no need to check if there wasn't output (there
    always will be courtesy of our overridden _need_update()) and we now
    allow the line to wrap so we don't need to check the other condition
    either.
    
    Hopefully this will fix [YOCTO #10046].
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

4	5	lib/bb/ui/knotty.py

commit 6c42025e5dd7761213be3f82f3252a7892d2239d
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2016-09-22 13:54:43 +0100

    knotty: Show task elapsed time
    
    Its often useful to know how long a task has been running for. This patch
    adds that information to the task display, updating every 5s if there
    were no other updates so the user can see how long tasks have been running
    for.
    
    [YOCTO #9737]
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

10	1	lib/bb/ui/knotty.py

commit ca4f5e6d01b5c8cf315f59bc86194d63c0d3d042
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2016-09-21 22:31:57 +0100

    cooker/providers: Only add target to world build if task exists
    
    A "bitbake world -c unpack" currently breaks as not all tasks have an
    unpack task. This change allows addition of world targets only if the
    specified task exists which makes certain commands possible when otherwise
    you just get errors which can't easily be avoided.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	3	lib/bb/cooker.py
4	1	lib/bb/providers.py

commit c3873346c6fa1021a1d63bddd9b898a77c618432
Author: Ross Burton <ross.burton@intel.com>
Date:   2016-09-21 17:31:27 +0100

    fetch2: handle absolute paths in subdir
    
    Currently if you use the subdir parameter in a SRC_URI and pass an absolute path
    then it gets appended to the unpack directory instead of being used directly.
    This is inconvenient as it may be useful to use ${S} when you want to unpack a
    file into the source tree.
    
    Change this behaviour so that absolute paths are used directly instead of being
    appended to the root directory.  To ensure that recipes cannot write files to an
    arbitrary location enforce that the subdir starts with the unpack root.
    
    Signed-off-by: Ross Burton <ross.burton@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

7	1	lib/bb/fetch2/__init__.py
9	0	lib/bb/tests/fetch.py

commit 01e331cd0d612013badfb07df91151907f74903d
Author: Scott Rifenbark <srifenbark@gmail.com>
Date:   2016-09-21 14:03:10 -0700

    bitbake-user-manual: Added information for using single quotes
    
    Fixes [YOCTO #10293]
    
    In the section about setting variables, I added a paragraph that
    explains the use of single quotes when setting a variable.  The
    case covers when you must have the double quote charater as part
    of your variable's value.
    
    Signed-off-by: Scott Rifenbark <srifenbark@gmail.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

15	0	doc/bitbake-user-manual/bitbake-user-manual-metadata.xml

commit ecbcedd74125ef00599f4af384ee303dae8af5b7
Author: Scott Rifenbark <srifenbark@gmail.com>
Date:   2016-09-07 07:52:26 -0700

    bitbake-user-manual: New section on functions you can call from Python
    
    Fixes [YOCTO #10100]
    
    I added a new parent directory named "Functions You Can Call From
    Within Python".  This section contains a couple new sub-sections.
    One is the existing "Functions for Accessing Datastore Variables".
    The other is called "Other Functions", and it is used to point
    or reference some commonly used functions that the user can call
    from within Python.
    
    Signed-off-by: Scott Rifenbark <srifenbark@gmail.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

120	92	doc/bitbake-user-manual/bitbake-user-manual-metadata.xml

commit 63966ada459d44d3dc7817ad2a026a22e8f6700f
Author: Christopher Larson <chris_larson@mentor.com>
Date:   2016-09-16 13:05:11 -0700

    bb.build: in _exec_task, catch BBHandledException
    
    We don't want a traceback for this exception, we need to catch it, fire
    TaskFailed, and return failure.
    
    Signed-off-by: Christopher Larson <chris_larson@mentor.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	0	lib/bb/build.py

commit ba566b46d530b495f12f3a74f76434717b22a020
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2016-09-20 16:25:49 +0100

    runqueue: Handle missing sstate dependencies better
    
    If you "bitbake glibc-locale" then delete the libpcre-native sstate
    and "bitbake glibc-locale -C package_write_rpm", it will fail with
    rpmbuild missing the libprce library.
    
    The reason is that libpcre-native fails to install from sstate (since
    it isn't present) but doesn't get built and hence rpm-native tries to
    run without its dependencies.
    
    The simplest fix is not to add "covered" tasks which have failed to
    install sstate. I can't help feeling there is more to this issue but
    this does fix the current problem and shouldn't have adverse affects.
    It is an unusual situation to have missing dependencies in sstate since
    they're usually all present or not at all.
    
    I've taken the opportunity to remove some old cruft from when we had
    numeric task ids, the code can be simpler now.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

4	5	lib/bb/runqueue.py

commit 3dfea5214d4bd006e26630e5024774ecb84ea527
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2016-09-19 18:44:20 -0700

    toaster: buildinfohelper local layer don't construct path using git info
    
    When the layer is local source don't try and work out the location of
    the layer by using the git information (getGitCloneDirectory)
    
    [YOCTO #10199]
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: bavery <brian.avery@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

5	3	lib/bb/ui/buildinfohelper.py

commit 031cb194aaa1b6cc970fed3fa0d0dbd3ebac163f
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2016-09-18 19:37:53 -0700

    toaster: Add tests to detect if we have missing db migrations
    
    Based on the same test as found in patchwork by Damien Lespiau
    https://github.com/dlespiau/patchwork/blob/master/patchwork/tests/test_db.py
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: bavery <brian.avery@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

0	0	lib/toaster/tests/db/__init__.py
55	0	lib/toaster/tests/db/test_db.py

commit faa88272d656640c039572c5c8f3e6c56535b6f7
Author: Ed Bartosh <ed.bartosh@linux.intel.com>
Date:   2016-09-16 17:22:35 +0100

    toaster: unlock BuildEnvirnoment when build is done
    
    There is no need to lock build environment before changing
    build status as this operation is very fast. However, there
    is a need to unlock it after changing build status.
    
    Explicitly unlocked BuildEnvironment after build reaches
    final status SUCCEEDED, FAILED or CANCELLED. This should
    allow runbuilds process to pickup next build faster.
    
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

5	3	lib/bb/ui/buildinfohelper.py

commit 49731a1a2b2b63c1a897d2e33bca4968524e8710
Author: Ed Bartosh <ed.bartosh@linux.intel.com>
Date:   2016-09-16 17:22:34 +0100

    runbuilds: code cleanup - remove unused imports
    
    Fixed pylint warning:  W0611(unused-import): Unused import
    
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	5	lib/toaster/bldcontrol/management/commands/runbuilds.py

commit 0eecd660e374a4dbcefe4c59f4c8654bf3a0e937
Author: Ed Bartosh <ed.bartosh@linux.intel.com>
Date:   2016-09-16 17:22:33 +0100

    runbuilds: code cleanup - whitespaces, long lines
    
    Fixed following pylint warnings:
     C0330(bad-continuation): Wrong hanging indentation before block.
     C0326(bad-whitespace): No space allowed around keyword argument assignment
     C0326(bad-whitespace): Exactly one space required before assignment
     C0301(line-too-long): Line too long
    
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

15	19	lib/toaster/bldcontrol/management/commands/runbuilds.py

commit 6b9f8f6bb51d1aa2ca4effc34e076e331d0cb8d1
Author: Ed Bartosh <ed.bartosh@linux.intel.com>
Date:   2016-09-16 17:22:32 +0100

    runbuilds: process builds on start
    
    If Toaster is stopped incorrectly there could be some
    build requests and builds in incorrect state left from the previous run.
    Running main processing function on start should take care of those.
    
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	0	lib/toaster/bldcontrol/management/commands/runbuilds.py

commit 62d598cc5aa01d23f1e9284e9e926bd55b1d1878
Author: Ed Bartosh <ed.bartosh@linux.intel.com>
Date:   2016-09-16 17:22:31 +0100

    runbuilds: process builds on SIGUSR1
    
    Run main processing function 'runbuild' only if SIGUSR1 is
    received. This signal is sent by Toaster when build status
    is changed (either started, cancelled or finished).
    
    This should stop continuous database polling as run_builds function
    will be called only when needed, i.e. after build status is changed.
    
    [YOCTO #8918]
    
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

4	2	lib/toaster/bldcontrol/management/commands/runbuilds.py

commit fe08f0fa4b328908e73695ebbceca87bc86a49f9
Author: Ed Bartosh <ed.bartosh@linux.intel.com>
Date:   2016-09-16 17:22:30 +0100

    toaster: notify runbuilds when build status changes
    
    Called signal_runbuilds API when build is scheduled, cancelled or
    finished to notify runbuilds process about builds status change.
    
    [YOCTO #8918]
    
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

4	0	lib/bb/ui/buildinfohelper.py
2	0	lib/toaster/orm/models.py

commit 62955224a6d99e9f581d2bef924058070bfa4c43
Author: Ed Bartosh <ed.bartosh@linux.intel.com>
Date:   2016-09-16 17:22:29 +0100

    toaster: implement signal_runbuilds function
    
    This function reads pid of runbuilds process from
    BUILDDIR/.runbuilds.pid and sends SIGUSR1 to it. signal_runbuilds
    function will be used in Toaster code to notify runbuilds when
    build is scheduled, finished or cancelled.
    
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

7	1	lib/toaster/orm/models.py

commit 7e9a89e3fde5e71cb859799635974ec41790c44d
Author: Ed Bartosh <ed.bartosh@linux.intel.com>
Date:   2016-09-16 17:22:28 +0100

    toaster: fix checking of repository url
    
    Toaster checks gir repository url is the same as locally cloned before
    checking it out to existing local clone. This check can be skipped if
    commit is 'HEAD' as in this case repository is not hard reset to
    commit, so the local clone won't be changed.
    
    [YOCTO #10163]
    
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/toaster/bldcontrol/localhostbecontroller.py

commit 51ca5193a5674b27d816140b0254f485912177a2
Author: Mark Hatle <mark.hatle@windriver.com>
Date:   2016-09-15 15:57:21 -0500

    cookerdata.py: Catch BBHandledException, preventing a backtrace in an event
    
    The event handling 'Exception' was catching and triggering a backtrace.  This
    trace was obscuring any errors from an event handler that had raised the
    BBHandledException, which should indicate do not print additional information.
    
    Signed-off-by: Mark Hatle <mark.hatle@windriver.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/cookerdata.py

commit 20cdc3d609f8aea992f97c3db336574d3a549973
Author: Joe Slater <jslater@windriver.com>
Date:   2016-09-14 10:29:52 -0700

    cooker.py: add LAYERRECOMMENDS processing
    
    Add recommended layers to collection_depends[] so that dynamic
    priority assignment will work for both depends and recommends.
    
    Recommended layers do not cause an error or warning
    if they are not in the collection list, but debug messages
    are output for level 3 and above.
    
    explode_dep_versions2 returns a dictionary, so we
    change the variable deplist to depDict.  The dictionary
    values are lists which are either empty or contain only one
    version specification.
    
    Signed-off-by: Joe Slater <jslater@windriver.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

34	3	lib/bb/cooker.py

commit e2b5dc3732781dc933c6bb10482926335720d110
Author: Belen Barros Pena <belen.barros.pena@linux.intel.com>
Date:   2016-09-18 19:33:15 -0700

    toaster: Remove duplicate layer information
    
    In the custom recipe details page, the layer information is displayed
    twice in the right hand column. Remove one of the layer entries, since
    showing the layer information once should be enough.
    
    [YOCTO #10037]
    
    Signed-off-by: Belen Barros Pena <belen.barros.pena@linux.intel.com>
    Signed-off-by: bavery <brian.avery@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

0	2	lib/toaster/toastergui/templates/customrecipe.html

commit f236d9ca28e45a270f50bb3edcd466b1bc8d2960
Author: Belen Barros Pena <belen.barros.pena@linux.intel.com>
Date:   2016-09-18 19:33:14 -0700

    toaster: Indicate active navigation element
    
    The left navigation in the build history pages is not showing the active
    item when you navigate directly to the errors or warnings information in
    the build summary. Add a special case to make sure the "build summary"
    item is highlighted.
    
    [YOCTO #9864]
    
    Signed-off-by: Belen Barros Pena <belen.barros.pena@linux.intel.com>
    Signed-off-by: bavery <brian.avery@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

5	2	lib/toaster/toastergui/templates/basebuildpage.html

commit a75e70bbc9081f77f1e4aeeee8222b06112e4406
Author: Belen Barros Pena <belen.barros.pena@linux.intel.com>
Date:   2016-09-18 19:33:13 -0700

    toaster: Fix links to tasks with specific outcome
    
    The build dashboard provides a count of tasks that were executed and not
    executed, and of tasks that failed (if any). The number is a link to the
    list of tasks.
    
    Fix the links so that they filter the tasks table by the selected
    criteria (executed, not executed or failed).
    
    [YOCTO #9832]
    
    Signed-off-by: Belen Barros Pena <belen.barros.pena@linux.intel.com>
    Signed-off-by: bavery <brian.avery@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	3	lib/toaster/toastergui/templates/builddashboard.html

commit a1d6f6425cd9ef9e07344869817517172afd6e27
Author: Ross Burton <ross.burton@intel.com>
Date:   2016-09-16 12:32:27 +0100

    uihelper: use elif instead of repeated if
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

5	6	lib/bb/ui/uihelper.py

commit b7faf1af3bd3110fba347fbe6e432fc4ee66590a
Author: Ed Bartosh <ed.bartosh@linux.intel.com>
Date:   2016-09-15 11:26:28 +0300

    cooker: check if target contains task
    
    Task name was incorrectly added to the targets that already
    contained :task suffix and fired with BuildInit event. This
    caused Toaster to create incorrect Target objects and show
    them in UI.
    
    [YOCTO #10221]
    
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	1	lib/bb/cooker.py

commit 07a03a1290fd206df2b40ffc28381b5b3c10ba4a
Author: Markus Lehtonen <markus.lehtonen@linux.intel.com>
Date:   2016-09-15 14:20:50 +0300

    cookerdata: allow multiple passes of config re-parsing
    
    [YOCTO #10188]
    
    Signed-off-by: Markus Lehtonen <markus.lehtonen@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

8	1	lib/bb/cookerdata.py

commit ec1c951a4ee0c33acdde29e578f79ad719a34aca
Author: Markus Lehtonen <markus.lehtonen@linux.intel.com>
Date:   2016-09-15 14:20:49 +0300

    cookerdata: fire ConfigParsed event after re-parse
    
    [YOCTO #10188]
    
    Signed-off-by: Markus Lehtonen <markus.lehtonen@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	0	lib/bb/cookerdata.py

commit 3c762873bb8dc8a3cf89b26579a38d58f6731e04
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2016-09-16 14:35:57 +0100

    Add missing file from 'toaster: Allow git information to be null for BRLayer'
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

29	0	lib/toaster/bldcontrol/migrations/0007_brlayers_optional_gitinfo.py

commit 5bf874673d75b5f4ff2b34f0ab8502558ee84d00
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2016-09-14 22:29:43 +0100

    build: Allow dirs/cleandirs to work for empty functions
    
    Users are surprised when dirs/cleandirs aren't acted upon for
    empty functions. This reorders the code slightly so that those
    flags are acted upon for empty functions as there are cases where
    this is expected.
    
    [YOCTO #10256]
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

7	6	lib/bb/build.py

commit 8e6a893cb7f13ea14051fc40c6c9baf41aa47fee
Author: Ulf Magnusson <ulfalizer@gmail.com>
Date:   2016-09-13 00:40:37 +0200

    bitbake: fetch2: Make SRCREV_FORMAT name substitution safer
    
    The implementation of SRCREV_FORMAT has at least two issues:
    
     1. Given two names "foo" and "foobar" and SRCREV_FORMAT = "foo_foobar",
        "foo" might currently get substituted twice, and "foobar" not at
        all.
    
     2. If the revision substitued for some name happens to contain another
        name as a substring, then that substring might incorrectly get
        replaced.
    
    Fix both issues by sorting the names with the longest ones first and
    replacing all names at once with a regular expression. This was inspired
    by
    http://stackoverflow.com/questions/6116978/python-replace-multiple-strings.
    
    Signed-off-by: Ulf Magnusson <ulfalizer@gmail.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

11	1	lib/bb/fetch2/__init__.py

commit b4705c80add1f618c11a9223cdd9578d763b50ec
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2016-09-13 14:11:41 +1200

    fetch2/npm: don't download same URL multiple times
    
    If we've already fetched a particular URL then we do not need to do so
    again within in the same operation. Maintain an internal list of fetched
    URLs to avoid doing that.
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

8	4	lib/bb/fetch2/npm.py

commit 56ac0d4c7a5f47aeb707b15a0c305d9f73aae945
Author: Ed Bartosh <ed.bartosh@linux.intel.com>
Date:   2016-09-08 14:02:33 +0300

    event.py: output errors and warnings to stderr
    
    All logging messages are printed on stdout when processing
    UI event queue. This makes it impossible to distinguish between
    errors and normal bitbake output. Output to stderror or stdout
    depending on log level should fix this.
    
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

10	3	lib/bb/event.py

commit 57912de63fa83550c0ae658eb99b76e9cc91a8d1
Author: Ed Bartosh <ed.bartosh@linux.intel.com>
Date:   2016-09-05 14:27:35 +0300

    cooker: record events on cooker exit
    
    Bitbake collects all events in special event queue when called with
    -w option. However, it starts to write events to the eventlog only
    after BuildStarted event is received. In some cases this event is
    not received at all, e.g. when bitbake is run with --parse-only
    command line option.
    
    It makes sense to write all collected events when CookerExit event
    received to make sure all events are written into the eventlog even
    if BuildStarted event is not fired.
    
    [YOCTO #10145]
    
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/cooker.py

commit 0f47b17fe88dc660648d94b2d8d8286d87ae6295
Author: Ed Bartosh <ed.bartosh@linux.intel.com>
Date:   2016-09-05 15:29:32 +0100

    toaster: don't kill all runserver processes
    
    Toaster script kills runserver process 2 ways:
     - sending signal to pid from .toastermain.pid.
     - sending signal to pids found by grepping ps output:
           ps fux | grep "python.*manage.py runserver"
    
    Second approach is redundant and harmfull as it kills all django
    development server running on the machine.
    
    [YOCTO #7973]
    
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

0	3	bin/toaster

commit 16f3cd3535c9eec71ea7594c1e3a83db00dba7ca
Author: Ed Bartosh <ed.bartosh@linux.intel.com>
Date:   2016-09-05 15:29:31 +0100

    toaster: remove handling of .toasterui.pid
    
    This file is not created anywhere, but handled in toaster
    script code.
    
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

0	4	bin/toaster

commit 0dab45e9815e8939219900264e86f569c714b7c6
Author: Ed Bartosh <ed.bartosh@linux.intel.com>
Date:   2016-09-05 15:29:30 +0100

    toaster: don't kill toaster on start
    
    There is no point of trying to kill django development server
    when toaster starts because 'manage.py checksocket' command is already
    used in the script code to check if development server port is occupied.
    
    Even if Toaster is listening on another port, killing previous instance
    looks quite implicit and doesn't solve anything as there are other
    processes that might be still running.
    
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

0	8	bin/toaster

commit 46db3279cb81b3ca6ce047204aee620f5ee51220
Author: Belen Barros Pena <belen.barros.pena@linux.intel.com>
Date:   2016-09-05 15:29:29 +0100

    toaster: orm Update IMAGE_FSTYPES values
    
    This patch fixes a typo in one of the IMAGE_FSTYPES values listed in
    Toaster. It also updates the hardcoded list of values to match the
    latest list in meta/classes/image_types.bbclass
    
    [YOCTO #9447]
    
    Signed-off-by: Belen Barros Pena <belen.barros.pena@linux.intel.com>
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

4	3	lib/toaster/orm/models.py

commit 59561d652af91c2099b735084f0e44275d68e637
Author: David Reyna <David.Reyna@windriver.com>
Date:   2016-09-05 15:29:28 +0100

    toaster: keep layer name in variable history path
    
    When converting variable history file names to relative
    paths, keep the layer directory's name so that the user
    can distinguish between conf files with the same name.
    
    [YOCTO #8188]
    
    Signed-off-by: David Reyna <david.reyna@windriver.com>
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	1	lib/bb/ui/buildinfohelper.py

commit 146f6f95a8753308edb31e952d7c440c8de11870
Author: Belen Barros Pena <belen.barros.pena@linux.intel.com>
Date:   2016-09-05 15:29:27 +0100

    toaster: Allow forward slash in variable names
    
    Add forward slash to the list of special characters allowed in variable
    names. Also update the list of allowed special characters in the error
    messages.
    
    [YOCTO #9611]
    
    Signed-off-by: Belen Barros Pena <belen.barros.pena@linux.intel.com>
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	0	lib/toaster/toastergui/static/css/default.css
3	3	lib/toaster/toastergui/templates/projectconf.html

commit bd08abe7c1f5fc96ee73c20b2c9d10a591a5f69c
Author: Belen Barros Pena <belen.barros.pena@linux.intel.com>
Date:   2016-09-05 15:29:26 +0100

    toaster: layer details Fix "edit" form interaction
    
    Make sure the layer information disappears when the edit form shows, and
    that the layer details come back when you click the 'cancel' button in
    the edit form.
    
    Signed-off-by: Belen Barros Pena <belen.barros.pena@linux.intel.com>
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

4	4	lib/toaster/toastergui/static/js/layerdetails.js
2	3	lib/toaster/toastergui/templates/layerdetails.html

commit e5e51ca1394bc392eba99742c59d86b8e5fd5623
Author: Belen Barros Pena <belen.barros.pena@linux.intel.com>
Date:   2016-09-05 15:29:25 +0100

    toaster: import layer Layout fixes
    
    The layout of the import layer form was looking a bit awkward. This
    commit tidies things up a bit.
    
    Signed-off-by: Belen Barros Pena <belen.barros.pena@linux.intel.com>
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	0	lib/toaster/toastergui/static/css/default.css
7	5	lib/toaster/toastergui/templates/importlayer.html

commit ce9a5f885f43bebf39d191309f48da83b31e60e0
Author: Belen Barros Pena <belen.barros.pena@linux.intel.com>
Date:   2016-09-05 15:29:24 +0100

    toaster: layer details Layout fixes
    
    The layout of the layer details page was looking a bit awkward. This
    commit tidies things up.
    
    Signed-off-by: Belen Barros Pena <belen.barros.pena@linux.intel.com>
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

7	1	lib/toaster/toastergui/static/css/default.css
1	1	lib/toaster/toastergui/templates/layerdetails.html

commit 829c9bcb58f961c644e24b24265e0ef45f0fec57
Author: Belen Barros Pena <belen.barros.pena@linux.intel.com>
Date:   2016-09-05 15:29:23 +0100

    toaster: configuration Provide machine help text
    
    When you change the machine from the project configuration page, you get
    some useful suggestions as you start typing a machine name. However, the
    suggestions only include machines provided by the layers added to your
    project. This is not necessarily clear from the design (yes, it should
    be improved), which means you might be looking for a machine, not see it
    in the suggestions, and assume the machine is not supported by
    OpenEmbedded.
    
    Since we are in no position to change the design of this page right now,
    add some explanatory help text to address the situation.
    
    [YOCTO #8034]
    
    Signed-off-by: Belen Barros Pena <belen.barros.pena@linux.intel.com>
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	4	lib/toaster/toastergui/templates/project.html

commit 249dd31fcaabbec32fdee30b0c84be90d4f92430
Author: Belen Barros Pena <belen.barros.pena@linux.intel.com>
Date:   2016-09-05 15:29:22 +0100

    toaster: tasks Remove recipe version from defaults
    
    The 'Recipe version' column should not be part of the set of columns
    shown by default in the tasks table. Set the hidden property for that
    column to 'True' so that it doesn't show when you load that table
    for the first time.
    
    [YOCTO #10179]
    
    Signed-off-by: Belen Barros Pena <belen.barros.pena@linux.intel.com>
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	1	lib/toaster/toastergui/buildtables.py

commit 99675c19375c96140bc8ae8f9fc3a1945a77cebb
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2016-09-06 10:57:33 +1200

    lib/bb/utils: edit_metadata() comment tweaks
    
    No functional changes, just make a couple of minor tweaks to the
    comments for edit_metadata():
    
    * There are four elements to be returned by the callback function
    * Add an example return statement for when you don't want to modify the
      value
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	1	lib/bb/utils.py

commit 14c045c6a20993d389b91ae2459d811a1430a7b2
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2016-09-06 10:57:32 +1200

    fetch2/npm: clarify comment
    
    The correct name of the parameter is "version" not "ver" so ensure we
    aren't misleading the user by giving the latter in an example.
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/fetch2/npm.py

commit f7de3f8b5f628dee043fe783148812914ab20813
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2016-09-06 10:57:31 +1200

    fetch2/npm: handle top-level shrinkwrap file
    
    Allow using a top-level shrinkwrap file with one or more npm://
    dependencies, i.e. if the module isn't found at the top level then look
    one level down.
    
    Part of the fix for [YOCTO #9537].
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

9	2	lib/bb/fetch2/npm.py

commit e6a94d2091ec5d42f25102334a8492a731b8dec3
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2016-09-06 10:57:30 +1200

    fetch2/npm: support subdir= parameter
    
    "npmpkg" can be a default, but it should respect the subdir parameter as
    with other FetchMethods. This allows us to have more than one npm://
    entry in SRC_URI without nasty hacks.
    
    Fix required in order to support [YOCTO #9537].
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

6	1	lib/bb/fetch2/npm.py

commit 1435b49ea7d0f9d4cc4a665fb2aa83d1eea7900f
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2016-09-06 10:57:29 +1200

    fetch2/npm: fix broken fetches if more than one npm URL fetched
    
    You cannot set a URL-specific value in an object-level variable on
    the FetchMethod in urldata_init() or the result is the value specific to
    the last URL will be the one that gets set. This prevented fetching more
    than one npm:// URL correctly - the other tarballs would not download to
    the correct location and do_unpack failed to find them as a result.
    
    Fix required in order to support [YOCTO #9537].
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	3	lib/bb/fetch2/npm.py

commit 0ddaf725e5a0675b252b7f80b1706370e478175b
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2016-09-06 10:57:28 +1200

    fetch2/npm: explicitly specify workdir
    
    We were downloading into the current directory here, which is fine if
    that current directory can be expected to be the right place - but
    that's not true when called from recipetool within OE. We should
    explicitly specify the directory to run the command in and then there
    won't be a problem.
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	1	lib/bb/fetch2/npm.py

commit dc756510a95f88b192352be6fcd1d5d77852c348
Author: Christopher Larson <chris_larson@mentor.com>
Date:   2016-08-31 12:57:08 -0700

    bb.fetch2.svn: correctly pass workdir when fetching
    
    The ud.pkgdir argument was being passed as the 'quiet' argument to
    runfetchcmd, not the 'workdir' argument, resulting in fetching the svn module
    into the root of DL_DIR, not where it belongs.
    
    Cc: Matt Madison <matt@madison.systems>
    Signed-off-by: Christopher Larson <chris_larson@mentor.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/fetch2/svn.py

commit cb4f8f6efa28ef2b13bc738a0118b876baa15b3e
Author: Mariano Lopez <mariano.lopez@linux.intel.com>
Date:   2016-08-23 07:06:11 +0000

    cooker.py: Catch when stdout doesn't have a file descriptor
    
    Currently, there is a check to remove the TOSTOP attribute from
    a tty to avoid hangs. It assumes that sys.stdout will have a
    file descriptor and this is not always true, some IO classes
    will throw exceptions when trying to get its file descriptor.
    
    This will add a check for such cases and avoid throwing an
    exception.
    
    [YOCTO #10162]
    
    Signed-off-by: Mariano Lopez <mariano.lopez@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

12	9	lib/bb/cooker.py

commit 8b7180332691a41a013e07a52b26018402141b6a
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2016-08-22 16:42:36 +0100

    toaster: localhostbecontroller Remove git assumption
    
    We don't need to force everyone to use git for the method in which
    openembedded-core is downloaded. For instance it could have been
    downloaded and extracted as a tarball.
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

10	4	lib/toaster/bldcontrol/localhostbecontroller.py

commit a15f61f3ef5a87b87121457f76592c87f0ea5d7f
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2016-08-22 16:42:35 +0100

    toaster: Allow git information to be null for BRLayer
    
    We no longer only deal with layers that have their source in a gir
    repository, we also allow for local directories too so update the
    BRLayer model to reflect this.
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

6	5	lib/toaster/bldcontrol/models.py

commit acdfafdd753abe38a313c42e3a9d6211338b4e73
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2016-08-22 16:42:34 +0100

    toaster: tests Add selenium test layer source switching layer details page
    
    Add selenium tests for the new layer source switching functionality on
    the layer details page. Edits the values for git repository and saves
    and then edits the details for directory information and saves.
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

28	4	lib/toaster/tests/browser/test_layerdetails_page.py

commit 37c2b4f105d7334cdd83d9675af787f4327e7fe7
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2016-08-22 16:42:33 +0100

    toaster: Move Custom image recipe rest api to api file
    
    We now have a dedicated file for the rest API so move and rework for
    class based views. Also clean up all flake8 identified warnings.
    
    Remove unused imports from toastergui views.
    
    The original work for this API was done by Elliot Smith, Ed Bartosh,
    Michael Wood and Dave Lerner
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

459	10	lib/toaster/toastergui/api.py
12	6	lib/toaster/toastergui/urls.py
11	436	lib/toaster/toastergui/views.py

commit d57a9124650e5367919668dfccf6aad4962a77f1
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2016-08-22 16:42:32 +0100

    toaster: Fix oe-core fixture
    
    Due to a copy paste error we managed to get some of the wrong
    information in the oe fixture that provides a suggested default settings
    for Toaster. This meant it tested correctly when it shouldn't have.
    Fix:
     - The use of local bitbake
     - An incorrect call to realpath which didn't include its parent module.
     - The field used for the local_dir of an existing openembedded-core
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

6	4	lib/toaster/bldcontrol/localhostbecontroller.py
6	4	lib/toaster/bldcontrol/management/commands/checksettings.py
9	7	lib/toaster/orm/fixtures/oe-core.xml
6	0	lib/toaster/orm/fixtures/poky.xml
7	10	lib/toaster/orm/fixtures/settings.xml

commit 092ef32e695b43c3337b7116722c4c6eba981396
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2016-08-22 16:42:31 +0100

    toaster: layerdetails clean ups after integrating local layer changes
    
    A few clean ups for the work done to integrate editing imported local layers
    into the layer detail page.
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

4	2	lib/toaster/toastergui/api.py
2	0	lib/toaster/toastergui/static/css/default.css
39	47	lib/toaster/toastergui/static/js/layerdetails.js
27	32	lib/toaster/toastergui/templates/layerdetails.html

commit 2b5728fc5c0e578560506697f271605e80b5918f
Author: Sujith H <sujith.h@gmail.com>
Date:   2016-08-22 16:42:30 +0100

    toaster: update api to include local_source_dir
    
    Add an additional argument to the api to handle
    local_source_dir which is the value user passes
    to import non-git layers.
    
    [YOCTO #9913]
    
    Signed-off-by: Sujith H <sujith.h@gmail.com>
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	1	lib/toaster/toastergui/api.py

commit 5c20834691f1b65cfc4a0c4ec12958f86b34bbeb
Author: Sujith H <sujith.h@gmail.com>
Date:   2016-08-22 16:42:29 +0100

    toaster: layerdetails js changes for switching layers
    
    This patch helps to implement the switching of layers
    between directories and git repositories. Specifically
    selection of git and local directory. Also enabling
    form to view the selection.
    
    [YOCTO #9913]
    
    Signed-off-by: Sujith H <sujith.h@gmail.com>
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

98	0	lib/toaster/toastergui/static/js/layerdetails.js

commit 70319eb690a056b41b7e91d79560067edd623ee1
Author: Sujith H <sujith.h@gmail.com>
Date:   2016-08-22 16:42:28 +0100

    toaster: add switch of git and not-git layers imported
    
    This patch updates the layerdetails html file to
    add the feature of switching imported layers between
    directories and git repositories.
    
    [YOCTO #9913]
    
    Signed-off-by: Sujith H <sujith.h@gmail.com>
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

101	24	lib/toaster/toastergui/templates/layerdetails.html

commit 927ec3524625ac731326b3c1c1361c2a4d2bd9e1
Author: Elliot Smith <elliot.smith@intel.com>
Date:   2016-08-23 14:18:26 +0300

    buildinfohelper: discover kernel artifacts correctly
    
    Because some image_license.manifest files contain multiple
    FILES lines, and because those lines can sometimes not contain
    a list of files (i.e. they look like "FILES:\n"), we were
    resetting the list of kernel artifacts when we hit the second
    "empty" line.
    
    Fix by ignoring any FILES line which doesn't list files, and by
    appending any files found in a valid FILES line, rather than
    overwriting the existing list.
    
    [YOCTO #10107]
    
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

7	4	lib/bb/ui/buildinfohelper.py

commit cea8113d14da9e12db80a5b6b5811a47a7dfdeef
Author: Stephano Cetola <stephano.cetola@linux.intel.com>
Date:   2016-08-26 10:41:43 -0700

    wget: allow basic http auth for SSTATE_MIRRORS
    
    If http basic auth creds were added to sstate mirrors like so:
    
    https://foo.com/sstate/PATH;user=foo:bar;downloadfilename=PATH
    
    The sstate mirror check would silently fail with 401 unauthorized.
    This patch allows both the check, and the wget download to succeed by
    checking for user credentials and if present adding the correct
    headers, or wget params as needed.
    
    [ YOCTO #9815 ]
    
    Signed-off-by: Stephano Cetola <stephano.cetola@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

11	0	lib/bb/fetch2/wget.py

commit 107c47c4e6de6a596cf1aeca5c18dbc1c5b44dc4
Author: Markus Lehtonen <markus.lehtonen@linux.intel.com>
Date:   2016-08-30 12:53:30 +0300

    cookerdata/ast: Fail gracefully if event handler function is not found
    
    [YOCTO #10186]
    
    Signed-off-by: Markus Lehtonen <markus.lehtonen@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	0	lib/bb/cookerdata.py
2	0	lib/bb/parse/ast.py

commit a9041fc96a14e718c0c1d1676e705343b9e872d3
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2016-08-31 11:37:53 +0100

    build/runqueue: Add noextra stamp file parameter to fix multiconfig builds
    
    We can't execute the same task for the same package_arch multiple
    times as the current setup has conflicting directories. Since
    these would usually have the same stamp/hash, we want to execute in
    sequence rather than in parallel, so for the purposes of task execution,
    don't consider the "extra-info" on the stamp files. We need to add
    a parameter to the stamp function to achieve this.
    
    This avoids multiple update-rc.d populate_sysroot tasks executing in
    parallel and breaking multiconfig builds.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

5	3	lib/bb/build.py
2	2	lib/bb/runqueue.py

commit d98cc31d6668bc1d6372664593126b5e5132ef2c
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2016-08-31 11:34:23 +0100

    fetch2: Handle multiconfig fetcher issues
    
    We need a separate fetcher cache per multiconfig as the revisions and other
    SRC_URI data can potentially be different. For now, this is the simplest way
    to achieve that and avoids linux-yocto kernel build failures when targeting
    multiple machines for example.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

4	3	lib/bb/fetch2/__init__.py

commit 39780b1ccbd76579db0fc6fb9369c848a3bafa9d
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2016-08-30 14:16:22 +1200

    tinfoil: add a parse_recipe_file function
    
    Parsing a recipe is such a common task for tinfoil-using scripts, and is
    a little awkward to do properly, so add an API function to do it. This
    should also isolate scripts a little from future changes to the internal
    code. The first user of this will be the OpenEmbedded layer index update
    script.
    
    Part of the fix for [YOCTO #10192].
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>

36	0	lib/bb/tinfoil.py

commit 5b3fedfe0822dd7effa4b6d5e96eaf42669a71df
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2016-08-30 20:45:09 +1200

    cache: allow parsing a recipe with a custom config datastore
    
    To accommodate the OpenEmbedded layer index recipe parsing, we have to
    have the ability to pass in a custom config datastore since it
    constructs a synthetic one. To make this possible after the multi-config
    changes, rename the internal _load_bbfile() function to parse_recipe(),
    make it a function at the module level (since it doesn't actually need
    to access any members of the class or instance) and move setting
    __BBMULTICONFIG inside it since other code will expect that to be set.
    
    Part of the fix for [YOCTO #10192].
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>

39	34	lib/bb/cache.py

commit 131e6dc4bbd197774d35d2b266bfb0816f6e6b1e
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2015-08-05 15:47:12 +0100

    bitbake-diffsigs/bitbake-layers: Ensure tinfoil is shut down correctly
    
    We should always shut down tinfoil when we're finished with it, either
    by explicitly calling the shutdown() method or by using it as a
    context manager ("with ...").
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>

3	3	bin/bitbake-diffsigs
28	25	bin/bitbake-layers

commit f59bc6be2b4af1acdcf6a1b184956b5ffd297743
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2015-08-05 15:12:14 +0100

    tinfoil: add context manager functions
    
    Since calling the shutdown() function is highly recommended, make
    tinfoil objects a little easier to deal with by adding context manager
    support - so you can do the following:
    
        with bb.tinfoil.Tinfoil() as tinfoil:
            tinfoil.prepare(True)
            ...
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>

6	0	lib/bb/tinfoil.py

commit b543458dd67d24a228fa2db0ecb4ddd20016a560
Author: Scott Rifenbark <srifenbark@gmail.com>
Date:   2016-09-01 14:01:21 -0700

    bitbake-user-manual: Added "Exporting Variables to the Environment"
    
    Fixes [YOCTO #10196]
    
    Added a new section named "Exporting Variables to the Environment".
    This section provides a dedicated description for how to export
    variables to the shell.
    
    Signed-off-by: Scott Rifenbark <srifenbark@gmail.com>

47	0	doc/bitbake-user-manual/bitbake-user-manual-metadata.xml

commit 7dff6762148bc2ac8f81d89bbe595dfbfdf7b119
Author: Scott Rifenbark <srifenbark@gmail.com>
Date:   2016-08-22 13:07:58 -0700

    bitbake-user-manual: Corrected misspelled STAMPS_DIR
    
    Fixes [YOCTO #10141]
    
    Section on Checksums (Signatures) had this variable referred to as
    STAMP_DIR.
    
    Signed-off-by: Scott Rifenbark <srifenbark@gmail.com>

1	1	doc/bitbake-user-manual/bitbake-user-manual-execution.xml

commit 0ed8975c42718342a104a9764a58816f964ec4ea
Author: Matt Madison <matt@madison.systems>
Date:   2016-08-21 08:02:46 -0700

    fetch2: clean up remaining cwd saves/changes
    
    Now that the fetchers all preserve the current working
    directory, the cwd changes in the try_mirror_url,
    download, and checkstatus methods are no longer needed.
    
    Signed-off-by: Matt Madison <matt@madison.systems>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

0	11	lib/bb/fetch2/__init__.py

commit deab9a30987b225922490ca186c5307c15d45b82
Author: Jonathan Liu <net147@gmail.com>
Date:   2016-08-20 18:58:13 +1000

    siggen: Fix file variable typo in compare_sigfiles
    
    Signed-off-by: Jonathan Liu <net147@gmail.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/siggen.py

commit 6aa78bf3bd1f75728209e2d01faef31cb8887333
Author: Matt Madison <matt@madison.systems>
Date:   2016-08-10 10:08:16 -0700

    fetch2: preserve current working directory
    
    Fix the methods in all fetchers so they don't change
    the current working directory of the calling process, which
    could lead to "changed cwd" warnings from bitbake.
    
    Signed-off-by: Matt Madison <matt@madison.systems>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

11	10	lib/bb/fetch2/__init__.py
4	7	lib/bb/fetch2/bzr.py
2	4	lib/bb/fetch2/clearcase.py
8	7	lib/bb/fetch2/cvs.py
20	25	lib/bb/fetch2/git.py
12	13	lib/bb/fetch2/gitannex.py
10	13	lib/bb/fetch2/gitsm.py
10	18	lib/bb/fetch2/hg.py
7	15	lib/bb/fetch2/npm.py
4	6	lib/bb/fetch2/osc.py
2	4	lib/bb/fetch2/perforce.py
6	7	lib/bb/fetch2/repo.py
5	8	lib/bb/fetch2/svn.py

commit 435c6fb838b9f38c0477bcc2f07c8ce22999132b
Author: Robert Yang <liezhi.yang@windriver.com>
Date:   2016-08-18 01:26:13 -0700

    dump_cache.py: use python3 as interpreter
    
    Fixed:
      File "bitbake/contrib/dump_cache.py", line 39
        print("Error, need one argument!", file=sys.stderr)
    
    Signed-off-by: Robert Yang <liezhi.yang@windriver.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	contrib/dump_cache.py

commit 696693d45f5eff1226866ed79dbfb67161d8cd3f
Author: Martin Jansa <martin.jansa@gmail.com>
Date:   2016-08-18 17:06:29 +0200

    toasterui, knotty: don't print taskid followed by taskstring which are now in most cases identical
    
    * unify the format how the task is described
    * don't show taskid followed by taskstring as the taskstring is
      different only for setscene tasks (by _setscene suffix)
    * the duplicated output was introduced by:
      2c88afb   taskdata/runqueue: Rewrite without use of ID indirection
      as reported and confirmed as a bug here:
      http://lists.openembedded.org/pipermail/openembedded-core/2016-June/123148.html
    * show:
      NOTE: Running task 541 of 548 (/OE/build/oe-core/openembedded-core/meta/recipes-core/zlib/zlib_1.2.8.bb:do_package)
      instead of much longer:
      NOTE: Running task 541 of 548 (ID: /OE/build/oe-core/openembedded-core/meta/recipes-core/zlib/zlib_1.2.8.bb:do_package, /OE/build/oe-core/openembedded-core/meta/recipes-core/zlib/zlib_1.2.8.bb:do_package)
    
      and similarly for failed tasks:
      ERROR: Task (virtual:native:/OE/build/oe-core/openembedded-core/meta/recipes-core/zlib/zlib_1.2.8.bb:do_install) failed with exit code '1'
      instead of much longer:
      ERROR: Task virtual:native:/OE/build/oe-core/openembedded-core/meta/recipes-core/zlib/zlib_1.2.8.bb:do_install (virtual:native:/OE/build/oe-core/openembedded-core/meta/recipes-core/zlib/zlib_1.2.8.bb:do_install) failed with exit code '1'
    
    Signed-off-by: Martin Jansa <Martin.Jansa@gmail.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

6	6	lib/bb/ui/knotty.py
2	2	lib/bb/ui/toasterui.py

commit 63031c0236ace10a9d52b9db9bbb892c1b4bf7db
Author: Markus Lehtonen <markus.lehtonen@linux.intel.com>
Date:   2016-08-18 19:12:02 +0300

    tests: add unit tests for the usehead url parameter
    
    [YOCTO #9351]
    
    Signed-off-by: Markus Lehtonen <markus.lehtonen@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

30	0	lib/bb/tests/fetch.py

commit 2673fac5a9d06de937101e3fb2ddf1e60ff99abf
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2016-08-18 19:12:01 +0300

    git: Allow local repos to use HEAD
    
    Introduce a new 'usehead' url parameter for git repositories. Specifying
    usehead=1 causes bitbake to use whatever commit the repository HEAD is
    pointing to. Usage of usehead=1 is only allowed for local git
    repositories, i.e. it must always be accompanied with protocol=file url
    parameter.
    
    [YOCTO #9351]
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>
    Signed-off-by: Markus Lehtonen <markus.lehtonen@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

15	1	lib/bb/fetch2/git.py

commit ea19972a16f7639f944823d1d8a7728105460136
Author: Markus Lehtonen <markus.lehtonen@linux.intel.com>
Date:   2016-08-18 19:55:54 +0300

    bitbake-selftest: enable bitbake logging to stdout
    
    Now you get the bb logger output for failed tests. This helps debugging
    problems. Also, all stdout/stderr data for successful tests is silenced
    which makes for less cluttered console output.
    
    Signed-off-by: Markus Lehtonen <markus.lehtonen@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

19	1	bin/bitbake-selftest

commit 04132b261df9def3a0cff14c93c29b26ff906e8b
Author: Markus Lehtonen <markus.lehtonen@linux.intel.com>
Date:   2016-08-18 19:55:53 +0300

    bitbake-selftest: introduce BB_TMPDIR_NOCLEAN
    
    Set this env variable to 'yes' to preserve temporary directories used by
    the fetcher tests. Useful for debugging tests.
    
    Signed-off-by: Markus Lehtonen <markus.lehtonen@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	0	bin/bitbake-selftest
4	1	lib/bb/tests/fetch.py

commit 94c63a5b1e731e64eb8efbc09f2ab6a0ce11df05
Author: Markus Lehtonen <markus.lehtonen@linux.intel.com>
Date:   2016-08-18 19:55:52 +0300

    bitbake-selftest: add help text for env variable(s)
    
    Signed-off-by: Markus Lehtonen <markus.lehtonen@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

13	1	bin/bitbake-selftest

commit 8c513580b9406b031674f799117eae7410f8e01c
Author: Markus Lehtonen <markus.lehtonen@linux.intel.com>
Date:   2016-08-18 19:55:51 +0300

    bitbake-selftest: utilize unittest.main better
    
    This simplifies the script, and, gives new features. It is now possible
    to run single test functions, for example. This is nice when writing new
    test cases.
    
    Signed-off-by: Markus Lehtonen <markus.lehtonen@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

8	22	bin/bitbake-selftest

commit 3ff1c66e6f336e5de7dcbc983a97fcd19ddc6b81
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2016-08-18 10:05:26 +0100

    bitbake: Update version to 1.31.1
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	bin/bitbake
1	1	lib/bb/__init__.py

commit 5287991691578825c847bac2368e9b51c0ede3f0
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2016-08-16 17:47:06 +0100

    bitbake: Initial multi-config support
    
    This patch adds the notion of supporting multiple configurations within
    a single build. To enable it, set a line in local.conf like:
    
    BBMULTICONFIG = "configA configB configC"
    
    This would tell bitbake that before it parses the base configuration,
    it should load conf/configA.conf and so on for each different
    configuration. These would contain lines like:
    
    MACHINE = "A"
    
    or other variables which can be set which can be built in the same
    build directory (or change TMPDIR not to conflict).
    
    One downside I've already discovered is that if we want to inherit this
    file right at the start of parsing, the only place you can put the
    configurations is in "cwd", since BBPATH isn't constructed until the
    layers are parsed and therefore using it as a preconf file isn't
    possible unless its located there.
    
    Execution of these targets takes the form "bitbake
    multiconfig:configA:core-image-minimal core-image-sato" so similar to
    our virtclass approach for native/nativesdk/multilib using BBCLASSEXTEND.
    
    Implementation wise, the implication is that instead of tasks being
    uniquely referenced with "recipename/fn:task" it now needs to be
    "configuration:recipename:task".
    
    We already started using "virtual" filenames for recipes when we
    implemented BBCLASSEXTEND and this patch adds a new prefix to
    these, "multiconfig:<configname>:" and hence avoid changes to a large
    part of the codebase thanks to this. databuilder has an internal array
    of data stores and uses the right one depending on the supplied virtual
    filename.
    
    That trick allows us to use the existing parsing code including the
    multithreading mostly unchanged as well as most of the cache code.
    
    For recipecache, we end up with a dict of these accessed by
    multiconfig (mc). taskdata and runqueue can only cope with one recipecache
    so for taskdata, we pass in each recipecache and have it compute the result
    and end up with an array of taskdatas. We can only have one runqueue so there
    extensive changes there.
    
    This initial implementation has some drawbacks:
    
    a) There are no inter-multi-configuration dependencies as yet
    
    b) There are no sstate optimisations. This means if the build uses the
    same object twice in say two different TMPDIRs, it will either load from
    an existing sstate cache at the start or build it twice. We can then in
    due course look at ways in which it would only build it once and then
    reuse it. This will likely need significant changes to the way sstate
    currently works to make that possible.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

4	2	bin/bitbake-worker
42	11	lib/bb/cache.py
169	125	lib/bb/cooker.py
34	25	lib/bb/cookerdata.py
264	210	lib/bb/runqueue.py
9	6	lib/bb/siggen.py
2	2	lib/bb/tinfoil.py
1	1	lib/bblayers/action.py
6	6	lib/bblayers/query.py

commit 49502685df3e616023df352823156381b1f79cd3
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2016-08-11 15:37:00 +1200

    siggen: properly close files rather than opening them inline
    
    If you don't do this, with Python 3 you get a warning on exit under some
    circumstances.
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

9	6	lib/bb/siggen.py

commit bedbd46ece8d1285b5cd2ea07dc64b4875b479aa
Author: Jérémy Rosen <jeremy.rosen@smile.fr>
Date:   2016-08-16 14:04:47 +0200

    ast/ConfHandler: Add a syntax to clear variable
    
    unset VAR
    will clear variable VAR
    unset VAR[flag]
    will clear flag "flag" from var VAR
    
    Signed-off-by: Jérémy Rosen <jeremy.rosen@openwide.fr>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

17	0	doc/bitbake-user-manual/bitbake-user-manual-metadata.xml
33	0	lib/bb/parse/ast.py
12	0	lib/bb/parse/parse_py/ConfHandler.py
17	0	lib/bb/tests/parse.py

commit fef18b445c0cb6b266cd939b9c78d7cbce38663f
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2016-08-15 18:03:29 +0100

    cache: Build datastores from databuilder object
    
    Rather than passing in a datastore to build on top of, use the data builder
    object in the cache and base the parsed recipe from this. This turns
    things into proper objects building from one another rather than messy
    mixes of static and class functions.
    
    This sets things up so we can support parsing and building multiple
    configurations.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

13	10	bin/bitbake-worker
27	19	lib/bb/cache.py
11	12	lib/bb/cooker.py

commit 120b64ea6a0c0ecae7af0fd15d989934fa4f1c36
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2016-08-15 18:02:41 +0100

    cache: Split Cache() into a NoCache() parent object
    
    There are some cases we want to parse recipes without any cache
    setup or involvement. Split out the standalone functions into
    a NoCache variant which the Cache is based upon, setting the scene
    for further cleanup and restructuring.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

57	52	lib/bb/cache.py

commit 7da062956bf40c1b9ac1aaee222a13f40bba9b19
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2016-08-15 18:01:54 +0100

    cache/cooker: Pass databuilder into bb.cache.Cache()
    
    Rather that the current mix of static and class methods, refactor
    so that the cache has the databuilder object internally. This becomes
    useful for the following patches for multi config support.
    
    It effectively completes some of the object oriented work we've been
    working towards in the bitbake core for a while.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	2	lib/bb/cache.py
2	1	lib/bb/cooker.py

commit 6d06e93c6a2204af6d2cf747a4610bd0eeb9f202
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2016-08-15 18:00:45 +0100

    cache: Make virtualfn2realfn/realfn2virtual standalone functions
    
    Needing to access these static methods through a class doesn't
    make sense. Move these to become module level standalone functions.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

25	30	lib/bb/cache.py
5	5	lib/bb/cooker.py
5	5	lib/bblayers/query.py

commit 266b848da40904446eb1d084bbdc5307a9b45197
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2016-08-15 17:59:56 +0100

    cache/ast: Move __VARIANTS handling to parse cache function
    
    Simple refactoring to allow for multiconfig support.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

5	1	lib/bb/cache.py
0	4	lib/bb/parse/ast.py

commit 8181d96e0a4df0aa47287669681116fa65bcae16
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2016-08-15 17:58:39 +0100

    runqueue: Abstract worker functionality to an object/array
    
    With the introduction of multi-config and the possibility of distributed
    builds we need arrays of workers rather than the existing two.
    
    This refactors the code to have a dict() of workers and a dict of
    fakeworkers, represented by objects. The code can iterate over these.
    
    This is separated out from the multi-config changes since its separable
    and clearer this way.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

66	56	lib/bb/runqueue.py

commit 8c992c148d9619b10eeae8bbd9376ecf408037a5
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2016-08-15 17:57:20 +0100

    cookerdata: Simplify prefiles/postfiles
    
    The current codepaths are rather confusing. Stop passing these
    as parameters and use the ones from when the object is created.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

5	3	lib/bb/cookerdata.py

commit 28bb8ef7f737034055f3485795179cfdcdb9a41f
Author: Scott Rifenbark <srifenbark@gmail.com>
Date:   2016-08-12 09:17:02 -0700

    bitbake-user-manual: Re-write "Dependencies Internal to the .bb File"
    
    Fixes [YOCTO #10117]
    
    Applied a re-write to better clarify the behavior of dependencies.
    
    Signed-off-by: Scott Rifenbark <srifenbark@gmail.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

29	25	doc/bitbake-user-manual/bitbake-user-manual-metadata.xml

commit 24d648ce62b35f7d2b23fde732703c060579a0d2
Author: Scott Rifenbark <srifenbark@gmail.com>
Date:   2016-08-08 09:38:00 -0700

    bitbake-user-manual: Added setting variable for a single task
    
    Fixes [YOCTO #10095]
    
    I added a third case to the "Conditional Metadata" section to
    describe setting a variable for a single task.
    
    Signed-off-by: Scott Rifenbark <srifenbark@gmail.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

28	0	doc/bitbake-user-manual/bitbake-user-manual-metadata.xml

commit dbe25523d899850f85acb6986eca98bf1b0ef52a
Author: Scott Rifenbark <srifenbark@gmail.com>
Date:   2016-08-08 08:54:41 -0700

    bitbake-user-manual: Added more detail to anonymous Python functions.
    
    Fixes [YOCTO #10093]
    
    Provided much more detail on how these functions work.
    
    Signed-off-by: Scott Rifenbark <srifenbark@gmail.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

70	17	doc/bitbake-user-manual/bitbake-user-manual-metadata.xml

commit be0fb616e64e54ae3e2420249f21f4edfd97d648
Author: Scott Rifenbark <srifenbark@gmail.com>
Date:   2016-08-03 17:44:53 -0700

    bitbake-user-manual: Formatted all "flags" to be consistent
    
    Fixes [YOCTO #10071]
    
    The use of any flags throughout the manual was very inconsistent.
    I changed all references to any named flag in the text to be
    formatted as code and to be enclosed in square brackets.
    
    Signed-off-by: Scott Rifenbark <srifenbark@gmail.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	2	doc/bitbake-user-manual/bitbake-user-manual-execution.xml
34	29	doc/bitbake-user-manual/bitbake-user-manual-metadata.xml

commit c85c9a468dc3ce606a5f8797e6be8b411a9f3bdb
Author: Scott Rifenbark <srifenbark@gmail.com>
Date:   2016-08-03 17:22:58 -0700

    bitbake-user-manual: Added detail to [dirs] and [cleardirs] flags
    
    Fixes [YOCTO #10071]
    
    Provided more clear descriptions for these two flags.
    
    Signed-off-by: Scott Rifenbark <srifenbark@gmail.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

7	3	doc/bitbake-user-manual/bitbake-user-manual-metadata.xml

commit 449fc52e483a3bf1cec1c5d8cf8c3946ec5292ab
Author: Francisco Pedraza <francisco.j.pedraza.gonzalez@intel.com>
Date:   2016-08-10 16:00:04 -0500

    bb/utils.py: export_proxies add GIT_PROXY_COMMAND
    
    This was added to enable the usage of git through proxies.
    
    Signed-off-by: Francisco Pedraza <francisco.j.pedraza.gonzalez@intel.com>
    Signed-off-by: Aníbal Limón <anibal.limon@linux.intel.com>
    Signed-off-by: Ross Burton <ross.burton@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	1	lib/bb/utils.py

commit 5317200d9cd73c6f971bc1b0cfe8692749e27e3a
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2016-08-11 15:36:59 +1200

    knotty: don't show number of running tasks in quiet mode
    
    There's not a whole lot of point showing how many tasks are running when
    we're in quiet mode, it just looks a bit strange particularly when it's
    not running any tasks.
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	1	lib/bb/ui/knotty.py

commit 7c78a1cd3f0638ae76f7c7a469b7f667c7c58090
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2016-08-11 15:36:58 +1200

    knotty: fix task progress bar not starting at 0%
    
    If we have the task number here we need to subtract 1 to get the number
    of tasks completed.
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

5	2	lib/bb/ui/knotty.py

commit de6759d8e9990e426e6d6464a2e05381cd4c12d6
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2016-08-11 15:36:57 +1200

    runqueue: fix two minor issues with the initialising tasks progress
    
    A couple of fixes for the "Initialising tasks" progress bar behaviour:
    * Properly finish the progress bar when using bitbake -S
    * Finish the progress bar before calling BB_HASHCHECK_FUNCTION (so that
      in OE when that shows its own "Checking sstate mirror object
      availability"  progress bar it gets shown on the next line as it
      should).
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	2	lib/bb/runqueue.py

commit 4b50895fb3462b21e3874a2e99c363c8d05e89e6
Author: Ross Burton <ross.burton@intel.com>
Date:   2016-08-15 15:20:50 +0100

    lib/bb/tests/fetch: remove URL that doesn't exist anymore
    
    The CUPS ipptool URL we were checking now redirects to github where the tarball
    isn't present, so remove it from the test suite.
    
    Signed-off-by: Ross Burton <ross.burton@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

0	1	lib/bb/tests/fetch.py

commit ce2f990a366d2d939e93e01f67688f12740c5fee
Author: David Reyna <David.Reyna@windriver.com>
Date:   2016-08-15 11:41:33 +0100

    toaster: update web urls for openembedded-core's special case
    
    The layer index update command has a special case for the
    updating 'openembedded-core' layer, and it was missing reading
    and updating the git web URL fields.
    
    [YOCTO #8037]
    
    Signed-off-by: David Reyna <david.reyna@windriver.com>
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

6	0	lib/toaster/orm/management/commands/lsupdates.py

commit 0a9b5d7d9655dbb09d458fc6e330e932f0f9dab6
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2016-08-09 13:50:12 +0100

    toaster: buildinfohelper Add handling local layers (i.e. non-git) layers
    
    Adds handling of the non-git layers to create and update the
    corresponding layer objects in Toaster.
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>

23	4	lib/bb/ui/buildinfohelper.py

commit a3112c922f036425977abffa0137b9133f61fcd6
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2016-08-08 15:11:27 +0100

    toaster: bldcontrol model BRLayer Add corresponding local_source_dir
    
    Sync the BRLayer object with the new field added to the Layer object.
    The BRLayer (BuildRequest Layers) are snapshots of the layers in the
    project at build time and therefore need to mirror the required fields
    of the layer object.
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>

19	0	lib/toaster/bldcontrol/migrations/0006_brlayer_local_source_dir.py
1	0	lib/toaster/bldcontrol/models.py
9	1	lib/toaster/orm/models.py

commit f855490dd04281beb5ae65d82430203d9fd263fc
Author: Sujith H <sujith.h@gmail.com>
Date:   2016-08-02 15:56:17 +0000

    toaster: adapt xhr_import_layer test locally imported layer
    
    Update xhr_import_layer test to use locally imported
    layer in local_source_dir.
    
    [YOCO #9911]
    
    Signed-off-by: Sujith H <sujith.h@gmail.com>

1	0	lib/toaster/toastergui/tests.py

commit 4ca3f602a955e01d445fb4789496e925f8d4234b
Author: Sujith H <sujith.h@gmail.com>
Date:   2016-08-01 07:25:15 +0000

    toaster: update build configuration page
    
    Update layer branch and layer commit section
    in the build configuration page for locally
    imported layers. For locally imported layers
    this secion goes as "Not applicable".
    
    [YOCO #9911]
    
    Signed-off-by: Sujith H <sujith.h@gmail.com>

14	0	lib/toaster/toastergui/templates/configuration.html

commit 35f7faabff17ca577fdd2e84bb25125047f66345
Author: Sujith H <sujith.h@gmail.com>
Date:   2016-07-29 10:42:30 +0000

    toaster: update recipe details page
    
    Update Layer branch and Layer commit
    in recipe details page. For local layer
    imported from toaster these fields are
    not applicable.
    
    [YOCO #9911]
    
    Signed-off-by: Sujith H <sujith.h@gmail.com>

18	2	lib/toaster/toastergui/templates/recipe.html

commit 6978f65af4eabe91f65a6766799578c84a0988aa
Author: Sujith H <sujith.h@gmail.com>
Date:   2016-07-29 07:15:24 +0000

    toaster: update package detail page
    
    Update package details pages layer branch
    and layer commit section for locally imported
    layers. We add Not applicable to them along
    with a helper text, which helps user understand
    why its not applicable to those layers.
    
    [YOCO #9911]
    
    Signed-off-by: Sujith H <sujith.h@gmail.com>

16	2	lib/toaster/toastergui/templates/package_detail_base.html

commit 1b0934b45d3704de604405826de9fc1da51ceae1
Author: Sujith H <sujith.h@gmail.com>
Date:   2016-07-29 07:11:19 +0000

    toaster: updte build tables for locally imported layers
    
    Update the build tables section for locally
    imported layers. Here we do not provide informations
    such as branch or commit. Because those are locally
    imported layer(s).
    
    [YOCO #9911]
    
    Signed-off-by: Sujith H <sujith.h@gmail.com>

32	0	lib/toaster/toastergui/buildtables.py

commit 7e73f8583a0f92d73b42410e1c960b6f2976a557
Author: Sujith H <sujith.h@gmail.com>
Date:   2016-07-29 07:03:39 +0000

    toaster: update the tables information
    
    Update table informations for pages:
    1) Compatible layers
    2) Compatible image recipes
    Added Not Applicable to the fields of locally
    imported layers because they are not git version.
    
    [YOCO #9911]
    
    Signed-off-by: Sujith H <sujith.h@gmail.com>

27	3	lib/toaster/toastergui/tables.py

commit 5669157994fc220a018e37927600988f3fd43271
Author: Sujith H <sujith.h@gmail.com>
Date:   2016-07-20 08:58:57 +0000

    toaster: collect details for local dir imported from ui
    
    Collect the dir path imported from UI and make
    sure that its getting added to bblayers.conf.
    This patch exactly does the same job. Any layer
    which is imported locally need not be cloned
    again to _toaster_clones dir.
    
    [YOCO #9911]
    
    Signed-off-by: Sujith H <sujith.h@gmail.com>

12	1	lib/toaster/bldcontrol/localhostbecontroller.py

commit 83763d89f9d0bc535e930a2094ba8201675d40be
Author: Sujith H <sujith.h@gmail.com>
Date:   2016-07-20 08:57:11 +0000

    toaster: add local_source_dir field to model
    
    Add a new field local_source_dir to model.
    This will clearly differentiate us from the
    vcs_url which is for git path.
    Adding migration file 0010_layer_local_source_dir_path.py
    along with this patch.
    
    [YOCO #9911]
    
    Signed-off-by: Sujith H <sujith.h@gmail.com>

19	0	lib/toaster/orm/migrations/0015_layer_local_source_dir.py
1	0	lib/toaster/orm/models.py

commit 2c3d48e7cd21a999ef145081352774f1759cd5e4
Author: Sujith H <sujith.h@gmail.com>
Date:   2016-07-26 09:38:17 +0000

    toaster: add local directory to the db
    
    Adding local directory to the database.
    The local directory is added to vcs_url,
    field of db.
    
    [YOCO #9911]
    
    Signed-off-by: Sujith H <sujith.h@gmail.com>

4	3	lib/toaster/toastergui/views.py

commit c1961c7844cab5b9c9144f3b4946197097f53e17
Author: Sujith H <sujith.h@gmail.com>
Date:   2016-07-19 07:57:09 +0000

    toaster: improve the display when local dir is added
    
    The helper text gets displayed accordingly when mouse
    is hovered above the layers. If its a local directory
    then no more branch is mentioned. Only directory path
    is mentioned.
    
    [YOCTO #9911]
    
    Signed-off-by: Sujith H <sujith.h@gmail.com>

6	1	lib/toaster/toastergui/static/js/projectpage.js

commit a41d0400478186c983334d8f83780639e7361c91
Author: Belen Barros Pena <belen.barros.pena@linux.intel.com>
Date:   2016-07-26 08:08:42 +0000

    toaster: update css file for layer import
    
    Update the css file for the layer import.
    This changes will improve the UI for the
    task.
    
    [YOCO #9911]
    
    Signed-off-by: Belen Barros Pena <belen.barros.pena@linux.intel.com>

6	1	lib/toaster/toastergui/static/css/default.css

commit 4350b01f776e6e35745c3eb9440587973de00eec
Author: Sujith H <sujith.h@gmail.com>
Date:   2016-07-27 06:16:29 +0000

    toaster: add local_source_dir to the needed_fields
    
    This change will help us know if local_source_dir
    is null or if there is value associated with this
    field. This change will help us display the details
    for duplicate layers tryied to import locally.
    
    [YOCOT #9911]
    
    Signed-off-by: Sujith H <sujith.h@gmail.com>

1	0	lib/toaster/toastergui/typeaheads.py

commit 26bee4c2c05dc202857270cd5f56abff79674ca7
Author: Sujith H <sujith.h@gmail.com>
Date:   2016-07-19 07:54:49 +0000

    toaster: control the selection of git and local repo
    
    Changes made in this patch will help user to select
    either repo based on git and local. This patch also
    improves the help provided to user so that user can
    understand them and take necessary action to proceed.
    
    [YOCOT #9911]
    
    Signed-off-by: Sujith H <sujith.h@gmail.com>

114	11	lib/toaster/toastergui/static/js/importlayer.js

commit 78e5edb8ed4bf6c8b0fb87fcf17a82485c145920
Author: Sujith H <sujith.h@gmail.com>
Date:   2016-07-19 07:51:50 +0000

    toaster: add import of local directory to UI
    
    This patch will help to add local directory
    to UI. The modification is made in importlayer.html
    file. The radio buttons are created to separate
    selection of git based repo and local directory.
    
    Co-Author: Belen Barros Pena <belen.barros.pena@linux.intel.com>
    
    [YOCOT #9911]
    
    Signed-off-by: Sujith H <sujith.h@gmail.com>

106	78	lib/toaster/toastergui/templates/importlayer.html

commit 01891c13ae8dcba64e5cf79956f1b64c2afdaae3
Author: Ed Bartosh <ed.bartosh@linux.intel.com>
Date:   2016-07-27 15:15:02 +0300

    toaster: fix unhandled exception
    
    manage.py lsupdates throws DataError exception if the recipe can't be
    saved to the MySQL database:
        django.db.utils.DataError: (1406, "Data too long for column 'license' at row 1"
    
    Adding DataError exception to the list of exceptions should make
    lsupdates to print a warning message and skip the recipe.
    
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>

2	2	lib/toaster/orm/models.py

commit 0990b4c73f194ec0be1762e4e48b1a525d8349fb
Author: Elliot Smith <elliot.smith@intel.com>
Date:   2016-08-04 16:32:33 +0100

    toasterui: ensure that the Build object is always available
    
    Many of the methods in toasterui and buildinfohelper rely
    on the internal state of the buildinfohelper; in particular, they
    need a Build object to have been created on the buildinfohelper.
    
    If the creation of this Build object is tied to an event which
    may or may not occur, there's no guarantee that it will exist.
    This then causes assertion errors in those methods.
    
    To prevent this from happening, add an _ensure_build() method
    to buildinfohelper. This ensures that a minimal Build object
    is always available whenever it is needed, either by retrieving
    it from the BuildRequest or creating it; it also ensures that
    the Build object is up to date with whatever data is available
    on the bitbake server (DISTRO, MACHINE etc.).
    
    This method is then called by any other method which relies on
    a Build object being in the internal state, ensuring that the
    object is either available, or creating it.
    
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>

115	81	lib/bb/ui/buildinfohelper.py
7	2	lib/bb/ui/toasterui.py

commit b7a699e701785b5bd8da97b6e1b760a1c6dd05f5
Author: Elliot Smith <elliot.smith@intel.com>
Date:   2016-07-29 12:19:18 +0100

    toaster-tests: add test for showing self-dependent task
    
    Toaster occasionally records a task which depends on itself.
    
    Add a test which checks that a task which depends on itself
    can be displayed in the task page.
    
    [YOCTO #9952]
    
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>

76	0	lib/toaster/tests/browser/test_task_page.py

commit 88c471c7e5995abb5bca62990b91650277b6c926
Author: Elliot Smith <elliot.smith@intel.com>
Date:   2016-07-29 12:25:46 +0100

    toaster: prevent infinite loop when finding task dependencies
    
    Toaster occasionally records a task which depends on itself.
    This causes a problem when trying to display that task if it
    is "covered" by itself, as the code does the following: for
    task A, find a task B which covers A; then, recursively
    find the task which covers B etc. If B == A, this loop becomes
    infinite and never terminates.
    
    To prevent this, add the condition that, when finding a task B
    which covers A, don't allow B == A.
    
    [YOCTO #9952]
    
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>

10	0	lib/toaster/toastergui/views.py

commit 5b016338478d784fd048ba2baae121c3e558090c
Author: Elliot Smith <elliot.smith@intel.com>
Date:   2016-07-19 14:47:12 +0100

    toaster-tests: add tests for reverting to default sort
    
    Add tests for ToasterTable UI table sort reverting, which can
    only be exercised via the browser.
    
    Check that if a table is sorted by a column, and that column
    is hidden, then the sort reverts to the default for the table.
    
    [YOCTO #9836]
    
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>

160	0	lib/toaster/tests/browser/test_toastertable_ui.py

commit a28377067b6f381bbc98db82f5c45fca6620f7ad
Author: Elliot Smith <elliot.smith@intel.com>
Date:   2016-07-18 16:02:14 +0100

    toaster: reset table to default orderby when orderby column is hidden
    
    When a ToasterTable is sorted by a column, and that column is
    hidden from view, the sort doesn't revert to the default for the
    table.
    
    Modify the JS responsible for reloading the table data so that
    it doesn't rely on clicking a table column heading (as this is
    inflexible and error-prone). Instead, use a function to apply
    the sort to the table; and call that function when column
    headings are clicked.
    
    This means that the ordering can be changed programmatically
    to a specified default ordering when a column is hidden, without
    having to click on a column heading.
    
    Use this function when the current sort column is hidden, to
    apply the default sort for the table.
    
    [YOCTO #9836]
    
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>

60	18	lib/toaster/toastergui/static/js/table.js

commit dd8bede91e08c0b64b949ca98c74e6144da88fd1
Author: Elliot Smith <elliot.smith@intel.com>
Date:   2016-07-15 15:20:36 +0100

    toaster: show loading spinner after creating custom image
    
    Creating a custom image through the "New custom image" dialog
    can sometimes result in a long pause between pressing the button
    to create the image, and being transferred to the page showing
    details of its content. This can make it appear as though pressing
    the button had no effect.
    
    To prevent this from happening, disable the button and text box
    in the new custom image dialog after the "Create image" button is
    pressed. Also show a loading spinner and "loading..." text on
    the button to make it clear that the application is still responding.
    
    [YOCTO #9475]
    
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>

12	0	lib/toaster/toastergui/static/css/default.css
18	2	lib/toaster/toastergui/static/js/libtoaster.js
30	3	lib/toaster/toastergui/static/js/newcustomimage_modal.js
6	1	lib/toaster/toastergui/templates/newcustomimage_modal.html

commit 34943b2278efe99c6744399e04a47cdda630468e
Author: Elliot Smith <elliot.smith@intel.com>
Date:   2016-07-15 12:09:57 +0100

    toaster-tests: fix erroneous message when test fails
    
    When one of the layer details tests fails (as it occasionally
    does, if running on a machine under heavy load, due to sync issues),
    the error message shown is misleading, as it is something like:
    
    "Expected 'This was imported' in ['This was imported', ...]"
    
    The string 'This was imported' is in the list shown in the message,
    but the message suggests it isn't.
    
    This is because the test compares the string with one list, but
    then uses a different list in the fail message if the comparison
    fails.
    
    Fix the list shown in the message about the test failing.
    
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>

4	4	lib/toaster/tests/browser/test_layerdetails_page.py

commit b95681cf38475903ad4f73059313dda8c0dccef6
Author: Elliot Smith <elliot.smith@intel.com>
Date:   2016-07-14 15:58:00 +0100

    toaster-tests: add tests for most recent builds state changes
    
    Add tests for the state transitions in the "most recent builds"
    area of the all builds page.
    
    [YOCTO #9631]
    
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>

211	0	lib/toaster/tests/browser/test_most_recent_builds_states.py

commit 9e16f76fb254ae967ded6c21251243b2af9b16b6
Author: Elliot Smith <elliot.smith@intel.com>
Date:   2016-07-13 15:12:53 +0100

    toaster-tests: add tests for build dashboard menu and summary visibility
    
    Test that the build dashboard only shows a menu and a build
    summary area if a build has properly "started" (i.e. has at least
    one Variable object associated with it).
    
    [YOCTO #8443]
    
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>

102	25	lib/toaster/tests/browser/test_builddashboard_page.py
6	1	lib/toaster/tests/browser/test_builddashboard_page_artifacts.py

commit 3d7b247512eb01607741f5f6ce7cb01d241e49e7
Author: Elliot Smith <elliot.smith@intel.com>
Date:   2016-04-26 16:32:11 +0100

    toaster-tests: add tests for build time links in the all builds page
    
    When a build fails, it shouldn't have links on its build time in the
    recent builds area or in the all builds table.
    
    [YOCTO #8443]
    
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>

89	0	lib/toaster/tests/browser/test_all_builds_page.py

commit 9d68a5bfdccd399791e1af048fefa73b5df90bcb
Author: Elliot Smith <elliot.smith@intel.com>
Date:   2016-07-13 14:42:31 +0100

    toaster: adjust build dashboard for failed builds
    
    Remove the side bar and build details modules for failed builds.
    
    [YOCTO #8443]
    
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>

89	87	lib/toaster/toastergui/templates/basebuildpage.html
75	72	lib/toaster/toastergui/templates/builddashboard.html

commit aa151a4d2de4a54fe3075a8c56a4935158398a18
Author: Elliot Smith <elliot.smith@intel.com>
Date:   2016-07-13 14:39:47 +0100

    toaster: add started property to Build
    
    Add a property to the Build model which records whether
    the BuildStarted event has occurred for the build.
    
    The proxy for this event is the presence of variables recorded
    against the Build: as the buildinfohelper only saves variables
    when the BuildStarted event occurs (as the variables aren't
    available on the bitbake server before that point), we can
    tell whether BuildStarted has happened by counting Variable
    objects on the Build.
    
    This can then be used to determine whether a Build "properly"
    started, enabling a different dashboard display (left-hand menu
    hidden) if the build didn't record any useful information (e.g.
    if it had a bad target).
    
    [YOCTO #8443]
    
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>

15	0	lib/toaster/orm/models.py

commit 6f9c472d95ee800da079f6b828b956d9f8c67ce6
Author: Elliot Smith <elliot.smith@intel.com>
Date:   2016-07-13 11:37:01 +0100

    toaster: remove links from time field on failed builds
    
    Failed builds don't have any time data recorded for them,
    so the time field in the builds table, the time shown
    in the recent builds area, and the build time shown in
    the build dashboard should not be links for failed builds.
    
    [YOCTO #8443]
    
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>

6	2	lib/toaster/toastergui/tables.py
9	2	lib/toaster/toastergui/templates/builddashboard.html
9	1	lib/toaster/toastergui/templates/mrb_section.html

commit 98a923ff14188832ac44e0dbafc73bcba10e25da
Author: Elliot Smith <elliot.smith@intel.com>
Date:   2016-07-12 16:38:06 +0100

    toaster: tweak styling and typos in recent builds area
    
    Help icons need to have the Bootstrap tooltip() method called on
    them so that the popups are correctly styled.
    
    Ensure that the colour of the help/error/warning icons is correct,
    depending on the build state.
    
    Fix pluralisation of errors and warnings shown.
    
    Add a div around the build state area so it's easy to pick up
    where the state is going to display (e.g. in tests).
    
    [YOCTO #9631]
    
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>

7	1	lib/toaster/toastergui/static/js/mrbsection.js
25	22	lib/toaster/toastergui/templates/mrb_section.html

commit 5529bcd860d2932b967a064ae28690ac5a725342
Author: Elliot Smith <elliot.smith@intel.com>
Date:   2016-07-12 16:14:42 +0100

    toaster: show "Tasks starting..." until the first task completes
    
    To prevent showing a "0% of tasks complete" message for a long time,
    don't show the progress bar until the first task has finished.
    
    While waiting for that first task, show a message about tasks
    starting instead.
    
    [YOCTO #9631]
    
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>

13	0	lib/toaster/orm/models.py
24	4	lib/toaster/toastergui/templates/mrb_section.html

commit f33d51d46d70e73e04e325807c1bc4eb68462f7b
Author: Elliot Smith <elliot.smith@intel.com>
Date:   2016-07-11 14:47:06 +0100

    toaster: show progress of recipe parsing in recent builds area
    
    Modify buildinfohelper and toasterui so that they record the
    recipe parse progress (from ParseProgress events in bitbake)
    on the Build object.
    
    Note that because the Build object is now created at the
    point when ParseStarted occurs, it is necessary to set the
    build name to the empty string initially (hence the migration).
    The build name can be set when the build properly starts,
    i.e. at the BuildStarted event.
    
    Then use this additional data to determine whether a Build
    is in a "Parsing" state, and report this in the JSON API.
    This enables the most recent builds area to show the recipe
    parse progress.
    
    Add additional logic to update the progress bar if the progress
    for a build object changes.
    
    [YOCTO #9631]
    
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>

76	42	lib/bb/ui/buildinfohelper.py
20	11	lib/bb/ui/toasterui.py
24	0	lib/toaster/orm/migrations/0013_recipe_parse_progress_fields.py
19	0	lib/toaster/orm/migrations/0014_allow_empty_buildname.py
16	1	lib/toaster/orm/models.py
9	1	lib/toaster/toastergui/api.py
23	27	lib/toaster/toastergui/static/js/mrbsection.js
72	40	lib/toaster/toastergui/templates/mrb_section.html

commit c868ea036aa34b387a72ec5116a66b2cd863995b
Author: Elliot Smith <elliot.smith@intel.com>
Date:   2016-06-29 15:41:56 +0100

    toaster: move most recent builds templating to client
    
    The most recent builds area of the all builds and project builds
    table needs to update as a build progresses. It also needs
    additional functionality to show other states (e.g. recipe parsing,
    queued) which again needs to update on the client side.
    
    Rather than add to the existing mix of server-side templating
    with client-side DOM updating, translate all of the server-side
    templates to client-side ones (jsrender), and add logic which
    updates the most recent builds area as the state of a build changes.
    
    Add a JSON API for mostrecentbuilds, which returns the state of
    all "recent" builds. Fetch this via Ajax from the build dashboard
    (rather than fetching the ad hoc API as in the previous version).
    
    Then, as new states for builds are fetched via Ajax, determine
    whether the build state has changed completely, or whether the progress
    has just updated. If the state completely changed, re-render the
    template on the client side for that build. If only the progress
    changed, just update the progress bar. (NB this fixes the
    task progress bar so it works for the project builds and all builds
    pages.)
    
    In cases where the builds table needs to update as the result of
    a build finishing, reload the whole page.
    
    This work highlighted a variety of other issues, such as
    build requests not being able to change state as necessary. This
    was one part of the cause of the "cancelling build..." state
    being fragile and disappearing entirely when the page refreshed.
    The cancelling state now persists between page reloads, as the
    logic for determining whether a build is cancelling is now on
    the Build object itself.
    
    Note that jsrender is redistributed as part of Toaster, so
    a note was added to LICENSE to that effect.
    
    [YOCTO #9631]
    
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>

2	0	LICENSE
19	0	lib/toaster/bldcontrol/migrations/0005_reorder_buildrequest_states.py
6	6	lib/toaster/bldcontrol/models.py
32	12	lib/toaster/orm/models.py
2	2	lib/toaster/tests/browser/test_all_builds_page.py
104	1	lib/toaster/toastergui/api.py
1	0	lib/toaster/toastergui/static/css/default.css
-	-	lib/toaster/toastergui/static/js/jsrender.min.js
16	0	lib/toaster/toastergui/static/js/libtoaster.js
108	70	lib/toaster/toastergui/static/js/mrbsection.js
6	0	lib/toaster/toastergui/templates/base.html
0	64	lib/toaster/toastergui/templates/buildrequestdetails.html
169	139	lib/toaster/toastergui/templates/mrb_section.html
1	1	lib/toaster/toastergui/templates/projectbuilds-toastertable.html
0	8	lib/toaster/toastergui/templatetags/projecttags.py
3	0	lib/toaster/toastergui/urls.py

commit ac02fda870965bf7d44ff5688eda54d2d11ab9c7
Author: Elliot Smith <elliot.smith@intel.com>
Date:   2016-07-11 16:23:05 +0100

    cooker: add BuildInit event
    
    In situations where a bitbake run fails before the build
    properly starts and BuildStarted is fired, a UI has no way
    to get at the targets passed to the build. This makes it
    difficult for the UI to report on the targets which failed.
    
    Fire a BuildInit event before running buildTargets() or
    buildFile(). This enables a UI to capture targets passed to
    buildTargets(), even if the build fails (e.g. the targets
    themselves are invalid).
    
    [YOCTO #8440]
    
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>

4	0	lib/bb/cooker.py
5	1	lib/bb/event.py

commit 4060776e408ec6baec3bafba79ac5db1bc380f01
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2016-08-02 14:19:17 +0100

    toaster: fixtures Add README
    
    Add README to explain fixtures directory
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>

30	0	lib/toaster/orm/fixtures/README

commit 3edd33aff2b9eef82090dc4f9b5461f901aec8be
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2016-08-01 19:49:43 +0100

    toaster: Remove old toaster config loading mechanism
    
    This has been replaced using django's inbuilt loaddata.
    Django command documented at:
    https://docs.djangoproject.com/en/1.8/ref/django-admin/#django-admin-loaddata
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>

0	15	bin/toaster
0	33	lib/toaster/bldcontrol/management/commands/checksettings.py
0	179	lib/toaster/bldcontrol/management/commands/loadconf.py

commit e1c1c8827f3892551084bf1c0909c1b33f0dca83
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2016-08-01 19:38:28 +0100

    toaster: lsupdates Add spinner for parsing/http fetch
    
    Adds a spinner so that you know that the parse and http fetch from the
    layerindex is in progress.
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>

33	2	lib/toaster/orm/management/commands/lsupdates.py

commit 7d14ca8cbabbb893e507a66e4cc6e3e77c1e8c84
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2016-08-01 19:32:53 +0100

    toaster: checksettings call django's loaddata instead of custom command
    
    Call django's inbuilt loaddata command to load the appropriate fixtures.
    We also attempt to load a fixture called "custom" and fail silently if
    we don't have one. This is where initial customisations can be done to
    load particular settings or data into Toaster (for example layers or
    default values for variables)
    
    Make sure the value for TEMPLATECONF is available to checksettings so
    that we can have a go a working out which default data to load.
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>

2	1	bin/toaster
44	11	lib/toaster/bldcontrol/management/commands/checksettings.py

commit d2f4ffbf061e874a7731441f8346fdc568e9f07f
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2016-07-25 13:43:08 +0100

    toaster: Add poky and openembedded configuration fixtures
    
    These fixtures provide a recommended default configuration of toaster for
    either using bitbake and oe-core or as part of poky.
    They can be used as the sample configuration for writing custom configurations.
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>

57	0	lib/toaster/orm/fixtures/oe-core.xml
105	0	lib/toaster/orm/fixtures/poky.xml
36	0	lib/toaster/orm/fixtures/settings.xml

commit 06f74fe91f8e162f49a4e856a62a97093b48262a
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2016-08-05 09:26:49 +0100

    toaster: tests test_new_project_page Catch button not enabled exception
    
    When using firefox and selenium we get an exception generated when a
    disabled button click is attempted. This should happen in the test but
    we need to catch the exception to make sure it doesn't cause the test to
    fail.
    
    [YOCTO #10056]
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

5	1	lib/toaster/tests/browser/test_new_project_page.py

commit 1d5102fe6c932dad1c2b975385e10a33a91ba1a4
Author: Randy Witt <randy.e.witt@linux.intel.com>
Date:   2016-08-02 16:43:54 -0700

    toaster: --help now returns 0 instead of 1
    
    If the user explicitly passes in "--help" then it should return 0. This
    is the convention follow by the typical application. This allows the
    user to check for options without triggering an error.
    
    Signed-off-by: Randy Witt <randy.e.witt@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

4	0	bin/toaster

commit 40f605199fb3ec2549611508b7576c64d735b2b7
Author: Ulrich Ölmann <u.oelmann@pengutronix.de>
Date:   2016-08-01 10:43:00 +0200

    siggen: Fix typo
    
    Signed-off-by: Ulrich Ölmann <u.oelmann@pengutronix.de>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	2	lib/bb/siggen.py

commit c1a57e2dd7fc96834643be5591a96f239215481a
Author: Terry Boese <terry.boese@vecima.com>
Date:   2016-08-10 09:14:15 -0600

    fetch2/gitannex.py: use 'git annex init' instead of 'git annex sync'
    
    The git annex fetcher needs git annex to be initialized.  Previously
    it was using 'git annex sync' to do this, but that has the downside
    of moving the checkout to the tip of the default branch.  This means
    that tags, SRCREV, etc don't work in the gitannex case.
    
    Signed-off-by: Terry Boese <terry.boese@vecima.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/fetch2/gitannex.py

commit 88c5beca705efa7df4a96fb2aaf3f13c336ac328
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2016-08-10 16:00:33 +0100

    persist_data: Fix py3 update stack overflow
    
    Revision d0f904d407f57998419bd9c305ce53e5eaa36b24 accidentally broke
    items() and values() and made them cause stack overflows. Undo that
    breakage.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	2	lib/bb/persist_data.py

commit cc71d5d9da71ea5f21d02f3b2fbf119bd2d794f0
Author: Mariano Lopez <mariano.lopez@linux.intel.com>
Date:   2016-08-05 13:54:44 +0000

    fetch: Fix use of tar's --exclude option for tar >= 1.29
    
    Starting from tar 1.29 the --exclude option won't work
    anymore if is not used before the path. There are some
    fetch modules that copy the ptest using tar and --exclude
    option. This fixes these for bitbake.
    
    [YOCTO #9763]
    
    Signed-off-by: Mariano Lopez <mariano.lopez@linux.intel.com>
    Signed-off-by: Ross Burton <ross.burton@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/fetch2/bzr.py
1	1	lib/bb/fetch2/cvs.py
1	1	lib/bb/fetch2/repo.py
1	1	lib/bb/fetch2/svn.py

commit 319d3d387161182069e6d1b3db17ccb539d097ed
Author: Scott Rifenbark <srifenbark@gmail.com>
Date:   2016-08-01 11:52:10 -0700

    bitbake-user-manual: Applied typo fix to "Override Style Operation Advantages"
    
    Fixes [YOCTO #9985]
    
    Fixed an operator typo from ":=" to "+=" in the note
    at the bottom of the section.
    
    Signed-off-by: Scott Rifenbark <srifenbark@gmail.com>

1	1	doc/bitbake-user-manual/bitbake-user-manual-metadata.xml

commit c79fab1be4898ec88bfddd4c4f84e76dc3a3125b
Author: Scott Rifenbark <srifenbark@gmail.com>
Date:   2016-07-29 14:18:35 -0700

    bitbake-user-manual: Changed bitbake command example.
    
    Fixes [YOCTO #7718]
    
    In the "Executing a List of Task and Recipe Combinations"
    section, I changed the improper bitbake command example to
    use the correct syntax.  This change was review feedback.
    
    Signed-off-by: Scott Rifenbark <srifenbark@gmail.com>

1	1	doc/bitbake-user-manual/bitbake-user-manual-intro.xml

commit fc47bb99dbc1972dfb3a83c0f4c479963da64bcc
Author: Scott Rifenbark <srifenbark@gmail.com>
Date:   2016-07-29 14:08:25 -0700

    bitbake-user-manual: Updated the PROVIDES variable
    
    Fixes [YOCTO #10011]
    
    Added paragraphs near the end to describe the role of virtual
    targets.
    
    Signed-off-by: Scott Rifenbark <srifenbark@gmail.com>

21	0	doc/bitbake-user-manual/bitbake-user-manual-ref-variables.xml

commit 8006da3f229d0227215ccd59cd273edacf72f9ce
Author: Scott Rifenbark <srifenbark@gmail.com>
Date:   2016-07-22 08:36:09 -0700

    bitbake-user-manual: Added non-existant variable expansion
    
    Fixes [YOCTO #10003]
    
    I added a small paragraph explaining what happens when expansion
    of a variable that does not exist occurs.
    
    Signed-off-by: Scott Rifenbark <srifenbark@gmail.com>

11	0	doc/bitbake-user-manual/bitbake-user-manual-metadata.xml

commit d8ae3775eefe3f7b62fc26cae5b742ae83850c13
Author: Scott Rifenbark <srifenbark@gmail.com>
Date:   2016-07-21 11:27:57 -0700

    bitbake-user-manual: Applied some review comments
    
    Fixes [YOCTO #9985]
    
    Fixed some problems with the changes.  A small typo for an
    example and added a clarifying operator in another sentence.
    
    Signed-off-by: Scott Rifenbark <srifenbark@gmail.com>

4	3	doc/bitbake-user-manual/bitbake-user-manual-metadata.xml

commit 64bf49826088c56b739ed971251f05b4564c712e
Author: Scott Rifenbark <srifenbark@gmail.com>
Date:   2016-07-21 11:02:52 -0700

    bitbake-user-manual: Updated the "Inline Python Variable Expansion" section.
    
    Fixes [YOCTO #9984]
    
    Added a small note to the bottom to help clarify.
    
    Signed-off-by: Scott Rifenbark <srifenbark@gmail.com>

16	1	doc/bitbake-user-manual/bitbake-user-manual-metadata.xml

commit 5c5b88e402376268baa15c5d04d2592f28d76751
Author: Scott Rifenbark <srifenbark@gmail.com>
Date:   2016-07-21 10:51:11 -0700

    bitbake-user-manual: Fixed override operator syntax.
    
    I had inconsistent usage of the "_append" style operator syntax
    in the chaper.  I was using a mix of <filename>_append</filename>
    and "_append".  I changed to "_append" for consistency.
    
    Signed-off-by: Scott Rifenbark <srifenbark@gmail.com>

4	6	doc/bitbake-user-manual/bitbake-user-manual-metadata.xml

commit 797d9627baad9ccd3d55e825c0d705311f631f78
Author: Scott Rifenbark <srifenbark@gmail.com>
Date:   2016-07-21 10:37:09 -0700

    bitbake-user-manual: Clarified override-style operators.
    
    Fixes [YOCTO #9985]
    
    Made the following changes:
    
     * Section Removal (Override Style Syntax):  Added a small
       qualifying sentence at the end to further define behavior
    
     * Added new section "Override Style Operation Advantages":
       This section provides some rationale behind the "_append"
       style operations.
    
     * Section "Examples": Changed an example to use the "="
       operator rather than the "+=" operator.
    
    Signed-off-by: Scott Rifenbark <srifenbark@gmail.com>

56	2	doc/bitbake-user-manual/bitbake-user-manual-metadata.xml

commit 480096ca93c0a649ebfff68dfc7d9bbe8eb2ea2d
Author: Scott Rifenbark <srifenbark@gmail.com>
Date:   2016-07-21 09:49:08 -0700

    bitbake-user-manual: Updated the variable expansion section.
    
    Fixes [YOCTO #9984]
    
    Added more detail to the examples that show the effects of
    variable expanison.
    
    Signed-off-by: Scott Rifenbark <srifenbark@gmail.com>

31	12	doc/bitbake-user-manual/bitbake-user-manual-metadata.xml

commit 3f871865eced7dd27a33f26e19847a9863a036d4
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2016-08-02 15:10:38 +0100

    Revert "bitbake-user-manual: Added new section on command-line execution"
    
    This reverts commit 6f6cd0674fd1595f4e74b7da692e0c348b2660c6 as it was
    a duplicated commit.

0	19	doc/bitbake-user-manual/bitbake-user-manual-intro.xml

commit f77e6f21a2cc57a3fcb5970437e55cfae39849a3
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2016-08-01 09:38:23 +0100

    lib/toaster: Fix missing new files from previous commits
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

118	0	lib/toaster/orm/migrations/0010_delete_layer_source_references.py
17	0	lib/toaster/orm/migrations/0011_delete_layersource.py
62	0	lib/toaster/orm/migrations/0012_use_release_instead_of_up_branch.py
218	0	lib/toaster/tests/browser/selenium_helpers_base.py

commit f0e6832bc33df2bb1b2f4b7f436ffbf023e24b13
Author: Elliot Smith <elliot.smith@intel.com>
Date:   2016-07-20 17:37:04 +0100

    toaster-tests: fix URL given for Chromedriver download
    
    The link to the Chromedriver downloads page is dead, so
    put in the correct URL.
    
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/toaster/tests/browser/README

commit f6011d986f9a573a39e7b98af0aefe6cc88461ad
Author: Elliot Smith <elliot.smith@intel.com>
Date:   2016-07-20 17:37:03 +0100

    toaster-tests: define capabilities for latest Firefox driver
    
    For the latest Firefox versions, WebDriver requires a download of a
    separate binary and an additional capability to be defined on it.
    
    Modify our tests so that when "marionette" is set as the browser,
    this capability is defined on the Firefox driver. Also add a note to the
    README about the additional installation steps required.
    
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

17	2	lib/toaster/tests/browser/README

commit 484fe5a3f5b840e5422cbdff0eef9aecfe944a19
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2016-07-26 15:36:40 +1200

    lib/bb/checksum: avoid exception on broken symlinks
    
    If using OE's externalsrc with a source tree that is not tracked by git
    and contains broken symlinks, you can receive "TypeError: unorderable
    types: NoneType() < str()" within the file checksum code due to:
    
     checksums.sort(key=operator.itemgetter(1))
    
    Don't add files with no checksum to the checksums list in order to avoid
    this.
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

4	2	lib/bb/checksum.py

commit 8a6424ed871c3cbacd21cae8bc801197f83d67a6
Author: Ross Burton <ross.burton@intel.com>
Date:   2016-07-18 17:22:55 +0100

    lib/bb/utils: show subprocess output in stack traces
    
    If better_exec() throws a subprocess.CalledProcessError then show the output to
    the user as it likely contains useful information for solving the problem.
    
    Signed-off-by: Ross Burton <ross.burton@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

6	0	lib/bb/utils.py

commit cc67800f279fb211ee3bb4ea7009fdbb82973b02
Author: Maxin B. John <maxin.john@intel.com>
Date:   2016-07-29 11:23:35 +0300

    fetch2: fix pickle issues while switching from master to krogoth
    
    While switching from master to krogoth build with a common download directory,
    got a large number of warnings like the one listed below:
    
    WARNING: freetype-2.6.3-r0 do_fetch: Couldn't load checksums from
    donestamp /home/maxin/downloads/freetype-2.6.3.tar.bz2.done: ValueError
    (msg: unsupported pickle protocol: 4)
    
    These warnings are caused by the difference in pickle module
    implementation in python3(master) and python2(krogoth). Python2 supports
    3 different protocols (0, 1, 2) and pickle.HIGHEST_PROTOCOL is 2 where as
    Python3 supports 5 different protocols (0, 1, 2, 3, 4) and
    pickle.HIGHEST_PROTOCOL is obviously 4.
    
    My suggestion is to use 2 since it is backward compatible with python2
    (all the supported distros for krogoth provides python2 which supports
    pickle protocol version 2)
    
    Signed-off-by: Maxin B. John <maxin.john@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	2	lib/bb/fetch2/__init__.py

commit 508112793ee7ace613f07695222997309a2ca58f
Author: Ross Burton <ross.burton@intel.com>
Date:   2016-07-25 23:32:26 +0100

    lib/bb/build: handle incomplete message fragments in log FIFO
    
    It's possible that the logging FIFO doesn't do a complete read (or the sender a
    complete write) with the result that an incomplete message is read in bitbake.
    This used to result in silently truncated lines but since 42d727 now also
    results in a warning as the start of the rest of the message isn't a valid
    logging command.
    
    Solve this by storing incoming bytes in a bytearray() across reads, and parsing
    complete messages from that.
    
    [ YOCTO #9999 ]
    
    Signed-off-by: Ross Burton <ross.burton@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

36	31	lib/bb/build.py

commit cecee440a76950f2824ea34b88e84185be493337
Author: Elliot Smith <elliot.smith@intel.com>
Date:   2016-07-21 18:58:40 +0300

    toaster-tests: add tasks and recipes sub-page tests
    
    Add tests for the tasks and recipes sub-pages of the build
    dashboard.
    
    [YOCTO #9833]
    
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

66	0	lib/toaster/tests/browser/test_builddashboard_page_recipes.py
65	0	lib/toaster/tests/browser/test_builddashboard_page_tasks.py

commit 3abd0ac300462e6d1335018cf2d0420de7cc8b76
Author: Elliot Smith <elliot.smith@intel.com>
Date:   2016-07-21 18:58:39 +0300

    toaster: set non-hideable columns for built recipes table
    
    None of the columns in the built recipes table are marked
    as not hideable, so it is possible to remove all the columns
    and make the table disappear.
    
    Set the recipe name and version columns as not hideable.
    
    Also rename the "Name" column to "Recipe", for consistency with
    the design and with other recipe tables.
    
    [YOCTO #9833]
    
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	1	lib/toaster/toastergui/buildtables.py

commit dc1781e3783724823fd6b0c2d65f6b2771e8d0be
Author: Elliot Smith <elliot.smith@intel.com>
Date:   2016-07-21 18:58:38 +0300

    toaster: set non-hideable columns for build tasks table
    
    The task, recipe and order columns in the build tasks table
    should not be hideable. If they are, it's possible for the
    table to have all of its columns hidden so that it no longer
    displays.
    
    Set the hideable property to prevent these columns from being
    hidden.
    
    [YOCTO #9833]
    
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	0	lib/toaster/toastergui/buildtables.py

commit d6e88b7b410b6b99b47b031111a1126da9fd31b3
Author: Elliot Smith <elliot.smith@intel.com>
Date:   2016-07-21 18:42:35 +0300

    toaster: fix download URL for task logs
    
    The task display template formatting had split the Django
    url template tag across two lines and broken it. This resulted
    in a gibberish URL for task logs.
    
    Fix by placing the tag and its arguments on a single line.
    
    [YOCTO #9837]
    
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

8	4	lib/toaster/toastergui/templates/task.html

commit df7f4897c463a48c45514e2bcbd44cc7f86c4bb0
Author: Mario Domenech Goulart <mario.goulart@bmw-carit.de>
Date:   2016-07-21 16:08:01 +0200

    fetcher2/__init__: Print command in case of ExecutionError in runfetchcmd
    
    Signed-off-by: Mario Domenech Goulart <mario.goulart@bmw-carit.de>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/fetch2/__init__.py

commit cc1a1bc2ea6ae058278d4ecf483f5ea00502c6cb
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2016-07-21 14:43:32 +0100

    toaster: loadconf Partially add back some of the layerSource parsing
    
    Partially add back a revised version of the layersource handling so that
    we can continue to support the old toasterconf.json and it's setup of
    the local project.
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

82	3	lib/toaster/bldcontrol/management/commands/loadconf.py

commit 0b23b6919ef1162a0c7fb5b5a961a24653c51eb2
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2016-07-21 14:43:31 +0100

    toaster: admin Add Layer_Version to the admin-able models
    
    If the migration didn't get the release conversion right for say, a
    local or imported layer it would be handy to be able to edit this
    in the django admin page.
    
    Also useful for developers to be able to tweak layers on the fly.
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

11	7	lib/toaster/bldcollector/admin.py
11	0	lib/toaster/orm/models.py

commit f8f4cffe6fd371f3a7e63690c68f3fcb5dc1f297
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2016-07-21 14:43:30 +0100

    toaster: orm Remove the layerindex specific up_branch fields
    
    We don't need to keep track of layerindex data in our database. And
    using branch==release is very confusing in the schema. Instead use the
    existing Release definition to keep track of which release a
    layer_version is for.
    
    Remove the Branch model and all references to it.
    
    Create a migration path to convert from up_branches to their
    corresponding releases.
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	3	lib/bb/ui/buildinfohelper.py
1	1	lib/toaster/bldcontrol/management/commands/loadconf.py
17	6	lib/toaster/orm/management/commands/lsupdates.py
8	24	lib/toaster/orm/models.py
14	7	lib/toaster/toastergui/fixtures/toastergui-unittest-data.xml
1	1	lib/toaster/toastergui/tests.py
2	6	lib/toaster/toastergui/views.py

commit 6393dbf97d450d2521c0bc9429da0987bb7720ec
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2016-07-21 14:43:29 +0100

    toaster: lsupdates Add progress information and clean up logging
    
    Adds basic progress % information and provides better description of
    what is happening.
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

58	23	lib/toaster/orm/management/commands/lsupdates.py

commit 61a47cbc92c856690cb0e8da7102b2e669eaee0a
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2016-07-21 14:43:28 +0100

    toaster: tests: Remove references to LayerSource model
    
    Remove and replace layersource model references in the tests and test
    data. Remove the orm/test as this only tested LayerSource interactions
    which have now been removed.
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

0	18	lib/toaster/bldcontrol/management/commands/loadconf.py
0	180	lib/toaster/orm/tests.py
1	1	lib/toaster/tests/browser/test_layerdetails_page.py
0	39	lib/toaster/toastergui/fixtures/toastergui-unittest-data.xml
1	2	lib/toaster/toastergui/tests.py

commit 48c09c62eb979d840132e58144f0d81ffee675b1
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2016-07-21 14:43:27 +0100

    toaster: Replace references to LayerSource models
    
    Replace references to the now deprecated layersource models across
    Toaster with the new enums for layer source types.
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

0	19	lib/toaster/bldcontrol/tests.py
8	0	lib/toaster/orm/models.py
0	3	lib/toaster/tests/browser/test_layerdetails_page.py
2	4	lib/toaster/toastergui/api.py
1	1	lib/toaster/toastergui/static/js/layerdetails.js
8	8	lib/toaster/toastergui/templates/layerdetails.html
38	18	lib/toaster/toastergui/views.py

commit f83527edc6d52a34cd73a9c3650ee484407e2e0c
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2016-07-21 14:43:26 +0100

    toaster: lsupdates Add layerindex fetcher
    
    Move and refactor the layerindex layer source update mechanism so that
    we don't have to track the layerindex objects in the toaster database.
    Move this out of the orm and into the management command.
    
    Paves the way for future improvement to allow you to specify a layer
    index server as an argument to the command.
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

245	6	lib/toaster/orm/management/commands/lsupdates.py

commit 26624740418de95adb1f4a970a30a5f1149ebb79
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2016-07-21 14:43:25 +0100

    toaster: models Remove LayerSource models and replace with enum
    
    We had a lot of complexity around different layer sources to allow for
    multiple sources and different priorities for these source. This was
    implemented using rigged abstract classes which represented the
    different layer sources when in fact just an enum/flag on the
    layer_version object is sufficient for our needs.
    
    Remove the LayerSourcePriority object as this is not needed. We no longer
    have a problem of multiple layers coming from multiple sources so this
    is not needed. Two migrations are added to first remove the child models
    which represented layersources. Then a second migration is needed to
    remove the LayerSource model it's self as Django can't understand the
    non-standard base class dependency. Triggering this issue:
    https://docs.djangoproject.com/en/1.8/topics/migrations/#dependencies
    
    Clean up a number of flake8 warnings in classes which were modified.
    
    [YOCTO #9853]
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

103	378	lib/toaster/orm/models.py

commit 1c20ffcf88c5b73f6cf5e9b69b81e6bc8cd2493d
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2016-07-21 14:43:24 +0100

    toaster: bldcollector admin Remove LayerSourceAdmin
    
    Remove the LayerSource admin from django admin interface. LayerSources
    are not going to be manageable from the admin interface.
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	5	lib/toaster/bldcollector/admin.py

commit fd56c152699bc4c2d22b87728d0fefbff5209135
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2016-07-21 14:43:23 +0100

    toaster: loadconf remove Loading LayerSources
    
    We don't need to configure layer sources in the initial configuration as
    this information is provided by the models.
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	67	lib/toaster/bldcontrol/management/commands/loadconf.py

commit 923e68e069127ee7f6e11b91eb1cfa09d502a110
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2016-07-23 00:18:39 +1200

    lib/bb/progress: avoid possibility of start event being reported twice
    
    In MultiStageProgressReporter, set a guard when we start the progress
    so that it can't happen more than once. This fixes "Initialising
    tasks.." being shown twice in succession when running bitbake in
    non-interactive terminal mode.
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

4	1	lib/bb/progress.py

commit 235db4870b11db97250979e647b54cdb5ce4fbb6
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2016-07-23 00:18:38 +1200

    knotty: don't display ETA for tasks with progress
    
    It turns out that progress information we can extract from a task is
    rarely apportioned closely enough to the time taken for the ETA to be
    accurate, so showing it is going to be misleading most of the time for
    anything but the most basic of examples. Let's just remove it and avoid
    misleading (or worse, annoying) the user.
    
    Fixes [YOCTO #9986].
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/ui/knotty.py

commit 19e33c10feb1637589ceb05b5e8d58b1e012ccb8
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2016-07-23 00:18:37 +1200

    knotty: fix some minor bugs in BBProgress
    
    If you specify custom widgets then we don't want to assume where the
    "extra" position is - you should have to specify it, and if it isn't
    specified it shouldn't just wipe out the last widget or you can start to
    see odd behaviour if you're modifying the code.
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

13	12	lib/bb/ui/knotty.py

commit cfd481fe9799e7a4c6bfac32e56cc91cfcd81088
Author: Enrico Scholz <enrico.scholz@sigma-chemnitz.de>
Date:   2016-05-26 02:08:06 +0200

    fetch: copy files with -H
    
    When using a PREMIRROR with plain (non-unpack) files, a SRC_URI like
    
    SRC_URI = "file://devmem2.c"
    
    will cause devmem2.c to be a symlink in the WORKDIR pointing to the
    local PREMIRROR.
    
    Trying to apply a patch on this file will either modify the file on
    the PREMIRROR or will fail due to sanity checks:
    
    ERROR: devmem2-1.0-r7 do_patch: Command Error: 'quilt --quiltrc /cache/build-ubuntu/sysroots/x86_64-oe-linux/etc/quiltrc push' exited with 1  Output:
    Applying patch devmem2-fixups-2.patch
    File devmem2.c is not a regular file -- refusing to patch
    
    Signed-off-by: Enrico Scholz <enrico.scholz@sigma-chemnitz.de>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/fetch2/__init__.py

commit 14ec47f5f0566dbd280fae8a03160c8500ad3929
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2016-07-22 11:28:57 +0100

    cache: Don't interleave pickle cache file writing
    
    For some reason the data written in this way is coming back out the
    files out of order. I've not been able to simplify the test case to a
    point where this was standalone reproducible. Simplify the code and
    write out the cache files sequentially since this seems to avoid the
    errors and makes the code more readable.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

10	17	lib/bb/cache.py

commit 4be4a15491530bd6dc018033ad3d4b2562ab6e23
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2016-07-22 11:28:23 +0100

    cache: Add better cache loading sanity checks
    
    We've seen cache corruption where the pairs come out in a different
    order to the way we saved them for unknown reasons. Add better sanity
    checking to give a more user friendly error rather than a crash/traceback.
    
    Also allows the system to reparse and recover.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

7	0	lib/bb/cache.py

commit 5eb36278ac9975de1945f6da8161187320d90ba7
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2016-07-22 11:27:51 +0100

    cache: Drop/simplify pointless type checking
    
    Since we no longer have random data like version fields in these structures
    and we can assume any extra cache data subclasses our class, simplify the
    code.
    
    This is mostly reindenting after removal of the pointless type checks.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

60	67	lib/bb/cache.py

commit cb666262b2f986b5d9331dfb30458ef1a151fa4d
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2016-07-22 11:27:21 +0100

    cache: Improve versions fields handling
    
    Firstly, don't store the versions fields in memory in the cache objects
    data store. This just complicates the code for no good reason.
    
    Secondly, write the version fields to all cache files, not just the
    core one. This makes everything consistent and easier.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

20	23	lib/bb/cache.py

commit 51843d8f2bbe2e54db7593ca61984abe70423ef6
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2016-07-21 17:27:35 +0100

    cache: Correctly handle missing extra caches
    
    If an "extras" cache file is corrupted, the system would not notice
    and later fail with errors about missing entries. Add a test for this
    which means we can fall back to re-parsing in those cases.
    
    [YOCTO #9902]
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	0	lib/bb/cache.py

commit b48d95677a4d285a77cda2892179965f7f8f06dd
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2016-07-21 17:25:19 +0100

    cache: Move the parsing message to a more logical place
    
    Otherwise you can look at the log and wonder why parsing isn't happening
    when it really is due to other code paths.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/cache.py

commit 5fa0b3a19e7d0f40790f737abeddf499d53f1f6a
Author: Ed Bartosh <ed.bartosh@linux.intel.com>
Date:   2016-07-19 23:20:34 +0300

    bitbake: implement idle timeout for xmlrpc server
    
    Idle timeout can be specified either by -T/--idle-timeout option or
    by sessing BBTIMEOUT environment variable. Bitbake xmlrpc server
    will unload itself when timeout exprired, i.e. when server is idle
    for more than <idle timeout> seconds.
    
    [YOCTO #5534]
    
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

6	1	lib/bb/main.py
16	3	lib/bb/server/xmlrpc.py

commit 9d4254be5853a546a346bf0d19919dcfba12773d
Author: Ed Bartosh <ed.bartosh@linux.intel.com>
Date:   2016-07-19 22:54:38 +0300

    bitbake: implement --foreground command line option
    
    This option makes bitbake xmlrpc server to run in foreground.
    It should be useful for debugging purposes.
    
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

11	1	lib/bb/main.py

commit 6f6cd0674fd1595f4e74b7da692e0c348b2660c6
Author: Scott Rifenbark <srifenbark@gmail.com>
Date:   2016-06-07 18:24:27 -0700

    bitbake-user-manual: Added new section on command-line execution
    
    Needed a section on executing a list of task and recipe combinations.
    
    Signed-off-by: Scott Rifenbark <srifenbark@gmail.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

19	0	doc/bitbake-user-manual/bitbake-user-manual-intro.xml

commit a5d36e8bccf35ffbca41a4facaa041d36f587529
Author: Scott Rifenbark <srifenbark@gmail.com>
Date:   2016-07-19 11:35:26 -0700

    bitbake-user-manual: Applied review edits to "Recursive Dependencies"
    
    Added a minor tweak to the third paragraph to be more inclusive
    of the topic.
    
    Fixes [YOCTO #9970]
    
    Signed-off-by: Scott Rifenbark <srifenbark@gmail.com>

2	1	doc/bitbake-user-manual/bitbake-user-manual-metadata.xml

commit 475e7611f6c5b884d86152cb0b334e9d96849608
Author: Scott Rifenbark <srifenbark@gmail.com>
Date:   2016-07-16 12:04:57 -0700

    bitbake-user-manual: Fixed typo in the BBDEBUG variable description.
    
    In the BBDEBUG variable description, the "-d" parameter needed to
    be "-D".  Fixed it.
    
    Fixes [YOCTO #9950]
    
    Signed-off-by: Scott Rifenbark <srifenbark@gmail.com>

1	1	doc/bitbake-user-manual/bitbake-user-manual-ref-variables.xml

commit e9ad2e0f6d2681dd793cc39c468eb86e57fd6f48
Author: Scott Rifenbark <srifenbark@gmail.com>
Date:   2016-07-14 12:52:30 -0700

    bitbake-user-manual: Added review changes to BBCLASSEXTEND description
    
    Fixes [YOCTO #9909]
    
    Added some technical clarifications to the existing note to be clear
    about what is causing the limitations in this case.  Applied some
    formatting fixed to for the use of the include word.
    
    Signed-off-by: Scott Rifenbark <srifenbark@gmail.com>

9	7	doc/bitbake-user-manual/bitbake-user-manual-ref-variables.xml

commit ada90f68afd17cb85cb5957f3f91b537ee3599f6
Author: Scott Rifenbark <srifenbark@gmail.com>
Date:   2016-07-14 12:00:09 -0700

    bitbake-user-manual: Added review changes to recursive section.
    
    Applied formatting to a "after" word that should be
    <filename>after</filename>.  Also added a new clarifying paragraph in
    the "Recursive Dependencies" section.
    
    Fixes [YOCTO #9861]
    
    Signed-off-by: Scott Rifenbark <srifenbark@gmail.com>

14	1	doc/bitbake-user-manual/bitbake-user-manual-metadata.xml

commit 47e03b1789ee1c18407dbac33a6c235752019865
Author: Andrew Bradford <andrew.bradford@kodakalaris.com>
Date:   2016-07-14 11:42:56 -0700

    bitbake-user-manual: Addeds support for the Perforce Fetcher
    
    Added a new Perforce Fetcher section in the same spirit as the existing
    sections for other supported fetchers.  Changes included the new section,
    removal of the bulleted item that mentioned this fetcher as an
    "additional" fetcher, and the creation of a new variable in the glossary
    named P4DIR.
    
    Signed-off-by: Scott Rifenbark <srifenbark@gmail.com>

64	5	doc/bitbake-user-manual/bitbake-user-manual-fetching.xml
10	1	doc/bitbake-user-manual/bitbake-user-manual-ref-variables.xml

commit 185c9c5fc205fe9c9daf5238f11b92bd0954f5c6
Author: Scott Rifenbark <srifenbark@gmail.com>
Date:   2016-07-12 14:08:32 -0700

    bitbake-user-manual: Added clarifying note to BBCLASSEXTEND variable.
    
    Fixes [YOCTO #9909]
    
    Added a note that talks about how the BBCLASSEXTEND mechanism
    adds recipe variants.
    
    Signed-off-by: Scott Rifenbark <srifenbark@gmail.com>

21	0	doc/bitbake-user-manual/bitbake-user-manual-ref-variables.xml

commit c2e72928fbd21d622860a54a55f4239ba27c07a2
Author: Scott Rifenbark <srifenbark@gmail.com>
Date:   2016-07-12 13:41:12 -0700

    bitbake-user-manual: Added a note providing examples of task dependencies
    
    Fixes [YOCTO #9861]
    
    In the "Dependencies internal to the .bb File" section, I placed a
    note providing more detail on how recipes are built regarding task
    dependency.
    
    Signed-off-by: Scott Rifenbark <srifenbark@gmail.com>

34	0	doc/bitbake-user-manual/bitbake-user-manual-metadata.xml

commit 231deeb2b0b3847cba971ca30c16e29357100ae6
Author: Scott Rifenbark <srifenbark@gmail.com>
Date:   2016-07-11 14:24:22 -0700

    bitbake-user-manual: Updated dependency section for tasks
    
    Fixes [YOCTO #9861]
    
    I updated the section on dependencies to give a couple of examples
    for task dependencies within a single recipe and dependencies for
    tasks between two individual recipes.
    
    Signed-off-by: Scott Rifenbark <srifenbark@gmail.com>

26	9	doc/bitbake-user-manual/bitbake-user-manual-metadata.xml

commit 886afd6d876c9ae04cf681931db8f1774dc53096
Author: Scott Rifenbark <srifenbark@gmail.com>
Date:   2016-06-09 10:32:39 -0700

    bitbake-user-manual: Updated the defaults for getVar and getVarFlag
    
    There is no default.
    
    Fixes [YOCTO #9683]
    
    Signed-off-by: Scott Rifenbark <srifenbark@gmail.com>

5	5	doc/bitbake-user-manual/bitbake-user-manual-metadata.xml

commit 17f7f366df3a5951ae88e24c43aecf3d65d83c14
Author: Scott Rifenbark <srifenbark@gmail.com>
Date:   2016-06-07 18:24:27 -0700

    bitbake-user-manual: Added new section on command-line execution
    
    Needed a section on executing a list of task and recipe combinations.
    
    Signed-off-by: Scott Rifenbark <srifenbark@gmail.com>

19	0	doc/bitbake-user-manual/bitbake-user-manual-intro.xml

commit 689730dbb068c5ea3593e7b92fe5d5e5c0c3760a
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2016-07-20 16:08:17 +0100

    cooker: Fix incorrect dot file generation
    
    In the runqueue cleanup/conversion, "dep" was mistakenly used where "tid" should
    be leading to incorrect task-depends.dot files and causing general confusion.
    Fix this, its clearly incorrect looking at the code.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/cooker.py

commit 1177b3f368d8b7f8557eb649adb2e327b6df801c
Author: Aníbal Limón <anibal.limon@linux.intel.com>
Date:   2016-07-19 16:49:10 +0100

    toaster-tests: add class SeleniumTestCaseBase for browser tests
    
    In order to reuse the Selenium helper outside a Django
    environment (for functional testing), add a new module
    containing the base class SeleniumTestCaseBase, which only
    inherits unittest.TestCase
    
    Add a class SeleniumTestCase with multiple inheritance of
    StaticLiveServerTestCase and SeleniumTestCaseBase to prevent
    existing tests from breaking.
    
    Signed-off-by: Aníbal Limón <anibal.limon@linux.intel.com>
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	181	lib/toaster/tests/browser/selenium_helpers.py

commit 89c6e625d47303b2aad8e6645762f17aee01b2d4
Author: Ed Bartosh <ed.bartosh@linux.intel.com>
Date:   2016-07-18 19:07:18 +0300

    bitbake: main: implement server autostart feature
    
    If environment variable BBSERVER == 'autostart' bitbake will
    automatically load server if it's not running yet.
    
    If host and port are in bitbake.lock then bitbake tries to check
    if server is running and responses to commands and starts new
    server only if this check fails.
    
    [YOCTO #5534]
    
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

16	5	lib/bb/main.py

commit 15c4ea679f4fe097a9f21cccfc82907b5f39a4e4
Author: Ed Bartosh <ed.bartosh@linux.intel.com>
Date:   2016-07-18 19:07:17 +0300

    bitbake: utils: add BBSERVER to the list of preserved variables
    
    All environment variables that are not in the list returned by
    preserved_envvars_exported are cleaned by bb.utils.clean_environment.
    
    Added BBSERVER to the list as we need to access it in bb/main.py
    after the call of bb.utils.clean_environment.
    
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	0	lib/bb/utils.py

commit 1a18f5ceb478f766b53850451549333f655621ea
Author: Ed Bartosh <ed.bartosh@linux.intel.com>
Date:   2016-07-18 19:07:16 +0300

    bitbake: xmlrpc: implement check of connection to server
    
    Implemented check_connection function. The purpose of this function
    is to check if bitbake server is accessible and functional.
    To check this this function tries to connect to bitbake server and
    run getVariable command.
    
    This API is going to be used to implement autoloading of bitbake
    server.
    
    [YOCTO #5534]
    
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

17	0	lib/bb/server/xmlrpc.py

commit a4463e2ff3c7d234320176d671719243292f1af0
Author: Ross Burton <ross.burton@intel.com>
Date:   2016-07-18 23:10:41 +0100

    lib/bb/utils: no need to unsetenv when manipulating os.environ
    
    Doing both os.unsetenv(foo) and then del os.environ[foo] is pointless as del
    will call unsetenv automatically.
    
    Signed-off-by: Ross Burton <ross.burton@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

0	1	lib/bb/utils.py

commit 4027649f422ee64b1c4e1ad8d48ac295050afbff
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2016-07-06 16:26:10 +1200

    fetch2: implement progress support
    
    Implement progress reporting support specifically for the fetchers. For
    fetch tasks we don't necessarily know which fetcher will be used (we
    might initially be fetching a git:// URI, but if we instead download a
    mirror tarball we may fetch that over http using wget). These programs
    also have different abilities as far as reporting progress goes (e.g.
    wget gives us percentage complete and rate, git gives this some of the
    time depending on what stage it's at). Additionally we filter out the
    progress output before it makes it to the logs, in order to prevent the
    logs filling up with junk.
    
    At the moment this is only implemented for the wget and git fetchers
    since they are the most commonly used (and svn doesn't seem to support
    any kind of progress output, at least not without doing a relatively
    expensive remote file listing first).
    
    Line changes such as the ones you get in git's output as it progresses
    don't make it to the log files, you only get the final state of the line
    so the logs aren't filled with progress information that's useless after
    the fact.
    
    Part of the implementation for [YOCTO #5383].
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Ross Burton <ross.burton@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	2	lib/bb/fetch2/__init__.py
48	4	lib/bb/fetch2/git.py
26	2	lib/bb/fetch2/wget.py
31	0	lib/bb/progress.py

commit 3d5090af4475b1d0bb56911a8e30abf9097c1b3c
Author: Elliot Smith <elliot.smith@intel.com>
Date:   2016-07-12 15:54:58 -0700

    toaster-tests: package count/size shouldn't show for non-image builds
    
    If a build doesn't produce any image files, the package count
    and size shouldn't be shown.
    
    Also add some metadata to build dashboard elements so it is clear
    what they're for, and so they can be queried by the tests.
    
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: bavery <brian.avery@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

41	1	lib/toaster/tests/browser/test_builddashboard_page_artifacts.py
22	7	lib/toaster/toastergui/templates/builddashboard.html

commit 9bc014d89434400c1493fa9f07ce3a51d37dab51
Author: Elliot Smith <elliot.smith@intel.com>
Date:   2016-07-12 15:54:57 -0700

    toaster-tests: new custom image button shouldn't show for non-image builds
    
    [YOCTO #9514]
    
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: bavery <brian.avery@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

20	0	lib/toaster/tests/browser/test_builddashboard_page.py

commit 644a888ce5a2141f2e6e1c22430e196b65cb1313
Author: Elliot Smith <elliot.smith@intel.com>
Date:   2016-07-12 15:54:56 -0700

    toaster-tests: add tests for build artifact display on build dashboard
    
    Add tests for display of image, kernel and SDK artifacts on the
    build dashboard, checking that the "Images" option in the left-hand
    menu and the "Build artifacts" section display correctly for
    different types of build.
    
    Also add metadata to elements on the build dashboard so it's clearer
    what they represent, and to assist in finding them in the tests.
    
    Add a method to the test helper to make it more convenient to check
    whether a single element matching a selector exists.
    
    [YOCTO #8556]
    [YOCTO #8563]
    [YOCTO #9500]
    
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: bavery <brian.avery@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

7	0	lib/toaster/tests/browser/selenium_helpers.py
177	0	lib/toaster/tests/browser/test_builddashboard_page_artifacts.py
1	1	lib/toaster/toastergui/templates/basebuildpage.html
6	6	lib/toaster/toastergui/templates/builddashboard.html

commit 6648876c91134bda8498b4f8d7ace9147ec0d985
Author: Elliot Smith <elliot.smith@intel.com>
Date:   2016-07-12 15:54:55 -0700

    toaster: the customise image button shouldn't rely on targets
    
    The build dashboard customise image button (for creating a new
    custom image based on an image recipe used by a build) shouldn't
    rely on targets: whether a new custom image can be created or not
    depends on whether any of the recipes used by the build are image
    recipes.
    
    Modify the method used to determine whether a build has customisable
    images to look at the image recipes used during the build, rather
    than whether the targets run by the build refer to image recipes.
    
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: bavery <brian.avery@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	8	lib/toaster/orm/models.py
1	1	lib/toaster/toastergui/templates/basebuildpage.html

commit 79b8e349a0da2ea6b97ad82daa5837e6dfffe0af
Author: Elliot Smith <elliot.smith@intel.com>
Date:   2016-07-12 15:54:54 -0700

    toaster: add package manifest path to Target objects
    
    Store the path to the *.rootfs.manifest file for targets which
    generate images.
    
    A link to the package manifest is displayed in the build dashboard
    for targets which produce image files.
    
    Like the license manifest path, if a target would have produced
    the package manifest (but didn't, because it already existed), that
    path is copied from the target which did produce the package
    manifest.
    
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: bavery <brian.avery@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

21	3	lib/bb/ui/buildinfohelper.py
19	0	lib/toaster/orm/migrations/0009_target_package_manifest_path.py
5	3	lib/toaster/orm/models.py
6	0	lib/toaster/toastergui/templates/builddashboard.html
3	0	lib/toaster/toastergui/views.py

commit b4dce68045c4615e7a6a474e952f670721a3b54e
Author: Elliot Smith <elliot.smith@intel.com>
Date:   2016-07-12 15:54:53 -0700

    toaster: better display of targets which produced no images
    
    SDK targets (populate_sdk) produce SDK artifacts but no image files.
    Currently, these targets appear under the "Images" heading in the
    build dashboard, even though they aren't strictly image targets.
    
    Change the heading to "Build artifacts". Also remove the section
    which states that a build produced no image files: this is not
    correct for populate_sdk targets (those targets don't produce
    image files under any circumstances); and other changes mean
    that all targets which do produce images will now show those
    files.
    
    The check for whether to display the "Build artifacts" section also
    needs to change, as we show targets here which didn't produce any
    images but did produce SDK artifacts.
    
    [YOCTO #8556]
    
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: bavery <brian.avery@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

5	24	lib/toaster/toastergui/templates/builddashboard.html
31	20	lib/toaster/toastergui/views.py

commit 58cb685b567a081834a605530957f165d35fcf5e
Author: Elliot Smith <elliot.smith@intel.com>
Date:   2016-07-12 15:54:52 -0700

    toaster: show manifests in their own section of the build dashboard
    
    In the build dashboard, add a section for manifests to each target,
    which will contain the license and package manifests for a target.
    
    As we don't record the package manifest (yet), just move the
    license manifest link to that section for now.
    
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: bavery <brian.avery@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

7	4	lib/toaster/toastergui/templates/builddashboard.html

commit 3c4b053e44ea512ef2ced67289a7b0161db6ce9b
Author: Elliot Smith <elliot.smith@intel.com>
Date:   2016-07-12 15:54:51 -0700

    toaster: only show "New custom image" button for builds with image targets
    
    Add a has_image_targets() method to Build, and use that to hide
    the "New custom image" button on the build dashboard if a build
    has no targets which build images.
    
    [YOCTO #9514]
    
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: bavery <brian.avery@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

13	0	lib/toaster/orm/models.py
22	20	lib/toaster/toastergui/templates/basebuildpage.html

commit f6bba0ff254d5ed3163151d4b938f3a43c9acb0a
Author: Elliot Smith <elliot.smith@intel.com>
Date:   2016-07-12 15:54:50 -0700

    toaster: use has_images() methods to display images correctly
    
    In the build dashboard, we had issues with showing images correctly,
    as we were using the is_image property of targets to determine
    whether a target would have image files. This property can
    be set to True if a target refers to an image recipe
    (e.g. "core-image-minimal"), even if the task used in the build
    didn't produce any image files.
    
    By adding has_images() methods to the Target and Build objects,
    which count associated Target_Image_File objects,
    we can correctly determine whether a target has image files
    associated with it, and if any of the targets for a build has
    image files. This means that we can screen out the left-hand
    "Images" menu options for builds which contained image-related
    targets (e.g. "core-image-minimal") but which didn't produce
    any images (e.g. "rootfs" task).
    
    [YOCTO #9500]
    [YOCTO #9784]
    
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: bavery <brian.avery@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

26	2	lib/toaster/orm/models.py
5	3	lib/toaster/toastergui/templates/basebuildpage.html
2	7	lib/toaster/toastergui/views.py

commit 44375d0c2a88e0070b8067c9285b89c54eaf3152
Author: Elliot Smith <elliot.smith@intel.com>
Date:   2016-07-12 15:54:49 -0700

    buildinfohelper: only record image files for tasks which make images
    
    If a target is built which is classified as an "image" target
    (e.g. "core-image-minimal"), Toaster reads the list of files in
    the image (from the files-in-image.txt file).
    
    However, Toaster continues to do this for builds which don't
    produce images, if the recipe providing the target is an
    image recipe. This can result in a list of files in the image
    being attached to a target which didn't produce an image (e.g.
    rootfs).
    
    When associating files with an image, ensure that only targets
    with a task which produces an image have "files in the image"
    associated with them.
    
    [YOCTO #9784]
    
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: bavery <brian.avery@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

15	5	lib/bb/ui/buildinfohelper.py

commit 5e650c611605507e1e0d1588cd5eb6535c2d34fc
Author: Elliot Smith <elliot.smith@intel.com>
Date:   2016-07-12 15:54:48 -0700

    toaster: improve scan for SDK artifacts
    
    SDK artifacts were previously picked up by toaster.bbclass and
    notified to buildinfohelper (via toasterui). The artifacts
    were then added to the Build object, so that it wasn't clear
    which artifact went with which target; we were also unable
    to attach SDK artifacts to a Build if they had already been
    attached to a previous build.
    
    Now, toaster.bbclass just notifies the TOOLCHAIN_OUTPUTNAME when
    a populate_sdk* target completes. The scan is moved to buildinfohelper,
    where we search the SDK deploy directory for files matching
    TOOLCHAIN_OUTPUTNAME and attach them to targets (not builds).
    
    If an SDK file is not produced by a target, we now look for a
    similar, previously-run target which did produce artifacts.
    If there is one, we clone the SDK artifacts from that target
    onto the current one.
    
    This all means that we can show SDK artifacts by target, and should
    always get artifacts associated with a target, regardless of whether
    it really build them.
    
    This requires an additional model, TargetSDKFile, which tracks
    the size and path of SDK artifact files with respect to Target
    objects.
    
    [YOCTO #8556]
    
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: bavery <brian.avery@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

134	41	lib/bb/ui/buildinfohelper.py
4	3	lib/bb/ui/toasterui.py
39	0	lib/toaster/orm/migrations/0008_refactor_artifact_models.py
0	23	lib/toaster/orm/migrations/0008_targetartifactfile.py
70	42	lib/toaster/orm/models.py
41	23	lib/toaster/toastergui/templates/builddashboard.html
12	7	lib/toaster/toastergui/views.py

commit 1c0a689fdaae6469d4afb98583161073d32ea50b
Author: Elliot Smith <elliot.smith@intel.com>
Date:   2016-07-12 15:54:47 -0700

    buildinfohelper: fix retrieval of targets
    
    When buildinfohelper records the targets for a build, it looks
    up any existing targets for a build and creates them if they
    are not present. This is because in the case of Toaster-triggered
    builds, the Target objects have already been created (inside
    triggerBuild()) and don't need to be recreated; but in the case
    of cli builds, the Target objects have to be created by
    buildinfohelper.
    
    The issue is that the code for retrieving an existing target for
    a build only looks for Targets with a matching target and build,
    e.g. Targets for build X with target "core-image-minimal". But it
    is perfectly legitimate to call bitbake with a command like
    "bitbake core-image-minimal:do_populate_sdk
    core-image-minimal:do_populate_sdk_ext". In such a case, the
    code which looks for matching targets finds two objects, as it
    doesn't filter by task.
    
    Add the task into the filter for the Target so that only one
    Target object is be returned. Note that a command
    line like "bitbake recipe:task recipe:task" will still cause an
    error as bitbake doesn't de-duplicate the command line arguments
    and will run the recipe:task combination twice.
    
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: bavery <brian.avery@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

8	7	lib/bb/ui/buildinfohelper.py

commit 9b151416e428c2565a27d89116439f9a8d578e3d
Author: Elliot Smith <elliot.smith@intel.com>
Date:   2016-07-12 15:54:46 -0700

    toaster: attach kernel artifacts to targets
    
    The bzImage and modules files were previously attached to a build,
    rather than to the target which produced them. This meant it was
    not possible to determine which kernel artifact produced by a
    build came from which target; which in turn made it difficult to
    associate existing kernel artifact with targets when those
    targets didn't produce artifacts (e.g. if the same machine + target
    combination was built again and didn't produce a bzImage or modules
    file because those files already existed).
    
    By associating kernel artifacts with the target (via a new
    TargetArtifactFile model), we make it possible to find all
    the artifacts for a given machine + target combination. Then, in
    cases where a build is completed but its targets don't produce
    any artifacts, we can find a previous Target object with the same
    machine + target and copy its artifacts to the targets for a
    just-completed build.
    
    Note that this doesn't cover SDK artifacts yet, which are still
    retrieved in toaster.bbclass and show up as "Other artifacts",
    lumped together for the whole build rather than by target.
    
    [YOCTO #8556]
    
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: bavery <brian.avery@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

56	29	lib/bb/ui/buildinfohelper.py
23	0	lib/toaster/orm/migrations/0008_targetartifactfile.py
121	2	lib/toaster/orm/models.py
14	1	lib/toaster/toastergui/templates/builddashboard.html
7	0	lib/toaster/toastergui/views.py

commit 9c38de3dec74c122c2060cad37331bdafc6858ec
Author: Elliot Smith <elliot.smith@intel.com>
Date:   2016-07-12 15:54:45 -0700

    toaster: improve image file suffix retrieval
    
    Refactor retrieval of suffix from image file path, making it a
    a method on Target_Image_File. This makes it easier to use this
    in the build dashboard for individual images, plus reduces the
    complexity of the code required to get all of the image file
    suffixes for a build.
    
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: bavery <brian.avery@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

11	37	lib/toaster/orm/models.py

commit f0085cd554604cfff4a3f40a34825fbb6878004f
Author: Elliot Smith <elliot.smith@intel.com>
Date:   2016-07-12 15:54:44 -0700

    toaster: do image and artifact scan on BuildCompleted
    
    Move the image and artifact scan code from toaster.bbclass and
    consolidate its logic with the existing logic in buildinfohelper.
    
    Remove handler setup for events which used to be fired from
    toaster.bbclass but which are now handled directly by buildinfohelper.
    
    [YOCTO #8556]
    
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: bavery <brian.avery@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

179	22	lib/bb/ui/buildinfohelper.py
2	4	lib/bb/ui/toasterui.py

commit 33a24992139e7dc05d14bbe1da60299b732945aa
Author: Elliot Smith <elliot.smith@intel.com>
Date:   2016-07-12 15:54:43 -0700

    toaster: display Target targets in build dashboard
    
    The build dashboard was showing the targets for the build in the page
    heading and title as "Target object".
    
    Add a filter which extracts the "target" from each Target object
    as a string so that the heading and title display correctly.
    
    Also sort the image file suffixes alphabetically.
    
    [YOCTO #8556]
    
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: bavery <brian.avery@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

5	4	lib/toaster/toastergui/templates/builddashboard.html
18	0	lib/toaster/toastergui/templatetags/field_values_filter.py

commit e191f401e372ee181bc02250232ad9cb9a0e9477
Author: Ed Bartosh <ed.bartosh@linux.intel.com>
Date:   2016-07-15 09:44:01 -0700

    runqueue: improve exception logging
    
    Runqueue errors direct the user to view the "failure below",
    but no additional error message is available.
    
    Log the stacktrace so that the user can see what went wrong.
    
    Also fix a typo in the log message.
    
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: bavery <brian.avery@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	2	lib/bb/runqueue.py

commit a392f19f16ef8202ce3c12afbeb186a02438da17
Author: Robert Yang <liezhi.yang@windriver.com>
Date:   2016-07-17 20:42:51 -0700

    lib/bb/utils.py: return sorted OrderedDict in explode_dep_versions2
    
    The OrderedDict's item is sorted by insertion order, there might be a
    problem when build the same recipe again, for example:
    - First build of acl:
      Depends: libattr1 (>= 2.4.47), libc6 (>= 2.24)
    - Second build of acl:
      Depends: libc6 (>= 2.24), libattr1 (>= 2.4.47)
    
    They are exactly the same depends, but tools like "diff" doesn't think
    so. Return sorted OrderedDict will fix the problem.
    
    Signed-off-by: Robert Yang <liezhi.yang@windriver.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	0	lib/bb/utils.py

commit 59cb919e5cd5c653fb4d69b2d6a4320648443e10
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2016-07-15 20:54:30 +1200

    knotty: avoid errors when fetching outside of a task
    
    In a few places we use the fetcher code to fetch files outside of a
    task, for example uninative in OE. In that case the pid of the event is
    0 and that was causing an error in BBUIHelper.eventHandler(). Check the
    pid and do nothing if it's 0.
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

4	3	lib/bb/ui/uihelper.py

commit 67a7b8b021badc17d8fdf447c250e79d291e75f7
Author: Ross Burton <ross.burton@intel.com>
Date:   2016-07-14 19:56:22 +0100

    build: don't use $B as the default cwd for functions
    
    When bitbake executes a shell or Python function it can cd/chdir() into a
    directory before executing the task. If no directory is specified then the
    default of $B is used.  However $B is an OpenEmbedded variable and BitBake
    shouldn't be aware of it.
    
    To solve this change the semantics slightly so that if no directory is
    specified, the current working directory isn't changed.  There's also a sanity
    check that emits a warning if a Python task does os.chdir() without restoring
    the old path, and the previous working directory is restored.
    
    This does change semantics: whereas before a function in OE would have $B as the
    working directory unless specified, now the working directory is the top of the
    build tree.  Any breakage this causes can be solved by either adding
    do_some_task[dirs] = "${B}" or by using absolute paths in the task.
    
    [ YOCTO #4634 ]
    
    Signed-off-by: Ross Burton <ross.burton@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

17	6	lib/bb/build.py

commit 42d727743fa599e0a3c5ad2c29a1e6ede1a918bb
Author: Ross Burton <ross.burton@intel.com>
Date:   2016-07-15 11:25:42 +0100

    lib/bb/build.py: decode the command as UTF-8
    
    The messaging FIFO is UTF-8, so decode the command as UTF-8 as well as the value
    as otherwise "bberror" != b("bberror") and none of the messages from shell
    functions are ever displayed.
    
    Also add an else to the command parser so unhandled commands are noticed.
    
    [ YOCTO #9947 ]
    
    Signed-off-by: Ross Burton <ross.burton@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

6	2	lib/bb/build.py

commit 6576a9a95486c28a01d4211b4a33cc3e2c55a7cc
Author: Ross Burton <ross.burton@intel.com>
Date:   2016-07-12 16:14:25 +0100

    lib/bb/utils: fix set_process_name
    
    With Python 3 create_string_buffer needs a bytes() not a str() but as we were
    catching all exceptions nobody noticed.
    
    [ YOCTO #9910 ]
    
    Signed-off-by: Ross Burton <ross.burton@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	3	lib/bb/utils.py

commit cabe7e2459fcd561bced2d39ba5bd173576153e5
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2016-07-06 18:22:39 +0100

    toaster: tests Add selenium test for layerdetails page
    
    This tests:
     - Adding remove layer from project
     - Deleting layer
     - Editing layer fields
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

190	0	lib/toaster/tests/browser/test_layerdetails_page.py

commit 91815229f60eb9deba7d299f05c69b52ff1df59c
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2016-07-06 18:22:38 +0100

    toaster: add Layer delete front end feature to layerdetails
    
    Add the front end feature to delete a layer from the layer details page.
    
    [YOCO #9184]
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

20	0	lib/toaster/toastergui/static/js/layerdetails.js
18	0	lib/toaster/toastergui/static/js/projectpage.js
19	1	lib/toaster/toastergui/templates/layerdetails.html
1	1	lib/toaster/toastergui/urls.py

commit aa0845242eda8650a97180bf6675551c26554cde
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2016-07-06 18:22:37 +0100

    toaster: api Add util function for returning the error response
    
    Also clean up flake8 warnings in XhrBuildRequest
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

16	12	lib/toaster/toastergui/api.py

commit 20f4e23bc86290f0a42881a7cac44c41eafa86fc
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2016-07-06 18:22:36 +0100

    toaster: layerdetails api Fix saving of git revision of a layer
    
    Update, clean up and move the api for updating a layerversion from the
    views to api. Also update the layerdetails page to include the
    layerversion id in the url getter.
    
    [YOCTO #8952]
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

98	1	lib/toaster/toastergui/api.py
1	1	lib/toaster/toastergui/templates/layerdetails.html
4	1	lib/toaster/toastergui/urls.py
0	43	lib/toaster/toastergui/views.py

commit df9f4337bec87024ea6a43138c6080a755eb7fab
Author: Elliot Smith <elliot.smith@intel.com>
Date:   2016-07-06 12:00:35 +0100

    buildinfohelper: ensure task datetimes are timezone-aware
    
    When using toaster-eventreplay to run a bitbake event file
    through toasterui/buildinfohelper, errors occur when the
    tasks are updated with buildstats info:
    
      RuntimeWarning: DateTimeField Task.started received a naive
      datetime (2016-07-06 09:15:22.070000) while time zone support
      is active.
    
    This is because a method in buildinfohelper returns a naive
    datetime, but Django is expecting timezone-aware datetimes.
    
    Ensure that datetimes used to set the started/ended times on
    tasks are converted to timezone-aware datetimes.
    
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/ui/buildinfohelper.py

commit 45370a860b24a761d1b6e08ba752079cc45f54da
Author: Ed Bartosh <ed.bartosh@linux.intel.com>
Date:   2016-07-06 12:00:34 +0100

    eventreplay: rewrite the script
    
    Rewritten toaster-eventreplay to make code working as expected,
    more compact and readable.
    
    [YOCTO #9585]
    
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

82	125	bin/toaster-eventreplay

commit 332f5c9b20149e9f5757433df9458ce582ff32dd
Author: Ed Bartosh <ed.bartosh@linux.intel.com>
Date:   2016-07-06 12:00:33 +0100

    eventreplay: reorganize imports
    
    Cleaned up module imports:
    - Removed unused imports
    - Removed import of print_function
    - Removed duplicated imports
    - Splitted importing bb.lib to 2 lines
    
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

6	11	bin/toaster-eventreplay

commit 5d4df14b0d38f6c89ca16de6dada58b4bb015d71
Author: Ed Bartosh <ed.bartosh@linux.intel.com>
Date:   2016-07-06 12:00:32 +0100

    eventreplay: replace MockConfigParameters with namedtuple
    
    class MockConfigParameters has only one attribute and only __init__
    method. Replacing it with namedtuple makes code less nested and more
    readable.
    
    [YOCTO #9585]
    
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	12	bin/toaster-eventreplay

commit a55c280c167f84caed6518119246e5a55f56cfd4
Author: Ed Bartosh <ed.bartosh@linux.intel.com>
Date:   2016-07-06 12:00:31 +0100

    eventreplay: fix event loading code
    
    Event objects are represented by base64-encoded strings in
    the event file and can't be loaded by existing eventreplay code.
    
    Fixed the code of loading events from file by decoding base64 strings
    into the binary form and loading them with pickle.load.
    
    [YOCTO #9585]
    
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	1	bin/toaster-eventreplay

commit 2e09074c70e89402de8f883dd402cd729118fc7e
Author: Ed Bartosh <ed.bartosh@linux.intel.com>
Date:   2016-07-06 12:00:30 +0100

    eventprelay: implement setEventMask command
    
    Stored event mask list as self.eventmask for future use.
    Fixed Exception: Command setEventMask not implemented.
    
    [YOCTO #9585]
    
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

6	0	bin/toaster-eventreplay

commit 6deae30480a4288da0c8b3529e61f3495f260f24
Author: Ed Bartosh <ed.bartosh@linux.intel.com>
Date:   2016-07-06 12:00:29 +0100

    eventreplay: add MockConnection.getEventHandle method
    
    Fixed AttributeError: 'MockConnection' object has no attribute
    'getEventHandle'
    
    [YOCTO #9585]
    
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	0	bin/toaster-eventreplay

commit 01659389813ad61d4f75b9f8d71528581322f0b0
Author: Elliot Smith <elliot.smith@intel.com>
Date:   2016-07-04 12:52:53 +0100

    toaster: fix layout for command-line builds in recent builds area
    
    Command-line builds were displayed incorrectly, so that the
    HTML elements for other builds were being "consumed" by the
    command-line build elements due to incorrect positioning of
    element end tags.
    
    Fix by ensuring end tags close elements in the right places.
    
    As the indentation was all over the place in the most recent
    builds section template, it was almost impossible to see what the
    problem was. So that was fixed, too.
    
    [YOCTO #9842]
    
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

123	124	lib/toaster/toastergui/templates/mrb_section.html

commit b26bcff4c4d72775f1def7e769015464953b955c
Author: Ed Bartosh <ed.bartosh@linux.intel.com>
Date:   2016-07-05 00:53:59 +0300

    bitbake-worker: don't reassign sys.stdout
    
    Worker needs input stream in binary mode as it reads binary content
    from it. Current code does it by detaching a buffer from sys.stdin
    and assigning it back to sys.stdin.
    
    Detached buffer is io.BufferedReader in binary mode. This operation
    is implicit as its purpose is not easily understandable from the code.
    Replacing it with fdopen(sys.stdin.fileno(), 'rb') should make the
    code more understandable.
    
    Assigning the buffer to sys.stdin is not needed as worker doesn't
    use sys.stdin. Moreover, it leads to difficult to debug issues down
    the stack. For example, devpyshell doesn't work without reopening
    sys.stdin in text mode. This is not needed anymore after this fix as
    sys.stdin is not changed in worker code and remains in text mode.
    
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	2	bin/bitbake-worker

commit 860475cfdd35301fb609ab3c89347566b0ca0adc
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2016-07-04 16:34:46 +0100

    toaster: views Fix most frequently built target in project reporting
    
    Clean up and fix the most frequently built targets for the "Most built
    recipes" section for the project configuration page.
    
    [YOCTO #9846]
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

32	10	lib/toaster/toastergui/views.py

commit ec083fd943c6996307beb3be3421403870d2f2b7
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2016-07-04 16:34:45 +0100

    toaster: layerBtn avoid connecting handler to other build buttons
    
    Some pages contain other build buttons which may have the same class
    attached. Make sure that we only select the buttons in the tables where
    layerBtn is used.
    
    [YOCTO #9841]
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	2	lib/toaster/toastergui/static/js/layerBtn.js

commit 1531e98c5ae1693d11d692c3589df29dff9364df
Author: Sujith H <sujith.h@gmail.com>
Date:   2016-06-22 10:10:42 +0100

    bitbake: toaster-tests: tests for project config
    
    Add basic tests to validate the value, user types
    in the text box for DL_DIR and SSTATE_DIR. Added
    test case to validate the first char and inclusion
    of space between the characters.
    
    [YOCTO #9646]
    
    Signed-off-by: Sujith H <sujith.h@gmail.com>
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

113	0	lib/toaster/tests/browser/test_project_config_page.py

commit fca50153caef62a473d1812fd59ec7effe09f8c5
Author: Sujith H <sujith.h@gmail.com>
Date:   2016-06-22 10:10:41 +0100

    toaster: fix validation checks for DL_DIR and SSTATE_DIR
    
    Validation logic on the project configuration page
    prevented a user from adding ${variable} to these paths.
    
    Update validation so a user can see a better message
    when they type characters into the text inputs.
    Two types of validation are implemented.
    
    Either:
    
    * The value should start with a "/", to allow absolute paths.
    
    or
    
    * The value should start with a "$", to allow bitbake
       variables like ${TOPDIR}.
    
    [YOCTO #9646]
    
    Signed-off-by: Sujith H <sujith.h@gmail.com>
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

49	22	lib/toaster/toastergui/templates/projectconf.html

commit b060eecae417521d8340748e7ace7a77488bd596
Author: Sujith H <sujith.h@gmail.com>
Date:   2016-06-24 16:25:54 +0100

    toaster: remove SSTATE_MIRRORS from projectconf
    
    Remove SSTATE_MIRRORS from getting blacklisted. Hence the SSTATE_MIRRORS
    should be removed from projectconf.html file so that users can know that
    this variable is no more blacklisted.
    
    [YOCTO #9598]
    
    Signed-off-by: Sujith H <sujith.h@gmail.com>
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

0	1	lib/toaster/toastergui/templates/projectconf.html

commit c3dd4fb193c80ed9a6dbddf7f6a1eadd0964ac8c
Author: Sujith H <sujith.h@gmail.com>
Date:   2016-06-24 16:25:53 +0100

    toaster: remove SSTATE_MIRRORS from blacklists in views
    
    Remove SSTATE_MIRRORS variable from blacklists in views.py
    This helps user to point mirrors using SSTATE_MIRRORS with
    toaster.
    
    [#YOCTO 9598]
    
    Signed-off-by: Sujith H <sujith.h@gmail.com>
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

8	3	lib/toaster/toastergui/views.py

commit 9841651e050a3e9f395ab3c62545c51197734584
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2016-07-07 14:27:43 +0100

    progress: Ensure missing start event is fired
    
    The init function of the parent class fires a progress event for 0
    progress rather than a start event. UI code was assuming that progress
    events should always have a start event first. This change ensures that
    the start event is correctly generated.
    
    This fixes crashes that were seen in knotty in some configurations.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	0	lib/bb/progress.py

commit 7dd06b1016b36420a9c55a45ff29dd64ae1dbcda
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2016-07-07 14:26:34 +0100

    knotty: Handle process indicators more gracefully
    
    Mistakes can happen with the generation of the progress events, change
    knotty to be more tolerant of this rather than crashing, reporting to the
    user when something unexpected happens. I haven't debugged why multiple
    finish events appear to be triggered.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

12	4	lib/bb/ui/knotty.py

commit 591e9741e108487ff437e77cb439ef2dbca42e03
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2016-06-23 22:59:12 +1200

    runqueue: report progress for "Preparing RunQueue" step
    
    When "Preparing RunQueue" shows up you can expect to wait up to 30
    seconds while it works - which is a bit long to leave the user waiting
    without any kind of output. Since the work being carried out during this
    time is divided into stages such that it's practical to determine
    internally how it's progressing, replace the message with a progress
    bar.
    
    Actually what happens during this time is two major steps rather than
    just one - the runqueue preparation itself, followed by the
    initialisation prior to running setscene tasks. I elected to have the
    progress bar cover both as one (there doesn't appear to be much point in
    doing otherwise from a user perspective). I did however describe it as
    "initialising tasks".
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

42	0	lib/bb/progress.py
67	3	lib/bb/runqueue.py

commit 624722c067a7fdd0c0f5d8be611e1f6666ecc4a2
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2016-06-23 22:59:11 +1200

    runqueue: add ability to enforce that tasks are setscened
    
    Add the ability to enter a mode where only a specified whitelist of
    tasks can be executed outright; everything else must be successfully
    provided in the form of a setscene task (or covered by a setscene task).
    Any setscene failure outside of the whitelist will cause the build to
    fail immediately instead of running the real task, and any real tasks
    that would execute outside of the whitelist cause an immediate build
    failure when it comes to executing the runqueue as well.
    
    The mode is enabled by setting BB_SETSCENE_ENFORCE="1", and the
    whitelist is specified through BB_SETSCENE_ENFORCE_WHITELIST, consisting
    of pn:taskname pairs. A single % character can be substituted for the pn
    value to match any target explicitly specified on the bitbake command
    line. Wildcards * and ? can also be used as per standard unix file name
    matching for both pn and taskname.
    
    Part of the implementation of [YOCTO #9367].
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

80	1	lib/bb/runqueue.py

commit db95cdef08e339dec7462bfde3ad7d75c1c60dd8
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2016-06-23 22:59:10 +1200

    knotty: add quiet output mode
    
    Quiet output mode disables printing most messages (below warnings) to
    the console; however these messages still go to the console log file.
    This is primarily for cases where bitbake is being launched
    interactively from some other process, but where full console output is
    not needed.
    
    Because of the need to keep logging all normal events to the console
    log, this functionality was implemented within the knotty UI rather
    than in bb.msg (where verbose mode is implemented). We don't currently
    have a means of registering command line options from the UI end, thus
    the option actually has to be registered in main.py regardless of the
    UI, however I didn't feel like it was worth setting up such a mechanism
    just for this option.
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

9	0	lib/bb/main.py
4	1	lib/bb/msg.py
32	25	lib/bb/ui/knotty.py

commit de682015a3fefeff36ddc4197641a700f3fb558d
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2016-06-23 22:59:09 +1200

    knotty: show task progress bar
    
    In addition to the "currently running n tasks (x of y)" message, show a
    progress bar for another view on how much of the build is left. We have
    to take care to reset it when moving from the scenequeue to the
    runqueue, and explicitly don't include an ETA since not all tasks take
    equal time and thus it isn't possible to estimate the time remaining
    with the information available.
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

19	4	lib/bb/ui/knotty.py

commit 070ae856da0715dbaf4c560c837ea796ffc29f00
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2016-06-23 22:59:08 +1200

    knotty: add code to support showing progress for sstate object querying
    
    Add support code on the BitBake side to allow sstate.bbclass in
    OpenEmbedded to report progress when it is checking for availability of
    artifacts from shared state mirrors.
    
    Part of the implementation for [YOCTO #5853].
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

27	0	lib/bb/event.py
13	2	lib/bb/ui/knotty.py

commit 751b75602872a89e8b1a7c03269bc0fdaa149c6f
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2016-06-23 22:59:06 +1200

    lib/bb/progress: add MultiStageProgressReporter
    
    Add a class to help report progress in a task that consists of multiple
    stages, some of which may have internal progress (do_rootfs within
    OpenEmbedded is one example). Each stage is weighted to try to give
    a reasonable representation of progress over time.
    
    Part of the implementation for [YOCTO #5383].
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

111	0	lib/bb/progress.py

commit 0d275fc5b6531957a6189069b04074065bb718a0
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2016-06-23 22:59:05 +1200

    lib: implement basic task progress support
    
    For long-running tasks where we have some output from the task that
    gives us some idea of the progress of the task (such as a percentage
    complete), provide the means to scrape the output for that progress
    information and show it to the user in the default knotty terminal
    output in the form of a progress bar. This is implemented using a new
    TaskProgress event as well as some code we can insert to do output
    scanning/filtering.
    
    Any task can fire TaskProgress events; however, if you have a shell task
    whose output you wish to scan for progress information, you just need to
    set the "progress" varflag on the task. This can be set to:
     * "percent" to just look for a number followed by a % sign
     * "percent:<regex>" to specify your own regex matching a percentage
       value (must have a single group which matches the percentage number)
     * "outof:<regex>" to look for the specified regex matching x out of y
       items completed (must have two groups - first group needs to be x,
       second y).
    We can potentially extend this in future but this should be a good
    start.
    
    Part of the implementation for [YOCTO #5383].
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

34	0	lib/bb/build.py
86	0	lib/bb/progress.py
65	9	lib/bb/ui/knotty.py
6	1	lib/bb/ui/uihelper.py
12	4	lib/progressbar/progressbar.py
36	0	lib/progressbar/widgets.py

commit c3e51d71b36cbc9e9ed1b35fb93d0978e24bc98a
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2016-06-23 22:59:04 +1200

    knotty: import latest python-progressbar
    
    Since we're going to make some minor extensions to it, it makes sense to
    bring in the latest version of python-progressbar. Its structure has
    changed a little but the API hasn't; however we do need to ensure our
    overridden _needs_update() function's signature in BBProgress() matches
    properly.
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/ui/knotty.py
0	384	lib/progressbar.py
52	0	lib/progressbar/LICENSE.txt
49	0	lib/progressbar/__init__.py
44	0	lib/progressbar/compat.py
307	0	lib/progressbar/progressbar.py
355	0	lib/progressbar/widgets.py

commit e9f41c0507a6527bf2ed86506813d4d4a89f8ebf
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2016-06-23 22:59:03 +1200

    knotty: provide a symlink to the latest console log
    
    If you're looking to find the latest console log repeatedly it can be a bit
    tedious - let's just create a symlink just as we do with other logs to
    make it easy to find.
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

6	0	lib/bb/ui/knotty.py

commit 54b1961551511948e0cbd2ac39f19b39b9cee568
Author: Ross Burton <ross.burton@intel.com>
Date:   2016-06-30 22:32:24 +0100

    fetch2/wget: attempt checkstatus again if it fails
    
    Some services such as SourceForge seem to struggle to keep up under load, with
    the result that over half of the autobuilder checkuri runs fail with
    sourceforge.net "connection timed out".
    
    Attempt to mitigate this by re-attempting once the network operation on failure.
    
    Signed-off-by: Ross Burton <ross.burton@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

8	4	lib/bb/fetch2/wget.py

commit 779d73619daf59f76f5b0313e7fb5409f6e82553
Author: Robert Yang <liezhi.yang@windriver.com>
Date:   2016-06-14 19:42:10 -0700

    lib/bb/build.py: remove task flag in deltask()
    
    Otherwise the function like d.getVarFlag(e, 'task', True) which is used by
    do_listtasks will still get it, and list the deleted tasks.
    
    Signed-off-by: Robert Yang <liezhi.yang@windriver.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	0	lib/bb/build.py

commit 31977e7bb98f676197c6cee66f6ab4c12d4dcbde
Author: Ed Bartosh <ed.bartosh@linux.intel.com>
Date:   2016-06-20 14:00:52 +0300

    cooker: clean up EvertWriter
    
    Restructured EventWriter code to make it more readable:
     - got rid of init_file method as it's called only once
     - renamed exception variable e -> err
     - renamed event variable e -> evt
     - simplified main 'if' structure of send method
    
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

13	20	lib/bb/cooker.py

commit 7c5b6812d32d173df36e7f9fc1d877329e79f994
Author: Ed Bartosh <ed.bartosh@linux.intel.com>
Date:   2016-06-20 14:00:51 +0300

    cooker: replace EventLogWriteHandler with namedtuple
    
    class EventLogWriteHandler is a simple wrapper class with only one
    class member. Replacing it with namedtuple makes code less nested and more
    readable.
    
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

41	45	lib/bb/cooker.py

commit 1fc9957837b7038dfb983217a3fcd880f143e3a4
Author: Ed Bartosh <ed.bartosh@linux.intel.com>
Date:   2016-06-20 14:00:50 +0300

    cooker: don't remove event file
    
    There is no need to remove output file as it gets rewritten by
    open(self.eventfile, 'w') anyway.
    
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

0	6	lib/bb/cooker.py

commit f18055237e6084f90f6221442e3ba021dcc59c50
Author: Ed Bartosh <ed.bartosh@linux.intel.com>
Date:   2016-06-20 14:00:49 +0300

    cooker: encode event objects to base64
    
    pickle converts python objects into the binary form that can't be
    decoded to text and therefore can't be converted to JSON format.
    
    Attempt to convert event objects raises this error:
    TypeError:
        b'\x80\x03cbb.runqueue\nrunQueueTaskSkipped\nq\x00)...
        is not JSON serializable
    
    Encoded pickled event objects to base64 to be able to convert data
    structure to JSON.
    
    [YOCTO #9803]
    
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

4	1	lib/bb/cooker.py

commit d3ad8eee850ec2df54aa09fae44cc7e69c12f32a
Author: Ed Bartosh <ed.bartosh@linux.intel.com>
Date:   2016-06-20 14:00:48 +0300

    cooker: move EventLogWriteHandler to the top module level
    
    EventLogWriteHandler object was created and used in
    BBCooker.initConfigurationData.
    This causes creation of multiple EventLogWriteHandler objects
    and results in duplicated entries in the output event file
    as BBCooker.initConfigurationData is called multiple times.
    
    Added eventlogfile parameter to EventLogWriteHandler to avoid using
    global variable DEFAULT_EVENTFILE.
    Moved EventLogWriteHandler to the module level.
    Created EventLogWriteHandler object in BBCooker.__init__ to ensure that only
    one handler object is created.
    
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

64	62	lib/bb/cooker.py

commit 8eee64a64144e27b5b8c2aca88e138882c3deab7
Author: Jussi Kukkonen <jussi.kukkonen@intel.com>
Date:   2016-06-20 15:20:03 +0300

    depexp.py: port to gtk+3
    
    The code is still a bit icky (and should be refactored to not use
    Gdk.threads_enter/leave) but it should work about as reliably as
    it did with Gtk+2.
    
    Based on earlier patches by Maxin and Joshua.
    
    Signed-off-by: Jussi Kukkonen <jussi.kukkonen@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

80	79	lib/bb/ui/depexp.py

commit a8fe4177a6303aa57301c977c1daf7d4ff6ec586
Author: bavery <brian.avery@intel.com>
Date:   2016-06-16 14:14:48 -0700

    toaster: remove last css file with bootstrap v2 license
    
    Remove unused css file that still had the bootstrap v2 license in it.
    
    Signed-off-by: bavery <brian.avery@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

-	-	lib/toaster/toastergui/static/css/bootstrap-responsive.min.css

commit 29a34ae8f5306d2779bcc761c52f1f9d13a0c0c5
Author: George McCollister <george.mccollister@gmail.com>
Date:   2016-06-16 15:22:03 -0500

    runqueue: Use tid instead of taskid in find_chains()
    
    In 2c88afb6 find_chains()'s taskid argument was renamed to tid but
    taskid is still used as key to explored_deps dictionary. Use tid instead
    of taskid.
    
    Signed-off-by: George McCollister <george.mccollister@gmail.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/runqueue.py

commit 6298696bb94a127cdec7964315f6891ba92cd026
Author: Andrew Bradford <andrew.bradford@kodakalaris.com>
Date:   2016-06-09 09:44:08 -0400

    fetch2/perforce: Rework to support SRCREV and P4CONFIG
    
    In recipes which use the perforce fetcher, enable use of SRCREV to
    specify any of: ${AUTOREV}, changelist number, p4date, or label.  This
    is more in-line with how the other fetchers work for source control
    systems.
    
    Allow p4 to use the P4CONFIG env variable to define the server URL,
    username, and password if not provided in a recipe.
    
    This does change existing perforce fetcher usage by recipes and will
    likely need those recipes which use the perforce fetcher to be updated.
    No recipes in oe-core use the perforce fetcher.
    
    References [YOCTO #6303]
    
    Signed-off-by: Andrew Bradford <andrew.bradford@kodakalaris.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	1	lib/bb/fetch2/__init__.py
148	122	lib/bb/fetch2/perforce.py

commit 1072beefe172423873a22a10c7171e10d0401e1e
Author: Stephano Cetola <stephano.cetola@linux.intel.com>
Date:   2016-06-10 10:56:38 -0700

    fetch2: fix unpacking of deb packages
    
    Python 3 changed the return value of check_output to binary rather than
    a string. This fix decodes the binary before calling splitlines, which
    requires a string.
    
    Signed-off-by: Stephano Cetola <stephano.cetola@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/fetch2/__init__.py

commit a3ebeb37f7bd4cffe6707c634b4f0a0ea52ccc45
Author: Elliot Smith <elliot.smith@intel.com>
Date:   2016-06-16 15:02:00 +0100

    toaster: fix typo which causes table searches to fail
    
    The iterator used to create a search query refers to a
    variable "x" which isn't set, causing an "'x' is not defined" error
    and preventing table searches (on non-ToasterTables) from working.
    
    Use the "field" variable instead, which contains the name of the
    field to add to the query.
    
    [YOCTO #9749]
    
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/toaster/toastergui/views.py

commit a9509949d7e2adba6e3cd89f97daa19a955855b5
Author: Ed Bartosh <eduard.bartosh@intel.com>
Date:   2016-06-10 14:58:17 +0300

    bitbake: fix wrong usage of format_exc
    
    First parameter of traceback.format_exc is a 'limit' - a number
    of stracktraces to format.
    
    Passing exception object to format_exc is incorrect, but it works in
    Python 2 as this code from traceback module works:
        while tb is not None and (limit is None or n < limit):
    Comparing integer counter n with the exception object in Python 2
    always results in True. However, in Python 3 it throws exception:
        TypeError: unorderable types: int() < <Exception type>()
    
    As format_exc is used in except block of handling another
    exception this can cause hard to find and debug bugs.
    
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/cooker.py
1	1	lib/bb/ui/uievent.py

commit 0219271d4130c1f4cf071c7577a4101c54c04921
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2016-06-14 12:48:37 +0100

    parse/ast, event: Ensure we reset registered handlers during parsing
    
    When parsing, we should reset the event handlers we registered when
    done. If we don't do this, parse order may change the build, depending
    on what the parse handlers do to the metadata.
    
    This issue showed up as a basehash change:
    
    ERROR: Bitbake's cached basehash does not match the one we just generated (
    /media/build1/poky/meta/recipes-core/meta/nativesdk-buildtools-perl-dummy.bb.do_unpack)!
    
    This is due to the eventhandler in nativesdk.bbclass being run, despite
    this .bb file not inheriting nativesdk.bbclass. The parse order was
    different between the signature generation and the main multithreaded
    parse.
    
    Diffsigs showed:
    
    bitbake-diffsigs 1.0-r2.do_unpack.sigbasedata.*
    basehash changed from 887d1c25962156cae859c1542e69a8d7 to cb84fcfafe15fc92fb7ab8c6d97014ca
    Variable PN value changed from 'nativesdk-buildtools-perl-dummy' to '${@bb.parse.BBHandler.vars_from_file(d.getVar('FILE', False),d)[0] or 'defaultpkgname'}'
    
    with PN being set by the event handler.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

7	0	lib/bb/event.py
3	1	lib/bb/parse/ast.py

commit 8aa84abc952835792db1614b6fe2305ab9dca9e1
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2016-06-13 22:03:54 +0100

    toaster: Remove mismerged files
    
    Another patch added migrations in the correct location (different date) so
    these in the wrong directory can be removed.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

0	34	bitbake/lib/toaster/bldcontrol/migrations/0004_auto_20160509_0946.py
0	89	bitbake/lib/toaster/orm/migrations/0007_auto_20160509_0946.py

commit 2c88afb60da54e58f555411a7bd7b006b0c29306
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2016-06-12 23:55:48 +0100

    taskdata/runqueue: Rewrite without use of ID indirection
    
    I'm not sure what possesed me when I wrote this code originally but its
    indirection of everyting to use numeric IDs and position dependent lists
    is horrific. Given the way python internals work, its completely and
    utterly pointless from  performance perspective. It also makes the code
    hard to understand and debug since any numeric ID has to be translated
    into something human readable.
    
    The hard part is that the IDs are infectous and spread from taskdata
    into runqueue and even partly into cooker for the dependency graph
    processing. The only real way to deal with this is to convert everything
    to use a more sane data structure.
    
    This patch:
    * Uses "<fn>:<taskname>" as the ID for tasks rather than a number
    * Changes to dict() based structures rather than position dependent lists
    * Drops the build name, runtime name and filename ID indexes
    
    On the most part there shouldn't be user visible changes. Sadly we did
    leak datastructures to the setscene verify function which has to be
    rewritten. To handle this, the variable name used to specifiy the version
    changes from BB_SETSCENE_VERIFY_FUNCTION to BB_SETSCENE_VERIFY_FUNCTION2
    allowing multiple versions of bitbake to work with suitably written
    metadata. Anyone with custom schedulers may also need to change them.
    
    I believe the benefits in code readability and easier debugging far
    outweigh those issues though. It also means we have a saner codebase
    to add multiconfig support on top of.
    
    During development, I did have some of the original code coexisting with
    the new data stores to allow comparision of the data and check it was
    working correcty, particuarly for taskdata. I have also compared
    task-depends.dot files before and after the change. There should be no
    functionality changes in this patch, its purely a data structure change
    and that is visible in the patch.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

29	43	lib/bb/cooker.py
458	500	lib/bb/runqueue.py
152	260	lib/bb/taskdata.py

commit 8c1ed57f6ea475b714eca6673b48e8e5f5f0f9c3
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2016-06-12 23:55:08 +0100

    runqueue: Change buildable/running lists to sets
    
    Using positions in lists for flags is an odd choice and makes the code
    hard to maintain. Maintaining a list is slow since list searches are
    slow (watch bitbake -n slow massively with it) but we can use a set()
    instead.
    
    This patch uses python sets to maintain the lists of tasks in each state
    and this prepares for changing the task IDs from being integers.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

27	36	lib/bb/runqueue.py

commit 5f80dac65f419825bd81a734273a2465d5a01bab
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2016-06-13 14:32:16 +0100

    toaster: tests browser Fix selenium tests after bootstrap3 breakage
    
    Fix a number of selectors which have changed after the port to
    bootstrap3. Also fix the modal wait_until_visible and returning of the
    text for the radio buttons in the modals for edit custom image and new
    custom image on the build dashboard.
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>

8	7	lib/toaster/tests/browser/test_all_builds_page.py
15	16	lib/toaster/tests/browser/test_builddashboard_page.py
4	1	lib/toaster/tests/browser/test_project_config_page.py

commit 0bdfcafdd1e2ebc10dc0cd343c8bb77f09a71c90
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2016-06-13 14:29:30 +0100

    toaster: tests Rename test settings to python compliant name and fix import
    
    Use underscore instead of dash in the file name for the test settings.
    Also fix the import of the settings module.
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>

1	1	lib/toaster/tests/builds/README
1	1	lib/toaster/toastermain/{settings-test.py => settings_test.py}

commit fccc8869dc465b49f236c15a9aa14b7d06694b8e
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2016-06-10 17:54:37 +0100

    toaster: selenium tests Fix all_projects page and sample tests
    
    Fix the selectors after changes made for bootstrap3 and table links being
    removed.
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>

8	5	lib/toaster/tests/browser/test_all_projects_page.py
1	1	lib/toaster/tests/browser/test_sample.py

commit 830743b1aa29a5ac220141e9c24b2592d6cebb29
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2016-06-10 16:48:33 +0100

    toaster: selenium tests Update unique custom image string and fix import
    
    - Update the string for recognising a duplicate image recipe
    - Fix an incorrect relative import
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>

1	1	lib/toaster/tests/browser/test_builddashboard_page.py
2	1	lib/toaster/tests/browser/test_new_custom_image_page.py

commit d382b2afb2939ae1b69a80ad083fb4c47303f8d0
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2016-06-10 16:44:15 +0100

    toaster: js tests Twitter typeahead library object is now ttTypeahead
    
    Get the ttTypeahead object on the input to see if it's been initialised
    correctly.
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>

4	4	lib/toaster/toastergui/static/js/tests/test.js

commit c5a48931ac8db9e56f978c50861c19d0d0c808e3
Author: Ed Bartosh <ed.bartosh@linux.intel.com>
Date:   2016-06-10 12:34:12 +0300

    toaster: fix wrong usage of print_exc and format_exc
    
    First parameter of traceback.print_exc and traceback.format_exc APIs is
    a 'limit' - a number of stracktraces to print.
    
    Passing exception object to print_exc or format_exc is incorrect, but
    it works in Python 2 and causes printing only one line of traceback.
    
    In Python 3 comparison of integer and exception object throws exception:
    TypeError: unorderable types: int() < <Exception type>()
    
    As these APIs are usually used in except block of handling another
    exception this can cause hard to find and debug bugs.
    
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>

1	1	lib/toaster/bldcontrol/management/commands/checksettings.py
2	2	lib/toaster/bldcontrol/management/commands/runbuilds.py
2	2	lib/toaster/contrib/tts/runner.py
1	1	lib/toaster/orm/models.py
1	1	lib/toaster/toastergui/views.py

commit 3638b8e5390c36076e14c181e955505750031571
Author: Ed Bartosh <ed.bartosh@linux.intel.com>
Date:   2016-06-10 10:59:44 +0300

    toaster: changed python version in shebang
    
    Changed python to python3 in shebang to ensure that
    manage.py is always run by python3.
    
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>

1	1	lib/toaster/manage.py

commit d34546e88881e89588206877ebaea506cda4f6c2
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2016-06-10 11:45:48 +0100

    toaster: toastergui tests Use new BeautifulSoup syntax
    
    Fix deprecation warning specify the parser used for creating the
    BeautifulSoup object.
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>

1	1	lib/toaster/toastergui/tests.py

commit c4d67968d0ec1d5ff53cdc0dccf6a7869c89597b
Author: Elliot Smith <elliot.smith@intel.com>
Date:   2016-06-07 16:37:29 +0100

    toaster: open image files in binary mode when sending in response
    
    The view code for downloading image files used the "r" flag
    to read the file, then used the open file object to form the
    HTTP response.
    
    While this worked in Python 2, Python 3 appears to be more strict
    about this sort of thing, and Django throws a UnicodeDecodeError
    when a file opened this way is used in a response.
    
    Open the file with the "b" flag (binary mode) so that Django can
    correctly convert the binary file handle to an HTTP response.
    
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>

1	1	lib/toaster/toastergui/views.py

commit 571c2b70d3c123614618672ce7532bb5f4c36630
Author: Elliot Smith <elliot.smith@intel.com>
Date:   2016-06-07 16:37:28 +0100

    toaster-tests: fix tests for latest Selenium version
    
    Previously, we didn't specify a specific version of Selenium.
    When upgrading to Python 3 and installing Selenium to work with it,
    the JS unit test broke, as the report format produced by Selenium
    had changed.
    
    Modify the test so that it works with the latest Selenium report
    format.
    
    Add a note to the README that the given Selenium version should
    be used to prevent unexpected test failures.
    
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>

4	3	lib/toaster/tests/browser/README
4	4	lib/toaster/tests/browser/test_js_unit_tests.py
0	8	lib/toaster/toastergui/static/js/tests/test.js

commit f66ee686d4e3002a4a38a7424bcc605a6df9db0b
Author: Elliot Smith <elliot.smith@intel.com>
Date:   2016-06-07 16:37:27 +0100

    toaster: fix broken reference to urllib
    
    The code previously imported urllib to make use of querystring
    quoting, but was modified to support Python 3. During this
    process, the reference to urllib was not fixed, which resulted
    in table filters breaking.
    
    Remove the reference to urllib (which is no longer imported)
    and instead reference the imported unquote_plus() function.
    
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>

1	1	lib/toaster/toastergui/widgets.py

commit 1626e986820da626c19aa8c664155a2cb1db8fd9
Author: Ed Bartosh <ed.bartosh@linux.intel.com>
Date:   2016-06-07 16:37:26 +0100

    toaster: fix test_toaster_tables
    
    Removed unneeded code as it causes the following error in Python 3:
        TypeError: expected bytes, bytearray or buffer compatible object
    
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>

0	6	lib/toaster/toastergui/tests.py

commit eb23a84e079125a08d0c8e910f7035ad9584c432
Author: Ed Bartosh <ed.bartosh@linux.intel.com>
Date:   2016-06-07 16:37:25 +0100

    toaster: fix incorrect file mode
    
    Python 3 complains about 'wa' mode this way:
     ValueError: must have exactly one of create/read/write/append mode
    
    Fixed by using 'a' mode.
    
    [YOCTO #9584]
    
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>

1	1	lib/toaster/toastergui/tests.py

commit 3566ecc3ae682358d1fc58bdc0bed5cbed5e9608
Author: Ed Bartosh <ed.bartosh@linux.intel.com>
Date:   2016-06-07 16:37:24 +0100

    toaster: decode response content
    
    Decoded response content to str to pass it to json.load as it breaks
    in Python 3 with this error:
       TypeError: expected bytes, bytearray or buffer compatible object
    
    [YOCTO #9584]
    
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>

19	19	lib/toaster/toastergui/tests.py

commit bfb44886c3bec8320e4f845c9ff24ae2a795aa9f
Author: Ed Bartosh <ed.bartosh@linux.intel.com>
Date:   2016-06-07 16:37:23 +0100

    toaster: fix migrations
    
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>

34	0	lib/toaster/bldcontrol/migrations/0004_auto_20160523_1446.py
89	0	lib/toaster/orm/migrations/0007_auto_20160523_1446.py

commit 8ae2fc26fc7c4f42817dece62b9a59fbda27c0b0
Author: Ed Bartosh <ed.bartosh@linux.intel.com>
Date:   2016-06-07 16:37:22 +0100

    toaster: replace viewkeys() -> keys()
    
    Python 3 doesn't have dict.viewkeys method, renaming
    to keys().
    
    [YOCTO #9584]
    
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>

1	1	lib/bb/ui/buildinfohelper.py

commit e7951541c34c5561187110ba0ec69b9c45022747
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2016-06-10 11:01:10 +0100

    toaster: bin Use python 3 for our django modules check
    
    Explicitly use python3 so that the modules for python3 are checked.
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>

1	1	bin/toaster

commit 4e21817b0d7a91e634bdb2069850627c38fde053
Author: Belen Barros Pena <belen.barros.pena@linux.intel.com>
Date:   2016-06-09 11:53:20 +0100

    toaster: BuildTasksTable filters remove outcome NA option
    
    In the 'outcome' filter for tasks, remove the 'not applicable' option,
    since it should not be exposed to users.
    
    Signed-off-by: Belen Barros Pena <belen.barros.pena@linux.intel.com>
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>

2	0	lib/toaster/toastergui/buildtables.py

commit 70f600f86ec4d536004d968919e86d2afa58d585
Author: Belen Barros Pena <belen.barros.pena@linux.intel.com>
Date:   2016-06-09 11:35:11 +0100

    toaster: BuiltPackagesTable format empty state in packages table
    
    The explanatory message in the empty state of the packages built table
    was missing some spaces.
    
    Signed-off-by: Belen Barros Pena <belen.barros.pena@linux.intel.com>
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>

5	5	lib/toaster/toastergui/buildtables.py

commit 3d7f5d6ae843bcc3b5af1a9414ab5cb2759d0853
Author: Belen Barros Pena <belen.barros.pena@linux.intel.com>
Date:   2016-06-08 18:00:06 +0100

    toaster: build data Fix left navigation
    
    Make sure the current page is always highlighted in the left navigation.
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Belen Barros Pena <belen.barros.pena@linux.intel.com>

15	7	lib/toaster/toastergui/templates/basebuildpage.html
0	4	lib/toaster/toastergui/templates/configuration.html
0	4	lib/toaster/toastergui/templates/configvars.html
7	0	lib/toaster/toastergui/templates/dirinfo.html

commit f963b73f0bf32db2df39dd79d8d85184c280cda0
Author: Belen Barros Pena <belen.barros.pena@linux.intel.com>
Date:   2016-06-02 14:26:16 +0100

    toaster: port all build analysis pages to bootstrap 3
    
    Port all the pages in the build analysis area to bootstrap version 3.
    
    Signed-off-by: Belen Barros Pena <belen.barros.pena@linux.intel.com>
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>

4	4	lib/toaster/toastergui/buildtables.py
0	587	lib/toaster/toastergui/static/css/bootstrap-theme.css
0	1	lib/toaster/toastergui/static/css/bootstrap-theme.css.map
-	-	lib/toaster/toastergui/static/css/bootstrap-theme.min.css
0	1	lib/toaster/toastergui/static/css/bootstrap-theme.min.css.map
104	10	lib/toaster/toastergui/static/css/default.css
1	3	lib/toaster/toastergui/static/js/libtoaster.js
1	1	lib/toaster/toastergui/templates/base.html
16	14	lib/toaster/toastergui/templates/basebuilddetailpage.html
28	43	lib/toaster/toastergui/templates/basebuildpage.html
11	9	lib/toaster/toastergui/templates/basetable_bottom.html
68	53	lib/toaster/toastergui/templates/basetable_top.html
61	70	lib/toaster/toastergui/templates/builddashboard.html
5	5	lib/toaster/toastergui/templates/configuration.html
80	67	lib/toaster/toastergui/templates/configvars.html
1	1	lib/toaster/toastergui/templates/customrecipe.html
11	9	lib/toaster/toastergui/templates/detail_pagination_bottom.html
39	35	lib/toaster/toastergui/templates/detail_search_header.html
3	3	lib/toaster/toastergui/templates/detail_sorted_header.html
12	15	lib/toaster/toastergui/templates/dirinfo.html
61	53	lib/toaster/toastergui/templates/filtersnippet.html
6	6	lib/toaster/toastergui/templates/package_built_dependencies.html
4	4	lib/toaster/toastergui/templates/package_built_detail.html
12	12	lib/toaster/toastergui/templates/package_detail_base.html
8	8	lib/toaster/toastergui/templates/package_included_dependencies.html
4	4	lib/toaster/toastergui/templates/package_included_tabs.html
66	36	lib/toaster/toastergui/templates/recipe.html
14	9	lib/toaster/toastergui/templates/recipe_packages.html
1	1	lib/toaster/toastergui/templates/recipedetails.html
1	1	lib/toaster/toastergui/templates/snippets/gitrev_popover.html
1	1	lib/toaster/toastergui/templates/snippets/pkg_dependencies_popover.html
1	1	lib/toaster/toastergui/templates/snippets/pkg_revdependencies_popover.html
5	5	lib/toaster/toastergui/templates/target.html
112	47	lib/toaster/toastergui/templates/task.html
6	4	lib/toaster/toastergui/templates/unavailable_artifact.html
6	6	lib/toaster/toastergui/templatetags/projecttags.py
0	1	lib/toaster/toastergui/views.py

commit 7c377e161a90184a4786e33951d8c0e30688ba3b
Author: Belen Barros Pena <belen.barros.pena@linux.intel.com>
Date:   2016-06-10 14:31:29 +0100

    toaster: buildtables Remove links from non name fields
    
    Design change to have no links for non-named fields in BuiltPackagesTable.
    BuiltRecipesTables and BuildTasksTable.
    
    Additionally:
    - Fix class and elements for Bootstrap3 in help text.
    - Change title of InstalledPackages table to Packages Included.
    - Change which columns are default shown/hidden columns.
    
    Signed-off-by: Belen Barros Pena <belen.barros.pena@linux.intel.com>
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>

40	48	lib/toaster/toastergui/buildtables.py
2	2	lib/toaster/toastergui/templates/buildinfo-toastertable.html

commit 37fb9a364e645baadda30cc74a18baa565f39857
Author: Elliot Smith <elliot.smith@intel.com>
Date:   2016-06-07 16:29:35 +0100

    toaster: fix typo which prevents filters from working
    
    'k' was replaced by 'key' at some point but not fixed in the
    body of the loop. This caused a failure when the the query
    was constructed for a filtered queryset, due to the variable
    not being defined.
    
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>

1	1	lib/toaster/toastergui/views.py

commit 3f61bef9359926211be7a3177a2071963726ead5
Author: Elliot Smith <elliot.smith@intel.com>
Date:   2016-04-26 17:12:52 +0100

    toaster-tests: maximize browser window when running UI tests
    
    In some pages of the UI, the UI tests failed because parts of
    the UI which should be visible were being reported as not
    visible by the Selenium PhantomJS driver.
    
    On investigation, it turns out that PhantomJS uses a very narrow
    default window. This meant that some parts of the UI were being
    clipped and were thus not "visible" to the driver, causing test
    failures (specifically, on the new custom image page).
    
    Ensure that the window is maximized before running tests to
    prevent this happening.
    
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>

1	0	lib/toaster/tests/browser/selenium_helpers.py

commit 31e7c26cc31a7c8c78c1464fa01581683bfd2965
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2016-05-26 16:12:27 +0100

    toaster: Rework displaying package dependencies across Toaster
    
    After porting the build table to a unified mechanism for showing
    dependencies in tables it highlighted that the dependencies selected to
    be shown were un-filtered. i.e. all dependencies from all contexts were
    shown. The context for a package's dependencies is based on the target
    that they were installed onto, or if not installed then a "None" target.
    
    Depending on where the template for the dependencies are show we need to
    switch this target which is why a filter and utility function on the
    model is added.
    
    Additionally to use the same templates in the build analysis we also
    need to optionally add links to the build data for the packages being
    displayed as dependencies.
    
    Customising a Custom image recipes may or may not have a target
    depending on whether they have been built or not, if not we do a best
    effort at getting the dependencies by using the last known target on
    that package to get the dependency information.
    
    [YOCTO #9676]
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>

50	11	lib/toaster/orm/models.py
13	2	lib/toaster/toastergui/buildtables.py
14	1	lib/toaster/toastergui/tables.py
34	10	lib/toaster/toastergui/templates/snippets/pkg_dependencies_popover.html
35	11	lib/toaster/toastergui/templates/snippets/pkg_revdependencies_popover.html
8	0	lib/toaster/toastergui/templatetags/projecttags.py
3	1	lib/toaster/toastergui/views.py

commit 566b4fbe9cfe4c6c0605c4f6444083ee4cf8b958
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2016-05-26 16:12:26 +0100

    toaster: widgets ToasterTable Catch template rendering exceptions
    
    If a cell template rendering causes an exception catch it and carry on,
    this at least allows the table to show the rest of the data if nothing
    else. Also improve the error logging so that it's possible what the
    offending template snippet was.
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>

16	4	lib/toaster/toastergui/widgets.py

commit 7cf23671659666b27b5629fecd5f947f9bdb94e0
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2016-05-26 16:12:25 +0100

    toaster: tests Add new build tables to tests
    
    - Add new build tables to be tested
    - Add required data into the fixture and clean up a few empty fields
    - Fix the SoftwareRecipesTable specific test so as not to rely on two
      particular defined recipes
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>

68	23	lib/toaster/toastergui/fixtures/toastergui-unittest-data.xml
26	14	lib/toaster/toastergui/tests.py

commit 927bfc26ffcb0eb6c0a5b3c0905b7efc2f19b9a2
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2016-05-26 16:12:24 +0100

    toaster: table.js Add the ability to highlight a particular row
    
    As in the old build tables it's useful to jump and highlight a
    particular row in the table using the #hash in the URL.
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>

9	0	lib/toaster/toastergui/static/js/table.js

commit 2418c092abd9a503becf5e786125f8cdddd8652c
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2016-05-26 16:12:23 +0100

    toaster: port Installed packages table to ToasterTable
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>

61	2	lib/toaster/toastergui/buildtables.py
2	2	lib/toaster/toastergui/templates/builddashboard.html
6	112	lib/toaster/toastergui/templates/target.html
6	3	lib/toaster/toastergui/urls.py
0	169	lib/toaster/toastergui/views.py

commit bebcef7a4bf08b10e472475435ddc7a524364adb
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2016-05-26 16:12:22 +0100

    toaster: port Task tables to ToasterTables widget
    
    Port the Task based tables to ToasterTable. This is the Task, Time, CPU
    usage and Disk I/O tables.
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>

225	2	lib/toaster/toastergui/buildtables.py
3	1	lib/toaster/toastergui/templates/buildinfo-toastertable.html
0	4	lib/toaster/toastergui/templates/buildtime.html
1	1	lib/toaster/toastergui/templates/task.html
0	141	lib/toaster/toastergui/templates/tasks.html
18	5	lib/toaster/toastergui/urls.py
1	279	lib/toaster/toastergui/views.py

commit 9434d3925bb7768876aae8d649ea00b8d849c6e9
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2016-05-26 16:12:21 +0100

    toaster: port Built recipes table to toastertables
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>

129	0	lib/toaster/toastergui/buildtables.py
0	111	lib/toaster/toastergui/templates/recipes.html
6	1	lib/toaster/toastergui/urls.py
0	111	lib/toaster/toastergui/views.py

commit df62f38ff4e634544c9b1e97c5f6ca45e84a4f1e
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2016-05-26 16:12:20 +0100

    toaster: port table for Built packages to ToasterTable
    
    This is the table that displays all the packages built in the build.
    Build -> Packages. Adds a template snippet for the git revision popover.
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>

152	0	lib/toaster/toastergui/buildtables.py
2	8	lib/toaster/toastergui/tables.py
12	14	lib/toaster/toastergui/templates/basebuildpage.html
0	106	lib/toaster/toastergui/templates/bpackage.html
23	0	lib/toaster/toastergui/templates/buildinfo-toastertable.html
8	0	lib/toaster/toastergui/templates/snippets/gitrev_popover.html
6	1	lib/toaster/toastergui/urls.py
0	90	lib/toaster/toastergui/views.py

commit 4c0e07b8379381cfe887a4c65d2f61af05914082
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2016-05-26 16:12:19 +0100

    toaster: ToasterTable widget add an 'a' to Name in Exception class
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>

6	5	lib/toaster/toastergui/widgets.py

commit 9f21a1781345a2d2757616a9ab6f34ec48e9e93d
Author: Belen Barros Pena <belen.barros.pena@linux.intel.com>
Date:   2016-05-05 15:51:09 +0100

    toaster: toaster tables Enable complex empty states
    
    Make sure we can create empty states for toaster tables that include
    actions for users to get out of the empty state. Allows a template to be
    used as an empty state.
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Belen Barros Pena <belen.barros.pena@linux.intel.com>

9	0	lib/toaster/toastergui/tables.py
1	1	lib/toaster/toastergui/templates/toastertable.html

commit 69527a731eada699d3f604ff8f3ae9410981ba9b
Author: Belen Barros Pena <belen.barros.pena@linux.intel.com>
Date:   2016-04-12 15:56:43 +0100

    toaster: Migrate project configuration from bootstrap 2 to bootstrap 3
    
    Convert all the HTML templates, JS and CSS in the project parts of
    toaster to use bootstrap 3.
    
    Signed-off-by: Belen Barros Pena <belen.barros.pena@linux.intel.com>
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>

1	2	LICENSE
587	0	lib/toaster/toastergui/static/css/bootstrap-theme.css
1	0	lib/toaster/toastergui/static/css/bootstrap-theme.css.map
-	-	lib/toaster/toastergui/static/css/bootstrap-theme.min.css
1	0	lib/toaster/toastergui/static/css/bootstrap-theme.min.css.map
6760	0	lib/toaster/toastergui/static/css/bootstrap.css
1	0	lib/toaster/toastergui/static/css/bootstrap.css.map
-	-	lib/toaster/toastergui/static/css/bootstrap.min.css
1	0	lib/toaster/toastergui/static/css/bootstrap.min.css.map
238	0	lib/toaster/toastergui/static/css/bootstrap3-transition.css
239	353	lib/toaster/toastergui/static/css/default.css
-	-	lib/toaster/toastergui/static/fonts/glyphicons-halflings-regular.eot
273	214	lib/toaster/toastergui/static/fonts/glyphicons-halflings-regular.svg
-	-	lib/toaster/toastergui/static/fonts/glyphicons-halflings-regular.ttf
-	-	lib/toaster/toastergui/static/fonts/glyphicons-halflings-regular.woff
-	-	lib/toaster/toastergui/static/fonts/glyphicons-halflings-regular.woff2
21	17	lib/toaster/toastergui/static/html/layer_deps_modal.html
-	-	lib/toaster/toastergui/static/img/glyphicons-halflings-white.png
-	-	lib/toaster/toastergui/static/img/glyphicons-halflings.png
2363	0	lib/toaster/toastergui/static/js/bootstrap.js
-	-	lib/toaster/toastergui/static/js/bootstrap.min.js
2	2	lib/toaster/toastergui/static/js/customrecipe.js
6	5	lib/toaster/toastergui/static/js/importlayer.js
2	2	lib/toaster/toastergui/static/js/layerDepsModal.js
39	28	lib/toaster/toastergui/static/js/layerdetails.js
9	9	lib/toaster/toastergui/static/js/libtoaster.js
50	26	lib/toaster/toastergui/static/js/newcustomimage_modal.js
4	4	lib/toaster/toastergui/static/js/projectpage.js
48	35	lib/toaster/toastergui/static/js/table.js
83	79	lib/toaster/toastergui/tables.py
44	42	lib/toaster/toastergui/templates/base.html
21	24	lib/toaster/toastergui/templates/basebuilddetailpage.html
5	2	lib/toaster/toastergui/templates/basebuildpage.html
19	19	lib/toaster/toastergui/templates/baseprojectpage.html
5	7	lib/toaster/toastergui/templates/basetable_bottom.html
5	3	lib/toaster/toastergui/templates/basetable_top.html
8	10	lib/toaster/toastergui/templates/bpackage.html
44	41	lib/toaster/toastergui/templates/builddashboard.html
4	4	lib/toaster/toastergui/templates/buildrequestdetails.html
6	2	lib/toaster/toastergui/templates/builds-toastertable.html
25	22	lib/toaster/toastergui/templates/configuration.html
63	60	lib/toaster/toastergui/templates/configvars.html
3	3	lib/toaster/toastergui/templates/customise_btn.html
104	95	lib/toaster/toastergui/templates/customrecipe.html
3	3	lib/toaster/toastergui/templates/detail_pagination_bottom.html
4	4	lib/toaster/toastergui/templates/detail_search_header.html
1	1	lib/toaster/toastergui/templates/detail_sorted_header.html
3	3	lib/toaster/toastergui/templates/dirinfo.html
42	25	lib/toaster/toastergui/templates/editcustomimage_modal.html
60	53	lib/toaster/toastergui/templates/filtersnippet.html
1	1	lib/toaster/toastergui/templates/generic-toastertable-page.html
129	131	lib/toaster/toastergui/templates/importlayer.html
10	13	lib/toaster/toastergui/templates/landing.html
2	2	lib/toaster/toastergui/templates/landing_not_managed.html
6	6	lib/toaster/toastergui/templates/layer_btn.html
231	226	lib/toaster/toastergui/templates/layerdetails.html
5	5	lib/toaster/toastergui/templates/machine_btn.html
61	60	lib/toaster/toastergui/templates/mrb_section.html
11	4	lib/toaster/toastergui/templates/newcustomimage.html
35	28	lib/toaster/toastergui/templates/newcustomimage_modal.html
24	27	lib/toaster/toastergui/templates/newproject.html
2	2	lib/toaster/toastergui/templates/package_built_dependencies.html
13	7	lib/toaster/toastergui/templates/package_detail_base.html
2	2	lib/toaster/toastergui/templates/package_included_dependencies.html
6	6	lib/toaster/toastergui/templates/pkg_add_rm_btn.html
50	52	lib/toaster/toastergui/templates/project.html
38	29	lib/toaster/toastergui/templates/projectbuilds-toastertable.html
2	2	lib/toaster/toastergui/templates/projectbuilds.html
1001	968	lib/toaster/toastergui/templates/projectconf.html
32	26	lib/toaster/toastergui/templates/projects-toastertable.html
43	43	lib/toaster/toastergui/templates/projecttopbar.html
10	3	lib/toaster/toastergui/templates/recipe.html
7	6	lib/toaster/toastergui/templates/recipe_btn.html
11	4	lib/toaster/toastergui/templates/recipe_packages.html
76	78	lib/toaster/toastergui/templates/recipedetails.html
11	13	lib/toaster/toastergui/templates/recipes.html
2	2	lib/toaster/toastergui/templates/snippets/pkg_dependencies_popover.html
2	2	lib/toaster/toastergui/templates/snippets/pkg_revdependencies_popover.html
8	9	lib/toaster/toastergui/templates/target.html
8	6	lib/toaster/toastergui/templates/task.html
7	9	lib/toaster/toastergui/templates/tasks.html
18	14	lib/toaster/toastergui/templates/toastertable-filter.html
50	44	lib/toaster/toastergui/templates/toastertable-simple.html
71	51	lib/toaster/toastergui/templates/toastertable.html
2	2	lib/toaster/toastergui/templates/unavailable_artifact.html
2	1	lib/toaster/toastergui/widgets.py

commit afbaf326e1123c92952fa71e0e820a4ff83488ca
Author: Elliot Smith <elliot.smith@intel.com>
Date:   2016-04-18 16:59:05 +0100

    toaster: work-around our lack of a synchronous fetch for typeaheads
    
    The Twitter typeahead.js library expects the developer to use
    a source which does a local search for matching suggestions, then
    falls back to a remote search if that doesn't return enough
    results.
    
    However, in Toaster, we don't do any caching of the suggestions
    for a typeahead, so our source only works in asynchronous mode.
    
    Consequently, we see fewer than the expected number of suggestions
    if the typeahead has already shown suggestions matching a query.
    For example, searching for "meta-n" in the layers typeahead will
    show the results for this query; but when the query changes to
    "meta-ne", a new set of results is fetched, which mostly overlaps
    with the results for "meta-n". The typeahead assumes that the
    overlapping items are locally cached and have been delivered
    synchronously, and just appends the new results which don't
    overlap with the previous query. But because we don't provide any
    results synchronously, we just end up with the single
    non-overlapping result in the drop-down.
    
    This can be fixed by hacking typeahead.js so that instead of
    appending asynchronous results, we always overwrite and redraw
    the whole typeahead menu.
    
    This is a temporary fix, and should be properly fixed (when we
    have time), perhaps by using typeahead.js's associated Bloodhound
    library.
    
    Added a note about the hack to the license file as an explanation
    of why the unminified JS file is included in Toaster.
    
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>

1	1	LICENSE
1551	0	lib/toaster/toastergui/static/js/typeahead.jquery.js
-	-	lib/toaster/toastergui/static/js/typeahead.jquery.min.js
1	1	lib/toaster/toastergui/templates/base.html

commit 0748177b40188a6fb735fe1ba1c17294afa4a3d0
Author: Elliot Smith <elliot.smith@intel.com>
Date:   2016-04-12 12:07:01 +0100

    toaster: migrate typeahead library
    
    Migrate from Bootstrap 2's built-in typeahead to Twitter's
    typeahead library.
    
    This is to facilitate moving to Bootstrap 3, which doesn't have
    a typeahead.
    
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>

2	0	LICENSE
19	0	lib/toaster/toastergui/static/css/default.css
55	69	lib/toaster/toastergui/static/js/libtoaster.js
-	-	lib/toaster/toastergui/static/js/typeahead.jquery.min.js
2	0	lib/toaster/toastergui/templates/base.html

commit 2cafb16033b2f38156e6e0a74c02120f87a4fa92
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2016-04-25 19:04:56 +0100

    toaster: tests Add a BuildTest helper class
    
    Add a helper class for running build tests. Subclass this and call the
    build method to get setup for running tests on the resulting data from a
    build.
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>

1	1	lib/toaster/tests/builds/README

commit 5d4172bc005efe209de595f6a151ae9ed062d051
Author: Belen Barros Pena <belen.barros.pena@linux.intel.com>
Date:   2016-04-28 13:45:17 +0100

    toaster: tweaks to recipe file downloads
    
    * In the custom images table, show the recipe file and download icon
    only when the recipe file exists and can be downloaded.
    
    * Also in the custom images table, make sure the download icon tooltip
    shows on hover.
    
    * In the custom image details page, show the correct icon (download)
    next to the recipe file in the right hand column.
    
    * In the custom image details page, show the recipe file and download
    icon in the right hand column only when the recipe file exists and can
    be downloaded
    
    * Also in the custom image details page, simplify the help text we show
    when the 'download' button is disabled: it gave so much information about
    what's actually happening under the hood that it was a bit hard to
    follow.
    
    Signed-off-by: Belen Barros Pena <belen.barros.pena@linux.intel.com>
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>

2	5	lib/toaster/toastergui/tables.py
4	4	lib/toaster/toastergui/templates/customrecipe.html

commit 81798ab046b0717614e28e0a339172f3803e451b
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2016-04-04 11:49:37 +0100

    toaster: testsjs Add call back to append elements on completion of tests
    
    When the tests are complete add some marker elements to the test page
    DOM which can then looked at for a selenium browser test.
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>

7	0	lib/toaster/toastergui/static/js/tests/test.js

commit a3f464d202dafef4538e66c008cdecb7b8709ed1
Author: Robert Yang <liezhi.yang@windriver.com>
Date:   2016-06-12 01:45:00 -0700

    cooker.py: fix warn() -> warning()
    
    Fixed:
    DeprecationWarning: The 'warn' method is deprecated, use 'warning' instead
    
    Signed-off-by: Robert Yang <liezhi.yang@windriver.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	3	lib/bb/cooker.py

commit 8f74881037bb01013d3d439dc0c269909a198c1c
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2016-06-09 22:33:33 +0100

    data_smart/utils: Add 'd' to the context used for better_eval in python expansion
    
    If a line like:
    
    foo=${@' '.join([d.getVar('D', True) + x for x in (' '.join([d.getVar('FILES_bash-' + p, True) or '' for p in ['lib', 'dev', 'staticdev', 'doc', 'locale', 'ptest']])).split()])}
    
    is added to a function like do_install, it fails with Exception name 'd'
    is not defined. This is due to a change of behaviour in python 3 compared
    to python 2. Generator expressions, dict comprehensions  and set comprehensions
    are executed in a new scope but list comprehensions in python 2.x are not. In
    python 3 they all use a new scope.
    
    To allow these kinds of expressions to work, the easiest approach is
    to add 'd' to the global context. To do this, an extra optional parameter
    is added to better_eval and we use that to add 'd'.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/data_smart.py
8	2	lib/bb/utils.py

commit 6d1379c8818400e5cdc442e6142f08a110fd5b95
Author: Mariano Lopez <mariano.lopez@linux.intel.com>
Date:   2016-06-07 12:27:39 +0000

    lib/bb/main.py: Fix use of BBPOSTCONF and BBPRECONF
    
    The functionality of BBPOSTCONF and BBPRECONF was added in
    commit 21b314d4d1e5b8fbeb4cc57006f0a110f0b3aa8f but there
    was a typo in the variable name that raises an exception
    in bitbake.
    
    [YOCTO #9235]
    
    Signed-off-by: Mariano Lopez <mariano.lopez@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	2	lib/bb/main.py

commit 12d43cf45ba48e3587392f15315d92a1a53482ef
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2016-06-03 13:38:33 +0100

    codeparser: Use hashlib for hashing, not hash()
    
    "hash() is randomised by default each time you start a new instance of
    recent
    versions (Python3.3+) to prevent dictionary insertion DOS attacks"
    
    which means we need to use hashlib.md5 to get consistent values for
    the codeparser cache under python 3. Prior to this, the codeparser
    cache was effectively useless under python3 as shown by performance
    regressions.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

6	2	lib/bb/codeparser.py

commit 633c0c19f87a92497a7e9771811cdc953e1b7047
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2016-06-03 13:35:32 +0100

    codeparser: Small optimisation to stop repeated hash() calls
    
    No functionality change, just avoids function call overhead in a
    function which loops heavily.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

4	3	lib/bb/codeparser.py

commit 17ff08d225a8fa7faffd683c028369574954fba9
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2016-05-25 16:46:44 +1200

    fetch2: fix unpacking of deb packages
    
    deb packages in modern Debian versions have the data tarball compressed
    with xz rather than gzip, and thus explicitly extracting data.tar.gz
    fails. Unfortunately ar doesn't support wildcards matching items to
    extract, so we have to find out what the name of the file is first and
    then extract it, relying on tar to figure out how to unpack it based on
    the filename rather than doing it with pipes and making that
    determination ourselves.
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

12	1	lib/bb/fetch2/__init__.py

commit e5986c78a6108fd7578989c20efcbf0b81c97e03
Author: Peter Kjellerstedt <peter.kjellerstedt@axis.com>
Date:   2016-05-23 13:35:49 +0200

    fetch2/git.py: References must match exactly
    
    Previously the code used to match a reference to its SHA-1 in
    _latest_revision() used the Python "in" operator, which made it match
    if the reference matched the beginning of an existing tag or
    branch. This test, however, must be exact. I.e., either the reference
    matches a tag or branch exactly, or it does not match at all.
    
    Signed-off-by: Peter Kjellerstedt <peter.kjellerstedt@axis.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

4	3	lib/bb/fetch2/git.py

commit 32c9689e4b492dc5821749e284e397d717af2a6c
Author: Markus Lehtonen <markus.lehtonen@linux.intel.com>
Date:   2016-05-26 11:05:43 +0300

    cookerdata: print an error if layer dir does not exist
    
    Makes it easier for user to identify problems, e.g. typos, in BBLAYERS.
    
    [YOCTO #9507]
    
    Signed-off-by: Markus Lehtonen <markus.lehtonen@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

4	0	lib/bb/cookerdata.py

commit a609ad7d560260a8d50dfa197cd960f496c5da73
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2016-05-31 11:16:58 +1200

    bitbake-layers: show-layers: disable parsing
    
    We don't need to parse all recipes just to show the list of layers,
    since that comes straight from the configuration, so save a bit of time
    by not doing so. (A minor regression that came in with the the
    bitbake-layers refactoring).
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bblayers/query.py

commit fde5c962cb69a11b072d1f238c2371a5137d030d
Author: Ed Bartosh <ed.bartosh@linux.intel.com>
Date:   2016-05-30 20:24:52 +0300

    toaster: use python3 explicitly
    
    Explicitly used python3 as default python for oe builds
    will continue to be python2.
    
    [YOCTO #9584]
    
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	3	bin/toaster

commit b91aa29fa20befd9841678a727bb91100363518f
Author: Ed Bartosh <ed.bartosh@linux.intel.com>
Date:   2016-05-30 16:10:59 +0300

    toaster: fix urllib imports
    
    Some functions have been moved from urllib to urllib.parse
    in python 3. Modifying the code to import unquote, urlencode and
    unquote_plus from urllib.parse if import from urllib fails should
    make it working on both python 2 and python 3.
    
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

6	3	lib/toaster/toastergui/views.py
5	1	lib/toaster/toastergui/widgets.py

commit c3ff90c9f028bff5733ebac7b5e72a4688addd3e
Author: Ed Bartosh <ed.bartosh@linux.intel.com>
Date:   2016-05-30 16:04:46 +0300

    toaster: don't use mru.count in the template
    
    mru is a list. It has a count method, but it differs from the
    one for the queryset. Using mru.count causes 'Latest project builds'
    section to silently disappear when toaster runs on python 3.
    
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/toaster/toastergui/templates/mrb_section.html

commit 0c38441ed99b49dae8ef9613e320f0760853d6aa
Author: Ed Bartosh <ed.bartosh@linux.intel.com>
Date:   2016-05-30 15:51:20 +0300

    toaster: use // operator instead of /
    
    Division operator works differently in Python 3. It results in
    float unlike in Python 2, where it results in int.
    
    Explicitly used "floor division" operator instead of 'division'
    operator. This should make the code to result in integer under
    both pythons.
    
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/toaster/orm/models.py
1	1	lib/toaster/toastergui/templatetags/projecttags.py

commit 750ca5c8d5a25fc519b75c56352dec7823c7e240
Author: Ed Bartosh <ed.bartosh@linux.intel.com>
Date:   2016-05-30 15:41:53 +0300

    Revert "buildinfohelper: work around unicode exceptions"
    
    This commit causes buildinfohelper to crash when run on python 3
    as python 3 doesn't have unicode builtin function.
    
    This reverts commit 7a309d964a86f3474eaab7df6d438ed797f935c0.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

4	6	lib/bb/ui/buildinfohelper.py

commit ceb6e5bd33a25c45c2afe1559b9394c466db8a92
Author: Ed Bartosh <ed.bartosh@linux.intel.com>
Date:   2016-05-13 17:01:16 +0300

    xmlrpc: add parameter use_builtin_types
    
    Added use_builtin_types parameter to XMLRPCProxyServer.__init__
    to fix this error:
        ERROR: Could not connect to server 0.0.0.0:37132
        : __init__() got an unexpected keyword argument 'use_builtin_types'
    
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/server/xmlrpc.py

commit b9a9ddfb6f53259be214032fb93812149d0cce19
Author: Ed Bartosh <ed.bartosh@linux.intel.com>
Date:   2016-05-12 16:32:53 +0300

    toaster: use knotty when working with bitbake server
    
    Using empty BITBAKE_UI environment variable causes bitbake server
    to fail with the error:
        FATAL: Unable to import extension module "" from bb.ui
               Valid extension modules: knotty or toasterui\n'
    
    Used BITBAKE_UI="knotty" when starting and stoping bitbake
    server to solve above issue.
    
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	2	lib/toaster/bldcontrol/localhostbecontroller.py

commit 9a6b211b2e15734379186408995851b50a2e0805
Author: Ed Bartosh <ed.bartosh@linux.intel.com>
Date:   2016-05-11 13:03:26 +0300

    toaster: fix migrations
    
    Created two new migrations due to the models changes made
    in python3 patchset.
    
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

34	0	bitbake/lib/toaster/bldcontrol/migrations/0004_auto_20160509_0946.py
89	0	bitbake/lib/toaster/orm/migrations/0007_auto_20160509_0946.py

commit 0c5d691746fb02807568a8a470969a0b68e21915
Author: Ed Bartosh <ed.bartosh@linux.intel.com>
Date:   2016-05-10 17:23:05 +0300

    toaster: moved import bb.server.xmlrpc
    
    Moved import xmlrpc module to the place where it's used
    to avoid toaster crashes when importing bitbake code.
    
    NOTE: This patch is made to be able to partly test toaster
    with bitbake from master. It can be removed as soon as bb.server.xmlrpc
    is ported to python 3.
    
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/toaster/bldcontrol/bbcontroller.py

commit 1414866b84fe1fd674ea79500cd62eda3aa30b33
Author: Ed Bartosh <ed.bartosh@linux.intel.com>
Date:   2016-05-10 17:18:22 +0300

    toaster: read timezone files in binary mode
    
    Used 'rb' mode to open files to avoid unicode error when code
    runs on python 3:
       UnicodeDecodeError: 'utf-8' codec can't decode byte 0x80
                           in position 44: invalid start byte
    
    [YOCTO #9584]
    
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	4	lib/toaster/toastermain/settings.py

commit 7cc3a41139abc5b8d1eef4376fb19aba3910ce0d
Author: Ed Bartosh <ed.bartosh@linux.intel.com>
Date:   2016-05-10 17:06:54 +0300

    toaster: use re.sub() instead of translate()
    
    translate has different set of parameters in python 3 and
    can't be used the way it's used in toaster api module.
    
    Replacing it with re.sub() should make the code work in
    both python 2  and python 3.
    
    [YOCTO #9584]
    
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	1	lib/toaster/toastergui/api.py

commit d41eb6d6c061cb35ec1ecd899f856876f9077167
Author: Ed Bartosh <ed.bartosh@linux.intel.com>
Date:   2016-05-10 16:18:02 +0300

    toaster: replace map with list comprehensions
    
    map returns map object in python 3. Replaced calls of
    map to equivalent list comprehensions in the code which
    requires lists.
    
    [YOCTO #9584]
    
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/toaster/orm/models.py
1	2	lib/toaster/toastergui/tables.py
18	27	lib/toaster/toastergui/views.py

commit 372dd3abcb201bd9ac2c3189c5505d3578ce0dd0
Author: Ed Bartosh <ed.bartosh@linux.intel.com>
Date:   2016-05-10 16:13:50 +0300

    toaster: use items and range instead of old APIs
    
    Used items() and range() APIs instead of iteritems() and
    xrange() as latter don't exist in python 3
    
    [YOCTO #9584]
    
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/toaster/contrib/tts/config.py
1	1	lib/toaster/orm/models.py
1	1	lib/toaster/toastergui/tablefilter.py
1	1	lib/toaster/toastergui/views.py
2	2	lib/toaster/toastergui/widgets.py

commit 752ea00919ef054622a51ce097923309934eff2b
Author: Ed Bartosh <ed.bartosh@linux.intel.com>
Date:   2016-05-10 15:28:50 +0300

    toaster: use decode('utf-8') for binary data
    
    Decoded binary data to utf-8 to fix the following
    error when runnign on python 3:
    TypeError: Type str doesn't support the buffer API
    
    [YOCTO #9584]
    
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/toaster/bldcontrol/localhostbecontroller.py
1	1	lib/toaster/bldcontrol/management/commands/loadconf.py
1	1	lib/toaster/orm/models.py

commit 46f185afaaef74c566eec6d8fc1edc68a3b96b32
Author: Ed Bartosh <ed.bartosh@linux.intel.com>
Date:   2016-05-10 15:24:53 +0300

    toaster: modified list of dependencies
    
    Removed dependency to argparse and wsgiref as they're in
    standard python library.
    
    wsgiref crashes during installation with python 3 as it's not
    compatible with python 3.
    
    Added dependency to pytz as it's used in the toaster code.
    
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	2	toaster-requirements.txt

commit 3f1e68c783308dcb51242d0fdeef758e581ccc8c
Author: Ed Bartosh <ed.bartosh@linux.intel.com>
Date:   2016-05-10 15:17:26 +0300

    toaster: fix local imports
    
    Replaced local imports with absolute imports.
    Used .module for local imports.
    
    This should make the code to work on python 2 and python 3.
    
    [YOCTO #9584]
    
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/toaster/bldcontrol/bbcontroller.py
1	1	lib/toaster/bldcontrol/localhostbecontroller.py
1	1	lib/toaster/bldcontrol/management/commands/checksettings.py
1	1	lib/toaster/bldcontrol/management/commands/loadconf.py

commit 1abaa1c6a950b327e6468192dd910549643768bb
Author: Ed Bartosh <ed.bartosh@linux.intel.com>
Date:   2016-05-10 14:35:55 +0300

    toaster: fix imports to work for python 3
    
    Some APIs have been moved to other modules in python 3:
     getstatusoutput: moved from commands to subproces
     urlopen: moved from urllib2 to urllib.request
     urlparse: moved from urlparse to urllib.parse
    
    Made the imports work for both python versions by
    catching ImportError and importing APIs from different
    modules.
    
    [YOCTO #9584]
    
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

0	1	lib/bb/utils.py
12	4	lib/toaster/orm/models.py

commit 249d0bc6094ec9f369a02b78d8ed634a239e5ee4
Author: Ed Bartosh <ed.bartosh@linux.intel.com>
Date:   2016-05-10 11:39:04 +0300

    toaster: get rid of using reduce
    
    Replaced compicated calls of reduce with more clear code.
    As reduce was removed from python 3 this change is mandatory
    for the code to work on both pythons.
    
    Here is an example change for illustration purposes:
    
    original code:
    
      querydict = dict(zip(or_keys, or_values))
      query = reduce(operator.or_, map(lambda x: __get_q_for_val(x, querydict[x]), [k for k in querydict])))
    
    replaced with:
    
      query = None
      for key, val in zip(or_keys, or_values):
          x = __get_q_for_val(k, val)
          query = query | x if query else x
    
    [YOCTO #9584]
    
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

44	20	lib/toaster/toastergui/views.py
13	7	lib/toaster/toastergui/widgets.py

commit 9dd9c1393a84d1110c647e84253af8e0bb6acc45
Author: Ed Bartosh <ed.bartosh@linux.intel.com>
Date:   2016-05-10 11:04:49 +0300

    toaster: use force_text instead of force_bytes
    
    Usage of force_bytes in BuildRequest.__str__ method caused
    python 3 to throw "__str__ returned non-string (type bytes)"
    error.
    
    Replaced force_bytes with force_text to make the code working
    on both python 2 and python 3.
    
    [YOCTO #9584]
    
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	2	lib/toaster/bldcontrol/management/commands/runbuilds.py
2	2	lib/toaster/bldcontrol/models.py

commit ee7df1ca00c76f755057c157c093294efb9078d8
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2016-05-13 14:11:02 +0100

    goggle/image-writer: Drop since bitrotting and no longer used
    
    The upgrade to python3 is the final nail in the coffin for image-writer
    and the goggle UI. Neither seem used or recieve patches and are based
    on old versions of GTK+ so drop them, and the remaining crumbs support
    pieces.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

0	127	bin/image-writer
0	17	lib/bb/ui/crumbs/__init__.py
0	0	lib/bb/ui/crumbs/hig/__init__.py
0	44	lib/bb/ui/crumbs/hig/crumbsdialog.py
0	70	lib/bb/ui/crumbs/hig/crumbsmessagedialog.py
0	219	lib/bb/ui/crumbs/hig/deployimagedialog.py
0	172	lib/bb/ui/crumbs/hig/imageselectiondialog.py
0	298	lib/bb/ui/crumbs/hig/layerselectiondialog.py
0	437	lib/bb/ui/crumbs/hig/propertydialog.py
0	122	lib/bb/ui/crumbs/hig/settingsuihelper.py
0	38	lib/bb/ui/crumbs/hobcolor.py
0	904	lib/bb/ui/crumbs/hobwidget.py
0	186	lib/bb/ui/crumbs/persistenttooltip.py
0	23	lib/bb/ui/crumbs/progress.py
0	60	lib/bb/ui/crumbs/progressbar.py
0	606	lib/bb/ui/crumbs/puccho.glade
0	551	lib/bb/ui/crumbs/runningbuild.py
0	34	lib/bb/ui/crumbs/utils.py
0	126	lib/bb/ui/goggle.py

commit c53c7418d392452450352ca2175667dbdbd92401
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2016-05-13 12:56:51 +0100

    image-writer/goggle: Disable pygtkcompat problems
    
    Disable the problematic gtk usage for use with pygtkcompat. The following
    commit removes these tools/UIs entirely but we may as well leave this
    piece in the history in case anyone does want a starting point for reusing
    them.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	1	bin/image-writer
1	1	lib/bb/ui/crumbs/hig/crumbsdialog.py
4	4	lib/bb/ui/crumbs/hobwidget.py
8	7	lib/bb/ui/crumbs/progressbar.py

commit 710351610e3ca4a1b61abc67564f84907e9b2f1c
Author: Jeremy Puhlman <jpuhlman@mvista.com>
Date:   2016-05-12 15:32:05 -0700

    lib/bb: Set required python 3 version to 3.4.0
    
    get_context was added to mutliprocessing as part of 3.4.0
    
    Signed-off-by: Jeremy Puhlman <jpuhlman@mvista.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	2	lib/bb/__init__.py

commit b19a4c5166303b1fa680582adf63e6a5564bfb4c
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2016-05-12 08:22:52 +0100

    data_smart: Simplify ExpansionError exception
    
    This seemingly convoluted syntax doesn't work in python3. Instead
    use the chained exception handling syntax which appears to make more
    sense here.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	2	lib/bb/data_smart.py

commit d0f904d407f57998419bd9c305ce53e5eaa36b24
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2016-05-12 08:30:35 +0100

    bitbake: Convert to python 3
    
    Various misc changes to convert bitbake to python3 which don't warrant
    separation into separate commits.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

4	1	bin/bitbake
2	2	bin/bitbake-diffsigs
2	2	bin/bitbake-dumpsig
2	3	bin/bitbake-layers
1	1	bin/bitbake-prserv
1	1	bin/bitbake-selftest
31	29	bin/bitbake-worker
1	1	bin/bitdoc
6	2	bin/image-writer
1	1	bin/toaster-eventreplay
1	1	contrib/dump_cache.py
20	24	lib/bb/COW.py
1	1	lib/bb/__init__.py
6	7	lib/bb/build.py
6	12	lib/bb/cache.py
1	8	lib/bb/checksum.py
5	10	lib/bb/codeparser.py
1	1	lib/bb/command.py
19	19	lib/bb/cooker.py
2	2	lib/bb/data_smart.py
3	6	lib/bb/event.py
1	1	lib/bb/exceptions.py
16	20	lib/bb/fetch2/__init__.py
2	2	lib/bb/fetch2/local.py
3	3	lib/bb/fetch2/npm.py
1	1	lib/bb/fetch2/perforce.py
3	5	lib/bb/fetch2/sftp.py
2	4	lib/bb/fetch2/ssh.py
24	24	lib/bb/fetch2/wget.py
6	5	lib/bb/main.py
1	1	lib/bb/msg.py
9	9	lib/bb/parse/ast.py
5	5	lib/bb/persist_data.py
26	10	lib/bb/process.py
1	1	lib/bb/providers.py
1	1	lib/bb/pysh/builtin.py
2	2	lib/bb/pysh/interp.py
1	1	lib/bb/pysh/pyshlex.py
2	2	lib/bb/pysh/pyshyacc.py
56	61	lib/bb/runqueue.py
4	4	lib/bb/server/process.py
25	23	lib/bb/server/xmlrpc.py
7	12	lib/bb/siggen.py
6	6	lib/bb/taskdata.py
2	2	lib/bb/tests/codeparser.py
6	6	lib/bb/tests/data.py
1	1	lib/bb/tests/parse.py
1	1	lib/bb/ui/crumbs/hobwidget.py
3	3	lib/bb/ui/crumbs/progressbar.py
6	6	lib/bb/ui/crumbs/runningbuild.py
8	3	lib/bb/ui/goggle.py
3	3	lib/bb/ui/knotty.py
4	4	lib/bb/ui/ncurses.py
2	2	lib/bb/ui/uievent.py
10	10	lib/bb/utils.py
1	1	lib/bblayers/action.py
1	1	lib/bblayers/common.py
6	6	lib/bblayers/layerindex.py
2	2	lib/bblayers/query.py
4	4	lib/codegen.py
2	0	lib/ply/yacc.py
1	1	lib/prserv/db.py
7	7	lib/prserv/serv.py

commit bf25f05ce4db11466e62f134f9a6916f886a93d9
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2016-05-12 08:22:18 +0100

    bitbake: Drop futures usage since we're python 3
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/cooker.py
1	1	lib/bb/exceptions.py
0	2	lib/bb/fetch2/__init__.py
0	1	lib/bb/fetch2/perforce.py
1	2	lib/bb/parse/ast.py
1	1	lib/bb/parse/parse_py/BBHandler.py

commit 5ee80d77bc278758e411048ed09551ab65b9e72d
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2016-05-06 09:07:37 +0100

    bitbake/pyinotify.py: Upgrade to py3 version
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

101	155	lib/pyinotify.py

commit 2f4b98af93c971a8c466ffaf3c09cca0edb6e3ad
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2016-05-06 09:06:51 +0100

    bitbake/bs4: Upgrade 4.3.2 -> 4.4.1 (python 3 version)
    
    Upgrade to 4.4.1 which has been run through 2to3 as per the maintainers
    recommendation for v3 use.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

87	25	lib/bs4/__init__.py
5	2	lib/bs4/builder/__init__.py
59	12	lib/bs4/builder/_html5lib.py
30	26	lib/bs4/builder/_htmlparser.py
31	16	lib/bs4/builder/_lxml.py
21	10	lib/bs4/dammit.py
40	28	lib/bs4/diagnose.py
230	116	lib/bs4/element.py
112	17	lib/bs4/testing.py
10	4	lib/bs4/tests/test_builder_registry.py
16	3	lib/bs4/tests/test_html5lib.py
13	0	lib/bs4/tests/test_htmlparser.py
2	17	lib/bs4/tests/test_lxml.py
78	29	lib/bs4/tests/test_soup.py
238	56	lib/bs4/tests/test_tree.py

commit d830dccf948d188492cecfcf2ff053f31740dc21
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2016-05-24 15:54:38 +0100

    classes/base.bbclass: Fix missing getVarFlag parameter
    
    [YOCTO #9603]
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	2	classes/base.bbclass

commit 138329c58e92744c56aae3ab70ceeef09613250c
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2016-05-20 12:48:02 +0100

    cooker: Fix parse progress for python3
    
    Under python the type conversions can mean there are float values
    used for triggering the parse progress events which then fails.
    Add an explict int() conversion to ensure the parse events are
    generated under python3.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/cooker.py

commit acac9bf660ac5939beb64d7b8d55541dea1c7b4e
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2016-05-19 13:59:33 +0100

    toaster: tests builds Add SSTATE_MISS as a valid condition for tc=833
    
    Task.SSTATE_NA and Task.SSTATE_MISS are both valid conditions for the
    condition that a Task.OUTCOME_COVERED and Task.OUTCOME_PREBUILT.
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

10	3	lib/toaster/tests/builds/test_core_image_min.py

commit 94418b1b2f9466d35461acdb982fd6b130b2331c
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2016-05-19 13:59:32 +0100

    toaster: tests build Add a test for a build of core-image-minimal
    
    This is a port of the oe self test to the django test framework from
    oe-core meta/lib/oeqa/selftest/_toaster.py
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

389	0	lib/toaster/tests/builds/test_core_image_min.py

commit d1882371cae6b9a8296ea739e6e46ca6a6dc9da8
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2016-05-19 13:59:31 +0100

    toaster: tests Add a BuildTest helper class
    
    Add a helper class for running build tests. Subclass this and call the
    build method to get setup for running tests on the resulting data from a
    build.
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

14	0	lib/toaster/tests/builds/README
0	0	lib/toaster/tests/builds/__init__.py
134	0	lib/toaster/tests/builds/buildtest.py

commit c52e34cac4362ba0a3cb3ea1fcb639e1d802aa85
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2016-05-19 13:59:30 +0100

    toaster: Add a specific test settings file
    
    When running certain tests we want a particular database specified.
    When bitbake toaster ui is being tested pass it these test settings so
    that it uses the same database as the unit tests running.
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

41	0	lib/toaster/toastermain/settings-test.py

commit e8e059602c31394a4be5293e2ca0b8434fb4a8cf
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2016-05-19 13:59:29 +0100

    toaster: runbuilds move the execution sequence out of the poll loop
    
    Move the execution sequence for a build out of the polling loop and into
    it's own fuction. This means that we can call the function on it's own
    if we just want to trigger one build rather than infinite polling.
    This is something needed for the build tests.
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

16	15	lib/toaster/bldcontrol/management/commands/runbuilds.py

commit 973c740404ca6a09feea250d3433075995067fe0
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2016-05-19 13:59:28 +0100

    toaster: Remove DATABASE_URL being passed around as an environment var
    
    We don't need to pass the DATABASE_URL around and read it back if we
    setup the django framework in the correct way.
    We make the default sqlite database path a full path so that the
    database isn't being assumed to be in CWD.
    
    Also add some more useful comments on the database settings.
    
    This is preparation work to migrate the build tests and be able to
    trigger builds on differently configured databases.
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

0	2	bin/toaster
10	10	lib/bb/ui/buildinfohelper.py
0	9	lib/toaster/toastermain/management/commands/get-dburl.py
10	57	lib/toaster/toastermain/settings.py

commit 62c74eb38f44d98b40427edf56e40785b076a938
Author: Sujith H <sujith.h@gmail.com>
Date:   2016-05-19 11:43:32 +0100

    toaster-tests: tests for project config
    
    Add basic tests to validate the value user types
    in the text box for IMAGEFS_TYPES. Added a test
    case to show the checkbox get automatically selected
    when user types value available in the check list.
    Added a test case to verify if the check box is enabled
    then the text box should also get updated accordingly.
    
    [YOCTO #7828]
    
    Signed-off-by: Sujith H <sujith.h@gmail.com>
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

115	0	lib/toaster/tests/browser/test_project_config_page.py

commit 99b1b52fe4f2b593d7835d2db64eb028ed42600a
Author: Belen Barros Pena <belen.barros.pena@linux.intel.com>
Date:   2016-05-19 11:43:31 +0100

    toaster: projectconf Small tweaks to IMAGE_FSTYPES form
    
    Add a label to clarify the purpose of the first input field, replace <p>
    with <label> for the second set of controls, and give some top margin to
    the validation message.
    
    Signed-off-by: Belen Barros Pena <belen.barros.pena@linux.intel.com>
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	2	lib/toaster/toastergui/templates/projectconf.html

commit c14cbb026598be064f08f46bb513456c7a3089f5
Author: Sujith H <sujith.h@gmail.com>
Date:   2016-05-19 11:43:30 +0100

    toaster: handle multiple imagefs types
    
    This functionality helps users to add custom
    image fs types available other than the checkboxes
    in the UI. User can add imagefs types in the text
    box and use them in the build.
    
    [YOCTO #7828]
    
    Signed-off-by: Sujith H <sujith.h@gmail.com>
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

70	41	lib/toaster/toastergui/templates/projectconf.html

commit 033c5a16ff19781ed793c2d97d285884017a2a4e
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2016-05-19 15:16:11 +0100

    cooker: Improve taskgraph file handling
    
    Use open() instead of file() and close files when finished with them.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

7	4	lib/bb/cooker.py

commit 4d880f1d5794f569b6eb5f6e7e3001dd671633c0
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2016-05-18 23:20:42 +0100

    codeparser: Increase cache version after code parser dependency changes
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/codeparser.py

commit bdeb3dcd7c92e62a7c079e7b27048c4114f24a3a
Author: Christopher Larson <chris_larson@mentor.com>
Date:   2016-04-30 12:52:45 -0700

    bb.codeparser: track variable flag references
    
    Previously we only tracked the flags (minus excluded) of variables we depend
    on, but not the flags we use explicitly.
    
    Signed-off-by: Christopher Larson <chris_larson@mentor.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

9	3	lib/bb/codeparser.py

commit 72900522778b6ff08b135bf8bb97dff3f1a20bd9
Author: Christopher Larson <chris_larson@mentor.com>
Date:   2016-04-30 12:52:49 -0700

    Provide LAYERDIR_RE for layer.conf
    
    This variable is a regex-escaped version of LAYERDIR, for safer use in
    BBFILE_PATTERN, so as to avoid issues with regex special characters in the
    layer path.
    
    [YOCTO #8402]
    
    Signed-off-by: Christopher Larson <chris_larson@mentor.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	doc/bitbake-user-manual/bitbake-user-manual-hello.xml
11	0	doc/bitbake-user-manual/bitbake-user-manual-ref-variables.xml
7	2	lib/bb/cookerdata.py

commit 6df0425a9d5c4c520eb7845d8f6175d9641779a7
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2016-05-18 23:20:21 +0100

    cache: Increase cache version after task checksum calculation changes
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/cache.py

commit 4506ccf1495c6ed6e8ed678f4baa166bc94d1761
Author: Christopher Larson <chris_larson@mentor.com>
Date:   2016-04-30 12:52:48 -0700

    Implement support for per-task exports
    
    Signed-off-by: Christopher Larson <chris_larson@mentor.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

10	0	bin/bitbake-worker
3	1	lib/bb/data.py

commit 7ff5b9eed82b7f4fd138fc6d746a0b79efbea98a
Author: Christopher Larson <chris_larson@mentor.com>
Date:   2016-04-30 12:52:46 -0700

    bb.cooker: show limited traceback for parsing ExpansionError
    
    It's useful to see tracebacks for ExpansionErrors, but only if we skip the
    leading bitbake-internal elements, otherwise we see elements of the expansion
    process.
    
    As one example:
    
    Before:
    
        ERROR: ExpansionError during parsing /scratch/yocto-new/external-as-needed/poky/meta/recipes-core/glibc/glibc-locale_2.23.bb: Failure expanding variable PV[:=], expression was ${@get_external_libc_version(d)} which triggered exception AttributeError: 'module' object has no attribute 'external'
    
    After:
    
        ERROR: ExpansionError during parsing /scratch/yocto-new/external-as-needed/poky/meta/recipes-core/glibc/glibc-locale_2.23.bb
        Traceback (most recent call last):
          File "PV[:=]", line 1, in <module>
          File "/scratch/yocto-new/external-as-needed/meta-sourcery/recipes-external/glibc/glibc-external-version.inc", line 3, in get_external_libc_version(d=<bb.data_smart.DataSmart
        object at 0x7f05d2566950>):
                 sopattern = os.path.join(d.getVar('base_libdir', True), 'libc-*.so')
            >    found_paths = oe.external.find_sysroot_files([sopattern], d)
                 if found_paths:
        ExpansionError: Failure expanding variable PV[:=], expression was ${@get_external_libc_version(d)} which triggered exception AttributeError: 'module' object has no attribute 'external'
    
    Signed-off-by: Christopher Larson <chris_larson@mentor.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

5	2	lib/bb/cooker.py

commit 5e542df9b966a99b5a5b8aa7cf6100174aff54b2
Author: Christopher Larson <chris_larson@mentor.com>
Date:   2016-04-30 12:41:00 -0700

    bitbake-layers: convert to plugin-based
    
    This uses bb.utils.load_plugins, based on the plugin handling in recipetool
    and devtool in oe-core.
    
    Signed-off-by: Christopher Larson <chris_larson@mentor.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

60	1005	bin/bitbake-layers
2	0	lib/bblayers/__init__.py
233	0	lib/bblayers/action.py
33	0	lib/bblayers/common.py
270	0	lib/bblayers/layerindex.py
500	0	lib/bblayers/query.py

commit 0e030c4d074c41859608dab5f3ad26b05f56b306
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2016-05-16 22:52:00 +0100

    knotty: Fix output buffering issues
    
    We need to flush the footer removal, else it may not be outputted until
    the buffer is flushed as part of StreamHandler and this would lead to
    it removing the ERROR output just printed which is extremely confusing.
    
    Also ensure the footer is cleared before printing a summary as in
    some cases it wasn't being removed, also leading to user confusion.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	0	lib/bb/ui/knotty.py

commit 2a6659fd748e255a02c2f9d047829d6edfe65317
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2016-05-16 22:51:08 +0100

    siggen: Fixes to handle sigdata/siginfo files only containing basehash data
    
    The signature data file comparison functions are meant to be able to
    handle data files containing just the base hash data. This had regressed
    in some places so add fixes to allow these comparisons to be made. The
    runtime components in the data files are optional.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

10	1	lib/bb/siggen.py

commit 71a45c600e47af5a19412bc3c5a9ba242bfb4638
Author: Elliot Smith <elliot.smith@intel.com>
Date:   2016-05-12 15:10:38 +0100

    toaster: don't show "Rebuild" button for cancelled cli builds
    
    [YOCTO #8515]
    
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

14	11	lib/toaster/toastergui/templates/mrb_section.html

commit d39d2edca95900da433074ee95a192d7bfe7090d
Author: Elliot Smith <elliot.smith@intel.com>
Date:   2016-05-12 15:10:37 +0100

    toasterui: capture keyboard interrupts the same way as knotty
    
    knotty captures two levels of keyboard interrupt: a single interrupt
    or two interrupts in a row. These then trigger stateShutdown
    and stateForceShutdown respectively.
    
    toasterui doesn't have an equivalent way of capturing interrupts and
    using them to shut down bitbake. Now that we are no longer using
    knotty + XMLRPCServer for our command line builds (since switching to
    per-project build directories), we see some odd side effects of this,
    such as builds continuing after they have been interrupted on the
    command line.
    
    Bring toasterui in line with knotty (copy-paste most of the code
    in knotty.py which deals with interrupts) so that a keyboard
    interrupt actually shuts down the bitbake server (if not in
    observe only mode).
    
    Additionally use the cancel_cli_build() method to set the Build
    status to CANCELLED in Toaster's db when we get keyboard interrupts.
    This means that builds interrupted on the command line show as
    cancelled (same as if they'd been cancelled from the Toaster UI),
    as specified in the UI designs.
    
    [YOCTO #8515]
    
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

16	1	lib/bb/ui/toasterui.py

commit 1486c770327b53bb5e04baa5f3ea26d8154aed63
Author: Elliot Smith <elliot.smith@intel.com>
Date:   2016-05-12 15:10:36 +0100

    buildinfohelper: add method to set current build as CANCELLED
    
    This will be used from toasterui to cancel the current command-line
    build when a keyboard interrupt is captured.
    
    [YOCTO #8515]
    
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

10	0	lib/bb/ui/buildinfohelper.py

commit 7f61a68f2caba538e302ca9c2727bb43a6c77c64
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2016-05-16 14:50:41 +0100

    toaster: toastergui tests Fix toastertable tests
    
    After clean ups remove api assumptions. Our table data often contains
    html snippets to display certain things such as dependency pop overs or
    simply links to other parts of the UI. Take these into account when
    testing the values of the table data.
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

66	32	lib/toaster/toastergui/tests.py

commit 16d8198e8f6668c5fa5467ff4bda86c5d66a6cad
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2016-05-16 14:50:40 +0100

    toaster: toastertables: Clean up and fix up a number of items
    
     - Remove the unused 'computation' field
     - Remove the code to try to make the tables behave like an api
     - Remove custom JSON encoder in favour of DjangoJSONEncoder
     - Simplify get_data and add comments
     - Add exception type instead of using generic Exception
     - Clean up python style warnings
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	20	lib/toaster/toastergui/static/js/table.js
0	11	lib/toaster/toastergui/tables.py
71	56	lib/toaster/toastergui/widgets.py

commit d19e305ffa44a848b02ede63dc5de8d2640089e6
Author: Ed Bartosh <ed.bartosh@linux.intel.com>
Date:   2016-05-10 17:10:30 +0300

    toaster: use new syntax of except statement
    
    Used except 'except (<exception1>, <exception2>):' syntax as it's
    supported by python 2 and pythone 3.
    
    Old syntax 'except <exception1>, <exception2>:' is not supported
    by python 3.
    
    [YOCTO #9584]
    
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	3	lib/toaster/toastergui/views.py

commit 09d37ee51219edcd0be6fd24c82fce392533b39b
Author: Ed Bartosh <ed.bartosh@linux.intel.com>
Date:   2016-05-10 11:31:14 +0300

    toaster: use print function in toaster script
    
    Used print() function instead of print statement
    to make toaster script to work with both python 2 and python 3
    
    [YOCTO #9584]
    
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	2	bin/toaster

commit 3d7ad7ba0d1a6f688ae885817c049f2a8ced11b5
Author: Ed Bartosh <ed.bartosh@linux.intel.com>
Date:   2016-05-10 16:27:19 +0300

    toaster: use 'in' instead of has_key
    
    Dictionary method has_key is deprecated in python 2 and absent
    in python 3.
    
    Used '<key> in <dict>' statement to make the code working on
    both python 2 and python 3.
    
    [YOCTO #9584]
    
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

14	14	lib/toaster/toastergui/views.py
1	1	lib/toaster/toastermain/settings.py
1	1	lib/toaster/toastermain/urls.py

commit 29f6ade68fb2b506a23a7eb3a00cdcffa291b362
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2016-05-12 23:27:25 +0100

    server/process: Fix missing log messages issue
    
    Currently if the server dies, its possible that log messages are never
    displayed which is particularly problematic if one of those messages
    is the exception and backtrace the server died with.
    
    Rather than having the event queue exit as soon as the server disappears,
    we should pop events from the queue until its empty before exiting.
    
    This patch tweaks that code so that even if the server is dead and we're
    going to exit, we return any events left in the pipe. This makes
    debugging certain failures much easier.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

4	4	lib/bb/server/process.py

commit 473deeb0fc6065693e1fcfcbb8b79753103db537
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2016-05-13 14:02:56 +0100

    cooker/toasterui: Drop SEND_DEPENDS_TREE UI feature
    
    Now the event is sent unconditionally we can drop this feature
    as its no longer needed.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	7	lib/bb/cooker.py
1	1	lib/bb/ui/toasterui.py

commit 5ddaf5b7ed1001d2dd3f67e7a6d704afa85479d2
Author: Patrick Ohly <patrick.ohly@intel.com>
Date:   2016-05-12 17:00:10 +0200

    runqueue.py: always emit bb.event.DepTreeGenerated
    
    The data included in the event is useful for implementing a pre-build
    check that warns about unexpected components, for example because of
    an incorrect configuration or changed dependencies.
    
    Such a check can be done in a .bbclass that gets inherited
    globally. But in contrast to a UI, such a class cannot request that
    the event shall be emitted, and thus the event has to be emitted
    whether there is a consumer or not.
    
    This was done conditionally earlier out of concerns about the
    performance impact. But now events are handled more efficiently, so
    that concern no longer seems valid: in some simple testing (admittedly
    on a fast build workstation), the two lines (generating the data and
    emitting the event with it) only took about 0.05 seconds (measured
    with timeit). That was for a build with roughly 500 recipes (from
    pn-buildlist aka depgraph['pn']), triggered via the command line. That
    was even with a consumer of the data active and doing some work, so it
    should be even faster when there is no consumer.
    
    Signed-off-by: Patrick Ohly <patrick.ohly@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

4	4	lib/bb/runqueue.py

commit 7ac374adf1cc70173ff6cc492bc078bba1cf500b
Author: Elliot Smith <elliot.smith@intel.com>
Date:   2016-05-13 17:02:58 +0100

    toaster: fix progress bar in MySQL environment
    
    When using MySQL, the project builds info delivered by MySQL
    differs from that delivered by SQLite: the former returns text
    values from the enumeration for Build outcomes, while the latter
    returns the integer value. This causes the progress bar JS to
    break, as it is expecting outcome strings.
    
    Modify the recent_build() method to include an outcomeText property
    for each Build object, then use this in the conditionals in the
    progress bar JS.
    
    [YOCTO #9498]
    
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	0	lib/toaster/orm/models.py
2	2	lib/toaster/toastergui/static/js/mrbsection.js

commit 9a4db1aa608c17d31bf5ea1cab5a99beb565dd83
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2016-05-12 08:15:34 +0100

    main: Ensure exceptions are correctly displayed
    
    If the cooker fails to start, ensure a correct exception is displayed to the
    user. After handling any queued events simply re-raise the original exception
    else the output can be unclear.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	2	lib/bb/main.py

commit b90a16408a5c45ce5312384f278e19d09f8dda4d
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2016-05-12 08:13:04 +0100

    cookerdata: Fix log messages and ensure we exit
    
    The string formatting wasn't correct and we should exit if we hit
    errors here similar to the other exception handlers.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	1	lib/bb/cookerdata.py

commit d7db75020ed727677afbad07a90fb3eac0bf2c45
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2016-05-12 08:05:32 +0100

    event/msg: Pass formatted exceptions
    
    python3 can't cope with the previous approach we were using to pass
    exceptions through the RPC. Avoid this by creating a formatted exception
    on the sender side.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	1	lib/bb/event.py
3	2	lib/bb/msg.py

commit ca8c91acc9396385834b266d4e8b84d917e5e298
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2016-05-12 08:04:17 +0100

    fetch: Use OrderedDict for url parameters
    
    Without this, the dict can reorder causing sanity test failures.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	2	lib/bb/fetch2/__init__.py
6	5	lib/bb/tests/fetch.py

commit bf1a92d0c002d73e8a34472dced1343dc4a4251a
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2016-05-12 08:02:45 +0100

    main: Change warn() -> warning()
    
    This avoids a deprecation warning in python 3.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/main.py

commit 7ed82bd1fe7bdd93b0614119c42eb218dc5d83e6
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2016-05-12 08:01:23 +0100

    cooker: Fix log message syntax
    
    Ensure we pass the string parameter correctly.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/cooker.py

commit 8902c29638411d312e6fc4a197707e5742652e15
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2016-05-11 23:00:15 +0100

    utils: Force bitbake to en_US.UTF-8 locale setting everywhere
    
    Under python 3, if we spawn python processes, we need to have a UTF-8
    locale, else python's file access methods will use ascii. You can't
    change that mode once the interpreter is started so we have to ensure
    a locale is set. Ideally we'd use C.UTF-8 since OE already forces the
    C locale but not all distros support that and we need to set something.
    Was tempted to choose en_GB so colour gets spelt correctly :).
    
    This is in some ways pretty nasty, forcing it into the environment
    everywhere however we only have a limited number of ways of making
    everything work correctly and this beats having to add utf-8 encoding
    to every file access command.
    
    A similar change will be needed to bitbake.conf in OE.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

7	0	lib/bb/utils.py

commit 1ffd8737e065a3cd634c74cd67e634d785ea93a5
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2016-05-11 22:57:10 +0100

    bin/bitbake-worker: Fix invalid bb.msg.fatal usage
    
    The logging domain specified to bb.msg.fatal was invalid. Replace with
    a logger.critical() call instead.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	1	bin/bitbake-worker

commit 322949c77dbaa4db01b5a43d85b39a2af67ba7b2
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2016-05-11 22:56:29 +0100

    contrib/dump_cache.py, cache: Fix to use python 3 syntax
    
    Some tweaks to use python 3 syntax in a python 2 compatible way.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	2	contrib/dump_cache.py
1	1	lib/bb/cache.py

commit 624dd92952b2fc736fd86abe5f2390b87b3a7dd3
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2016-05-11 22:55:53 +0100

    knotty: Ensure consolelog file handle is closed
    
    If we don't close the console log file handle, python prints a warning
    about unclosed file handles upon exit which is annoying.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

5	0	lib/bb/ui/knotty.py

commit 2c39ebdd2762d027f007a6a769fdf023cdf3da2b
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2016-05-11 22:55:14 +0100

    runqueue: Improve timestamp comparisons
    
    python3 cares more about invalid type comparisons. Add break statements
    and better tests to make the code paths clearer and avoid type issues
    in python3. No code functionality change.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

5	1	lib/bb/runqueue.py

commit e6a0296ba29c3fbc8417d1df7a01d50562668a41
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2016-05-11 22:54:22 +0100

    daemonize/prserv/tests/fetch: Convert file() -> open()
    
    Use python3 compatible functions.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	2	lib/bb/daemonize.py
1	1	lib/bb/tests/fetch.py
5	5	lib/prserv/serv.py

commit 8055fbe840db426d6859ee2248f86abd44244b30
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2016-05-10 00:01:52 +0100

    toaster: tests browser Add test for creating a project
    
    Add browser tests for creating a project and test validation of
    duplicate project names.
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

109	0	lib/toaster/tests/browser/test_new_project_page.py

commit b2fba7a0820d77e1076c05b8ffcd960d4fc883a5
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2016-05-10 00:01:51 +0100

    toaster: models Add missing import sys
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	0	lib/toaster/orm/models.py

commit 05ddf48cda6690adab4c097b16387578523e751b
Author: Sujith H <sujith.h@gmail.com>
Date:   2016-05-10 00:01:50 +0100

    toaster: ui handles duplicate project name in project page
    
    When already existing project name is typed by user,
    the ui pops up message regarding the existance of the
    project name. When an existing project is typed the save
    button will be disabled. Else user can proceed ahead by
    modifying the project name.
    
    [YOCTO #7005]
    
    Signed-off-by: Sujith H <sujith.h@gmail.com>
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

7	0	lib/toaster/toastergui/static/js/projecttopbar.js
2	1	lib/toaster/toastergui/templates/projecttopbar.html

commit 83e5be7e74850f1bb019668de07f3f745063fe38
Author: Sujith H <sujith.h@gmail.com>
Date:   2016-05-10 00:01:49 +0100

    toaster: ui handles duplicate project name in new project page
    
    When already existing project name is typed by user,
    the ui pops up message regarding the existance of the
    project name.
    
    [YOCTO #7005]
    
    Signed-off-by: Sujith H <sujith.h@gmail.com>
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

10	2	lib/toaster/toastergui/templates/newproject.html

commit 3b1843553f23d78f1ddfec9f7865895ee42356a3
Author: Sujith H <sujith.h@gmail.com>
Date:   2016-05-10 00:01:48 +0100

    toaster: projectNameValidation API added
    
    The projectNameValidation API would help users
    to validate if a project name exists or not. This
    API is added to libtoaster.
    
    [YOCTO #7005]
    
    Signed-off-by: Sujith H <sujith.h@gmail.com>
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

62	0	lib/toaster/toastergui/static/js/libtoaster.js

commit 49bea821a2edad5e19c3a566d1a80c23718dede9
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2016-05-09 14:15:26 +0100

    runqueue: Fix missing fakeworker under dry run
    
    We shouldn't try and use fakeworker when performing a dry_run. This
    makes the core match the other fakeworker execution points.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/runqueue.py

commit 0737e003ca549d08a7dfe13452ae982f2e11fecd
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2016-05-09 14:07:17 +0100

    lib/bb/utils.py: Fix explode_dep_versions2() determinism issue
    
    When we pass data into explode_dep_versions2(), we need to result to be
    able to be processed in a deterministic way so that we end up with
    consistent hash values. This means we need an ordered structure rather
    than an unordered one.
    
    To do this, return an OrderedDict() rather than a dict().
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	1	lib/bb/utils.py

commit 58304fcce9727fd89564436771356c033ecd22a3
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2016-05-09 14:05:09 +0100

    bin, toaster: Fix print and exception syntax
    
    This updates the print "" syntax to print() and fixes some exception
    handling syntax such that its compatible with python v2 and v3.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	3	bin/bitbake-diffsigs
2	2	bin/bitbake-dumpsig
9	9	lib/toaster/bldcontrol/management/commands/checksettings.py
2	2	lib/toaster/bldcontrol/tests.py
2	2	lib/toaster/contrib/tts/toasteruitest/run_toastertests.py
93	93	lib/toaster/contrib/tts/toasteruitest/toaster_automation_test.py
1	1	lib/toaster/toastergui/views.py
1	1	lib/toaster/toastermain/management/commands/builddelete.py
1	1	lib/toaster/toastermain/management/commands/buildslist.py
1	1	lib/toaster/toastermain/management/commands/get-dburl.py
3	3	lib/toaster/toastermain/management/commands/perf.py
1	1	lib/toaster/toastermain/settings.py

commit b60261bf8ade14aca31238b50c243c01adcabc59
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2016-05-09 14:03:41 +0100

    tests: assertEquals -> assertEqual
    
    The preferred form is assertEqual, assertEquals is deprecated and
    not present in python v3.
    
    This is v2.7 safe.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

4	4	lib/bb/tests/codeparser.py
44	44	lib/bb/tests/cow.py

commit 676a5f592e8507e81b8f748d58acfea7572f8796
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2016-05-09 14:01:12 +0100

    bitbake: Update logger.warn() -> logger.warning()
    
    python deprecated logger.warn() in favour of logger.warning(). This is only
    used in bitbake code so we may as well just translate everything to avoid
    warnings under python 3. Its safe for python 2.7.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	3	bin/bitbake-layers
1	1	bin/bitbake-worker
2	2	lib/bb/__init__.py
1	1	lib/bb/build.py
1	1	lib/bb/data.py
18	18	lib/bb/fetch2/__init__.py
2	2	lib/bb/fetch2/npm.py
2	2	lib/bb/monitordisk.py
2	2	lib/bb/parse/parse_py/ConfHandler.py
2	2	lib/bb/runqueue.py
1	1	lib/bb/siggen.py
10	10	lib/bb/ui/buildinfohelper.py
4	4	lib/bb/ui/knotty.py
3	3	lib/bb/ui/toasterui.py
5	5	lib/bb/utils.py
1	1	lib/toaster/bldcontrol/localhostbecontroller.py
3	3	lib/toaster/bldcontrol/management/commands/runbuilds.py
5	5	lib/toaster/bldcontrol/models.py
1	1	lib/toaster/contrib/tts/shellutils.py
2	2	lib/toaster/contrib/tts/urlcheck.py
1	1	lib/toaster/toastermain/urls.py

commit c5e45063cb3ae17bbe3304ea5e712bd76e686c4a
Author: Christopher Larson <chris_larson@mentor.com>
Date:   2016-04-30 13:10:34 -0700

    bb.{cooker, data}: only emit a var as python if 'func' is set
    
    This avoids a common issue where PACKAGECONFIG is emitted as a function in
    bitbake -e when the 'python' flag exists. It isn't a python function unless
    both 'func' and 'python' are set. This aligns with the behavior of
    emit_func_python.
    
    Signed-off-by: Christopher Larson <chris_larson@mentor.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/cooker.py
2	2	lib/bb/data.py

commit 71bfd5beb0d0ed88c7c14bbfd5ca1a1b56122bc1
Author: Christopher Larson <chris_larson@mentor.com>
Date:   2016-04-30 12:40:59 -0700

    bb.utils: let loaded plugins provide a plugin object
    
    This lets us avoid treating the module like an object, so no globals are
    needed, if one chooses to do so.
    
    Signed-off-by: Christopher Larson <chris_larson@mentor.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

4	2	lib/bb/utils.py

commit 09f838dbaefdaedc01a1f4818ed38280b38db744
Author: Christopher Larson <chris_larson@mentor.com>
Date:   2016-04-30 12:40:58 -0700

    bb.utils: use imp.get_suffixes for load_plugins
    
    Rather than hardcoding .py, use python's knowledge of its file extensions.
    
    Signed-off-by: Christopher Larson <chris_larson@mentor.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

9	2	lib/bb/utils.py

commit 99db61bf816d9c735032caa762aae8e6a0803402
Author: Christopher Larson <chris_larson@mentor.com>
Date:   2016-04-30 12:40:57 -0700

    bb.utils: add load_plugins from scriptutils
    
    Imported as of oe-core 184a256.
    
    Signed-off-by: Christopher Larson <chris_larson@mentor.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

21	0	lib/bb/utils.py

commit b492836e08745e04bd9ba2fb0b56a680a5fdce79
Author: Christopher Larson <chris_larson@mentor.com>
Date:   2016-04-30 12:43:54 -0700

    bb.data_smart: use iter() for __len__
    
    It seems the frozenset constructor in pypy runs len(), so we can't pass the
    DataSmart instance directly to it, instead pass the iterator. Fixes pypy
    support.
    
    Signed-off-by: Christopher Larson <chris_larson@mentor.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/data_smart.py

commit a3e5d9337f5400aab13df63f261e750178f8a661
Author: Christopher Larson <chris_larson@mentor.com>
Date:   2016-04-30 12:43:53 -0700

    bb.event: handle __builtins__ as a module
    
    Fixes pypy support.
    
    Signed-off-by: Christopher Larson <chris_larson@mentor.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

8	3	lib/bb/event.py

commit e90cfc655affeec8f5519f7078dad5f99db3c461
Author: Christopher Larson <chris_larson@mentor.com>
Date:   2016-04-30 12:43:52 -0700

    bb.build: handle __builtins__ as a module
    
    Fixes pypy support.
    
    Signed-off-by: Christopher Larson <chris_larson@mentor.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

7	2	lib/bb/build.py

commit f368f5ae64a1681873f3d81f3cb8fb38650367b0
Author: Leonardo Sandoval <leonardo.sandoval.gonzalez@linux.intel.com>
Date:   2016-05-03 14:55:48 -0500

    bitbake: fetch2: Safer check for BB_ORIGENV datastore
    
    BB_ORIGENV value on the datastore can be NoneType thus raising an AttributeError
    exception when calling the getVar method. To avoid this, a check is done before
    accesing it.
    
    [YOCTO #9567]
    
    Signed-off-by: Leonardo Sandoval <leonardo.sandoval.gonzalez@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	1	lib/bb/fetch2/__init__.py

commit f62d9a3e86e384f928fc8ad077d7cf3a75d1591e
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2016-04-21 14:22:06 +0100

    toaster: bin/toaster Fix noweb command
    
    For the noweb command we don't need to check if a socket is in use or
    not as we're not starting the django development server. We're just
    setting up the environment and running the runbuilds scheduler.
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	1	bin/toaster

commit ef3c88a57313947feb5ef08c4fea6fd110cde1e7
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2016-04-21 14:22:05 +0100

    toaster: bin/toaster Add ability to specify port and address to bind to
    
    Allow binding to a specified address and port to start the django
    development server on.
    Remove the assumption that you want to bind to 0.0.0.0 and set the
    default to localhost.
    Add some additional help text after Toaster webserver has started
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

13	5	bin/toaster

commit 4c0b1b9c2af70838dbcf5a676ec679f9f0c488a5
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2016-04-21 14:22:04 +0100

    toaster: bin/toaster Add help text for unrecognised command
    
    Add help text for unrecognised or missing command for toaster script
    Remove assumption that no command is 'start' as the default.
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

15	9	bin/toaster

commit e329a932e14d002a561245b5026f974897f64598
Author: Ed Bartosh <ed.bartosh@linux.intel.com>
Date:   2016-04-25 11:16:29 +0300

    bitake: main: fix line-too-long pytling warnings
    
    Wrapped long lines to fix "Line too long" pylint warnings.
    
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

82	39	lib/bb/main.py

commit 5bfc8c0dc70abd6462a6df4ce905173d9f2cdc07
Author: Ed Bartosh <ed.bartosh@linux.intel.com>
Date:   2016-04-25 11:16:28 +0300

    bitbake: main: fix bad-continuation warnings
    
    Fixed pylint warning 'Wrong continued indentation'.
    
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

69	66	lib/bb/main.py

commit c39770239f7b61217501782b9c5e9d3211355d42
Author: Ed Bartosh <ed.bartosh@linux.intel.com>
Date:   2016-04-25 11:16:27 +0300

    bitbake: main: fix bad-witespace pylint warnings
    
    Fixed pylint warnings:
     No space allowed around keyword argument assignment
     No space allowed after bracket
     No space allowed before bracket
    
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

69	69	lib/bb/main.py

commit 87040be4ff54cd460961318224deef8f2ea4c85a
Author: Ed Bartosh <ed.bartosh@linux.intel.com>
Date:   2016-04-20 10:31:29 +0300

    bitbake: main: set defaults from env variables
    
    Environment variables BBSERVER, BBTOKEN and BBEVENTLOG silently
    overwrite bitbake command line arguments. This is confusing and
    can cause issues that are difficult to debug. It's better to use
    them as default values instead.
    
    Used environment variables BBSERVER, BBTOKEN and BBEVENTLOG to set
    default values for command line arguments.
    
    Changed setting default value of --ui command line argument from
    BITBAKE_UI to look similar way.
    
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

6	18	lib/bb/main.py

commit bf604ec1ca4eb4d0b22bcc72249963e6d7445f34
Author: Ed Bartosh <ed.bartosh@linux.intel.com>
Date:   2016-04-20 10:31:28 +0300

    bitbake: main: add 2 environment variables
    
    Bitbake uses set of environment variables to set command line
    options, e.g. seeting BBTOKEN variable has the same effect
    as using --token command line option.
    
    Added new environment variables BBPRECONF and BBPOSTCONF that
    are equivalents of --read and --postread command line options.
    They can be used by high level scripts to append or prepend
    configuration files to conf/local.conf
    
    [YOCTO #9235]
    
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

6	0	lib/bb/main.py

commit f08651a954358e9c6ce4d69de285e4cd9e1408ae
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2016-04-26 17:18:07 +0100

    toaster: customrecipe Only show download icon or button if it's possible
    
    If the based on recipe has not yet been checked out/cloned we cannot
    generate the custom image recipe file that uses it. So disable/remove
    the option to download it.
    
    [YOCTO #9425]
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	1	lib/toaster/toastergui/tables.py
12	1	lib/toaster/toastergui/templates/customrecipe.html

commit bc30d1b235b9ecacef5b2eaa851b9247d857f317
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2016-04-26 17:18:06 +0100

    toaster: orm Add get_base_recipe_file to CustomImageRecipe
    
    This function returns the base recipe file path only if it currently
    exists. This allows us to know whether we can proceed at this point with
    generating a custom image recipe. It also enables us to call this
    function from the templates to enable visual indication of this state.
    
    Some whitespace fixes also added in generate_recipe_file_contents
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

37	23	lib/toaster/orm/models.py

commit 309f5907a3661821e041ed14645b5d165007b058
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2016-04-29 07:41:34 +0100

    bitbake: Switch to post release version
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	bin/bitbake
1	1	lib/bb/__init__.py

commit 20ad1ea87712d042bd5d89ce1957793f7ff71da0
Author: Ross Burton <ross.burton@intel.com>
Date:   2016-04-22 16:56:50 +0100

    fetch2: export DBUS_SESSION_BUS_ADDRESS to support authentication agents
    
    Some users may want to use authenticated SSH connections with credentials stored
    in a keyring, such as gnome-keyring.  These typically need a DBus session bus
    connection, so pass DBUS_SESSION_BUS_ADDRESS into the fetcher environment.
    
    To avoid the user needing to set it in their local.conf (which wouldn't be
    usable) or adding it to the environment-cleansing whitelist (which would
    potentially impact builds) allow the variables being passed to the fetchers to
    come from the data store (first) or the original environment (second).
    
    Signed-off-by: Ross Burton <ross.burton@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	2	lib/bb/fetch2/__init__.py

commit c07f65feaba50b13a38635bd8149804c823d446a
Author: Elliot Smith <elliot.smith@intel.com>
Date:   2016-04-19 17:28:47 +0100

    toaster-tests: tests for build dashboard
    
    Convert existing tests to Selenium.
    
    Add basic tests to check that the modal contains radio buttons to select
    a custom image to edit when a build built multiple custom images, and
    to create a new custom image from one of the images built during
    the build.
    
    [YOCTO #9123]
    
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

251	0	lib/toaster/tests/browser/test_builddashboard_page.py
0	87	lib/toaster/toastergui/tests.py

commit 8c2aea3fa8e1071de60390e86e2536904fa9b7c0
Author: Elliot Smith <elliot.smith@intel.com>
Date:   2016-04-19 17:28:46 +0100

    toaster: add modal to select custom image for editing
    
    Add functionality to the placeholder button on the build dashboard
    to open a modal dialog displaying editable custom images, in cases
    where multiple custom images were built by the build. Where there
    is only one editable custom image, go direct to its edit page.
    
    The images shown in the modal are custom recipes for the project
    which were built during the build shown in the dashboard.
    
    This also affects the new custom image dialog, as that also has
    to show custom image recipes as well as image recipes built during
    the build. Modify the API on the Build object to support both.
    
    Also modify and rename the queryset_to_list template filter so that
    it can deal with lists as well as querysets, as the new custom image
    modal has to show a list of image recipes which is an amalgam of two
    querysets.
    
    [YOCTO #9123]
    
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

26	19	lib/toaster/orm/models.py
10	5	lib/toaster/toastergui/static/js/newcustomimage_modal.js
0	1	lib/toaster/toastergui/templates/base.html
35	27	lib/toaster/toastergui/templates/basebuildpage.html
58	10	lib/toaster/toastergui/templates/editcustomimage_modal.html
35	0	lib/toaster/toastergui/templatetags/objects_to_dictionaries_filter.py
0	26	lib/toaster/toastergui/templatetags/queryset_to_list_filter.py
22	4	lib/toaster/toastergui/views.py

commit 4c49ffd28e41c4597bdac34d5e54c125571a4b95
Author: Elliot Smith <elliot.smith@intel.com>
Date:   2016-04-19 17:28:45 +0100

    toaster: add build dashboard buttons to edit/create custom images
    
    When a build is viewed in the dashboard, enable users to edit
    a custom image which was built during that build, and/or create
    a new custom image based on one of the image recipes built during
    the build.
    
    Add methods to the Build model to enable querying for the
    set of image recipes built during a build.
    
    Add buttons to the dashboard, with the "Edit custom image"
    button opening a basic modal for now. The "New custom image"
    button opens the existing new custom image modal, but is modified
    to show a list of images available as a base for a new custom image.
    
    Add a new function to the new custom image modal's script which
    enables multiple potential custom images to be shown as radio
    buttons in the dialog (if there is more than 1). Modify existing
    code to use this new function.
    
    Add a template filter which allows the queryset of recipes for
    a build to be available to client-side scripts, and from there
    be used to populate the new custom image modal.
    
    [YOCTO #9123]
    
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

41	0	lib/toaster/orm/models.py
2	1	lib/toaster/toastergui/static/js/layerBtn.js
92	11	lib/toaster/toastergui/static/js/newcustomimage_modal.js
2	1	lib/toaster/toastergui/static/js/recipedetails.js
133	74	lib/toaster/toastergui/templates/basebuildpage.html
23	0	lib/toaster/toastergui/templates/editcustomimage_modal.html
22	6	lib/toaster/toastergui/templates/newcustomimage_modal.html
26	0	lib/toaster/toastergui/templatetags/queryset_to_list_filter.py
4	3	lib/toaster/toastergui/views.py

commit cea34880ad3847bd0e24c9b650eb816e1757cf2b
Author: Elliot Smith <elliot.smith@intel.com>
Date:   2016-04-19 17:28:44 +0100

    toaster-tests: make helper click on input before entering text
    
    The Selenium helper's enter_text() method doesn't cause
    keyup events to trigger unless the element where text is
    being entered has been clicked.
    
    Prefix all text entry with a click() on the element to ensure
    that keyup events fire.
    
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

5	1	lib/toaster/tests/browser/selenium_helpers.py

commit 21c1f8f8e30ef868ea6fd861eea1389f149f1049
Author: Elliot Smith <elliot.smith@intel.com>
Date:   2016-04-19 17:28:43 +0100

    toaster-tests: add tests for new custom image page
    
    Test adding a new custom image when:
    
    1. No custom images are in the project yet.
    2. User tries to add custom image which duplicates the name of
    an existing custom image.
    3. User tries to add custom image which duplicates the name
    of a non-image recipe.
    
    [YOCTO #9209]
    
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

160	0	lib/toaster/tests/browser/test_new_custom_image_page.py

commit 6919a2b2e412a9e7b652a6bc191e7c1bed035222
Author: Elliot Smith <elliot.smith@intel.com>
Date:   2016-04-19 17:28:42 +0100

    toaster: prevent exception when Project.release is null
    
    Project.release can be null. This causes an exception when calling
    get_all_compatible_layer_versions(), as the query to fetch
    the layer versions references release.branch_name.
    
    Add a guard to the function so that an empty queryset is returned
    if the release isn't set for a project.
    
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

11	5	lib/toaster/orm/models.py

commit 9abbb46e799c06757e03addd54e3f5d3c0fe2886
Author: Elliot Smith <elliot.smith@intel.com>
Date:   2016-04-19 17:28:41 +0100

    toaster: only prevent duplicate custom image names within a project
    
    We currently prevent the same name being used for multiple custom
    images, but make the check across all projects. This means that
    custom image names have to be unique across all projects in
    the Toaster installation.
    
    Modify how we validate the name of a custom image so that we
    only prevent duplication of custom image names within a project,
    while ensuring that the name of a custom image doesn't duplicate
    the name of a recipe which is not a custom image recipe.
    
    [YOCTO #9209]
    
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

6	2	lib/toaster/toastergui/static/js/newcustomimage_modal.js
18	15	lib/toaster/toastergui/views.py

commit dbb4f0282ded361baf9e5a0346e134bece5314b9
Author: Elliot Smith <elliot.smith@intel.com>
Date:   2016-04-19 17:28:40 +0100

    toaster: disable/enable "Add layer" button according to input's content
    
    In the import layer page, the "Add layer" button in the layer dependencies
    section doesn't accurately reflect whether the layer name in the
    corresponding input can be added. A partial or empty layer name can
    leave the button active, such that when it is clicked, a
    previously-selected layer can be accidentally added.
    
    Fix by keeping track of the items currently available in the typeahead,
    only activating the "Add layer" button when the input matches the name
    of one of those items.
    
    [YOCTO #8511]
    
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

29	1	lib/toaster/toastergui/static/js/importlayer.js
5	0	lib/toaster/toastergui/static/js/libtoaster.js

commit b99e1012f0ad1dc82a769df15a232280c8e57b9e
Author: Elliot Smith <elliot.smith@intel.com>
Date:   2016-04-19 17:28:39 +0100

    toaster: fix sorting after hiding a column in build tables
    
    When hiding a column in the build tasks or build packages included
    table, if the column is set as the current order by for the table, the
    order by is not reset to the default. The result is that the table
    stays sorted by the hidden column.
    
    Set the default_orderby for these two tables correctly to ensure the
    corresponding table is re-sorted when a column is hidden, if that column
    was being used as the order by.
    
    [YOCTO #9011]
    
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/toaster/toastergui/templates/tasks.html
25	25	lib/toaster/toastergui/views.py

commit 820761e664cd2d62cc6c333a0e59580b0c4a034d
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2016-04-19 17:28:38 +0100

    toaster: ensure ToasterTable headings are reset when order by changes
    
    If a ToasterTable is ordered by an optional column and that
    column is subsequently hidden, the table ordering switches back
    to the default ordering for the table. However, the table headings
    don't update to reflect the new ordering. This is because the
    code which sets the heading weight and hides/shows the caret symbols
    only runs when the table is first loaded.
    
    Store the default order by and re-apply it when the data is updated.
    
    [YOCTO #9011]
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

5	1	lib/toaster/toastergui/static/js/table.js

commit 2705b5f59aef4a070e2df2752d27bd04ea747057
Author: Ed Bartosh <ed.bartosh@linux.intel.com>
Date:   2016-04-19 16:54:39 +0300

    main: fix processing of BBEVENTLOG
    
    Fixed typo that caused incorrect processing of BBEVENTLOG
    environment variable. Even if variable is set it was ignored
    by bitbake.
    
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/main.py

commit e9174723ea6d0dff5f7f3042009761cf42284947
Author: Ross Burton <ross.burton@intel.com>
Date:   2016-04-05 15:46:41 +0100

    lib/bb/utils: add docstring for contains()
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

19	1	lib/bb/utils.py

commit 4ca651d32d9e5fbf7f932b4167804905969f4c3a
Author: Scott Rifenbark <srifenbark@gmail.com>
Date:   2016-04-15 09:20:19 -0700

    bitbake-user-manual: Updated the 'bitbake -h' output example.
    
    Signed-off-by: Scott Rifenbark <srifenbark@gmail.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

9	3	doc/bitbake-user-manual/bitbake-user-manual-intro.xml

commit 4397a023f8bf738913d71a38b3e06503207311e2
Author: Scott Rifenbark <srifenbark@gmail.com>
Date:   2016-04-15 09:14:12 -0700

    bitbake-user-manual: Updated "Conditional Metadata" section
    
    Added information about using lower-case characters and no
    underscore characters when using OVERRIDES.
    
    Signed-off-by: Scott Rifenbark <srifenbark@gmail.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

6	0	doc/bitbake-user-manual/bitbake-user-manual-metadata.xml

commit 3f29ebec593f20894f7a2a0b6d50ee22474aee75
Author: Scott Rifenbark <srifenbark@gmail.com>
Date:   2016-04-14 08:53:26 -0700

    bitbake-user-manual: Updated discussion about using "inherit"
    
    Fixes [YOCTO #9343]
    
    I updated the inherit directive section to note that you can
    inherit multiple classes using a single line.
    
    Signed-off-by: Scott Rifenbark <srifenbark@gmail.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

10	0	doc/bitbake-user-manual/bitbake-user-manual-metadata.xml

commit 62eb39d1474d024b204634689071700605c6095c
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2016-04-14 14:30:52 +0100

    providers: Add PREFERRED_RPROVIDER support
    
    Sometimes you can end up in a situation where you need to specify that
    a specific runtime entity should be provided by a specific entry.
    
    An example of this is bluez where you could end up in a situation where
    for example:
    
    NOTE: multiple providers are available for runtime libasound-module-bluez (bluez4, bluez5)
    NOTE: consider defining a PREFERRED_PROVIDER entry to match libasound-module-bluez
    NOTE: multiple providers are available for runtime bluez-hcidump (bluez-hcidump, bluez5)
    NOTE: consider defining a PREFERRED_PROVIDER entry to match bluez-hcidump
    
    The only option here is to set something like PREFERRED_PROVIDER_bluez4 = "bluez4"
    which is clearly not very informative.
    
    I've actually held off adding RPROVIDER support for a long while as this
    does have sigificant potential for misuse. It doesn't for example allow
    multiple runtime providers of the same name to coexist, that simply isn't
    supported. It therefore doesn't replace some of the name mappings such
    as busybox verses coreutils that OE-Core faces as that is a different
    problem with different constraints. This mechanism is simply to provide
    bitbake with a hint to decide what the dependency tree should look like.
    
    Also, this allows us to stop printing a confusing message telling the user
    to set PREFERRED_PROVIDER when the setting needed would be rather ambiguous.
    
    [YOCTO #5044]
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

40	22	lib/bb/providers.py
4	1	lib/bb/ui/knotty.py

commit c3fa7e561c22786d3ac57d04c367aa50f1b3b820
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2016-04-14 14:30:04 +0100

    providers: We don't depend on previous build results
    
    Back in history the code did depend on previous build results. This was
    bad for determinism and we no longer do that. Update comments to match
    the current behaviour.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	3	lib/bb/providers.py

commit 1af0ccaac81e182c4ca520037dda362d180e5605
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2016-04-14 14:29:27 +0100

    cooker/knotty: Prefix parse logs with filename being parsed
    
    We now prefix log messages coming from worker task context with the
    PF and task info, however parsing messages all have to be manually
    prefixed which is ugly and error prone. This change modifies the log
    handler filter so this happens automatically, meaning we don't have
    to change every message to include that information. This makes error
    messages longer but more usable.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

8	0	lib/bb/cooker.py
2	1	lib/bb/ui/knotty.py

commit 98a2c37e077b16e3bc8bb102bd18b293130d15a4
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2016-02-29 14:23:33 +0000

    cooker: pass exception to finishAsyncCommand
    
    An invalid task causes bitbake to exit incorrectly, firing a
    CommandCompleted event rather than a CommandFailed one. This
    means that clients listening for CommandFailed events are
    unable to detect the build failure even though one occurred.
    
    Passing an exception string to finishAsyncCommand when a task
    fails causes the CommandFailed event to be fired correctly.
    
    [YOCTO #9087]
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	2	lib/bb/cooker.py

commit 96fc889b8e62ba4463c71158c4b7286c48d68cd8
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2016-04-10 11:09:21 +0100

    runqueue: Improve 'mulitiple .bb files are due to be built' message
    
    When multiple recipes which both provide something are being built, bitbake
    informs us that most likely one of them provides something the other doesn't,
    which is usually correct, but unfortunately it's rather painful to figure out
    exactly what that is.
    
    This patch dumps two sets of information, one is the provides information for
    each recipe, filtered so only common components are removed. The other is a list
    of dependees on the recipe, since sometimes this can easily identify why something
    is being built.
    
    Its not straightforward for bitbake to obtain the information but since the
    warning/error code path isn't the normal one, we can afford to go through some
    less than optimal processing to aid debugging.
    
    Also provide the same information even if we're showing a warning since its still
    useful.
    
    [YOCTO #8032]
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

70	2	lib/bb/runqueue.py

commit 66b7c7ef61058b52031d71b10effcfe69afbd57b
Author: Dave Lerner <dave.lerner@windriver.com>
Date:   2016-04-08 09:39:28 +0100

    toaster: fixes for customimage package not found
    
    For a custom image, if a search for a package results in no packages
    found, then additional information should be presented to the user.
    This is different than a 'no results' found for a search in other
    contexts, for example, a search for a package in a non-customised build.
    For a custom image, a package search failure can happen because the
    package was not added to the custom image. This commit presents more
    information to the user, suggesting why the package was not found in the
    custom image.
    The generic table view handling js changes to handle a new div
    element no-results-special-... such that, if present, that template
    section is shown rather than the default no-results-... section.
    
    [YOCTO #9154]
    
    Signed-off-by: Dave Lerner <dave.lerner@windriver.com>
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

9	0	lib/toaster/toastergui/static/js/customrecipe.js
9	2	lib/toaster/toastergui/static/js/table.js
12	10	lib/toaster/toastergui/templates/customrecipe.html

commit 14ed41a292123374d94f5c786a619881f2ddea42
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2016-04-08 23:47:58 +0100

    data_smart: Restrict expansion regexp to not include : characters
    
    Bitbake variables don't include ":" characters so exclude these from the variable
    expansion regexp.
    
    This assists when parsing shell code which does A=${B:-C} as we don't want a
    dependency on a variable called "B:-C".
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/data_smart.py

commit ece3a4d02d8162dee78c2062c10291b5fd625c36
Author: Randy Witt <randy.e.witt@linux.intel.com>
Date:   2016-04-06 23:55:40 -0700

    tests/utils.py: test origvalue in a callback matches what is expected
    
    There were no tests that verified the value of origvalue in the callback
    routines used by edit_metadata(). This patch adds one for a simple
    multiline variable.
    
    Signed-off-by: Randy Witt <randy.e.witt@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

22	0	lib/bb/tests/utils.py

commit 14f05cbdc2ad8d59a94af1c8816567d93c39c88c
Author: Randy Witt <randy.e.witt@linux.intel.com>
Date:   2016-04-06 23:55:39 -0700

    lib/bb/utils.py: Fix a bug in edit_metadata() that could corrupt vars
    
    edit_metadata() would corrupt a variable that was multiline, but
    had the ending quotes on the same line as the last value. For example:
    
        TEST_VAR = " foo \
        bar"
    
    would become " foo ba" because the code would always delete the last
    character on the line and then do it again if the line ended in the
    quote. This however doesn't show up if you have:
    
        TEST_VAR = " foo \
        bar \
        "
    
    which is how all the test cases were written.
    
    This patch fixes that bug and adds and fixes a test that matched the bugs
    behavior rather than the expected behavior.
    
    Signed-off-by: Randy Witt <randy.e.witt@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/tests/utils.py
1	1	lib/bb/utils.py

commit 292bffc8412cd0ddc0c6d16e872c7801e1a67890
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2016-04-06 23:31:27 +0100

    Update version to 1.30.0
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	bin/bitbake
1	1	lib/bb/__init__.py

commit 540c0c8d6aeec5391aa4f76614db6905afabba2c
Author: Elliot Smith <elliot.smith@intel.com>
Date:   2016-04-06 14:49:13 +0100

    bitbake: update LICENSE file with QUnit details
    
    QUnit is now included in Toaster's test suite and distributed
    with its source code.
    
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	0	LICENSE

commit 81ccbf243050a5a9245d2de4c1de342771c09a59
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2016-04-04 11:52:49 +0100

    tests: browser Add test to run the js unit tests
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

57	0	lib/toaster/tests/browser/test_js_unit_tests.py

commit a0c1432f32930a17e10d50c08c2aa84a0659514b
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2016-04-04 11:47:31 +0100

    toaster: views jsunittest Add MACHINE and an extra layer to test project
    
    Add set a MACHINE if needed and add a layer. When we're running in the
    context of the django unit tests we don't have these defaults setup for
    the project so add them.
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

14	4	lib/toaster/toastergui/views.py

commit 6288a3bd6678ed1c7863cfde6eb33b7c28207777
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2016-04-01 11:47:32 +0100

    toaster: tests Set MACHINE for the test projects
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	2	lib/toaster/toastergui/fixtures/toastergui-unittest-data.xml

commit fc5024e2ed0e4ec2ee234a42fd0403c70c3f819e
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2016-04-01 11:32:35 +0100

    toaster: Add quint to project so that it can be used offline
    
    Currently we're using a hosted version of quint however this means that the
    testing has to be online or have a cached version of quint. Add the
    files to Toaster to be able to use offline.
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	0	lib/toaster/toastergui/static/css/qunit-1.18.0.css
347	0	lib/toaster/toastergui/static/js/qunit-1.18.0.js
2	2	lib/toaster/toastergui/templates/js-unit-tests.html

commit 2f978dccaa1ec82c7ad350bdc1cd9500000984eb
Author: Dave Lerner <dave.lerner@windriver.com>
Date:   2016-04-06 14:44:41 +0100

    toaster: add rev dep column to image detail pages
    
    Add a column to the custom image pages that shows the reverse
    dependencies in a format matching the dependencies column:
      - either blank or a button showing the count of reverse dependencies,
      - when the button is clicked, a popover appears showing the list
        of reverse dependencies, with each package's size, and the total
        size of all of the reverse dependencies.
    
    The implementation adds a packages table method to retreive the reverse
    dependency total size, and adds a separate 'popover' html template. Both
    of these changes follow the pattern for the dependencies column.
    
    [YOCTO #9163]
    
    Signed-off-by: Dave Lerner <dave.lerner@windriver.com>
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

7	0	lib/toaster/orm/models.py
6	0	lib/toaster/toastergui/tables.py
14	0	lib/toaster/toastergui/templates/snippets/pkg_revdependencies_popover.html

commit f50fff03b3de02e73a3cc2eb9935f7c345dbddc4
Author: Joshua Lock <joshua.g.lock@intel.com>
Date:   2016-04-06 13:50:23 +0100

    buildinfohelper: work around unicode exceptions
    
    We have been seeing UnicodeDecodeErrors when handling the
    ImagePkgList MetadataEvent in ORMWrapper's
    save_target_file_information() if the event includes filenames
    that include non-ASCII characters.
    
    In the short term work around this by converting paths to the
    unicode type when passing them to Django's ORM. This is a bit of
    a hack but it's too late in the cycle to do anything more invasive.
    
    [YOCTO #9142]
    
    Signed-off-by: Joshua Lock <joshua.g.lock@intel.com>
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

6	4	lib/bb/ui/buildinfohelper.py

commit d056cf40fc55530cb1736aedfb9a3c355884991e
Author: Ed Bartosh <ed.bartosh@linux.intel.com>
Date:   2016-04-06 17:46:48 +0100

    toasterui: update build in internal state
    
    buildinfohelper stores current Build object in its internal
    state. Any changes to Build object will be lost if internal
    state is not updated as current buildinfohelper code
    saves Build object from internal state when build is
    completed.
    
    This bug causes incorrect build state when build is cancelled.
    Updating internal state should fix it.
    
    Note, that this commit updates internal state after status of
    the build is changed to Build.CANCELLED. There are several other
    places in the code where Build object is updated without updating
    internal state. They should be carefully analyzed and fixed.
    
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	0	lib/bb/ui/buildinfohelper.py

commit c39cc463e6d9594bf2c5ac8bb74e834f6f2cf7c8
Author: Ed Bartosh <ed.bartosh@linux.intel.com>
Date:   2016-04-06 17:46:47 +0100

    buildinfohelper: fix KeyError
    
    When bitbake doesn't need to build anything it still sends
    ImagePkgList event with empty 'pkgdata', 'imgdata' and 'filedata'
    fields. This causes crash in buildinfohelper code as it's assumed
    that above mentioned fields always have data keyed by build target:
    
    ERROR: u'core-image-minimal'
    Traceback (most recent call last):
      File "toasterui.py", line 423, in main
        buildinfohelper.store_target_package_data(event)
      File "buildinfohelper.py", line 1218, in store_target_package_data
        imgdata = BuildInfoHelper._get_data_from_event(event)['imgdata'][target.target]
    KeyError: u'core-image-minimal'
    
    Fixed this by using dict.get method with empty dictionary as default
    return value instead of trying to get value without checking if target
    key is in the data.
    
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	2	lib/bb/ui/buildinfohelper.py

commit 6c9e3375d278bee712c41f07428bc82108b9aaae
Author: Ed Bartosh <ed.bartosh@linux.intel.com>
Date:   2016-04-06 17:46:46 +0100

    toaster: get bitbake location from BBBASEDIR
    
    It was incorrectly assumed in the current code that bitbake is in
    ../bitbake/bin/ directory. It's not always the case.
    Using bitbake from $BBBASEDIR should be .
    
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

5	3	lib/toaster/bldcontrol/localhostbecontroller.py

commit 429d47325aadb74d476e5b7f4738f2dfe26cde95
Author: Ed Bartosh <ed.bartosh@linux.intel.com>
Date:   2016-04-06 17:46:45 +0100

    toaster: export BBBASEDIR variable
    
    This variable will be used in localhost controller code
    to determine correct bitbake location, so it has to be
    exported.
    
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	1	bin/toaster

commit bd9f8973d4c9c0722874a058466b1b911112500e
Author: Sujith H <sujith.h@gmail.com>
Date:   2016-04-06 17:46:44 +0100

    toaster: update projectconf.html for DL_DIR and SSTATE_DIR
    
    Modified the projectconf.html to include DL_DIR and
    SSTATE_DIR. Updated the script section in the html
    to handle the changes made by the user on DL_DIR
    and SSTATE_DIR. Included validation check for the
    folder names.
    
    [YOCTO #8422]
    
    Signed-off-by: Sujith H <sujith.h@gmail.com>
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

157	3	lib/toaster/toastergui/templates/projectconf.html

commit 9f672d7ba503d17175eef37ec03a5779e4c9f792
Author: Sujith H <sujith.h@gmail.com>
Date:   2016-04-06 17:46:43 +0100

    toaster: update view to support DL_DIR and SSTATE_DIR
    
    Update toaster's views.py to support DL_DIR and SSTATE_DIR for
    page projectconf.html. Removed DL_DIR and SSTATE_DIR from
    blacklist. Initial value of DL_DIR and SSTATE_DIR comes from
    BuildEnvironment.
    
    [YOCTO #8422]
    
    Signed-off-by: Sujith H <sujith.h@gmail.com>
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

38	2	lib/toaster/toastergui/views.py

commit b54ec2d7cb9f2fb4ff1e8af11b6ecf97d181272c
Author: Ed Bartosh <ed.bartosh@linux.intel.com>
Date:   2016-04-06 17:46:42 +0100

    toaster: use empty token
    
    If client xmlrpc token is not provided in the command line, bitbake
    generates random token. Server token in --server-only mode is always
    empty. This doesn't allow clients with non-empty tokens to connect
    to the server. Specifying empty token should stop generation of
    random token and make it possible for clients to communicate with
    the server.
    
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/toaster/bldcontrol/localhostbecontroller.py

commit c382f550c62437954205c7dd9c7e1891d5d03945
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2016-04-06 17:46:41 +0100

    toaster: runbuilds Clean up runbuilds
    
    - Organise the imports into logical groups
    - Fix 80 col wrapping
    - Remove catch all exceptions
    - Log to the toaster log
    - Use QuerySet functions such as .first() and Q()
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

52	29	lib/toaster/bldcontrol/management/commands/runbuilds.py

commit 23d0a7f9664450a09c2610631b38590a09b33744
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2016-04-06 17:46:40 +0100

    toaster: runbuilds Make runbuilds aware of the build CANCELLED state
    
    Add handlers to make sure we remove the BuildEnvironment LOCK when we
    have cancelled a build.
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

22	4	lib/toaster/bldcontrol/management/commands/runbuilds.py

commit c3c29fd4eb5116b771e8e16281d4e3cdf4fae165
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2016-04-06 17:46:39 +0100

    toaster: models Exclude the CANCELLED builds from get_number_of_builds
    
    Don't count CANCELLED builds when returning the number of builds.
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

4	1	lib/toaster/orm/models.py

commit 6b82ffca1aa9ca2d0feec64b15466bc8ba160011
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2016-04-06 17:46:38 +0100

    toaster: mrb_section template Add build cancel button
    
    Add the cancel build button to the mrb section template and add the event
    handlers to cancelABuild.
    Also clean up the calls to startABuild to use the updated libtoaster methods
    and to make the code consistent with it's cancelABuild counterpart.
    
    Co-Author: Sujith H <sujith.h@gmail.com>
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

95	0	lib/toaster/toastergui/static/js/mrbsection.js
54	94	lib/toaster/toastergui/templates/mrb_section.html

commit a724d6aa7515e712a1d656e46e1d0f3bf7d4cea9
Author: Sujith H <sujith.h@gmail.com>
Date:   2016-04-06 17:46:37 +0100

    toaster: tables BuildsTable exclude cancelled builds
    
    Exclude cancelled builds from showing in the builds table
    
    [YOCTO #6787]
    
    Signed-off-by: Sujith H <sujith.h@gmail.com>
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	2	lib/toaster/toastergui/tables.py

commit d94d12914d351bf560b06d6f4e45c294b04ecaa3
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2016-04-06 17:46:36 +0100

    buildinfohelper: Add handler for cancelling a build
    
    When a build is cancelled the build (action) is complete if it has been
    caused the request being cancelled then update the build outcome
    accordingly.
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

18	1	lib/bb/ui/buildinfohelper.py

commit 449598c8e6be75bd0c9d59e7bdf859d1d6f83858
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2016-04-06 17:46:35 +0100

    toaster: bldcontrol models Add a cancelling state the BuildRequest
    
    To accurately reflect the state of a build request we also need a
    cancelling state. This is set when we've started a build and then for
    whatever reason cancel it, cancelling is not instantaneous so we have
    this state to indicate that a cancel is in progress.
    
    Also add a state transition guard. As the state of a BuildRequest can
    currently be modified by three processes; Toastergui,
    Runbuilds/bldcontrol and the buildinofhelper we cannot say for sure
    which process will be running at the time of cancellation so in order to
    avoid one of these processes making an incorrect transition only allow
    transitions of state to increase.
    
    e.g. CREATED -> QUEUED -> INPROGRESS
    And to ignore such requested changes such as
    INPROGRESS -> CREATED
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

19	0	lib/toaster/bldcontrol/migrations/0003_add_cancelling_state.py
26	1	lib/toaster/bldcontrol/models.py

commit 404f406fecae879703bcfe96f3b65086b115fa8a
Author: Sujith H <sujith.h@gmail.com>
Date:   2016-04-06 17:46:34 +0100

    toaster: models Add cancelled state to build outcome
    
    A new state CANCELLED is introduced to, distinguish
    the state of build.
    
    [YOCTO #6787]
    
    Signed-off-by: Sujith H <sujith.h@gmail.com>
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

19	0	lib/toaster/orm/migrations/0006_add_cancelled_state.py
6	1	lib/toaster/orm/models.py

commit e15151106aae21d3b164ca868be42bd63905f0a1
Author: Sujith H <sujith.h@gmail.com>
Date:   2016-04-06 17:46:33 +0100

    toaster: update BuildEnvironmentController and BitbakeController
    
    Remove getBBController function from BuildEnvironmentController.
    The constructor of BitbakeController is updated appropriately so that
    call can be made to connect to running server.
    The call to startBBServer is removed from bbcontroller and  handledin
    localhostbecontroller.
    
    [YOCTO #6787]
    
    Signed-off-by: Sujith H <sujith.h@gmail.com>
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

4	22	lib/toaster/bldcontrol/bbcontroller.py
1	1	lib/toaster/bldcontrol/localhostbecontroller.py

commit 61a21d96abab113cbd13376cdb8b08a426b50538
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2016-04-06 17:46:32 +0100

    toaster: libtoaster Update implementation of startABuild and cancelABuild
    
    Update the implementation of startABuild and cancelAbuild to reflect
    changes to the backend api. We now have a dedicated endpoint to make
    calls into so add this url to libtoaster.ctx and allow passing null in
    as a url value to indicate that we want to use the current project
    
    Also:
     - Fix some documentation comments
     - Add the convenience of passing in an array of targets to startABuild
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	3	lib/toaster/toastergui/static/js/customrecipe.js
1	2	lib/toaster/toastergui/static/js/layerBtn.js
26	15	lib/toaster/toastergui/static/js/libtoaster.js
1	3	lib/toaster/toastergui/static/js/projectpage.js
3	3	lib/toaster/toastergui/static/js/projecttopbar.js
1	3	lib/toaster/toastergui/static/js/recipedetails.js
1	0	lib/toaster/toastergui/templates/base.html

commit 0d76084f5d896e4199e1446e2d6d43190a4fcc3a
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2016-04-06 17:46:31 +0100

    toaster: xhr Update the implementation of the build cancellation request
    
    Update the implementation of the backend api for cancelling builds with
    the new cancelling BuildRequest state and cancelled Build state.
    Also added some docstring about general usage.
    
    Co-Author: Sujith H <sujith.h@gmail.com>
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

45	9	lib/toaster/toastergui/api.py

commit 29572f0e6bd3b5e8315f3b93d55bdb8967b86bc3
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2016-04-06 17:46:30 +0100

    toaster: Move xhr calls for starting and stopping builds
    
    Move the backend xhr implementation of the build request changes
    into it's own file and out of the ToasterTable definition.
    It used to live in the views.py but in a hope of starting to collate logical
    groups of views move this to a new file called api.
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

74	0	lib/toaster/toastergui/api.py
1	42	lib/toaster/toastergui/tables.py
5	0	lib/toaster/toastergui/urls.py

commit 89dc2ee8f5b7255538082ce4f6cb5277839875a8
Author: Sujith H <sujith.h@gmail.com>
Date:   2016-04-06 17:46:29 +0100

    toaster: bldcontrol Add forceShutDown function to BitbakeController
    
    Add forceShutDown function to BitbakeController class. This function
    provides a mechanism to cancel the build from toaster. An API which
    can be used safely to cancel build and hence shutdown running bitbake
    server.
    
    [YOCTO #6787]
    
    Signed-off-by: Sujith H <sujith.h@gmail.com>
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	0	lib/toaster/bldcontrol/bbcontroller.py

commit 9cd60f98b13cf7b1c518851a51e1cbaa596d8f81
Author: Ed Bartosh <ed.bartosh@linux.intel.com>
Date:   2016-04-06 17:46:28 +0100

    toasterui: shutdown on BuildCompleted event
    
    toasterui exits event loop on one of the following events:
    CommandCompleted, CommandFailed or CommandExit.
    Unfortunately none of them come from bitbake when build fails.
    This is normai if toasterui runs in observer mode. However, if it's
    in build mode this causes toasterui to stuck in the infinite loop
    waiting for new events.
    
    The only event we can rely on is BuildCompleted as it always
    comes from bitbake unlike 3 above mentioned events.
    
    Modified the code to always shutdown toasterui in build mode
    on BuildCompleted event.
    
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

8	5	lib/bb/ui/toasterui.py

commit e4352603b21d43a8b5d9ee417c036fff0a263d40
Author: Ed Bartosh <ed.bartosh@linux.intel.com>
Date:   2016-04-06 17:46:27 +0100

    toaster: use bash explicitly
    
    Toaster can't run builds on Ubuntu as default /bin/sh points
    to dash there. The reason is that oe-init-build-env can't
    be sourced under dash for various reasons. It can be fixed
    or work arounded, but it wouldn't fix builds for older releases.
    Explicitly using bash to start builds should fix the issue.
    
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

7	6	lib/toaster/bldcontrol/localhostbecontroller.py

commit 79611d0ea742263074fbb0bf5f1e39df75fd9f55
Author: Ed Bartosh <ed.bartosh@linux.intel.com>
Date:   2016-04-06 17:46:26 +0100

    toaster: fix jethro build
    
    The keys 'started', 'ended', 'cpu_time_user', 'disk_io_read' and
    'disk_io_write' were added to the event recently, so they don't
    exist in the events generated by bitbake server from older releases.
    
    Checking if task_to_update structure has these keys before using
    them should fix build of older releases.
    
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

10	8	lib/bb/ui/buildinfohelper.py

commit 1271cf430087c66f87c46689b37b8a3538c35739
Author: Ed Bartosh <ed.bartosh@linux.intel.com>
Date:   2016-04-06 17:46:25 +0100

    toaster: update conf/local.conf
    
    Added 'INHERIT+="toaster buildhistory"' line to the conf/local conf
    when Toaster starts. It should make commandline builds to provide
    all required information to Toaster backend.
    
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	3	bin/toaster

commit 062c68e3e7d00834118fe07ceb0899874be714ae
Author: Ed Bartosh <ed.bartosh@linux.intel.com>
Date:   2016-04-06 17:46:24 +0100

    toaster: stop bitbake server after the build
    
    Bitbake server is used only during the build. There is no need
    in keeping server running after the build.
    
    Running bitbake -m in the subshell after the build should stop
    the server.
    
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

6	4	lib/toaster/bldcontrol/localhostbecontroller.py

commit 89fae3c8712bfaac48686c58b480e40c1abdcfdc
Author: Ed Bartosh <ed.bartosh@linux.intel.com>
Date:   2016-04-06 17:46:23 +0100

    toaster: add new parameter to _shellcmd
    
    Added 'nowait' parameter to _shellcmd method to support
    running chain of commands in a subshell.
    
    This is going to be used to stop bitbake server after
    the build.
    
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	1	lib/toaster/bldcontrol/localhostbecontroller.py

commit aba8e19bf609196f749e185d43571f706707e408
Author: Ed Bartosh <ed.bartosh@linux.intel.com>
Date:   2016-04-06 17:46:22 +0100

    toaster: reimplement triggerBuild
    
    Reimplemented triggerBuild method to support one build directory
    per project:
     - start bitbake server from the cloned repository
     - don't run observer
     - run bitbake build directly instead of triggering it
       through xmlrpc
    
    [YOCTO #7880]
    [YOCTO #9058]
    [YOCTO #8958]
    
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

67	35	lib/toaster/bldcontrol/localhostbecontroller.py

commit 198bf7e6b8d7f847f2619b71c6bd86a9a76156c9
Author: Ed Bartosh <ed.bartosh@linux.intel.com>
Date:   2016-04-06 17:46:21 +0100

    toaster: modified setLayers API
    
    Removed updating of bblayers.conf. It will be done in runBuild method.
    Changed return value: return list of layers.
    Removed _updateBBLayers method.
    
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

0	18	lib/toaster/bldcontrol/bbcontroller.py
1	8	lib/toaster/bldcontrol/localhostbecontroller.py

commit 669bb3f6865d8bb89cd94ef9d0eba3346c47d7b2
Author: Ed Bartosh <ed.bartosh@linux.intel.com>
Date:   2016-04-06 17:46:20 +0100

    toaster: add brbe parameter to triggerBuild
    
    Called triggerBuild with brbe parameter instead of adding TOASTER_BRBE
    variable to the database and fetching it in triggerBuild.
    
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/toaster/bldcontrol/localhostbecontroller.py
2	4	lib/toaster/bldcontrol/management/commands/runbuilds.py

commit ef9e126227d3bdee86c1592e2baa43d21e6a32df
Author: Ed Bartosh <ed.bartosh@linux.intel.com>
Date:   2016-04-06 17:46:19 +0100

    toaster: remove release API
    
    This API is quite dangerous as it removes build directory.
    It's not used anywhere and most probably will not be used in future
    as toaster is going to have one build directory per project.
    
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

0	6	lib/toaster/bldcontrol/bbcontroller.py
0	6	lib/toaster/bldcontrol/localhostbecontroller.py

commit a8f986d73a84f28fa8b116b91fb30c5d2cd4edbe
Author: Ed Bartosh <ed.bartosh@linux.intel.com>
Date:   2016-04-06 17:46:18 +0100

    toaster: remove startBBServer API
    
    We still will have to run bitbake server, but it will be done
    different way and the code will be in triggerBuild function.
    
    Removed startBBServer API from BuildEnvironmentController and
    LocalhostBEController classes.
    
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

0	9	lib/toaster/bldcontrol/bbcontroller.py
0	32	lib/toaster/bldcontrol/localhostbecontroller.py

commit 5d7cce0d0ed70f6b3ebd6cbad300d86964a13398
Author: Ed Bartosh <ed.bartosh@linux.intel.com>
Date:   2016-04-06 17:46:17 +0100

    toasterui: fix brbe reporting
    
    buildinfohelper.brbe is lost when buildinfohelper is closed.
    This causes incorrect report of brbe when build is done.
    
    Saved brbe attribute before closing buildinfohelper and used
    it to report correct brbe.
    
    Got rid of useless and confusing 'ToasterUI build done 1'
    log message.
    
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	3	lib/bb/ui/toasterui.py

commit f6dcb1c9967f042beae024146781cb8235a9e1f2
Author: Ed Bartosh <ed.bartosh@linux.intel.com>
Date:   2016-04-06 17:46:16 +0100

    buildinfohelper: improve handling of providermap
    
    DepTreeGenerated event doesn't contain 'providermap' data in jethro.
    Modified buildinfohelper to handle events without this data. This
    should make it possible to handle jethro events coming from jethro
    bitbake server by the latest buildinfohelper.
    
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	2	lib/bb/ui/buildinfohelper.py

commit f356c154016c428a3b53af61a075de6f14d9d1d9
Author: Ed Bartosh <ed.bartosh@linux.intel.com>
Date:   2016-04-06 17:46:15 +0100

    uievent: improve BBUIEventQueue code
    
    Return value of self.BBServer.registerEventHandler differs between
    jethro and master. To be able to build jethro toaster should be
    able to communicate with jethro bitbake server i.e. it must work
    with both old and new registerEventHandler call.
    
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

8	2	lib/bb/ui/uievent.py

commit a0c8e2b309055e5927a8ff729d292ccaa69d0575
Author: Ed Bartosh <ed.bartosh@linux.intel.com>
Date:   2016-04-06 17:46:14 +0100

    toasterui: add brbe parameter to buildinfohelper
    
    In current toaster code BRBE(build request:build environment) value
    is passed from toaster to buildinfohelper through the 'SetBRBE' event.
    
    Passing it through environment variable is easier as it doesn't
    involve rpc communication between toaster and bitbake server.
    It also eliminates the need in running bitbake observer process.
    
    Added parameter 'brbe' to BuildInfoHelper.__init__
    Used environment variable TOASTER_BRBE to set brbe for
    buildinfohelper object.
    
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	2	lib/bb/ui/buildinfohelper.py
2	1	lib/bb/ui/toasterui.py

commit 9ad6393d30cb6196cf7c9a5adcf33febd724d294
Author: Ed Bartosh <ed.bartosh@linux.intel.com>
Date:   2016-04-06 17:46:13 +0100

    toaster: set BITBAKE_UI environment variable
    
    Set BITBAKE_UI variable to 'toastergui' for command line builds
    to use toasterui as a default ui module for bitbake.
    
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	0	bin/toaster

commit 7506719090e8bb39231cf389c4a5b47f1b37a01f
Author: Ed Bartosh <ed.bartosh@linux.intel.com>
Date:   2016-04-06 17:46:12 +0100

    toaster: get rid of noui option
    
    noui command line option doesn't makes sense anymore as toaster doesn't
    run bitbake. It should be safe to to remove it.
    
    The purpose of this option was to skip running bitbake observer process.
    This was never used before as it's not possible to run toaster build
    without running observer.
    
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

0	4	bin/toaster

commit 3fbd8534149e87c5a5d1bc1691711cfca05cafd1
Author: Ed Bartosh <ed.bartosh@linux.intel.com>
Date:   2016-04-06 17:46:11 +0100

    toaster: don't start bitbake server
    
    >From now on toaster script will not run bitbake server.
    It will be started by runbuilds and stopped after the build.
    
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

6	61	bin/toaster

commit 6140d0cc9aecf1029ca16fed47071dfcc92f4269
Author: Robert Yang <liezhi.yang@windriver.com>
Date:   2016-04-05 03:35:51 -0700

    fetch2/git.py: remove .indirectiondir workaround
    
    It was used for workaround git 1.7.9.2 which was released in 2012 which
    should not be existed on nowadays host, so remove it to avoid
    confusions.
    
    Signed-off-by: Robert Yang <liezhi.yang@windriver.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	17	lib/bb/fetch2/git.py

commit 09623a0811c613a47a01ae465b822d8156faca30
Author: Klauer, Daniel <Daniel.Klauer@gin.de>
Date:   2016-04-05 08:49:15 +0000

    persist_data: Return str instead of unicode for sqlite3 text queries
    
    Python 2's sqlite3 module defaults to returning Unicode strings for SQL
    text queries, which could trickle down to other parts of bitbake code and
    cause unexpected Unicode conversions. Using byte strings avoids this issue.
    
    For example, the git fetcher's AUTOREV support caches HEAD SHA1's using
    bb.persist_data, so sometimes the git command strings passed to fetch2's
    runfetchcmd() were unicode, potentially causing UnicodeDecodeErrors when
    it appended the values of environment variables containing non-ASCII chars.
    
    [YOCTO #9382]
    
    Signed-off-by: Daniel Klauer <daniel.klauer@gin.de>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	0	lib/bb/persist_data.py

commit da444c9761ee15a59ea8880e3f812a5d3f1a1aaa
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2016-04-03 15:48:30 +0100

    siggen: Ensure tainted stamps are accounted for with writing custom stamps
    
    sstate.bbclass for example writes siginfo files to a separate location
    but we need to read taint data from the standard path.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

7	3	lib/bb/siggen.py

commit f80ba20e90f3746f7faee3e0ff7f249025fec8ee
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2016-04-02 23:15:06 +0100

    siggen: Fix nostamp taint handling
    
    The taint values need to be passed from the server to the workers to
    ensure they see the same stamp values. Also ensure that the "nostamp:"
    prefix isn't included in the checksum value to match the server
    calculation. This ensures the checksums are all consistent.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

7	3	lib/bb/siggen.py

commit 0f50a18d7a0ea0d68edd8e5217e29111f4b1ea0b
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2016-04-02 17:11:26 +0100

    siggen: Add checksum recalculation/checking code
    
    In theory all the information to recalcuate the task signatures was written
    into the siginfo/sigdata files. In reality, some of the information was
    written into the filename.
    
    Firstly this patch duplicates that info into the file itself just for easy
    of use since its small.
    
    Secondly, we abstract out the existing "calculate the checksum" code for
    the taskhash, and add a function to calculate the bashhash based on the
    informaiton within the file.
    
    Finally, we call these functions when we're writing out the data to check
    that the data we're writing is consistent. I've found a couple of places
    it wasn't and its good to know about these in advance, rather than having
    a siginfo/sigdata file which a given hash in its filename but a contents
    which give a different result.
    
    This should all combine to avoid a certain class of checksum bugs making
    it into world, and identifying problems in advance.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

49	11	lib/bb/siggen.py

commit 046c1be7594fae2eec3d1f242ba3e9a85f1a1880
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2016-04-02 17:10:48 +0100

    siggen: Fix check calculation problem with file_checksums
    
    When I enabled debugging of the checksum code, I found the value calculated
    from siginfo/sigdata files for do_fetch tasks never matched. This was due
    to an error in the way the data was being stored for these, it wasn't ordered
    correctly. This patch fixes things so the checksums calculated from
    siginfo/sigdata files is correct when file checksums are present.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

4	3	lib/bb/siggen.py

commit a896f263300f069400eae533be0daf5dedf41c95
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2016-04-02 17:08:57 +0100

    siggen: Drop misleading duplicate method
    
    The real method is a few lines later, this one is incorrect and
    just causing confusion. Remove it.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

0	3	lib/bb/siggen.py

commit 77747de6b20538063eef3b188489a35bef225359
Author: Olof Johansson <olof.johansson@axis.com>
Date:   2016-04-01 17:01:48 +0200

    tests/fetch.py: Improve unit tests for trusted network check
    
    The tests were skipped when running without network even though they
    didn't require network. This commit also adds a test case for URLs with
    ports in them (the ports should not be considered when doing trusted
    network checks).
    
    Signed-off-by: Olof Johansson <olof.johansson@axis.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

42	35	lib/bb/tests/fetch.py

commit ff603df23037e10fb2cfdf150429cba3f65072cd
Author: Olof Johansson <olof.johansson@axis.com>
Date:   2016-04-01 17:01:47 +0200

    fetch2: BB_ALLOWED_NETWORKS should not care about port numbers
    
    Bitbake would fail to classify the following URL as belonging to a
    allowed network, because of the port number in the url.
    
     BB_ALLOWED_NETWORKS = "*.example.com"
     SRC_URI = "http://git.example.com:8080/foo.tar.gz"
    
    Since protocols aren't specified in the BB_ALLOWED_NETWORKS variable,
    it's reasonable to believe that this should work regardless of protocol
    being used.
    
    Signed-off-by: Olof Johansson <olof.johansson@axis.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	0	lib/bb/fetch2/__init__.py

commit a6add0e95d3d1e9a6a9fcabd73543bc5c278915f
Author: Joshua Lock <joshua.g.lock@intel.com>
Date:   2016-04-01 12:57:58 +0100

    toaster: orm better detect requires during CustomImageRecipe generation
    
    We were doing a string search for the literal string "require" and
    assuming that a match meant the recipe uses the require keyword to
    include the contents of another recipe. This test isn't very smart (it
    should at least have matched on "require ") and triggers on the word
    require anywhere in the recipe, i.e. the word "required" in the
    DESCRIPTION of core-image-lsb.bb, and then breaks as the much smarter
    regex fails to match anything.
    
    Instead always run the regex search and only try to update the
    require entry when the regex matches.
    
    Signed-off-by: Joshua Lock <joshua.g.lock@intel.com>
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	3	lib/toaster/orm/models.py

commit 691419e23a94a94129b177e71d2c728b12689139
Author: Belen Barros Pena <belen.barros.pena@linux.intel.com>
Date:   2016-04-01 12:55:40 +0100

    toaster: Correct typo on build form help text
    
    The help text said to append a semicolon and a task name to a target to
    run a task other than do_build. What you need to append is a colon.
    
    [YOCTO #9326]
    
    Signed-off-by: Belen Barros Pena <belen.barros.pena@linux.intel.com>
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/toaster/toastergui/templates/projecttopbar.html

commit 3deebd887bddbbd02fd9829a180aab494b1af7c4
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2016-04-01 12:53:55 +0100

    toaster: buildinfohelper Add additional metadata to the built layer
    
    Add additional metadata to the layer created for build history to be
    able to identify the layer and recipe later on. Specifically this is the
    branch and release to which the recipe and layer are associated with
    enabling differentiation of two recipes which are local release and
    master and 'master' release.
    
    [YOCTO #8528]
    [YOCTO #8545]
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

23	11	lib/bb/ui/buildinfohelper.py

commit 20ce1e1b39a9b602eb51ca0ba3954ea3e999c874
Author: Elliot Smith <elliot.smith@intel.com>
Date:   2016-03-31 19:55:47 +0100

    toaster: tests Migrate landing page tests to Selenium
    
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

108	0	lib/toaster/tests/browser/test_landing_page.py
0	74	lib/toaster/toastergui/tests.py

commit 0e5f45d68e423f8462937879eed3253db31b2bb5
Author: Elliot Smith <elliot.smith@intel.com>
Date:   2016-03-31 19:55:46 +0100

    toaster: tests Migrate all projects page tests to Selenium
    
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

214	0	lib/toaster/tests/browser/test_all_projects_page.py
0	197	lib/toaster/toastergui/tests.py

commit 31204937f71a7e0aa08361c3e20d02d063788a86
Author: Elliot Smith <elliot.smith@intel.com>
Date:   2016-03-31 19:55:45 +0100

    toaster: tests Migrate project builds page tests to Selenium
    
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

168	0	lib/toaster/tests/browser/test_project_builds_page.py
0	133	lib/toaster/toastergui/tests.py

commit 4fda6be831d10e6d266b11975a0e9a35a7f35a77
Author: Elliot Smith <elliot.smith@intel.com>
Date:   2016-03-31 19:55:44 +0100

    toaster: tests Migrate all builds page and project page tests to Selenium
    
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

143	0	lib/toaster/tests/browser/test_all_builds_page.py
59	0	lib/toaster/tests/browser/test_project_page.py
0	140	lib/toaster/toastergui/tests.py

commit b7a377aa2ab36390d619e2a0436ccb4b8d186c23
Author: Elliot Smith <elliot.smith@intel.com>
Date:   2016-03-31 19:55:43 +0100

    toaster: tests Migrate to Selenium for UI tests
    
    Create a new folder for Selenium tests.
    
    Add a new base Selenium testcase class and a helper which
    instantiates a webdriver for a given browser.
    
    Add a sample Selenium test case which can be used as a template
    for creating new tests.
    
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

0	0	lib/toaster/tests/__init__.py
41	0	lib/toaster/tests/browser/README
0	0	lib/toaster/tests/browser/__init__.py
200	0	lib/toaster/tests/browser/selenium_helpers.py
41	0	lib/toaster/tests/browser/test_sample.py
1	0	lib/toaster/tests/toaster-tests-requirements.txt

commit 5549748a200b5df259fc7352477ec59471b87b2f
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2016-03-31 12:47:13 +0100

    bitbake: Don't limit traceback lengths to arbitrary values
    
    There appears to have been a lot of copy and pasting of the code
    which prints tracebacks upon failure and limits the stack trace to
    5 entries. This obscures the real error and is very confusing to the user
    it look me an age to work out why some tracebacks weren't useful.
    
    This patch removes the limit, making tracebacks much more useful for
    debugging.
    
    [YOCTO #9230]
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	bin/bitbake-layers
1	1	bin/bitbake-prserv
1	1	bin/image-writer
1	1	lib/toaster/contrib/tts/toasteruitest/run_toastertests.py

commit 2b1cb21d18fb18399e682021b866babeced9a4aa
Author: Robert Yang <liezhi.yang@windriver.com>
Date:   2016-03-30 02:32:55 -0700

    cookerdata.py: remove slash in the end
    
    It's very possible that we added layer as:
    BBLAYERS += "/path/to/meta/"
    
    then there would be warning:
    WARNING: No bb files matched BBFILE_PATTERN_core '^/path/to/meta//'
    
    This patch can fix the problem.
    
    Signed-off-by: Robert Yang <liezhi.yang@windriver.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	0	lib/bb/cookerdata.py

commit 2f6be16c274974be5eb07641374d691ef049fe76
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2016-03-30 21:22:55 +0100

    Bump version to 1.29.1
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	bin/bitbake
1	1	lib/bb/__init__.py

commit 85cf22fd0ed26bb7dc7738ef2a10441891f38ae2
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2016-03-30 20:52:56 +0100

    build/utils: Allow python functions to execute with real exception handling
    
    With the code as it stands today it not possible to execute a python function
    and get "normal" python exception handling behaviour. If a python function
    raises an exception, it forces a traceback to be printed and the exception
    becomes a FuncFailed exception.
    
    This adds in a parameter 'pythonexception' which allows standard python
    exceptions to be passed unchanged with no traceback. Ultimately we may want
    to change to this convention in various places but at least it means we can
    start to add sane functions now.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

11	4	lib/bb/build.py
3	1	lib/bb/utils.py

commit 69ef6c8a9db02bfa0e3fac72481ec26586a29a01
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2016-03-30 20:49:59 +0100

    fetch2: Ensure that incorrect checksumed files are always renamed
    
    There are some codepaths where the file checksum is verified and can
    be found to mismatch but the 'rename' logic doesn't kick in. If code
    relies on the presence of a file for the checksum having been checked
    (e.g. uninative.bbclass) then it can be used when the checksum hasn't
    matched.
    
    Therefore rename the file whenever an invalid checksum is encountered.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

21	8	lib/bb/fetch2/__init__.py

commit 7ebea3e9a60232222efa8a546a0ff28a53029949
Author: Markus Lehtonen <markus.lehtonen@linux.intel.com>
Date:   2016-03-30 15:54:00 +0300

    cooker: fix CookerParser.shutdown()
    
    Prevent a hang when shutdown() is called during parsing (e.g. after
    SIGINT). We must not append 'None' to the jobs queue. Otherwise the
    worker loop inside Parser.realrun() may break out at the wrong point,
    causing the results queue thread blocking bitbake indefinitely.
    
    [YOCTO #9319]
    
    Signed-off-by: Markus Lehtonen <markus.lehtonen@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

0	1	lib/bb/cooker.py

commit 3f8febc4212fbd3485ac9bdd4ac71b8fb0a05693
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2016-03-29 16:09:52 +0100

    cooker: Ensure bbappend order is deterministic
    
    Currently bbappend files in a layer are applied in the order they're
    found on disk (as reported by glob) which means things are not
    deterministic.
    
    By sorting the glob results, the order becomes deterministic, the parsing
    order for .bb files also should be deterministic as a result of this change.
    
    [YOCTO #9138]
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	1	lib/bb/cooker.py

commit 66dff37ebcd1dd14ebd6933d727df9cf0a641866
Author: Markus Lehtonen <markus.lehtonen@linux.intel.com>
Date:   2016-03-29 16:04:19 +0300

    checksum: In FileChecksumCache don't follow directory symlinks
    
    Before this patch, directory symlinks mathcing filename pattern (either
    a file name or a glob pattern) were followed. However, directory
    symlinks deeper in the search chain were omitted by os.walk(). Now
    directory traversal behaves consistently, ignoring syminks on all
    levels.
    
    One reason for choosing not to "walk into" directory symlinks is that
    dir symlinks in externalsrc.bbclass in oe-core are causing problems in
    source tree checksumming.
    
    [YOCTO #8853]
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

4	2	lib/bb/checksum.py

commit 148aa1fb45dcb37a756a08301a7daf270e753180
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2016-03-28 18:04:10 +0100

    cookerdata: Improve handling of ParseError
    
    If local.conf contains an invalid line, e.g.:
    
     APPEND += " igor"
    
    (note the leading space) then nasty tracebacks are shown which confuse the
    user. Change so the parse error is simply shown without a traceback, improving
    the user experience.
    
    [YOCTO #9332]
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	1	lib/bb/cookerdata.py

commit c760531c6dbf88135ab9f8e6f0784ccbf2cce1e4
Author: Aníbal Limón <limon.anibal@gmail.com>
Date:   2016-03-24 12:08:19 -0600

    fetch2/wget.py: _check_latest_version_by_dir fix prefix detection
    
    When prefix is part of the version directory it need to ensure that
    only version directory is used so remove previous directories if exists.
    
    Example: pfx = '/dir1/dir2/v' and version = '2.5' the expected result
    is 'v2.5' instead of '/dir1/dir2/v2.5'.
    
    [YOCTO #8778]
    
    Signed-off-by: Aníbal Limón <limon.anibal@gmail.com>
    Signed-off-by: Aníbal Limón <anibal.limon@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

12	2	lib/bb/fetch2/wget.py

commit e8ea15eeb1857ed4bb6337836bd2fb1f5dbb1bdf
Author: Aníbal Limón <limon.anibal@gmail.com>
Date:   2016-03-24 12:08:18 -0600

    fetch2/wget.py: _check_latest_version_by_dir use group names
    
    Little improvement for reference tokens by names instead of index.
    
    Signed-off-by: Aníbal Limón <limon.anibal@gmail.com>
    Signed-off-by: Aníbal Limón <anibal.limon@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

4	4	lib/bb/fetch2/wget.py

commit 913b6ce22cd50eac96e8937c5ffc704bfce2c023
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2016-03-24 16:11:56 +0000

    fetch2: Handle lockfiles for file:// urls redirected to mirrors
    
    We recently dropped lockfiles for file:// urls which in itself makes
    sense.
    
    If a file url redirects to something like an http:// mirror, we'd have
    no lock taken for the original file and could race against others
    trying to download the file. We therefore need to ensure there is a
    lock taken in the mirror handling code.
    
    This adds code to take such a lock, assuming it isn't the same lock
    as the parent url.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

8	0	lib/bb/fetch2/__init__.py

commit 1185a5bfe1b05a1b63a927c9583dfc031fdac8a9
Author: Dave Lerner <dave.lerner@windriver.com>
Date:   2016-03-24 12:12:11 +0000

    toaster: get all dependents for pkg for removal
    
    For customised image package removal change behavior.
    From:
        Only display the immediate dependents of the requested package
        to remove, not the full dependent list, that is dependents of
        dependents ...
        Do not remove the displayed dependents, just notify the user
        of the list.
    To:
        Display the complete dependent tree, traversing all reverse
        dependencies starting from the package to be removed and then it's
        dependents.
        Change the modal dialog to note that all of these dependents will
        be removed automatically.
    
    [YOCTO #9121]
    
    Signed-off-by: Dave Lerner <dave.lerner@windriver.com>
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

79	12	lib/toaster/toastergui/views.py

commit 768e6bb90c433687b0d52f256b7115499ca3418b
Author: Dave Lerner <dave.lerner@windriver.com>
Date:   2016-03-24 12:12:10 +0000

    toaster: new customise package-remove modal dlg
    
    For customised image package removal, show a different modal dialog that
    lists ALL of the packages dependent on this package, with a Remove All
    button - implying that all of the dependents will be removed.
    
    [YOCTO #9121]
    
    Signed-off-by: Dave Lerner <dave.lerner@windriver.com>
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	2	lib/toaster/toastergui/templates/customrecipe.html

commit f5cb59b6b10a714b18b1c00b9a8598dd855c84b5
Author: Dave Lerner <dave.lerner@windriver.com>
Date:   2016-03-24 12:12:09 +0000

    toaster: show full list of dependents to remove
    
    When a package is to be removed, show the full list of packages that are
    dependent on that package, telling user that these packages will also be
    removed.
    
    [YOCTO #9121]
    
    Signed-off-by: Dave Lerner <dave.lerner@windriver.com>
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

66	6	lib/toaster/toastergui/static/js/customrecipe.js

commit dbafbe229360ffe5908b106a9c10e274712b9b17
Author: Derek Straka <derek@asterius.io>
Date:   2016-03-24 08:08:35 -0400

    bitbake: fetch2/gitsm: Fix fetch when the repository contains nested submodules
    
    This fixes a problem when the repository contains multiple levels of submodules via a resursive submodule init.
    
    Signed-off-by: Derek Straka <derek@asterius.io>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	5	lib/bb/fetch2/gitsm.py

commit afc0dd5c532684f6201b1e12bbf4c226ea19062d
Author: Ed Bartosh <ed.bartosh@linux.intel.com>
Date:   2016-03-17 11:34:23 +0000

    bitbake: xmlrpc: set single use mode differently
    
    Currently xmlrpc server implicitly sets itself into single use mode
    when bitbake server is started with anonymous port (0) or no port is
    provided in command line. In this mode bitbake shuts down xmlrpc server
    after build is done. This assumption is incorrect in some cases.
    For example Toaster uses bitbake in this mode and expects xmlrpc server
    to stay in memory.
    
    Till recent changes single use mode was always unset due to the bug.
    When the bug was fixed it broke toaster builds as Toaster couldn't
    communicate with bitbake server in single use mode.
    
    Reimplemented logic of setting single use mode. The mode is explicity
    set when --server-only command line parameter is not provided to bitbake.
    It doesn't depend on the port number anymore.
    
    [YOCTO #9275]
    [YOCTO #9240]
    [YOCTO #9252]
    
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	2	lib/bb/main.py
1	1	lib/bb/server/process.py
4	4	lib/bb/server/xmlrpc.py

commit bdad45ebe551912b055ffa349d254ae5947a3ba6
Author: Scott Rifenbark <srifenbark@gmail.com>
Date:   2016-03-23 14:47:42 -0700

    bitbake-user-manual: include/require checks current directory
    
    I added wording to note that include/require checks the current
    directory in addition to BBPATH
    
    Fixes [YOCTO #8566]
    
    Signed-off-by: Scott Rifenbark <srifenbark@gmail.com>

7	2	doc/bitbake-user-manual/bitbake-user-manual-metadata.xml

commit 07f97f4d913cf1c8233995152105fff6c6c7b9a0
Author: Scott Rifenbark <srifenbark@gmail.com>
Date:   2016-03-22 13:35:28 -0700

    bitbake-user-manual: Updated the "inherit Directive" section.
    
    Fixes [YOCTO #9283]
    
    Updated the description to document conditional inherits.  Provided
    several examples.
    
    Signed-off-by: Scott Rifenbark <srifenbark@gmail.com>

45	0	doc/bitbake-user-manual/bitbake-user-manual-metadata.xml

commit ea6d31a569d18b07cfc977d994a320a588c4f9c2
Author: Scott Rifenbark <srifenbark@gmail.com>
Date:   2016-03-22 13:35:00 -0700

    bitbake-user-manual: Updated the copyright year to 2016
    
    Signed-off-by: Scott Rifenbark <srifenbark@gmail.com>

1	1	doc/bitbake-user-manual/bitbake-user-manual.xml

commit 1cc102f3d83d9467a3a3c422254333796ba95605
Author: Ed Bartosh <ed.bartosh@linux.intel.com>
Date:   2016-03-17 11:59:02 +0000

    toasterui: remove ParseStarted from the event list
    
    bb.event.ParseStarted event is not processed by toasterui, but
    present in event list. This causes the following error:
       WARNING: Unknown event: <bb.event.ParseStarted object at ...
    and non-zero return code:
       WARNING: Return value is 1
    
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

0	1	lib/bb/ui/toasterui.py

commit a21dc134bdce2c9eb5e47c770094660f0c45c398
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2016-03-17 11:49:16 +0000

    toasterui: Remove the excessive exception logging
    
    Remove the very verbose log dump from toasterui. This generates several
    megabytes of not that useful debug information and actually hinders
    finding the original exception.
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

0	7	lib/bb/ui/toasterui.py

commit 78335c1fbe5266116700c2413aac28b00423a75b
Author: Markus Lehtonen <markus.lehtonen@linux.intel.com>
Date:   2016-03-22 16:59:55 +0200

    cache: Make BB_DONT_CACHE variable external
    
    This makes it possible to prevent a recipe to be cached, and thus,
    parsed every time.
    
    Use with care.
    
    [YOCTO #8853]
    
    Signed-off-by: Markus Lehtonen <markus.lehtonen@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/cache.py
1	1	lib/bb/fetch2/__init__.py

commit 238db2e03405d259d48dfc477a276191e6a47698
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2016-03-23 08:28:40 +0000

    toaster: orm generate CustomImageRecipe contents try secondary path
    
    Try a secondary file path if the first does not exist. When we get the
    recipe paths and layer information from the layer index it is not a
    complete path but we are usually able to reconstruct it. If the complete
    real path has been discovered by building then use this instead.
    
    [YOCTO #9206]
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

7	4	lib/toaster/orm/models.py

commit 77f3728ee6ea379bffcf73f33c26e982cb0795f4
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2016-03-23 08:28:39 +0000

    toaster: localhostbecontroller put generated layer in the builddir
    
    Move the generated layer for custom recipes into the build directory.
    The build directory makes more sense as this layer/recipe is generated
    for a particular build/project.
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	3	lib/toaster/bldcontrol/localhostbecontroller.py

commit 4d0e5804103c2d98d038b3c490cac37a73f3cc47
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2016-03-23 08:28:38 +0000

    toaster: localhostbecontroller Allow file:/// uri type for git repo
    
    We don't need to skip file:/// uri type locations for git repositories.
    If you're using a file:/// uri you should know that it has to be a local
    path.
    
    [YOCTO #9200]
    
    igned-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	2	lib/toaster/bldcontrol/localhostbecontroller.py

commit 2540969ec71612af7f9041cadcc401513e9b357b
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2016-03-23 08:28:37 +0000

    toaster: orm Add a constant for the CustomImageRecipe's layer name
    
    Use a constant to define the name for the toaster custom images layer;
    this constant is then used to identify this layer in various places.
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	2	lib/bb/ui/buildinfohelper.py
4	0	lib/toaster/orm/models.py
1	1	lib/toaster/toastergui/views.py

commit 502148fe498fe0a41ae89c9f649d3cb1253b0487
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2016-03-23 08:28:36 +0000

    toaster: localhostbecontroller Don't clear out toaster custom layer dir
    
    We may have a recipe which is based on a custom image recipe that has
    already been built so keep the recipe file around so that it can be read
    by the generate recipe function.
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	3	lib/toaster/bldcontrol/localhostbecontroller.py

commit 5f06041d4936fc22297945bbbad7020bfa9083c6
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2016-03-21 12:41:47 +0000

    bb/tests/fetch: Update cups url
    
    Update the upstream url used for testing cups versions after upstream website
    changes.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/tests/fetch.py

commit 7c849be7c70a5db4f66fe3041486abb923b5e4ee
Author: Brendan Le Foll <brendan.le.foll@intel.com>
Date:   2016-03-11 10:32:58 +0000

    fetch2/npm: fix ud.registry so that alternative registries can be handled
    
    Fixes [YOCTO #9231]
    
    npm when given an invalid registry URL with --registry actually goes and
    fetches from the default registry, but this commit makes sure it goes to the
    specified one.
    
    Signed-off-by: Brendan Le Foll <brendan.le.foll@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/fetch2/npm.py

commit 4a7fe63126dd8177baa5ad21e59e0bebeea8c596
Author: Lucas Dutra Nunes <ldnunes@ossystems.com.br>
Date:   2016-03-01 10:13:34 -0300

    server/process: Try connecting 4 times before giving up
    
    Instead of trying one time with a timeout of 20 seconds try 4 times with
    a timeout of 5 seconds, to account for a slow server start.
    
    Signed-off-by: Lucas Dutra Nunes <ldnunes@ossystems.com.br>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

6	4	lib/bb/server/process.py

commit de8baedaccb451c12bc3f642449db3f64aed6bf7
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2016-03-09 13:01:24 +0000

    toaster: models List only have the specified project's imported layers
    
    When returning the compatible layers make sure that we are only
    listing: All the layers which are for this release && configuration
    layers (i.e. aren't part of the build history) and which aren't an
    imported layer OR are this project's imported layer(s).
    
    [YOCTO #8944]
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

4	2	lib/toaster/orm/models.py

commit efa6f915566b979bdbad233ae195b413cef1b8da
Author: Elliot Smith <elliot.smith@intel.com>
Date:   2016-03-08 11:32:12 +0000

    toaster: rework task buildstats storage and display
    
    The data available from buildstats is now more fine grained than
    previously, so take advantage of that to enrich the data we save
    against tasks:
    
    * Store the CPU usage for user and system separately, and display
    them separately.
    * Disk IO is now measured in bytes, not ms. Also store the
    read/write bytes separately.
    * Store started and ended times, as well as elapsed_time. This
    will enable future features such as showing which tasks were
    running at a particular point in the build.
    
    There was also a problem with how we were looking up the Task
    object, which meant that the buildstats were being added to
    new tasks which weren't correctly associated with the build. Fix
    how we look up the Task (only looking for tasks which match the
    build, and the task and recipe names in the build stats data) so
    the build stats are associated with the correct task.
    
    [YOCTO #8842]
    
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

33	39	lib/bb/ui/buildinfohelper.py
48	0	lib/toaster/orm/migrations/0005_task_field_separation.py
16	2	lib/toaster/orm/models.py
2	2	lib/toaster/toastergui/templates/basebuildpage.html
15	8	lib/toaster/toastergui/templates/task.html
13	7	lib/toaster/toastergui/templates/tasks.html
1	1	lib/toaster/toastergui/urls.py
35	20	lib/toaster/toastergui/views.py

commit b6141c4d170885d3bdf63074afcb1e41fde0a8f0
Author: Sujith H <sujith.h@gmail.com>
Date:   2016-03-08 18:09:02 +0000

    toaster: use force_bytes to display non-ascii project names
    
    When user enters a non-ascii character in the project
    name of toaster, the build doesn't get triggered.
    Use force_bytes to fix this.
    
    Also deal with non-ascii project names when logging the
    build request in runbuilds.
    
    [YOCTO #9071]
    
    Signed-off-by: Sujith H <sujith.h@gmail.com>
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/toaster/bldcontrol/management/commands/runbuilds.py
3	1	lib/toaster/bldcontrol/models.py
4	1	lib/toaster/orm/models.py

commit ba011470df0ea8bd89f01c0b02ec4b3969e60ce7
Author: Peter Kjellerstedt <peter.kjellerstedt@axis.com>
Date:   2016-03-09 00:53:58 +0100

    fetch2: Make SRC_URI[md5sum] and SRC_URI[sha256sum] expand their values
    
    For some reason, the values for SRC_URI[md5sum] and SRC_URI[sha256sum]
    were not being expanded. That lead to the following code not working
    as expected:
    
    SRC_URI = "http://.../${PN}-${PV}.tar.gz"
    
    MD5SUM = "123abc..."
    SHA256SUM = "abcd1234..."
    
    SRC_URI[md5sum] = "${MD5SUM}"
    SRC_URI[sha256sum] = "${SHA256SUM}"
    
    Signed-off-by: Peter Kjellerstedt <peter.kjellerstedt@axis.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	2	lib/bb/fetch2/__init__.py

commit 0a60b0928a0a746a60d2c2f294ff1903963c7086
Author: Ed Bartosh <ed.bartosh@linux.intel.com>
Date:   2016-03-09 10:07:40 +0200

    xmlrpc: fix bug in setting XMLRPCServer.single_use
    
    XMLRPCServer.single_use attribute was always set to False.
    This caused xmlrpc server to keep running after build is done as
    BitBakeServerCommands.removeClient only shuts down server if its
    single_use attribute is set to True.
    
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	3	lib/bb/server/xmlrpc.py

commit 2fe1826d3077eeda6cde433d3a1e6620f74e08dd
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2016-03-09 17:22:14 +1300

    fetch2/npm: add missing URL argument to ParameterError
    
    Without this you get a rather odd traceback instead of the proper
    exception message.
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	2	lib/bb/fetch2/npm.py

commit 436d67fe7af89ecfbd11749a6ae1bc20e81f2cc8
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2016-03-09 17:22:13 +1300

    fetch2/npm: properly handle npm dependencies
    
    The output of "npm view dependencies" isn't entirely JSON if there are
    multiple results, but the code here was just discarding the output if
    the entire thing didn't parse as JSON. Split the output into lines and
    iterate over it, parsing JSON fragments as we find them; this way we end
    up with the last package's dependencies since it'll be last in the
    output.
    
    Digging further, it seems that the dependencies field reported by "npm
    view" also includes optional dependencies. That wouldn't be a problem
    except some of these optional dependencies may be OS-specific; for
    example the "chokidar" module has "fsevents" in its optional
    dependencies, but fsevents only works on MacOS X (and is only needed
    there). If we erroneously pull in fsevents, not only is it unnecessary
    but it causes "npm shrinkwrap" to throw a tantrum. In the absence of a
    better approach, look at the os field and discard the module (along with
    any of its dependencies) if it isn't for Linux.
    
    As part of this, we can reduce the calls to npm view to one per package
    since we get the entire json output rather than querying twice for two
    separate fields. Overall the time taken has probably increased since we
    are being more thorough about dependencies, but it's not quite as bad as
    it could have been.
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

45	19	lib/bb/fetch2/npm.py

commit bea0246831a46d943d2e27d6b38f6e498bd3413c
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2016-03-09 17:22:12 +1300

    fetch2/npm: fix errors with some version specifications
    
    "2 || 3" is a valid version specification for a dependency in an npm
    package.json file, but of course that looks like something else when
    sent to a shell. Quote the version value to avoid this.
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/fetch2/npm.py

commit 12f1fb8c9b70fea0c9145f881bcceb8af32df6af
Author: Ed Bartosh <ed.bartosh@linux.intel.com>
Date:   2016-03-02 22:47:44 -0800

    toasterui: fix warning 'Unknown event'
    
    Continue after processing BuildStarted event to fix
    WARNING: Unknown event: <bb.event.BuildStarted object at 0x2554150>
    
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: brian avery <avery.brian@gmail.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	0	lib/bb/ui/toasterui.py

commit b11f9d6d3c2eb615335901e1dcea699daf3afb4c
Author: Ed Bartosh <ed.bartosh@linux.intel.com>
Date:   2016-03-02 22:47:43 -0800

    toasterui: exit on final events
    
    Toasterui exits only if bitbake observer shuts down.
    In build mode it should exit when build is done.
    
    Made toasterui exit on bb.command.CommandCompleted,
    bb.command.CommandFailed and bb.command.CommandExit events
    when it's running in build mode.
    
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: brian avery <avery.brian@gmail.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

4	1	lib/bb/ui/toasterui.py

commit d4b5796899c3ca5c7becd7322291afd8afb35a31
Author: Ed Bartosh <ed.bartosh@linux.intel.com>
Date:   2016-03-02 22:47:42 -0800

    toasterui: make toasterui to work in build mode
    
    Currently toasterui works only in observer mode. This is
    artificial limitation which was made to support current toaster
    design. As we decided to stop using bitbake server we'll
    need to run toasterui also in build mode.
    
    [YOCTO #7880]
    
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: brian avery <avery.brian@gmail.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

17	2	lib/bb/ui/toasterui.py

commit 6e3f13ffb47102b5df2da91fbc3f5da3179245b2
Author: Ed Bartosh <ed.bartosh@linux.intel.com>
Date:   2016-03-02 22:47:41 -0800

    toasterui: check if setEventMask succeeded
    
    Currently toasterui ignores return value of setEventMask
    command, which created confusing difference between set of
    events set by this command and the real set used in the code.
    
    Checked if setEventMask succeeded. Print error message and
    exit if it's not.
    
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: brian avery <avery.brian@gmail.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

4	2	lib/bb/ui/toasterui.py

commit 8a47d30b2555255fbf6049c5ed69b29664c32b17
Author: Ed Bartosh <ed.bartosh@linux.intel.com>
Date:   2016-03-02 22:47:40 -0800

    command: make setEventMask readonly
    
    Executing setEventMask command when bitbake server is in readonly
    mode causes runCommand to fail with the following error:
     'Not able to execute not readonly commands in readonly mode'
    
    Set readonly attribute for setEventMask command to make it working
    for Toaster UI. This should not do any harm as this command doesn't
    influence cooker state.
    
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: brian avery <avery.brian@gmail.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	0	lib/bb/command.py

commit 16b14ec16049cc2040a60ad5fc95f6e19dda91a6
Author: Ed Bartosh <ed.bartosh@linux.intel.com>
Date:   2016-03-02 22:47:39 -0800

    toasterui: update list of events
    
    Removed events not used in the code from the list.
    Added events that are used in the code.
    
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: brian avery <avery.brian@gmail.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

12	15	lib/bb/ui/toasterui.py

commit 42a2d1115f2b23dc063a3172285ca3be73cf70bb
Author: Ed Bartosh <ed.bartosh@linux.intel.com>
Date:   2016-03-02 22:47:38 -0800

    toasterui: reformat list of events
    
    Reformatted and reordered list of events to make changes
    easily and see them clearly in the diffs.
    
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: brian avery <avery.brian@gmail.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

27	9	lib/bb/ui/toasterui.py

commit 975081eefdd7041a6b4bef6842c1bac9799a1b44
Author: Ed Bartosh <ed.bartosh@linux.intel.com>
Date:   2016-03-02 21:26:56 -0800

    toaster: remove sshbecontroller module
    
    The code of this module is broken for a long time.
    The functionality of it can be easily achieved by running
    'manage.py runbuilds.py' on remote machine.
    
    [YOCTO #8806]
    
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: brian avery <avery.brian@gmail.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

0	169	lib/toaster/bldcontrol/sshbecontroller.py

commit 3ee06eb7e96de5dba539ad52201867e77d06a53e
Author: Ed Bartosh <ed.bartosh@linux.intel.com>
Date:   2016-03-02 21:26:55 -0800

    toaster: don't use sshbecontroller
    
    Removed usage of sshbecontroller from bbcontroller, models, tests
    and database schema.
    
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: brian avery <avery.brian@gmail.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

0	6	lib/toaster/bldcontrol/bbcontroller.py
19	0	lib/toaster/bldcontrol/migrations/0002_auto_20160120_1250.py
0	2	lib/toaster/bldcontrol/models.py
0	24	lib/toaster/bldcontrol/tests.py

commit c243ab6c83fe12d84777e4c3a18fd393827b9327
Author: Ed Bartosh <ed.bartosh@linux.intel.com>
Date:   2016-03-02 21:26:54 -0800

    toaster: raise NotImplementedError
    
    Raised NotImplementedError instead of Exception to be
    able to catch it.
    
    This is a preparation for removing sshbecontroller module.
    It has to be done as code in bldcontrol/tests.py imports custom
    NotImplementedException from sshbecontroller.
    
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: brian avery <avery.brian@gmail.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

5	5	lib/toaster/bldcontrol/bbcontroller.py
6	2	lib/toaster/bldcontrol/models.py
2	4	lib/toaster/bldcontrol/tests.py

commit b8044ce60af3f0b064cfba76c577503cc896e358
Author: Belen Barros Pena <belen.barros.pena@linux.intel.com>
Date:   2016-03-07 12:04:20 +0000

    toaster: bring back the strict directive
    
    This patch e0fd96442a20e3fe7953bf38fc02520cd0dd4d6a removed the
    "use strict" directive from the projectpage.js file by mistake.
    
    This patch makes amends.
    
    Signed-off-by: Belen Barros Pena <belen.barros.pena@linux.intel.com>
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/toaster/toastergui/static/js/projectpage.js

commit 09392f36a4f115c2432302125e8cac48a9aa304f
Author: Belen Barros Pena <belen.barros.pena@linux.intel.com>
Date:   2016-03-07 12:03:34 +0000

    toaster: change 'revision' to 'Git revision'
    
    I've received some feedback on the 'Revision' label we use in the import
    layer page. It is not quite communicating that what's required is a Git
    revision. Changing it to 'Git revision' to make it a bit more specific.
    
    The change applies not only to the import layer page, but to all pages
    showing revision information in the project configuration section.
    
    For more on the feedback received, check
    
    https://bugzilla.yoctoproject.org/show_bug.cgi?id=8429#c3
    
    Signed-off-by: Belen Barros Pena <belen.barros.pena@linux.intel.com>
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	3	lib/toaster/toastergui/tables.py
1	1	lib/toaster/toastergui/templates/base.html
1	1	lib/toaster/toastergui/templates/importlayer.html
1	1	lib/toaster/toastergui/templates/layerdetails.html

commit d3b5f3b7ba4550e7cd03a37ca19ccd2fc0042b2d
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2016-03-07 12:01:48 +0000

    toaster: views api Package info return both kinds of RDEPENDS
    
    As we do with the popover snippet which shows dependencies inline in the
    table also show dependencies which have both TYPE_TRDEPENDS and
    TYPE_RDEPENDS.
    
    Also remove obsolete comment
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

4	5	lib/toaster/toastergui/views.py

commit 6b29d3297de2ae48a3ac5529ba0d22f895276b56
Author: Dave Lerner <dave.lerner@windriver.com>
Date:   2016-03-04 16:41:27 +0000

    toaster: fixup dependency excludes for customimage
    
    [YOCTO #9156]
    
    For a customized image when adding a dependent package X that depends on
    dependency package Y, in addition to adding X to appends_set and Y to
    includes_set, make sure that Y is no longer in the excludes_set. Y may
    have been added to the excludes_set by a prior package removal.
    
    Signed-off-by: Dave Lerner <dave.lerner@windriver.com>
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

7	0	lib/toaster/toastergui/views.py

commit b38975103e52a0c25e9ad9032c8cca1c47cbdcc2
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2016-03-07 17:27:37 +1300

    fetch2/npm: ignore unknown headers in tarballs
    
    Tarballs that are fetched down via npm repositories seem to often have
    unknown headers. This doesn't affect our ability to extract the contents
    though so we don't really care to see those warnings.
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/fetch2/npm.py

commit 7b7a65c44dbdd5ba9366d4e2093f76df8758d546
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2016-03-07 17:27:36 +1300

    fetch2/npm: handle alternative dependency syntax
    
    npm allows you to specify a dependency as a Github username+path, or
    omit the version entirely. You can hit these if you don't use a
    shrinkwrap file, with the result that the code later fails due to the
    output of "npm view" being empty; so handle this lazily by just ignoring
    this part of the dependency if it's not really a version.
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	1	lib/bb/fetch2/npm.py

commit 66a9ee7d54ca9c25209f72da079f260ccdcc872a
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2016-03-07 17:27:35 +1300

    fetch2/npm: fix indentation
    
    No code changes, just fix to use four spaces.
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

22	22	lib/bb/fetch2/npm.py

commit 19507b80f35d37dc4b1614bd390b8e261dd4a2bd
Author: Scott Rifenbark <srifenbark@gmail.com>
Date:   2016-02-23 09:34:56 -0800

    bitbake-user-manual: Added expand() function to list.
    
    Fixes [YOCTO #9147]
    
    Added the d.expand(expression) fuction to the list of functions
    in the "Accessing Datastore Variables Using Python" section.
    
    Signed-off-by: Scott Rifenbark <srifenbark@gmail.com>

4	0	doc/bitbake-user-manual/bitbake-user-manual-metadata.xml

commit 4ebe55cb8c8db1c5cf5d127e213487c5a453a68a
Author: Scott Rifenbark <srifenbark@gmail.com>
Date:   2016-02-23 09:18:08 -0800

    bitbake-user-manual: Added note for Python variable ref expansion.
    
    Fixes [YOCTO #9148]
    
    Added a note about Variable expressions (e.g. ${X}) are no longer
    expanded within Python functions.
    
    Signed-off-by: Scott Rifenbark <srifenbark@gmail.com>

12	0	doc/bitbake-user-manual/bitbake-user-manual-metadata.xml

commit 91cb52b1e77bba9d046239933b5c0513d01e6824
Author: Scott Rifenbark <srifenbark@gmail.com>
Date:   2016-02-23 08:11:27 -0800

    bitbake-user-manual: Enhance environment variable discussion.
    
    Fixes [YOCTO #8567]
    
    Updated the variable list describing the variables that affect
    how environment variables are handled.  Also updated the section
    on how those variables are passed.
    
    Signed-off-by: Scott Rifenbark <srifenbark@gmail.com>

28	9	doc/bitbake-user-manual/bitbake-user-manual-execution.xml
15	11	doc/bitbake-user-manual/bitbake-user-manual-metadata.xml

commit 88fddbe80f56828026bf93560037af52b5dab628
Author: brian avery <avery.brian@gmail.com>
Date:   2016-03-01 11:40:55 +0000

    toaster: cleanup of bin/toaster startup code
    
    This cleanup fixes a few issues:
    
        1) Removes the superflous code to set toasterconf.json
           - this isn't used and referenced meta-yocto
        2) Changes exit to return so we don't surprise the user by exiting their shell
           - this is necessary because it is being sourced
        3) Removes the last references to the old TOASTER_MANAGED variable
           - this is historical and no longer used.
        4) Adds -t parameter to lsof
          - This stops it from dying on odd filesystems and is much
            faster since all we are using are processes anyway
        5) Handles start and stop as params
          - it was easy to confuse the script especially
            if we were calling it with parameters.
          - if start/stop isn't specified, it will still toggle
    
    Signed-off-by: brian avery <avery.brian@gmail.com>
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

17	24	bin/toaster

commit 9fad1d13eed1f725971e6d12d3977cd31e07019a
Author: brian avery <avery.brian@gmail.com>
Date:   2016-02-29 10:49:49 -0800

    ui: remove the puccho ui
    
    This ui does not work in master, nor has it been updated for several years.
    
    [YOCTO #9178]
    
    Signed-off-by: brian avery <avery.brian@gmail.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

0	455	lib/bb/ui/crumbs/buildmanager.py
0	425	lib/bb/ui/puccho.py

commit be2cceea159c6ca9111eff3df87b98513eab6d72
Author: bavery <brian.avery@intel.com>
Date:   2016-02-29 10:26:02 -0800

    hob: removal of hob ui and associated ui files
    
    We've been gearing up the Toaster web UI to replace the Hob (GTK+ based) UI
    for some time now; Hob has basically been on life support for the past few
    releases. As of late last month in master, Toaster has the capability to
    select the packages in an image, removing the last thing that Hob could do
    that Toaster couldn't.
    
    To recap, the reasons why Hob is being removed include:
    
    - The code is tightly woven into BitBake, making it fragile. This means it
    needs significant QA and maintenance on an ongoing basis.
    
    - Some of the implementation is not ideal; we'll be able to remove some cruft
    from BitBake and OE-Core at the same time.
    
    - It's GTK+ 2 based, not the current GTK+ 3.
    
    - Toaster is now a much more capable UI and is being actively maintained
    
    The discussion about removing hob can be found at:
    http://lists.openembedded.org/pipermail/openembedded-architecture/2016-February/000082.html
    
    Signed-off-by: bavery <brian.avery@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

0	437	lib/bb/ui/crumbs/builddetailspage.py
0	1534	lib/bb/ui/crumbs/builder.py
0	341	lib/bb/ui/crumbs/hig/advancedsettingsdialog.py
0	163	lib/bb/ui/crumbs/hig/parsingwarningsdialog.py
0	90	lib/bb/ui/crumbs/hig/proxydetailsdialog.py
0	51	lib/bb/ui/crumbs/hig/retrieveimagedialog.py
0	159	lib/bb/ui/crumbs/hig/saveimagedialog.py
0	891	lib/bb/ui/crumbs/hig/simplesettingsdialog.py
0	645	lib/bb/ui/crumbs/hobeventhandler.py
0	903	lib/bb/ui/crumbs/hoblistmodel.py
0	128	lib/bb/ui/crumbs/hobpages.py
0	561	lib/bb/ui/crumbs/imageconfigurationpage.py
0	705	lib/bb/ui/crumbs/imagedetailspage.py
0	355	lib/bb/ui/crumbs/packageselectionpage.py
0	335	lib/bb/ui/crumbs/recipeselectionpage.py
0	85	lib/bb/ui/crumbs/sanitycheckpage.py
0	109	lib/bb/ui/hob.py

commit b583a40c9086b3587065995d8cee45b7ea36c1b3
Author: Brendan Le Foll <brendan.le.foll@intel.com>
Date:   2016-02-29 16:39:49 +0000

    fetch2/npm: Add missing ParameterError import
    
    Signed-off-by: Brendan Le Foll <brendan.le.foll@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	0	lib/bb/fetch2/npm.py

commit eb53b927ff59aa19cf28bc46beb9f9a185a59990
Author: Brendan Le Foll <brendan.le.foll@intel.com>
Date:   2016-02-29 14:27:43 +0000

    npm: in cases where shrinkwrap resolved a git URL, ignore it and grab dist.tarball
    
    npm-shrinkwrap will sometimes resolve a git URL which instead of a http url, in
    this case go and grab the dist.tarball via npm instead of using the resolved
    URL.
    
    Signed-off-by: Brendan Le Foll <brendan.le.foll@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/fetch2/npm.py

commit b8113a1800687a37a26ac28deafdbafd74cc138e
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2016-02-26 17:36:49 +0000

    fetch2: Fix unpack for absolute file urls
    
    The previous commit breaks absolute pathnames in file:// urls, this
    fixes it.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

4	1	lib/bb/fetch2/__init__.py

commit e659a3b0c2771679057ee3e13cd42e6c62383ff2
Author: Alexander Shashkevich <alex@stunpix.com>
Date:   2016-02-25 18:32:31 +0200

    fetch2: fixes copying of file://dir; subdir=foo, bug 6128 and bug 6129
    
    When in SRC_URI appears file://dir;subdir=foo unpacker copies 'dir' to ${WORKDIR}, not
    ${WORKDIR}/foo as it should be.
    
    These changes are fixing following bugs as well:
    Bug 6128 - Incorrect wildcard unpack behaviour in fetcher
    Bug 6129 - Local directories unpack to a different location than local files
    
    Signed-off-by: Alexander Shashkevich <alex@stunpix.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

24	37	lib/bb/fetch2/__init__.py
4	8	lib/bb/tests/fetch.py

commit 0270b5a3873ed0aeca3a66198c87a6164fb644b8
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2016-02-28 11:56:45 +0000

    fetch2/npm: Enable fetcher
    
    For some reason the enablement piece of the patch went missing, add it.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	0	lib/bb/fetch2/__init__.py

commit 7a6baf02617d1edced4eaff235e73d746e2a3b68
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2016-02-26 17:55:20 +0000

    providers: Fix PREFERRED_VERSION lookup for '_' in PN
    
    PN can contain '_', e.g. gcc-cross-x86_64 and an override cannot
    hence we do this manually rather than use OVERRIDES.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

7	4	lib/bb/providers.py

commit 48e903745db578d9b9b425a8d411c1369df0eb94
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2016-02-26 17:52:14 +0000

    fetch2: Skip lockfiles and donestamps for local files
    
    For local files, there are no races with downloads, we don't need ".done"
    stamps and we don't need lockfiles.
    
    This considerably cleans up DL_DIR and all the pointless ".done" files
    as well as removes stalls over local files with the same name.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

18	4	lib/bb/fetch2/__init__.py
1	0	lib/bb/fetch2/local.py

commit 81158071508cc68c39db7d501370872f44d335cc
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2016-02-26 17:50:37 +0000

    fetch2/__init__.py: Error if lockfile path invalid
    
    Rather than create ".lock" and ".done" files with no name, error,
    forcing us to fix the cases where this is a problem.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

4	1	lib/bb/fetch2/__init__.py

commit 83203cd2e677706e0111892a7843b83263cb8bd9
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2016-02-26 17:49:33 +0000

    fetch2/__init__: Fix decodeurl to better handle urls without paths
    
    If we specify urls such as npm://somehost;someparams the fetcher currently
    does a poor job of handling mirrors of these urls due to deficiencies in the
    way decodeurl works. This is because "somehost" is returned as a path, not
    a host.
    
    This tweaks the code so that unless its a file url, the host is returned
    correctly.
    
    This patch also adds test cases for these urls to the exist set of test
    urls.
    
    We need to tweak the URI() class since this thinks this is a relative url
    which is clearly isn't. We also need to handle the fact that encodeurl will
    error if passed a url of this form (it would want the path to be '/'.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

5	2	lib/bb/fetch2/__init__.py
40	2	lib/bb/tests/fetch.py

commit 20bc82086018832e047345a672d74b6c1c113650
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2016-02-26 17:48:55 +0000

    fetch2/wget: Set localfile for directories
    
    If we wget something which looks directory like we end up with lock files
    and done stamps without names, they also all use the same lockfile.
    
    This change ensures that we use separate lock files based on the url
    and avoid creating the mysterious ${DL_DIR}/.done files.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	0	lib/bb/fetch2/wget.py

commit 3c5ac2ddfb3f5ecd3f3218de0d6564e5f3842b98
Author: Belen Barros Pena <belen.barros.pena@intel.com>
Date:   2016-02-25 14:26:54 +0000

    toaster: change 'delete layer' to 'remove layer'
    
    I have received quite a few complaints about the use of the word
    'delete' for layer removal, so change it to 'remove'. That also matches
    the language we use for packages in image customisation.
    
    [YOCTO #9165]
    
    Signed-off-by: Belen Barros Pena <belen.barros.pena@intel.com>
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/toaster/toastergui/static/js/layerBtn.js
1	1	lib/toaster/toastergui/static/js/layerdetails.js
1	1	lib/toaster/toastergui/static/js/libtoaster.js
3	3	lib/toaster/toastergui/static/js/projectpage.js
2	2	lib/toaster/toastergui/tables.py
1	1	lib/toaster/toastergui/templates/layer_btn.html
1	1	lib/toaster/toastergui/templates/layerdetails.html

commit 865a2015e86a1bc5cc7d63308f27c292d1ca98eb
Author: Belen Barros Pena <belen.barros.pena@intel.com>
Date:   2016-02-25 14:25:55 +0000

    toaster: rename 'run again' button
    
    I quite dislike the 'Run again' label we use in the button that rebuilds
    things. Changing it to 'Rebuild', which is shorter and more specific.
    
    Signed-off-by: Belen Barros Pena <belen.barros.pena@intel.com>
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/toaster/toastergui/templates/mrb_section.html
1	1	lib/toaster/toastergui/tests.py

commit da233005eb8cfa7842cd1a768c16e42aaaa55fad
Author: Dave Lerner <dave.lerner@windriver.com>
Date:   2016-02-25 14:24:49 +0000

    toaster: fix banner after customimage package add
    
    Correct formatting of the banner message after adding a package to a
    custom image.
    
    [YOCTO #9101]
    
    Signed-off-by: Dave Lerner <dave.lerner@windriver.com>
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

5	2	lib/toaster/toastergui/static/js/customrecipe.js

commit 5545acf6703a25ee46776138bbbd804615add89c
Author: Belen Barros Pena <belen.barros.pena@intel.com>
Date:   2016-02-24 13:49:38 +0000

    toaster: custom breadcrumb for the default project
    
    The default "Command line builds" project does not have a Configuration
    page. It therefore needs a custom breadcrumb where the project name goes
    to the project builds page, instead of the project configuration page.
    
    Signed-off-by: Belen Barros Pena <belen.barros.pena@intel.com>
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

5	2	lib/toaster/toastergui/templates/basebuilddetailpage.html
5	2	lib/toaster/toastergui/templates/basebuildpage.html

commit 004003daf6bd0f0233ce5c2d95f1d7d64ab91bb3
Author: Haris Okanovic <haris.okanovic@ni.com>
Date:   2016-02-23 11:36:33 -0600

    prserv: Add dump_db()
    
    Returns a script (string) that reconstructs the state of the
    entire database at the time this function is called. The script
    language is defined by the backing database engine, which is a
    function of server configuration.
    Returns None if the database engine does not support dumping to
    script or if some other error is encountered in processing.
    
    The SQLite3 implementation in db.py calls iterdump() [1] to generate
    a script. iterdump() is the library equivalent of the `sqlite3 .dump`
    shell command, and the scripts are compatible. Execute the script in
    an empty SQLite3 database using the sqlite3 utility to restore a backup
    of prserv.
    
    Use case: Backup a live PR server database in a non-racy way, such
    that one could snapshot the entire database after a set of bitbake
    builds all using a shared server. I.e. All changes made prior to
    the start of a dump_db() operation should be committed and captured
    in the script. Subsequent changes made during the backup process are
    not guaranteed to be captured.
    
    Testing: ~7MB database backs up in ~1s while PR server is under load
    from 32 thread bitbake builds on two separate machines.
    
    [1] https://docs.python.org/2/library/sqlite3.html#sqlite3.Connection.iterdump
    
    Signed-off-by: Haris Okanovic <haris.okanovic@ni.com>
    Reviewed-by: Ken Sharp <ken.sharp@ni.com>
    Reviewed-by: Bill Pittman <bill.pittman@ni.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

8	0	lib/prserv/db.py
25	0	lib/prserv/serv.py

commit 18a93b360301a5497d5c8ef74ab71f374f2ad210
Author: Dave Lerner <dave.lerner@windriver.com>
Date:   2016-02-23 12:34:45 +0000

    toaster: remove custom images from Image Recipes
    
    Fix the view of 'Image Recipes' under 'Configuration' to only show
    image recipes that are not customised since custom images have their
    own page.
    
    [YOCTO #9111]
    
    Signed-off-by: Dave Lerner <dave.lerner@windriver.com>
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

4	1	lib/toaster/toastergui/tables.py

commit 8084dcdc283b4dc170f066c202f89d56ce1abbef
Author: Elliot Smith <elliot.smith@intel.com>
Date:   2016-02-23 12:17:04 +0000

    toaster: show suffix for image files and basename for artifact files
    
    The build dashboard doesn't show image and artifact files correctly,
    as it shows the full filename for images and the filename plus
    path relative to DEPLOY_DIR for artifacts.
    
    Instead, show just the suffix for image files, and the basename
    for artifact files.
    
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

8	0	lib/toaster/orm/models.py
11	11	lib/toaster/toastergui/templates/builddashboard.html
6	1	lib/toaster/toastergui/views.py

commit a481af693bfef0171732c18c298e285986b82de3
Author: Belen Barros Pena <belen.barros.pena@intel.com>
Date:   2016-02-22 09:08:40 +0000

    toaster: add missing link to image recipe details
    
    In the 'New custom image' page, each image recipe name listed should
    link to the corresponding image recipe details page, so that users can
    look into what packages are installed by a certain image, and decide
    based on that if they want to customise it or not.
    
    This patch adds that missing link.
    
    Signed-off-by: Belen Barros Pena <belen.barros.pena@intel.com>
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

7	0	lib/toaster/toastergui/tables.py

commit 7833fab2e03f2d9a01ab9ad0a13c190382098b5e
Author: Belen Barros Pena <belen.barros.pena@intel.com>
Date:   2016-02-22 09:08:39 +0000

    toaster: adjust the search field width
    
    The search field at the top of our tables was using one of the Bootstrap
    classes for text field sizing. Those classes are a bit rigid, resulting
    in text fields too wide that made other table controls wrap.
    
    Setting a maximum width to the search form using one of the span classes,
    combined with a % width css declaration, make for text fields that
    adapt a bit better to the horizontal space available in each table.
    
    Signed-off-by: Belen Barros Pena <belen.barros.pena@intel.com>
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	0	lib/toaster/toastergui/static/css/default.css
2	2	lib/toaster/toastergui/templates/basetable_top.html
2	2	lib/toaster/toastergui/templates/toastertable.html

commit ccb90019489c2c324c2a5a60295e02280a2ec18f
Author: Belen Barros Pena <belen.barros.pena@intel.com>
Date:   2016-02-22 09:08:38 +0000

    toaster: make 'configuration' the first tab
    
    Our project pages have 4 tabs: builds, configuration, import layer and
    new custom image. Even though we treat the 'configuration' as the
    default tab, it comes second after the builds tab.
    
    That's a bit strange: the default tab should be the first one listed.
    This patch changes the tab order to put 'configuration' first.
    
    Signed-off-by: Belen Barros Pena <belen.barros.pena@intel.com>
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

5	5	lib/toaster/toastergui/templates/projecttopbar.html

commit 9910f3f292d35fc91215d550c5f123dcf18ab35d
Author: Belen Barros Pena <belen.barros.pena@intel.com>
Date:   2016-02-22 09:08:37 +0000

    toaster: link to configuration in all breadcrumbs
    
    The existing breadcrumb does not always provide a link to the project
    configuration page. When you are in the build history pages, you must go
    back to the builds information first, and from there access the project
    configuration. That feels very long.
    
    Change the breadcrumb so that the project name item always provides a
    link to the project configuration.
    
    Signed-off-by: Belen Barros Pena <belen.barros.pena@intel.com>
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

0	1	lib/toaster/toastergui/static/css/default.css
0	15	lib/toaster/toastergui/static/js/layerdetails.js
2	2	lib/toaster/toastergui/templates/basebuilddetailpage.html
2	2	lib/toaster/toastergui/templates/basebuildpage.html
1	3	lib/toaster/toastergui/templates/layerdetails.html
1	4	lib/toaster/toastergui/templates/recipedetails.html

commit e36001d61768979d66cba0f3d4f5a2aaf4af2cb7
Author: Belen Barros Pena <belen.barros.pena@intel.com>
Date:   2016-02-22 09:08:36 +0000

    toaster: reduce max height of modal dialogs
    
    Now that we use modal dialogs to display dependency information for
    packages, we are hitting their maximum height relatively often. It is set
    by default to 400px, which makes it a bit tight at a 1280x800 viewport
    size.
    
    Reduce the maximum height to 300px to make things a bit more
    comfortable.
    
    Signed-off-by: Belen Barros Pena <belen.barros.pena@intel.com>
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	0	lib/toaster/toastergui/static/css/default.css

commit 63705f60035884a810fdd36e5a3fe10e411f23c7
Author: Belen Barros Pena <belen.barros.pena@intel.com>
Date:   2016-02-22 09:08:35 +0000

    toaster: disable add layer button on click
    
    The 'add layer' button in the project configuration page remains enabled
    after you add a layer. If you click it again, the same layer you just
    added is added again.
    
    This patch disables the 'add layer' button on click, to avoid this bit
    of weirdness.
    
    [YOCTO #8905]
    
    Signed-off-by: Belen Barros Pena <belen.barros.pena@intel.com>
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	0	lib/toaster/toastergui/static/js/projectpage.js

commit df342e7662179410467c47cd870180ea75f863d4
Author: Belen Barros Pena <belen.barros.pena@intel.com>
Date:   2016-02-22 09:08:34 +0000

    toaster: apply error class to name field
    
    The form for naming new custom images shows you an error message when
    the name already exists or you include an invalid character in it. But
    when an error appears, the input field was missing the red highlight.
    
    This patch applies the right class to the form controls whenever an
    error message is shown.
    
    Signed-off-by: Belen Barros Pena <belen.barros.pena@intel.com>
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	0	lib/toaster/toastergui/static/js/newcustomimage_modal.js

commit 9df802182b0b96295b148a1681c2265e72d8306b
Author: Belen Barros Pena <belen.barros.pena@intel.com>
Date:   2016-02-22 09:08:33 +0000

    toaster: fix custom image name form
    
    The placeholder text in the form where you name your new custom images
    didn't display fully. This patch fixes the styles so that the text shows
    properly. It also changes the text itself to make it a bit shorter.
    
    [YOCTO #9122]
    
    Signed-off-by: Belen Barros Pena <belen.barros.pena@intel.com>
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/toaster/toastergui/static/css/default.css
1	1	lib/toaster/toastergui/templates/newcustomimage_modal.html

commit 3a8c6f7155517cd61a160595b81e7bed84ba4eaf
Author: Belen Barros Pena <belen.barros.pena@intel.com>
Date:   2016-02-22 09:08:32 +0000

    toaster: comment out project release change
    
    Although the support for building more than one release and how we
    handle the build directories is the subject of lively discussion, we all
    seem to agree on removing the ability to change the release of a
    project. The feature is currently not working but exposed to users,
    which is not a happy state of affairs.
    
    This patch comments out the controls that give access to the release
    changing functionality to hide them from users, but does not touch
    anything else. Once all moving pieces start to settle down, we can make
    a final decision regarding this feature, and clean up the code
    accordingly.
    
    [YOCTO #8917]
    
    Signed-off-by: Belen Barros Pena <belen.barros.pena@intel.com>
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

14	5	lib/toaster/toastergui/templates/project.html

commit bff46c614d3f9cc18a1c8908c47842712e0e3a8c
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2016-02-25 15:07:08 +0000

    fetch2/npm: Add mirroring support for npm fetcher
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

30	1	lib/bb/fetch2/npm.py

commit dec75bbc5d075acb322dad8b1c40d6bd518dc9fd
Author: Brendan Le Foll <brendan.le.foll@intel.com>
Date:   2016-02-25 15:40:13 +0000

    fetch2/npm: Add npm fetcher
    
    npm fetcher with support for shrinkwrap files and lockdown files to easily
    download and install an npm package with strict dependency resolution.
    
    The SRC_URI should be in the format of:
    SRC_URI = "npm://registry.npmjs.org/;name=${PN};version=${PV}"
    
    To add a shrinkwrap and lockdown file use:
    NPM_SHRINKWRAP := "${THISDIR}/${PN}/npm-shrinkwrap.json"
    NPM_LOCKDOWN := "${THISDIR}/${PN}/lockdown.json"
    
    Signed-off-by: Brendan Le Foll <brendan.le.foll@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

226	0	lib/bb/fetch2/npm.py

commit fd5d9011f6dd7029895b64d8a02d33185b9aa8ae
Author: Brendan Le Foll <brendan.le.foll@intel.com>
Date:   2016-02-25 15:07:06 +0000

    utils.py: Add sha1_file call
    
    This is useful as npm-lockdown uses sha1 because npm releases the sha1 of
    packages and whilst this is undocumented it seems no other algorithm is
    supported
    
    Signed-off-by: Brendan Le Foll <brendan.le.foll@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

15	0	lib/bb/utils.py

commit 932a92b8130d4815656dc885f0c6e4afa4502022
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2016-02-18 21:21:52 -0800

    toaster: toastergui Fix invalid char test and implementation
    
    This test was passing but because the assertion was the wrong way round
    and should have expected the first one to pass and second one to fail,
    in reality both were failing as the method for checking the invalid char
    was incorrect.
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: brian avery <avery.brian@gmail.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/toaster/toastergui/tests.py
5	2	lib/toaster/toastergui/views.py

commit be7dca6c7607c0d13151c2d3f7ad7adcdf365076
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2016-02-18 21:21:51 -0800

    toaster: PackagesTable show only installed packages
    
    When showing the package list for the image recipe details only show the
    packages which are installed in the image rather than all the packages
    which are produced.
    
    [YOCTO #9108]
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: brian avery <avery.brian@gmail.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	1	lib/toaster/toastergui/tables.py

commit 8a653ad8b075892d24d15696b3070c5a28a4fbe2
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2016-02-18 21:21:50 -0800

    toaster: toastergui unit tests convert to use fixtures
    
    Instead of having to manually write up in the setUp function all the
    different objects to create in the database, just specifiy them in a
    fixture and load it. This has the advantage that it can be used on a
    live server by using the ./manage.py loaddata command and can then
    be inspected.
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: brian avery <avery.brian@gmail.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

446	0	lib/toaster/toastergui/fixtures/toastergui-unittest-data.xml
42	213	lib/toaster/toastergui/tests.py

commit 1688608b537d8de840c6d1e4802ae41ca872e5bf
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2016-02-18 21:21:49 -0800

    toaster: SoftwareRecipesTable apply default order_by
    
    Make sure the default orderby for the SoftwareRecipesTable is applied
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: brian avery <avery.brian@gmail.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	0	lib/toaster/toastergui/tables.py

commit 19bd63fc3a28dcbd0f531a5b06a037da34568bac
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2016-02-18 21:21:48 -0800

    toaster: orm migrations Sort out migrations mess
    
    We messed up the migrations by squashing some of the image
    customisation model definitions into the initial migration which
    has meant some irreversible operations on mysql took place.
    This deletes, re-orders and fixes the migrations.
    
    If your schema is up to date you may want to use ./manage migrate
    with --fake or --fake-initial to avoid re-applying migrations.
    
    [YOCTO #9116]
    
    Signed-off-by: brian avery <avery.brian@gmail.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

0	26	lib/toaster/orm/migrations/0001_initial.py
0	41	lib/toaster/orm/migrations/0002_auto_20151210_1209.py
24	0	lib/toaster/orm/migrations/0002_customimagerecipe.py
1	1	lib/toaster/orm/migrations/0003_customimagepackage.py
0	15	lib/toaster/orm/migrations/0004_merge.py
1	1	lib/toaster/orm/migrations/{0002_auto_20151223_1528.py => 0004_provides.py}
0	19	lib/toaster/orm/migrations/0005_auto_20160118_1055.py
0	19	lib/toaster/orm/migrations/0006_customimagerecipe_last_updated.py

commit aa3faebdf6af66ab34f74d328b2113de0b08c7ee
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2016-02-02 23:55:37 +0000

    data_smart: Drop default expand=False to getVarFlag [API change]
    
    At some point in the future, getVarFlag should expand by default. To
    get there from the current position, we need a period of time where the
    expand parameter is mandatory.
    
    This patch starts that process. Clear errors will result from any code
    which doesn't provide this. Layers can be fixed with an expression
    like:
    
    sed -e 's:\(\.getVarFlag([^,()]*, [^,()]*\)):\1, False):g' -i `grep -ril getVar *`
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/data_smart.py

commit fab717d303df0bcef737661f6917f275f35215a4
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2016-02-02 23:55:40 +0000

    data_smart: Drop default expand=False to getVar [API change]
    
    At some point in the future, getVar should expand by default. To get
    there from the current position, we need a period of time where the
    expand parameter is mandatory.
    
    This patch starts that process. Clear errors will result from any code
    which doesn't provide this. Layers can be fixed with an expression
    like:
    
    sed -e 's:\(\.getVar([^,()]*\)):\1, False):g' -i `grep -ril getVar *`
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/data_smart.py

commit a965b390d6240e279c190b92b17c0573e9bd604c
Author: Markus Lehtonen <markus.lehtonen@linux.intel.com>
Date:   2016-01-26 15:34:32 +0200

    SignatureGeneratorBasic: make checksum cache file configurable
    
    Define a new bitbake configuration variable BB_HASH_CHECKSUM_CACHE_FILE
    that can be used to define the cache file to use for file checksum
    cache.
    
    Signed-off-by: Markus Lehtonen <markus.lehtonen@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

17	3	lib/bb/siggen.py

commit 2602a312818f564961de7dfa63c429d45ff9e5ac
Author: Markus Lehtonen <markus.lehtonen@linux.intel.com>
Date:   2016-01-26 15:34:31 +0200

    MultiProcessCache: make cache filename configurable
    
    If no cache file name is given a default from class variable is used,
    like before.
    
    Signed-off-by: Markus Lehtonen <markus.lehtonen@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	2	lib/bb/cache.py

commit 4f60933283f377d68f191db849dac6c1dc7a0aed
Author: Markus Lehtonen <markus.lehtonen@linux.intel.com>
Date:   2016-01-26 15:34:30 +0200

    FileChecksumCache: add get_checksums() method
    
    Move the local file checksum functionality from bb.fetch2 into
    bb.checksum module.
    
    Signed-off-by: Markus Lehtonen <markus.lehtonen@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

47	0	lib/bb/checksum.py
1	44	lib/bb/fetch2/__init__.py

commit 5ac9cbf405841ed3f65e6f99a3cee032567fb182
Author: Markus Lehtonen <markus.lehtonen@linux.intel.com>
Date:   2016-01-26 15:34:29 +0200

    bb/runqueue: save task file dependency cache onto disk
    
    Before this patch the usage of cache was quite useless as the file
    checksums were not actually cached on disk but re-calculated every time.
    This patch utilises the new writeout_file_checksum_cache() method of the
    SignatureGenerator class to do the job.
    
    Signed-off-by: Markus Lehtonen <markus.lehtonen@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	0	lib/bb/runqueue.py

commit ecdabd321d48fa367b89ebffc00aa525b6eaa95c
Author: Markus Lehtonen <markus.lehtonen@linux.intel.com>
Date:   2016-01-26 15:34:28 +0200

    SignatureGenerator: add method for saving the file checksum cache
    
    Extend the API in order to be able to write out the file checksum cache
    onto disk. SignatureGeneratorBasic class now implements a method that
    update the fetcher local files checksum cache with the task file
    dependency checksums.
    
    Signed-off-by: Markus Lehtonen <markus.lehtonen@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

9	0	lib/bb/siggen.py

commit 81bc1f20662c39ee8db1da45b1e8c7eb64abacf3
Author: Markus Lehtonen <markus.lehtonen@linux.intel.com>
Date:   2016-01-26 15:34:27 +0200

    bb/cache: drop some unused arguments
    
    Drop unused 'd' argument from the cache save methods, simplifying the
    API.
    
    Signed-off-by: Markus Lehtonen <markus.lehtonen@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	2	lib/bb/cache.py
4	4	lib/bb/codeparser.py
4	4	lib/bb/cooker.py
5	5	lib/bb/fetch2/__init__.py

commit cc4cfc2370297b8feb2dc39d4262e73adf06c09a
Author: Mirela Rabulea <mirela.rabulea@nxp.com>
Date:   2016-01-19 16:31:38 +0200

    Allow Hob to run images on a custom simulator, other than qemu
    
    The current behavior of Hob is that there is a "Run Image" button which becomes visible only for qemu images.
    
    My suggested change is:
    - if an image is selected and it is qemu-compatible, let the "Run image" button be named "Run qemu image"
    - if an image is selected and it is not qemu-compatible, let the same button show up with the name "Run custom image", and besides that, an option shows-up to allow the selection of the custom script (by default it points out to runqemu script) to be used for launching this custom image
    
    Note: in case there is more than one toggled image (qemu runnable or deployable), when the user clicks the "Run custom image" button, a dialog will be presented, allowing to choose between any of the existing images.
    
    [YOCTO #8940]
    
    Signed-off-by: Mirela Rabulea <mirela.rabulea@nxp.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

59	0	lib/bb/ui/crumbs/builder.py
54	18	lib/bb/ui/crumbs/imagedetailspage.py

commit 792b759e59e31d2e43d525a6e50d866b4f51f072
Author: Christopher Larson <chris_larson@mentor.com>
Date:   2016-02-11 17:13:36 -0700

    bb.ui.knotty: prefix task messages with recipe/task
    
    An example prefix: `perl-5.22.1-r0 do_compile:`
    
    Signed-off-by: Christopher Larson <chris_larson@mentor.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

13	5	lib/bb/ui/knotty.py

commit 7946927156dec33364418988eb921ddb273660eb
Author: Christopher Larson <chris_larson@mentor.com>
Date:   2016-02-11 17:13:23 -0700

    Move bb.{debug,note,..} into their own logging domain
    
    This lets us filter and use -l to show messages from that source specifically.
    
    Signed-off-by: Christopher Larson <chris_larson@mentor.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

9	7	lib/bb/__init__.py

commit e5dd50e0d95d532fe31dde61f8c6b1a7a72321e9
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2016-02-14 23:09:49 +0000

    knotty: Set exit failure code on runQueueTaskFailed events
    
    If the worker segfaults, we may never see a TaskFailed event from it, only
    a runQueueTaskFailed event. In this case, return_value isn't getting set
    leading to an incorrect exit code from bitbake. Fix by setting return_value
    in both places.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	0	lib/bb/ui/knotty.py

commit 90a4805e4e770a433b4394ea99792731e9a4b546
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2016-02-14 10:14:22 +0000

    taskdata: Fix traceback issue with missing provider
    
    If there is a missing provider and we're using "-k" mode alongside "-w",
    we could get a traceback since there was no provider. Add tests to avoid this.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	1	lib/bb/taskdata.py

commit 3f507ff8bc467fba936cf3f31bb8ea8e02f168e8
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2016-02-14 09:11:24 +0000

    cooker: Improve cache handling
    
    We're seeing issues where the self test, which uses tinfoil doesn't
    notice the changed contents of include files. The issue is
    cached_statements in the parser being reused when the files have changed.
    
    Whilst looking at this, I realised there were some other issues:
    
    * We need to also invalidate the mtime cache when cooker restarts
    * We should pass full filenames to the file invalidation code
    * We should process cached_statements as part of inotify invalidation
    
    With these fixes, the caching is more reliable for memory resident
    bitbake too. It does raise some questions about cache validation and
    lifecycles and indicates bitbake does need more work in the area,
    preferably with the removal of the globals. This at least highlights
    and works around some of the current issues.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

10	4	lib/bb/cooker.py

commit da1107a2c2331b3335c7bd46821edcb1933a0ff8
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2016-02-12 13:42:37 +0000

    Bump version post release to 1.29.0
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	bin/bitbake
1	1	lib/bb/__init__.py

commit f67307977e8f089ce6d208d3e9de2a6a1768757e
Author: Ed Bartosh <ed.bartosh@linux.intel.com>
Date:   2016-02-11 12:37:08 +0200

    cooker: gracefully shutdown parsers
    
    CookerParser.shutdown code doesn't do all required work to shutdown
    parser processes. As a result bitbake hangs if interrupted during
    parsing. Putting None into the parser_quit queue should fix this issue
    as it makes parsers to quit main loop.
    
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	0	lib/bb/cooker.py

commit 4a6a8d0074f62208d843b06344be31ae73d9b745
Author: Elliot Smith <elliot.smith@intel.com>
Date:   2016-02-10 18:34:10 +0000

    buildinfohelper: unset brbe variable when build finishes
    
    The brbe variable is set on the bitbake server when the Toaster
    UI starts. This enables Toaster to associate events with the
    correct build and build environment.
    
    However, the brbe variable is also used when a build starts to
    identify whether a new build needs to be created, or an existing
    one looked up. This causes a bug for command-line builds which
    happen after a Toaster-triggered build: because the brbe variable
    is never unset on the server or the buildinfohelper, the new
    command-line build events are treated as originating from the
    previous build.
    
    Ensure the brbe variable is reset when the buildinfohelper "closes"
    a build, so that each build then either sets the brbe variable
    (Toaster-triggered builds) or leaves it blank (command-line builds).
    
    Also modify the localhostbecontroller so that the brbe variable
    is not set on the server and not looked up from the server. This
    ensures that it is only set when the triggerBuild() method is
    called, and that it remains as None for command-line builds.
    
    [YOCTO #9021]
    
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

12	7	lib/bb/ui/buildinfohelper.py
7	2	lib/toaster/bldcontrol/localhostbecontroller.py

commit fae153095d23157dd7e72c29f683f86149ee33a8
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2016-02-09 15:08:42 +0000

    build: Improve python execution tracebacks
    
    If something fails in a exec_func_python() the current stack trace shows
    incorrect filenames and linenumbers. For example:
    
    The stack trace of python calls that resulted in this exception/failure was:
    File: '/media/build1/poky/meta/recipes-sato/images/core-image-sato.bb', lineno: 200, function: <module>
         0196:                chksum = bb.utils.sha256_file(fn)
         0197:                f.write('%s\t%s\n' % (chksum, os.path.relpath(fn, baseoutpath)))
         0198:
         0199:
     *** 0200:copy_buildsystem(d)
         0201:
    File: '/media/build1/poky/meta/recipes-sato/images/core-image-sato.bb', lineno: 9, function: copy_buildsystem
         0005:IMAGE_FEATURES += "splash package-management x11-base x11-sato ssh-server-dropbear hwcodecs"
         0006:
         0007:LICENSE = "MIT"
         0008:
     *** 0009:inherit core-image
         0010:
         0011:IMAGE_INSTALL += "packagegroup-core-x11-sato-games"
    File: '/usr/lib/python2.7/subprocess.py', lineno: 535, function: check_call
         0531:    The arguments are the same as for the Popen constructor.  Example:
         0532:
         0533:    check_call(["ls", "-l"])
         0534:    """
     *** 0535:    retcode = call(*popenargs, **kwargs)
         0536:    if retcode:
         0537:        cmd = kwargs.get("args")
         0538:        if cmd is None:
         0539:            cmd = popenargs[0]
    
    The problem is the use of "FILE" to obtain the current filename. Instead,
    we therefore inject the function being executed into the methodpool which
    allows us to correct its linenumber and filename information. We can then
    clearly mark the initial piece as autogenerated and the rest of the linenumber
    and filename information should be correct. Afterwards the trace starts:
    
    The stack trace of python calls that resulted in this exception/failure was:
    File: 'exec_python_func() autogenerated', lineno: 2, function: <module>
         0001:
     *** 0002:copy_buildsystem(d)
         0003:
    File: '/media/build1/poky/meta/classes/populate_sdk_ext.bbclass', lineno: 66, function: copy_buildsystem
         0062:    import glob
         0063:    import oe.copy_buildsystem
         0064:    import subprocess
         0065:
     *** 0066:    subprocess.check_call("foo")
         0067:
         0068:    oe_init_env_script = d.getVar('OE_INIT_ENV_SCRIPT', True)
         0069:
         0070:    conf_bbpath = ''
    File: '/usr/lib/python2.7/subprocess.py', lineno: 535, function: check_call
         0531:    The arguments are the same as for the Popen constructor.  Example:
         0532:
         0533:    check_call(["ls", "-l"])
         0534:    """
     *** 0535:    retcode = call(*popenargs, **kwargs)
         0536:    if retcode:
         0537:        cmd = kwargs.get("args")
         0538:        if cmd is None:
         0539:            cmd = popenargs[0]
    
    We can't inject into methodpool at parsing time, since there may be
    _append or other override operations against the function before its
    execution.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

8	7	lib/bb/build.py

commit 8bf33a8e92c0e188fa392030025756196c96fcbb
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2016-02-02 14:07:58 +0000

    build/data: Don't expand python functions before execution [API change]
    
    Right now, if you have some python code like:
    
    X = "a"
    
    def somefunction(d):
        d.setVar("X", "b")
        d.setVar("Y", "${X}")
    
    then any sane person would expect that Y = "b" at the end of the
    function. This is not the case, Y = "a".
    
    This is due to the python function being expanded before execution, the
    executed code would read d.setVar("Y", "a"). This understandably
    confuses people, it also makes it near impossible to write ${} in a
    python function without unintended things happening.
    
    I think there is general agreement we should fix this and standardise
    on non-expansion of python functions. We already don't expand anonymous
    python (mostly).
    
    I've checked OE-Core with buildhistory before and after this change and
    there were a small number of issues this exposed which I've sent
    patches for.
    
    I propose we default to not expanding python code and then deal with
    any consequences from that if/as/where identified. This will improve
    new user understanding and usability of the system, it also allows
    several long standing weird expansion issues to be fixed.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/build.py
1	1	lib/bb/cooker.py
3	3	lib/bb/data.py

commit 3f5520b4844a4bdd615046479ba08ed192bdc8cd
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2016-02-02 13:59:52 +0000

    cooker: Don't expand python functions in variable dumps
    
    We don't want to expand python functions since they aren't expanded
    at execution time (e.g. anonymous python). They can also have side
    effects.
    
    This function is primarily used by toaster for variable dumps for later
    display. The lack of expansion of python functions won't matter in this case
    and actively helps some variable handling (e.g. SRCPV).
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

9	2	lib/bb/cooker.py

commit 765a2480dbe288f64562a9611dd93b6b6dd0a64e
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2016-02-02 13:58:17 +0000

    data: Don't expand python functions for variable dependencies
    
    Expanding python functions for variable dependencies doesn't really make sense,
    not least since this causes execution of any inline python, it also makes it
    impossible to write expressions like d.expand("${X}") of d.setVar("X", "${Y}")
    which may have the wrong values if expanded now.
    
    This starts to standardise the approach across bitbake for handling python code.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

6	6	lib/bb/data.py

commit 5f10987edda35b08970a6dd6ccf9febad271ce3e
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2016-02-02 13:55:08 +0000

    data_smart: Avoid expanding anonymous python functions
    
    We don't expand anonymous python before execution, so nor should
    we do this when calculating checksums for them.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/data_smart.py

commit 25c531915b6f8f79a0822996ceb97f90483e359f
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2016-02-10 11:51:44 +0000

    toaster: models Remove manual transaction control from lsupdates
    
    Revert "toaster: models.py do not use transactions".
    This reverts commit e248a503ba84658dea086e65e9cde8b845b9c0ed
    (Bitbake rev: 48d0d510816346073f135bb86fb7904fdb50bb27)
    
    Manually managing the database transactions caused more
    problems than it temporarily solved so we return control back to
    Django's orm.
    
    [YOCTO #8796]
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	22	lib/toaster/orm/models.py

commit 3b8747d0af4b9164e973940ed97751c951e74110
Author: Belen Barros Pena <belen.barros.pena@intel.com>
Date:   2016-02-10 00:05:07 +0000

    toaster: build section Improve display of builds when > 1 targets
    
    * Display always the first target in alphabetical order to match what we
    do in the breadcrumbs and the build dashboard heading
    
    * Remove the extra space between the '+' and the additional number of
    targets
    
    * Make sure the tooltip with the full target list takes the Bootstrap
    tooltip styles
    
    * Replace the word 'targets' in the tooltip with 'recipes', since that's
    how we call build targets everywhere else in Toaster
    
    Signed-off-by: Belen Barros Pena <belen.barros.pena@intel.com>
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

6	2	lib/toaster/toastergui/static/js/libtoaster.js
6	5	lib/toaster/toastergui/templates/mrb_section.html

commit 9cdbb543311b6f4a8a88c27fc157d998242444ee
Author: Belen Barros Pena <belen.barros.pena@intel.com>
Date:   2016-02-10 00:05:06 +0000

    toaster: templates make build data breadcrumb consistent
    
    The pages in the build data section of Toaster showed different
    breadcrumbs: in some pages the machine was displayed, but not in others.
    For builds with more than one target, some pages showed the first
    alphabetical target (the correct behaviour), others didn't.
    
    This patch removes the inconsistencies, showing exactly the same
    breacrumb across all pages in the section.
    
    The patch also removes the extra space between the '+' and the number of
    targets when the builds have more than one target.
    
    Remove an unneeded debug message
    
    Signed-off-by: Belen Barros Pena <belen.barros.pena@intel.com>
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/toaster/toastergui/templates/basebuilddetailpage.html
1	2	lib/toaster/toastergui/templates/basebuildpage.html
1	2	lib/toaster/toastergui/templates/builddashboard.html

commit 391aa4afc91be90d8d3ee47e1bf797d6ebe61a71
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2016-02-09 15:10:56 +0000

    BBHandler/ast: Merge handMethod and handleMethodFlags
    
    The functionality overlap between these two functions is significant and
    its clearer to handle both things together since they are intimately
    linked. There should be no behaviour change, just clearer code.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

15	28	lib/bb/parse/ast.py
2	3	lib/bb/parse/parse_py/BBHandler.py

commit 918bec86bc8ee94feb82380ff410d9fdcbe9e720
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2016-02-09 15:09:45 +0000

    utils: Drop datastore function inspection during exception
    
    When we use functions from the data store, they now have correct line number
    and filename information. This function would attempt to correct line numbers
    which doesn't need correcting, leading to misleading messages to the user.
    Therefore remove this code as being obsoleted.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

0	9	lib/bb/utils.py

commit 86e78e0ca7aa5452411f35239942ecee3d8824ec
Author: Schroeder, Henning <henning.schroeder@intel.com>
Date:   2016-02-08 15:07:14 +0000

    cooker: extended dot styling
    
    Extended the dot styling of dependencies created by bitbake -g in dot syntax to differentiate between the various kinds.
      depends: solid
      rdepends: dashed
      rrecommends: dotted
    
    The change observed is that depends get an explicit style which is the same as dot default behavior and the runtime recommends get
    dotted while before they were dashed. This helps to distinguish them graphically as well as eases post processing by script.
    
    Signed-off-by: Henning Schroeder <henning.schroeder@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	3	lib/bb/cooker.py

commit 2e9c86229b8f924a5b62987f4b166f63392f12e8
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2016-02-08 17:41:24 +0000

    toaster: Enable Image Customisation feature
    
    Remove environment variable to toggle Image customisation feature
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: brian avery <avery.brian@gmail.com>

0	2	lib/toaster/toastergui/templates/baseprojectpage.html
0	2	lib/toaster/toastergui/templates/projecttopbar.html
0	1	lib/toaster/toastergui/views.py
0	5	lib/toaster/toastermain/settings.py

commit 5c44609a9bf9fb23241b7dd7c58b08901d75008d
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2016-02-05 12:38:21 +0000

    toaster: xhr_customrecipe_packages Add dependencies to included packages
    
    Add the dependencies of packages which are added to the
    CustomImageRecipe. Currently just handle the first tier of dependencies
    as this is what we show in the UI.
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: brian avery <avery.brian@gmail.com>

12	0	lib/toaster/toastergui/views.py

commit 8c2e8a13badacb816c4b1178b6661600008b38af
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2016-02-05 12:37:08 +0000

    toaster: orm generate_recipe_content only exclude locale packages
    
    Allow package groups in our custom image recipe. Excluding them creates
    more undefined behaviour than including them at this stage. Also update
    to use convenience method for returning all packages.
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: brian avery <avery.brian@gmail.com>

3	8	lib/toaster/orm/models.py

commit 4660aaf1c6775270f8f3d0afbb7fa2ee7a2a1563
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2016-02-05 12:32:54 +0000

    toaster: customrecipe page Add last successful build link and conditionals
    
    Add link to the last successful build if there is one and add
    conditionals for the ancillary recipe metadata.
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: brian avery <avery.brian@gmail.com>

11	2	lib/toaster/toastergui/templates/customrecipe.html

commit 8cf6e67a955574b33856a082bdadf3194f2b6ba4
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2016-02-05 11:59:17 +0000

    toaster: models Add update_package_list for CustomImageRecipe
    
    Add a method to update the packages included list from the last
    build, this effectively "synchronises" the package list from what
    we think will happen at the Customise image stage with what
    actually was produced with a build. It's not ideal to have this
    function here but we also need to make sure that no race condition
    of the user accessing this list and it being updated occurs.
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: brian avery <avery.brian@gmail.com>

48	2	lib/toaster/orm/models.py

commit 4bd4e49f13a7625997a43f3b2e67ed42c3c8e08b
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2016-02-05 11:44:57 +0000

    toaster: orm Add last_updated field to CustomImageRecipe
    
    Field to keep track of when the package list for the CustomImageRecipe
    was last updated from a build.
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: brian avery <avery.brian@gmail.com>

19	0	lib/toaster/orm/migrations/0006_customimagerecipe_last_updated.py
1	0	lib/toaster/orm/models.py

commit 4dde3d830cd38bbe306d83629dcb80da5fc9b027
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2016-02-05 11:41:43 +0000

    toaster: models add get_last_successful_built_target method
    
    Add a convenience method to get the last successful build
    target for a CustomImageRecipe.
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: brian avery <avery.brian@gmail.com>

7	0	lib/toaster/orm/models.py

commit e69b00532b011327bc2495a6fb52cfe98f0f897d
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2016-02-05 11:25:34 +0000

    toaster: pkg_dependencies_popover just show direct dependencies
    
    In the dependencies popover just show direct dependency in the list
    rather than recommends, conflicts etc
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: brian avery <avery.brian@gmail.com>

2	2	lib/toaster/toastergui/templates/snippets/pkg_dependencies_popover.html

commit bd76c22fe2aa06690b4ee25de69219ac0bf6b4d6
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2016-02-05 11:18:09 +0000

    toaster: models add all_depends method for Package_DependencyManager
    
    This convenience method returns just the Package_Dependency for
    the package which are regular dependencies i.e. not RECOMMENDS or
    any other types.
    Signed-off-by: brian avery <avery.brian@gmail.com>

5	0	lib/toaster/orm/models.py

commit a0b97ffc7a468bad081ce3276c74728bf6830250
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2016-02-05 11:13:46 +0000

    toaster: buildinfohelper CustomImagePackage update dependency info
    
    Instead of keeping the original dependency information for the pool of
    CustomImagePackage reset it with each new build.
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: brian avery <avery.brian@gmail.com>

4	15	lib/bb/ui/buildinfohelper.py

commit eff66b502df8e001cd0abc25bcbd742687169619
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2016-02-02 17:46:31 +0000

    toaster: newcustomimage_modal add frontend name validation
    
    Add front end handling of validation response from create new
    CustomImageRecipe api.
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: brian avery <avery.brian@gmail.com>

32	5	lib/toaster/toastergui/static/js/newcustomimage_modal.js
3	4	lib/toaster/toastergui/templates/newcustomimage_modal.html

commit f290d428460a07e73050ff613bc222cc8c04f5ec
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2016-02-02 17:44:01 +0000

    toaster: API CustomImageRecipe check the recipe name supplied is valid
    
    Check that the name for a new CustomImageRecipe doesn't already exist in
    the project or in the database of existing recipes (e.g. from the layer
    index). Also restrict the characters entered for the recipe naming
    convention.
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: brian avery <avery.brian@gmail.com>

21	0	lib/toaster/toastergui/views.py

commit bbbd304c49b0940a695d15273934edff95d70836
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2016-01-29 14:43:25 +0000

    toaster: views CustomRecipe API add size information to the package lists
    
    Add the file size of the packages and the total to the JSON response.
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: brian avery <avery.brian@gmail.com>

12	2	lib/toaster/toastergui/views.py

commit c9d7b68ee0186a71e8e75a5d87122a0328001515
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2016-01-29 14:40:41 +0000

    toaster: models Invalidate ToasterTables cache when a m2m field changes
    
    Whem a m2m field changes we need to clear the ToasterTables cache as
    this can affect the state of items in ToasterTables.
    For example the CustomImagePackages being added or removed from a custom
    image recipe.
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: brian avery <avery.brian@gmail.com>

1	0	lib/toaster/orm/models.py

commit 119569d83c3fb1d1bd162624819b3f9c63a791c4
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2016-01-29 14:38:43 +0000

    toaster: customrecipe Add dependency tracking to package selection
    
    Update the states of the packages in the package selection UI to reflect
    whether it's likely that 1st level dependencies for the package will be
    also added.
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: brian avery <avery.brian@gmail.com>

71	27	lib/toaster/toastergui/static/js/customrecipe.js
3	2	lib/toaster/toastergui/templates/customrecipe.html
2	2	lib/toaster/toastergui/templates/pkg_add_rm_btn.html
4	0	lib/toaster/toastergui/urls.py

commit 6b39423fe5a3ed30289a8b303329a5725f7d273b
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2016-01-28 18:05:14 +0000

    toaster: tables move template logic into the pkg_add_rm_btn
    
    Instead of defining this as a string it's sufficiently large enough to
    warrant its own file.
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: brian avery <avery.brian@gmail.com>

1	14	lib/toaster/toastergui/tables.py
15	0	lib/toaster/toastergui/templates/pkg_add_rm_btn.html

commit 9fd7b05dc0cf9240f7c8e3dc77b009064fd2b0cb
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2016-01-28 18:01:39 +0000

    toaster: CustomImageRecipe generate overwrite IMAGE_FEATURES
    
    If we're breaking up an image recipe's packages we will also need to
    override IMAGE_FEATURES to make sure the customisation is not altered
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: brian avery <avery.brian@gmail.com>

1	1	lib/toaster/orm/models.py

commit b2208e53c00a67a7d0345e7378e6806b8ae40fb4
Author: Elliot Smith <elliot.smith@intel.com>
Date:   2016-01-21 17:11:11 +0000

    toaster: make locale packages uneditable in custom image page
    
    When the packages associated with a custom image recipe are
    shown in the customrecipe editing page, locale packages are
    shown in the same way as all other packages. This gives the false
    impression that these packages can be removed, when in fact
    they are automatically added due to the IMAGE_LINGUAS build
    variable.
    
    Modify the customrecipe page so that locale packages cannot be
    removed, and provide some help text explaining why.
    
    [YOCTO #8927]
    
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: brian avery <avery.brian@gmail.com>

14	0	lib/toaster/orm/models.py
3	0	lib/toaster/toastergui/static/css/default.css
16	1	lib/toaster/toastergui/tables.py
1	1	lib/toaster/toastergui/templates/pkg_add_rm_btn.html

commit 38a753e7b2e9ede326856b830b25e13bdd6d0d9b
Author: Elliot Smith <elliot.smith@intel.com>
Date:   2016-01-20 13:06:00 +0000

    toaster: include locale and packagegroup packages in custom image
    
    The custom image editing page doesn't show locale and packagegroup
    packages: they are filtered out of the queryset used to populate
    the ToasterTable.
    
    Rather than filtering these packages out, include them in the list
    of packages which are shown.
    
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: brian avery <avery.brian@gmail.com>

2	7	lib/toaster/toastergui/tables.py

commit 72a4cb30842fd053e46dc56df222729cbe735162
Author: Elliot Smith <elliot.smith@intel.com>
Date:   2016-01-18 14:51:54 +0000

    toaster: update custom image package table filters
    
    The custom image package selection filters were using the old
    ToasterTable filter approach, which caused the table filter to fail.
    
    Amend the table to use the new ToasterTable filtering API to fix
    this.
    
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: brian avery <avery.brian@gmail.com>

20	26	lib/toaster/toastergui/tables.py

commit 5189252635ddc7b90c9a43aaed9f196c31e1dcad
Author: Elliot Smith <elliot.smith@intel.com>
Date:   2016-01-18 14:23:55 +0000

    toaster: move recent builds query to model
    
    The progress updater for the recent builds section makes a JSON
    call to the project view URL to get progress for each build.
    However, conversion of the builds pages to ToasterTable broke this,
    as the JSON response no longer contained the data necessary to
    populate the progress bars.
    
    Move the recent builds query to the Build model, so that it is
    accessible to the ToasterTables using it ("project builds" and
    "all builds"), as well as to the "project" view.
    
    Modify the code in the recent builds template to use the slightly
    different objects returned by the recent builds query on Build.
    
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: brian avery <avery.brian@gmail.com>

28	1	lib/toaster/orm/models.py
14	19	lib/toaster/toastergui/tables.py
3	4	lib/toaster/toastergui/templates/mrb_section.html
1	1	lib/toaster/toastergui/views.py

commit df8185fcbd84061976d91b03b2a9268b319a6184
Author: Elliot Smith <elliot.smith@intel.com>
Date:   2016-01-18 10:55:16 +0000

    toaster: update customimagerecipe migration
    
    When applying migrations, Django shows this warning:
    
    "Your models have changes that are not yet reflected in a migration,
    and so won't be applied."
    
    This is because the customimagerecipe model has changed, but those
    changes are not covered by a migration.
    
    Add the missing migration to clear this warning.
    
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: brian avery <avery.brian@gmail.com>

19	0	lib/toaster/orm/migrations/0005_auto_20160118_1055.py

commit a26bfd9d2490dc0fd90bf6d1690e63ac26001559
Author: Elliot Smith <elliot.smith@intel.com>
Date:   2016-01-18 10:28:39 +0000

    toaster: add merge migration to resolve conflict
    
    Django detects a conflict between a migration added to support
    image customisation and another migration which supports PROVIDES.
    
    Add a merge migration to resolve the conflict (as suggested by
    Django).
    
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: brian avery <avery.brian@gmail.com>

15	0	lib/toaster/orm/migrations/0004_merge.py

commit 26025e1ea49b3ebfcfd508d1608fa8c9e722ad03
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2016-01-27 12:44:54 +0000

    toaster: orm generate_recipe_file_contents Handler for require recipe
    
    Add a special case for when the recipe we have based a custom image
    recipe on requires another recipe.
    In this case we need to adjust the file location to be able to
    require
    the recipe when we're in the toaster-custom-images layer.
    
    For example:
    "require core-image-minimal.bb" is changed to:
    "require recipes-core/images/core-image-minimal.bb"
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: brian avery <avery.brian@gmail.com>

23	1	lib/toaster/orm/models.py

commit ec467e43c39eadf02412b89db10c09ed78a5a9f5
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2015-12-16 11:36:39 +0000

    toaster: project builds Poll the server to get latest progress for build
    
    Poll the server for the project build progress value. This is something
    that will need to be re-done once we have a proper API for this on the
    server side.
    
    [YOCTO 8328]
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: brian avery <avery.brian@gmail.com>

61	3	lib/toaster/toastergui/templates/mrb_section.html

commit e6a7cacbddd1df5bac0b79384199cf7264c5bbd5
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2015-12-14 18:45:02 +0000

    toaster: localhostbectrl Update the dirpath of customrecipe's base layer
    
    We need to know the location of the based_on recipe's layer on the
    file system before we try and generate the custom image recipe. As
    we read the recipe to make the custom version.
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: brian avery <avery.brian@gmail.com>

19	0	lib/toaster/bldcontrol/localhostbecontroller.py

commit 5ddb35c98b609d85f97d482b54cabe3a2812afe6
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2015-12-10 14:52:22 +0000

    toaster: tables Check layer presence in project for customise_btn
    
    Make sure we send the current list of layers to the customise button to
    be able to know whether it should be set as an add layer button or a
    customise button on the New custom image page.
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: brian avery <avery.brian@gmail.com>

3	0	lib/toaster/toastergui/tables.py
10	4	lib/toaster/toastergui/templates/customise_btn.html

commit dfcbcf789cf3f0733ca26b0601fdf97ce4291674
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2015-12-08 19:56:11 +0000

    toaster: toastergui tests Add addtional data to the setUp for new tables
    
    Add additional data to the setUp to be able to test all the tables for
    Image Customisation. Also add the name of the table being tested to the
    num of rows assertion.
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: brian avery <avery.brian@gmail.com>

66	25	lib/toaster/toastergui/tests.py

commit ae3301a1047b3efb4b340b50a10d5d585b7333da
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2015-12-08 19:52:42 +0000

    toaster: tables SelectPackagesTable rename recipe_id to custrecipeid
    
    Rename the recipe_id to custrecipeid to avoid confusion about which type
    of object we're going to be accessing. This means that in the unit tests
    for tables we can pass a different kwargs for custom recipes vs normal
    recipes.
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: brian avery <avery.brian@gmail.com>

8	4	lib/toaster/toastergui/tables.py
2	2	lib/toaster/toastergui/urls.py

commit daccb2978f833a9e7af270160331da3e9a158219
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2015-12-08 16:07:02 +0000

    toaster: toastergui tests Update package test to use CustomImagePackage
    
    Update test for adding and removing a package from a CustomImageRecipe
    so that it uses the CustomImagePackage and correct fields for the packages
    included. Change the test for error condition to use an invalid package
    id as ManyToMany remove() on package that isn't in the relationship does
    not throw an error.
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: brian avery <avery.brian@gmail.com>

16	9	lib/toaster/toastergui/tests.py

commit 418f5509e74d46d36a8eb966a245083006e5f4ba
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2015-12-07 18:42:16 +0000

    toaster: customrecipe Add further front end features using new API
    
    This adds some basic package dependency hint modals when you add and
    remove a package. It also makes sure that if the CustomImageRecipe has
    no current included packages that we go and check this with the server
    to see if a relevant build has taken place which will provide this
    information.
    
    [YOCTO #8082]
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: brian avery <avery.brian@gmail.com>

118	14	lib/toaster/toastergui/static/js/customrecipe.js
43	3	lib/toaster/toastergui/templates/customrecipe.html
19	16	lib/toaster/toastergui/templates/pkg_add_rm_btn.html

commit c45791fc85d26c43b0a3b0a459111d2ff5583540
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2015-12-08 16:28:04 +0000

    toaster: xhr_customrecipe_packages add GET info for package response
    
    Add response for GET to the xhr_customrecipe_packages ReST API
    
    /xhr_customrecipe/<recipe_id>/packages/<package_id>
    Thie response includes the id, name, version and dependency information
    for the package.
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: brian avery <avery.brian@gmail.com>

98	42	lib/toaster/toastergui/views.py

commit 4ebc81823b3aec6ecf38835acad5263a81eb41c5
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2015-12-08 16:25:49 +0000

    toaster: xhr_customrecipe_id change to use CustomImagePackage
    
    Instead of doing a shallow copy of the package into the
    CustomImageRecipe when we add packages we can now use the
    CustomImagePackage as a M2M field on the Package to CustomImageRecipe.
    Also switch to using Target_Installed_Package as the method to retrieve
    the package list from the build.
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: brian avery <avery.brian@gmail.com>

23	19	lib/toaster/toastergui/views.py

commit 0fe2c72ab82c6de2825a390fbb460b892a7a9cfc
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2015-12-08 11:36:17 +0000

    toaster: API allow CustomImageRecipe to be updated after creation
    
    When we create a CustomImageRecipe we create a Layer_Version and
    Recipe for that Recipe to be in, we only need one Layer_Version for our
    Recipes so if that Layer_Version is updated by building it we need
    a slightly more custom version of get_or_create to take into account the
    fields which we expect can change but still mean that the object we want is
    valid and doesn't need to be created.
    
    In the Recipe case this is when we're updating an existing
    CustomImageRecipe as we allow people to create a recipe even when the
    based on recipe hasn't been built so we need to update it once a build
    has happened.
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: brian avery <avery.brian@gmail.com>

35	21	lib/toaster/toastergui/views.py

commit 4b4b7e28d602ac5283659f806d695cc0451d292e
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2015-12-08 11:29:23 +0000

    toaster: tables Change SelectPackagesTable to use ProjectPackage
    
    This changes the SelectPackagesTable to use the ProjectPackage table
    instead of very large expensive queries to retrieve a list of currently
    available packages for the project.
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: brian avery <avery.brian@gmail.com>

16	11	lib/toaster/toastergui/tables.py

commit 85891e5320014f363dba093ac2db681d55375ee3
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2015-12-07 18:46:14 +0000

    toaster: tables add recipe download link to CustomImagesTable
    
    Add the download recipe link and fix the package count field.
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: brian avery <avery.brian@gmail.com>

10	4	lib/toaster/toastergui/tables.py

commit 74fa98752b1cf1ad18d35ab6dd25fe7e409133c5
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2015-12-07 18:44:37 +0000

    toaster: newcustomimage_modal use libtoaster method for new CustomRecipe
    
    Use libtoaster.createCustomRecipe rather than own implementation of this
    function.
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: brian avery <avery.brian@gmail.com>

8	28	lib/toaster/toastergui/static/js/newcustomimage_modal.js

commit 03e7949f538733f682a05d0c318cf2f4cd64cbf5
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2015-12-07 18:43:15 +0000

    toaster: libtoaster Add createCustomRecipe method
    
    This adds the function to call the ReSt API to create a custom image
    recipe.
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: brian avery <avery.brian@gmail.com>

27	0	lib/toaster/toastergui/static/js/libtoaster.js
1	0	lib/toaster/toastergui/templates/base.html

commit 8b03bbae12ec077151c97579e329d89667040a78
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2015-12-07 18:23:32 +0000

    toaster: orm Add convenience method to get all pkgs in a CustomImageRecipe
    
    Returns a queryset of the all the packages that we expect to have in a
    CustomImageRecipe.
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: brian avery <avery.brian@gmail.com>

6	0	lib/toaster/orm/models.py

commit 480f0d307a3183df16fd383c7a3f96f00d09fbd4
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2015-12-07 18:15:43 +0000

    toaster: orm get_project_layer_versions to return layer_version objects
    
    Instead of returning layercommits return the actual Layer_Version objects
    for the layercommit as these are the useful objects which contain the
    metadata.
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: brian avery <avery.brian@gmail.com>

4	3	lib/toaster/orm/models.py

commit 1e78d1ca2f5b02d80ab037c6f5f81d18195fc817
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2015-11-05 15:38:24 +0000

    toaster: toastergui tests Add unit test for download custom recipe
    
    Add unit test to test downloading end point and the basic content of the
    custom recipe that is generated.
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: brian avery <avery.brian@gmail.com>

13	1	lib/toaster/toastergui/tests.py

commit e958921e15a3c3e5a6b7c27ebe37fdf1f551f198
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2015-11-05 12:33:35 +0000

    toaster: toastergui tests Update to reflect changes to CustomImageRecipe
    
    Now that CustomImageRecipe inherits from Recipe make sure that the
    accessors and the required values for Recipe are now setup correctly.
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: brian avery <avery.brian@gmail.com>

29	12	lib/toaster/toastergui/tests.py

commit a1a69903a94264377666730b1eb4599e6f3b4398
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2015-11-05 12:30:40 +0000

    toaster: views xhr_customrecipe_packages clean up API
    
    - Fix generic variable names such as "object" and "values" when not
      needed.
    - Use try catch instead of a queryset filter to return the custom recipe
      object
    - Be explicit about the fields returned for the custom recipe info field
    - Remove redundant new_package field
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: brian avery <avery.brian@gmail.com>

13	14	lib/toaster/toastergui/views.py

commit 541ff2b5e9c6ebec0d0ced59b3f61cbd37bd37c2
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2015-11-04 15:50:44 +0000

    toaster: toastertable remove title from Show all in table
    
    Title is often very long so this is not a great property to use here.
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: brian avery <avery.brian@gmail.com>

2	2	lib/toaster/toastergui/templates/toastertable.html

commit b6023619397f679791b7eff1faac06f4246133ce
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2015-11-04 15:46:24 +0000

    toaster: Add recipe details page
    
    This page provides the details of recipes, showing their packages and
    additional metadata. It also allows you to build the recipe or customise
    the recipe if it is an image recipe.
    
    [YOCTO #8070]
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: brian avery <avery.brian@gmail.com>

52	0	lib/toaster/toastergui/static/js/recipedetails.js
180	0	lib/toaster/toastergui/templates/recipedetails.html

commit c310bc6bab1a33124906dd57b3c63462a773ff25
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2015-11-04 15:44:00 +0000

    toaster: newcustomimage Move modal dialog out of newcustomimage template
    
    Move the modal template and JS out of the newcustomimage page so that it
    can also be used by the image details page.
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: brian avery <avery.brian@gmail.com>

2	3	lib/toaster/toastergui/static/js/{newcustomimage.js => newcustomimage_modal.js}
2	42	lib/toaster/toastergui/templates/newcustomimage.html
33	0	lib/toaster/toastergui/templates/newcustomimage_modal.html

commit a656756a9255ec5882686ce9563d17f2eb3136e3
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2015-11-04 15:37:19 +0000

    toaster: Continue front end features to custom image recipe page.
    
    Continuation of the work on the custom image recipe page, this brings
    in:
    
    - Basic notification of having added/removed a package.
    - Connect up Build button
    - Download recipe feature
    - No packages states
    - Project bread crumb
    - Display additional recipe metadata
    - Update accessors for recipe object inheritance changes
    
    [YOCTO #8082]
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: brian avery <avery.brian@gmail.com>

25	9	lib/toaster/toastergui/static/js/customrecipe.js
87	59	lib/toaster/toastergui/templates/customrecipe.html
2	2	lib/toaster/toastergui/templates/pkg_add_rm_btn.html

commit 336b1d8369d9e86ece78b63cb0e140e653216011
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2015-11-04 15:17:45 +0000

    toaster: tables Add table for Packages and update SelectPackagesTable
    
    Create a Packages table for use as the image details page.
    Change the SelectPackagesTable table to inherit from the Packages table.
    Remove the need for a separate view by adding the additional template
    context items to the Table's page context.
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: brian avery <avery.brian@gmail.com>

124	25	lib/toaster/toastergui/tables.py
14	0	lib/toaster/toastergui/templates/snippets/pkg_dependencies_popover.html
5	5	lib/toaster/toastergui/urls.py
0	9	lib/toaster/toastergui/views.py

commit 2101c854bb2d7ff1e3a4f00ad4d33d77859439ed
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2015-11-04 15:14:06 +0000

    toaster: views Add view to download custom recipe
    
    View to provide the custom recipe download feature. The recipe is
    generated on-demand to make sure that it is the most current version of
    the Custom recipe.
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: brian avery <avery.brian@gmail.com>

3	0	lib/toaster/toastergui/urls.py
14	1	lib/toaster/toastergui/views.py

commit f3322567378d6038a00da0fab6c5641a1a8e5409
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2015-11-04 15:02:28 +0000

    toaster: move CustomImageRecipe generation to API entry point
    
    Use the CustomImageRecipe generate_recipe_file_contents to generate the
    recipe that we build from. Move creation of the dummy layer and recipe
    object to the point of recipe creation as we need these objects before
    the build time. Also update the methods to add and remove packages to
    account for the CustomImageRecipe inheriting from Recipe.
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: brian avery <avery.brian@gmail.com>

14	15	lib/toaster/bldcontrol/localhostbecontroller.py
76	14	lib/toaster/toastergui/views.py

commit 6863343c3434ce19aa4b609c83f48a06e6943366
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2015-11-04 14:56:36 +0000

    toaster: orm add CustomImageRecipe generate contents function
    
    Add function generate_recipe_file_contents to dump the custom image
    recipe instance to a string for use either to push to the user as a
    downloaded version of their custom image recipe or to use to generate
    the recipe that we build.
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: brian avery <avery.brian@gmail.com>

49	0	lib/toaster/orm/models.py

commit f81bb65883baa6c0f8a4d48a4de3291a10543992
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2015-12-07 18:26:47 +0000

    toaster: buildinfohelper Add the concept of CustomImagePackage
    
    This adds the concept of CustomImagePackage this is similar to the way
    layers and recipes work in that we have a set of data which is part of
    the build history and a set of data which is part of the configuration
    data that toaster uses to guide people in configuring their project. We
    create a set of  built_packages for every build but only create a package
    for configuration purposes if we don't already have one, so that the
    CustomImagePackage only ever contains a unique list of packages that are
    available to be added and removed from a CustomImageRecipe.
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: brian avery <avery.brian@gmail.com>

89	16	lib/bb/ui/buildinfohelper.py

commit c7da71fe8509439656f482c16ed081cf442f4030
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2015-12-08 21:01:10 +0000

    toaster: orm: Add db migration for new CustomImagePackage table
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: brian avery <avery.brian@gmail.com>

24	0	lib/toaster/orm/migrations/0003_customimagepackage.py

commit c1bd4f760cd35535e44f488250e0a56b99cad680
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2015-12-07 18:22:08 +0000

    toaster: orm Add CustomImagePackage table
    
    This table is used to track all the available packages in the current
    toaster. Many of these packages belong to many CustomImageRecipes.
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: brian avery <avery.brian@gmail.com>

12	0	lib/toaster/orm/models.py

commit 2831d74201abba68c301d85ee583d706a51d5a5f
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2015-12-08 20:58:55 +0000

    toaster: orm: Add db migration for new CustomImageRecipe inheritance change
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: brian avery <avery.brian@gmail.com>

41	0	lib/toaster/orm/migrations/0002_auto_20151210_1209.py

commit bb8120b56be7eee6ed2e4434d8477282a01e0c00
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2015-11-04 14:54:41 +0000

    toaster: orm make CustomImageRecipe inherit from Recipe
    
    This allows us to re-use the properties of a recipe for the custom image
    recipes as well as re-using the existing templates and logic that deals
    with recipe objects.
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: brian avery <avery.brian@gmail.com>

2	7	lib/toaster/orm/models.py

commit e4c86d2f6c2e86ad054b37d0a5bf7464a4de4f9a
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2015-11-04 14:48:54 +0000

    toaster: orm Add sum of dependencies size function to PackageDependencyManager
    
    Add function that returns the Sum of the size of all the packages which depend on a package.
    Access get_total_source_deps_size via a packages's dependency
    manager.
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: brian avery <avery.brian@gmail.com>

7	1	lib/toaster/orm/models.py

commit 6e42070d8abc80dacd8094c4f5019577453a9d49
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2015-10-27 19:11:01 +0000

    toaster: tablejs Add an event handler to manually trigger a data reload
    
    Allow users of ToasterTable to manually trigger a refresh of the data.
    This can be useful if an action has happened in-page and the data is now
    invalid. Such as new data being added or removed from the model.
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: brian avery <avery.brian@gmail.com>

7	0	lib/toaster/toastergui/static/js/table.js

commit 16e48829f6fd96c1d21339253871f2a9b2446f87
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2015-10-27 19:04:46 +0000

    toaster: ToasterTables simplify filter function move common part to widget
    
    Move part of the functionality of the filter functions to the Table
    widget. We don't need to implement it in each subclass.
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: brian avery <avery.brian@gmail.com>

31	1	lib/toaster/toastergui/tables.py

commit 1739b509e9efc4b016fc73c2d4399f1f9d3d285f
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2015-10-23 22:57:18 +0100

    toaster: models fall back to a sensible string for no vcs reference
    
    Fall back to a 'n/a' string for the vcs reference, not all our source
    has to be in a vcs and therefore it is legitimate for this to be none.
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: brian avery <avery.brian@gmail.com>

1	1	lib/toaster/orm/models.py

commit 8056ec65bd93005ecb7b0ed12dcb21b3b60df22c
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2015-10-21 14:16:45 +0100

    toaster: localhostbecontroller CustomRecipe now base_recipe is Recipe
    
    Update the reference to the base_recipe. It is now a Recipe object
    rather than an intermediate AvailableRecipe object.
    Therefore doesn't need an extra traverse down the object hierarchy.
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: brian avery <avery.brian@gmail.com>

1	1	lib/toaster/bldcontrol/localhostbecontroller.py

commit 85c529044381895556d603a3974de22392646a22
Author: Aníbal Limón <anibal.limon@linux.intel.com>
Date:   2016-01-28 16:27:52 -0600

    bb/fetch2: Move export_proxies function from wget to utils.
    
    In order to use in other modules since is a common function
    when needs to get proxies working.
    
    Signed-off-by: Aníbal Limón <anibal.limon@linux.intel.com>
    Signed-off-by: Ross Burton <ross.burton@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	16	lib/bb/fetch2/wget.py
19	0	lib/bb/utils.py

commit 934b82badcf063c8ff252d806c2fb019f7a2e55f
Author: Elliot Smith <elliot.smith@intel.com>
Date:   2016-02-04 11:26:20 +0200

    toaster: reinstate ID on edit columns button
    
    The ID was omitted from the "edit columns" button on the
    "projects", "all builds" and "project builds" tables when they
    were converted to ToasterTable. This caused the QA tests to fail.
    
    Reinstate the ID so the tests can identify the "edit columns" button
    correctly.
    
    [YOCTO #9051]
    
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/toaster/toastergui/templates/toastertable.html

commit 3f67600dc3292bc8208644ce89e8bf7ab95cf2e7
Author: Ed Bartosh <ed.bartosh@linux.intel.com>
Date:   2016-02-04 19:23:39 +0200

    cooker: shutdown cooker parser on shutdown
    
    Currently any not catched exception in cooker causes bitbake
    to hang because of not terminated children of CookerParser.
    
    Long term solution would be to reimplement Cooker as a context
    manager and terminate parser children in its __exit__ method.
    
    Partial fix is to call CookerParser.shutdown in Cooker.shutdown in
    hope that all Cooker exceptions are caught and shutdown method is
    called.
    
    [YOCTO #8900]
    
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	0	lib/bb/cooker.py

commit 4fb028b0bd14d3e4b3fd7a89c643528728566476
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2016-02-04 23:29:51 +0000

    fetch2/osc: Clean up old variable syntax
    
    Since people do copy and paste these things, clean up old syntax styles.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

5	5	lib/bb/fetch2/osc.py

commit 2e25d09a1ab62ccc3573d13114d59838cf4b07f2
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2016-02-04 23:28:53 +0000

    fetch2/osc: Remove hardcoded url
    
    This shouldn't be in here, use a variable instead.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/fetch2/osc.py

commit 1b303785c578bbae3a89be8d751d80fba860f62e
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2016-02-02 13:54:37 +0000

    parse/ast: Mark anonymous functions as python functions
    
    Anonymous functions are python functions, set the variable
    flags as such so we can detect them and avoid expansion where
    needed.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	2	lib/bb/parse/ast.py

commit b12c17be5e4a74c9680876605c87f46501f78d28
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2016-02-02 13:54:01 +0000

    codeparser: Improve handling of data.expand() dependencies
    
    Currently bitbake doesn't parse into data.expand() expressions,
    relying on high level expansion of python code to handle this.
    
    One of the tests does however test this works.
    
    We don't really want to be doing string expansion on python code,
    so specifically parse into expand() function calls so that when
    the high level behaviour is tweaked, the self tests continue to
    pass and that we do continue to handle expand() function calls as
    best we can.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

12	0	lib/bb/codeparser.py

commit 7c3b99c6a716095af3ffce0b15110e91fb49c913
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2016-02-02 23:49:09 +0000

    lib/bb: Add expansion parameter to getVarFlag
    
    This sets the scene for removing the default False for expansion from
    getVarFlag. This would later allow True to become the expand default.
    
    On the most part this is an automatic translation with:
    
    sed -e 's:\(\.getVarFlag([^,()]*, [^,()]*\)):\1, False):g'  -i `grep -ril getVar *`
    
    There should be no functional change from this patch.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	bin/bitdoc
7	7	lib/bb/build.py
12	12	lib/bb/data.py
4	4	lib/bb/data_smart.py
3	3	lib/bb/fetch2/__init__.py
7	7	lib/bb/parse/ast.py
4	4	lib/bb/tests/data.py
1	1	lib/bb/utils.py

commit 54a3864246f2be0b62761f639a1d5c9407aded4f
Author: Felipe F. Tonello <eu@felipetonello.com>
Date:   2016-02-03 16:29:42 +0000

    fetch2/gitsm: Fix when repository change submodules
    
    This fix a problem when checking out a commit that changes the submodules
    previously checkout.
    
    Example:
    Recipe uses branch A and then it updates to use branch B, but branch B has
    different submodules dependencies then what branch A previously had.
    
    Signed-off-by: Felipe F. Tonello <eu@felipetonello.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/fetch2/gitsm.py

commit 2876019e696ff2af164961d5d4c8e3ea9dfefc23
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2016-02-02 23:49:40 +0000

    data_smart: Add missing expand parameter to getVar call
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/data_smart.py

commit ff6d3f53a4504eae7ec4c190b9f7595b09aed017
Author: Diego Santa Cruz <Diego.SantaCruz@spinetix.com>
Date:   2016-02-02 13:08:05 +0100

    bitbake: prserv: do not clear umask when daemonizing
    
    Clearing the umask when daemonizing is not the correct thing
    to do, as it will create files writable by anyone by default.
    For instance the pid file was being created with mode 777.
    This could also potentially affect the sqlite database.
    Better let the calling process decide on the umask.
    
    [YOCTO #9036]
    
    Signed-off-by: Diego Santa Cruz <Diego.SantaCruz@spinetix.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

0	1	lib/prserv/serv.py

commit 655ec800d54da581229f12efb6f0baf54975fed4
Author: Diego Santa Cruz <Diego.SantaCruz@spinetix.com>
Date:   2016-02-02 13:05:50 +0100

    bitbake: prserv: SIGTERM handling hung process
    
    The current SIGTERM handler hungs the process instead of
    making it exit. The problem seems to be that the handler thread
    is not signaled to quit, so it stays there doing its work, as
    it is not a daemon thread. Setting the quit variable fixes this.
    
    While at it, to not use the SystemExit exception to terminate
    upon SIGTERM but instead left the quit flag do its job. This way
    the PID file is properly removed.
    
    [YOCTO #9035]
    
    Signed-off-by: Diego Santa Cruz <Diego.SantaCruz@spinetix.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/prserv/serv.py

commit bc867c81e3894da5bdd2e45fa695bb5f5f1bb58b
Author: Diego Santa Cruz <Diego.SantaCruz@spinetix.com>
Date:   2016-02-02 13:04:20 +0100

    bitbake: prserv: -wal and -shm sqlite lost when daemonizing
    
    When daemonizing the PR service the -wal and -shm sqlite files were
    being deleted, although they should never be. While the daemonized
    process keeps the file descriptors open and thus a clean exit does
    not loose any data, a power outage would loose all data in the WAL.
    Removing these files also breaks sqlite collaboration between
    processes and furthermore prevents taking proper backups without
    stopping the PR service.
    
    The reason this happens is that the DB connection is opened in
    the initial process, before forking for daemonization. When the
    DB connection is closed by the exiting parent processes it can
    delete the -wal and -shm files if it considers itself to be the
    last connection to the DB. This is easily fixed by opening the
    DB connection after all forking.
    
    [YOCTO #9034]
    
    Signed-off-by: Diego Santa Cruz <Diego.SantaCruz@spinetix.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

8	5	lib/prserv/serv.py

commit 14c9593265f7469cb8a205a46f845ac7491246df
Author: Phil Blundell <pb@pbcl.net>
Date:   2016-01-31 13:51:28 +0000

    cooker, bitbake-worker: Fix spelling of "received"
    
    I before E, except after C...
    
    Signed-off-by: Phil Blundell <pb@pbcl.net>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	2	bin/bitbake-worker
2	2	lib/bb/cooker.py

commit b977faf59dc08050a44a16032fe52d1bbb80f2a1
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2016-01-31 13:31:41 +0000

    cooker: Only start as many parse threads as we need
    
    If we're only going to parse one recipe, no point in starting
    a large number of threads.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	2	lib/bb/cooker.py

commit d4989fb0355476de172169f0698757f7360e9a1f
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2016-01-31 13:23:12 +0000

    knotty: Don't show errors for universe provider issues
    
    When running universe builds, we don't expect an error exit code for
    provider warnings. Change the error messages to warnings in this case.
    
    This deals with errors causing problems on our autobuilders amongst
    other issues.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

13	5	lib/bb/ui/knotty.py

commit 46871f769db13ccd36deedc5b6f3dbc0a3d31c4b
Author: Sujith H <sujith.h@gmail.com>
Date:   2016-01-05 18:30:15 +0530

    bitbake: BBUIHelper: Remove function findServerDetails
    
    findServerDetails function can be removed safely
    from the source tree. Couldn't find any files
    calling this function.
    
    Signed-off-by: Sujith H <sujith.h@gmail.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

0	41	lib/bb/ui/uihelper.py

commit 1dc00b874acae44bbba9d8028d94f7bc97ddcd76
Author: Peter Kjellerstedt <peter.kjellerstedt@axis.com>
Date:   2016-01-26 11:19:56 +0100

    fetch2: Simplify logic in verify_checksum()
    
    The recent change to verify_checksum() to only show checksum warnings
    if no checksums are supplied made it possible to simplify the logic a
    bit more.
    
    Signed-off-by: Peter Kjellerstedt <peter.kjellerstedt@axis.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

10	20	lib/bb/fetch2/__init__.py

commit 539726a3b2202249a3f148d99e08909cb61902a5
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2016-01-29 11:08:50 +0000

    bitbake: Set process names to be meaninful
    
    This means that when you view the process tree, the processes
    have meaningful names, aiding debugging:
    
    $ pstree -p 30021
    bash(30021)───KnottyUI(115579)───Cooker(115590)─┬─PRServ(115592)───{PRServ Handler}(115593)
                                                    ├─Worker(115630)───bash:sleep(115631)───run.do_sleep.11(115633)───sleep(115634)
                                                    └─{ProcessEQueue}(115591)
    
    $ pstree -p 30021
    bash(30021)───KnottyUI(117319)───Cooker(117330)─┬─Cooker(117335)
                                                    ├─PRServ(117332)───{PRServ Handler}(117333)
                                                    ├─Parser-1:2(117336)
                                                    └─{ProcessEQueue}(117331)
    
    Applies to parse threads, PR Server, cooker, the workers and execution
    threads, working within the 16 character limit as best we can.
    
    Needed to tweak the bitbake-worker magic values to tell the
    workers apart.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

7	1	bin/bitbake-worker
1	0	lib/bb/cooker.py
1	0	lib/bb/runqueue.py
2	0	lib/bb/server/process.py
2	0	lib/bb/ui/knotty.py
1	0	lib/bb/ui/uievent.py
4	0	lib/prserv/serv.py

commit fd7f1a94d196b8a3c445e313d9e699b352b1da97
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2016-01-29 11:07:02 +0000

    utils: Add ability to change the process name
    
    Being able to tell the bitbake processes apart is useful for debugging.
    Add a helper function which allows this without making it a hard
    dependency. Errors are ignored, this is just nice to have.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

11	0	lib/bb/utils.py

commit 8a3f50936113e15d2f2822f6aee494204fa1c24f
Author: Andre McCurdy <armccurdy@gmail.com>
Date:   2016-01-27 16:43:17 -0800

    data.py: avoid double newlines at the end of functions in emit_var()
    
    A newline is always appended to the function body when it's written
    out, so strip any trailing newlines which may be there already.
    
    Signed-off-by: Andre McCurdy <armccurdy@gmail.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	0	lib/bb/data.py

commit 8e12c8f8441a7c6a03e603c5789d6037945704c1
Author: Andre McCurdy <armccurdy@gmail.com>
Date:   2016-01-27 16:43:16 -0800

    build.py: minor shell_trap_code() formatting tweaks
    
    Fix quoting of $BASH_COMMAND and avoid wrapping at 80 columns (the
    script which follows is likely to contain some very long lines, so
    line wrapping in bb_exit_handler() looks somewhat out of place).
    
    Signed-off-by: Andre McCurdy <armccurdy@gmail.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	3	lib/bb/build.py

commit 023a5b69df05adce0ed192b393b45eb879c096a0
Author: Peter Kjellerstedt <peter.kjellerstedt@axis.com>
Date:   2016-01-27 18:23:28 +0100

    bitbake-user-manual-ref-variables: Update the help for BBMASK
    
    Update the help for BBMASK to reflect that it is now allowed to
    contain multiple regular expressions. Also changed the examples for
    BBMASK to be a bit more diverse.
    
    Signed-off-by: Peter Kjellerstedt <peter.kjellerstedt@axis.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

9	11	doc/bitbake-user-manual/bitbake-user-manual-ref-variables.xml

commit 2c778ad50aceaffb855baf5f4aa0fed98c880870
Author: Peter Kjellerstedt <peter.kjellerstedt@axis.com>
Date:   2016-01-27 18:23:27 +0100

    cooker: Allow BBMASK to contain multiple regular expressions
    
    Before, BBMASK was only permitted to contain one regular expression.
    This made it hard to add to the BBMASK in multiple places as one was
    supposed to separate the different regular expressions with a "|"
    rather than with whitespace as is customary in BitBake variables.
    
    Now one can specify any number of regular expressions in BBMASK. This
    makes it possible to, e.g., mask out recipes in another layer from the
    layer.conf file.
    
    This also properly ignores any regular expressions that do not compile
    (before an invalid regular expression would cause a ParseError in the
    first bbappend file found stating that it was not a BitBake file...)
    
    Signed-off-by: Peter Kjellerstedt <peter.kjellerstedt@axis.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

15	2	lib/bb/cooker.py

commit 2fbd9e4e44f6b491cccca81fd34586fcfdeea3d3
Author: Martin Samuelsson <martin.samuelsson@axis.com>
Date:   2016-01-17 17:54:39 -0800

    bitbake-user-manual-metadata: Updated 'dir' flag
    
    Added more detail to the 'dir' flag to state the last
    directory listed will be used as the work directory for the
    task.
    
    Signed-off-by: Scott Rifenbark <srifenbark@gmail.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	0	doc/bitbake-user-manual/bitbake-user-manual-metadata.xml

commit 6a82f6432022debe48830db98b3fb16424411a87
Author: Scott Rifenbark <srifenbark@gmail.com>
Date:   2016-01-07 16:38:49 -0600

    bitbake-user-manual: Updated the example BitBake directory
    
    This directory no longer has setup.py as part of the directory.
    I removed that line from the example in the
    "Obtaining BitBake" section.
    
    Fixes YOCTO #8623
    
    Signed-off-by: Scott Rifenbark <srifenbark@gmail.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

0	1	doc/bitbake-user-manual/bitbake-user-manual-hello.xml

commit 6ec70d5d2e330b41b932b0a655b838a5f37df01e
Author: Ross Burton <ross.burton@intel.com>
Date:   2016-01-20 13:10:25 +0000

    fetch2/wget: fallback to GET if HEAD is rejected in checkstatus()
    
    The core change here is to fall back to GET requests if HEAD is rejected in the
    checkstatus() method, as you can't do a HEAD on Amazon S3 (used by Github
    archives).  This meant removing the monkey patch that the default method was GET
    and adding a fixed redirect handler that doesn't reset to GET.
    
    Also, change the way the opener is constructed from an if/elif cluster to a
    conditionally constructed list.
    
    Signed-off-by: Ross Burton <ross.burton@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

49	23	lib/bb/fetch2/wget.py
2	0	lib/bb/tests/fetch.py

commit 5685feb51fbb6d54fde6027cc765b9edd8eda65a
Author: Daniel Istrate <daniel.alexandrux.istrate@intel.com>
Date:   2016-01-25 16:03:21 +0000

    toaster: Update UI test runner
    
    Add new runner options:
        --run-all-tests: finds all tests, ignores config
        --run-suite <suite> (from cfg)
    
    Without arguments, run tests from current os section (config), e.g.:
        1. ./run_toastertests
        2. ./run_toastertests --run-all-tests
        3. ./run_toastertests --run-suite darwin
    
    Update toaster logging to meet QA CI requirements.
    
    Signed-off-by: Daniel Istrate <daniel.alexandrux.istrate@intel.com>
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

116	48	lib/toaster/contrib/tts/toasteruitest/run_toastertests.py
56	36	lib/toaster/contrib/tts/toasteruitest/toaster_automation_test.py

commit 43358a9b595b2928458a5f463cf1949394160c3a
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2016-01-22 13:01:28 +0000

    fetch2: Don't show checksum warnings if a single checksum was supplied
    
    If one checksum is supplied to a SRC_URI, we really don't want to show
    warnings about the other type which isn't present as one checksum
    is really good enough for most cases.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	3	lib/bb/fetch2/__init__.py

commit 76c9871740ef42ac35fdfdcb89a68478cca370cd
Author: Ed Bartosh <ed.bartosh@linux.intel.com>
Date:   2016-01-22 12:18:37 +0000

    toaster: run bitbake server with --read option
    
    Toaster script run bitbake with --postread conf/toaster.conf.
    It turned out that variables set this way don't influence the
    build. Changing --postread to --read makes bitbake to read
    variables earlier and should fix this issue.
    
    [YOCTO #8781]
    
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	bin/toaster

commit aba0dce57c889495ec5c13919991a060aeff65d2
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2016-01-23 00:52:21 +1300

    taskdata: add the ability to access world targets list
    
    In certain circumstances it can be useful to get access to the world
    targets list from a recipe in order to add dependencies on some or all
    of the items in it. If a special function, 'calculate_extra_depends' is
    defined in the recipe, and the recipe is to be built, then call it at
    the right point before we calculate which tasks should be run. The
    function can append items to the "deps" list in order to add
    dependencies. This is not as tidy a solution as I would have liked, but
    it does at least do the job.
    
    As part of this change, the buildWorldTargets function was moved to
    bb.providers to make it possible to call from taskdata.
    
    Part of the implementation of [YOCTO #8600].
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

4	1	lib/bb/cache.py
1	23	lib/bb/cooker.py
26	0	lib/bb/providers.py
17	0	lib/bb/taskdata.py

commit 6c488afb0fe30a9655ec62a1d22f9f388365f012
Author: Robert Yang <liezhi.yang@windriver.com>
Date:   2016-01-22 00:55:10 -0800

    cache.py: check existence before add to cachedata.rproviders
    
    The rprovides maybe contain duplicated lines when parse again, we need
    check it before add to cachedata.rproviders, similar to what we had done
    to cachedata.providers.
    
    Signed-off-by: Robert Yang <liezhi.yang@windriver.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	1	lib/bb/cache.py

commit 4b59eb8cc2321fe72f2988b6c9c0fecd4883255b
Author: Robert Yang <liezhi.yang@windriver.com>
Date:   2016-01-22 00:53:16 -0800

    taskdata.py: add RuntimeProviders to close matches
    
    This is useful for newbie, for example:
    $ bitbake rpm-build
    ERROR: Nothing PROVIDES 'rpm-build'. Close matches:
      pm-utils
      rpm RPROVIDES rpm-build
    
    [YOCTO #8881]
    
    Signed-off-by: Robert Yang <liezhi.yang@windriver.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

8	1	lib/bb/taskdata.py

commit d80d39e73223a50fda0090784303d2c57167bb4c
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2016-01-21 14:05:43 +0000

    data_smart: Don't show exceptions for EOL literals
    
    If variables are unset, the code simply doesn't expand them, there
    aren't errors. If the code is a python expression, this can get a bit
    messy, see the attached test case. The python expansion code sees the }
    of the unexpanded value rather than the close of the python expression
    and then raises a SyntaxError exception.
    
    Ideally, we'd update the code to match pairs of brackets. I don't know
    how to do that with the current regex and this is unfortunately a
    performance sensitive piece of code. We also run the risk of breaking
    existing code in OE-Core where there are "{" characters but not "}"
    to close them (PKGE and PE).
    
    Rather than raising the exception, matching the existing "just return
    the expression" behaviour seems more consistent with the standard
    variable behaviour.
    
    This addresses an issue found in the recent image.bbclass code where
    there are some variables we choose not to expand (TMPDIR/DATETIME).
    
    This patch also adds a test case for this behaviour. It wouldn't preclude
    improved bracket matching code in the future either.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>
    Signed-off-by: Ross Burton <ross.burton@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

6	1	lib/bb/data_smart.py
5	0	lib/bb/tests/data.py

commit 4eb15605a1436631b3673bdba39af14bcb3a0e6d
Author: Olof Johansson <olof.johansson@axis.com>
Date:   2016-01-19 16:04:11 +0100

    tests/codeparser.py: Add filename/lineno flags to test variable
    
    A recent change in bitbake added filename/lineno information to the
    parameters of bb.data.build_dependencies(). The codeparser tests
    required a little adaption to the changes, adding the flags to the FOO
    variable used in the tests.
    
    The error seen when running the tests is a TypeError exception raised
    in bb.codeparser:
    
      TypeError: int() argument must be a string or a number, not 'NoneType'
    
    Signed-off-by: Olof Johansson <olof.johansson@axis.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

6	1	lib/bb/tests/codeparser.py

commit 3c2c269dbbbd9a56bd1d0cb4de676baaf3b7ce88
Author: Ed Bartosh <ed.bartosh@linux.intel.com>
Date:   2016-01-19 16:13:28 +0000

    toaster: write variables to toaster.conf
    
    With the resent change in rootfs creation code setVariable
    rpc calls don't set variables for bitbake workers anymore.
    
    Writen variables to toaster.conf should solve this issue.
    
    [YOCTO #8910]
    
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

7	0	lib/toaster/bldcontrol/localhostbecontroller.py

commit d59aabd2142982ca43963c68dd352bf3b170a458
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2016-01-18 18:05:21 +0000

    Revert "runqueue.py: Ensure one setscene function doesn't mask out another which needs to run"
    
    This reverts commit b22592af8145a8c7c4ada2fa7c1dee2e753eca46.
    
    That commit isn't entirely clear about why this change is needed but
    I do have a usecase where this breaks things. If for example you run
    "bitbake X -c packagedata" and that packagedata is in sstate, you'd
    expect this to work.
    
    If sstate doesn't contain a do_populate_sysroot for a dependency, you
    would still expect the command above to succeed and you would not
    expect
    it to rebuild that dependency. With the current code, this isn't what
    happens. The code finds the sstate for do_populate_sysroot missing,
    this makes the task "uncovered" and this in turn makes it unskippable.
    
    The example I found with this was avahi-ui, where it would trigger
    a build of libdaemon to obtain its populate_sysroot.
    
    Since this behaviour seems completely incorrect, revert the older patch
    and we'll address any issues that crop up as a result.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	5	lib/bb/runqueue.py

commit 24e20db55c2933de5e58ca754b8fd5b624f47820
Author: Elliot Smith <elliot.smith@intel.com>
Date:   2016-01-18 15:45:10 +0200

    toastergui: make artifact download more robust
    
    When an artifact download is requested, Toaster goes through a
    convoluted series of conditions to decide which file to push
    to the response. In the case of build artifact downloads for
    command line builds, this caused an ugly exception, as command
    line builds don't have a build request.
    
    To simplify and catch more corner cases, remove the code which
    fetches files via the build environment (we only support the local
    build environment anyway). Then push all requests along a single
    path, catching any missing file errors, missing object errors
    or poorly-formed URLs in a single except clause which always returns
    a valid response.
    
    Also modify the text on the "unavailable artifact" page so it
    says that the artifact doesn't exist, rather than it "no longer"
    exists (exceptions may occur because an invalid artifact was
    requested, rather than an artifact which was removed).
    
    [YOCTO #7603]
    
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

6	7	lib/toaster/toastergui/templates/unavailable_artifact.html
41	56	lib/toaster/toastergui/views.py

commit 69f2b2bc373ce114609600b59a6b6ccef20771c9
Author: Elliot Smith <elliot.smith@intel.com>
Date:   2016-01-18 15:45:09 +0200

    toasterui: log OSErrorException metadata events
    
    OSErrors occurring in toaster.bbclass are converted to
    OSErrorException metadata events. They were then being swallowed
    as unprocessed events by toasterui, which made them difficult
    to spot.
    
    Explicitly catch OSErrorException events and log them so they
    are easier to spot and debug.
    
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	0	lib/bb/ui/toasterui.py

commit d0276a831bb8cffd42c8367895633eaa1fa1ed30
Author: Elliot Smith <elliot.smith@intel.com>
Date:   2016-01-18 15:45:08 +0200

    toasterui: listen for bb.event.MetadataEvent
    
    The event mask for toasterui doesn't include MetadataEvents.
    This means that we're missing the ArtifactFileSize event
    (among others), which is the one we use to populate the SDK
    artifact table.
    
    Add that event type to the toasterui event mask so we can
    record SDK artifacts as they are created.
    
    [YOCTO #7603]
    
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	1	lib/bb/ui/toasterui.py

commit b64a0adc1efd72aa4d46df3e043dd14543abae3d
Author: Ed Bartosh <ed.bartosh@linux.intel.com>
Date:   2016-01-15 16:35:03 +0000

    toaster: increase timeout
    
    Sometimes Toaster connection to the bitbake server fails with
    this error in the log:
       ERROR: Could not connect to server 0.0.0.0:46572
       : Could not register UI event handler
    It happens more often on slow machines.
    
    Increasing timeout after restarting bitbake should fix this issue.
    
    [YOCTO #8776]
    
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	bin/toaster

commit 2c97f3a5c6ae37de910deb90390c5b856a600c5f
Author: Elliot Smith <elliot.smith@intel.com>
Date:   2016-01-15 13:01:06 +0200

    toastergui: code formatting and clean-up
    
    Minor fixes to code formatting and small improvements from
    code review.
    
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	9	lib/toaster/orm/models.py
3	1	lib/toaster/toastergui/tables.py
2	3	lib/toaster/toastergui/views.py

commit 85efa9530fa6181855e051bfd14de1c15db9c3b7
Author: Elliot Smith <elliot.smith@intel.com>
Date:   2016-01-15 13:01:05 +0200

    toaster tests: fix Django tests for new ToasterTable pages
    
    The Django command-line tests can no longer test the content
    of the projects/, builds/ and projectbuilds/ pages, as
    ToasterTable pages are populated by JavaScript.
    
    Fix/remove affected tests by converting them to tests on the
    JSON returned by the ToasterTable.
    
    [YOCTO #8738]
    
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

180	85	lib/toaster/toastergui/tests.py

commit 2b5a13afb068c85466436914d8d4ac3b31bc5c02
Author: Elliot Smith <elliot.smith@intel.com>
Date:   2016-01-15 13:01:04 +0200

    toastergui: remove unused views and template code
    
    The code in views.py for setting up the template context for
    old non-ToasterTable views is no longer necessary, as this
    is now implemented in tables.py.
    
    The template files for these views have also been removed.
    
    [YOCTO #8738]
    
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

0	125	lib/toaster/toastergui/templates/builds.html
0	92	lib/toaster/toastergui/templates/projects.html
0	430	lib/toaster/toastergui/views.py

commit 9be7c5c18b325f6ed40bc431ac408db242007eb1
Author: Elliot Smith <elliot.smith@intel.com>
Date:   2016-01-15 13:01:03 +0200

    toastergui: fix error and warning counts for builds
    
    The error and warning counts displayed for builds were counts of
    the errors and warnings objects associated with a build. Because these
    values were being derived on the fly, it was not possible to sort by
    them.
    
    Previously, the 3rd party django-aggregate-if library was used to
    add aggregate fields to Build objects and should then have been
    used to populate the "all builds" and "project builds" tables. However,
    at some point the templates had changed so that the error and warning
    counts were coming from the properties on the Build model and not from
    these aggregates. This meant that it was not possible to sort by these
    fields.
    
    Django 1.8 supports conditional aggregates in annotation fields on
    querysets. This means we can remove django-aggregate-if, use the new Django
    1.8 feature to derive errors_no and warnings_no fields as annotations,
    then use those annotation fields in the templates. This makes the "builds"
    tables sortable again.
    
    [YOCTO #8738]
    
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

0	10	lib/toaster/contrib/django-aggregate-if-master/.gitignore
0	50	lib/toaster/contrib/django-aggregate-if-master/.travis.yml
0	21	lib/toaster/contrib/django-aggregate-if-master/LICENSE
0	156	lib/toaster/contrib/django-aggregate-if-master/README.rst
0	164	lib/toaster/contrib/django-aggregate-if-master/aggregate_if.py
0	48	lib/toaster/contrib/django-aggregate-if-master/runtests.py
0	33	lib/toaster/contrib/django-aggregate-if-master/setup.py
0	198	lib/toaster/contrib/django-aggregate-if-master/tox.ini
27	13	lib/toaster/toastergui/tables.py
0	9	lib/toaster/toastermain/settings.py

commit 168184b28165d7aa354b9092b5986f91c58d550d
Author: Elliot Smith <elliot.smith@intel.com>
Date:   2016-01-15 13:01:02 +0200

    toastergui: make "Apply" button state depend on filter range
    
    If a range filter action had an empty from/to field, the range
    filter could still be applied. This was confusing, as an invalid
    filter range caused all records to display, even though a filter
    appeared to have been applied (by the highlighted state of
    the filter button).
    
    Change the state of the "Apply" button, disabling it if the radio
    button for a range filter action is selected but the range is
    incomplete (from or to field is empty).
    
    When a non-range filter is selected, the "Apply" button always
    enable the "Apply" button.
    
    [YOCTO #8738]
    
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

56	21	lib/toaster/toastergui/static/js/table.js
3	1	lib/toaster/toastergui/templates/toastertable-filter.html

commit b7f7ff095c9c4c922e608f776713f17acc1f150d
Author: Elliot Smith <elliot.smith@intel.com>
Date:   2016-01-15 13:01:01 +0200

    toastergui: mute label for filter actions with no records
    
    The radio button for a filter action is disabled if that filter
    action has no associated records. However, the label retains
    the normal font styling, so it's unclear that the action is
    not available.
    
    Add the "muted" class to the label for a filter action (and still
    disable its radio button) if it has no records associated with it.
    
    [YOCTO #8738]
    
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

5	2	lib/toaster/toastergui/static/js/table.js

commit be3982c71703eaa51e7f3352e0cb5b3af11c9ead
Author: Elliot Smith <elliot.smith@intel.com>
Date:   2016-01-15 13:01:00 +0200

    toastergui: set default visible and hideable columns
    
    Incorrect columns were shown by default in the "all builds",
    "project builds" and "all projects" pages.
    
    Set the "hidden" property on columns in these tables to hide the
    correct columns.
    
    Add a set_column_hidden() method to ToasterTable so that the
    "hidden" property can be overridden for the machines column
    in the project builds page (it shares a superclass with
    all builds).
    
    Make the time column on all builds page hideable.
    
    [YOCTO #8738]
    
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

20	3	lib/toaster/toastergui/tables.py
18	0	lib/toaster/toastergui/widgets.py

commit fa6229d4edf5904ccaa9dc323d0ab2318d1ef314
Author: Elliot Smith <elliot.smith@intel.com>
Date:   2016-01-15 13:00:59 +0200

    toastergui: serialise decimals correctly
    
    The conversion of some ToasterTable Build object querysets to
    JSON caused a serialisation error. This is because one of the
    fields in the queryset was of type decimal.Decimal, and our
    serialiser didn't know what to do with it.
    
    Add a clause to check for decimal fields and serialise them
    so that correct JSON can be generated.
    
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	0	lib/toaster/toastergui/views.py

commit 59379bf6467029223045c5ebef868729d8e02c86
Author: Elliot Smith <elliot.smith@intel.com>
Date:   2016-01-15 13:00:58 +0200

    toastergui: streamline construction of filter objects
    
    In line with comments from review, remove the QuerysetFilter
    class (redundant) and convert ProjectFilters into a class
    with static methods.
    
    [YOCTO #8738]
    
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

0	24	lib/toaster/toastergui/querysetfilter.py
15	23	lib/toaster/toastergui/tablefilter.py
17	18	lib/toaster/toastergui/tables.py
0	1	lib/toaster/toastergui/widgets.py

commit 1a3038cf8d9b32532f1fe92cd3472b4473ffc0c4
Author: Elliot Smith <elliot.smith@intel.com>
Date:   2016-01-15 13:00:57 +0200

    toastergui: ensure filter_value updates
    
    Clicking on the radio button for a date range filter action
    populates the from and to fields for that action if they are empty.
    
    However, because this doesn't fire "change" events, clicking on
    the radio button doesn't update the filter_value hidden field. This
    means that the date range action's filter_value parameter isn't
    set correctly when the filter popup is submitted.
    
    Manually call the changeHandler() to set the filter_value whenever
    the radio for a date range filter is clicked.
    
    [YOCTO #8738]
    
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

18	14	lib/toaster/toastergui/static/js/table.js

commit 151bc20daf51e0ab8baf11ea29244b7fec1f8a22
Author: Elliot Smith <elliot.smith@intel.com>
Date:   2016-01-15 13:00:56 +0200

    toastergui: don't hide all elements with .col class
    
    Disabling the "project" column in a ToasterTable for builds
    causes the recent builds area to be hidden. This is because
    the column hiding code hides all elements with a class matching
    ".<column>", regardless of where they occur on the page; and
    the recent builds area was using the ".project-name" class,
    which means it is included in the set of elements which are hidden.
    
    Scope the element search to the table so that only elements
    within the table are hidden or shown.
    
    [YOCTO #8792]
    
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

4	4	lib/toaster/toastergui/static/js/table.js

commit 87bcfb740dd2d9944e35a2a1f71cbf8ff3b266e9
Author: Elliot Smith <elliot.smith@intel.com>
Date:   2016-01-15 13:00:55 +0200

    toastergui: convert project builds page to ToasterTable
    
    Use the all builds ToasterTable as the basis for the project builds
    ToasterTable.
    
    [YOCTO #8738]
    
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

9	0	lib/toaster/toastergui/static/js/projecttopbar.js
8	5	lib/toaster/toastergui/static/js/table.js
151	33	lib/toaster/toastergui/tables.py
1	0	lib/toaster/toastergui/templates/baseprojectpage.html
1	1	lib/toaster/toastergui/templates/mrb_section.html
56	0	lib/toaster/toastergui/templates/projectbuilds-toastertable.html
4	2	lib/toaster/toastergui/urls.py
9	7	lib/toaster/toastergui/views.py
0	1	lib/toaster/toastergui/widgets.py

commit f17cfa009e58833e0e55884fa04de8abd522b6bc
Author: Elliot Smith <elliot.smith@intel.com>
Date:   2016-01-15 13:00:54 +0200

    toastergui: implement "today" and "yesterday" filters
    
    Add the "today" and "yesterday" filters to the started_on
    and completed_on columns in the builds table.
    
    During this work, some minor adjustments were made to the
    behaviour of the builds table:
    
    * Amend filter action variable names so they're more succinct.
    * Retain order in which actions are added to a filter, as this
    ordering is used in the UI when displaying the filter actions.
    * Always show the table chrome, otherwise it's not possible
    to edit the columns shown until there are 10 or more results.
    * Because date range searches may return no results, make sure
    that the search bar and "show all results" link are visible
    when the query returns no results.
    
    [YOCTO #8738]
    
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

0	4	lib/toaster/toastergui/querysetfilter.py
31	25	lib/toaster/toastergui/static/js/table.js
116	24	lib/toaster/toastergui/tablefilter.py
59	28	lib/toaster/toastergui/tables.py
1	1	lib/toaster/toastergui/templates/builds-toastertable.html
5	2	lib/toaster/toastergui/templates/toastertable.html

commit d47c32e88c2d4a423f4d94d49759e557f425a539
Author: Elliot Smith <elliot.smith@intel.com>
Date:   2016-01-15 13:00:53 +0200

    toastergui: implement date range filters for builds
    
    Implement the completed_on and started_on filtering for
    builds.
    
    Also separate the name of a filter ("filter" in the querystring)
    from its value ("filter_value" in the querystring). This enables
    filtering to be defined in the querystring more intuitively,
    and also makes it easier to add other types of filter (e.g.
    by day).
    
    [YOCTO #8738]
    
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	1	lib/toaster/toastergui/querysetfilter.py
165	31	lib/toaster/toastergui/static/js/table.js
101	12	lib/toaster/toastergui/tablefilter.py
37	1	lib/toaster/toastergui/tables.py
9	23	lib/toaster/toastergui/templates/builds-toastertable.html
16	16	lib/toaster/toastergui/widgets.py

commit d6df4545bd134a23c9bd3cd1ba3b61ddb26545e4
Author: Elliot Smith <elliot.smith@intel.com>
Date:   2016-01-15 13:00:52 +0200

    toastergui: show recent builds on all builds page
    
    The recent builds section was disabled while converting the
    all builds page to ToasterTable.
    
    Re-enable the recent builds area and add the data it requires
    to the ToasterTable context.
    
    [YOCTO #8738]
    
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

17	1	lib/toaster/toastergui/tables.py
5	5	lib/toaster/toastergui/templates/builds-toastertable.html
1	1	lib/toaster/toastergui/templates/mrb_section.html

commit 7347ad0d4baace593751b44a86ab8e11a04a02b6
Author: Elliot Smith <elliot.smith@intel.com>
Date:   2016-01-15 13:00:51 +0200

    toastergui: switch off filter highlights when inactive
    
    In ToasterTables with multiple columns which allow filtering
    (e.g. all builds), selecting one filter, then a second filter
    (e.g. selecting "failed builds" then "outcome" for all builds),
    would result in both filters being highlighted at the same time.
    
    Fix this by removing the "active" highlight on all column filter
    buttons when a new filter value is submitted (via the filter modal).
    
    NB to enable this, added a data-filter-on attribute to all
    column filter buttons to make them easy to select.
    
    [YOCTO #8738]
    
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

7	1	lib/toaster/toastergui/static/js/table.js

commit 94031bb30bdaf665d0c8c68b591fcb7a17b6674d
Author: Elliot Smith <elliot.smith@intel.com>
Date:   2016-01-15 13:00:50 +0200

    toastergui: refactor ToasterTable filtering
    
    The filter code for ToasterTable was difficult to follow
    and inflexible (not allowing different types of filter, for example).
    
    Refactor to a set of filter classes to make the structure cleaner
    and provide the flexibility needed for other filter types
    (e.g. date range filter).
    
    [YOCTO #8738]
    
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

5	2	lib/toaster/toastergui/querysetfilter.py
59	21	lib/toaster/toastergui/static/js/table.js
119	0	lib/toaster/toastergui/tablefilter.py
87	45	lib/toaster/toastergui/tables.py
40	50	lib/toaster/toastergui/widgets.py

commit e0590fc8103afeb4c5e613a826057555c8193d59
Author: Elliot Smith <elliot.smith@intel.com>
Date:   2016-01-15 13:00:49 +0200

    toastergui: convert all builds page to ToasterTable
    
    For better long-term maintainability, use ToasterTable instead
    of Django template and view code to display the all builds page.
    
    NB the builds.html template has been left in, as this will
    otherwise cause conflicts when merging the new theme.
    
    [YOCTO #8738]
    
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

31	1	lib/toaster/orm/models.py
24	0	lib/toaster/toastergui/querysetfilter.py
302	41	lib/toaster/toastergui/tables.py
62	0	lib/toaster/toastergui/templates/builds-toastertable.html
4	1	lib/toaster/toastergui/urls.py
0	32	lib/toaster/toastergui/views.py
11	5	lib/toaster/toastergui/widgets.py

commit 1f3ff01fed0b4de8721191f108033ad044cdc26a
Author: Elliot Smith <elliot.smith@intel.com>
Date:   2016-01-15 13:00:48 +0200

    toastergui: use event delegates for hover help elements
    
    libtoaster.js binds to hover help elements via their hover() and
    mouseout() methods. However, any elements added to the DOM after
    libtoaster has initialised will not have these bindings added.
    This causes a problem for ToasterTables which have hover-help
    elements (e.g. the builds/ table).
    
    Use the on() method instead. This uses event delegation to bind
    a handler to any th or td elements already in the DOM, or
    which will be added to the DOM in future. ToasterTables can
    now reconstruct the table DOM and still have the correct handlers
    attached once the table is done.
    
    [YOCTO #8738]
    
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

4	2	lib/toaster/toastergui/static/js/libtoaster.js

commit ebe7831ef65e78a9d100f29a63311518577fc838
Author: Elliot Smith <elliot.smith@intel.com>
Date:   2016-01-15 13:00:47 +0200

    toastergui: switch projects/ view to ToasterTable
    
    Remove the old projects page and replace with the new
    ToasterTable-based version.
    
    NB although the projects.html template is no longer required,
    it's been left in as there will be changes applied to it for
    the new theme. These changes will have to then be transferred
    from the projects.html template to projects-toastertable.html.
    
    Similarly, the code for the projects page in views.py has been
    retained.
    
    [YOCTO #8738]
    
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/toaster/toastergui/tables.py
2	7	lib/toaster/toastergui/urls.py
20	4	lib/toaster/toastergui/views.py

commit dd1c509696b8ab5e593cc64637060a58e95fcd1f
Author: Elliot Smith <elliot.smith@intel.com>
Date:   2016-01-15 13:00:46 +0200

    toaster: check inferred file suffixes against list of known types
    
    The algorithm for finding the suffix for image files produced by
    the build doesn't reference a list of known file suffixes, so
    could be prone to error.
    
    Modify how file suffixes are parsed from the file path so that
    they are compared against a list of known types; if this fails,
    use the part of the basename of the file path after the first
    '.' character.
    
    Also rationalise the places in the views code where we
    extract the file name extensions for builds, so they both use
    the same algorithm (before, the same code was duplicated in
    two places).
    
    [YOCTO #8417]
    
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

65	3	lib/toaster/orm/models.py
4	4	lib/toaster/toastergui/tables.py
4	34	lib/toaster/toastergui/views.py

commit c2f20232077917552623fd0726d0820e50b04cae
Author: Elliot Smith <elliot.smith@intel.com>
Date:   2016-01-15 13:00:45 +0200

    toaster: move image file suffix list to model
    
    Image file suffixes are used in the project configuration page to
    show a list of available image file types. This list is stored
    as a function in the views code.
    
    However, this list is also needed when parsing image file paths,
    so that the suffixes can be shown in the "all builds" and "project
    builds" tables.
    
    Move the list of valid image file suffixes to the Target_Image_File
    class to make is accessible in other places where it may be needed.
    
    [YOCTO #8738]
    
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

9	0	lib/toaster/orm/models.py
1	6	lib/toaster/toastergui/views.py

commit df56a35bc71639457329c4b58839976c5ee40106
Author: Elliot Smith <elliot.smith@intel.com>
Date:   2016-01-15 13:00:44 +0200

    toastergui: use ToasterTable for projects page
    
    The projects page uses the old approach for showing tables,
    which means a template for each table. This means that applying
    changes to ToasterTable (which is used for most tables) has
    no effect on the layout, styling and behaviour for these older
    tables, and requires additional duplicated effort.
    
    Move the projects page to use ToasterTable instead, to remove
    the duplication of effort.
    
    [YOCTO #8738]
    
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

223	3	lib/toaster/toastergui/tables.py
36	0	lib/toaster/toastergui/templates/projects-toastertable.html
6	0	lib/toaster/toastergui/urls.py

commit 614ad800ae523250fa77899d897ea1a77866f822
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2016-01-15 15:01:41 +0000

    Revert "fetch/git: Change to use clearer ssh url syntax for broken servers"
    
    This reverts commit 4193e99adce8e88f12ac88d7578ad39575f7e346.
    
    It seems the underlying issue was caused by ":" in the url which isn't
    supported. The patch was therefore incorrect.

0	4	lib/bb/fetch2/git.py

commit 2c91b77d62efa5c178e364a418b71eca83b5cacd
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2016-01-11 23:30:19 +0000

    Revert "fetch2/local.py: avoid using PREMIRROR"
    
    This reverts commit e130dca85bac82bd4d88f94a6bf9fe36e8ad4d7c.
    
    This is in fact a valid use case, for example the sstate.bbclass code
    sets up SSTATE_MIRRORS as PREMIRRORS. Its quite common to map those
    file:// urls to remote http:// urls and with the above change, this
    no longer works.

0	5	lib/bb/fetch2/local.py

commit e6fca8480731ce817df9bee61438347a5e3d3017
Author: Kristian Amlie <kristian.amlie@mender.io>
Date:   2016-01-11 10:32:28 +0100

    fetch2/git.py: Add missing "errno" module import.
    
    This goes undetected most of the time, but when updating a repository,
    if the ud.fullmirror file is not present, you end up getting an
    exception instead of carrying on because the errno module is not
    loaded (specifically "if exc.errno != errno.ENOENT").
    
    Signed-off-by: Kristian Amlie <kristian.amlie@mender.io>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	0	lib/bb/fetch2/git.py

commit 7b4c42b315d4a26dd8f2ceb874a94737bf9f183e
Author: Chen Qi <Qi.Chen@windriver.com>
Date:   2016-01-11 18:27:26 +0800

    bitbake: clean up stamp-base related codes
    
    The 'stamp-base' and 'stamp-base-clean' related codes are no longer useful,
    clean them up.
    
    [YOCTO #8468]
    
    Signed-off-by: Chen Qi <Qi.Chen@windriver.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

4	4	lib/bb/build.py
0	6	lib/bb/cache.py

commit f8bcb0a1e3b008b71c9a7cd21f76d0906f2d8068
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2016-01-10 18:01:01 +0000

    runqueue: Fix setscene task dependencies
    
    Debugging suggests that setscene tasks are being a little greedy about their
    dependencies, for example, lsof is insisting that gcc-runtime's do_package
    is installed. If it isn't, its requiring gcc to rebuild.
    
    If gcc-runtime do_package_write_xxx and do_packagedata is available, there
    is no reason do_package should be needed.
    
    The reason this is happening appears to be from the batching up of task
    dependencies code, rather than setscene tasks stopping when passing over
    a setscene task, they were being carried forward. This patch fixes it
    so the data is 'zeroed' when passing over a setscene task boundary,
    which gives the dependency graph that is expected.
    
    After this patch, lsof will rebuild quite happily without
    gcc-runtime:do_package being present, as expected. This should lead to
    less dependencies being installed for builds from sstate and generally
    better performance in general.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	0	lib/bb/runqueue.py

commit 5207abdf58019271bf92bff4bcce3911b8691508
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2016-01-08 11:26:19 +0000

    toaster: settings Add uid to the toaster cache dir
    
    Make the default toaster cache dir unique to the user running
    toaster. If we have multiple users running toaster we previously
    got a permission denied exception on saving a cache file.
    
    [YOCTO #8782]
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/toaster/toastermain/settings.py

commit c7bb98e2e2111790ded86087b13c8b49462d6b75
Author: Ed Bartosh <ed.bartosh@linux.intel.com>
Date:   2016-01-08 11:17:22 +0000

    toaster: show 'satisfied via' text for reverse deps
    
    Showed '<dependency> satisfied via <provider>' text and
    help tooltip for the reverse build dependencies provided
    through 'PROVIDES' in the 'Reverse build dependencies' tab.
    
    [YOCTO #6169]
    
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

8	1	lib/toaster/toastergui/templates/recipe.html

commit de77e338fe70341fe98561e2e40b534f5c88db10
Author: Ed Bartosh <ed.bartosh@linux.intel.com>
Date:   2016-01-08 11:17:21 +0000

    toaster: show 'satisfied via' text for build deps
    
    Showed '<dependency> satisfied via <provider>' text and
    help tooltip for the build dependencies provided through
    'PROVIDES' in the 'Build dependencies' tab.
    
    [YOCTO #6169]
    
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

8	1	lib/toaster/toastergui/templates/recipe.html

commit 60318c9a049292bd33322d8446a629d778337e8a
Author: Ed Bartosh <ed.bartosh@linux.intel.com>
Date:   2016-01-08 11:17:20 +0000

    toaster: show list of provides for the recipe
    
    Showed list of names that recipe provides.
    
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

10	0	lib/toaster/toastergui/templates/recipe.html

commit 336ddc8df611d4c8f1c3d3a06d0a85bb544c38bc
Author: Ed Bartosh <ed.bartosh@linux.intel.com>
Date:   2016-01-08 11:17:19 +0000

    buildinfohelper: add provides info to the db
    
    Added new entries to Provides model and link them to
    Recipe_Dependency using 'via' field.
    
    This data will be used by Toaster UI to show 'Provides:'
    information for the recipes.
    
    [YOCTO #6169]
    
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

8	3	lib/bb/ui/buildinfohelper.py

commit e45fff6314741d46e2549b2f72ed380cbbb95593
Author: Ed Bartosh <ed.bartosh@linux.intel.com>
Date:   2016-01-08 11:17:18 +0000

    toaster: add Provider model
    
    Added new model Provider and a foreign key 'via' to link
    Recipe_Dependency to it.
    
    [YOCTO #6169]
    
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

27	0	lib/toaster/orm/migrations/0002_auto_20151223_1528.py
5	0	lib/toaster/orm/models.py

commit 85c416ca338c886db6e79651e44727482df9fb07
Author: Ed Bartosh <ed.bartosh@linux.intel.com>
Date:   2016-01-08 11:17:17 +0000

    buildinfohelper: use providermap
    
    Used providermap in store_dependency_information function
    to find virtual dependencies. This should fix annoying
    warnings "stpd: KeyError saving recipe dependency"
    
    [YOCTO #6169]
    
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

16	8	lib/bb/ui/buildinfohelper.py

commit d3e07368549f30265f59846a260efa8230a225ca
Author: Ed Bartosh <ed.bartosh@linux.intel.com>
Date:   2016-01-08 11:17:16 +0000

    cooker: add providermap to dep_tree
    
    Added providermap information to the result of buildDependTree API.
    
    This will be used by Toaster to map virtual dependencies to recipes.
    
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

7	0	lib/bb/cooker.py

commit df5a1392d6f91ccb44a99721c7d847da242121bb
Author: Ed Bartosh <ed.bartosh@linux.intel.com>
Date:   2016-01-08 11:17:15 +0000

    taskdata: refactor get_providermap
    
    Added optional parameter 'prefix' to filter out names that
    don't start with specified prefix. Changed existing call
    of get_providermap according to changed API.
    
    Optimized the code: got rid of extra loop and temporary
    list variable virts.
    
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/runqueue.py
7	10	lib/bb/taskdata.py

commit e4a2aafa1650a227a04d92a8a0b31efaed2c310e
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2016-01-08 18:25:55 +0000

    main/runqueue: Add --setscene-only option to bitbake
    
    Its turning out that we really need a way to have bitbake just run
    the setscene tasks but not any real tasks, particularly for SDK
    operations.
    
    Add an option for this since its pretty straight forward. This allows
    various nasty workarounds in OE-Core to be removed.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	0	lib/bb/cookerdata.py
3	0	lib/bb/main.py
6	3	lib/bb/runqueue.py

commit 4193e99adce8e88f12ac88d7578ad39575f7e346
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2016-01-07 13:18:52 +0000

    fetch/git: Change to use clearer ssh url syntax for broken servers
    
    Some servers, e.g. bitbucket.org can't cope with ssh:// as part of
    the git url syntax. git itself is happy enough with this but you
    get server side errors when using it.
    
    This changes the git fetcher to use the more common ssh url format
    which also means we need a : before the path.
    
    Seems a shame to have to do this due to broken servers however
    it should be safe enough since this other form is the one most people
    use on the commandline so it should be safe enough.
    
    [YOCTO #8864]
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

4	0	lib/bb/fetch2/git.py

commit 6f84cf4bd77f35fcd07e0b2f5149f1d6866a414d
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2016-01-07 13:18:20 +0000

    knotty: Use non-interactive mode as fallback for dumb terminals
    
    TERM=dumb bitbake X
    
    shows no output for task status which is suboptimal. Use the non-interactive
    mode if the terminal doesn't support what we need for interactive mode giving
    a better user experience. Also print a note to the console to say this has
    happened.
    
    [YOCTO #8768]
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

4	0	lib/bb/ui/knotty.py

commit 6bef981488ec94b46dbe3797acfecf9c4b6ecbbc
Author: Ross Burton <ross.burton@intel.com>
Date:   2015-12-18 12:23:14 +0000

    cooker: fix findFilesMatchingInDir documentation
    
    The documentation for findFilesMatchingInDir() was inconsistant with the
    implementation: the regex was escaped before searching so effectively it's a
    pure textual substring, and the machine example was broken.
    
    Signed-off-by: Ross Burton <ross.burton@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	4	lib/bb/cooker.py

commit 3369072efb653339da8dbd1ca864ff8e1ff899ca
Author: Ross Burton <ross.burton@intel.com>
Date:   2015-12-09 11:49:46 +0000

    cooker: use in instead of count
    
    No point counting all instances when we just want to know if there's any or not.
    
    Signed-off-by: Ross Burton <ross.burton@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/cooker.py

commit 547128731e62b36d2271c4390b3fee2b16c535dc
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2016-01-05 23:01:25 +0000

    ast: Add filename/lineno to mapped functions
    
    Where we add in mappings for EXPORT_FUNCTIONS, add dummy filename
    and lineno data so ensure the assumption that all python functions
    have this is correct.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	0	lib/bb/parse/ast.py

commit 0c5a9349f797d05c282c2ada1893e187e05f0576
Author: Ed Bartosh <ed.bartosh@linux.intel.com>
Date:   2016-01-05 15:45:38 +0200

    main: kill server without queue setup
    
    Setup of event queue includes registering of UI handler.
    This operation can fail when cooker is busy. However, there is
    no need in registering UI handler for terminating the server.
    
    Moved the call of connection.terminateServer before setting up
    of the event queue. This should make terminating server to work
    more reliably as it doesn't depend on setting up the event queue
    and registering UI handler anymore.
    
    This should also help Toaster backend to restart bitbake server
    and observer without getting "Could not register UI event handler"
    errors.
    
    [YOCTO #8776]
    
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

7	6	lib/bb/main.py

commit 4429871da76d6bd29e023ff42740fe7daa6b40fa
Author: Ed Bartosh <ed.bartosh@linux.intel.com>
Date:   2016-01-05 15:45:37 +0200

    xmplrpc: split connect method
    
    Current code in connect method sets up event queue, which requires
    registering UI handler. This functionality may not be needed for
    some operations, e.g. for server termination.
    
    Moved functionality of setting up event queue in from 'connect'
    method to 'setupEventQueue' in BitBakeXMLRPCServerConnection class.
    
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	0	lib/bb/main.py
3	0	lib/bb/server/__init__.py
2	2	lib/bb/server/xmlrpc.py

commit 4e1e497c8432536b3522295e5b1284844ccea056
Author: Ed Bartosh <ed.bartosh@linux.intel.com>
Date:   2016-01-04 11:26:34 +0200

    uievent: refactor retry loop
    
    Replaced 'while' loop with 'for' loop.
    Made the code more compact and hopefully more understandable.
    
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

6	9	lib/bb/ui/uievent.py

commit 8d505ec8913a7d51de48b4f52bb64c5d6a0bb08e
Author: Ed Bartosh <ed.bartosh@linux.intel.com>
Date:   2015-12-31 18:42:15 +0200

    uievent: get rid of EventHandler attribute
    
    This attribute was introduced by mistake. EventHandle is used in the
    code for the same purpose.
    
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	2	lib/bb/ui/uievent.py

commit 07de1ca7d57dcd0cc37406feae2949da12a3fa7a
Author: Ed Bartosh <ed.bartosh@linux.intel.com>
Date:   2015-12-31 18:42:14 +0200

    uievent: add error to registerEventHandler return
    
    Current code throws Exception("Could not register UI event handler")
    if event handler can't be registered. The real reason of this is that
    cooker is in busy state. Error message lacks information about this.
    
    Added error message to the return value of registerEventHandler.
    Included returned error message into the log message and exception
    text.
    
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	2	lib/bb/server/xmlrpc.py
5	3	lib/bb/ui/uievent.py

commit 9ec6379b27d210214d0b3f2e55962f721b7f5f51
Author: Ed Bartosh <ed.bartosh@linux.intel.com>
Date:   2015-12-31 18:42:13 +0200

    cooker: add state.get_name method
    
    Added method to convert state code into the human readable name.
    It will be used in logging and error reporting.
    
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

8	0	lib/bb/cooker.py

commit 7120f5bfaae54e91bc95da5667831424724ce613
Author: Juro Bystricky <juro.bystricky@intel.com>
Date:   2016-01-04 10:51:43 -0800

    fetch2/__init__.py: Add support for 7-Zip
    
    7-Zip is a file archiver claiming the highest compression ratio.
    This patch allows using 7-Zip commpressed files in bitbake recipes.
    Two common formats are supported:
    
    SRC_URI = "file://abc.tar.7z"
    SRC_URI = "file://abc.7z"
    
    Signed-off-by: Juro Bystricky <juro.bystricky@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

4	0	lib/bb/fetch2/__init__.py

commit 10256ac3e7be7e691176ecc5d55856d88f1fe940
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2016-01-04 17:34:02 +0000

    utils: Remove double compile from better_compile
    
    Poking around the ast to correct linenumbers works well for runtime failures
    but not for parsing ones. We can use blank linefeeds to correct the line
    numbers instead, with the advantage that we don't need to double compile.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

4	5	lib/bb/utils.py

commit e130dca85bac82bd4d88f94a6bf9fe36e8ad4d7c
Author: Robert Yang <liezhi.yang@windriver.com>
Date:   2016-01-04 02:15:39 -0800

    fetch2/local.py: avoid using PREMIRROR
    
    The PREMIRROR isn't useful for "file://", so avoid using it, this is
    good for searching speed and can reduce useless lines in log.do_fetch.
    
    Signed-off-by: Robert Yang <liezhi.yang@windriver.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

5	0	lib/bb/fetch2/local.py

commit 0194cf0da24dc72dab0612cd54aa5190e6cd92f2
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2016-01-04 17:35:10 +0000

    siggen: Change exception note into a warning
    
    This makes no sense as just a note, its at least a warning and useful
    to get an idea of which codepath is failing.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/siggen.py

commit d49d46533704e8b4404e29abfb5a7383d704c91a
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2016-01-04 17:33:26 +0000

    data: Drop misleading ExpansionError exception
    
    This codepath can be triggered by a python indentation error for example.
    Showing it as an ExpansionError is misleading.
    
    Change the code to add a warning about where the failure came from (in
    particular giving the variable key name that triggered it) but raise the
    proper exception.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	1	lib/bb/data.py

commit 9241eb10847634e34c5ff8767ed8c114f66ff6cf
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2016-01-04 17:32:45 +0000

    cooker: Drop useless parsing exception
    
    The SyntaxError exception simply shows the recipe that failed to parse
    which is pretty useless without the actual exception. We could make it
    print more info, however we can just use one of the more generic handlers
    instead and remove this one.
    
    For a python indentation error, this leads to a much more readable error
    message.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

0	5	lib/bb/cooker.py

commit a4bb753488d322e0e31c31d6377ba780f2f824c4
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2016-01-04 17:31:58 +0000

    data: Pass lineno/filename data from build_dependencies
    
    If parse_python() fails, the output is confusing. Passing in the extra
    file/line data isn't expensive and improves readability significantly.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	2	lib/bb/data.py

commit 5796ed550d127853808f38257f8dcc8c1cf59342
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2016-01-04 17:31:19 +0000

    codeparser: Add support for correct linenumbers
    
    Currently, if there is something like a python indentation error in a
    python function, the linenumbers and even file aren't reported correctly.
    
    This allows lineno and filename parameters to be passed in to correct this.
    
    The lack of a lineno parameter to python's compile() function is worked
    around by using empty linefeeds. Ugly, but effective and with minimal
    performance overhead.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

8	2	lib/bb/codeparser.py

commit 98d7002d1dca4b62042e1589fd5b9b3805d57f7a
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2015-12-20 13:22:19 +0000

    event/utils/methodpool: Add a cache of compiled code objects
    
    With the addition of function line number handling, the overhead of
    the compile functions is no longer negligible. We tend to compile
    the same pieces of code over and over again so wrapping a cache around
    this is beneficial and removes the overhead of line numbered functions.
    
    Life cycle of a cache using a global like this is in theory problematic
    although in reality unlikely to be an issue. It can be dealt with
    if/as/when we deal with the other global caches.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

10	7	lib/bb/event.py
11	0	lib/bb/methodpool.py
6	1	lib/bb/utils.py

commit e0f05871c2a6f1e86ae19ad343c7c6f822ddb67e
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2015-12-20 13:21:14 +0000

    BBHandler: Improve IN_PYTHON_EOF handling
    
    Now we're actively using the line numbers for other thins, having
    magic values like IN_PYTHON_EOF causes problems, in particular, 32
    bit overflow on 32 bit machines.
    
    There is a neater way to signal eof to feeder(), just using an extra
    parameter so use this instead and drop the IN_PYTHON_EOF magic values.
    
    This has the added bonus that line numbers are then correct for
    python functions at the end of files.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

4	14	lib/bb/parse/parse_py/BBHandler.py

commit 0fd04ede3fda6894d97a5ef830b79dbbc9c6cf51
Author: Ed Bartosh <ed.bartosh@linux.intel.com>
Date:   2015-12-17 16:48:56 +0000

    toaster: remove 2 confusing parameters
    
    Removed nobrowser and brbe script parameters as both
    are confusing and nobrowser is not used anywhere.
    
    brbe parameter usage can only be justified if toaster
    doesn't work properly and user has to manually connect
    toaster to running bitbake server. Even in this scenario
    it's very unlikely to achieve as toaster script is not
    designed for this kind of usage.
    
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	11	bin/toaster

commit 627f0d6adcfe281ef0487bf15a35151f1ceff194
Author: Ed Bartosh <ed.bartosh@linux.intel.com>
Date:   2015-12-17 16:48:55 +0000

    toaster: move setting of default values
    
    Set default values of script parameters just before
    they are parsed to increase readability.
    
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

5	6	bin/toaster

commit 0e7812b5512e609ea815db30be1d7caca896ab60
Author: Ed Bartosh <ed.bartosh@linux.intel.com>
Date:   2015-12-17 16:48:54 +0000

    toaster: move startup checks to a better place
    
    Moved addr:port, bitbake.lock and toastermain.pid checks
    to the place where the rest of Toaster starting happens.
    
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

23	26	bin/toaster

commit ead2823e5457c9c4d0321c2191fb99982b282d26
Author: Ed Bartosh <ed.bartosh@linux.intel.com>
Date:   2015-12-17 16:48:53 +0000

    toaster: remove 2 unused functions
    
    Removed check_pidbyfile and notify_chldexit functions from
    toaster script as they're not called in the script.
    
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

0	12	bin/toaster

commit 96e85159905e44533882ad8290b1c9dd252ff3ea
Author: Ed Bartosh <ed.bartosh@linux.intel.com>
Date:   2015-12-17 16:48:52 +0000

    toaster: remove addtoConfiguration function
    
    This function is useless as it's called just once
    and makes code less readable.
    
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

6	11	bin/toaster

commit b4789c9e3093e1ec8e70f67305c88709443578e6
Author: Ed Bartosh <ed.bartosh@linux.intel.com>
Date:   2015-12-17 16:48:51 +0000

    toaster: updated header of the toaster script
    
    Updated GPL information, years of development and
    usage information. Removed outdated information about
    2 ways of starting Toaster.
    
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

7	13	bin/toaster

commit e8e19168ff43b72a2481771e7a40d9d7c155cfd2
Author: Ed Bartosh <ed.bartosh@linux.intel.com>
Date:   2015-12-17 16:48:50 +0000

    toaster: add MANAGE variable
    
    Used MANAGE variable to avoid repeating path to
    manage.py in many places in toaster script.
    
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

7	6	bin/toaster

commit 8b3f0b2c6efa2962d9c16e453f4d2c1af6419c6c
Author: Ed Bartosh <ed.bartosh@linux.intel.com>
Date:   2015-12-17 16:48:49 +0000

    toaster: remove unused variable
    
    Removed unused variable RUNNING from the toaster script.
    
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

0	1	bin/toaster

commit 6d61d7903eb4fb12464bfea54d3a225f99ad394f
Author: Ed Bartosh <ed.bartosh@linux.intel.com>
Date:   2015-12-17 16:48:48 +0000

    toaster: split long lines, add/remove whitespace
    
    Made toaster script more readable by splitting long lines and
    removing and adding whitespace.
    
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

19	12	bin/toaster

commit 8a306ffe5a3642fe833c875362a183096a39f641
Author: Ed Bartosh <ed.bartosh@linux.intel.com>
Date:   2015-12-17 16:48:47 +0000

    toaster: check if address:port is in use
    
    Used new management command checksocket to check if
    Toaster can listen on address:port.
    
    [YOCTO #8775]
    
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

5	0	bin/toaster

commit 0339b90842fd7c878c511b4b89ebcaee9a431bba
Author: Ed Bartosh <ed.bartosh@linux.intel.com>
Date:   2015-12-17 16:48:46 +0000

    toaster: implement checksocket command
    
    Implemented new management command to check if it's
    possible to listen on specified address:port.
    
    [YOCTO #8775]
    
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

69	0	lib/toaster/toastermain/management/commands/checksocket.py

commit d965bcae6cfd268406a3bd1ef77c5bb6c6e1c6d7
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2015-12-18 11:03:20 +0000

    knotty: Improve exception error message
    
    Instead of:
    """
    can only concatenate tuple (not "int") to tuple
    """
    we now see:
    
    """
    Traceback (most recent call last):
      File "/media/build1/poky/bitbake/lib/bb/ui/knotty.py", line 324, in main
        termfilter.updateFooter()
      File "/media/build1/poky/bitbake/lib/bb/ui/knotty.py", line 210, in updateFooter
        lines = 1 + int(len(content) / (self.columns + 1))
    TypeError: can only concatenate tuple (not "int") to tuple
    """
    
    which makes tacking down and fixing the problem much easier.
    
    Also ensure we set an error exit code.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	1	lib/bb/ui/knotty.py

commit 0b77cea2bf5b5f5704e2650fb0332f5d78037781
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2015-12-18 11:02:41 +0000

    knotty: Fix row/column function return value issue
    
    When the row handling was introduced, one of the callbacks was
    missed resulting in:
    
    TypeError: can only concatenate tuple (not "int") to tuple
    
    Fix it.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/ui/knotty.py

commit 30311bbe667e9f22de17fae00ff58da06a7c3e23
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2015-12-17 14:54:55 +0000

    buildinfohelper: Update for buildstats layout change
    
    This updates buildinfo helper for the recent buildstats layout change
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	5	lib/bb/ui/buildinfohelper.py

commit 1732ad65d6c7d67b7d07cb30c074f5016adadbea
Author: Christopher Larson <chris_larson@mentor.com>
Date:   2015-12-10 23:57:23 +0500

    fetch: use orig localpath when calling orig method
    
    When a mirror tarball is fetched, the original fetch method is called, which
    unpacks the mirror tarball. After the original method is called, it checks the
    localpath of the mirror tarball rather than the clone path, which isn't ideal,
    particularly if the mirror tarball was removed due to being out of date. We
    know the original fetch method will do what it needs to do to get its content
    in the form it needs from the mirror tarball, so we can use its localpath
    instead.
    
    Signed-off-by: Christopher Larson <chris_larson@mentor.com>
    Signed-off-by: Awais Belal <awais_belal@mentor.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/fetch2/__init__.py

commit 1d710ed484f68fca0789022dde7ba877b9a894f5
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2015-12-15 17:42:40 +0000

    utils: Improve traceback from better_exec internal errors
    
    If you break the internals of better_exec(), you get a very weird
    error about tb_next not being a method of None. Fix this by checking
    we can step back a trace level.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

4	2	lib/bb/utils.py

commit 1ff860960919ff6f8097138bc68de85bcb5f88b0
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2015-12-15 17:41:12 +0000

    ast/event/utils: Improve tracebacks to include file and line numbers more correctly
    
    Currently bitbake tracebacks can have places where the line numbers are
    inaccurate and filenames may be missing. These changes start to try and
    correct this.
    
    The only way I could find to correct line numbers was to compile as a
    python ast, tweak the line numbers then compile to bytecode. I'm open
    to better ways of doing this if anyone knows of any.
    
    This does mean passing a few more parameters into functions, and putting
    more data into the data store about functions (i.e. their filenames
    and line numbers) but the improvement in debugging is more than worthwhile).
    
    Before:
    ----------------
    ERROR: Execution of event handler 'run_buildstats' failed
    Traceback (most recent call last):
      File "run_buildstats(e)", line 43, in run_buildstats(e=<bb.build.TaskStarted object at 0x7f7b7c57a590>)
    NameError: global name 'notexist' is not defined
    
    ERROR: Build of do_patch failed
    ERROR: Traceback (most recent call last):
      File "/media/build1/poky/bitbake/lib/bb/build.py", line 560, in exec_task
        return _exec_task(fn, task, d, quieterr)
      File "/media/build1/poky/bitbake/lib/bb/build.py", line 497, in _exec_task
        event.fire(TaskStarted(task, logfn, flags, localdata), localdata)
      File "/media/build1/poky/bitbake/lib/bb/event.py", line 170, in fire
        fire_class_handlers(event, d)
      File "/media/build1/poky/bitbake/lib/bb/event.py", line 109, in fire_class_handlers
        execute_handler(name, handler, event, d)
      File "/media/build1/poky/bitbake/lib/bb/event.py", line 81, in execute_handler
        ret = handler(event)
      File "run_buildstats(e)", line 43, in run_buildstats
    NameError: global name 'notexist' is not defined
    
    ----------------
    
    After:
    ----------------
    ERROR: Execution of event handler 'run_buildstats' failed
    Traceback (most recent call last):
      File "/media/build1/poky/meta/classes/buildstats.bbclass", line 143, in run_buildstats(e=<bb.build.TaskStarted object at 0x7efe89284e10>):
             if isinstance(e, bb.build.TaskStarted):
        >        trigger = notexist
                 pn = d.getVar("PN", True)
    NameError: global name 'notexist' is not defined
    
    ERROR: Build of do_package failed
    ERROR: Traceback (most recent call last):
      File "/media/build1/poky/bitbake/lib/bb/build.py", line 560, in exec_task
        return _exec_task(fn, task, d, quieterr)
      File "/media/build1/poky/bitbake/lib/bb/build.py", line 497, in _exec_task
        event.fire(TaskStarted(task, logfn, flags, localdata), localdata)
      File "/media/build1/poky/bitbake/lib/bb/event.py", line 170, in fire
        fire_class_handlers(event, d)
      File "/media/build1/poky/bitbake/lib/bb/event.py", line 109, in fire_class_handlers
        execute_handler(name, handler, event, d)
      File "/media/build1/poky/bitbake/lib/bb/event.py", line 81, in execute_handler
        ret = handler(event)
      File "/media/build1/poky/meta/classes/buildstats.bbclass", line 143, in run_buildstats
        trigger = notexist
    NameError: global name 'notexist' is not defined
    ----------------
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	1	lib/bb/cookerdata.py
8	2	lib/bb/event.py
2	2	lib/bb/methodpool.py
11	5	lib/bb/parse/ast.py
8	4	lib/bb/utils.py

commit 99ccfd411ab3f7baa111f9f3d50fae68816a9a83
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2015-12-15 16:42:18 +0000

    runqueue: Add support for <task>- syntax
    
    It can be useful to run all tasks up to but not including a specific task. The
    main reason this was never added was the lack of a good syntax. This patch
    uses the syntax <taskname>- to denote this behaviour which is simple, not
    invasive and fits what we need from good syntax IMO, hence we can add this.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

18	8	lib/bb/runqueue.py

commit 36cc814b64bcf3825ed096ade0b8c590e497259f
Author: Belen Barros Pena <belen.barros.pena@intel.com>
Date:   2015-12-14 22:50:47 +0000

    toaster: tables Set a default order for the software recipes table
    
    Add default order by recipe name, so that the table content is sorted
    when the page loads.
    
    [YOCTO #8791]
    
    Signed-off-by: Belen Barros Pena <belen.barros.pena@intel.com>
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	0	lib/toaster/toastergui/tables.py

commit 0fbdaa41cd5745c26d996a3f7a734ae3612657d5
Author: Mihail Stanciu <stanciux.mihail@intel.com>
Date:   2015-12-11 10:01:59 +0000

    toaster: tests Remove symlinks from toasteruitest folder
    
    Remove symlinks in the UI tests folder as they are causing
    problems for bitbake upstream.
    
    [YOCTO #8787]
    
    Signed-off-by: Mihail Stanciu <stanciux.mihail@intel.com>
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

0	1	lib/toaster/contrib/tts/toasteruitest/toaster.sqlite
0	1	lib/toaster/contrib/tts/toasteruitest/toasterconf.json

commit 49976eca4a6e37e7653814c569badcd3e0fb719a
Author: Ed Bartosh <ed.bartosh@linux.intel.com>
Date:   2015-12-09 19:56:43 -0800

    toaster: rework checking of Django version
    
    Checked django version considering information from
    toaster-requirements.txt, e.g. if requirements file contains
    line "Django>1.8,<1.9" toaster should be able to check that
    requirement correctly.
    
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: brian avery <avery.brian@gmail.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

10	14	bin/toaster
1	1	toaster-requirements.txt

commit 175411bf05423b1892c7928c2b928843b39645f0
Author: Ed Bartosh <ed.bartosh@linux.intel.com>
Date:   2015-12-09 19:56:42 -0800

    toaster: monkey patch Queryset
    
    Fixed 'database is locked' issue by monkey patching django QuerySet
    methods.
    
    The actual patching places were found by bisecting Django codebase.
    
    This commit should be removed after Django is fixed if it's fixed
    at all.
    
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: brian avery <avery.brian@gmail.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

30	0	lib/toaster/orm/models.py

commit 9299d7fa88e51294c4fd3f1354874d8253d25aff
Author: Ed Bartosh <ed.bartosh@linux.intel.com>
Date:   2015-12-09 19:56:41 -0800

    toaster: removed extra calls of migrate
    
    One manage.py migrate should be enough to apply migrations for
    all applications. Extra calls just slow toaster script down.
    
    Removed calls of migrate for orm and bldcontrol apps.
    
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: brian avery <avery.brian@gmail.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	19	bin/toaster

commit eb305308ca8f6228c6f52dac1bd941f29c7e5eb6
Author: Ed Bartosh <ed.bartosh@linux.intel.com>
Date:   2015-12-09 19:56:40 -0800

    toaster: work around 'database is locked' error
    
    When sqlite can not cope with a stream of 'insert' queries it throws
    'database is locked' exception.
    
    Wrapping model.save in transaction.atomic context and repeating the call
    should solve this issue.
    
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: brian avery <avery.brian@gmail.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

19	1	lib/toaster/orm/models.py

commit d5ca2bae623db214764324da5c9e4dac6beef760
Author: Ed Bartosh <ed.bartosh@linux.intel.com>
Date:   2015-12-09 19:56:39 -0800

    toaster: fixed format strings
    
    Printing id as a number breaks toaster if object is not saved
    yet as id/pk is None in this case.
    
    Changed format spec to print id as a string in __str__
    and __unicode__ methods of Build, Task and LayerVersion models.
    
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: brian avery <avery.brian@gmail.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	3	lib/toaster/orm/models.py

commit aaa4319ebbb06facb77b4ba936cf3aa2068ff238
Author: Ed Bartosh <ed.bartosh@linux.intel.com>
Date:   2015-12-09 19:56:38 -0800

    toaster: use OneToOneField instead of ForeignKey
    
    Used OneToOneField to reference BuildRequest in BRBitbake model.
    
    Fixed django warning:
    WARNINGS: Setting unique=True on a ForeignKey has the same effect
              as using a OneToOneField.
    
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: brian avery <avery.brian@gmail.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	2	lib/toaster/bldcontrol/bbcontroller.py
6	7	lib/toaster/bldcontrol/localhostbecontroller.py
1	1	lib/toaster/bldcontrol/management/commands/runbuilds.py
1	1	lib/toaster/bldcontrol/models.py
3	3	lib/toaster/bldcontrol/tests.py

commit 89386aab888f806d5aa4a8083c06566e48d9445b
Author: Elliot Smith <elliot.smith@intel.com>
Date:   2015-12-09 19:56:37 -0800

    toaster: Amend regex for MySQL database URLs
    
    The database URL detection doesn't admit a MySQL URL without a port.
    
    As this is a common case (e.g. you would set the HOST to a mysql.sock
    path if pointing at a local MySQL server, with no port setting),
    amend the regex so it will correctly recognise paths, as well
    as HOST:PORT URLs.
    
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: brian avery <avery.brian@gmail.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	1	lib/toaster/toastermain/settings.py

commit 7bca51277314f7c0b6ee0e0d470327dfd60d37fe
Author: Elliot Smith <elliot.smith@intel.com>
Date:   2015-12-09 19:56:36 -0800

    toaster: Remove compatible_layerversions() method
    
    Remove compatible_layerversions() and replace calls to it with
    calls to get_all_compatible_layer_versions().
    
    The sorting done in compatible_layerversions() is not relevant,
    and the code can be simplified by using get_all_compatible_layer_versions().
    
    [YOCTO #8364]
    
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: brian avery <avery.brian@gmail.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	18	lib/toaster/orm/models.py
14	8	lib/toaster/toastergui/views.py

commit 2149ff805424692f9fde29618f2ae0eb99f710d2
Author: Elliot Smith <elliot.smith@intel.com>
Date:   2015-12-09 19:56:35 -0800

    toaster: Check Django version against toaster-requirements.txt
    
    Instead of hard-coding the required Django version in the start
    script, look it up from the toaster-requirements.txt file.
    
    [YOCTO #8364]
    
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: brian avery <avery.brian@gmail.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

8	2	bin/toaster

commit 7ff1630574180e1895b90ecef1ea0caf51304446
Author: Elliot Smith <elliot.smith@intel.com>
Date:   2015-12-09 19:56:34 -0800

    toaster: Update deprecated manage.py command
    
    syncdb is deprecated in favour of migrate in Django 1.7:
    https://docs.djangoproject.com/en/1.8/releases/1.7/#schema-migrations
    
    Update to the "migrate" command in Toaster's start script.
    
    [YOCTO #8364]
    
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: brian avery <avery.brian@gmail.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	bin/toaster

commit 4aa09488bfe65cb365356b320cd9865643bb4fe5
Author: Elliot Smith <elliot.smith@intel.com>
Date:   2015-12-09 19:56:33 -0800

    toaster: Prevent deprecation warnings for RedirectView
    
    The API for RedirectView is due to change in Django 1.9, which
    means that Toaster generates deprecation warnings.
    
    Set the "permanent" flag when constructing RedirectView instances
    to prevent this warning.
    
    [YOCTO #8364]
    
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: brian avery <avery.brian@gmail.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

0	1	lib/toaster/bldcollector/urls.py
1	1	lib/toaster/toastergui/urls.py
1	1	lib/toaster/toastermain/urls.py

commit c4804b84eaaef6a81027bae5cf8bfe63d949c293
Author: Elliot Smith <elliot.smith@intel.com>
Date:   2015-12-09 19:56:32 -0800

    toaster: Update API used to make runbuilds methods run in transactions
    
    runbuilds previously had its methods decorated with
    transaction.commit_on_success, which is now deprecated. transaction.atomic
    is an (almost) drop-in replacement for this, so use this instead.
    
    [YOCTO #8364]
    
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: brian avery <avery.brian@gmail.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	2	lib/toaster/bldcontrol/management/commands/runbuilds.py

commit ef8b399dccd413070e32ce05e013337ea01fa64d
Author: Ed Bartosh <ed.bartosh@linux.intel.com>
Date:   2015-12-09 19:56:31 -0800

    toaster: rename get_query_set -> get_queryset
    
    Renamed get_query_set to get_queryset as get_queryset causes
    deprecation warning in Django 1.7 and is deprecated in Django 1.8
    
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: brian avery <avery.brian@gmail.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

4	4	lib/toaster/orm/models.py

commit 671aaab8cb7c494cd5c7621b45a6f41a203d8bb5
Author: Elliot Smith <elliot.smith@intel.com>
Date:   2015-12-09 19:56:30 -0800

    toaster: Start Django machinery for database access
    
    buildinfohelper, with the new import paths for our Django models
    and Django 1.8, was not getting an active connection to the database.
    
    In buildinfohelper, call django.setup() explicitly to make sure
    that the database connection is ready and models can be queried
    and saved.
    
    [YOCTO #8364]
    
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: brian avery <avery.brian@gmail.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	0	lib/bb/ui/buildinfohelper.py

commit 5fd8e90ab9b81d1bd0d301bc1c91228ecbbea74b
Author: Elliot Smith <elliot.smith@intel.com>
Date:   2015-12-09 19:56:29 -0800

    toaster: Create default project with get_or_create* method
    
    Rather than maintain data as part of the migrations (as was
    done for the default project previously), create the default
    (cli builds) project on demand as a by-product of getting
    it from the database.
    
    [YOCTO #8364]
    
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: brian avery <avery.brian@gmail.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

7	2	lib/bb/ui/buildinfohelper.py
15	8	lib/toaster/orm/models.py
1	1	lib/toaster/toastergui/views.py

commit 070da64cf32c32b5ffc34d611b463c3a3960b419
Author: Ed Bartosh <ed.bartosh@linux.intel.com>
Date:   2015-12-09 19:56:28 -0800

    toaster: Fix references to app paths
    
    The buildinfohelper runs outside of Django, but still needs
    access to our Django app classes.
    
    Previously, the imports referenced the toaster.* app, which worked
    fine. But in Django 1.8, this causes an error about the same
    module being loaded multiple times from different paths.
    
    Change the paths to our Django modules so they don't cause
    this error to be thrown. We can do this as we've added our
    application libraries to sys.path in the buildinfohelper anyway.
    
    [YOCTO #8364]
    
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: brian avery <avery.brian@gmail.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

8	8	lib/bb/ui/buildinfohelper.py

commit 427d8bc02d1aa00a19057602d592d58334514804
Author: Ed Bartosh <ed.bartosh@linux.intel.com>
Date:   2015-11-26 20:04:06 +0200

    toaster: Remove South migrations
    
    South has been deprecated in favour of Django's own migration framework,
    so remove the old South migrations and replace them with Django ones.
    
    [YOCTO #8364]
    
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: brian avery <avery.brian@gmail.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

112	153	lib/toaster/bldcontrol/migrations/0001_initial.py
0	106	lib/toaster/bldcontrol/migrations/0002_auto__add_field_buildenvironment_sourcedir__add_field_buildenvironment.py
0	99	lib/toaster/bldcontrol/migrations/0003_auto__add_field_brlayer_dirpath.py
0	104	lib/toaster/bldcontrol/migrations/0004_loadinitialdata.py
0	112	lib/toaster/bldcontrol/migrations/0005_auto__add_brerror.py
0	128	lib/toaster/bldcontrol/migrations/0006_auto__add_brbitbake.py
0	145	lib/toaster/bldcontrol/migrations/0007_auto__add_field_buildrequest_environment__chg_field_buildrequest_build.py
0	138	lib/toaster/bldcontrol/migrations/0008_brarchive.py
0	180	lib/toaster/bldcontrol/migrations/0009_auto__add_field_brlayer_layer_version.py
529	399	lib/toaster/orm/migrations/0001_initial.py
0	180	lib/toaster/orm/migrations/0002_auto__add_field_build_timespent.py
0	182	lib/toaster/orm/migrations/0003_timespent.py
0	181	lib/toaster/orm/migrations/0004_auto__add_field_package_installed_name.py
0	281	lib/toaster/orm/migrations/0005_auto__add_target_image_file__add_target_file__add_field_variablehistor.py
0	235	lib/toaster/orm/migrations/0006_auto__add_field_target_image_size__add_field_target_license_manifest_p.py
0	214	lib/toaster/orm/migrations/0007_auto__add_helptext.py
0	225	lib/toaster/orm/migrations/0008_auto__chg_field_variablehistory_operation__chg_field_recipe_descriptio.py
0	286	lib/toaster/orm/migrations/0009_auto__add_projectvariable__add_projectlayer__add_projecttarget__add_pr.py
0	257	lib/toaster/orm/migrations/0010_auto__add_field_project_branch__add_field_project_short_description__a.py
0	242	lib/toaster/orm/migrations/0011_auto__add_field_projectlayer_dirpath.py
0	252	lib/toaster/orm/migrations/0012_auto__add_field_projectlayer_optional__add_field_projecttarget_task.py
0	710	lib/toaster/orm/migrations/0013_auto__add_release__add_layerversiondependency__add_unique_layerversion.py
0	336	lib/toaster/orm/migrations/0014_auto__chg_field_package_summary__chg_field_layer_summary__chg_field_re.py
0	336	lib/toaster/orm/migrations/0015_auto__add_field_layer_vcs_web_url__add_field_layer_vcs_web_tree_base_u.py
0	359	lib/toaster/orm/migrations/0016_auto__add_field_release_helptext__chg_field_release_branch__add_index_.py
0	396	lib/toaster/orm/migrations/0017_auto__del_toastersettingdefaultlayer__add_releaselayersourcepriority__.py
0	331	lib/toaster/orm/migrations/0018_auto__add_field_layer_version_project.py
0	342	lib/toaster/orm/migrations/0019_auto__add_buildartifact.py
0	361	lib/toaster/orm/migrations/0020_auto__add_field_layer_version_local_path__add_field_recipe_pathflags__.py
0	371	lib/toaster/orm/migrations/0021_auto__chg_field_build_project__chg_field_project_bitbake_version__chg_.py
0	343	lib/toaster/orm/migrations/0022_auto__add_field_target_task__add_field_layer_version_local_path__del_f.py
0	353	lib/toaster/orm/migrations/0023_auto__del_field_build_warnings_no__del_field_build_errors_no__del_fiel.py
0	338	lib/toaster/orm/migrations/0024_auto__add_field_recipe_is_image.py
0	346	lib/toaster/orm/migrations/0025_auto__add_field_project_is_default.py
0	374	lib/toaster/orm/migrations/0026_set_default_project.py
0	375	lib/toaster/orm/migrations/0027_auto__add_customimagerecipe__add_unique_customimagerecipe_name_project.py
0	345	lib/toaster/orm/migrations/0028_auto__chg_field_logmessage_message.py

commit 648b62654c52116451c6a68a46d7264db3a34d09
Author: Elliot Smith <elliot.smith@intel.com>
Date:   2015-12-09 19:56:26 -0800

    toaster: Upgrade to Django 1.8.6 and remove South
    
    Upgrade Django to long-term support version.
    
    Django now provides its own migration framework, so remove
    requirement for South.
    
    [YOCTO #8364]
    
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: brian avery <avery.brian@gmail.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	6	bin/toaster
0	1	lib/toaster/toastermain/settings.py
1	2	toaster-requirements.txt

commit d7819508dac488a64be3caec88db285cda9599ab
Author: Ed Bartosh <ed.bartosh@linux.intel.com>
Date:   2015-12-09 14:25:49 +0000

    toasterui: process SetBRBE event
    
    Currently BRBE is known to toasterui only when build is
    started. It's passed to it with BuildStarted event. This is
    too late as if build fails earilier than build starts toasterui
    can not inform Toaster about the failure.
    
    Set BRBE as soon as it's provided by Toaster.
    This should make toasterui to be able to inform Toaster
    about early build failures, e.g. failures during recipe parsing.
    
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	0	lib/bb/ui/toasterui.py

commit 8b136fb093020bc912a7b21d5163e1cd5fb12124
Author: Ed Bartosh <ed.bartosh@linux.intel.com>
Date:   2015-12-09 14:25:48 +0000

    toaster: trigger SetBRBE event
    
    Triggered MetadataEvent "SetBRBE" when TOASTER_BRBE variable
    is set on bitbake server. This should make buildinfohelper
    aware of the build request id, which is used to properly
    report build status and failures back to Toaster.
    
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	0	lib/toaster/bldcontrol/localhostbecontroller.py

commit 6dca6fd47c5e8d66687fb07177e98cd531cd971d
Author: Ed Bartosh <ed.bartosh@linux.intel.com>
Date:   2015-12-09 14:25:47 +0000

    toaster: implement BitbakeController.triggerEvent
    
    This API will be used to pass data from Toaster to
    toaster_ui and buildinfohelper.
    
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	0	lib/toaster/bldcontrol/bbcontroller.py

commit 05695424b918fc81b16cbac70d79d8271a0b6045
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2015-12-09 12:02:56 +0000

    event: Fix subprocess event error traceback failures
    
    If subprocess raises a CalledProcessError() error, e.g. from a call
    like subprocess.check_call("false"), bitbake would try and pass the
    object over IPC and fail, leading to an unusual error:
    
    ('__init__() takes at least 3 arguments (1 given)', <class 'subprocess.CalledProcessError'>, ())%
    
    To avoid this, we turn the value into a string which prevents the
    issues the IPC has trying to deal with the object (for the same reason
    we deal with tracebacks here too).
    
    [YOCTO #8752]
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	0	lib/bb/event.py

commit 16bfd3e3d145705a2b3a05648ddbcacc7a338dfa
Author: brian avery <avery.brian@gmail.com>
Date:   2015-11-17 16:47:56 +0000

    toaster: toasterui Add ParseStarted/ParseProgress events to mask
    
    Toaster is not able to see ParseStarted and ParseProgress events
    for command-line builds. This means it's not possible for Toaster
    to detect failed builds, if the failure occurs at a point before
    the BuildStarted event, as the build won't show up at all.
    
    Add these events to the event mask, so that Toaster's toasterui
    can detect and respond to them.
    
    Signed-off-by: brian avery <avery.brian@gmail.com>
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

12	2	lib/bb/ui/toasterui.py

commit 67b77658e2bfa849f6f55c9c262cb11d6bfdb399
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2015-12-07 18:26:57 +0000

    knotty: Enforce terminal line limit to stop crazy scrolling
    
    If there are more tasks running than there are lines on the terminal, the data
    scrolls in ways the UI wasn't designed for. This patch adjusts the UI just to
    show the processes which fit onto the number of rows in the terminal window.
    You can see the total number running from the counter in the top left as usual
    and this makes warning and errors messages scrolling from the top of the window
    work as designed.
    
    Ultimately, scrolling would be nice but is for another time, this fixes the
    biggest UI issue on highly parallel machines.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

4	3	lib/bb/ui/knotty.py

commit f0a9e783f9969573fd74edfa241ef14f18ac684e
Author: Alexander Kanavin <alexander.kanavin@linux.intel.com>
Date:   2015-12-04 14:59:26 +0000

    bitbake: rename REGEX, REGEX_URI, and GITTAGREGEX.
    
    Rename REGEX to UPSTREAM_CHECK_REGEX, REGEX_URI to UPSTREAM_CHECK_URI, and
    GITTAGREGEX to UPSTREAM_CHECK_GITTAGREGEX to better reflect their purpose
    and to reflect a common namespace.
    
    Signed-off-by: Alexander Kanavin <alexander.kanavin@linux.intel.com>
    Signed-off-by: Ross Burton <ross.burton@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/fetch2/git.py
2	2	lib/bb/fetch2/wget.py
5	5	lib/bb/tests/fetch.py

commit f7b33a95b5d53973bc673373bdd2652f4d32f0c2
Author: Ed Bartosh <ed.bartosh@linux.intel.com>
Date:   2015-12-07 16:06:01 +0000

    toaster: return back 'New project' button
    
    The button was removed by mistake in merging modes patchset.
    
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	0	lib/toaster/toastergui/templates/base.html

commit c4dda67dd3773d02b760d96dd9c6f26bff93533d
Author: Mihail Stanciu <stanciux.mihail@intel.com>
Date:   2015-12-07 15:53:01 +0000

    toaster: tests Update UI tests to work with 2.0 changes
    
    Update tests that were referencing items removed in 2.0.
    
    Update most xpath elements left to use IDs.
    
    Signed-off-by: Mihail Stanciu <stanciux.mihail@intel.com>
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

247	88	lib/toaster/contrib/tts/toasteruitest/toaster_automation_test.py

commit 8dcad75ad1d9b8adddeca57e996b8d904b209df5
Author: Mihail Stanciu <stanciux.mihail@intel.com>
Date:   2015-12-07 15:53:00 +0000

    toaster: tests Automated build-mode backend tests
    
    Add tests to check various backend scenarios that
    require UI interaction.
    
    Add necessary files for above tests (the sqlite file
    and the default config json).
    
    Signed-off-by: Mihail Stanciu <stanciux.mihail@intel.com>
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	0	lib/toaster/contrib/tts/toasteruitest/toaster.sqlite
382	1	lib/toaster/contrib/tts/toasteruitest/toaster_automation_test.py
1	0	lib/toaster/contrib/tts/toasteruitest/toasterconf.json

commit 7a2e9745ff3ef6d6360f74b222248d4bd35e6a08
Author: Ed Bartosh <ed.bartosh@linux.intel.com>
Date:   2015-12-02 10:02:59 -0800

    toaster: unset environment variables
    
    Toaster script sets environment variables when it starts.
    It makes sense to unset them when toaster stops as they can
    cause other programs to behave incorrectly.
    
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: brian avery <avery.brian@gmail.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

4	0	bin/toaster

commit 101690bda7ad55dc0657483233c90c374713755b
Author: Ed Bartosh <ed.bartosh@linux.intel.com>
Date:   2015-12-02 10:02:58 -0800

    toaster: get rid of complicated heuristics
    
    Removed buildinfohelper code which was trying to guess layer version of
    the recipe using build request information. The code caused creation of
    duplicated recipes as it resulted in layer version from layer index
    instead of returning build layer version. As a result of this Toaster
    UI was not showing any information about recipes.
    
    Default approach used to find layer version seems to work much better as
    it finds proper layer version. Now toaster will use it as the only
    way to find layer version.
    
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: brian avery <avery.brian@gmail.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

9	38	lib/bb/ui/buildinfohelper.py

commit a6ab2a38ab666376b4a5e796d3a88929e8cbfb22
Author: Ed Bartosh <ed.bartosh@linux.intel.com>
Date:   2015-12-02 10:02:57 -0800

    toaster: remove SDKMACHINE from project variables
    
    Removed SDKMACHINE from predefined set of variables
    for the project as it causes bitbake build error:
       SDKMACHINE is set, but SDK_ARCH has not been changed as a result
    
    This variable does not need to be predefined as it's not used by
    toaster.
    
    It's still possible to specify it in project configuration
    if needed. SDK_ARCH variable should be set too to avoid above
    mentioned build failure.
    
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: brian avery <avery.brian@gmail.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	69	lib/toaster/toastergui/templates/projectconf.html
0	9	lib/toaster/toastergui/views.py

commit 624240460ec32af918dcea8c04a913e3b94e012b
Author: Ed Bartosh <ed.bartosh@linux.intel.com>
Date:   2015-12-02 10:02:56 -0800

    toaster: stop using toaster-pre.conf
    
    This file is not needed anymore as toaster UI doesn't
    write variables to it. It sets them directly on bitbake
    server.
    
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: brian avery <avery.brian@gmail.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	2	bin/toaster

commit 6dda2916b75d688874d208192d5c7cdb302eec35
Author: Ed Bartosh <ed.bartosh@linux.intel.com>
Date:   2015-12-02 10:02:55 -0800

    toaster: remove writeConfFile API
    
    This API is not used anymore as toaster doesn't write variables
    to configuration files anymore. It sets variables through its
    connection to bitbake server.
    
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: brian avery <avery.brian@gmail.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

0	6	lib/toaster/bldcontrol/bbcontroller.py
0	11	lib/toaster/bldcontrol/localhostbecontroller.py

commit 3f77c69b867735b5d27c6ab7c62e39ac8d5cb2b5
Author: Ed Bartosh <ed.bartosh@linux.intel.com>
Date:   2015-12-02 10:02:54 -0800

    toaster: set varibales on bitbake server
    
    Set project variables using connection to bitbake server
    instead of writing them to toaster configuration files.
    
    This is a way to avoid rewriting configuration files before
    and after every build, triggered by toaster UI.
    
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: brian avery <avery.brian@gmail.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

9	2	lib/toaster/bldcontrol/localhostbecontroller.py

commit effc371e3a4a2262e53e9e560c7c08cffad195da
Author: Ed Bartosh <ed.bartosh@linux.intel.com>
Date:   2015-12-02 10:02:53 -0800

    toaster: implement BitbakeController.getVariable
    
    Added new API to get value of bitbake variable from bitbake server.
    The API will be used to update INHERIT variable instead of writing
    it to the toaster configuration files.
    
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: brian avery <avery.brian@gmail.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	0	lib/toaster/bldcontrol/bbcontroller.py

commit 9a8653bf602b2111dee7ee6a459682a68a695b22
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2015-12-02 10:02:52 -0800

    toaster: buildinfohelper Broaden the toaster created recipe data case
    
    When build information is the 'original' source of the information we
    need to return the recipe that was created rather than the copy of the
    recipe that is taken for keeping build history. We do this already for
    command line triggered builds, but we also have this case for custom
    images. We can simply check if the built_recipe exists instead of
    special casing this.
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: brian avery <avery.brian@gmail.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	4	lib/bb/ui/buildinfohelper.py

commit e9b46803eb6f1f4044919abf90c8aeb3536e73ed
Author: Ed Bartosh <ed.bartosh@linux.intel.com>
Date:   2015-12-02 10:02:51 -0800

    toaster: do not create duplicate HelpText objects
    
    buildinfohelper code expects only one HelpText object per
    build/variable/description.
    Current code creates more than one such an object, which causes
    toastergui to crash with this exception:
     MultipleObjectsReturned: get() returned more than one HelpText -- it returned 2!
    
    Used git_or_create API to ensure that only one HelpText object is
    created.
    
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: brian avery <avery.brian@gmail.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	7	lib/bb/ui/buildinfohelper.py

commit 4ce1559c2558bd0fd278ff02a1a93bec03c4156b
Author: Ed Bartosh <ed.bartosh@linux.intel.com>
Date:   2015-12-02 10:02:50 -0800

    toaster: remove usage of BUILD_MODE variable
    
    As both modes can be used at the same time we can't have any
    difference in UI between modes.
    
    Removed all conditional statements that used BUILD_MODE.
    
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: brian avery <avery.brian@gmail.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	8	lib/toaster/toastergui/templates/base.html
0	10	lib/toaster/toastergui/templates/landing.html
0	4	lib/toaster/toastergui/tests.py
0	20	lib/toaster/toastergui/views.py
0	3	lib/toaster/toastermain/settings.py
4	5	lib/toaster/toastermain/urls.py

commit e69c87c7842e796ffcd7193ecde22c8f688498f5
Author: Ed Bartosh <ed.bartosh@linux.intel.com>
Date:   2015-12-02 10:02:49 -0800

    toaster: do not terminate bb server
    
    Toaster needs bb server to be running all the time due
    to merged analysis and managed modes. Server gets restarted
    before every build triggered by UI, but it shouldn't be
    terminated as it will influence command line builds.
    
    [YOCTO #8279]
    
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: brian avery <avery.brian@gmail.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

5	9	lib/bb/ui/toasterui.py

commit 0cad802da171d51814f22cc9383f496a63cd0c75
Author: Ed Bartosh <ed.bartosh@linux.intel.com>
Date:   2015-12-02 10:02:48 -0800

    toaster: remove stopBBServer API
    
    Removed stopBBServer API from build controller as toaster
    doesn't stop bitbake server anymore. It's reused for both
    types of builds: triggered by UI and started manually.
    
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: brian avery <avery.brian@gmail.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

0	6	lib/toaster/bldcontrol/bbcontroller.py
0	9	lib/toaster/bldcontrol/localhostbecontroller.py
0	10	lib/toaster/bldcontrol/sshbecontroller.py
0	4	lib/toaster/bldcontrol/tests.py

commit 4b065353c3454923a1ef88e9f0a8702e5626060e
Author: Ed Bartosh <ed.bartosh@linux.intel.com>
Date:   2015-12-02 10:02:47 -0800

    toaster: reimplemented startBBServer method
    
    Rewritten LocalhostBEController.startBBServer to use
    'toaster restart-bitbake' and read bitbake port number from
    bitbake.lock.
    
    Removed complicated logic of running oe-init-memres and looking for
    bitbake port number in the logs.
    
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: brian avery <avery.brian@gmail.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

18	72	lib/toaster/bldcontrol/localhostbecontroller.py

commit 27a59b4373a449f17e46ab93e0eba15cf75967ae
Author: Ed Bartosh <ed.bartosh@linux.intel.com>
Date:   2015-12-02 10:02:46 -0800

    toaster: remove _setupBE function
    
    This function is not needed as build environment is always created
    because of the new way to run Toaster. It can be only sourced after
    oe-init-build-env is sourced.
    
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: brian avery <avery.brian@gmail.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	17	lib/toaster/bldcontrol/localhostbecontroller.py

commit 24cd26b39014419d883b7cf45e4943c301d585cc
Author: Ed Bartosh <ed.bartosh@linux.intel.com>
Date:   2015-12-02 10:02:45 -0800

    toaster: implement 'toaster restart-bitbake'
    
    This implementation allows to have functionality of restarting
    bitbake in toaster script. It can be used by toaster script and
    build controllers.
    
    [YOCTO #8279]
    
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: brian avery <avery.brian@gmail.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

9	0	bin/toaster

commit d8e9ce7ba3f5b89c51e769bd4a46c2026a110d40
Author: Ed Bartosh <ed.bartosh@linux.intel.com>
Date:   2015-12-02 10:02:44 -0800

    toaster: implement start_bitbake function
    
    Separated functionality of starting bitbake server and observer
    processes.
    
    This functionality will be used by build controllers to restart
    bitbake processes.
    
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: brian avery <avery.brian@gmail.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

18	15	bin/toaster

commit dd40d70b707a3ff59edfa69923d4d9b671928a66
Author: Ed Bartosh <ed.bartosh@linux.intel.com>
Date:   2015-12-02 10:02:43 -0800

    toaster: implement stop_bitbake function
    
    Separated functionality of stopping bitbake server and observer
    processes.
    
    This functionality will be used by build controllers to restart
    bitbake processes.
    
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: brian avery <avery.brian@gmail.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

8	4	bin/toaster

commit ea3bc8d01704dc64f6cb7b4f5fe66c312a575174
Author: Ed Bartosh <ed.bartosh@linux.intel.com>
Date:   2015-12-02 10:02:42 -0800

    toaster: update brbe and project attributes
    
    Updated attributes of buildinfohelper object as they can
    be changed for every build. For example brbe is set by
    runbuilds for every build triggered by Toaster UI.
    
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: brian avery <avery.brian@gmail.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

6	0	lib/bb/ui/buildinfohelper.py

commit 91bf323e873c31d883b01ea993c005f45382e83f
Author: Ed Bartosh <ed.bartosh@linux.intel.com>
Date:   2015-12-02 10:02:41 -0800

    toaster: start 'manage.py runbuilds' in the script
    
    Running runbuilds machinery in background allows Toaster to
    start builds initiated by toaster UI.
    
    Added runbuilds pid file to the list in webserverKillAll to
    kill runbuilds the same way as runserver process.
    
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: brian avery <avery.brian@gmail.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	1	bin/toaster

commit e04da15556ca0936de652b8c085e4199e5551457
Author: Ed Bartosh <ed.bartosh@linux.intel.com>
Date:   2015-12-02 10:02:40 -0800

    toaster: make runbuilds to loop
    
    Made runbuilds to loop to avoid having a loop in shell code and
    initialize heavy Django init machinery every second.
    
    Ignored exceptions to prevent exiting a loop.
    
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: brian avery <avery.brian@gmail.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

10	3	lib/toaster/bldcontrol/management/commands/runbuilds.py

commit 124eb2bb15de18e4d2d6483c3549e1d887234736
Author: Ed Bartosh <ed.bartosh@linux.intel.com>
Date:   2015-12-02 10:02:39 -0800

    toaster: use parent of the build dir
    
    Assigned TOASTER_DIR to the parent of the build directory.
    This should fix local controller crash as it assumes that
    TOASTER_DIR is a root of local poky and tries to clone it.
    
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: brian avery <avery.brian@gmail.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	bin/toaster

commit a4f6809237dffb1abff78c6a8c82bcc4852aedfa
Author: Ed Bartosh <ed.bartosh@linux.intel.com>
Date:   2015-12-02 10:02:38 -0800

    toaster: check for toaster configuration later
    
    Moved check for toasterconf.json after check of build environment.
    We'll need some variables from build environment to find toasterconf.json
    better way.
    
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: brian avery <avery.brian@gmail.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

24	1	bin/toaster

commit 187c31a8789c37723b9288afd35f1785f1993895
Author: Ed Bartosh <ed.bartosh@linux.intel.com>
Date:   2015-12-02 10:02:37 -0800

    toaster: remove unused variable
    
    Removed variable RUNNING as it's not used anymore
    in the toaster script.
    
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: brian avery <avery.brian@gmail.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

0	2	bin/toaster

commit 8476db82ea80edf2b70bc2082bcecee09037556d
Author: brian avery <avery.brian@gmail.com>
Date:   2015-11-20 18:29:34 +0000

    toaster: change toasterconf.json logic to use TEMPLATECONF, like oe-setup-builddir
    
    This changes the way we pick a toasterconf.json file so that it
    matches the way oe-setup-builddir does it. We now base it on TEMPLATECONF
    found in the .templateconf file.
    
    Signed-off-by: brian avery <avery.brian@gmail.com>
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

24	9	bin/toaster

commit c5d5da095d5eace03f8a50910f5a60ab35acbb1a
Author: Ed Bartosh <ed.bartosh@linux.intel.com>
Date:   2015-12-02 10:02:36 -0800

    toaster: run bitbake the same way
    
    Run bitbake in toaster script the same way as it's run
    by localbuildcontroller.
    
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: brian avery <avery.brian@gmail.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

4	6	bin/toaster

commit ac4800cc8b765b270f27ea9a5938f3f2a2e0ced4
Author: Ed Bartosh <ed.bartosh@linux.intel.com>
Date:   2015-12-02 10:02:35 -0800

    toaster: set DATABASE_URL in toaster script
    
    Set environment variable DATABASE_URL in bitbake/bit/toaster
    Variable value is obtained by running 'manage.py get-dburl'
    
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: brian avery <avery.brian@gmail.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	0	bin/toaster

commit fabe9c8f14fd7b8ab204a2b610c64ac5b62135ac
Author: Ed Bartosh <ed.bartosh@linux.intel.com>
Date:   2015-12-02 10:02:34 -0800

    toaster: implement get-dburl command
    
    Implemented management command to call getDATABASE_URL API.
    It will be used to get database url from toaster shell script
    by running 'manage.py get-dburl'
    
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: brian avery <avery.brian@gmail.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

9	0	lib/toaster/toastermain/management/commands/get-dburl.py

commit 7e8632c0527245c1474e487dd9a972948e794471
Author: Ed Bartosh <ed.bartosh@linux.intel.com>
Date:   2015-12-02 10:02:33 -0800

    toaster: don't allow to run toaster as a script
    
    Removed support of starting toaster as a script.
    
    Sourcing a toaster script becomes the only way to start it.
    It's consistent with the way oe build system is started by sourcing
    oe-init-build-env. It also returns user back to shell, so user can
    continue running builds without having to open new terminal window.
    
    [YOCTO #8279]
    
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: brian avery <avery.brian@gmail.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

5	75	bin/toaster

commit e9a0858023c7671e30cc8ebb08496304b7f26b31
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2015-11-20 17:11:16 +1300

    lib/bb/utils: improve edit_bblayers_conf() handling of bblayers.conf formatting
    
    Make the following improvements to edit_bblayers_conf():
    
    * Support ~ in BBLAYERS entries
    * Handle where BBLAYERS items are added over multiple lines with +=
      instead of one single long item
    
    Also add some comments documenting the function arguments and return
    values as well as a set of bitbake-selftest tests.
    
    (This function is used by the bitbake-layers add, remove and
    layerindex-fetch subcommands, as well as devtool when adding the
    workspace layer).
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

203	0	lib/bb/tests/utils.py
64	14	lib/bb/utils.py

commit 8bce6fefdc5c046b916588962a2b429c0f648133
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2015-11-20 17:11:15 +1300

    lib/bb/utils: fix error in edit_metadata() when deleting first line
    
    If you tried to delete the variable on the first line passed to
    edit_metadata() this failed because the logic for trimming extra blank
    lines didn't expect the list to be empty at that point - fix that bad
    assumption.
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/utils.py

commit 7546d4aeb3ba8fda9832081b84d93138dc5e58d6
Author: Alexander Kanavin <alexander.kanavin@linux.intel.com>
Date:   2015-12-04 13:00:20 +0200

    wget.py: parse only <a> tags
    
    For two reasons:
    1) The important one: we hit the following bug when doing upstream version checks
    on some webpages:
    https://bugs.launchpad.net/beautifulsoup/+bug/1471755
    
    2) Also, documentation for beautifulsoup states that memory usage and
    speed is improved that way.
    
    Signed-off-by: Alexander Kanavin <alexander.kanavin@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	2	lib/bb/fetch2/wget.py

commit 649d563f95ffc57d0fe3dbf494e7dbffcc99a1b4
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2015-11-26 16:44:35 +0000

    toaster: toastergui tests Add generic test for ToasterTables widget
    
    For each of the ToasterTables defined test:
     - Data returned
     - Search
     - Order by
     - Limit
     - Paginate
     - Filter
    
    These tests test that the functions on all tables work, it does not
    validate the content of the data in the tables themselves, this needs
    to be done in table specific tests.
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

212	11	lib/toaster/toastergui/tests.py

commit ebd1c493d8b7fb9ee7b3e40c17165dc9c22ca795
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2015-11-26 16:44:34 +0000

    toaster: tables Fix invalid field name on NewCustomImagesTable
    
    Correct the field name in the NewCustomImagesTable as it is a Recipe
    object it's self and not a container.
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/toaster/toastergui/tables.py

commit f1c91bff810a579b169c46b7710e22f5553b484e
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2015-11-26 16:44:33 +0000

    toaster: tables Add default_orderby field where it was missing or unset
    
    This value is used to set the default ordering of the model that is used
    for ToasterTables, it is picked up client side to set the ordering
    indicator.
    
    [YOCTO #8695]
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

7	3	lib/toaster/toastergui/tables.py

commit 2558729b4c248a2fa5a11d877bc42cb05a30602e
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2015-11-26 16:44:32 +0000

    toaster: CustomImageRecipe add search_allowed_fields to this model
    
    In order to search the model from the UI some fields must be nominated
    as searchable.
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	0	lib/toaster/orm/models.py

commit 559102984d3f62a7675899e058166bdf4d552c46
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2015-11-26 16:44:31 +0000

    toaster: machines table Fix missing layers information needed for filter
    
    The current layers information wasn't being passed to the template for
    the Select/Add button for the Compatible machines filter.
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

4	2	lib/toaster/toastergui/tables.py
10	2	lib/toaster/toastergui/templates/machine_btn.html

commit f23e54292a673b2fd3f17d317c21984c753727c7
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2015-11-26 15:59:01 +0000

    toaster: tablejs Make sure click handlers consume click event
    
    Avoid the click event from propagating and causing strange side effects
    in toaster tables.
    
    [YOCTO #8527]
    [YOCTO #8148]
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

6	4	lib/toaster/toastergui/static/js/table.js

commit e9719eb2e8249f0d10b39bfdd4aef563368b5ffd
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2015-11-26 14:54:29 +0000

    toaster: projectpage Make sure build targets are space separated
    
    Make sure the build targets are space separated when building multiple
    targets. Also fix error path now that YOCTO #7995 is resolved.
    
    [YOCTO #8450]
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

13	9	lib/toaster/toastergui/static/js/projectpage.js

commit 50d7ffa697764d84d96f26a3ae58a9dacde7b31e
Author: Belen Barros Pena <belen.barros.pena@intel.com>
Date:   2015-11-10 17:08:03 +0000

    toaster: builds pages Fix the download cooker log link
    
    The 'all builds' page was missing the download icon next to the outcome
    icon, which allows you to download a build log from the 'all builds' page.
    
    This patch brings it back. It also adds a check in the project builds page
    to make sure the download icon only appears if the build generates a cooker
    log, since builds that fail at the build request stage do not generate a
    cooker log.
    
    Signed-off-by: Belen Barros Pena <belen.barros.pena@intel.com>
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

7	1	lib/toaster/toastergui/templates/builds.html
6	5	lib/toaster/toastergui/templates/projectbuilds.html

commit 10e1fbee0d79dbbf15b89ebc155bb2c0092a71f2
Author: Belen Barros Pena <belen.barros.pena@intel.com>
Date:   2015-11-10 17:08:02 +0000

    toaster: project pages Link to image recipes table in notifications
    
    The project created notifications and the 'Choosea recipe to build' link in
    the project page are linking to the software recipes table. Changes them to
    link to the image recipes table instead, which is bound to be more useful.
    
    Signed-off-by: Belen Barros Pena <belen.barros.pena@intel.com>
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/toaster/toastergui/templates/project.html
1	1	lib/toaster/toastergui/templates/projecttopbar.html

commit c3c7e94cadb3a3a2d8ef33ed456f439c106018c1
Author: Ke Zou <ke.zou@windriver.com>
Date:   2015-11-04 14:32:22 +0000

    toaster: tests: Re-write some cases to make them more maintainable
    
    Signed-off-by: Ke Zou <ke.zou@windriver.com>
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

89	223	lib/toaster/contrib/tts/toasteruitest/toaster_automation_test.py

commit c9b9443faa76ee7366b1400a56f826f3f9dec1be
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2015-10-11 10:21:20 +0100

    data_smart: Only support lowercase OVERRIDES
    
    Our current OVERRIDES handling means we end up caching and checking for
    a lot of possible override combinations which turn out to very unlikely.
    A typical example is the SRC_URI variable where we have to check if
    "URI" is an override. Having spent many hours working in this code, I've
    realised all the actual overrides we use are lower case and our standard
    variables are mostly uppercase.
    
    This means we could gain quite some speed advantage if we write this
    into the code, that overrides only consist of lowercase characters. This
    patch shows how simple this is and the resulting speed gains are
    significant. This is a significant change but tests show we don't appear
    to have any users of capitals in overrides in any OE-Core metadata.
    
    Before "time bitbake -p":
    
    real    2m4.224s
    user    7m32.312s
    sys     0m7.116s
    
    After "time bitbake -p":
    
    real    1m26.009s
    user    5m10.484s
    sys     0m4.640s
    
    This check could also be made conditional however I'm not seeing a need
    to do that at present.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	2	lib/bb/data_smart.py

commit 37214ea9bf484998b75dbc1200d53f1afc5257ed
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2015-11-10 09:56:51 +0000

    fetch2: Remove crazy code in unpack
    
    This looks reasonable until you realise self.localpath is a function. Data
    expansion of something which isn't a string is the original value so this
    code just wastes CPU cycles and makes no sense. Remove it.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

0	3	lib/bb/fetch2/__init__.py

commit 62367cca1f1793eb9827406bcdd5980fdeb80a60
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2015-11-10 09:55:49 +0000

    parse: Don't try to expand __base_depends/__depends
    
    Trying to expand a variable which isn't a string doesn't make sense.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	2	lib/bb/parse/__init__.py

commit 54d0ddd166a6707b4f8c8535639e3055b783363b
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2015-11-10 09:54:44 +0000

    cache: Don't try to expand __inherit_data
    
    Trying to expand a variable which isn't a string doesn't make sense.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	3	lib/bb/cache.py

commit 832a8523067606b180c02f0d1544e8a23219bb08
Author: Elliot Smith <elliot.smith@intel.com>
Date:   2015-11-13 15:28:07 +0000

    toaster: localhostbectrl Pass DATABASE_URL in via the process environment
    
    Instead of putting the DATABASE_URL as part of the command for launching
    the bitbake observer process set it as part of environment.
    
    This fixes two issues 1. Where the value isn't quoted and therefore will be
    interpreted in the shell and 2. Anyone being able to see the value of
    DATABASE_URL in the process tree.
    
    [YOCTO #8669]
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

10	3	lib/toaster/bldcontrol/localhostbecontroller.py
0	229	lib/toaster/toastergui/static/js/base.js
33	100	lib/toaster/toastergui/templates/base.html
18	0	lib/toaster/toastergui/templates/projecttopbar.html

commit b644514a96f3947ad3f307a26301c064c8ae18f8
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2015-11-13 13:48:37 +0000

    toaster: Remove the new-build-input button widget
    
    The button required a lot of state maintenance to make sure it
    showed up when the project was configured properly, showed correctly
    according to the projects known to Toaster, displayed correctly
    according to the mode Toaster was in, and was able to be
    used to change the current project.
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

81	0	lib/toaster/toastergui/static/js/projecttopbar.js

commit 1f6bfa876b17a600fc83c789af8aaa2639a463b2
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2015-11-13 13:48:36 +0000

    toaster: projecttopbar Use the project in context to get num builds
    
    Use the project in the template context rather than ajax request to get
    the number of ended builds.
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/toaster/toastergui/templates/projecttopbar.html

commit 872bd5ccf58236f5146b1640cc1c465b58371e44
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2015-11-13 13:48:35 +0000

    toaster: projectpage Disable/Enable build input if we have 0 layers
    
    If we've removed all the layers in the configuration, disable the build
    button and build input.
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

10	3	lib/toaster/toastergui/static/js/projectpage.js

commit a981700701c41c7bbb6a9778e95f691278c5c294
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2015-11-13 13:48:34 +0000

    toaster: orm Fix get_number_of_builds to count all apart from IN_PROGRESS
    
    The count of a project's builds should not include those which are
    currently in progress.
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

4	5	lib/toaster/orm/models.py

commit 4f700316933e8e7b2d27366e5ce6176895b913e7
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2015-11-11 08:56:32 -0800

    codeparser: Only load the codeparser cache once
    
    The server state gets reset multiple times during startup and currently
    we reload the codeparser cache each time. This is pointless and causes
    unnecessary interaction time with bitbake.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

4	0	lib/bb/codeparser.py

commit 7974203cd8bc66dff1fcc55f8723dedefaf72840
Author: Elliot Smith <elliot.smith@intel.com>
Date:   2015-10-29 13:59:44 +0200

    toasterui: Create per-build logs
    
    Rather than relying on bug 8411, which is conveniently creating
    separate log files for each of our builds, create our own
    log file for each build.
    
    The log files are created in the same tmp directories that
    bitbake users, but are timestamped to the millisecond to avoid
    name collisions.
    
    Each log file is opened on a ParseStarted event (for builds
    triggered by Toaster) or BuildStarted event (for builds on the
    command line: Toaster doesn't get the ParseStarted event
    for command-line builds).
    
    The log file is closed on the BuildCompleted event, or if the
    build fails.
    
    Because we start logging on ParseStarted for Toaster builds,
    we're able to capture the "Build Configuration" section which
    bitbake writes to output.
    
    [YOCTO #8373]
    
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

4	4	lib/bb/ui/buildinfohelper.py
90	26	lib/bb/ui/toasterui.py

commit b9471ad147b102c45d65f5ffd9521864df7ff9c1
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2015-10-24 11:19:06 +0100

    build/utils: Add BB_TASK_IONICE_LEVEL support
    
    Similarly to BB_TASK_NICE_LEVEL, add BB_TASK_IONICE_LEVEL which allows the ioprio
    of tasks to be adjusted. This is in response to various qemu runtime timeouts
    which have been witnessed on the autobuilder, seemingly due to IO starvation (we
    already use NICE_LEVEL to adjust tasks). This has a fairly urgent need to deal
    with certain 'random' failures we're seeing on the autobuilders in testing.
    
    The format of the data in the variable is BB_TASK_IONICE_LEVEL = "<class>.<prio>".
    
    For <class>, 2 is best effort (the default), 1 is real time and 3 is idle. You'd
    need superuser privileges to use realtime. The <prio> value is a default of 4,
    and can be set between 0 and 7 with 7 being lowest priority and 0 the highest.
    The user can set this freely with normal privileges
    
    Note that in order for this to take effect, you need the cfq scheduler selected
    for the backing block device.
    
    We could use nice wrapper functions for ioprio from modules like psutil however
    that would complicate bitbake dependencies. This version has some magic numbers
    but works on the main 32 and 64 bit x86 build architectures and can easily be
    extended if ever needed. When we move to python 3.x, we can likely replace this
    with standard calls.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

7	0	lib/bb/build.py
24	0	lib/bb/utils.py

commit 335eb2db228f7543a49de71f063ac72b865c947a
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2015-10-11 10:22:26 +0100

    cooker: Ensure BB_CONSOLE remains correct over server resets
    
    The console log data is written to is created at console initialisation
    time and does not change over reset events. This ensures the
    BB_CONSOLELOG value is correct over such resets by preserving it.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

7	0	lib/bb/cooker.py

commit 021f2eb55ab5863b57ed1b3f19f1b329bc1ad477
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2015-10-11 10:12:42 +0100

    bb/ui: Use getSetVariable command for BB_CONSOLELOG
    
    Metadata can define BB_CONSOLELOG as containing ${DATETIME} and
    this can get expanded to a different value each time the variable
    is read. In the case of BB_CONSOLELOG, this behaviour is not
    desireable.
    
    The values of DATE/TIME are locked down at build time but this is too
    late for the purposes of ensuring the system can figure out the real
    value of BB_CONSOLELOG.
    
    The best way to do this is to set the variable into the datastore, thereby
    preserving its value.
    
    [YOCTO #8411]
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/ui/knotty.py
1	1	lib/bb/ui/toasterui.py

commit 0c0c524691e3d2ffd9953a106fcc06262cbde910
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2015-10-11 10:11:47 +0100

    command: Add getSetVariable command
    
    There are some use cases where we want to read a variable but also
    set the variable to the value read, effectively locking in any
    expansion of it. This adds such a command.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

10	0	lib/bb/command.py

commit 4e0da1ef4a58a7ba4b92d4e07ef79cf7bd90abf0
Author: Scott Rifenbark <srifenbark@gmail.com>
Date:   2015-10-27 09:15:10 -0700

    bitbake-user-manual: Added new description for BB_TASK_IONICE_LEVEL
    
    Added a new variable description here for this variable.
    
    Signed-off-by: Scott Rifenbark <srifenbark@gmail.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

50	0	doc/bitbake-user-manual/bitbake-user-manual-ref-variables.xml

commit 0f0c205b9d6c24bee334eabb359973e0368ce931
Author: Scott Rifenbark <srifenbark@gmail.com>
Date:   2015-09-29 12:35:41 -0700

    bitbake-user-manual: Added BBTARGETS variable description.
    
    Signed-off-by: Scott Rifenbark <srifenbark@gmail.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

9	0	doc/bitbake-user-manual/bitbake-user-manual-ref-variables.xml

commit 1ab8827d684a19a70f3b788aed2327bf30edffe2
Author: Belen Barros Pena <belen.barros.pena@intel.com>
Date:   2015-10-28 14:22:05 +0000

    toaster: templates Add meaningful title tags
    
    Our title tags are all over the place, and have no relation to the page
    content. This commit adds a meaningful title tag to each Toaster page.
    
    Signed-off-by: Belen Barros Pena <belen.barros.pena@intel.com>
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	1	lib/toaster/toastergui/templates/base.html
3	0	lib/toaster/toastergui/templates/baseprojectpage.html
1	0	lib/toaster/toastergui/templates/bpackage.html
1	0	lib/toaster/toastergui/templates/builddashboard.html
1	0	lib/toaster/toastergui/templates/builds.html
1	0	lib/toaster/toastergui/templates/configuration.html
1	0	lib/toaster/toastergui/templates/configvars.html
1	0	lib/toaster/toastergui/templates/dirinfo.html
1	0	lib/toaster/toastergui/templates/importlayer.html
1	0	lib/toaster/toastergui/templates/landing.html
2	0	lib/toaster/toastergui/templates/landing_not_managed.html
1	0	lib/toaster/toastergui/templates/layerdetails.html
3	0	lib/toaster/toastergui/templates/newproject.html
9	2	lib/toaster/toastergui/templates/package_detail_base.html
2	2	lib/toaster/toastergui/templates/package_included_dependencies.html
2	2	lib/toaster/toastergui/templates/package_included_detail.html
2	2	lib/toaster/toastergui/templates/package_included_reverse_dependencies.html
1	0	lib/toaster/toastergui/templates/project.html
1	1	lib/toaster/toastergui/templates/projectbuilds.html
1	1	lib/toaster/toastergui/templates/projectconf.html
2	0	lib/toaster/toastergui/templates/projects.html
1	0	lib/toaster/toastergui/templates/recipe.html
1	0	lib/toaster/toastergui/templates/recipes.html
1	0	lib/toaster/toastergui/templates/target.html
1	0	lib/toaster/toastergui/templates/task.html
8	7	lib/toaster/toastergui/templates/tasks.html
2	0	lib/toaster/toastergui/templates/unavailable_artifact.html
1	1	lib/toaster/toastergui/views.py

commit 349119f44cdad240dda7f4db45992e2539e1416f
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2015-10-22 11:22:28 +0100

    toaster: orm Fix restrictive LogMessage message length
    
    Log messages can be quite long so use a TextField rather than a char
    field with max length of 240. mySQL is especially picky about field
    lengths and will cause an exception if the log is too long.
    
    [YOCTO #8475]
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: brian avery <avery.brian@gmail.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

345	0	lib/toaster/orm/migrations/0028_auto__chg_field_logmessage_message.py
1	1	lib/toaster/orm/models.py

commit ae754655fa1bc5168f43e8821773e7b7b9440a5d
Author: Elliot Smith <elliot.smith@intel.com>
Date:   2015-10-17 10:45:53 -0700

    toaster: Remove all navigation when not in build mode
    
    The user is redirected to the all builds page or all projects
    page from the landing page, regardless of mode.
    
    In build mode, this makes sense; but in analysis mode, we are
    restricting the view to just the cli builds project. This means
    that "all projects" and "all builds" only contains items relating
    to this one project.
    
    Modify the landing page so it redirects to the project builds page
    for the cli builds project when not in build mode. Also remove
    navigation elements which are irrelevant when not in build mode.
    
    [YOCTO #8514]
    
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: brian avery <avery.brian@gmail.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	2	lib/toaster/toastergui/templates/base.html
12	2	lib/toaster/toastergui/views.py

commit 991712f3f88759e2d68af5a3fe83c1395c4f67f6
Author: Elliot Smith <elliot.smith@intel.com>
Date:   2015-10-17 10:45:52 -0700

    toaster: Run tests in build mode
    
    Now that the UI content is conditional on whether BUILD_MODE
    is active, modify the existing tests so that they run in
    this mode by default.
    
    [YOCTO #8514]
    
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: brian avery <avery.brian@gmail.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

6	0	lib/toaster/toastergui/tests.py

commit 52de2c8cd11fa743f8fd7cb0cf776eea622ac474
Author: Elliot Smith <elliot.smith@intel.com>
Date:   2015-10-17 10:45:51 -0700

    toaster: Hide builds for non-cli projects in analysis mode
    
    The "latest builds" sections of the "all builds" page
    show builds for all projects. This is not appropriate
    for analysis mode, where we can only affect the command-line
    builds project.
    
    Modify the "latest builds" section to only show builds for
    the command line builds project if in analysis mode.
    
    Also rationalise where we get the queryset of latest builds from:
    we have a _get_latest_builds() function which was being used
    to get the latest builds in most places, but not all.
    
    Also modify _get_latest_builds() to sort by started_on, rather
    than primary key, as assuming that a higher primary key value equates
    with later start time is incorrect.
    
    [YOCTO #8514]
    
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: brian avery <avery.brian@gmail.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

15	3	lib/toaster/toastergui/views.py

commit b1858653c22eb6d51fc23f75ccad69b76523eb41
Author: Elliot Smith <elliot.smith@intel.com>
Date:   2015-10-17 10:45:50 -0700

    toaster: Hide top bar buttons in analysis mode
    
    The "new build" and "new project" buttons are irrelevant in
    analysis mode, as you can't start a build or a project.
    
    Hide these buttons if not in BUILD_MODE.
    
    [YOCTO #8514]
    
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: brian avery <avery.brian@gmail.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

13	5	lib/toaster/toastergui/templates/base.html

commit 86b4a10cc817abb5e3e63360dc8b3c550337f17c
Author: Elliot Smith <elliot.smith@intel.com>
Date:   2015-10-17 10:45:49 -0700

    toaster: Show mode-appropriate landing page
    
    The same landing page is shown for both analysis and
    build modes. This means that users in analysis mode can see
    options which are not available or broken in that mode.
    
    Modify the landing page template to show a simple "run a build"
    message if the user is in analysis mode and has no builds yet.
    
    Also clean up the landing page HTML, because the indentation was
    a mess and the HTML was invalid.
    
    [YOCTO #8514]
    
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: brian avery <avery.brian@gmail.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

58	45	lib/toaster/toastergui/templates/landing.html

commit f9cf4739fc85c9760ce748323dc7c8de3fa7eaec
Author: Elliot Smith <elliot.smith@intel.com>
Date:   2015-10-17 10:45:48 -0700

    toaster: Add BUILD_MODE flag to context
    
    We set a TOASTER_MANAGED env variable in the startup script,
    which has a value of "1" if Toaster should run in build mode.
    
    Add a BUILD_MODE variable to settings.py which is True if
    TOASTER_MANAGED is set to "1", False otherwise.
    
    Add this to the context for every template, so we can use this
    information to conditionally alter the content of pages
    according to the mode we're in.
    
    [YOCTO #8514]
    
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: brian avery <avery.brian@gmail.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

4	0	lib/toaster/toastergui/views.py
2	4	lib/toaster/toastermain/settings.py
1	1	lib/toaster/toastermain/urls.py

commit ef69be31d133696bde54605f5a18da660099734c
Author: Ed Bartosh <ed.bartosh@linux.intel.com>
Date:   2015-10-16 10:31:12 -0700

    toaster: add get_or_create_targets API
    
    Target objects are created before the build if build is
    started from UI in build mode. However, in analysis mode Target
    objects don't exist and need to be created using information
    from bitbake events.
    
    Added new API call get_or_create_targets to retrive existing
    target objects or create them if they don't exist yet.
    
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: brian avery <avery.brian@gmail.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

21	15	lib/bb/ui/buildinfohelper.py

commit af88f538e61afa1b115be4d7afe00d8477f61750
Author: Jens Rehsack <rehsack@gmail.com>
Date:   2015-10-16 19:14:04 +0200

    fetcher: svn: Add support for checkout to a custom path
    
    Add support for the Subversion fetcher to checkout modules to a custom path
    than the module name to avoid checkout is always module - svn is path
    based and tag/branch-checkout might break builds because of invaid path specs.
    
    Signed-off-by: Jens Rehsack <sno@netbsd.org>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

7	2	lib/bb/fetch2/svn.py

commit 02c64f7487ca8ec5d32c440f5002c4b8f64b76a6
Author: Ed Bartosh <ed.bartosh@linux.intel.com>
Date:   2015-10-16 19:23:58 +0300

    cooker: preserve pre and post configs
    
    Additional config files passed to bitbake server with --read and
    --postread options are rewritten by client bitbake even if
    it doesn't use those options.
    
    This is a show stopper for toaster as toaster command line
    builds are based on the assumption that server is aware of
    toster configs, provided by --postread option.
    
    This behaviour is fixed by preserving values of --read and
    --postread options when bitbake server starts and restoring
    them if client bitbake doesn't explicitly specify them.
    
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

5	0	lib/bb/cooker.py
2	0	lib/bb/cookerdata.py
7	0	lib/bb/main.py

commit 7b3ed62800cb7352154897c1c5ad2440a54df198
Author: Elliot Smith <elliot.smith@intel.com>
Date:   2015-10-13 15:35:17 +0100

    toaster: Add tests for error message display on the build dashboard
    
    Add tests to ensure that log messages with CRITICAL level and
    with EXCEPTION level are shown in the main errors display
    on the build dashboard.
    
    [YOCTO #8320]
    
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>

89	2	lib/toaster/toastergui/tests.py

commit 07e7bc29a7d976941eeae997f78a25ed6edddfc8
Author: Elliot Smith <elliot.smith@intel.com>
Date:   2015-10-05 16:39:36 +0100

    toaster: Modify "New build" button behaviour for cli builds project
    
    The "New build" button should only be displayed if there are
    user-generated projects, not if there is only the command-line
    builds project. (Toaster can't run builds on behalf of the
    command-line builds project.)
    
    The "New build" form should also display as if no project has
    been set (i.e. show the project and recipe text entries).
    
    Add a variable which tracks the number of non-command-line projects,
    then use this to hide the button when appropriate.
    
    Also track whether the current project is the default one, and
    use this to add extra conditions to when the "New build" text
    entries are shown.
    
    [YOCTO #8231]
    
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: brian avery <avery.brian@gmail.com>

3	3	lib/toaster/toastergui/static/js/base.js
49	46	lib/toaster/toastergui/templates/base.html
7	2	lib/toaster/toastergui/views.py

commit c781d6be94a25f942946d3a406e07791385e4596
Author: Elliot Smith <elliot.smith@intel.com>
Date:   2015-10-02 18:03:55 +0100

    toaster: Clean up template code
    
    Some errors in the HTML template didn't show up until
    they were rendering command line builds.
    
    One useless conditional was lingering in another template.
    
    Clean up these issues to display the latest builds section
    correctly.
    
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: brian avery <avery.brian@gmail.com>

0	5	lib/toaster/toastergui/templates/builds.html
10	11	lib/toaster/toastergui/templates/mrb_section.html

commit a31710db562a91da8ef37f5cd2231132474f46da
Author: Elliot Smith <elliot.smith@intel.com>
Date:   2015-10-02 16:13:04 +0100

    toaster: More linting of tests
    
    Fix some more lint errors on the tests for toastergui.
    
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: brian avery <avery.brian@gmail.com>

14	21	lib/toaster/toastergui/tests.py

commit 0240d92c6a508e0b22f37b3ea804171dd3dea5a6
Author: Elliot Smith <elliot.smith@intel.com>
Date:   2015-10-02 15:49:17 +0100

    toaster: Show tooltip next to cli builds project name in all builds
    
    In the all builds page, show an icon with tooltip next to the
    command line builds project name.
    
    [YOCTO #8231]
    
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: brian avery <avery.brian@gmail.com>

7	4	lib/toaster/toastergui/templates/builds.html
1	1	lib/toaster/toastergui/templates/mrb_section.html
33	7	lib/toaster/toastergui/tests.py

commit 565611749d47c915035890db60d19ab2fca7c42e
Author: Elliot Smith <elliot.smith@intel.com>
Date:   2015-10-02 14:23:35 +0100

    toaster: Hide tabs and add info popups for command line builds
    
    Command line builds don't have a configuration or
    layers which can be modified through Toaster.
    
    Change the project builds page for the command line builds project,
    to hide the tabs and add some info popups in appropriate places on
    that page.
    
    [YOCTO #8231]
    
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: brian avery <avery.brian@gmail.com>

5	7	lib/toaster/toastergui/static/js/base.js
4	0	lib/toaster/toastergui/templates/mrb_section.html
44	36	lib/toaster/toastergui/templates/projecttopbar.html
41	0	lib/toaster/toastergui/tests.py

commit 3ea10f4c16a557e94781251f6776b13acb8e9eba
Author: Elliot Smith <elliot.smith@intel.com>
Date:   2015-10-02 08:14:42 +0100

    toaster: Make the builds view the project page for "command line builds"
    
    Command line builds don't have configuration or layers which can
    be manipulated in Toaster, so these pages shouldn't be visible.
    However, the configuration page is the default page for the
    project view (/project/X/), which isn't correct for the
    command line builds project.
    
    Modify all project page links across the application so that
    the command line builds project (aka the "default" project)
    always displays the builds tab.
    
    Add a project_url tag for templates which contains the logic
    determining where the URL for a project links to, based on
    whether it is the default project or not.
    
    [YOCTO #8231]
    
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: brian avery <avery.brian@gmail.com>

3	2	lib/toaster/toastergui/templates/base.html
2	1	lib/toaster/toastergui/templates/builds.html
3	3	lib/toaster/toastergui/templates/mrb_section.html
5	2	lib/toaster/toastergui/templates/projects.html
34	0	lib/toaster/toastergui/templatetags/project_url_tag.py
35	3	lib/toaster/toastergui/tests.py

commit b67ac9e7cbab50951847dd1a63b12f41bb345dbb
Author: Elliot Smith <elliot.smith@intel.com>
Date:   2015-09-30 14:53:12 +0100

    toaster: Replace "Run again" button with help text for cli builds
    
    It's not possible to run a command-line build again, as Toaster
    doesn't have access to the data used for that build.
    
    Replace the "Run again" button with an icon which pops up some
    help text to that effect.
    
    Add test to check that the run again button is hidden and the
    help icon displayed instead for command-line builds.
    
    [YOCTO #8231]
    
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: brian avery <avery.brian@gmail.com>

5	0	lib/toaster/toastergui/static/css/default.css
27	14	lib/toaster/toastergui/templates/mrb_section.html
33	0	lib/toaster/toastergui/tests.py

commit d6210cd75b0cd8b6d24d5e99f607ba5cc45daf97
Author: Elliot Smith <elliot.smith@intel.com>
Date:   2015-10-14 13:29:17 -0700

    toaster: Exclude "command line builds" project from projects typeahead
    
    The "New build" drop-down provides autocomplete for Toaster projects.
    
    However, it should not include the default project (for command
    line builds), as it should not be possible for the user to
    select this project as the container for a Toaster build.
    
    [YOCTO #8231]
    
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: brian avery <avery.brian@gmail.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	2	lib/toaster/toastergui/typeaheads.py

commit ce27b3fd728f0373aa1adc0d47baace264529b45
Author: Elliot Smith <elliot.smith@intel.com>
Date:   2015-10-14 13:29:11 -0700

    toaster: Show 'not applicable' for default project machine and release
    
    The machine and release for the default project should show as
    'not applicable' on the all projects page, as that information
    isn't available for command-line builds.
    
    Modify the templates with some conditionals to check for the
    default project row, plus some data-* attributes to mark
    where that data is to make testing possible.
    
    Add some tests for the all projects page to ensure that
    the correct machine/release are still shown for non-default projects,
    and 'not applicable' for the default project.
    
    [YOCTO #8231]
    
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: brian avery <avery.brian@gmail.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

13	3	lib/toaster/toastergui/templates/projects.html
98	10	lib/toaster/toastergui/tests.py

commit 1ee1fc5dcdbb26c9f6e04b7719d7196083212d4c
Author: Elliot Smith <elliot.smith@intel.com>
Date:   2015-10-14 13:29:09 -0700

    toaster: Reorganise and lint tests
    
    Get test suite ready to accommodate new tests for how command line
    builds are shown on various pages.
    
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: brian avery <avery.brian@gmail.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

49	34	lib/toaster/toastergui/tests.py

commit d92ebfc34b69ad5df2d151e6b8299fbb5afa3e5f
Author: Logan Buchy <logan.buchy@gmail.com>
Date:   2015-10-15 00:42:27 -0700

    fetch2/hg: Include missing errno import
    
    errno.ENOENT checked if deletion of the fullmirror fails.
    Exception was thrown since module not imported
    
    Signed-off-by: Logan Buchy <logan.buchy@gmail.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	0	lib/bb/fetch2/hg.py

commit 0b0e214e6f53c97ad3d48f622c7fc0ca149956f6
Author: Ed Bartosh <ed.bartosh@linux.intel.com>
Date:   2015-10-15 11:37:40 +0300

    cooker: normalize build targets
    
    BuildStarted event not fully represents build tasks for
    the targets. If -c option is used to specify default task
    it's not included into the event.
    
    Made build targets to always look as <target>:do_<task>.
    Consider default task (do_build or specified by -c command
    line option) when normalizing.
    
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

19	1	lib/bb/cooker.py

commit f44b34833f164daf34c57703429ed8f122888037
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2015-10-16 10:18:29 +0100

    toaster: Allow any text input to machine configuration variable
    
    Allow any text input to the machine variable; as we may not have discovered
    all the available machines until after a build.
    
    [YOCTO #8418]
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

12	8	lib/toaster/toastergui/static/js/projectpage.js

commit 643c42069a2788e9f40fa1bc9845f32aed3d096c
Author: Ed Bartosh <ed.bartosh@linux.intel.com>
Date:   2015-10-15 09:34:17 -0700

    toaster: exit or return depending on the mode
    
    When toaster script is sourced 'return' should be used as
    using 'exit' will cause script to exit the shell and close terminal
    window. If script is called 'exit' should be used. Otherwise shell
    will throw and error:
      return: can only `return' from a function or sourced script
    
    Used 'return' or 'exit' depending on the toaster mode using
    TOASTER_MANAGED variable.
    
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: brian avery <avery.brian@gmail.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	bin/toaster

commit 9f68f317e33d617558fce3427a94e14ef65c7d88
Author: Ed Bartosh <ed.bartosh@linux.intel.com>
Date:   2015-10-15 09:34:16 -0700

    toaster: set TOASTER_MANAGED variable
    
    Set TOASTER_MANAGED to 1 if toaster is run as a script.
    
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: brian avery <avery.brian@gmail.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	2	bin/toaster

commit 4b8cb1098ad73b4e9dc65b5c6de7d11d2e2468c7
Author: Ed Bartosh <ed.bartosh@linux.intel.com>
Date:   2015-10-15 09:34:15 -0700

    toaster: get rid of SRCFILE
    
    Used TOASTER variable instead of SRCFILE as they're
    essentially the same.
    
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: brian avery <avery.brian@gmail.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	3	bin/toaster

commit 5368d9af4e2c121938fc2421a536fb7f20a987fd
Author: Ed Bartosh <ed.bartosh@linux.intel.com>
Date:   2015-10-15 09:34:14 -0700

    toaster: use path to the script to guess config path
    
    Used $TOASTER variable(path to the toaster script) instead of
    current directory name to get path to the toasterconf.json
    
    This way script should work in both modes and it doesn't depend
    on the current directory.
    
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: brian avery <avery.brian@gmail.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	3	bin/toaster

commit 4f409d8c01bae898ea142bd1417db99e12067753
Author: Elliot Smith <elliot.smith@intel.com>
Date:   2015-10-15 15:45:15 +0300

    toaster: Guard against builds with no targets
    
    Although this probably can't happen in practice (builds without
    targets), this constraint is not currently enforced in the data model.
    
    In the unlikely event that a build has no target (e.g. in test cases),
    this causes a template rendering error.
    
    Rather than rework the data model, add a guard to the template
    to prevent it from rendering the target name if there are no
    targets associated with the build.
    
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

7	2	lib/toaster/toastergui/templates/builddashboard.html

commit 59197320bdcefddf06084e871f1b5b21b21cbb63
Author: Elliot Smith <elliot.smith@intel.com>
Date:   2015-10-15 15:45:14 +0300

    toaster: Remove Toaster exceptions section of build dashboard
    
    Fatal build errors were displayed as exceptions, and highlighted
    with less severity than they deserved.
    
    Roll back to treating Toaster exceptions as errors by removing
    the toaster_exceptions member on Build objects and displaying
    EXCEPTION events in the errors section on the dashboard.
    
    [YOCTO #8320]
    
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

0	4	lib/toaster/orm/models.py
4	41	lib/toaster/toastergui/templates/builddashboard.html

commit b6eacbca9cacb607de864ab7d093deb296da8226
Author: Elliot Smith <elliot.smith@intel.com>
Date:   2015-10-15 15:45:13 +0300

    toaster: Record critical errors
    
    Critical errors (where a build failed for reasons of
    misconfiguration, such as a machine being specified which is not
    in a project's layers) were being ignored (only log records
    up to ERROR level were being logged to Toaster's db). This meant that
    the build would fail but would not correctly report why.
    
    Add support for CRITICAL error levels to the LogMessage model,
    include errors at this level in the errors property for a build,
    and show errors at this level in the build dashboard.
    
    [YOCTO #8320]
    
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

4	1	lib/bb/ui/buildinfohelper.py
2	0	lib/bb/ui/toasterui.py
13	7	lib/toaster/orm/models.py
6	5	lib/toaster/toastergui/templates/builddashboard.html

commit 8795667d03bd8705d7e13c5d3d6bb6da371fa91d
Author: Elliot Smith <elliot.smith@intel.com>
Date:   2015-10-14 15:43:45 +0100

    toaster: Test that exception isn't thrown by project page
    
    Add a test which checks that an exception is no longer thrown
    for the /toastergui/project/X page for the default project.
    
    Note that we still get a spinning dialogue box on this page
    because the default project has no configuration to display,
    but at least it doesn't fail altogether.
    
    [YOCTO #8277]
    
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

30	0	lib/toaster/toastergui/tests.py

commit af33409612139ab2347baf6b847b23faea19752d
Author: Elliot Smith <elliot.smith@intel.com>
Date:   2015-10-14 15:43:44 +0100

    toaster: Check whether buildrequest exists before using it
    
    Builds initiated from the command line don't have a buildrequest
    associated with them. The build.buildrequest association is
    only added if a build is triggered from toaster.
    
    Some of the code for displaying the status of a build refers
    to build.buildrequest without checking whether it has been set,
    which causes an error to be thrown.
    
    Add a guard to check whether the buildrequest has been set.
    
    [YOCTO #8277]
    
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

18	2	lib/toaster/orm/models.py

commit b1fc592131286ebbede2693be8c86636f0039011
Author: Elliot Smith <elliot.smith@intel.com>
Date:   2015-10-14 15:43:43 +0100

    toaster: Always run bldcontrol migrations
    
    The toaster startup script conditionally migrates the database
    tables depending on whether you are in managed mode or not. This
    means that if you are in analysis mode, some of the bldcontrol*
    database tables used by managed mode are not available.
    
    As a consequence, some of the code in toaster which refers to
    those tables can break in analysis mode, as there's no clean
    isolation of the two modes.
    
    To prevent this from happening, always run the migrations for
    managed mode and create the bldcontrol* tables, even if in
    analysis mode.
    
    Also clean up the function which starts up toaster so the
    logic is easier to follow.
    
    [YOCTO #8277]
    
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

39	17	bin/toaster

commit a22faae2c3a5948356ce3cbc73c34509de65d370
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2015-10-14 10:09:12 +0100

    toaster: buildinfohelper Detect command line builds
    
    When we're building using toaster as just a listener to bitbake
    (analysis mode) we need to handle the case where the toaster configuration data
    isn't present so we don't need to try and update the existing information.
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

22	12	lib/bb/ui/buildinfohelper.py

commit d4820f16c76398400ddd573db03c654c51d40c1b
Author: Belen Barros Pena <belen.barros.pena@intel.com>
Date:   2015-10-14 13:43:18 +0100

    toaster: Disable add layer button when input is empty
    
    The 'add layer' button in the project configuration page
    is enabled when you select a layer from the type ahead.
    However, if you delete the layer name, the 'add layer'
    button remains enabled, and if you click it, the last
    selected layer from the type ahead will be added to the
    project.
    
    It is probably better to disable the 'add layer' button
    when the input field is empty.
    
    [YOCTO #8449]
    
    Signed-off-by: Belen Barros Pena <belen.barros.pena@intel.com>
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

6	0	lib/toaster/toastergui/static/js/projectpage.js

commit b5af7084b28158a8a9eaf78db463555ae8e0f620
Author: Belen Barros Pena <belen.barros.pena@intel.com>
Date:   2015-10-14 13:20:50 +0100

    toaster: Have 'Version' next to recipe name
    
    In all Toaster tables we show the version next to the recipe
    or package names, with one exception: the recipes table in
    the layer details page, where we are showing the version
    next to the recipe description.
    
    This patch moves the version column next to the recipe name,
    for consistency with all other Toaster tables.
    
    Signed-off-by: Belen Barros Pena <belen.barros.pena@intel.com>
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	3	lib/toaster/toastergui/tables.py

commit 6167ee5a7569d8f841c340e672645cc133ea5a31
Author: Belen Barros Pena <belen.barros.pena@intel.com>
Date:   2015-10-14 13:12:14 +0100

    toaster: Improve directory structure layout
    
    File names in the directory structure often wrap
    due to big indenting for nested files and directories,
    unnecessary width in certain columns, and not using
    colspan when the symlink and package cells are empty.
    The wrapping makes the table harder to read.
    
    This patch reduces the amount of indenting, limits the
    width of the 'Size', 'Permissions', 'Owner' and 'Group'
    columns, and sets colspan to use the white space of the
    symlink and package names when empty.
    
    Signed-off-by: Belen Barros Pena <belen.barros.pena@intel.com>
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

4	0	lib/toaster/toastergui/static/css/default.css
1	1	lib/toaster/toastergui/static/js/jquery.treetable.js
11	7	lib/toaster/toastergui/templates/dirinfo.html

commit 1cbf0cf77a638257e18066f911fe4c4e13c278c6
Author: Ed Bartosh <ed.bartosh@linux.intel.com>
Date:   2015-10-14 14:10:10 +0300

    toaster: importlayer Update property names for importlayer api calls
    
    Update the property names used in checking for existing layers. The
    server side API changed but not all references were updated.
    
    [YOCTO #8300]
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

6	7	lib/toaster/toastergui/static/js/importlayer.js

commit c7cb8255d0ab1fd7715e878c1c83ef0cd920387e
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2015-10-13 09:58:49 +0100

    toaster: Fix missing tooltips from layers on project configuration page
    
    Re-enable the layer tooltips on the project configuration page.
    This adds the required fields to the API used for the layer dependencies
    to be able to show the metadata needed.
    
    Also fixes link hrefs which were missing in the add layers confirmation
    dialog (bug 8251).
    
    [YOCTO #8295]
    [YOCTO #8251]
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	4	lib/toaster/toastergui/static/js/projectpage.js
10	6	lib/toaster/toastergui/views.py

commit 3c72c7634ab69a5eb18aa20a5c6d16a3e2666f62
Author: Ed Bartosh <ed.bartosh@linux.intel.com>
Date:   2015-10-01 10:41:26 +0100

    toaster: Fix broken test case
    
    Fixed test_show_tasks_in_projectbuilds broken by latest changes in
    project build view.
    
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/toaster/toastergui/tests.py

commit f7c1bd49e2e28d12c6604f5ae54bc96e1e7b6946
Author: Ed Bartosh <ed.bartosh@linux.intel.com>
Date:   2015-10-01 14:19:57 -0700

    toaster: exclude recipes with empty names
    
    Modified get_all_compatible_recipes function to exclude recipes
    with empty names from the result queryset. This should stop UI
    to show recipes with empty names in compatible recipes page.
    
    [YOCTO #7969]
    
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: brian avery <avery.brian@gmail.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/toaster/orm/models.py

commit 4d76a9e418fd98a7882aa29f974a7389f9689314
Author: Ed Bartosh <ed.bartosh@linux.intel.com>
Date:   2015-10-01 14:19:56 -0700

    toaster: delete recipe if it can't be saved
    
    Due to Recipe model constraints some recipes can't be
    saved. However, they still can create incomplete records in
    the database. This causes all sorts of errors when Toaster
    operates with those objects. Removing them should fix those
    issues.
    
    [YOCTO #7969]
    
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: brian avery <avery.brian@gmail.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	0	lib/toaster/orm/models.py

commit 065652b9c649135f9e2fc5d9ba90e98f560dccdd
Author: Belen Barros Pena <belen.barros.pena@intel.com>
Date:   2015-10-02 14:43:26 +0100

    toaster: Remove project name from latest project builds
    
    The 'latest builds' list in the project builds page does not
    need to show the project name, since it lists only builds
    for the selected project.
    
    This patch removes the redundant project name.
    
    Signed-off-by: Belen Barros Pena <belen.barros.pena@intel.com>
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

4	2	lib/toaster/toastergui/templates/mrb_section.html

commit 159aa333c2f6344b5b37911c3f09601b9f0df6d8
Author: Ed Bartosh <ed.bartosh@linux.intel.com>
Date:   2015-10-02 11:05:16 -0700

    toaster: test get_alldeps API
    
    Added test case to test Layer_Version.get_alldeps API.
    
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: brian avery <avery.brian@gmail.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

19	1	lib/toaster/orm/tests.py

commit 73ea29ed065bfaa80ee368b2a38c157e36fe1676
Author: Ed Bartosh <ed.bartosh@linux.intel.com>
Date:   2015-10-02 11:05:15 -0700

    toaster: fix orm tests
    
    Cleaned up and fixed orm tests. Removed test_build_layerversion as
    it's not needed due to changed compatible_layer_versions API.
    
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: brian avery <avery.brian@gmail.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

4	29	lib/toaster/orm/tests.py

commit eee5311b867d3c8c33e06d04e103bfd3647146f4
Author: Ed Bartosh <ed.bartosh@linux.intel.com>
Date:   2015-10-02 11:05:14 -0700

    toaster: fix NameError
    
    Fixed exception: NameError: global name 'DoesNotExist' is not defined
    
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: brian avery <avery.brian@gmail.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/toaster/orm/models.py

commit 077d0f41a3bd9cf2802a1488f1d6156ccac7df1d
Author: Ed Bartosh <ed.bartosh@linux.intel.com>
Date:   2015-10-02 11:05:13 -0700

    toaster: use get_alldeps in layerdetails renderer
    
    Used Layer_Version.get_alldeps api in layerdetails template
    renderer to get list of layer dependencies.
    
    [YOCTO 8004]
    
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: brian avery <avery.brian@gmail.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	2	lib/toaster/toastergui/views.py

commit 7d853a3054a9ae3d18eb6f5bc13ba27d2795c31a
Author: Ed Bartosh <ed.bartosh@linux.intel.com>
Date:   2015-10-02 11:05:12 -0700

    toaster: implement API to get full list of deps
    
    Implemented Layer_Version.get_alldeps API to recursively get
    full list of dependencies for the layer. Dependencies that are
    already in the project are filtered out from the result.
    Result list of Layer_Version objects is sorted by layer name
    for UI to look consistent.
    
    This API is going to be used to show amount and list of
    dependencies for the layer in the list of compatible layers
    for the project.
    
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: brian avery <avery.brian@gmail.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

19	0	lib/toaster/orm/models.py

commit 9c40b3b6377ab8f5d6ac9b8e00585b71de00bf74
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2015-10-09 11:28:58 +0100

    toaster: Don't descend into directories for cached_layers
    
    As toaster makes use of clones of itself we have a mechanism to just
    clone the current checkout and use that as a basis for the git clone for
    the layers inside. For instance, in poky, if we're running in that directory,
    we don't ever want to change the current checkout so we make a copy of
    ourselves to do this work in.
    
    This steps through cached_layers and previously-traversed directories
    inside the current checkout to find any pre-existing checkouts.
    
    This was ending up traversing too many directories down, so remove
    the traverse and only deal with the current directory.
    
    [YOCTO #8463]
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

16	13	lib/toaster/bldcontrol/localhostbecontroller.py

commit 46af40b95f842aa14ef7e3f0d516aef3899d5e42
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2015-10-09 10:32:43 +0100

    toaster: Update JS unit tests
    
    Update JS unit tests.
    - Expand the add remove layer check to make sure that the layer is
      actually added to the project.
    - Remove some unused vars
    - Make sure that the layers/project ids will always exist at the point
      of running the test.
    - Add the missing typeahead input fields to the dom to fix the failing
      typeahead test.
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

16	16	lib/toaster/toastergui/static/js/tests/test.js
12	4	lib/toaster/toastergui/templates/js-unit-tests.html

commit 43469c3360566ad4897785f14f8717a9bc8b6078
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2015-10-09 10:32:42 +0100

    toaster: Fix stale layer state buttons
    
    Move the "is available to the project" state computation to the template
    for the Layer add/remove buttons, Recipe build/Add layer as done for the
    Package add/remove. This is more reliable as we can get an inconsistent
    state on the front end JS as there are many opportunities for hitting
    out of date project information.
    
    [YOCTO #8294]
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	8	lib/toaster/toastergui/static/js/layerBtn.js
1	1	lib/toaster/toastergui/static/js/table.js
1	1	lib/toaster/toastergui/static/js/tests/test.js
4	3	lib/toaster/toastergui/tables.py
10	2	lib/toaster/toastergui/templates/layer_btn.html
10	2	lib/toaster/toastergui/templates/recipe_btn.html
0	1	lib/toaster/toastergui/templates/toastertable.html

commit b3682d1d851e616efa0715f9d43815a92e259432
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2015-10-09 10:32:41 +0100

    toaster: tables Add the recipe filter back into the Recipe table
    
    Add the "Is recipe currently available in the project" filter back to
    the Recipe table which was removed when we had intermediate
    AvailableRecipe tables.
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

13	0	lib/toaster/toastergui/tables.py

commit b20f3626148e89af0e9fcfca911a5a1e4e355a41
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2015-10-09 10:32:40 +0100

    toaster: Fix typo in returning pk list of layer versions in current project
    
    This was accidentally returning the primary key of the ProjectLayer
    rather than the ProjectLayer.Layer_Version.pk
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/toaster/orm/models.py

commit cc63f10f69105205e65b5f9647232b2b4b23ad48
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2015-10-09 10:32:39 +0100

    toaster: layerdetails update build recipe button class name
    
    Update the class name which we are using for the recipe build button.
    This fixes a regression in the buttons being enabled/disabled when
    adding and removing the layer being viewed from the project.
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	2	lib/toaster/toastergui/static/js/layerdetails.js

commit 89e6cd03aa11c886f28520557af6c7ad51827b0e
Author: Elliot Smith <elliot.smith@intel.com>
Date:   2015-10-07 13:20:15 +0300

    toaster: Hide "Download build log" button if log doesn't exist
    
    Our builds pages show all builds, but also include build requests
    which may have resulted in a build failure, before the build
    started (e.g. at the recipe parsing stage).
    
    In such cases, the BuildStarted event is not captured by Toaster,
    so we have no idea where the log file for the failed build is.
    
    The result is that a build is shown by the Toaster UI /builds/ pages,
    but it is really a pretend build which never went beyond being a
    build request, and which has no associated log file. In turn, this
    breaks the "Download build log" button on the build dashboard,
    as there's no log file associated with the build.
    
    Fix this by hiding the "Download build log" button for builds
    which don't have a cooker_log_path.
    
    [YOCTO #8373]
    
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	1	lib/toaster/toastergui/templates/builddashboard.html

commit e076888a2120a37c388930073694750735d86507
Author: Ed Bartosh <ed.bartosh@linux.intel.com>
Date:   2015-10-07 15:31:20 +0100

    toaster: fix naming for clone directory
    
    Toaster uses git url and branch to make a clone directory
    name. Current code leaves '@' and '%' characters unchanged,
    which can cause generation of wrong directory names.
    
    Fixed this issue by replacing '@' and '%' with underscore.
    
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/toaster/bldcontrol/localhostbecontroller.py

commit b4ce793685f70cab3f28cb4329aaaf3878cd62e8
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2015-10-07 14:55:08 +0100

    toaster: buildinfohelper Skip packages we have no build info about
    
    If there are more packages listed as installed than we know about from
    bitbake, and therefore have insufficient information to be able to
    create a Toaster Package object then skip it. Also handle the case where
    a dependency references such a package.
    
    Also clarify the error logging.
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

31	11	lib/bb/ui/buildinfohelper.py

commit 34d4ef7289d72d151ad0acdccab8b99c8c31221e
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2015-10-07 14:55:07 +0100

    toaster: buildinfohelper associate build data with built_recipe
    
    Make sure we associate build data with the built recipe rather than
    toaster's configuration copy of the recipe.
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	1	lib/bb/ui/buildinfohelper.py

commit be2d04c1831608922f90da03cb26d7fd5c863a47
Author: brian avery <avery.brian@gmail.com>
Date:   2015-10-07 15:17:36 +0300

    toaster: remove bashisms so script works in dash as well
    
    [YOCTO #8217]
    
    Signed-off-by: brian avery <avery.brian@gmail.com>
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

4	5	bin/toaster

commit d5811968b5f22093365f381fb7e75ab46e5269c2
Author: brian avery <avery.brian@gmail.com>
Date:   2015-10-07 15:17:35 +0300

    toaster: get rid of interactivity in bldcontrol
    
    removed layer dir questions and base off TOASTER_DIR
    
    removed build dir questions and base off TOASTER_DIR
    
    base configuration file off of TOASTER_CONF
    
    fixed some pylint issues
    
    [YOCTO #8217]
    
    Signed-off-by: brian avery <avery.brian@gmail.com>
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	bin/toaster
37	101	lib/toaster/bldcontrol/management/commands/checksettings.py

commit 49e30c1aa8d717adbdcc15c90a668000789a6961
Author: brian avery <avery.brian@gmail.com>
Date:   2015-10-07 15:17:34 +0300

    toaster: check for configuration file and exit if not found
    
    [YOCTO #8217]
    
    Signed-off-by: brian avery <avery.brian@gmail.com>
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

5	1	bin/toaster

commit c4b351e40060a359d59ab51b5ed2f9713ca1a9a5
Author: brian avery <avery.brian@gmail.com>
Date:   2015-10-07 15:17:33 +0300

    toaster: remove layer and build dir interactive questions
    
    added TOASTER_CONF env var for toaasterconf.json
    
    added TOASTER_DIR env var for working dir
    
    added bugfix so WEB_PORT env variable is honored
    
    Signed-off-by: brian avery <avery.brian@gmail.com>
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

24	1	bin/toaster

commit 782b7c74d5f10ed255538ba0c975ff342a34f5bf
Author: brian avery <avery.brian@gmail.com>
Date:   2015-10-07 15:17:32 +0300

    toaster: removed superuser question from startup
    
    added comment explaining how to create one later
    
    Signed-off-by: brian avery <avery.brian@gmail.com>
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

4	5	bin/toaster

commit 55ba889ef8900c95447861fa3985ca9cfe06afdf
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2015-10-06 20:21:25 -0700

    toaster: orm Machines filter don't pass self in as parameter
    
    Fix typo don't pass self in as a parameter, this evaluated to true
    giving the wrong results meaning the machines typeahead did not return
    valid results.
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: brian avery <avery.brian@gmail.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/toaster/orm/models.py

commit 805fb2a9388c728600596e9b845a5c7eeaebd99c
Author: Elliot Smith <elliot.smith@intel.com>
Date:   2015-10-06 20:05:22 -0700

    toaster: Rationalise mimetype guessing to fix artifact downloads
    
    Artifact download links were broken because the function to
    get the mimetype for the artifact was incorrectly using the
    underlying mimetype library. The function was also attached
    to the build environment controller, which was unnecessary, as
    we only support local controllers anyway.
    
    Remove the mimetype getter on the build environment and
    use the one in the view code instead. This works correctly
    and prevents the download error from occurring.
    
    [YOCTO #8369]
    
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: brian avery <avery.brian@gmail.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

0	34	lib/toaster/bldcontrol/models.py
1	1	lib/toaster/toastergui/views.py

commit 0dd0ac25d54c73f13812db04826b57b3d16ea43f
Author: Elliot Smith <elliot.smith@intel.com>
Date:   2015-10-06 20:05:21 -0700

    toaster: Use Python's mimetypes module
    
    filemagic is used to guess the mimetype of files when a user
    requests a download. However, this adds a dependency on an
    external library.
    
    Python does have a mimetypes module, though this guesses the
    mimetype rather than doing anything clever with the actual
    file content. But for our purposes, it's more than adequate.
    (NB Django also uses this module when serving static files.)
    
    Use this instead of relying on any external code, and remove
    the filemagic dependency.
    
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: brian avery <avery.brian@gmail.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

11	4	lib/toaster/toastergui/views.py
0	1	toaster-requirements.txt

commit 9a825eb928cb35096d2c1563788310fb6a13e93e
Author: David Reyna <David.Reyna@windriver.com>
Date:   2015-10-06 16:43:30 +0100

    toaster: display warnings for bad "IMAGE_FSTYPES" values
    
    Display warning message for IMAGE_FSTYPES when no value is selected or
    when the filter does not have any matches
    
    [YOCTO #8126]
    
    Signed-off-by: David Reyna <David.Reyna@windriver.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

18	3	lib/toaster/toastergui/templates/projectconf.html

commit 1f7bfe5e13bc39bb7eb6e039fe4b6291fc95d531
Author: Belen Barros Pena <belen.barros.pena@intel.com>
Date:   2015-10-06 14:31:50 +0100

    toaster: Set default columns in recipes tables
    
    The compatible image recipes and software recipes tables
    show pretty much all their columns by default. That's a few
    too many columns. The default columns in both tables should
    be: recipe, version, description, layer and build.
    
    This patch sets the above as the default columns. It also
    changes the table heading 'Recipe Version' to just 'Version',
    which is shorter and self-explanatory.
    
    [YOCTO #8421]
    
    Signed-off-by: Belen Barros Pena <belen.barros.pena@intel.com>
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

5	2	lib/toaster/toastergui/tables.py

commit 1f15557efc922bf460640eeaf1622453419bc9a6
Author: Belen Barros Pena <belen.barros.pena@intel.com>
Date:   2015-10-06 14:20:44 +0100

    toaster: Comment out broken sorting and filters
    
    YOCTO #8131 records that the sorting by 'errors', 'warnings'
    and 'time', and the filtering by 'errors' and 'warnings',
    are broken in the 'all builds' and 'project builds' pages.
    
    To avoid exposing broken functionality to users, comment
    out the sorting and filtering in those columns until we
    we have a fix for YOCTO #8131.
    
    Signed-off-by: Belen Barros Pena <belen.barros.pena@intel.com>
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

26	23	lib/toaster/toastergui/views.py

commit 44dccd3018554915868d6c8fe5e22624a2fcdec5
Author: Elliot Smith <elliot.smith@intel.com>
Date:   2015-10-05 12:08:32 +0100

    toaster: Don't HTTP cache ToasterTable responses
    
    Django allows generated pages to be cached by default by the
    browser. This can result in stale data displaying for some pages.
    
    Instead, disable HTTP caching of ToasterTable responses, so that
    each time a ToasterTable view is displayed, its data is
    refreshed. This carries a performance penalty, but ensures that
    ToasterTable views (e.g. compatible layers) are correctly
    refreshed if the user navigates their history with forward/back.
    
    [YOCTO #7660]
    
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

6	0	lib/toaster/toastergui/widgets.py

commit 70c5e40a0f77ae4835fb95275621c345f8190240
Author: Elliot Smith <elliot.smith@intel.com>
Date:   2015-10-05 12:08:31 +0100

    toaster: Don't add new history entries when table data loads
    
    When ToasterTable data is loaded into the UI, a new entry is
    added to the browser history. This means that pressing the back
    button appears to have no effect, as you end up at the same page,
    possibly with slightly different data.
    
    Instead, use replaceState(), so that the browser history doesn't
    grow, but the page context still gets updated.
    
    [YOCTO #7660]
    
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	12	lib/toaster/toastergui/static/js/table.js

commit 27d0360d13af0c698bf3a224b3f0d415f17bb678
Author: Ed Bartosh <ed.bartosh@linux.intel.com>
Date:   2015-10-05 10:43:18 +0100

    toaster: use meaningful logging levels
    
    Changed logging levels to more appropriate ones.
    
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

4	4	lib/bb/ui/toasterui.py

commit cd4137e13af6964858640b78aa7fe6f1612be251
Author: Ed Bartosh <ed.bartosh@linux.intel.com>
Date:   2015-10-05 10:43:17 +0100

    toaster: ignore ReachableStamps event
    
    Added ReachableStamps event to the list of known events to
    ignore. This should stop toaster throwing error message:
    ERROR: Unknown event: <bb.event.ReachableStamps>
    
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	1	lib/bb/ui/toasterui.py

commit 3e63abc6977bd5ef52ccb4d3757536bd564dfd34
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2015-10-01 15:16:41 +0100

    bitbake/lib: Update version to 1.28.0
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	bin/bitbake
1	1	lib/bb/__init__.py

commit 97679d18955dadaa34f9450564e44da99984d140
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2015-09-30 14:55:56 +0100

    siggen: Make it clear why nostamp tasks signatures don't match
    
    If you run bitbake-diffsigs against two differing sigdata files from
    nostamp tasks it shows no difference despite the differing checksum.
    
    Change the code so this shows up as a nostamp 'taint' and at least
    makes the issue clearer to the end user.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

9	1	lib/bb/siggen.py

commit d473fc84acddfd69a7207affcd89f65ea2ecf730
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2015-09-30 14:29:01 +0100

    runqueue: Add handling of virtual/xxx provider mappings
    
    This firstly prints debug messages which show how bitbake decided to resolve
    the virtual/xxx providers which is useful for debugging.
    
    If the siggen has a tasks_resolved() method, it calls this, passing in
    the mappings, allowing that to do things with the resolved names.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

9	0	lib/bb/runqueue.py

commit ce51a51482d0900060512b24503714a730d72266
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2015-09-30 14:28:21 +0100

    taskdata: Add a function to return the virtual/ mapping data
    
    When building an execution task graph, bitbake does resolve virtual/xxx
    namespaces into specific providers. This data isn't exported anywhere
    however.
    
    This adds a function so that runqueue can at least retrieve this data
    which can then be used by the system.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

12	0	lib/bb/taskdata.py

commit f60c6a2172bceeb5682dcb738a02c4bf26176566
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2015-09-29 14:07:59 +0100

    cookerdata: Rename BBPKGS -> BBTARGETS
    
    BBPKGS is a confusing name from before we tried to straighten out our
    terminology. Its also a mostly unknown variable that isn't in wide use.
    
    I've been asked about it recently and before people start relying more
    heavily on it, I'd like to rename it BBTARGETS which better describes
    what it does. Its not currently in the manuals, I'd prefer to document
    it under the better name. I've not provided any migration path for the
    variable since I believe its unused currently.
    
    It allows the targets to built to be specified from a conf file in
    addition to those on the commandline.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	2	lib/bb/cookerdata.py

commit 3cb55bdf06148943960e438291f9a562857340a3
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2015-09-29 09:28:24 +0100

    bitbake-worker: Guard against multiprocessing corruption of event data
    
    In the forked child, we may use multiprocessing. There is only one event
    pipe to the worker controlling process and if we're unlucky, multiple
    processes can write to it at once corrupting the data by intermixing it.
    
    We don't see this often but when we do, its quite puzzling. I suspect it
    only happens in tasks which use multiprocessng (do_rootfs, do_package)
    and is much more likely to happen when we have long messages, usually many
    times PAGE_SIZE since PAGE_SIZE writes are atomic. This makes it much more
    likely within do_roofs, when for example a subprocess lists the contents
    of a rootfs.
    
    To fix this, we give each child a Lock() object and use this to serialise
    writes to the controlling worker.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

9	0	bin/bitbake-worker

commit 139e851831eea682aba0f9403dcc2eea7c1b05bd
Author: Ed Bartosh <ed.bartosh@linux.intel.com>
Date:   2015-09-23 15:34:58 -0700

    toaster: move clones into subdirectory
    
    By default Toaster clones layers to the same level where
    poky clone is. This can look messy if a lot of layers are
    used for Toaster builds.
    
    Moving them into _toaster_clones/ subdirectory should make
    directory structure looking cleaner. It also safer to isolate
    toaster clones from what user might create.
    
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: brian avery <avery.brian@gmail.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/toaster/bldcontrol/localhostbecontroller.py

commit a9baf856a1ef7d84a47fa6615353f5b3fdb8a73b
Author: Ed Bartosh <ed.bartosh@linux.intel.com>
Date:   2015-09-23 15:34:57 -0700

    toaster: make clone directory name unique
    
    Changed naming scheme for clone directory. Used full git url and branch to
    make it unique. This should fix the issue with using the same git
    repository, but different protocols, e.g. git://some.git.repo and
    http://some.git.repo.
    
    [YOCTO #8101]
    
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: brian avery <avery.brian@gmail.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	7	lib/toaster/bldcontrol/localhostbecontroller.py

commit 30a9271ffa2834d9a4ffafe5c03ef9e874460419
Author: Ed Bartosh <ed.bartosh@linux.intel.com>
Date:   2015-09-23 15:34:56 -0700

    toaster: fix reimporting module
    
    removed second 'import re' from localhostbecontroller.py
    
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: brian avery <avery.brian@gmail.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

0	1	lib/toaster/bldcontrol/localhostbecontroller.py

commit ec05beff7d1b06e4df98199925c7102f5684f4e0
Author: Ed Bartosh <ed.bartosh@linux.intel.com>
Date:   2015-09-23 15:34:55 -0700

    toaster: fix bug in resetting git repository
    
    git reset --hard should be given either commit id or
    origin/<ref name> to work properly. Without this fix git will
    complain that origin/<commit id> does not exist.
    
    [YOCTO #7505]
    
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: brian avery <avery.brian@gmail.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	1	lib/toaster/bldcontrol/localhostbecontroller.py

commit f3641a8422e67890410594453b8baf362c27df2b
Author: Ed Bartosh <ed.bartosh@linux.intel.com>
Date:   2015-09-23 15:34:54 -0700

    toaster: use git reset --hard instead of rebase
    
    Replaced 'git checkout <ref> && git rebase' with 'git reset --hard' as
    with git checkout repository ends up with detached HEAD. Rebase makes
    things even worse as it can cause conflicts. git reset --hard resets
    repository to the required state in a most straightforward and
    reliable way.
    
    [YOCTO #7505]
    
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: brian avery <avery.brian@gmail.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/toaster/bldcontrol/localhostbecontroller.py

commit edac7b7533d50455baaaf05a46b7ace49bb24b95
Author: Ed Bartosh <ed.bartosh@linux.intel.com>
Date:   2015-09-23 15:34:53 -0700

    toaster: don't use --single-branch when cloning
    
    git clone --single-branch works only with ref names. It fails if
    commit sha1 is set in layer configuration with this error:
    fatal: Remote branch <commit sha1> not found in upstream origin
    
    Cloning repository without using --single-branch should work for
    refs and commit sha1.
    
    [YOCTO #7505]
    
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: brian avery <avery.brian@gmail.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	2	lib/toaster/bldcontrol/localhostbecontroller.py

commit 5e423237f9f4ff7e7e03bf066b0142ba4bd82219
Author: Markus Lehtonen <markus.lehtonen@linux.intel.com>
Date:   2015-09-24 16:02:23 +0300

    utils: only add layer once in edit_bblayers_conf()
    
    Prevent edit_bblayers_conf() from adding layer(s) multiple times. This
    happened when BBLAYERS variable was "listed" multiple times in
    bblayer.conf - i.e. the configuration was split into multiple separate
    assignments.
    
    [YOCTO #8316]
    
    Signed-off-by: Markus Lehtonen <markus.lehtonen@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	0	lib/bb/utils.py

commit ce9a7f1819a1897878ce154b3ee7e727a76165b0
Author: David Reyna <David.Reyna@windriver.com>
Date:   2015-09-29 08:15:19 +0100

    toaster: display most recent builds for projects
    
    Display the most recent builds in the given project's build page.
    
    [YOCTO #8186]
    
    Signed-off-by: David Reyna <David.Reyna@windriver.com>
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

11	5	lib/toaster/toastergui/templates/mrb_section.html
7	3	lib/toaster/toastergui/templates/projectbuilds.html
3	0	lib/toaster/toastergui/views.py

commit 505979ab931e3a2a218d7030d6064987e8f9ff14
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2015-09-29 10:50:10 +0100

    toaster: orm remove the complicated querying on the ORM
    
    We no longer need to compute each layer_version and all the recipes
    which belong to this.
    
    [YOCTO #8147]
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: brian avery <avery.brian@gmail.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

30	19	lib/toaster/orm/models.py
1	1	lib/toaster/toastergui/tables.py
3	2	lib/toaster/toastergui/typeaheads.py

commit 46b119eb62a5a612fe4c0847862d34f408e556f7
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2015-09-28 21:45:31 -0700

    Revert "bitbake: toaster: don't re-create Target objects"
    
    This delete followed up the foreign keys and deleted things that were
    not expected to be deleted.
    
    This reverts commit 08000eb27eb8413686fb2c8daf14d234a8bff83a.
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: brian avery <avery.brian@gmail.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

16	1	lib/bb/ui/buildinfohelper.py

commit 0683d9a2b15e3234a94437aaebac84bfcca1420b
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2015-09-28 21:45:30 -0700

    toaster: buildinfohelper Create a copy of the built layer and recipe
    
    Create a copy of the built layer and the recipes associated with it.
    This is so that the user can view the historical information about a
    build. i.e. a snapshot of the layer version and artifacts produced at
    that build.
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: brian avery <avery.brian@gmail.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

41	13	lib/bb/ui/buildinfohelper.py
1	1	lib/toaster/orm/models.py

commit 8480e275e87275921d0dd54f2a7a445b1cd40203
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2015-09-28 21:45:29 -0700

    toaster: tables show all recipes in the layerdetails even duplicates
    
    For some layers we have multiple recipes for the same software with
    differing versions. Change to showing all versions and add a version
    column to the table instead.
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: brian avery <avery.brian@gmail.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

4	2	lib/toaster/toastergui/tables.py

commit a3d47eb923dd2cb5259f387c79549822807eca49
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2015-09-28 21:45:28 -0700

    toaster: Prioroitise the layer more generic vcs reference over the sha
    
    When we do a build we update the last commit value that the layer was built at
    However in future builds we do want to use the named reference rather
    than the commit sha, e.g. master/fido
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: brian avery <avery.brian@gmail.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	2	lib/toaster/orm/models.py

commit 838e77c7c3c4006abd1327343a004590ab652de9
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2015-09-28 21:45:27 -0700

    toaster: Create a relationship between build information and toaster layers
    
    Previously this layer relationship was done by trying to match path
    information that came back to the buildinfohelper with trying to query for
    data in toaster's layers table. This rarely matched due to the lose coupling.
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: brian avery <avery.brian@gmail.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

28	2	lib/bb/ui/buildinfohelper.py
180	0	lib/toaster/bldcontrol/migrations/0009_auto__add_field_brlayer_layer_version.py
2	1	lib/toaster/bldcontrol/models.py
1	1	lib/toaster/orm/models.py

commit 8e36b6848c14f2708e1f87d12fb533ca0b596c65
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2015-09-28 21:45:26 -0700

    toaster: Special case the openembedded-core layer to avoid duplicates
    
    If the openembedded-core layer is specified in the toasterconf we need
    to treat it differently because we may also get this layer either from
    the layerindex source or I can also be provided locally.
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: brian avery <avery.brian@gmail.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

21	0	lib/toaster/orm/models.py

commit 69f4ece18d70825d620f1d360749d587ea16f2a0
Author: Ed Bartosh <ed.bartosh@linux.intel.com>
Date:   2015-09-28 21:45:25 -0700

    toaster: Add test cases for new Image customisation features
    
    - Adds tests for new ToasterTables
    - Adds tests for new ReST API
    
    co-author: Elliot Smith <elliot.smith@intel.com>
               Michael Wood <michael.g.wood@intel.com>
    
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: brian avery <avery.brian@gmail.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

182	5	lib/toaster/toastergui/tests.py

commit 543586462b66434741f47f2884b4ccdeda5397b5
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2015-09-28 21:45:24 -0700

    toaster: Add Image customisation frontend feature
    
    Add the Image customisation front end feature to Toaster.
    Caveat - This feature is currently in development and should not be
    enabled by default.
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: brian avery <avery.brian@gmail.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

50	0	lib/toaster/toastergui/static/js/customrecipe.js
13	0	lib/toaster/toastergui/static/js/layerBtn.js
49	0	lib/toaster/toastergui/static/js/newcustomimage.js
5	2	lib/toaster/toastergui/templates/baseprojectpage.html
9	0	lib/toaster/toastergui/templates/customise_btn.html
142	0	lib/toaster/toastergui/templates/customrecipe.html
54	0	lib/toaster/toastergui/templates/newcustomimage.html
16	0	lib/toaster/toastergui/templates/pkg_add_rm_btn.html
1	1	lib/toaster/toastergui/templates/project.html
8	1	lib/toaster/toastergui/templates/projecttopbar.html
12	5	lib/toaster/toastergui/urls.py
9	0	lib/toaster/toastergui/views.py

commit 4e5472e9ba6850081baa9d56fabc4ddb1aa24846
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2015-09-28 21:45:23 -0700

    toaster: Add ToasterTables for Image customisation feature
    
    - Split up the recipes tables into Image recipes and Software Recipes
    - Add CustomImageRecipe table
    - Add SelectPackagesTable table
    - Add NewCustomImagesTable table
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: brian avery <avery.brian@gmail.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

188	34	lib/toaster/toastergui/tables.py

commit 84be400237173970716616eeab6a37d776aa011b
Author: Ed Bartosh <ed.bartosh@linux.intel.com>
Date:   2015-09-28 21:45:22 -0700

    toaster: Add new ReST API for Image Customisation feature
    
    Implemented xhr_customrecipe API. To create a custom recipe from a
    base recipe.
    Implemented xhr_customrecipe_packages API to add/remove packages
    to/from custom recipe.
    
    co-authored see Signed-off-by
    
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: brian avery <avery.brian@gmail.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

9	1	lib/toaster/toastergui/urls.py
150	2	lib/toaster/toastergui/views.py

commit 076945ea026091dc709f7cfea01ef119d0572bf3
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2015-09-28 21:45:21 -0700

    toaster: Fix indentation of jsunittests view
    
    Fix indentation to 4 spaces
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: brian avery <avery.brian@gmail.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

10	10	lib/toaster/toastergui/views.py

commit bb0696f343aca44207581f15ff2b4f0045f7530c
Author: Ed Bartosh <ed.bartosh@linux.intel.com>
Date:   2015-09-28 21:45:20 -0700

    toaster: implement decorator for REST responses
    
    Implemented xhr_response decorator to decorate responses
    from REST methods into Django HttpResponse objects.
    
    This decorator should reduce amount of repeated code in
    REST methods and make them more readable.
    
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: brian avery <avery.brian@gmail.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

13	0	lib/toaster/toastergui/views.py

commit ffc11b2c6c6bac4643233cc46418b025c94607c8
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2015-09-28 21:45:19 -0700

    toaster: add toggle for enabling image customisation feeature
    
    This feature is currently under heavy development and should be used
    with caution.
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: brian avery <avery.brian@gmail.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	0	lib/toaster/toastergui/views.py
5	0	lib/toaster/toastermain/settings.py

commit 33cbf4cd3b4ca47c4901501f5f1eafdfdfdae023
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2015-09-28 21:45:18 -0700

    toaster: Add CustomImageRecipe model
    
    This model lists custom image recipes for the project.
    It is populated when new custom image is created.
    It holds reference to the base recipe and list of packages
    included into custom image.
    
    For CustomImageRecipes the packages will be copied in and
    therefore not associated with a build so Remove the requirement
    for the package to have a Build.
    
    co-author: Ed Bartosh <ed.bartosh@linux.intel.com>
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: brian avery <avery.brian@gmail.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

375	0	lib/toaster/orm/migrations/0027_auto__add_customimagerecipe__add_unique_customimagerecipe_name_project.py
10	1	lib/toaster/orm/models.py

commit aa0b2dc6789cb6ae12511a4a930a4118337a162e
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2015-09-28 21:45:17 -0700

    toaster: ToasterTable remove unused class definition
    
    Remove ToasterTemplateView as this isn't used by anything.
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: brian avery <avery.brian@gmail.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

0	27	lib/toaster/toastergui/widgets.py

commit 3492c1570db9ecd728d9901bda1f02a2d7495f19
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2015-09-28 21:45:16 -0700

    toaster: add nocache option to the ToasterTable widget
    
    Useful for skipping the cache mechanism when debugging.
    Simply append nocache=true to the end of the url with the table in
    it.
    Also adds a debug message if the table is using cached data.
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: brian avery <avery.brian@gmail.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

7	0	lib/toaster/toastergui/widgets.py

commit 8152db1e35b9a3f35a25f801008f6fc61a6b11c4
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2015-09-28 21:45:15 -0700

    toaster: widgets ToasterTable Add more info to search field exception
    
    If we get a search fields exception then also print out the model name
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: brian avery <avery.brian@gmail.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	1	lib/toaster/toastergui/widgets.py

commit 68b9c2d95ab17ee2d16325862342126eb5c3c1a7
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2015-09-28 21:45:14 -0700

    toaster: widgets ToasterTable add logger to notify when cache hit
    
    Useful for debugging to remind you if you're hitting a cache or not
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: brian avery <avery.brian@gmail.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

4	0	lib/toaster/toastergui/widgets.py

commit f81b48c30a548bee946d34c56aa1872785bcec30
Author: Ed Bartosh <ed.bartosh@linux.intel.com>
Date:   2015-09-28 21:45:13 -0700

    toaster: create custom layer and recipes for Image customisation
    
    When building customised recipes toaster creates custom layer directory
    and puts layer.conf and custom recipes to it.
    
    [YOCTO #8075]
    
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: brian avery <avery.brian@gmail.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

49	2	lib/toaster/bldcontrol/localhostbecontroller.py

commit 2f7949caec3c9194328c35b2e075eaae85409efe
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2015-09-28 21:45:12 -0700

    toaster: tables Move the title and name into the widget
    
    For historical reasons this was being set in the urls definition. We
    can set this in the actual definition of the table and defaults in the
    widget.
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: brian avery <avery.brian@gmail.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	0	lib/toaster/toastergui/tables.py
13	9	lib/toaster/toastergui/urls.py
8	1	lib/toaster/toastergui/widgets.py

commit d769d3f54faaf1a3091b1eb6ed1d17a8a108210a
Author: Ed Bartosh <ed.bartosh@linux.intel.com>
Date:   2015-09-28 21:45:11 -0700

    toaster: make a workaround for old style index
    
    For a new style indexes 'inherits' field is used to determine if
    recipe is an image recipe.
    
    As old style indexes don't have 'inherits' field this can be
    guessed from recipe name. Let's consider recipe an image recipe
    if recipe name contains '-image-'.
    
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: brian avery <avery.brian@gmail.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	0	lib/toaster/orm/models.py

commit 851e53a216682fc9133f51c05a24527cfc677741
Author: Leonardo Sandoval <leonardo.sandoval.gonzalez@linux.intel.com>
Date:   2015-09-10 11:59:45 +0000

    prserv/serv.py: Better messaging when starting/stopping the server with port=0
    
    When starting the server using port=0, the server actually starts with a
    different port, so print a message with this new value. When stopping the
    server with port=0, advise the user which ports the server is listening to,
    so next time it tries to close it, user can pick up the correct one.
    
    [YOCTO #8560]
    
    Signed-off-by: Leonardo Sandoval <leonardo.sandoval.gonzalez@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

21	2	lib/prserv/serv.py

commit c1b4754f69003df1a83fafc1c80a9ef74400b6dd
Author: Leonardo Sandoval <leonardo.sandoval.gonzalez@linux.intel.com>
Date:   2015-09-23 13:39:27 +0000

    prserv/serv: Close the DB connection out of class destructor
    
    When launching the PR server daemon, the PRData __del__ function was being
    called (no reason found yet) where the DB connection closed, thus following
    PR updates were not getting into the DB. This patch closes the connection
    explicitly, not relaying on the __del__ function execution.
    Closing the connection in turn causes all WAL file transactions to be moved
    into the database (checkpoint), thus effectively updating the database.
    
    [YOCTO #8215]
    
    Signed-off-by: Leonardo Sandoval <leonardo.sandoval.gonzalez@linux.intel.com>
    Signed-off-by: Ross Burton <ross.burton@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/prserv/db.py
1	1	lib/prserv/serv.py

commit bd6398e967c234e89d773f509512ebf460fa76ff
Author: Leonardo Sandoval <leonardo.sandoval.gonzalez@linux.intel.com>
Date:   2015-09-15 14:59:38 +0000

    prserv/serv: Start/Stop daemon using ip instead of host
    
    In cases where hostname is given instead of an IP (i.e. localhost
    instead of 127.0.0.1) when stopping the server with bitbake-prserv --stop,
    the server shows a misleading message indicating that the daemon was not
    found, where it is actually stopped. This patch converts host to IP values
    before starting/stopping the daemon, so it will always work on IP, not on
    hostnames, avoiding problems like the latter.
    
    [YOCTO #8258]
    
    Signed-off-by: Leonardo Sandoval <leonardo.sandoval.gonzalez@linux.intel.com>
    Signed-off-by: Ross Burton <ross.burton@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

8	5	lib/prserv/serv.py

commit d3675cca419946cc19b3f280446fe1f656f11902
Author: Cristian Iorga <cristian.iorga@intel.com>
Date:   2015-09-18 15:46:28 +0100

    toaster: start script warning text formatting small improvement
    
    Add a carriage return to build environment warning message to
    avoid it being  mixed up with shell prompt.
    
    Signed-off-by: Cristian Iorga <cristian.iorga@intel.com>
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	bin/toaster

commit 74d67be7a4b591fab2278f7c184f282d11620c62
Author: Markus Lehtonen <markus.lehtonen@linux.intel.com>
Date:   2015-09-21 16:07:57 +0300

    tinfoil: remove logging handler at shutdown
    
    Otherwise the logger gets multiple handers (and the user get duplicate
    logging output) if another tinfoil instance is initialized after one is
    shut down().
    
    Signed-off-by: Markus Lehtonen <markus.lehtonen@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

5	4	lib/bb/tinfoil.py

commit 0df02c87573bf9a66df2e424cd9534e67a8ab3dc
Author: Belen Barros Pena <belen.barros.pena@intel.com>
Date:   2015-09-21 19:01:09 +0100

    toaster: remove time from builds in progress
    
    In the 'latest builds' section of the all builds page,
    completed builds show the time they completed at. Builds
    in progress should not display such time, since they
    haven't completed yet.
    
    This patch removes the time information that was showing
    for builds in progress, whatever that time actually was.
    
    Signed-off-by: Belen Barros Pena <belen.barros.pena@intel.com>
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	1	lib/toaster/toastergui/templates/mrb_section.html

commit a4015768183e5a3fa39a6c2b4dea0088ca182d80
Author: Elliot Smith <elliot.smith@intel.com>
Date:   2015-09-21 19:42:35 -0700

    toaster: Add fake entry to Target_File for filesystem root
    
    The files-in-image.txt file is produced by bitbake after an
    image is created, listing all the files in the image.
    However, this list doesn't include the root directory ('/').
    
    buildinfohelper.py then tries to construct the filesystem
    tree from this file, assuming that every directory apart from
    the root directory (which is special-cased) can be assigned
    a parent. But because the root directory isn't listed in
    files-in-image.txt, an object for the root directory is never
    created.
    
    The direct subdirectories of the root ('./bin', './usr' etc.)
    then can't be assigned a parent directory, as the object
    representing the root directory doesn't exist. This
    results in a Target_File lookup error and causes the
    directory listing page to fail.
    
    Fix this by creating a fake entry for the root directory
    in the Target_File table, so that the direct subdirectories
    of / can be assigned a parent. Note that it doesn't matter
    that the root is faked, as its properties are never shown
    in the directory structure tree.
    
    [YOCTO #8280]
    
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: brian avery <avery.brian@gmail.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

17	14	lib/bb/ui/buildinfohelper.py

commit 8fc7f94af19cd8489a944b02d9a406bd62d001fa
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2015-09-21 19:45:24 -0700

    toaster: layerdetails Fix back button tab behaviour
    
    This completes the behaviour fix of the back button in the layerdetails
    page as we not only have parameters in our history we also have the hash
    to indicate which tab is active. As we pop our history we need to show
    the corresponding tab.
    
    [YOCTO #8252]
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: brian avery <avery.brian@gmail.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

23	5	lib/toaster/toastergui/static/js/layerdetails.js

commit ab94f4bbef38d23e7e8be0663781eaecf84f0172
Author: Ke Zou <ke.zou@windriver.com>
Date:   2015-09-23 15:18:11 +0100

    toaster: UI test improvements
    
    * Add decorator in logging mechanism
    * Add more debug information
    
    Signed-off-by: Ke Zou <ke.zou@windriver.com>
    Signed-off-by: Stanciu Mihail <stanciux.mihail@intel.com>
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

167	103	lib/toaster/contrib/tts/toasteruitest/toaster_automation_test.py

commit bf8748aafc2291bb814fe0ec8a28d5eed9a1d5f0
Author: brian avery <avery.brian@gmail.com>
Date:   2015-09-23 15:05:40 +0100

    toaster: support selenium testing from mac OS X
    
    * added a mac section to the cfg file
    * added mac specific screenshot code
    
    Signed-off-by: brian avery <avery.brian@gmail.com>
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

4	1	lib/toaster/contrib/tts/toasteruitest/toaster_automation_test.py
5	1	lib/toaster/contrib/tts/toasteruitest/toaster_test.cfg

commit 092b1a9eebbd3f0747f6152c63182f18bccb2054
Author: Ed Bartosh <ed.bartosh@linux.intel.com>
Date:   2015-09-22 10:34:55 +0100

    toaster: add 2 UI tests
    
    Tested that UI shows task names for the builds in
    both all-builds and projectbuilds views.
    
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

22	2	lib/toaster/toastergui/tests.py

commit 3c196c15f0ae4c6ac2b92e0a75562962f3da0089
Author: Ed Bartosh <ed.bartosh@linux.intel.com>
Date:   2015-09-22 10:34:54 +0100

    toaster: change UI to show tasks
    
    Changed toaster UI to show tasks if they're specified for the
    builds and use them when restarting builds.
    
    [YOCTO #7442]
    
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

11	1	lib/toaster/toastergui/templates/builds.html
18	5	lib/toaster/toastergui/templates/mrb_section.html
11	1	lib/toaster/toastergui/templates/projectbuilds.html

commit aab4aff75eefb31aa53885d7735feee5daa294aa
Author: Ed Bartosh <ed.bartosh@linux.intel.com>
Date:   2015-09-22 10:34:53 +0100

    toaster: don't re-create Target objects
    
    Due to re-creating Target objects from bitbake events task information
    stored in original objects is lost.
    
    There is no valid reason to remove existing objects. It's safer to query
    them instead of re-creating as original object contain more information
    than events coming from bitbake.
    
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	16	lib/bb/ui/buildinfohelper.py

commit 0a69a8a18075c976ed8681d9d75529f8c2f48514
Author: Ed Bartosh <ed.bartosh@linux.intel.com>
Date:   2015-09-22 10:34:52 +0100

    toaster: store task name in Target objects
    
    Information about a task is not stored in Target objects.
    This makes it impossible to correctly operate with the builds
    where task is specified.
    
    Storing taks name is an enabler for other fixes in UI and backend
    related to restarting builds.
    
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/toaster/bldcontrol/management/commands/runbuilds.py
1	1	lib/toaster/orm/models.py

commit 93e4c9bb2393b1074f5a01e7eaaac742a59d8086
Author: Romain Perier <romain.perier@gmail.com>
Date:   2015-09-18 18:35:22 +0200

    bitbake: bb.fetch2.git: Import errno module
    
    Currently this module is dereferencing errno.ENOENT but the python module "errno"
    is not imported, which causes a crash when fetching from a git repository.
    
    Signed-off-by: Romain Perier <romain.perier@gmail.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	0	lib/bb/fetch2/git.py

commit 771c08b9be1f7875e0216e381ab0a81ef0d26256
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2015-07-24 16:05:20 +0100

    toaster: hide irrelevant builds in the project builds view
    
    This patch fixes the project builds view so it doesn't show
    "in progress" builds or builds for other projects.
    
    Note that this also modifies the "all builds" view to use
    the same queryset filtering as the project builds. This is
    to avoid excluding "in progress" builds more than once, which
    is what was happening before.
    
    The patch also has a minor change to ensure that when
    displaying the project builds page, only builds for that
    project are in the results.
    
    The queryset filtering is now split over several lines so
    you can see what's going on.
    
    [YOCTO #8236]
    [YOCTO #8187]
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

88	3	lib/toaster/toastergui/tests.py
2	3	lib/toaster/toastergui/views.py
1	0	toaster-requirements.txt

commit f3ee534cb0560dbb5f88a0ffe01e9305bae102e1
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2015-09-18 07:55:47 +0000

    data_smart: Ensure OVERRIDES dependencies account for contains()
    
    The dependencies of OVERRIDES were not including DEFAULTTUNE in OE-Core.
    This is pulled in by a bb.utils.contains() reference which the override
    dependency tracking code wasn't accounting for.
    
    This patch ensures we do track contains references too.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

6	2	lib/bb/data_smart.py

commit 944734503768f9e9223ef041f2d7873455418a54
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2015-09-16 22:01:07 +0100

    data_smart: Correctly handle OVERRIDE values set using ??=
    
    Right now, OVERRIDES dependency variables set using ??=, e.g. TARGET_ARCH
    in OE-Core don't have their dependencies tracked. This is a bug, fix it.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	0	lib/bb/data_smart.py

commit 82143ac064d391300e762ba7520ef1f8df18b574
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2015-09-16 21:59:44 +0100

    data_smart: When considering OVERRIDE dependencies, do so recursively
    
    Sadly its not enough to consider the dependencies of OVERRIDES, we
    need to resolve their dependencies and so on recursively. If we don't
    do this, some variable can be changed and the resulting data store is
    incorrect.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

7	1	lib/bb/data_smart.py

commit 10279697c701e01bf6fdd5e9f92792ef5134807b
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2015-09-16 21:57:55 +0100

    data_smart: Expand overrides cache recursively
    
    If the values that make up OVERRIDES are themselves overridden,
    we end up into some horrible circular logic. Unfortunately some
    metadata does depend on this functionality.
    
    e.g:
    DEFAULTTUNE_virtclass-multilib-xxx = Y
    which changes TUNE_ARCH
    which changes TARGET_ARCH
    which changes OVERRIDES
    
    As a solution, we iterate override expansion until the values don't
    change. If we iterate more than 5 times we abort and tell the user to
    report the issue.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

12	3	lib/bb/data_smart.py

commit eaaa81393f181432c8586b17ade623f42c9fed2e
Author: Christopher Larson <chris_larson@mentor.com>
Date:   2015-09-15 13:56:06 -0700

    bb.fetch2.{git, hg}: remove tarball if it needs updating
    
    We were maintaining state in the form of ud.repochanged to determine whether
    we need to write the tarball in the case where the tarball already exists, but
    this state is maintained only in memory. If we need to update the git repo,
    set ud.repochanged to True, and then are interrupted or killed, the tarball
    will then be out of date.
    
    Rather than maintaining this state, simply remove the out of date tarball when
    we update the git repo, and it will be re-created with updated content in
    build_mirror_data.
    
    [YOCTO #6366]
    
    Signed-off-by: Christopher Larson <chris_larson@mentor.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

6	4	lib/bb/fetch2/git.py
6	4	lib/bb/fetch2/hg.py

commit 38f935647dd768a912b933adebfc9cb225a01a54
Author: Elliot Smith <elliot.smith@intel.com>
Date:   2015-09-04 10:37:47 +0100

    toaster: Simplify redirects when build page parameters are missing
    
    A RedirectException is used to redirect the client to the
    correct page when their original request is missing the
    required parameters (page, orderby etc.). However, the code
    is difficult to follow.
    
    Rather than catching RedirectExceptions and rethrowing them with
    different view URLs, ensure that the RedirectException has the
    correct URL in it when thrown by passing the original page
    name to the _build_list_helper() method.
    
    Modified from an original patch by
    David Reyna <david.reyna@windriver.com>.
    
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: brian avery <avery.brian@gmail.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

32	17	lib/toaster/toastergui/views.py

commit fe9a554249b623ef515502043fdbf50e1ac62a3a
Author: Elliot Smith <elliot.smith@intel.com>
Date:   2015-09-04 10:37:46 +0100

    toaster: Fix date range pickers on the project builds page
    
    These were referring to the old HTML elements with ids
    "date_from_created" and "date_from_updated", but their
    ids have changed to "date_from_started_on" and
    "date_from_completed_on". This meant that they weren't
    functional.
    
    This fixes the references.
    
    Modified from an original patch by David Reyna
    <david.reyna@windriver.com>.
    
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: brian avery <avery.brian@gmail.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	2	lib/toaster/toastergui/templates/projectbuilds.html

commit 455a0087e0dcd74998abd02a110942f25da127be
Author: Elliot Smith <elliot.smith@intel.com>
Date:   2015-09-04 10:37:45 +0100

    toaster: Show correct builds count on project pages
    
    The counter for completed builds on the project pages
    includes builds in progress.
    
    Instead use the completedbuilds queryset to count the
    number of completed builds for display on project pages.
    
    Modify how the completedbuilds queryset is constructed so
    it only excludes builds with status "in progress".
    
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: brian avery <avery.brian@gmail.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	2	lib/toaster/toastergui/static/js/base.js
1	1	lib/toaster/toastergui/views.py

commit 09079f15c0511a6d17ce1cc29be6de5387e45f09
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2015-09-04 10:37:43 +0100

    toaster: hide irrelevant builds in the project builds view
    
    This patch fixes the project builds view so it doesn't show
    "in progress" builds or builds for other projects.
    
    Note that this also modifies the "all builds" view to use
    the same queryset filtering as the project builds. This is
    to avoid excluding "in progress" builds more than once, which
    is what was happening before.
    
    The patch also has a minor change to ensure that when
    displaying the project builds page, only builds for that
    project are in the results.
    
    The queryset filtering is now split over several lines so
    you can see what's going on.
    
    [YOCTO #8236]
    [YOCTO #8187]
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: brian avery <avery.brian@gmail.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

42	12	lib/toaster/toastergui/views.py

commit 24a8e9a5b0ba145ae589178d74365c986ebca325
Author: Mark Hatle <mark.hatle@windriver.com>
Date:   2015-09-10 18:15:27 -0500

    tests/fetch.py: Fix recursion failure in url mapping
    
    Instead of reproducessing the same line over and over and over, we remove the
    current line from the mirror list.  This permits us to re-evaluate the list
    while excluding all matches that have previousily occured.
    
    Without this fix, adding this test results in a failure:
    
    RuntimeError: maximum recursion depth exceeded in cmp
    
    Signed-off-by: Mark Hatle <mark.hatle@windriver.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

10	4	lib/bb/fetch2/__init__.py
5	2	lib/bb/tests/fetch.py

commit 4d254e02e2867dd9a6663508c8ca9f2733af71a8
Author: Mark Hatle <mark.hatle@windriver.com>
Date:   2015-09-10 17:02:10 -0500

    fetch2/__init__.py: uri_replace regex handling
    
    We should only substitute one time.  If we do it without a max count, we can
    end up matching over and over.
    
    Before this change:
    
    https://downloads.yoctoproject.org/releases/bitbake/bitbake-1.0.tar.gz
    
    with a mirror of
    
    https://.*/[^/]*    http://AAAA/A/A/A/
    
    would end up either recursing indefinitely or result in:
    
    http://AAAA/A/A/A/A/A/A/A/A/A/bitbake-1.0.tar.gz
    
    Signed-off-by: Mark Hatle <mark.hatle@windriver.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/fetch2/__init__.py
7	0	lib/bb/tests/fetch.py

commit 8d3aa2d46ebab7a59e57234f0b3f6fc3225a13e8
Author: Elliot Smith <elliot.smith@intel.com>
Date:   2015-09-11 13:57:30 -0700

    toaster: Don't def a function for each call to build_artifact()
    
    Cache the mimetype object and only define the function for
    getting a mimetype once.
    
    Also ensure that filemagic is listed as a requirement of
    toaster. Doing this also means we can remove the code
    which tries multiple different "magic" libraries, as we know
    we have the right version available.
    
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: brian avery <avery.brian@gmail.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

10	32	lib/toaster/toastergui/views.py
1	0	toaster-requirements.txt

commit 5697bbcc88edad85891f66d28b8803a9c9d27ff2
Author: Elliot Smith <elliot.smith@intel.com>
Date:   2015-09-11 13:57:29 -0700

    toaster: Avoid unnecessary local to local copy of cooker log
    
    The cooker log is copied from its original (bitbake) location
    to an artifact directory chosen by the user (chosen when
    checksettings.py runs as part of the managed mode;
    it's one of the annoying questions you're asked at startup).
    The copy happens as part of the runbuilds script run, which
    is started in a loop from the toaster startup script
    in managed mode.
    
    When a user requests the log for a build via toaster, they
    are getting the log which has been copied to the artifact
    directory, not the original bitbake log.
    
    This works for the managed case, where the runbuilds command is
    running in a loop and copying log files for completed builds to
    the artifact directory. However, in analysis mode, there are two
    problems:
    
    1. checksettings isn't run, so the artifacts directory isn't
    set. toaster is then unable to figure out where the log files
    should have been copied to.
    
    2. The log files aren't copied to the artifacts directory
    anyway, as runbuilds isn't running in analysis mode.
    
    To fix this, just point the user to the local bitbake log file
    in its original location. This avoids the copy step, and means
    we can remove a whole question from the toaster startup sequence,
    as we no longer need an artifact directory.
    
    The only downside to this is that it's not appropriate for
    remote bitbake servers. We will need to revisit this and
    possibly reinstate the copy step once we have to reconcile
    local and remote builds and make their logs available in
    the same way.
    
    [YOCTO #8209]
    
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: brian avery <avery.brian@gmail.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

0	22	lib/toaster/bldcontrol/management/commands/checksettings.py
2	22	lib/toaster/bldcontrol/management/commands/runbuilds.py
6	7	lib/toaster/toastergui/views.py

commit 20609eebee0d2318806cf81913e7ce6dc1005507
Author: Elliot Smith <elliot.smith@intel.com>
Date:   2015-09-11 13:57:28 -0700

    toaster: Read correct cooker log path from toasterui
    
    The BB_CONSOLELOG variable changes by the time we read it in
    BuildInfoHelper. This means that the log file location we
    are using is incorrect, so the links to the cooker logs don't
    work.
    
    Instead, read it at the point when the BuildStarted event occurs
    in toasterui. The BB_CONSOLELOG variable has the correct value
    here, so pass that to BuildInfoHelper.
    
    [YOCTO #8209]
    
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: brian avery <avery.brian@gmail.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

4	4	lib/bb/ui/buildinfohelper.py
1	1	lib/bb/ui/toasterui.py

commit a065f7e5e9c07dbd71a98e7db1d7f711607716f3
Author: brian avery <avery.brian@gmail.com>
Date:   2015-09-14 16:45:40 +0100

    toaster: delete multiple builds cleanup
    
    This patch cleans up the multiple delete. It:
    
    1) skips build id's that don't exist rather than giving a traceback.
    2) let you pass in the ids as a space separated list
    3) fixes the usage to match the space separated list format
    
    [YOCTO #7726]
    
    Signed-off-by: brian avery <avery.brian@gmail.com>
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

9	4	lib/toaster/toastermain/management/commands/builddelete.py

commit 2eb934814179ccf42e3d424dabe26b17d013a7ed
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2015-09-16 21:54:42 +0100

    data_smart: Separate out update_overridevars into separate function
    
    No code changes, just refactoring to allow for functionality
    changes by moving things to a separate function.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

6	5	lib/bb/data_smart.py

commit 87282b283921a58426f24fb21151db457c5bca66
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2015-09-16 21:44:20 +0100

    cache: Handle spaces and colons in directory names for file-checksums
    
    If there is a space in a directory name containing a file in file-checksums
    (e.g. from a file:// url), you currently get tracebacks from bitbake. This
    improves the code to handle colons and spaces in the file-checksums names
    since it possible to figure out the correct names.
    
    [YOCTO #8267]
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

14	1	lib/bb/cache.py

commit 60f6c2818f38c4d9c2d9aaa42acf3071636f4a3b
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2015-09-09 22:44:37 +0100

    bitbake-worker: Ensure pipe closure doesn't crash before killpg()
    
    If the pipe is closed, we want to ensure that we kill any child processes
    by triggering the sigterm handler before we exit. This code does that,
    hopefully avoiding the remaining process left behind issues on the autobuilder.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

5	1	bin/bitbake-worker

commit 224ee3685fe20915b21d299ab80f7b289a916dca
Author: Ed Bartosh <ed.bartosh@linux.intel.com>
Date:   2015-09-08 19:39:44 -0700

    toaster: increase waiting time
    
    Increased waiting time for toasterUI from 10 to 25 seconds. Bitbake
    takes longer time to start, so toaster should wait longer.
    
    [YOCTO #8240]
    
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: brian avery <avery.brian@gmail.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	2	lib/toaster/bldcontrol/localhostbecontroller.py

commit 135dff67216759286f584e501583584a9cb09f27
Author: Belen Barros Pena <belen.barros.pena@intel.com>
Date:   2015-09-04 11:05:19 +0100

    toaster: Changes to navigation
    
    This patch:
    
    * Changes the breadcrumb to provide access to either
    the project builds or the project configuration, as
    appropriate
    
    * Changes the left navigation in the project configuration
    to reflect the hierarchical relationship between the
    basic configuration and all other configuration pages
    
    * Changes the left navigation in the build history to bring
    it in line with the changes in the project configuration
    
    This way the breadcrumb explicitly exposes the hierarchy
    of the application, which is its correct behaviour, making it
    easier to move around within Toaster.
    
    Signed-off-by: Belen Barros Pena <belen.barros.pena@intel.com>
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

5	0	lib/toaster/toastergui/static/css/default.css
3	2	lib/toaster/toastergui/templates/basebuilddetailpage.html
9	2	lib/toaster/toastergui/templates/basebuildpage.html
3	3	lib/toaster/toastergui/templates/baseprojectpage.html
3	2	lib/toaster/toastergui/templates/layerdetails.html

commit c43d6a8d711db8d3bd9a1976b9f8e3efdb4cb4ae
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2015-09-08 23:37:34 +0100

    bitbake-worker: Handle SIGKILL of parent gracefully
    
    If we SIGKILL cooker (the parent process), ensure the worker notices
    and shuts down gracefully. To do this:
    
    * trigger the sigterm handler if the parent exits
    * ensure broken pipe writes don't trigger backtraces which interfer with
      other exit work
    * notice if our command pipe is broken due to EOF and sigterm if so
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

7	2	bin/bitbake-worker

commit 68f53dd77fe0bbfa044bd037a9484e0e1c9088b4
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2015-09-08 23:36:49 +0100

    bitbake-worker: Simple code cleanup
    
    start/end are unused here and we can improve the code conditional blocks.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	3	bin/bitbake-worker

commit 05d31fa1f56bd3d3d363a16a421d9ba7541d4293
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2015-09-08 23:32:07 +0100

    prserv: SIGTERM and deamonization fixes
    
    Worryingly, if you SIGKILL the bitbake cooker, an autostarted PR server
    will remain behind. It turns out there are a few things we should do:
    
    * The PR service doesn't need to daemonize when started from cooker,
      it just complicated the process lifecycle. Add a fork() method
      to handle this and use the non-daemon mode for the singleton.
    
    * Reset the sigterm and sigint handlers. Bitbake cooker installs its
      own which we inherit meaning PR server was ignoring SIGTERM. Installing
      our own handlers which include a sync makes most sense here. Since
      we're in the code, make it sync the database on SIGINT.
    
    * Use the new bb.utils.signal_on_parent_exit() call so that we get a
      SIGTERM when the parent (usually cooker) exits and we can shutdown
      too. Alternatives would be having an open pipe or polling
      os.getppid() for changes but this seems more effective.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

31	3	lib/prserv/serv.py

commit 34974f5e30e9b09c016481e4c81c156a5f379784
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2015-09-08 23:31:13 +0100

    utils: Add signal_on_parent_exit() function
    
    Add a new bb.utils.signal_on_parent_exit() function so that a process
    can register to recieve a signal when the parent dies. There is no
    POSIX standard for this and the implementation is Linux specific.
    Alternatives would be having an open pipe or polling os.getppid()
    for changes but this seems more effective and less invasive to most
    of bitbake's code structure.
    
    We need to be able to determine when parents die to ensure child
    processes stop running in a variety of circumstances to avoid
    locks being held and ensure clean shutdown.
    
    Roughly based on https://gist.github.com/evansd/2346614
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

19	0	lib/bb/utils.py

commit 1032ddddbe3241da02ebb3608a1c40f9123b9e80
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2015-09-07 15:48:16 +0000

    server/process: Handle SIGTERM more gracefully
    
    Currently if you send a SIGTERM to the bitbake UI process, the system basically
    hangs if tasks are executing. This is because the server process doesn't
    actually try any kind of shutdown before exiting.
    
    This patch trys executing a stateForceShutdown command first, which is
    enough to stop any active tasks before the system exits.
    
    I also noticed that terminate can execute multiple times, once at SIGTERM
    from the handler and once from the real exit. Double execution leads to
    stack traces and potential hangs (writes to dead pipes), so ensure
    the code only can run once.
    
    With these fixes, bitbake much more correctly deals with SIGTERM to the
    UI process.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

9	0	lib/bb/server/process.py

commit a841dc85770ea5c6fa8cf06ba5fdfe214e69afb2
Author: Belen Barros Pena <belen.barros.pena@intel.com>
Date:   2015-09-08 10:47:44 +0100

    toaster: replace ETA with % of tasks done
    
    The ETA we show for builds in progress is woefully
    inaccurate. In the 1.8 release we replaced it with
    the % of tasks completed. Somehow, we regressed to
    the ETA, so bringing the task % back.
    
    Signed-off-by: Belen Barros Pena <belen.barros.pena@intel.com>
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/toaster/toastergui/templates/mrb_section.html

commit 09abcf3199b2e86758a974a47ebe31f5fb79440a
Author: Belen Barros Pena <belen.barros.pena@intel.com>
Date:   2015-09-08 10:47:43 +0100

    toaster: fix project names in latest builds
    
    Make sure that the project name we show for each build
    in the latest builds section of the all builds page:
    
    * Has the same styles as the build, depending on the
    build status (in progress, failed or success)
    
    * Links to the project page
    
    Signed-off-by: Belen Barros Pena <belen.barros.pena@intel.com>
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

5	1	lib/toaster/toastergui/templates/mrb_section.html

commit c9b20009c5e161987a143b00ee22218a4c9c0692
Author: Belen Barros Pena <belen.barros.pena@intel.com>
Date:   2015-09-08 10:47:42 +0100

    toaster: remove unnecessary white space
    
    There was too much white space above the first
    heading in the all builds page. This patch removes
    the class that was adding the extra space.
    
    Signed-off-by: Belen Barros Pena <belen.barros.pena@intel.com>
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/toaster/toastergui/templates/mrb_section.html

commit cf2b6b621cb483aa1a1a66c09fc431efc207c91e
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2015-09-08 23:44:29 +0100

    toastergui: Add missing files from 1c2f6b9b7b9e700146944b9d6d2114e0d014ee81
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

175	0	lib/toaster/toastergui/static/js/tests/test.js
39	0	lib/toaster/toastergui/templates/js-unit-tests.html

commit 19af272ba5256653edeff6acbceeb09e3e478d61
Author: Christopher Larson <chris_larson@mentor.com>
Date:   2015-08-26 09:37:47 -0700

    bb.fetch: don't remove the clone when an update fails
    
    When our clone exists, but is out of date, and the attempt to update it fails,
    we don't necessarily want to remove the entire clone, particularly if it's
    a large repository.
    
    Signed-off-by: Christopher Larson <chris_larson@mentor.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

4	2	lib/bb/fetch2/__init__.py

commit 24c79bbed361b37f12d3351af13602e3d4386f4c
Author: Christopher Larson <chris_larson@mentor.com>
Date:   2015-08-26 09:37:46 -0700

    bb.fetch: handle checksums consistently for mirrors
    
    If the main fetch method doesn't support checksums, the user will not be
    defining them in the recipe, so we don't want to check them for
    premirrors/mirrors either. This ensures that we never error due to missing
    checksums on a git mirror tarball.
    
    Signed-off-by: Christopher Larson <chris_larson@mentor.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

4	3	lib/bb/fetch2/__init__.py

commit 8dce6964d56b36a77fb113f2ad496cc992a5ff36
Author: Christopher Larson <chris_larson@mentor.com>
Date:   2015-08-26 09:37:45 -0700

    bb.fetch.git: remove leading '.' from gitsrcname
    
    When using an absolute file URI, there's no host, and the path starts with
    '/', the dir under ${DL_DIR}/git2/ ends up starting with '.', so is hidden.
    Remove any leading '.' to fix this.
    
    Signed-off-by: Christopher Larson <chris_larson@mentor.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

4	1	lib/bb/fetch2/git.py

commit c45054aef03393fa0bf70e853ddcfc55988493cf
Author: Christopher Larson <chris_larson@mentor.com>
Date:   2015-08-24 15:32:00 -0700

    bb.cookerdata: include useful traceback for ExpansionError/ParseError
    
    Show the user only the portion of the traceback which was from the metadata,
    nothing from bitbake's internal calls.
    
    Signed-off-by: Christopher Larson <chris_larson@mentor.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

10	1	lib/bb/cookerdata.py

commit c514b6fbea77ede1b7871b89592a33ed39b1d71c
Author: Christopher Larson <chris_larson@mentor.com>
Date:   2015-08-24 15:31:59 -0700

    bb.data_smart: retain traceback from ExpansionError
    
    This gives us the needed context of the original ExpansionError, which is
    invaluable when we have a chain of function calls in the expansion.
    
    Signed-off-by: Christopher Larson <chris_larson@mentor.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	1	lib/bb/data_smart.py

commit dd3050ceef37ac556546e940aa596ce96ef6c8df
Author: Alex Franco <alejandro.franco@linux.intel.com>
Date:   2015-09-02 15:11:30 -0500

    cooker/runqueue: Allow bitbake commands starting with do_
    
    The output of "bitbake, -c listtasks pkg" lists tasks with their real names
    (starting with "do_"), but then "bitbake -c do_task" fails, as "do_" always
    gets unconditionally prepended to task names. This patch handles this error
    by checking whether a task starts with "do_" prior to prepending it with it
    when the task runlist is being constructed (and a few other corner cases).
    
    [YOCTO #7818]
    
    Signed-off-by: Alex Franco <alejandro.franco@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

9	3	lib/bb/cooker.py
3	1	lib/bb/runqueue.py

commit dd9284944ae0f0feecb70adab880fed636f7cd59
Author: Belen Barros Pena <belen.barros.pena@intel.com>
Date:   2015-09-02 10:56:15 +0100

    toaster: improve explanation of checkout dir
    
    Improve the explanation we show to users during set up
    when asking them to set the layers checkout directory.
    
    The patch also makes minor changes in text formatting to
    improve legibility.
    
    [YOCTO #7740]
    
    Signed-off-by: Belen Barros Pena <belen.barros.pena@intel.com>
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

16	16	lib/toaster/bldcontrol/management/commands/checksettings.py

commit d1d60a68c2de40c2984d5040d14251c1be121b0b
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2015-09-03 15:20:05 +0100

    event/server: Add _uiready flag to handle missing error messages
    
    If you start and suspend a bitbake execution so the bitbake lock is held,
    then try and run "bitbake -w '' X", you will see bitbake return an error exit
    code but print no message about what happened at all.
    
    The reason is that the -w option creates a "UI" which swallows the messages. The
    code which handles this exit failure mode thinks a UI has printed the messages
    and therefore doesn't do so.
    
    This adds in an extra parameter to the UI registration code so that we
    can figure out whether its a primary UI or not and base decisions on whether
    to display information on that instead. This fixes the error shown above and
    some bizarre failures on the Yocto Project Autobuilder.
    
    [YOCTO #8239]
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

7	3	lib/bb/event.py
1	1	lib/bb/server/process.py
1	1	lib/bb/server/xmlrpc.py

commit 38dd27f7191da002a16c561be3790ce487045b01
Author: Benjamin Esquivel <benjamin.esquivel@linux.intel.com>
Date:   2015-09-03 07:10:45 +0000

    utils: Fix a potential error in movefile
    
    bitbake utils' movefile is now prone to malform the destination
    file with duplicated file name strings. Fixing it to force a file
    name append iff the dest argument is a dir not a file name
    
    Signed-off-by: Benjamin Esquivel <benjamin.esquivel@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

6	3	lib/bb/utils.py

commit 85a65d2b652c2ccc6cfb90fd8bc9048d0e72341e
Author: Elliot Smith <elliot.smith@intel.com>
Date:   2015-09-02 17:25:12 -0700

    toaster: Add tests for pages which show the default project
    
    Test that the correct landing page redirect is applied, depending
    on the state of the default project.
    
    Test that the default project is only shown on the /projects page
    if it has at least one build.
    
    [YOCTO #7932]
    
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: brian avery <avery.brian@gmail.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

114	1	lib/toaster/toastergui/tests.py

commit 66f965b68dda76a755d88879191a0f340ba19142
Author: Elliot Smith <elliot.smith@intel.com>
Date:   2015-09-02 17:25:11 -0700

    toaster: Fix test for projects page JSON
    
    The tests expect data to be returned in a particular format,
    which doesn't include is_default or the num_builds fields
    added to support default project improvements.
    
    Add the extra fields so the tests pass again.
    
    [YOCTO #7932]
    
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: brian avery <avery.brian@gmail.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

5	4	lib/toaster/toastergui/tests.py

commit b37318057ccbfb3889d28fd593cc1602febf1ae9
Author: Elliot Smith <elliot.smith@intel.com>
Date:   2015-09-02 17:25:10 -0700

    toaster: Exclude default project unless it has builds
    
    Don't include the default "command line builds" project in
    the projects view unless it has builds associated with it.
    
    [YOCTO #7932]
    
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: brian avery <avery.brian@gmail.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

8	0	lib/toaster/toastergui/views.py

commit 316a70da93055b63eff7d40b7fd8bd07299074af
Author: Elliot Smith <elliot.smith@intel.com>
Date:   2015-09-02 17:25:09 -0700

    toaster: Only redirect to projects page if user has added projects
    
    The landing page currently redirects the user if there are any
    projects in the db. Because we now always have at least one
    (the default one added by a migration), we always get the redirect.
    
    Change this so that when the user hits the landing page,
    we only redirect them to the projects page if there is at least
    one user-added project and there are no builds.
    
    [YOCTO #7932]
    
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: brian avery <avery.brian@gmail.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

5	1	lib/toaster/toastergui/views.py

commit 71b709a1bbc26d89d61873763b467d21e625b274
Author: Elliot Smith <elliot.smith@intel.com>
Date:   2015-09-02 17:25:08 -0700

    toaster: Improve how default project is identified and fetched
    
    Command line builds are associated with a "default project"
    (as we currently require a build to have a project). This
    acts as a container for builds initiated outside Toaster.
    Currently, this project is marked as the default by its ID
    being 0. However, this doesn't work with MySQL, as MySQL
    won't allow 0 in a foreign key which references an
    autoincrement field.
    
    Instead, use an is_default field to track the default Project
    for builds initiated outside Toaster.
    
    Add a method to fetch this default project, rather than fetching
    a project with a magic ID.
    
    Add this default project in a migration, rather than as a side
    effect of a get_or_create() style method.
    
    Also ensure that builds always have a project explicitly assigned
    to avoid any magic with a build's project foreign key defaulting to
    0 (as it no longer does).
    
    [YOCTO #7932]
    
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: brian avery <avery.brian@gmail.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	1	lib/bb/ui/buildinfohelper.py
346	0	lib/toaster/orm/migrations/0025_auto__add_field_project_is_default.py
374	0	lib/toaster/orm/migrations/0026_set_default_project.py
13	5	lib/toaster/orm/models.py

commit 12f6278d56d7dec57308adc17411802f15d395d7
Author: Elliot Smith <elliot.smith@intel.com>
Date:   2015-09-02 17:25:07 -0700

    toaster: Make 0021 migration compatible with MySQL
    
    Two issues prevent this migration from working correctly
    with a MySQL back-end:
    
    1. MySQL won't allow a default value to be set for an
    AutoField, which is what the migration tries to do
    for project_id ("ValueError: The database backend does not accept
    0 as a value for AutoField.")
    
    2. When migrations are applied to a MySQL back-end, Django
    (via South) attempts a dry run of the migration first: it
    applies the forward migration then rolls it back. However, this
    migration raises an exception on roll back, which causes the
    whole series of migrations to fail.
    
    This commit fixes both issues.
    
    [YOCTO #7932]
    
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: brian avery <avery.brian@gmail.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	1	lib/toaster/orm/migrations/0021_auto__chg_field_build_project__chg_field_project_bitbake_version__chg_.py

commit 9e970bd7a3e8a7d6ec26265b2e5863624db8a77f
Author: Belen Barros Pena <belen.barros.pena@intel.com>
Date:   2015-09-03 15:43:51 +0100

    toaster: show incomplete configuration warning
    
    In the new build button form, make sure we show a
    warning when you select a project with an incomplete
    configuration that cannot be built.
    
    Signed-off-by: Belen Barros Pena <belen.barros.pena@intel.com>
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	0	lib/toaster/toastergui/static/css/default.css
5	3	lib/toaster/toastergui/templates/base.html

commit 4daaaf63a26b7dd1c1f035d43c45abffe7b62d76
Author: Belen Barros Pena <belen.barros.pena@intel.com>
Date:   2015-09-03 15:43:50 +0100

    toaster: disable build button as needed
    
    Make sure that the 'build' button in the 'new build'
    form is disabled whenever the 'recipe(s)' text
    field is empty.
    
    Signed-off-by: Belen Barros Pena <belen.barros.pena@intel.com>
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

0	2	lib/toaster/toastergui/static/js/base.js

commit b147ba0341d87e077bd2b09ef4355976ecd2d26b
Author: Benjamin Esquivel <benjamin.esquivel@linux.intel.com>
Date:   2015-08-20 13:59:58 +0000

    utils: Specify dest file name in movefile()
    
     When moving a file via the os.rename function, it was missing the
     destination file name which caused an OSError
    
     [YOCTO#8180]
    
    Signed-off-by: Benjamin Esquivel <benjamin.esquivel@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	1	lib/bb/utils.py

commit 94b3f3d6bdfbfa47f7eb3c3de64940a145b2ddd1
Author: Christopher Larson <chris_larson@mentor.com>
Date:   2015-08-03 12:20:43 -0700

    build: delete tasks thoroughly
    
    We want addtask to be able to bring back a deleted task, but we don't want its
    previous dependencies to come back with it, so rather than marking a task as
    deleted and then skipping tasks marked as such, actually delete the task and
    its dependency information in deltask.
    
    While we're in that part of the code, also fix a couple 'not foo in bar'
    instances to 'foo not in bar', which is preferred in python.
    
    Signed-off-by: Christopher Larson <chris_larson@mentor.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

13	10	lib/bb/build.py
1	2	lib/bb/parse/ast.py

commit 1c2f6b9b7b9e700146944b9d6d2114e0d014ee81
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2015-08-17 17:47:47 +0100

    toastergui: Add frontend javascript unit tests
    
    Use Jquery's Qunit tests to create some unit tests for javascript
    components used in toaster.
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: brian avery <avery.brian@gmail.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	0	lib/toaster/toastergui/urls.py
16	0	lib/toaster/toastergui/views.py

commit 120816b133b9c160c68c911a9f4c612ce2f8a9ed
Author: Belen Barros Pena <belen.barros.pena@intel.com>
Date:   2015-08-28 17:27:55 +0100

    toaster: fix global navigation
    
    The "All builds" item in the global navigation should
    only be active when you are in the "all builds" page.
    
    The global navigation should not appear at all in the
    landing page and in the new project page.
    
    Signed-off-by: Belen Barros Pena <belen.barros.pena@intel.com>
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

4	2	lib/toaster/toastergui/templates/base.html

commit 945746f21916eb64a0b4344bcf7e7e0dd75b9547
Author: Belen Barros Pena <belen.barros.pena@intel.com>
Date:   2015-08-28 17:27:54 +0100

    toaster: adjust spacing in project pages
    
    Mainly in the top of the page, by adjusting some classes
    and the headings.
    
    Also, it removes the commented out tab for the 'My image
    recipes' section, since the final designs for image
    customisation do not need it.
    
    Signed-off-by: Belen Barros Pena <belen.barros.pena@intel.com>
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/toaster/toastergui/templates/baseprojectbuildspage.html
2	4	lib/toaster/toastergui/templates/projectbuilds.html
9	19	lib/toaster/toastergui/templates/projecttopbar.html

commit da5310f05f8573b2138da98a64749269d0711c18
Author: Belen Barros Pena <belen.barros.pena@intel.com>
Date:   2015-08-28 17:06:35 +0100

    toaster: fix show / hide columns in all builds table
    
    The classes errors_no and warnings_no were removed from the
    td tags in the builds.html template. That broke the show / hide
    columns functionality, which would hide only the table heading,
    but not the data cells.
    
    This patch brings back those classes so that you can hide
    and show the errors and warnings information.
    
    Signed-off-by: Belen Barros Pena <belen.barros.pena@intel.com>
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	2	lib/toaster/toastergui/templates/builds.html

commit e7a85031fd05a46ef60b380883da4cc372acf89b
Author: Bian Naimeng <biannm@cn.fujitsu.com>
Date:   2015-08-28 16:37:38 +0100

    toaster: Support environments which have proxies set
    
    In an environment with a proxy which requires authentication, e.g. with
    $http_proxy = 'http://user:password@ip:port', the following error
    occurs when running Toaster:
    
      EE: Using proxy http://user:password@ip:port
      EE: could not connect to 'url', skipping update: 'error message'
    
    This prevents Toaster from fetching layer, recipe and machine information
    from remote repositories.
    
    This patch allows Toaster to use the proxy settings from the
    environment for HTTP/HTTPS requests.
    
    Signed-off-by: Bian Naimeng <biannm@cn.fujitsu.com>
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

7	29	lib/toaster/orm/models.py

commit 12459211671772905a3e88310b0421b6014f0c20
Author: Sujith Haridasan <Sujith_Haridasan@mentor.com>
Date:   2015-08-27 14:34:51 +0100

    toaster: Remove Log column from All builds page
    
    This patch removes Log from All build table.
    
    [YOCTO #8010]
    
    Signed-off-by: Sujith H <sujith.h@gmail.com>
    Signed-off-by: Sujith Haridasan <Sujith_Haridasan@mentor.com>
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

0	8	lib/toaster/toastergui/views.py

commit 742d15beaf7e2bb8b61ed61b1a26909d16de0eac
Author: Sujith Haridasan <Sujith_Haridasan@mentor.com>
Date:   2015-08-27 14:25:58 +0100

    toaster: Fix extra checkbox in most recently built recipes section
    
    This patch fixes an extra checkbox which is due to an extra space
    in the target.
    
    [YOCTO #8202]
    
    Signed-off-by: Sujith Haridasan <sujith.h@gmail.com>
    Signed-off-by: Sujith Haridasan <Sujith_Haridasan@mentor.com>
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

0	1	lib/toaster/toastergui/static/js/projectpage.js

commit e237d231d52ef71e0f369d1af34f214e6c2359f2
Author: David Reyna <David.Reyna@windriver.com>
Date:   2015-08-25 09:32:15 +0100

    toaster: update directory tree expansion
    
    The ajax query that fetches the directory data on an expand request
    is now returning the response data already in an object form. so the
    parseJSON() call is no longer needed (and is currently returning a
    parse error).
    
    [YOCTO #7810]
    
    Signed-off-by: David Reyna <David.Reyna@windriver.com>
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	2	lib/toaster/toastergui/templates/dirinfo.html

commit df2b778efd2ecc48f6c5a3ed446f6459f2250035
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2015-08-26 13:50:47 +0100

    lib/bb/cooker: add interrupted flag to BuildCompleted event
    
    Allow any listeners for this event (such as buildhistory.bbclass in
    OpenEmbedded) to find out if the build was interrupted rather than
    completing normally. The value will be 0 if not interrupted, 1 if
    interrupted waiting for remaining tasks to complete, or 2 if force
    interrupted (stopping any running tasks immediately).
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

8	2	lib/bb/cooker.py
2	1	lib/bb/event.py

commit 6db00cace690f39ace3a0556db7b5d4e2911d5d7
Author: Belen Barros Pena <belen.barros.pena@intel.com>
Date:   2015-08-26 09:48:37 +0100

    toaster: new Toaster image
    
    Add a new black and white image of Toaster for use
    in the landing page, so that nobody can confuse it
    with the real interface.
    
    [YOCTO #7743]
    
    Signed-off-by: Belen Barros Pena <belen.barros.pena@intel.com>
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

-	-	lib/toaster/toastergui/static/img/toaster_bw.png

commit 099c1af869a6cd52a2cdb87465a05893d60c8f38
Author: Belen Barros Pena <belen.barros.pena@intel.com>
Date:   2015-08-26 09:48:38 +0100

    toastergui: change image in landing page
    
    Change the Toaster screenshot we use in the landing page
    to make sure it cannot be confused with the real interface.
    
    Also, remove the MANAGE conditional we were using to set the
    screenshot. We no longer have different applications for the
    two modes, so it should no longer be needed.
    
    [YOCTO #7743]
    
    Signed-off-by: Belen Barros Pena <belen.barros.pena@intel.com>
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	5	lib/toaster/toastergui/templates/landing.html

commit 531fbbf8c0a826ece5c2ed86babc7b866c925686
Author: Belen Barros Pena <belen.barros.pena@intel.com>
Date:   2015-08-21 15:56:44 +0100

    toastergui: remove old screenshots
    
    Remove the Toaster screenshots we no longer use in the
    landing page.
    
    Signed-off-by: Belen Barros Pena <belen.barros.pena@intel.com>
    Signed-off-by: Elliot Smith <elliot.smith@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

-	-	lib/toaster/toastergui/static/img/toaster.png
-	-	lib/toaster/toastergui/static/img/toaster_1.7.png

commit c9dc6d9c86e8b887821a6d00346bd0b09e1da97c
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2015-08-24 15:00:22 +0100

    lib/bb/main: avoid importing all server/UI modules on every execution
    
    We're importing the server and UI modules in order to check they are
    valid, but it turns out that that has some nasty side-effects. We don't
    actually need to do this except when --help is passed or the module
    doesn't exist, so rearrange the code so that we only do the module
    listing in those two cases.
    
    Additionally, let's just go ahead and catch all errors on import; we
    really don't care to have them cause a failure now.
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

38	22	lib/bb/main.py

commit f64def7cb6069dc1134fcd546bb59e4030c7376f
Author: Randy Witt <randy.e.witt@linux.intel.com>
Date:   2015-08-20 14:00:36 -0700

    main: Handle RuntimeError exception in list_extension_modules
    
    This exception was triggered in toaster from recent changes and is completely
    breaking the whole of bitbake. Add the exception to the list so at least only
    toaster is affected.
    
    Signed-off-by: Randy Witt <randy.e.witt@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/main.py

commit 5982b5df9288a5773c7314234e2e0432f85678f2
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2015-08-18 17:29:00 +0100

    toastergui: fix projectbuilds page
    
    This patch fixes the redirection projectbuilds page and
    the template layout in the projectbuilds page.
    
    * The _build_list_helper now returns an empty RedirectException
    that is properly customized by the caller and re-raised
    to achieve redirection to the original page (poor man's overloading)
    
    * The template for ProjectBuilds is updated as to properly display
    Build objects instead of BuildRequest objects.
    
    [YOCTO #7995]
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

4	38	lib/toaster/toastergui/templates/projectbuilds.html
17	7	lib/toaster/toastergui/views.py

commit 60fdc834d386dbace0a158123afd68df3ffbff90
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2015-08-18 17:28:59 +0100

    toastergui: do not show in-progress builds in the table
    
    This patch fixes the all-builds table as not to show
    in-progress builds.
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/toaster/toastergui/views.py

commit 947d47f15048baa967f88e03d80014e88ce152aa
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2015-08-18 17:28:58 +0100

    toaster logger: fix pylint issues
    
    This patch fixes pylint issues in the toaster build data logger,
    toasterui. The following types of warnings are touched here:
    
    * fixing imports
    * unused variables are set to _
    * logger calls now use lazy evaluation instead of formatting
    the string
    * correct whitespace identation
    * removes unneeded "pass" statements, and extra parantheses
    * disable specific pylint warnings when decideing to override
    them
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

71	59	lib/bb/ui/buildinfohelper.py
27	30	lib/bb/ui/toasterui.py

commit 1c71955c416fb68455f7f70669aba4202c411807
Author: Alexandru Damian <alexandru.damian@intel.com>
Date:   2015-08-18 17:28:57 +0100

    toaster: fix pylint errors
    
    Prompted by issues discovered during running pylint on
    the toaster sources, this patch fixes:
    
    * missing import in toaster ui
    * improper call of function in toaster ui (logger.debug)
    * improper function definitions in bbcontroller
    * invalid references to objects in bldcontrol.models
    * proper initialization of object fields in ToasterTables
    
    Also inhibiting specific pylint errors in files where
    the problems are mis-identified.
    
    Signed-off-by: Alexandru Damian <alexandru.damian@intel.com>
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	2	lib/bb/ui/toasterui.py
1	1	lib/toaster/bldcontrol/bbcontroller.py
1	1	lib/toaster/orm/models.py
4	0	lib/toaster/toastergui/views.py
3	0	lib/toaster/toastergui/widgets.py
6	1	lib/toaster/toastermain/management/commands/perf.py

commit a740c17efc0ccc9f89a428ead08f9739af3c6de4
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2015-08-18 17:28:56 +0100

    toaster: fix updates on failed build requests
    
    The patch to fix the original mistake is wrong, in the sense
    that a constant from the BuildRequest class is used on the build
    object.
    
    Fixing the patch to bring in the correct constant in.
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/toaster/bldcontrol/management/commands/runbuilds.py

commit 3d14cc033a855bf5b20e799438548b6d8f29d9b8
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2015-08-18 17:28:55 +0100

    toaster: replace raising Exceptions in loadconf
    
    This patch replaces throwing Exceptions in toaster loadconf
    command with proper explicit error messages. This allows
    the user to properly understand and debug what went wrong when
    loading a config file.
    
    Additionally we change a bit the logic around auto-detecting relative
    giturl handling so the user gets proper error messages when
    trying to load an invalid toasterconf.json file.
    
    [YOCTO #7945]
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

23	14	lib/toaster/bldcontrol/management/commands/loadconf.py

commit e0911e408db4fa07086738fe11121b173b4d1cf5
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2015-08-18 17:28:54 +0100

    toaster: do not stop data import on bad data
    
    The layer data update in Layer source needlessly stops
    processing by throwing an Exception when bad layer data cannot
    be inserted in the database (e.g. invalid dependencies).
    
    This patch changes the behaviour to ignore bad data, and
    continue with data import after detailed logging through the
    logging system.
    
    [YOCTO #7955]
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

4	4	lib/toaster/orm/models.py

commit 5fe0c42ca9d34fa34b65b9fe0ff474200b78efe6
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2015-08-18 17:28:53 +0100

    toastergui: rename variables in views.py
    
    Renaming various variables in the views.py file to make
    the code more readable, and prevent overshadowing of global
    variables with local variables that have a different name.
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

63	53	lib/toaster/toastergui/views.py

commit adf3bdcbe8b0b0bbe9de2800f2d20a53e8d88543
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2015-08-18 17:28:52 +0100

    toaster: use loggers instead of prints
    
    Switching debugging from using print statement to using
    loggers, as it uses the logging infrastructure to process
    the messages.
    
    The messages are logged with the "toaster" logger which
    is defined in the toastermain/settings.py.
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

13	9	lib/toaster/orm/models.py
4	0	lib/toaster/toastergui/views.py

commit cc9ac01d0726203fbe916cec51cc464eaeae9305
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2015-08-18 17:28:51 +0100

    toaster: models field initialization
    
    As prompted by pylint, the object fields need to be
    initialized properly, so this patch fixes that.
    
    Also adds some casts to int, because, sometimes, the IntegerField
    is not returning an int, but a string.
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

21	17	lib/toaster/orm/models.py

commit 652fad64864703cb1bbeede8d5bfc4208974be68
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2015-08-18 17:28:50 +0100

    toaster: improve exception handling
    
    This patch improves exception handling, fixing issues
    as prompted by pylint, including exception renaming.
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

6	9	lib/toaster/orm/models.py
4	9	lib/toaster/toastergui/views.py

commit bdc00755993aa37e7669c3859ef4ea9b1fc3e680
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2015-08-18 17:28:49 +0100

    toaster: checksettings: fix TEMPLATECONF detection
    
    Improving the TEMPLATECONF detection by verifying the return
    code and dumping extra debug information in case of exception.
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

7	1	lib/toaster/bldcontrol/management/commands/checksettings.py

commit 40db75c6117c3226c27d278d2acf0cd3ba61a167
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2015-08-18 17:28:48 +0100

    toaster: checksettings: fix guesspath initialization
    
    Object fields need to be instantiated in the constructor.
    Fixed prompted by pylint.
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	1	lib/toaster/bldcontrol/management/commands/checksettings.py

commit 066e096b80dcb0e93e1a088acf5d914184361769
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2015-08-18 17:28:47 +0100

    toaster: pylint fixes
    
    This patch fixes imports, default parameters to functions,
    incorrect overloading and exception handling issues
    highlighted by pylint. There are no functional changes.
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	1	lib/toaster/bldcontrol/management/commands/checksettings.py
0	1	lib/toaster/orm/models.py
10	18	lib/toaster/toastergui/views.py

commit d8c37780609571e95edef9a220225927eb94b174
Author: Mihail Stanciu <stanciux.mihail@intel.com>
Date:   2015-08-19 14:29:24 +0100

    toasteruitest: Updated UI tests cases to use dom IDs and 1.9 UI changes
    
    Updated existing tests to use dom IDs where necessary.
    Updated tests to use 1.9 specific UI changes:
        - removed deprecated columns(log and layer directory)
        - changed expected names for table header("Recipe" instead of "Target")
    Added tests for TC 942 and 943 which were missing
    Removed test for TC 959 which was deprecated under 1.9
    
    Signed-off-by: Mihail Stanciu <stanciux.mihail@intel.com>
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

133	174	lib/toaster/contrib/tts/toasteruitest/toaster_automation_test.py

commit baed115081f888e027f92f37e12dc2dd2b874bf0
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2015-08-18 15:32:52 -0700

    toastergui: Call csrf function in all pages to ensure cookie is sent
    
    Not all pages call the csrf token template function so django does not
    bother to send the cookike, this meant that all subsequent ajax calls
    fail. So add this to the base template.
    
    [YOCTO #8175]
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: brian avery <avery.brian@gmail.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	0	lib/toaster/toastergui/templates/base.html

commit e4ec622d9dc5f882049f5e8027331ec1e17681de
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2015-08-19 14:20:11 +0100

    bitbake-layers: show-recipes: allow filtering by class inheritance
    
    Add a -i/--inherits option to filter the output to include only recipes
    inheriting the specified class(es).
    
    Implements [YOCTO #7475].
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

43	5	bin/bitbake-layers

commit e852f6cabd7489585477ab567a1afeb2252377ac
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2015-08-19 14:20:10 +0100

    bitbake-layers: fix mapping files to layers
    
    bitbake-layers needs to map recipe and class files to the layer they
    came from within the show-recipes and show-overlayed commands. However,
    it turns out that mapping a file to the layer it came from is not as
    trivial as it might seem. To do it properly we need to match the path to
    an entry in BBFILES then map that to the collection name using
    BBFILE_PATTERN, then map that to the actual layer using variable
    history. If it doesn't match any entry in BBFILES, then we can fall back
    to BBFILE_PATTERN (to handle classes and conf files).
    
    This fixes the layer name not showing up properly in the output of the
    show-recipes and show-overlayed commands for recipes in layers such as
    meta-intel that have subdirectories in BBFILE_PATTERN. It also fixes the
    priority not showing up in show-layers for such layers.
    
    As part of this I've added a function to VariableHistory which for a
    space-separated list variable gives you a dict mapping the items added
    to the files in which they were added. I've also fixed
    bb.utils.get_file_layer() and reduced some of the duplication by using
    this function in bitbake-layers. Also fixes the priority not showing up
    for layers such as meta-intel
    
    Fixes [YOCTO #8160].
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

16	21	bin/bitbake-layers
25	0	lib/bb/data_smart.py
24	8	lib/bb/utils.py

commit b4c45bf6c42b4d319ba868f4ce77e86c8b585818
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2015-08-19 14:20:09 +0100

    bitbake-layers: remove-layer: accept just layer directory
    
    If the specified layer isn't a path, then just match on the directory.
    
    Fixes [YOCTO #7839].
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	0	bin/bitbake-layers

commit ddcaf8950a0b1cc74806e1ad7b49a1de0ea0d2b1
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2015-08-19 14:20:08 +0100

    bitbake-layers: ensure we exit if BBLAYERS_LAYERINDEX_URL is not set
    
    We were printing an error here, but not exiting.
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	0	bin/bitbake-layers

commit 24035c1daad5a904c3372d21d44191ee8182338f
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2015-08-18 11:29:46 +0100

    lib/bb/main: consolidate UI/server extension listing and loading
    
    Provide us with a means of showing the list of UIs / server choices for
    the command line help, and do the processing in one place for both.
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

54	31	lib/bb/main.py

commit fe105b9042bdac4afd9f38fcf92bfdc2c04ec23f
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2015-08-17 12:12:28 +0100

    lib/bb/parse: properly handle OSError when updating mtime cache
    
    If a file no longer exists, drop it from the cache silently instead of
    generating a traceback. This was visible in some cases when a recipe was
    deleted when bitbake was resident in memory.
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

6	1	lib/bb/parse/__init__.py

commit 1ef38549cae5639f2c8bcc2b270c5c82a5e29e3c
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2015-08-17 12:12:27 +0100

    bitbake-layers: use "with open" consistently
    
    It's best practice to use "with open..." rather than open & close where
    practical.
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

29	33	bin/bitbake-layers

commit 60a253555a3ebadea775cfdc3331cba78ee3e71b
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2015-08-17 12:12:26 +0100

    bitbake-layers: refactor show-appends to stop using cooker bbappends list
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

13	8	bin/bitbake-layers

commit 0448714c52bc1e9584a5282cffdcaa404fb0618a
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2015-08-17 12:12:25 +0100

    bitbake-layers: Convert flatten to use collections.bbappends
    
    flatten support currently looks broken since it doesn't appear to
    deal with handling "%" support in bbappend file names.
    
    This patch converts it to use collections.get_file_appends() which
    correctly handles "%" support.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

20	24	bin/bitbake-layers

commit 279770c42d4c63aa2cebce331b55a92a564b50ac
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2015-08-17 12:12:24 +0100

    cooker: drop appendlist
    
    Now we have the bbappends list and all users have been converted over to
    use it, we don't need this anymore.
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

0	5	lib/bb/cooker.py

commit 5c12aa3b0010d7d1733e54a0ca7d0af465454210
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2015-08-17 12:12:23 +0100

    cooker: drop appliedappendlist
    
    Whilst collecting this list on the fly may be quicker, doing so within a
    function that's meant to *query* the list of bbappends is poor practice.
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

18	10	lib/bb/cooker.py

commit d4b921676859d6ba4e1922fa4682ee941652f483
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2015-08-17 12:12:21 +0100

    Fix -m handling if cannot connect to server
    
    If we can't connect to the server we should error out, because it might
    not be that the server is actually dead - it might just be unable to
    execute commands.
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

0	2	lib/bb/main.py

commit a3f7dc042fc7b1c308bfd248431930eb8ba50326
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2015-08-17 12:12:20 +0100

    cooker: ensure prefile/postfile can work in memory resident mode
    
    The prefile/postfile options weren't working in memory resident mode
    because they weren't being passed through to the server, so ensure that
    they do get passed through and that the server is reset when the values
    come through.
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	1	lib/bb/cooker.py
2	1	lib/bb/cookerdata.py

commit aaf3cc024315450c1674819edf2a4e5cdf293f35
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2015-08-17 12:12:19 +0100

    command: ensure sync commands that read configuration see updates
    
    Add a means of ensuring that synchronous commands that read the results
    of the configuration trigger a reparse of the configuration if any
    underlying files have changed.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

12	1	lib/bb/command.py
16	11	lib/bb/cooker.py

commit bc39b8da34c046b629c43fd0a8cac2efbf1c060f
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2015-08-17 12:12:18 +0100

    cooker: further limit inotify watches
    
    Unfortunately we were acting on inotify notifications about any files
    changing within the watched directories, not just the ones we actually
    care about. In OE the build directory is in BBPATH and hence it gets
    watched, and we write things like bitbake.lock and
    bitbake-cookerdaemon.log to that directory, hence effectively
    notifications were being tripped on every bitbake invocation. To avoid
    this, record which file/subdirectory we're interested in against each
    watched directory so we can ignore any events for files/subdirectories
    we don't care about.
    
    Additionally, if we move up to the parent dir, ensure we haven't already
    seen it before adding a watch on it (we were previously calling
    watcher.add_watch() on the same directory multiple times before in a
    typical OE configuration).
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

11	0	lib/bb/cooker.py

commit 95e391acbc3b4efd6c77637a1ce815012ae0f09b
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2015-08-17 12:12:17 +0100

    command: intercept SystemExit to avoid trashing the server
    
    If sys.exit() is called within a command run over XMLRPC, the XMLRPC
    server is effectively trashed (apparently listening but no longer able
    to respond to commands). We need to intercept the SystemExit exception
    and deal with it as we would any other exception.
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/command.py

commit 7859f7388f2e3f675d0e1527cfde18625f36f637
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2015-08-17 12:12:16 +0100

    Fix default function parameter assignment to a list
    
    With python you should not assign a list as the default value of a
    function parameter - because a list is mutable, the result will be that
    the first time a value is passed it will actually modify the default.
    Reference:
    
    http://docs.python-guide.org/en/latest/writing/gotchas/#mutable-default-arguments
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

9	6	lib/bb/cooker.py
2	2	lib/bb/event.py
13	10	lib/bb/fetch2/__init__.py
5	2	lib/bb/msg.py
4	1	lib/bb/process.py
3	1	lib/bb/server/process.py
5	2	lib/bb/server/xmlrpc.py
5	3	lib/bb/taskdata.py
9	3	lib/bb/ui/crumbs/hobeventhandler.py
3	1	lib/toaster/toastergui/views.py

commit 8e9bd559c8ef0ebc9e8babbada06e710908bae08
Author: Ed Bartosh <ed.bartosh@linux.intel.com>
Date:   2015-08-10 12:21:34 +0100

    toaster: move code from setup_lv_tests to setUp
    
    As ProjectLVSelectionTestCase was removed there is no point
    to keep this function. Moved code back to setUp method.
    
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

27	30	lib/toaster/orm/tests.py

commit b322cb6f5fec0b979a646605ed0d7646764c07a7
Author: Ed Bartosh <ed.bartosh@linux.intel.com>
Date:   2015-08-10 12:21:33 +0100

    toaster: remove ProjectLVSelectionTestCase
    
    Moved code from ProjectLVSelectionTestCase.test_single_layersource to
    LayerVersionEquivalenceTestCase.test_compatible_layerversions.
    
    Removed ProjectLVSelectionTestCase.
    
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

9	9	lib/toaster/orm/tests.py

commit f393d3b8943375d18ebd6bc5e00dec5f288b46ec
Author: Ed Bartosh <ed.bartosh@linux.intel.com>
Date:   2015-08-10 12:21:32 +0100

    toaster: add header to orm/test.py
    
    Added header and module docstring.
    
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

23	0	lib/toaster/orm/tests.py

commit 54131366ac2a8fc7866fb1293f5cd0e3da13ea46
Author: Ed Bartosh <ed.bartosh@linux.intel.com>
Date:   2015-08-10 12:21:31 +0100

    toaster: simplify testcase code
    
    Replaced 2 asserts with one in test_single_layersource method
    of ProjectLVSelectionTestCase.
    
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	3	lib/toaster/orm/tests.py

commit 5611c6b911e8a638f462e80e924ac9265a2199f5
Author: Ed Bartosh <ed.bartosh@linux.intel.com>
Date:   2015-08-10 12:21:30 +0100

    toaster: remove duplicated code
    
    Removed test_dual_layersource method from ProjectLVSelectionTestCase
    as identical method presents in LayerVersionEquivalenceTestCase.
    
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

0	17	lib/toaster/orm/tests.py

commit 65121e71078499ba585cc6a42018339d7884322e
Author: Ed Bartosh <ed.bartosh@linux.intel.com>
Date:   2015-08-10 12:21:29 +0100

    toaster: reuse common code
    
    Moved setup code of LayerVersion tests to a function
    and call it from setUp methods of 2 classes.
    
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

36	54	lib/toaster/orm/tests.py

commit 01e6fb74b60b1a66873f33866a35bdf6b2f807bd
Author: Ed Bartosh <ed.bartosh@linux.intel.com>
Date:   2015-08-10 12:21:28 +0100

    toaster: reformat LayerVersionEquivalenceTestCase
    
    Reformatted to increase readability and satisfy pylint.
    Added docstings.
    Shortened variable names.
    
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

74	50	lib/toaster/orm/tests.py

commit 0d1a9038b0cface75d3c858543e411f519b4ef5e
Author: Ed Bartosh <ed.bartosh@linux.intel.com>
Date:   2015-08-10 12:21:27 +0100

    toaster: rewrite LILSUpdateTestCase
    
    Reformatted code. Added docstings.
    
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

17	13	lib/toaster/orm/tests.py

commit 34ea4c661ee48e1986fe2375b94e5b1c5c16c8ee
Author: Ed Bartosh <ed.bartosh@linux.intel.com>
Date:   2015-08-10 12:21:26 +0100

    toaster: rewrite test for LayerSource model
    
    Rewritten LayerSourceVerifyInheritanceSaveLoad class from scratch.
    
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

18	12	lib/toaster/orm/tests.py

commit c1abc6f0905e4321668a483a3d5be7cef3c25401
Author: Ed Bartosh <ed.bartosh@linux.intel.com>
Date:   2015-08-10 12:21:25 +0100

    toaster: fix test_build_layerversion test case
    
    The reason of test failure is that Django querysets are
    different even if they contain the same objects.
    
    Fixed by converting querysets into lists.
    
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/toaster/orm/tests.py

commit 922d37bfee7cc75aa7a3fd5b76abc33df57d3704
Author: Ed Bartosh <ed.bartosh@linux.intel.com>
Date:   2015-08-10 12:21:24 +0100

    toaster: remove prints from the test code
    
    Removed prints as they make test output harder to understand.
    
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

0	4	lib/toaster/orm/tests.py

commit 04e896d7fb170271fb09dae5c2a42acb4b68f513
Author: Mihail Stanciu <stanciux.mihail@intel.com>
Date:   2015-08-12 15:37:55 +0100

    toastergui: Added IDs to elements used in testing
    
    Added static IDs to elements commonly used in the testing process so
    that future UI modifications would not break tests as easily.
    
    [YOCTO #7380]
    
    Signed-off-by: Mihail Stanciu <stanciux.mihail@intel.com>
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	2	lib/toaster/toastergui/templates/basetable_top.html
1	1	lib/toaster/toastergui/templates/newproject.html
2	2	lib/toaster/toastergui/templates/projecttopbar.html

commit 26e2b4a997503b82dc5535ce087565a0d6418141
Author: Sujith H <sujith.h@gmail.com>
Date:   2015-08-12 12:15:11 +0100

    toastergui: Add tests for xhr_importlayer
    
    Inorder to make sure if layer name which we import is already
    available in toaster database, a test case has been included.
    This would help user to identify if layer name which has been
    provided in the import layer web page already exists or not.
    
    Signed-off-by: Sujith Haridasan <sujith.h@gmail.com>
    Signed-off-by: Sujith Haridasan <Sujith_Haridasan@mentor.com>
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

30	0	lib/toaster/toastergui/tests.py

commit 64b30bc15e87f81eddac79872b2282c435827ad0
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2015-08-12 11:33:43 +0100

    toaster: fix invalid fields in the package details page
    
    This patch safeguards referencing invalid fields in the
    project details template, and fixes errors thrown in the
    page.
    
    [YOCTO #7992]
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>
    Signed-off-by: Belen Barros Pena <belen.barros.pena@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/toaster/toastergui/templates/package_included_reverse_dependencies.html
2	2	lib/toaster/toastergui/templates/tablesort.html

commit dd644a2c87e651c3990520759bab55a56ba110d1
Author: Belen Barros Pena <belen.barros.pena@intel.com>
Date:   2015-08-12 11:33:42 +0100

    toaster: Fix typo in set up script output
    
    Removing an spurious 'it' when setting the build directory.
    Thanks to Scott Rifenbark for finding the typo!
    
    Signed-off-by: Belen Barros Pena <belen.barros.pena@intel.com>
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/toaster/bldcontrol/management/commands/checksettings.py

commit 0c419902e5f58dcee9b7fbe9af1928da37e18399
Author: Ed Bartosh <ed.bartosh@linux.intel.com>
Date:   2015-08-10 18:27:18 +0100

    toaster: reduced amount of instance attributes
    
    Used local variables instead of instance attributes in ViewTests.setUp
    
    Fixed pylint warning:
        Too many instance attributes (9/7) (too-many-instance-attributes)
    
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

24	31	lib/toaster/toastergui/tests.py

commit 0b0f360b3660373716189995f3d33ffbc1b21db5
Author: Ed Bartosh <ed.bartosh@linux.intel.com>
Date:   2015-08-10 18:27:17 +0100

    toaster: fix pylint warning 'no space allowed'
    
    Fixed pylint warning "No space allowed before/after bracket".
    
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

5	5	lib/toaster/toastergui/tests.py

commit 2deef2e86a09b6cb907bfeff56774f889cfe30a1
Author: Ed Bartosh <ed.bartosh@linux.intel.com>
Date:   2015-08-10 18:27:16 +0100

    toaster: fix test_get_json_call_returns_json again
    
    Fixed this test case again after rebase. Improved it
    to check for all returned keys. Previously it was checking
    only 3 of them.
    
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

7	3	lib/toaster/toastergui/tests.py

commit 207cb1d16ab089995f23b6070be358870506aa62
Author: Ed Bartosh <ed.bartosh@linux.intel.com>
Date:   2015-08-10 18:27:15 +0100

    toaster: don't catch json.load exceptions
    
    It doesn't make sense to catch json.load exceptions in the
    testing code. If API throws traceback it's better to see
    it instead of error message.
    
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	8	lib/toaster/toastergui/tests.py

commit d46bc24e95fa27cee686b84fbd8c6407efa2635b
Author: Ed Bartosh <ed.bartosh@linux.intel.com>
Date:   2015-08-10 18:27:14 +0100

    toaster: add header and docstings
    
    Added header and docstrings to toastergui tests module.
    
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

28	1	lib/toaster/toastergui/tests.py

commit 30585f7e37966e827861c25a0cc3bf9e3bd2f667
Author: Ed Bartosh <ed.bartosh@linux.intel.com>
Date:   2015-08-10 18:27:13 +0100

    toaster: remove unused import
    
    Fixed pylint warning:
        Unused Build imported from orm.models (unused-import)
    
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/toaster/toastergui/tests.py

commit 86936224f49810147daa91ea2a050b0e7a82f106
Author: Ed Bartosh <ed.bartosh@linux.intel.com>
Date:   2015-08-10 18:27:12 +0100

    toaster: get rid of class attributes
    
    LAYER_NAME and RECIPE_NAME attributes don't make sense as
    they're used only once.
    
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	4	lib/toaster/toastergui/tests.py

commit d87dc9a03bb2d1c21551894d611a4312254f46ef
Author: Ed Bartosh <ed.bartosh@linux.intel.com>
Date:   2015-08-10 18:27:11 +0100

    toaster: put all test cases into one class
    
    Moved all functionality (one setup method and one test case) from
    ProvisionedLayersProjectTestCase and XHRDataTypeAheadTestCase to
    AllProjectsViewTestCase.
    
    Renamed AllProjectsViewTestCase -> ViewTests.
    
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

29	34	lib/toaster/toastergui/tests.py

commit b68e4d994eb825c1039fd90d197724b77aeebd5d
Author: Ed Bartosh <ed.bartosh@linux.intel.com>
Date:   2015-08-10 18:27:10 +0100

    toaster: get rid of AllProjectsViewTestCase
    
    Removed AllProjectsViewTestCase class as it had one method 'setUp'
    and used as a parent for another class AllProjectsViewTestCase.
    
    Moved setUp method to AllProjectsViewTestCase.
    
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	4	lib/toaster/toastergui/tests.py

commit 37f7588df9759481080db56462a271ca808ba9ff
Author: Ed Bartosh <ed.bartosh@linux.intel.com>
Date:   2015-08-10 18:27:09 +0100

    toaster: wrap long lines
    
    Fixed pylint warning Line too long (line-too-long).
    
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

27	13	lib/toaster/toastergui/tests.py

commit 534a302a413319d2573c894b1c1077ac0578bbb1
Author: Ed Bartosh <ed.bartosh@linux.intel.com>
Date:   2015-08-10 18:27:08 +0100

    toaster: fix test_get_json_call_returns_json test
    
    This test case used wrong field name.
    Fixed by renaming field 'lists' -> 'rows'.
    
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

6	6	lib/toaster/toastergui/tests.py

commit a660787311d2961c66c0443bf0e2e094c9baef1b
Author: Mariano Lopez <mariano.lopez@linux.intel.com>
Date:   2015-08-03 08:45:05 +0000

    runqueue.py: Add provides to taskdepdata
    
    Currently bitbake is the only one that knows the relation
    between PN and PROVIDES. In some cases it is needed to have
    this relation in the data store (the bootloader it's a good
    case).
    
    This adds the PROVIDES to the taskdata, so it would be in
    the data store as one field of BB_TASKDEPDATA.
    
    Signed-off-by: Mariano Lopez <mariano.lopez@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	1	lib/bb/runqueue.py

commit b4c389443bdd121121fd1d1a9006a9f1f63f186f
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2015-08-06 19:23:49 +0300

    toastergui: layerBtn Fix build trigger mechanism
    
    The new project page is no longer responsible for triggering the build so
    add a handler for this in layerBtn which is used in the layerdetails and
    layers pages. This also removes the conflicting and  redundant handler
    for this in the layerdetails.
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

13	0	lib/toaster/toastergui/static/js/layerBtn.js
0	8	lib/toaster/toastergui/static/js/layerdetails.js
1	1	lib/toaster/toastergui/tables.py
2	2	lib/toaster/toastergui/templates/recipe_btn.html

commit 58035667e433f2b77f5cd48240dd051c35476284
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2015-08-06 19:23:48 +0300

    toastergui: Fix typo on layers in project filter condition
    
    Should be & rather than "and" which was returning the truth'd value of
    the and condition.
    
    [YOCTO #8114]
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	2	lib/toaster/toastergui/tables.py

commit 8245a7d679914ca7d4548ab7e83b5047ff8a1ff5
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2015-08-06 19:23:47 +0300

    toastergui: Move click disabled check after table ready event
    
    We were attaching this handler before the elements were fully ready in
    the dom. Which allowed these links although disabled to take users to
    the change machine page.
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

6	4	lib/toaster/toastergui/static/js/layerdetails.js

commit 6e46ad4aa404d80fded27db1fb072d35250cfcfb
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2015-08-06 19:23:46 +0300

    toastergui: Machine select button url parameters change
    
    Update the url for changing the machine in the project page.
    
    [YOCTO #8113]
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/toaster/toastergui/tables.py

commit 7f3a4e0330f4de3ba8e092bc1c15a53d8c2be073
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2015-08-06 19:01:36 +0300

    toastermain: Add a longer default database timeout
    
    When using sqlite we sometimes see Database Locked exceptions when we
    fire off database calls asynchronously from the UI. We need sqlite to
    wait a bit longer for the lock to be released.
    n.b In production setup we hopefully wouldn't be using sqlite.
    
    docs.djangoproject.com/en/1.6/ref/databases/#database-is-locked-errors
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

6	0	lib/toaster/toastermain/settings.py

commit b5100bfd4cb32a9b59b0554c6dbc3a4295da7d8e
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2015-08-06 19:01:35 +0300

    toastergui: Move layerdetails view definition to the views.py
    
    The layerdetails view definition was moved to tables though it isn't
    a table. We have a mechanism for the JSON response for this page so use
    this instead of a custom class.
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	23	lib/toaster/toastergui/tables.py
1	2	lib/toaster/toastergui/urls.py
15	0	lib/toaster/toastergui/views.py

commit daf902e2a6f736b9c8ef6492143fdbf856451559
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2015-08-06 19:01:34 +0300

    toastergui: Fix toastertable table header reference
    
    A header id was mistakenly added to the table template which was not
    also added to the simple version of the toaster template. We don't need
    this id so remove it.
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/toaster/toastergui/static/js/table.js
1	1	lib/toaster/toastergui/templates/toastertable.html

commit 3a6bad55a84d8d374a23f488ce42fed9b927c4f2
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2015-08-04 22:46:40 +0300

    toastergui: libtoaster typeahead Add in results highlighter
    
    Add a highlighter for the results in the typeahead, this highlights the
    part of the results which is currently being matched. This is a modified
    version of the bootstrap stock function with added escaping and the
    addition of the details information.
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

8	4	lib/toaster/toastergui/static/js/libtoaster.js

commit 0b508e8b4a9e25c223c6c11ecd6d0e1aab727e8c
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2015-08-04 22:46:39 +0300

    toastergui: libtoaster: typeahead resiliency for slow server
    
    When we have a slow request we don't want to see the typeahead results
    changing in the middle of typing the item. To do this we make sure that
    requests to the typeahead can only happen sequentially and that if
    results have been retrieved but the input is now empty we don't bother
    showing the results.
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

17	1	lib/toaster/toastergui/static/js/libtoaster.js

commit 5700cd269e3a4fd517e16a3a19e61a23091df465
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2015-08-04 22:46:38 +0300

    toastergui: tests Fix and more comprehensive typeahead unittest
    
    Fix the currently broken unit test for typeaheads and add some
    additional fields to check for in layers, projects, recipes and machines
    typeaheads.
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

69	19	lib/toaster/toastergui/tests.py

commit 5c7004908f6916c0d279299c47b9dca3237148ec
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2015-08-04 22:46:37 +0300

    toastergui: views Standardise the fields project layer response
    
    We need to keep consistent the field names of these objects so that we
    can use the object response from different calls. e.g. layer dependences
    or listing layers in the project.
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	2	lib/toaster/toastergui/views.py

commit 1cc19c84ee97182f39eae0338c712f7a2b40a18d
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2015-08-04 22:46:36 +0300

    toasterui: views Remove unused xhr_typeahead view definition
    
    The one thing left being used in this definition was a response which
    contains the list of layers which would be deleted if you change the
    project release. This patch moves that to it's own url/endpoint and
    updates the frontend reference which is using it.
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	2	lib/toaster/toastergui/static/js/projectpage.js
1	2	lib/toaster/toastergui/templates/project.html
6	2	lib/toaster/toastergui/urls.py
23	37	lib/toaster/toastergui/views.py

commit 80b214d93c5df63a251b807ca93f81f00c6bfeb2
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2015-08-04 22:46:35 +0300

    toastergui: libtoaster Throw an exception no url is specified
    
    At a minimum for this typeahead to work we need a url parameter to call
    for a JSON reponse of items to filter on.
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	0	lib/toaster/toastergui/static/js/libtoaster.js

commit 31a8ae7909347f7b6edde5bbdf02b86dc1b32ed0
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2015-08-04 22:46:34 +0300

    toastergui: Switch to using the new toaster typeahead widget
    
    Switch the existing typeahead inputs to use the new typeahead widget.
    This means we have a defined mechanism and end point for typeaheads
    which meets the design specification.
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

17	9	lib/toaster/toastergui/static/js/base.js
6	6	lib/toaster/toastergui/static/js/importlayer.js
1	1	lib/toaster/toastergui/static/js/layerdetails.js
2	3	lib/toaster/toastergui/static/js/libtoaster.js
2	2	lib/toaster/toastergui/static/js/projectpage.js
5	3	lib/toaster/toastergui/templates/base.html
4	2	lib/toaster/toastergui/views.py

commit 913d01758564db2f5fae4451bf0fdca38a1b3d61
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2015-08-04 22:46:33 +0300

    toastergui: Add typeaheads layers, machines, projects, recipes
    
    Implementation of typeahead widgets for layers machines and recipes
    typeahead.
    
    [YOCTO #7152]
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

145	0	lib/toaster/toastergui/typeaheads.py
11	0	lib/toaster/toastergui/urls.py

commit 195c5407a9de29d97f2525b9ae6c827afb934e37
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2015-08-04 22:46:32 +0300

    toastergui: widgets Add a typeahead widget
    
    The typeahead behaviour is significantly different from searching in a
    table so we need a separate widget to do this.
    
    [YOCTO #7152]
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

52	0	lib/toaster/toastergui/widgets.py

commit 5e013a9bc3deb03bd6bac357b9ecb81c3c77b255
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2015-08-04 22:46:31 +0300

    toastergui: tables Use util functions for the common querysets
    
    Use the new utils functions on the project object to get the common querysets
    that we also use in tables.
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	8	lib/toaster/toastergui/tables.py

commit 2a10fecd985343802f0e99c6fff25c28980eee20
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2015-08-04 22:46:30 +0300

    toaster: orm Add util functions to return common querysets
    
    We use these querysets when creating tables of results and also when we
    want to have a typeahead search. These can also form the basis of future
    API endpoints.
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

40	1	lib/toaster/orm/models.py

commit 32d382315bad37cebbe67ca3287085f3d856a9ed
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2015-08-04 22:46:29 +0300

    toaster: orm Add util function to return the url to layerversion
    
    Save duplicating this call and make a utility function for it on the
    Layer_Version object.
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

4	0	lib/toaster/orm/models.py

commit 8d2ed32cd09cf6cb96521fd42789faae99656fad
Author: Belen Barros Pena <belen.barros.pena@intel.com>
Date:   2015-08-04 16:07:11 +0100

    toastergui: add action to empty "most built" recipes
    
    It is not very good to just tell people: "this is empty because you
    haven't done anything". We should politely invite them to do something
    about it. Thus adding a "Choose a recipe to build" link to the all
    compatible recipes page whenever the 'most built recipes' section is
    empty.
    
    Signed-off-by: Belen Barros Pena <belen.barros.pena@intel.com>
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	0	lib/toaster/toastergui/templates/project.html

commit 68086d260842c12e5459c719f383b045fb0b3c2d
Author: Belen Barros Pena <belen.barros.pena@intel.com>
Date:   2015-08-04 16:07:10 +0100

    toastergui: fix spacing in the import layers page
    
    Adjust the space between the first fieldset and the tabs,
    and the help text and the first form field.
    
    Signed-off-by: Belen Barros Pena <belen.barros.pena@intel.com>
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	2	lib/toaster/toastergui/templates/importlayer.html

commit 59bcafa712b9a16b647bd26b3bd738ae6fc21eaa
Author: Belen Barros Pena <belen.barros.pena@intel.com>
Date:   2015-08-04 16:07:09 +0100

    toastergui: remove project name from layer change notification
    
    The project name is always a link to the basic
    configuration page, which looks quite silly when
    you change layers from that page.
    
    Since I guess the idea is reusing those notifications
    everywhere, I've replaced the project name with a
    generic 'to your project' / 'from your project', so
    that they read right no matter where you see them.
    
    Signed-off-by: Belen Barros Pena <belen.barros.pena@intel.com>
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	5	lib/toaster/toastergui/static/js/libtoaster.js

commit fd9e6d262aa3fdb2377c30ebac54096453a3b9f9
Author: Belen Barros Pena <belen.barros.pena@intel.com>
Date:   2015-08-04 16:07:08 +0100

    toastergui: change link styles in alert-info
    
    Make them a bit less bold: it was a bit in your face
    before.
    
    Signed-off-by: Belen Barros Pena <belen.barros.pena@intel.com>
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/toaster/toastergui/static/css/default.css

commit c97f658f4b2131f280c364c2209efd28878570dc
Author: Belen Barros Pena <belen.barros.pena@intel.com>
Date:   2015-08-04 16:07:07 +0100

    toastergui: breadcrumb fixes
    
    Make sure that we use the correct html entity
    for the breadcrumb dividers, and remove the
    'all builds' item from the history pages: all
    breadcrumbs should now have the project name as
    their first element, since the 'all builds' page
    can be reached using the global naviation in the
    top bar.
    
    Signed-off-by: Belen Barros Pena <belen.barros.pena@intel.com>
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	2	lib/toaster/toastergui/templates/basebuilddetailpage.html
1	2	lib/toaster/toastergui/templates/basebuildpage.html
2	2	lib/toaster/toastergui/templates/layerdetails.html

commit 7b539bbf25786d313fd8092dc96b186388df58aa
Author: Belen Barros Pena <belen.barros.pena@intel.com>
Date:   2015-08-04 16:07:06 +0100

    toastergui: spacing and top nav style change
    
    Remove the margin for the .section class and the
    .row-fluid class in the page header div to
    reduce the vertical white space a little
    bit in the project pages.
    
    Also, change the style of the Toaster manual
    link to make it look like the main navigation.
    
    Signed-off-by: Belen Barros Pena <belen.barros.pena@intel.com>
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

0	1	lib/toaster/toastergui/static/css/default.css
11	5	lib/toaster/toastergui/templates/base.html
1	1	lib/toaster/toastergui/templates/projecttopbar.html

commit b9375c73e736003e66575969c9ea244403e47aeb
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2015-08-03 07:34:02 +0100

    cooker: Resolve file monitoring race issues when using memres bitbake
    
    If you load memory resident bitbake, then change bblayers.conf or other
    configuration files, then execute your first command, bitbake will not
    notice the changes. This is because it adds the file watches during
    inital parsing, which happens at the time the first command is run.
    
    To fix this, we move the addition of the file watches to earlier in
    the process, so bitbake then does track them correctly. This also
    avoids some issues Paul was seeing with tinfoil2.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

4	3	lib/bb/cooker.py

commit e691312a3add222b04e7b2f52f8df6abcb9068bf
Author: Christopher Larson <chris_larson@mentor.com>
Date:   2015-07-31 11:16:46 -0700

    bb.parse: properly error out on filesystem errors
    
    We've had a long-standing bug where a legitimate error reading a file (IOError
    or OSError) is always suppressed as though it was a 'file not found' case. As
    a concrete example, if you do a `chmod 000 conf/local.conf`, it'll silently
    not parse local.conf, rather than erroring to let the user know about the
    problem.
    
    Fix this by handling the ENOENT case specifically.
    
    Signed-off-by: Christopher Larson <chris_larson@mentor.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

4	3	lib/bb/parse/__init__.py
14	7	lib/bb/parse/parse_py/ConfHandler.py

commit 9b95fa94eaae452ac7814f1e67c2f7a6314c52f1
Author: Christopher Larson <chris_larson@mentor.com>
Date:   2015-07-31 11:16:45 -0700

    bb.cookerdata: don't show traceback for ParseError/ExpansionError
    
    Tracebacks are of extremely limited usefulness in this context. The exceptions
    carry the necessary context already, and the user doesn't care about the calls
    in bitbake internals that led to an expansion or parse failure.
    
    Signed-off-by: Christopher Larson <chris_larson@mentor.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

5	2	lib/bb/cookerdata.py

commit d8953c16c52c6e5de879f4a32ec8aeee396bb410
Author: Juro Bystricky <juro.bystricky@intel.com>
Date:   2015-07-29 11:09:41 -0700

    bitbake-user-manual-fetching.xml: note about URLs with semi-colons
    
    Some URLs contain semi-colons. Unfortunatelly, bitbake uses semi-colons in SRC_URI
    as delimiters for various parameters.
    It may still be possible to use such URLs, providing the user replaces semi-colons ';'
    with '&' characters.
    
    For example:
    
       http://abc123.com/git/?p=gcc/gcc.git;a=snapshot;h=a5dd47
    
     and
    
       http://abc123.com/git/?p=gcc/gcc.git&a=snapshot&h=a5dd47
    
    should be equivalent, as W3C recommends treating ';' in queries identically to '&'.
    
    See http://www.w3.org/TR/1999/REC-html401-19991224/appendix/notes.html#h-B.2.2
    
    Kudos to Olof Johansson
    
    Signed-off-by: Juro Bystricky <juro.bystricky@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

19	0	doc/bitbake-user-manual/bitbake-user-manual-fetching.xml

commit 3ac0ba73790b8f68567daa2de313c78053411fbb
Author: Ed Bartosh <ed.bartosh@linux.intel.com>
Date:   2015-07-28 15:24:45 +0100

    bitbake: toaster: Add is_image field to the Recipe model
    
    Added new field is_image to the Recipe model.
    Made sure is_image is populated when layer sources are imported.
    Made sure the change doesn't break loading old style layer sources.
    
    Tested by loading data from layers.pythonanywhere.com and
    from layers.openembedded.org.
    
    [YOCTO: #7571]
    
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

338	0	lib/toaster/orm/migrations/0024_auto__add_field_recipe_is_image.py
3	0	lib/toaster/orm/models.py

commit 9446f02520a3bee4417908d8da2ab1848f4759c3
Author: Ed Bartosh <ed.bartosh@linux.intel.com>
Date:   2015-07-28 15:24:44 +0100

    bitbake: toaster: Uncomment logging messages
    
    Uncommented debug and warning messages in _shellcmd method of
    LocalhostBEController as they seem to be useful for debugging.
    
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	3	lib/toaster/bldcontrol/localhostbecontroller.py

commit 018442e2645390342d43a95a8685e51b29ea868a
Author: Ed Bartosh <ed.bartosh@linux.intel.com>
Date:   2015-07-28 15:24:43 +0100

    bitbake: toaster: get rid of _createdirpath function
    
    Replaced call of recursive _createdirpath method with simpler
    call of os.makedirs.
    
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

7	12	lib/toaster/bldcontrol/localhostbecontroller.py

commit ed6094f78c75aab776a82967101d9c57e38e2c4d
Author: Ed Bartosh <ed.bartosh@linux.intel.com>
Date:   2015-07-28 15:24:42 +0100

    bitbake: toaster: Fix usage of wrong variables
    
    Replaced nonexistent variable 'be' with self in
    models.py/BuildEnvironment methods.
    
    Fixed typo: BuildRequest.TYPE_LOCAL -> BuildEnvironment.TYPE_LOCAL
    
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

4	4	lib/toaster/bldcontrol/models.py

commit f1d8e0ff7233f17cff3a56db10d2443b392b407d
Author: Ed Bartosh <ed.bartosh@linux.intel.com>
Date:   2015-07-28 15:24:41 +0100

    bitbake: toaster: Wait for toaster gui to come
    
    Set logging level for the Toaster logger to get messages
    to toaster_ui.log
    
    Reverted previous workaround.
    
    [YOCTO: #7965]
    
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	0	lib/bb/ui/toasterui.py
1	1	lib/toaster/bldcontrol/localhostbecontroller.py

commit 18743274a94966d2cd8d17d163e4dbab501a8a52
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2015-07-28 15:24:40 +0100

    bitbake: toastergui: Toastertables don't replace dash in cache key
    
    The dash character was being stripped from the cache key when we sanitise
    it for the memcache backend. This meant that we were getting a false hit
    on the cache and returning non descending results which are indicated by
    the dash prefix on the field name.
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	2	lib/toaster/toastergui/widgets.py

commit d2e69721233ab3cbbc3bdd6a1c198fde8a1f287e
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2015-07-30 19:25:19 +0300

    toaster: toastergui: run pylint on the toaster files
    
    This patch enables pylint running on the toaster files, showing
    only the errors. This enables spotting common mistakes in the
    toaster python files.
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

6	0	lib/toaster/contrib/tts/tests.py

commit 639c46a08e524902018e28367fcb4e26362cd3e3
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2015-07-30 19:25:18 +0300

    toaster: tts: execute tests in numeric order
    
    As the tests are verifying different type of the functionality,
    it is usually the case that a failing early test will completely
    make the subsequent tests failing, e.g. if the system cannot
    start due to a bug, there is little point in testing other
    functions.
    
    In order to prevent uneeded test runs, and to generate repeatable
    test patterns, the test cases have now a numeric order in the
    class name (e.g. Test01XXX). The tests are executed in this order,
    and the first test failing will stop the test run.
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

7	4	lib/toaster/contrib/tts/runner.py
3	3	lib/toaster/contrib/tts/tests.py

commit 86a69d294ace41bd109db97b753554ccc8f3dac0
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2015-07-30 19:25:17 +0300

    toaster: tts: make sure to import data
    
    Importing data from the layer index should be part of the setup
    because otherwise we have no reliable database configuration.
    
    This patch selects the first option for importing the database
    configuration file.
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	1	lib/toaster/contrib/tts/tests.py

commit 2b04165f6a70fad5beb8e4c7053a2b2053a51cde
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2015-07-30 19:25:16 +0300

    toaster: tts: delete the database only if created
    
    To allow the tests to run on different databases (in case of
    manual runs), the HTML5 test will only delete the database
    file if it was created in the setUp.
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	1	lib/toaster/contrib/tts/tests.py

commit db29ef9ab23c9f083e9aa175b28430f122f35a84
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2015-07-30 19:25:15 +0300

    toaster: tts: delete pyc files before the tests start
    
    There may be leftover *.pyc files from previous code runs in the
    current checkout directory, so we delete everything before
    starting the tests, to make sure that we actually testing the
    current checkout.
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

4	0	lib/toaster/contrib/tts/runner.py

commit f08ce41f1137f268049ef8345462aa58b233e50b
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2015-07-30 19:25:14 +0300

    toaster: tts: fix startup and cleanup for managed mode
    
    This patch fixes the toaster startup and database cleanup
    for managed mode. It is needed because the toaster script
    thinks it has been called with "source" instead of being
    executed as independent script if not called through bash.
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	0	lib/toaster/contrib/tts/runner.py
4	3	lib/toaster/contrib/tts/tests.py

commit 91566d2ea8ca5a696ce742b9e5e3b7b6c10c200c
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2015-07-30 19:25:13 +0300

    toaster: tts: improve logging in urlcheck.py
    
    This patch improves logging in the urlcheck.py.
    It allows properly running just HTML5 tests outside the
    test suite.
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

8	1	lib/toaster/contrib/tts/urlcheck.py

commit d7c5989b795566f8611208b26851871abccf9578
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2015-07-30 19:25:12 +0300

    toaster: tts: improve debugging information
    
    We add debug information, and exception handling as to make
    it easy to figure out what is going on when tests fail on
    automatic start.
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

12	1	lib/toaster/contrib/tts/runner.py

commit 80f525e5cbe83e0407ecddf84401d68213c6d5cf
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2015-07-30 19:25:11 +0300

    toaster tests: gitignore and use absolute path for log file
    
    gitignore the cache directory created by the http client
    
    the log file for tests is already set up as an absolute path,
    so no need to recompute the path
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	0	.gitignore
2	2	lib/toaster/contrib/tts/recv.py

commit c85a35e37150ee8be091bd142cac8a1885f1dff0
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2015-07-30 19:25:10 +0300

    toaster: tts: clean up HTML5 compatible url list
    
    This patch cleans up the list of URLs that are tested for
    HTML5 compatibility using the w3c-validator. It removes
    the URLs that are no longer in use, and the AJAX-only URLs
    that return JSON content.
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

0	7	lib/toaster/contrib/tts/urllist.py

commit 2b40b412ff6a7e3fd4cc32707bd3cd713bc09ddb
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2015-07-30 19:25:09 +0300

    toaster: tts: fix pylint warnings
    
    This patch brings TTS to the pylint coding standards.
    Pylint was run with some disables:
    
    disable=logging-too-many-args,line-too-long,missing-docstring
    
    and achieved
    
    Your code has been rated at 10.00/10
    
    There are no functional changes.
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

22	15	lib/toaster/contrib/tts/config.py
18	17	lib/toaster/contrib/tts/launcher.py
9	4	lib/toaster/contrib/tts/recv.py
45	42	lib/toaster/contrib/tts/runner.py
0	20	lib/toaster/contrib/tts/scratchpad.py
33	31	lib/toaster/contrib/tts/shellutils.py
20	23	lib/toaster/contrib/tts/tests.py
17	12	lib/toaster/contrib/tts/urlcheck.py
44	46	lib/toaster/contrib/tts/urllist.py

commit 6f25846dbcaf007f58f9a32e58dcd564f6430fe9
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2015-07-28 18:03:22 +0100

    toastergui: Remove angularJS and projectapp based on angular
    
    AngularJS proved unsuitable for the new project page implementation.
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>

-	-	lib/toaster/toastergui/static/js/angular-animate.min.js
-	-	lib/toaster/toastergui/static/js/angular-cookies.min.js
-	-	lib/toaster/toastergui/static/js/angular-route.min.js
-	-	lib/toaster/toastergui/static/js/angular-sanitize.min.js
-	-	lib/toaster/toastergui/static/js/angular.min.js
0	8	lib/toaster/toastergui/static/js/angular.min.js.map
0	985	lib/toaster/toastergui/static/js/projectapp.js

commit 81cb1cd1aa900f29a25d14dce93d301cd6b6fdb7
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2015-07-31 15:09:23 +0300

    toastergui: project page Add inline project name change feature
    
    This feature allows the project name to be changed from where ever it is
    displayed in the project pages.
    
    [YOCTO #7329]
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

29	0	lib/toaster/toastergui/static/js/base.js
10	1	lib/toaster/toastergui/templates/projecttopbar.html

commit 79af72e1b80b033a37992095b2e97449de5ebd8b
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2015-07-31 15:09:22 +0300

    toastergui: layerBtn use libtoaster for change notification
    
    Use the common functionality for change notifications.
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	3	lib/toaster/toastergui/static/js/layerBtn.js
1	6	lib/toaster/toastergui/templates/generic-toastertable-page.html

commit e2ab67eaf76da9ee2009e8420d5584c3daa97ac1
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2015-07-31 15:09:20 +0300

    toastergui: newbuildbutton Fix removed elements
    
    All the elements for the new build button need to be present for the
    build button to work. Now that the template variables all have to have
    values we have to make sure that the elements are still added to the dom
    for the js to manipulate them.
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	1	lib/toaster/toastergui/templates/base.html

commit 047df808203f3779243eb88c069757f7a7b7bbed
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2015-07-31 15:09:19 +0300

    bitbake: toastergui: newbuildbutton Fix typo on project save function
    
    project.id rather than project.pk.
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/toaster/toastergui/static/js/base.js

commit e3c6a00b848a6f147e93c8da46b8a3516499fde8
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2015-07-31 15:09:18 +0300

    toastergui: Change build button popover to a build-button
    
    To share the build-button mechanism from the pop over and project
    topbar build button we now use a build-button class to reference them
    and share the event handlers.
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

9	6	lib/toaster/toastergui/static/js/base.js
2	2	lib/toaster/toastergui/templates/base.html

commit c3753948bd00c3498ca3e76cb218eb6cf423c3e3
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2015-07-31 15:09:17 +0300

    toastergui: base Use removeAttr / attr
    
    Use removeAttr and attr calls to enable and disable the build button and
    build input field.
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

7	5	lib/toaster/toastergui/static/js/base.js

commit bdea86ae8720ee5792a5617c6073d51922a224ff
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2015-07-31 15:09:16 +0300

    toastergui: Fix Duplicate layer importlayer api calls
    
    As the JSON response changed the duplicate layer functionality wasn't
    wasn't working as the field names in the returned data changed. This
    patch brings the field names back in sync with the response.
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

7	7	lib/toaster/toastergui/static/js/importlayer.js

commit e65de693670203ddcbf5f23ad2a91c523df879d8
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2015-07-31 15:09:15 +0300

    toastergui: libtoaster: Add guard against missing name property
    
    Add a debug warning if a JSON payload isn't compatible. i.e. without a
    name field.
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

8	1	lib/toaster/toastergui/static/js/libtoaster.js

commit 2f8951d6e640d86f605b082aab4a950dab9065ad
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2015-07-31 15:09:14 +0300

    toastergui: libtoaster Make sure we always pass format=json
    
    The new API for typeahead requires that we pass this parameter in to make
    sure we get a JSON response.
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	0	lib/toaster/toastergui/static/js/libtoaster.js

commit aef36f2674d3d82b1757c02ffbf8b72fd4f32a4e
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2015-07-31 15:09:13 +0300

    toastergui: css Remove redundant css rules
    
    The machine change notification animation is no longer required in
    favour of the global overlay notification.
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

0	5	lib/toaster/toastergui/static/css/default.css

commit 6489e6eb5c3b0d59063b6d60521fc33fe563e707
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2015-07-31 15:09:12 +0300

    toastergui: Add new project page and navigation
    
    This brings in the new project page design and improved navigation. As
    this also removes the dependency on Angular it also required that the
    entry points to the project page such as machine-change notifications
    are also updated.
    
    [YOCTO #7329]
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

40	41	lib/toaster/toastergui/static/js/base.js
1	3	lib/toaster/toastergui/static/js/importlayer.js
3	2	lib/toaster/toastergui/static/js/layerdetails.js
12	3	lib/toaster/toastergui/static/js/libtoaster.js
429	0	lib/toaster/toastergui/static/js/projectpage.js
7	0	lib/toaster/toastergui/templates/base.html
0	2	lib/toaster/toastergui/templates/baseprojectpage.html
5	7	lib/toaster/toastergui/templates/importlayer.html
1	1	lib/toaster/toastergui/templates/machine_btn.html
91	407	lib/toaster/toastergui/templates/project.html
18	8	lib/toaster/toastergui/templates/projecttopbar.html
3	2	lib/toaster/toastergui/views.py

commit 6457d8fa30ac2b9b7413b8e9a7c5806bace10141
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2015-07-31 15:09:11 +0300

    toastergui: css Add new rules for new project page
    
    Add new css rules needed for new project page.
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

18	0	lib/toaster/toastergui/static/css/default.css

commit cc6c606c07baadc849c3290b23c56ad4e719fba2
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2015-07-31 15:09:10 +0300

    toastergui: http api Add guard against incomplete change requests
    
    If we get a request to the project change api which either contains the
    current configuration (i.e no change) or empty configuration handle this
    gracefully.
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

10	2	lib/toaster/toastergui/views.py

commit dbce3b43094b0a123b0d63aa07cc4f9547630094
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2015-07-31 15:09:09 +0300

    toastergui: tables Add name field to layers table
    
    This field is required by the typeahead in the new project page to do
    the name matching on.
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

5	0	lib/toaster/toastergui/tables.py

commit 9d760462de99cb8729b7e0db773e77d4cd508733
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2015-07-31 15:09:08 +0300

    toastergui: libtoaster Add show change notification function
    
    Now that we have a change notification that is global move this
    functionality to libtoaster for shared use.
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

8	0	lib/toaster/toastergui/static/js/libtoaster.js

commit 4d64fd0d1236d342b29537f601a68cd23a8255ea
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2015-07-31 15:09:07 +0300

    toastergui: Standardise the layer object property layerdetailurl
    
    To be able to use the utility functions in libtoaster  we need to have a
    single property name for the value that represents the url for the
    layer details in the layer object.
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	3	lib/toaster/toastergui/static/js/importlayer.js
1	1	lib/toaster/toastergui/static/js/layerdetails.js
2	2	lib/toaster/toastergui/static/js/libtoaster.js
5	2	lib/toaster/toastergui/tables.py
2	2	lib/toaster/toastergui/templates/layer_btn.html
1	1	lib/toaster/toastergui/templates/layerdetails.html
1	1	lib/toaster/toastergui/templates/machine_btn.html
1	1	lib/toaster/toastergui/templates/recipe_btn.html
12	2	lib/toaster/toastergui/views.py

commit 770008f8ff3f8aa4f90636621a4162d676a71da7
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2015-07-31 15:09:06 +0300

    toastergui: Remove erroneous CSS property
    
    Remove a CSS property value which is missing a corresponding key.
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

0	1	lib/toaster/toastergui/static/css/default.css

commit 4545c21b70998bd240c3a21de05e8d4642044119
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2015-07-31 15:09:05 +0300

    toastergui: importlayer Add format type to JSON calls
    
    After API was changed we now need to pass the parameter "format=json" as
    a get parameter when requesting a json payload. Otherwise we get the
    html version of the page instead of the data we need.
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

16	12	lib/toaster/toastergui/static/js/importlayer.js

commit 37364e671ad1897bef818239a8e289b3d4c93925
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2015-07-31 15:09:04 +0300

    toastergui: base Fix html indentation
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

120	120	lib/toaster/toastergui/templates/base.html

commit 66fa0dd988e01ec79e74be7a5697eaa3b4f017d8
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2015-07-31 15:09:03 +0300

    toastergui: Implement new project navigation
    
    Change the structure of the project page to include a navigation menu
    and top tab navigation. Remove old breadcrumb method.
    
    [YOCTO #7329]
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

0	1	lib/toaster/toastergui/static/css/default.css
38	16	lib/toaster/toastergui/static/js/base.js
13	0	lib/toaster/toastergui/static/js/layerdetails.js
2	3	lib/toaster/toastergui/templates/base.html
15	0	lib/toaster/toastergui/templates/baseprojectbuildspage.html
30	34	lib/toaster/toastergui/templates/baseprojectpage.html
0	1	lib/toaster/toastergui/templates/basetable_top.html
0	14	lib/toaster/toastergui/templates/basetable_top_buildprojects.html
0	3	lib/toaster/toastergui/templates/buildrequestdetails.html
1	1	lib/toaster/toastergui/templates/builds.html
7	12	lib/toaster/toastergui/templates/generic-toastertable-page.html
3	8	lib/toaster/toastergui/templates/importlayer.html
19	8	lib/toaster/toastergui/templates/layerdetails.html
7	31	lib/toaster/toastergui/templates/project.html
1	4	lib/toaster/toastergui/templates/projectbuilds.html
2	6	lib/toaster/toastergui/templates/projectconf.html
38	0	lib/toaster/toastergui/templates/projecttopbar.html
3	3	lib/toaster/toastergui/urls.py
1	0	lib/toaster/toastergui/views.py

commit 456a4a6782d3098cc9abb39659a619fdcf52eb01
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2015-07-31 15:09:02 +0300

    toastergui: Implement new top navigation design
    
    Additional items for top level navigation. This is part of a wider
    navigation redesign.
    
    [YOCTO #7329]
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

6	2	lib/toaster/toastergui/static/css/default.css
25	3	lib/toaster/toastergui/templates/base.html
0	14	lib/toaster/toastergui/templates/basetable_top_projectbuilds.html
1	1	lib/toaster/toastergui/templates/projects.html

commit af13eaba627f199f91c048c435b9dbe19c79527f
Author: Alexander Kanavin <alexander.kanavin@linux.intel.com>
Date:   2015-07-07 17:36:43 +0300

    wget.py: fix incorrect regexes
    
    [\.-_] means "any character between . and _"
    What was meant here is certainly "any character from the three characters .-_"
    
    Signed-off-by: Alexander Kanavin <alexander.kanavin@linux.intel.com>
    Signed-off-by: Ross Burton <ross.burton@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	2	lib/bb/fetch2/wget.py

commit a29780bd43f74b7326fe788dbd65177b86806fcf
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2015-07-31 10:16:33 +0100

    cooker: properly fix bitbake.lock handling
    
    If the PR server or indeed any other child process takes some time to
    exit (which it sometimes does when saving its database), it can end up
    holding bitbake.lock after the UI exits, which led to errors if you ran
    bitbake commands successively - we saw this when running the PR server
    oe-selftest tests in OE-Core. The recent attempt to fix this wasn't
    quite right and ended up breaking memory resident bitbake. This time we
    close the lock file when cooker shuts down (inside the UI process)
    instead of unlocking it, and this is done in the cooker code rather than
    the actual UI code so it doesn't matter which UI is in use. Additionally
    we report that we're waiting for the lock to be released, using lsof or
    fuser if available to list the processes with the lock open.
    
    The 'magic' in the locking is due to all spawned subprocesses of bitbake
    holding an open file descriptor to the bitbake.lock. It is automatically
    unlocked when all those fds close the file (as all the processes terminate).
    We close the UI copy of the lock explicitly, then close the server process
    copy, any remaining open copy is therefore some proess exiting.
    
    (The reproducer for the problem is to set PRSERV_HOST = "localhost:0"
    and add a call to time.sleep(20) after self.server_close() in
    lib/prserv/serv.py, then run "bitbake -p; bitbake -p" ).
    
    Cleanup work done by Paul Eggleton <paul.eggleton@linux.intel.com>.
    
    This reverts bitbake commit 69ecd15aece54753154950c55d7af42f85ad8606 and
    e97a9f1528d77503b5c93e48e3de9933fbb9f3cd.
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

0	6	lib/bb/command.py
30	0	lib/bb/cooker.py
1	0	lib/bb/main.py
1	0	lib/bb/tinfoil.py
0	20	lib/bb/ui/knotty.py
25	4	lib/bb/utils.py

commit bef724057f1ea81571dd3ac5a9cf862f818434b5
Author: Andre McCurdy <armccurdy@gmail.com>
Date:   2015-07-23 16:09:01 -0700

    build: Exit scripts with result of last shell function
    
    Since shell scripts run with 'set -e' the final exit at the end of the
    script can only be returning 0. However, for correctness and to follow
    the original intention of the 'cleanup' commands, let's fix the typo
    and return the success of the last shell function rather than the
    success of unhooking the exit trap handler.
    
    Signed-off-by: Andre McCurdy <armccurdy@gmail.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/build.py

commit 100b447a161ef20fa559e39516cd32fa78e38262
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2015-07-24 11:41:44 +0100

    data_smart: Improve override history logging
    
    Calling record() for each override alteration is slow. Since we now expand
    overrides dynamically we don't have to record the log data at each alteration,
    we can instead print it directly from the existing data stores at variable
    history print time using the exact same data stores.
    
    This massively improves performance of the data store when parsing
    with bitbake -e for example, it will improve memory overhead as well.
    
    The only downside is that VariableHistory has to poke into the datastore
    for some of its data but that seems an acceptable tradeoff rather than
    double caching.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/data.py
13	10	lib/bb/data_smart.py

commit 7be76d8f79ea92fd4bd36146eb9a4b86551b526d
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2015-07-24 11:40:55 +0100

    data_smart: Improve performance of infer_caller_details()
    
    As things stand now, bitbake -e (which turns on all the caller tracking)
    of OE-Core generates around 9.5 million stat calls which is slow and the
    largest single thing on the profile data.
    
    This is because infer_caller_details() calls traceback.extract_stack()
    which adds line contents to the traceback. This in turn calls python's
    internal linecache code which calls stat on every file for every callback.
    We don't even use that info. We only even want a single frame of the stack.
    
    Instead, open code for the pieces of information we need. Also, only
    obtain the stack once for both halves of the infer_caller_details()
    code.
    
    This reduces the number of stat calls to around 0.5 million and significantly
    improves parsing with bitbake -e.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

17	8	lib/bb/data_smart.py

commit 90fdd69cca951f8bd2ff634f3b42fccd4fc03095
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2015-07-24 11:39:58 +0100

    data: Clean up datastore accesses and True/False values
    
    We should use the d.xxxVar syntax rather than the older function style.
    
    Also replace 0/1 with the more pythonic True/False.
    
    No functionality changes.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

20	20	lib/bb/data.py

commit 5117d9b5d32d5d81adf70fa3e3feac9cef654240
Author: Andre McCurdy <armccurdy@gmail.com>
Date:   2015-07-14 17:22:17 -0700

    data: Add newline after the last export in emit_func
    
    Minor formatting improvement in generated shell scripts.
    
    Add a newline after the last export emitted by emit_func. Also, remove
    chance of putting an extra newline in the middle of the exports, since
    we never want to do that.
    
    Signed-off-by: Andre McCurdy <armccurdy@gmail.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	1	lib/bb/data.py

commit e44ce85fe551677fc0dcc1da4f789a0c13093ff1
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2015-07-23 16:50:45 +0100

    tinfoil: Add shutdown method
    
    One drawback to tinfoil is that once a cooker is created, it will hold
    the cooker lock and stop any other bitbake execution against a directory.
    
    Add a shutdown method to tinfoil, allowing other users to use
    the build directory after the tinfoil usage is no longer needed.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

4	0	lib/bb/tinfoil.py

commit 5196bfa9639eed2b1e6452f45775551203f8eeb4
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2015-07-22 23:30:15 +0100

    bitbake-selftest: Add -v option for verbosity
    
    Also document BB_SKIP_NETTESTS=yes parameter in --help output.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

10	5	bin/bitbake-selftest

commit 5c4179f58a4e04f1c354df5f17d1860eb403f0ac
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2015-07-22 23:29:40 +0100

    tests/parse: Add BBCLASSEXTEND multiple data store corruption reproducer
    
    One data store changing a variable poked through into a different data
    store. This test case replicates that issue where the value 'B' would
    become unset/disappear.
    
    We also enhance parsehelper to generate files with an optional suffix
    such as bbclass.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

34	2	lib/bb/tests/parse.py

commit 32dff4749c32f32e947c42c86f8357b8b607354b
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2015-07-22 23:28:17 +0100

    data_smart: Add CoW approach for overridedata
    
    Using deepcopy() caused a major performance regression. Turns
    out we can work with a shallow copy as long as we force the
    recreation of any list that we change, effectively a poor mans
    CoW. This isn't too invasive and avoids the huge overhead of
    deepcopy so this seems like the best way to have performance and
    a working data store.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

10	1	lib/bb/data_smart.py

commit 3e39156bc330c4c726058a5b9c13d33e2daad89f
Author: Aníbal Limón <anibal.limon@linux.intel.com>
Date:   2015-07-14 19:30:59 -0500

    tests/fetch.py: Updated test name FetchMethodTest -> FetchLatestVersionTest
    
    Change the test name to be more specific on what is tested.
    
    Signed-off-by: Aníbal Limón <anibal.limon@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/tests/fetch.py

commit 8d454646cbe1b04758ca178d8c6fcfd02b818b7b
Author: Aníbal Limón <anibal.limon@linux.intel.com>
Date:   2015-07-14 19:30:58 -0500

    fetch2/wget.py: latest_versionstring now returns (version, revision)
    
    Now latest_versionstring method returns (version, revision) for comply
    the new return convention needed by SCM's like git get the current
    revision.
    
    bb/tests/fetch.py: Updated wget latest_versionstring test for comply new
    convention.
    
    [YOCTO #7605]
    
    Signed-off-by: Aníbal Limón <anibal.limon@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

6	6	lib/bb/fetch2/wget.py
2	1	lib/bb/tests/fetch.py

commit fd175dc90024c503134c11cbd83e77d88c406ac8
Author: Aníbal Limón <anibal.limon@linux.intel.com>
Date:   2015-07-14 19:30:57 -0500

    fetch2/git.py: latest_versionstring now returns (version, revision)
    
    We need to know the revision associated with the upstream version in
    SCM like git, this change broke return convention, oe-core recipeutils
    get_recipe_upstream_version need to be updated.
    
    tests/fetch.py: Updated git latest_versionstring test for comply new
    convention.
    
    [YOCTO #7605]
    
    Signed-off-by: Aníbal Limón <anibal.limon@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

12	6	lib/bb/fetch2/git.py
2	1	lib/bb/tests/fetch.py

commit 7006ab313766344cf33481228465082ed5977d28
Author: Aníbal Limón <anibal.limon@linux.intel.com>
Date:   2015-07-14 19:30:56 -0500

    fetch2/git.py: latest_versionstring search in all tags
    
    Don't limit the tag search for only tags end with ^{}.
    
    Signed-off-by: Aníbal Limón <anibal.limon@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/fetch2/git.py

commit 83e2923cd3c8f2e25987132f85b06ce72bc941d7
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2015-07-21 12:17:07 +0100

    data_smart: Use deepcopy for overridedata
    
    dbus sets RDEPENDS_dbus-ptest_class-target = "X". nativesdk as
    BBCLASSEXTEND was expanding and setting various RDEPENDS variables
    which were clearing overrides queued against RDEPENDS. The problem
    was that this was leaking into other data contexts such as the
    target case. This was because overridedata was a shallow copy.
    
    Replacing the shallow copy with a deep copy avoids this problem of
    leakage between the data stores at a small performance penalty.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/data_smart.py

commit 61307693a25a4a2eeeab5c450df330229638ddad
Author: Belen Barros Pena <belen.barros.pena@intel.com>
Date:   2015-07-21 11:57:36 +0100

    toastergui: make our tables Chrome-happy
    
    Make sure that Toaster tables adapt nicely to the
    viewport width in Chrome without squashing the
    buttons in the right column (when they are there).
    
    Signed-off-by: Belen Barros Pena <belen.barros.pena@intel.com>
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/toaster/toastergui/static/css/default.css

commit 2961bf2612fce111a7be6cef285595a075200780
Author: Brian Avery <brian.avery@intel.com>
Date:   2015-07-20 17:23:20 +0100

    toaster: continue processing layer dependencies despite errors
    
    Sometimes, a layer dependency will not exist,
      or not exist for a particualr branch. In this case
      we need to continue processing and hope for the best.
    
    [YOCTO #7955]
    
    Signed-off-by: Brian Avery <brian.avery@intel.com>
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	2	lib/toaster/orm/models.py

commit e561b997c55e8537d82aa1339adfff4505cc38b7
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2015-07-13 16:05:12 +0100

    lib/bb: provide mechanism to bypass UI log suppression
    
    The recent change to connect through the shell logging functions had an
    unexpected side-effect - bb.error() and bb.fatal() cause a flag to be
    set internally such that BitBake's UI will not print the full task log
    on failure; unfortunately we have in places within the OpenEmbedded
    metadata called these shell logging functions under error situations
    where we still want to see the full log (i.e., the message we're sending
    doesn't include the full error). Thus, provide a mechanism to fatally
    exit with an error but unset the flag, utilising the built-in python
    logging functionality that allows extra values to be passed in the log
    record.
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

4	4	lib/bb/__init__.py
6	1	lib/bb/build.py

commit 3e2db8d7eaa0f14813213d1c95d3ee9efd97dc9d
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2015-07-14 09:48:19 +0100

    lib/bb/process: check output of select() before reading extrafiles
    
    We're calling select() to find the fds that have data available, so we
    really ought to check the return to see if the extra file is in there
    before trying to read from it. This is part of the fix for the
    performance regression that this code introduced (5-10 minutes extra in
    a reasonable size OE build); the rest is down to an issue in the way
    that pseudo currently handles FIFOs and will need to be addressed there,
    see: https://bugzilla.yoctoproject.org/show_bug.cgi?id=7993
    
    Solution suggested by Richard Purdie <richard.purdie@linuxfoundation.org>
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

11	10	lib/bb/process.py

commit 5c5f8da509f6bbc1fad263462142519ef3d54a35
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2015-05-28 17:13:18 +0000

    tests/data: Add new data tests
    
    Add a variety of tests which were found to be useful when working
    on the data store recently.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

47	0	lib/bb/tests/data.py
46	0	lib/bb/tests/parse.py

commit 40d661aaf7a563c6447b073310c5f2fdae6ca3d0
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2015-06-11 23:11:05 +0100

    data_smart: Fix appendVar/prependVar
    
    Now that overrides get expanded 'on the fly', change appendVar
    and prependVar to work using _append and _prepend, else we'd have
    to re-implement pieces of getVar and the timing of expansions
    becomes problematic.
    
    Using _append/_prepend equivalence gives the behaviour users likley
    expect from these functions.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	4	lib/bb/data_smart.py

commit a97ce216cfe44136f742383542954bfce027831e
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2015-06-07 07:05:58 +0000

    data_smart: Fix data expansion cache issues
    
    The expand cache can be cleared in the middle of getVar now
    due to the use of operations like delVar. We therefore need
    to check if variables are in the cache before accessing in
    case it was cleared.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/data_smart.py

commit 77fc57c610d7f65f7e328ad555f525b2f8bdf1d7
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2015-05-29 10:29:28 +0000

    data_smart: Fix keys() missing overrides
    
    d.keys() was not returning items which had no base content but the
    variable came into existance through overrides. We have to process
    self.overridedata to find these other variables.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

15	0	lib/bb/data_smart.py

commit db9a4eedcf78969ec50bf0e4a8defba8ff0daa4a
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2015-05-29 10:33:04 +0000

    data_smart: Cache set(self.overrides)
    
    This performs better than continually regeneratiing the set().
    
    Also only use set comparisions when its necessary to save some overhead
    as issubset() is slower in the single item case.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

9	5	lib/bb/data_smart.py

commit 07d773369f571028c2cf82dd1f65d9731af6d00e
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2015-05-29 10:30:36 +0000

    data_smart: Improve override recursion handling
    
    When expanding OVERRIDES, its possible someone might try and override a variable
    that is used in OVERRIDES. This could lead to infinite recursion. Add in
    guards against this.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

6	0	lib/bb/data_smart.py

commit 41cf8d0c92d2d8a33fdad0921e424a0024914be1
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2015-05-26 08:27:15 +0000

    data_smart: Tweak OVERRIDES value cache for performance
    
    Updating the value of OVERRIDES whenever it changes turns out to be
    extremely expensve/pointless. Instead, clear its value and re-establish
    the value when we're going to use it.
    
    This gives significant speed back.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

12	4	lib/bb/data_smart.py

commit 1a39ccf66b30b54e1274669cb0e1dc8fc72dba49
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2015-05-23 21:39:09 +0000

    data_smart: Seperate out the override cache
    
    Using an internal flag for override mapping turns out to be slower
    than is optimal, not least as we don't want the keys list to list
    variables that have no value other than a potential override expansion.
    
    Maintinaing a seperate cache is therefore more optimal from a speed
    perspective.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

41	14	lib/bb/data_smart.py

commit dddff5b7b8e6c18515b43389cef35503468b843d
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2015-05-22 14:34:51 +0000

    data_smart: VariableHistory: Ignore override duplicates and overlap with CoW functions
    
    Trying to look up a variable called 'copy' in COW is problematic due
    to internal implmentation details, at least avoid tracebacks from this.
    
    Also don't duplicate override history (which is an atrefact of changed
    override behaviour) as otherwise the bitbake -e output is convoluted.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

5	0	lib/bb/data_smart.py

commit ae87f5b8bf16191b3201cfb445062938eab992a0
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2015-05-22 10:30:57 +0000

    parse/ast/data_smart: Add parsing flag to getVar/setVar
    
    When parsing we find problems if we clear prepends/appends when
    setting variables during the initial parsing phases. Later, we actively
    want to do this (in what would be post finalisation previously).
    
    To handle this, pass a parsing flag to the operations to control
    the correct behaviour for the context.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

21	15	lib/bb/data_smart.py
7	7	lib/bb/parse/ast.py

commit 2a0b73110bede91777ada54d1d89b45fb6034b6c
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2015-01-25 21:37:05 +0000

    data_smart: Move override handling to getVar
    
    Compeltely remove the replaces functionality and move all overrides
    handling to getVar time. We can move the cookie cache into a hidden
    flag within the variables themselves.
    
    This removes the need for any of the internal_finalize steps.
    
    This obsolete the need for the _seen_overrides COW cache.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

61	70	lib/bb/data_smart.py

commit f3b7c3e054ce230ea5c2db5813390383e8dfd6db
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2015-01-24 15:27:08 +0000

    data_smart: Cache overrides and fix data store
    
    Rather than repeatedly expanding the value of OVERRIDES, cache
    the value and update it when things change.
    
    There were also some bugs introduced in the replaces functionality
    which this approach fixes by ensuring the replaces data is updated
    at the correct points.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

27	8	lib/bb/data_smart.py

commit a075332c9e13be35f1ae84adc6b29e9137a487ff
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2015-05-21 10:41:27 +0000

    data_smart: Fix cache clearance problems
    
    These write operations should clear the expand cache since they can
    influence returned variable values but currently do not. Fix this.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

4	0	lib/bb/data_smart.py

commit a6f1377ce3386d274882072d1ae6da3b1834149b
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2015-01-23 23:36:29 +0000

    data_smart: Improve override handling
    
    Rather than the heavy lifting in internal_finalize, move the bulk of
    the functionality to getVar and rely on a new internal replaces variable
    to keep track of any mappings that are needed. This removes the need
    for the COW _special_values cache.
    
    This change in functionality also implies we need to track any changes
    not only to OVERRIDES but also any variable which OVERIDES depends upon.
    Add code to handle this.
    
    Explicitly list FILE as a value OVERRIDES depends upon since it doesn't
    automatically get detected and is of key importance to OVERRIDES,
    otherwise PN doesn't update when FILE changes.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

60	96	lib/bb/data_smart.py

commit 546d9932d6c4413824319a9d780c0d77d2725f4a
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2015-01-23 18:01:00 +0000

    data_smart: Remove need for update_data calls
    
    Move the update_data functionality into internal data store operations
    so the main finalize (update_data) call is a nop.
    
    To make this work we need to call the internal finalization function
    whenever OVERRIDES is changed to ensure values get updated correctly.
    
    This has performance issues but the subsequant patches look into this.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

15	4	lib/bb/data_smart.py

commit b1ce9975ef96f2506042832f4518cde73f6be917
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2015-01-23 17:33:51 +0000

    data_smart: Defer append/prepend handling
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

22	5	lib/bb/data_smart.py

commit e177170200ece76b36e3f7d5597651fdef67736f
Author: Aníbal Limón <anibal.limon@linux.intel.com>
Date:   2015-07-08 18:34:21 -0500

    fetch2/wget.py: checkstatus disable SSL cert validation.
    
    Since Python 2.7.9 ssl cert validation is enabled by default
    see PEP-0476, this causes verification errors on some https
    servers so disable by default.
    
    Signed-off-by: Aníbal Limón <anibal.limon@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

18	2	lib/bb/fetch2/wget.py

commit 36f2577d075f87090766877473f9030e44a941a2
Author: Aníbal Limón <limon.anibal@gmail.com>
Date:   2015-07-08 18:34:20 -0500

    tests/fetch.py: FetchCheckStatusTest add cases for ftp and https.
    
    Signed-off-by: Aníbal Limón <anibal.limon@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

7	1	lib/bb/tests/fetch.py

commit 0f062c5d99e12ce20c0e46a8e602448032144ff6
Author: Aníbal Limón <limon.anibal@gmail.com>
Date:   2015-07-08 18:34:19 -0500

    fetch2/wget.py: checkstatus fix using proxy handler
    
    Only use ProxyHandler opener when exists proxies in env.
    
    Signed-off-by: Aníbal Limón <anibal.limon@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

16	4	lib/bb/fetch2/wget.py

commit b1f2d3edefb7dd274174eb983666213b0f49c994
Author: Aníbal Limón <anibal.limon@linux.intel.com>
Date:   2015-07-08 18:34:18 -0500

    tests/fetch.py: Add FetchCheckStatusTest tests.
    
    Add tests for checkstatus method using http with/without
    connection cache.
    
    [YOCTO #7796]
    
    Signed-off-by: Aníbal Limón <anibal.limon@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

39	0	lib/bb/tests/fetch.py

commit 9fa6407e6cefe66c77467419a8040d6957a6bb01
Author: Aníbal Limón <anibal.limon@linux.intel.com>
Date:   2015-07-08 18:34:17 -0500

    fetch2/wget.py: Add support of connection cache in checkstatus.
    
    fetch2/__init__.py: Add connection_cache param in Fetch __init__.
    
    In order to pass connection cache object to checkstatus method.
    
    [YOCTO #7796]
    
    Signed-off-by: Aníbal Limón <anibal.limon@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	1	lib/bb/fetch2/__init__.py
136	4	lib/bb/fetch2/wget.py

commit 31305853a177735cc9c4553ea8905cd0acfcb100
Author: Olof Johansson <olof.johansson@axis.com>
Date:   2015-07-09 12:04:07 +0200

    fetch2/sftp: Set BatchMode=yes as argument to sftp
    
    Set BatchMode=yes instead of PasswordAuthentication=no. This will make
    sftp fail immediately, not only when SSH requires interactive
    authentication, but also on errors related to host key verifcation.
    
    Signed-off-by: Olof Johansson <olof.johansson@axis.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/fetch2/sftp.py

commit 1ba20e4fe9c884515b200589fe379ad5eeda10bd
Author: Robert Yang <liezhi.yang@windriver.com>
Date:   2015-07-09 00:18:01 -0700

    git.py: create a branch when checkout
    
    * Create a branch and named as upstream branch when checkout source
    * Set the branch to track remote branch.
    
    Signed-off-by: Robert Yang <liezhi.yang@windriver.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

7	0	lib/bb/fetch2/git.py

commit 2ca36a9f088438a8d1db44119c704f9480b04298
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2015-07-10 14:05:06 +0100

    cooker/taskdata: Make NoProvider errors non-fatal to -e/-g options
    
    If you have a situation where you are getting a "Nothing PROVIDES" error
    (for example when something you request to build DEPENDS on something
    that has been skipped or doesn't exist) it would be useful to be able to
    use bitbake -g or bitbake -e to debug it, but currently both of those
    are blocked by the error.
    
    This patch adds an "allowincomplete" option to taskdata and uses this
    for the -e/-g bitbake options. The NoProvider errors are still
    printed and bitbake does return an error exist code but the environment
    and task graph files are generated.
    
    [YOCTO #7623]
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

4	4	lib/bb/cooker.py
5	3	lib/bb/taskdata.py

commit 21dce82056887d8d28edde61b1b82f78bdf7613c
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2015-07-10 14:13:43 +0100

    prserv/db: Document history modes
    
    I keep having to dig into the archives to remember this information.
    Add it as a comment to the file instead.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

10	0	lib/prserv/db.py

commit bae330a1f8a59a912eca71177b3c6ba7c92a2f38
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2015-07-10 14:51:40 +0100

    lib/bb: set up infrastructure for shell message functions
    
    Create a fifo under ${T} for each running task that can be used by the
    task to send events back to BitBake. The purpose of this is to allow
    OpenEmbedded's logging.bbclass (which provides shell function
    equivalents for bb.warn(), bb.note() etc.) to have those functions
    trigger the appropriate events within BitBake so that messages are shown
    through the BitBake UI rather than just in the task log; to do that we
    just call the python functions.
    
    Part of the fix for [YOCTO #5275].
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

43	7	lib/bb/build.py
22	3	lib/bb/process.py

commit fbb9c6f5538084e125b58118a86968908e6f895b
Author: Aníbal Limón <anibal.limon@linux.intel.com>
Date:   2015-06-30 09:39:11 -0500

    fetch2: Add fetch parameter to checkstatus
    
    In order to pass connection cache object to checkstatus function
    add fetch parameter.
    
    Signed-off-by: Aníbal Limón <anibal.limon@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

10	10	lib/bb/fetch2/__init__.py
1	1	lib/bb/fetch2/git.py
1	1	lib/bb/fetch2/local.py
1	1	lib/bb/fetch2/wget.py

commit 454da2cd17539ceb9caad6d76f034757e44ee12f
Author: Aníbal Limón <anibal.limon@linux.intel.com>
Date:   2015-06-30 09:39:10 -0500

    fetch2/__init__.py: Add FetchConnectionCache class
    
    FetchConnectionCache class acts as a container for socket connections
    useful when implement connection cache into fetcher modules.
    
    Signed-off-by: Aníbal Limón <anibal.limon@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

36	0	lib/bb/fetch2/__init__.py

commit 69ecd15aece54753154950c55d7af42f85ad8606
Author: Leonardo Sandoval <leonardo.sandoval.gonzalez@linux.intel.com>
Date:   2015-07-07 09:46:01 +0000

    knotty.py: Make sure bitbake.lock is unlocked before exiting
    
    Before exiting the UI, unlocks the bitbake.lock owned by cooker; this
    way consecutive bitbake executions can lock it again without trouble.
    
    [Yocto #7941]
    
    Signed-off-by: Leonardo Sandoval <leonardo.sandoval.gonzalez@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

20	0	lib/bb/ui/knotty.py

commit e97a9f1528d77503b5c93e48e3de9933fbb9f3cd
Author: Leonardo Sandoval <leonardo.sandoval.gonzalez@linux.intel.com>
Date:   2015-07-07 09:46:00 +0000

    command.py: Unlock function included into CommandsSync class
    
    Function which calls cooker's unlock method, which in turn unlocks bitbake.lock
    file.
    
    Signed-off-by: Leonardo Sandoval <leonardo.sandoval.gonzalez@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

6	0	lib/bb/command.py

commit d66dccf9f9a33bfef5c28cc1c767bfc89faee532
Author: Leonardo Sandoval <leonardo.sandoval.gonzalez@linux.intel.com>
Date:   2015-07-07 09:45:59 +0000

    cooker.py: Lock/Unlock members function into BBCooker
    
    Signed-off-by: Leonardo Sandoval <leonardo.sandoval.gonzalez@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

14	3	lib/bb/cooker.py

commit f883cf240266ee7be2cbd8971a8164cf4df9e372
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2015-07-07 16:28:11 +0100

    cooker: Improve DATE/TIME handling
    
    Currently, once set, DATE and TIME in the metadata remain unchanged.
    This is suboptimal for cases where cooker is reused. This ties setting
    the variables into the BuildStarted event which seems like a more
    appropriate time to do so.
    
    It also changes BUILDNAME to be based off DATE/TIME by default if not
    already set so that the data is more consistent. We therefore need to
    expand the value rather than the previous default of not doing so.
    
    This change does mean the date/time values are in sync across all
    variables too.
    
    It does mean bitbake now has special knowledge of DATE/TIME but that
    would seen unavoidable (other than doing this in event handlers which
    has its own set of downsides).
    
    [YOCTO #5187]
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

6	3	lib/bb/cooker.py

commit 7f4c07886ecff4ac77fdd2165bedd179099fcf19
Author: Ross Burton <ross.burton@intel.com>
Date:   2015-07-07 15:44:33 +0100

    main: add skeleton documentation for the recipe:do_task syntax
    
    The incredibly useful recipe:do_task syntax on the command line isn't documented
    at all.  This isn't much but it's better than nothing.
    
    Signed-off-by: Ross Burton <ross.burton@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/main.py

commit f7b0b5e33e00f3ce0744322eee93835ee76bf184
Author: Felipe F. Tonello <eu@felipetonello.com>
Date:   2015-07-06 17:05:43 +0100

    fetch2: Checkout to correct ref begore init and update submodules
    
    This is nessary when specified branch with submodules is different then
    default (master) branch.
    
    [YOCTO #7771]
    
    Signed-off-by: Felipe F. Tonello <eu@felipetonello.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	0	lib/bb/fetch2/gitsm.py

commit 915ba08a8a3013e9787e564f2ffd8698c948f433
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2015-07-02 15:38:33 +0100

    toaster: Fix build execution regression
    
    Make sure the error value is initialised and update the string match
    that we have to identify bitbake's current startup status.
    
    Patch contribution from Eduard Bartosh
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	0	lib/bb/ui/toasterui.py
1	1	lib/toaster/bldcontrol/localhostbecontroller.py

commit 4338ab03826df3353e1222f0bd825dfdd04dd933
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2015-06-29 17:43:08 +0100

    toaster: runbuilds Fix incorrect variable name
    
    The recent refactoring moved this enum value to BuildRequests table
    rather than Build.
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/toaster/bldcontrol/management/commands/runbuilds.py

commit 3500b59cbfd006a83bab9431f434f98c1944a0ac
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2015-06-29 16:15:20 +0100

    toaster: Remove erroneously committed template include
    
    Partial revert of bb commit 6e46e1e3882b9770872d8a0bb459bc7d5d6bfed3
    
    The non managed mrb_section defined the title 'All builds' which is already
    defined correctly for the projects page as 'All projects'
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

0	3	lib/toaster/toastergui/templates/projects.html

commit 40c8829369628927944c8a950524d482a663913e
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2015-06-29 16:09:52 +0100

    toaster: Revert the addition of analysis project mode selection
    
    Partial revert of bb commit 2efc338cefd6e6e097af83d7dff63e9ba177d021
    
    This feature was not ready to go live as the surrounding implementation
    work to make this usable has not yet been done.
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

8	7	lib/toaster/toastergui/templates/newproject.html

commit 124157b567469639c6c839233f42049a093ba083
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2015-06-29 16:01:37 +0100

    toaster: Partial Revert "fixes after html5 compliance testing"
    
    Partial revert of bb commit 7aecb974d44d9bc711ffba5cc65e770811397fba
    
    There were changes in this commit which broke the compatible layers
    mechanism meaning that no layers, recipes or machines were showing.
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	3	lib/toaster/orm/models.py

commit 344b098c7eafc2bcc5c6b44ea47985bc0cb446b5
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2015-06-26 17:26:35 +0100

    codeparser: Add repr() methods
    
    These aid when debugging parts of the codeparser cache since the
    object contents becomes identifiable.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

5	0	lib/bb/codeparser.py

commit e4f594c670189e04d58ce7d160fc1d86123620af
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2015-06-26 17:23:37 +0100

    codeparser: Allow empty functions
    
    The main parser and other code copes with empty python functions but
    the python codeparser does not. Fix this to avoid errors with code like:
    
    python do_build () {
    }
    
    which currently results in the obtuse:
    "Failure expanding variable do_build: IndexError: string index out of range"
    
    [YOCTO #7829]
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	0	lib/bb/codeparser.py

commit 378647281ae883dd726f1e1b775dd35ef6a0e8d1
Author: Robert Yang <liezhi.yang@windriver.com>
Date:   2015-06-01 22:49:11 -0700

    bitbake: fetch2/hg.py: fix unpack error and mirror tarball
    
    Fixed:
    * do_unpack error:
      abort: repository DL_DIR/hg/vim.googlecode.com/hg/vim not found!
    
    * The mirror tarball doesn't work
      - Add the build_mirror_data to create the tarball
      - Unpack the mirror tarball when needed
    
    * The hg files will put in the dir like git: DL_DIR/hg, it was
      DL_DIR/hg/path/to/src/uri/path in the past.
    
    Signed-off-by: Robert Yang <liezhi.yang@windriver.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

66	13	lib/bb/fetch2/hg.py

commit 39da6579901c62a83ed9319c2016c58fbbc108fe
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2015-06-26 17:34:16 +0100

    fetch/perforce: Fix single file checkouts
    
    Fetching directories with p4 worked but single files did not. This
    patch from Helmut Auer (helmut.auer@harman.com) fixes that issue.
    
    [YOCTO #7891]
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/fetch2/perforce.py

commit b45952650ce8f470f124df36185b79e0d3a1783a
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2015-06-25 22:52:17 +0100

    event: Handle recursive events and the data store better
    
    Events can call each other recursively, e.g. an event handler can call
    bb.note which in turn generates another event. If these loop, it
    can lead to multiple deletions of 'd' from __builtins__ which
    can fail since __builtins__ is global scope.
    
    Add handling to only remove 'd' when we added it and it wasn't already
    present.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

6	2	lib/bb/event.py

commit e42d7c47a06fbb5981e0313478c8e3656b99f4e7
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2015-06-25 17:53:23 +0100

    cooker: Fire BuildCompleted before finishing the command
    
    Some handlers hook on BuildComplete so it avoids certain event races
    to finish the command after the BuildComplete event is sent out.
    
    This means the UI is available to handle events until the command
    completes.
    
    What appears to be a race on one of the sanity tests for event handlers
    triggered this change although the failure is hard to reproduce.
    
    [YOCTO #7921]
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	2	lib/bb/cooker.py

commit 0a8e740e18333da981b24a76db4c891845e5df78
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2015-06-19 16:10:09 +0100

    toaster: Add url pattern for backward compatibility
    
    This adds an url to match the old orm application.
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>

4	0	lib/toaster/toastermain/urls.py

commit 8ca10764ffd6cfec12cbfeabf240d81213a07845
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2015-06-16 16:00:26 +0100

    toaster: split orm app into it's own module and app
    
    The orm application was also the django application to collect the build
    information. Splitting this module up into it's functional parts. orm
    for the data module and bldcollector for build collection data.
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>

0	0	lib/toaster/bldcollector/__init__.py
1	2	lib/toaster/{orm => bldcollector}/admin.py
1	2	lib/toaster/{orm => bldcollector}/urls.py
0	0	lib/toaster/{orm => bldcollector}/views.py
1	1	lib/toaster/toastermain/settings.py

commit 2f74ff59f2873c1cf121f7a385f3ab971c793a9c
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2015-06-19 11:24:21 +0100

    toaster: bldcontrol Ignore toasterconf files in own directories
    
    If toaster has previously cloned poky or a layer with a toasterconf
    file we don't want this to be picked up as a choice as these clones are
    "internal" to toaster and may have undesired effects on toaster's setup.
    
    [YOCTO #7741]
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>

2	0	lib/toaster/bldcontrol/management/commands/checksettings.py

commit 04a3e4614aae8ba794a3b8ac9083e723de7ca522
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2015-06-18 14:16:07 +0100

    toaster: Restore 'in project' filters to main tables
    
    Restores the previously removed filters from recipes, machines and layers
    table. These filters allow filtering down the results to just displaying
    the current added layers, machines or recipes in the project.
    
    [YOCTO #7851]
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>

73	2	lib/toaster/toastergui/tables.py

commit a73f08c79077b6ded0c08ea7d36032f4568d12e3
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2015-06-18 14:18:12 +0100

    toaster: table.js fix filter visual indicator and interaction
    
    - Fix the id of the filter modal dialog.
    - Fix the visual indicator toggle button
    - Add check to see if the number of items to filter on is !=0 if it is
      then don't allow applying this filter.
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>

44	15	lib/toaster/toastergui/static/js/table.js

commit e0d59c32a7cff76d732a90cc6d507c7a9b68cb84
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2015-06-18 14:14:01 +0100

    toaster: toastertable Pass up the kwargs for setup_filter
    
    This allows us to setup_filter in tables using args such as the current
    project.
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>

6	6	lib/toaster/toastergui/widgets.py

commit 330692e4e2e4dea59f70caa03001905ffff4860a
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2015-06-18 14:11:28 +0100

    toaster: Enable toastertable cache
    
    Enable the cache and fix warning on the toastertable cache which happens
    on the memcache backend "CacheKeyWarning: Cache key contains characters that
    will cause errors if used with memcached"
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>

5	2	lib/toaster/toastergui/widgets.py

commit 7aecb974d44d9bc711ffba5cc65e770811397fba
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2015-06-24 14:53:21 +0100

    toasterui: fixes after html5 compliance testing
    
    This patch brings fixes for issues highlighted by
    HTML5 compliance testing.
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>

3	1	lib/toaster/orm/models.py
1	1	lib/toaster/toastergui/static/js/base.js
1	1	lib/toaster/toastergui/templates/configvars.html
1	1	lib/toaster/toastergui/templates/detail_search_header.html
1	1	lib/toaster/toastergui/templates/detail_sorted_header.html
2	0	lib/toaster/toastergui/templates/generic-toastertable-page.html
13	2	lib/toaster/toastergui/templates/importlayer.html
1	1	lib/toaster/toastergui/templates/target.html
2	2	lib/toaster/toastergui/templates/toastertable-simple.html
2	2	lib/toaster/toastergui/templates/toastertable.html
6	5	lib/toaster/toastergui/views.py

commit e04807cd3135c9de96cc7f79245f329c24618b85
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2015-06-24 14:53:21 +0100

    toasterui: verify variable before usage
    
    This patch verifies that BRBE is set before trying to use
    it to read the checkout paths. This is needed for builds
    ran outside Toaster control.
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>

5	4	lib/bb/ui/buildinfohelper.py

commit d5468d84c1ef83c780de5974c8e3a11eab762489
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2015-06-23 10:44:42 +0100

    toaster: delete multiple builds
    
    This patch fixes the build deletion on unmigrated databases,
    and enhances it to delete multiple builds in a single run.
    
    [YOCTO #7726]
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>

2	2	lib/toaster/toastergui/views.py
36	20	lib/toaster/toastermain/management/commands/builddelete.py

commit 2efc338cefd6e6e097af83d7dff63e9ba177d021
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2015-06-22 14:48:53 +0100

    toastergui: select project types
    
    This brings in project types in the New Project page.
    
    The "analisys" projects are the projects with no "release"
    set, and have read-only properties in the project page.
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>

7	1	lib/toaster/orm/models.py
64	35	lib/toaster/toastergui/templates/newproject.html
9	2	lib/toaster/toastergui/views.py

commit 44f37394ed3e4ca02f940be172fe4395b0ee0f7d
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2015-06-17 17:30:34 +0100

    toaster: refactor build model
    
    We remove the "timespent", "errors_no" and "warnings_no" fields
    in favor of computing the needed values at runtime. This prevents
    inconsistencies in the UI.
    
    Also removeing all references to BuildRequests from the interface -
    all build details now display in the build dashboard.
    
    Minor fixes related to data logging.
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>

47	23	lib/bb/ui/buildinfohelper.py
3	0	lib/bb/ui/toasterui.py
1	1	lib/toaster/bldcontrol/localhostbecontroller.py
7	3	lib/toaster/bldcontrol/management/commands/runbuilds.py
353	0	lib/toaster/orm/migrations/0023_auto__del_field_build_warnings_no__del_field_build_errors_no__del_fiel.py
13	6	lib/toaster/orm/models.py
12	11	lib/toaster/toastergui/templates/builddashboard.html
13	9	lib/toaster/toastergui/templates/builds.html
0	6	lib/toaster/toastergui/templates/configuration.html
2	0	lib/toaster/toastergui/templates/filtersnippet.html
2	35	lib/toaster/toastergui/templates/landing.html
23	6	lib/toaster/toastergui/templates/mrb_section.html
0	7	lib/toaster/toastergui/templates/package_detail_base.html
12	17	lib/toaster/toastergui/templates/projectbuilds.html
6	3	lib/toaster/toastergui/templates/projects.html
1	8	lib/toaster/toastergui/templates/recipe.html
1	6	lib/toaster/toastergui/templates/recipes.html
0	7	lib/toaster/toastergui/templates/runagain.html
0	5	lib/toaster/toastergui/templates/target.html
1	35	lib/toaster/toastergui/templates/task.html
1	6	lib/toaster/toastergui/templates/tasks.html
0	3	lib/toaster/toastergui/urls.py
5	12	lib/toaster/toastergui/views.py

commit 4b92add34167304b45c66b9726cbc64bc0f74d9f
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2015-06-17 13:31:06 +0100

    toaster: bring django-aggregate-if into the project
    
    We bring the django-aggregate-if module (with minor changes to import)
    into the project.
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>

1	1	lib/toaster/contrib/django-aggregate-if-master/aggregate_if.py
9	0	lib/toaster/toastermain/settings.py

commit 016b416fd0eaeab648a588053a2ee1f41bc02a84
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2015-06-17 13:03:04 +0100

    toaster: add django-aggregate-if
    
    Import library that provides conditional aggregates
    in Django. The tests are removed as they conflict
    with the Django startup.
    
    The sources are
    https://github.com/henriquebastos/django-aggregate-if
    
    Licence is MIT
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>

10	0	lib/toaster/contrib/django-aggregate-if-master/.gitignore
50	0	lib/toaster/contrib/django-aggregate-if-master/.travis.yml
21	0	lib/toaster/contrib/django-aggregate-if-master/LICENSE
156	0	lib/toaster/contrib/django-aggregate-if-master/README.rst
164	0	lib/toaster/contrib/django-aggregate-if-master/aggregate_if.py
48	0	lib/toaster/contrib/django-aggregate-if-master/runtests.py
33	0	lib/toaster/contrib/django-aggregate-if-master/setup.py
198	0	lib/toaster/contrib/django-aggregate-if-master/tox.ini

commit 57f790b0c56297af8c83d5def8461bd5d61fe4af
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2015-06-17 12:27:48 +0100

    toaster: fixes after replacing BuildRequest with Build
    
    This is a set of fixes that repair the interface after
    we switched from displaying BuildRequest data to Build data
    in the formerly "managed" mode.
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>

10	14	lib/bb/ui/toasterui.py
1	1	lib/toaster/bldcontrol/localhostbecontroller.py
4	3	lib/toaster/bldcontrol/management/commands/runbuilds.py
3	0	lib/toaster/bldcontrol/models.py
3	2	lib/toaster/orm/migrations/0021_auto__chg_field_build_project__chg_field_project_bitbake_version__chg_.py
343	0	lib/toaster/orm/migrations/0022_auto__add_field_target_task__add_field_layer_version_local_path__del_f.py
6	2	lib/toaster/orm/models.py
2	2	lib/toaster/toastergui/static/js/projectapp.js
2	2	lib/toaster/toastergui/templates/project.html
4	2	lib/toaster/toastergui/views.py

commit 51a41172d0b390370f9a38696b1ac65666ada4d2
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2015-06-11 18:27:53 +0100

    toaster: fill in build data from buildrequest
    
    This patch adds logic to complete changing the interface
    from showing BuildRequests to showing Build data.
    
    The BuildRequest data is now transformed in Build data with
    proper Toaster exceptions being recorded instead of listing
    problems during startup as build errors.
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>

15	1	lib/bb/ui/buildinfohelper.py
31	1	lib/toaster/bldcontrol/management/commands/runbuilds.py
25	3	lib/toaster/orm/models.py
11	4	lib/toaster/toastergui/templates/project.html
2	2	lib/toaster/toastergui/views.py

commit 6e46e1e3882b9770872d8a0bb459bc7d5d6bfed3
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2015-06-11 15:00:08 +0100

    toaster: refactor the builds pages
    
    Taking out the managed mode-specific bits in build-related
    pages, as there is always only one mode available.
    
    Also refactors the build pages in order to always display
    Build objects instead of BuildRequest objects.
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>

9	5	lib/toaster/toastergui/static/js/projectapp.js
4	3	lib/toaster/toastergui/templates/{build.html => builds.html}
0	167	lib/toaster/toastergui/templates/managed_builds.html
0	193	lib/toaster/toastergui/templates/managed_mrb_section.html
36	5	lib/toaster/toastergui/templates/mrb_section.html
8	32	lib/toaster/toastergui/templates/project.html
0	1	lib/toaster/toastergui/templates/projectbuilds.html
14	8	lib/toaster/toastergui/templates/projects.html
1	1	lib/toaster/toastergui/urls.py
103	334	lib/toaster/toastergui/views.py

commit ead45a600813a1d8594e604875803ded781f83d8
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2015-06-09 17:25:42 +0100

    toaster: remove BuildRequest references
    
    In the toastergui application we should not display
    implementation details about how the builds are run.
    This patch removes the references to BuildRequest on the
    majority of the views (except Builds page itself, as
    that is more complicated).
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>

1	0	lib/toaster/toastergui/templates/basebuildpage.html
2	2	lib/toaster/toastergui/templates/configvars.html
27	39	lib/toaster/toastergui/views.py

commit 0ac02d3775106b485e29496b62f31e91fd3f9387
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2015-06-09 16:03:36 +0100

    toaster: remove MANAGED references
    
    We conflate the managed and analysis modes by
    deleting alternative code paths, favouring the MANAGED mode,
    always considering the MANAGED variable True.
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>

1	3	lib/toaster/orm/models.py
1	8	lib/toaster/toastergui/templates/base.html
1	3	lib/toaster/toastergui/templates/basebuilddetailpage.html
2	4	lib/toaster/toastergui/templates/basebuildpage.html
0	2	lib/toaster/toastergui/templates/basetable_top_buildprojects.html
0	2	lib/toaster/toastergui/templates/basetable_top_projectbuilds.html
0	3	lib/toaster/toastergui/templates/bpackage.html
0	8	lib/toaster/toastergui/templates/build.html
0	16	lib/toaster/toastergui/templates/builddashboard.html
3	100	lib/toaster/toastergui/views.py

commit a9e889af41e1e59c3b426c78ba80e4d49c6c122b
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2015-06-11 13:14:39 +0100

    toaster: fixing undefined variables
    
    This patchset fixes usage of undefined variables in
    the base page.
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>

7	4	lib/toaster/toastergui/templates/base.html
8	3	lib/toaster/toastergui/templates/basetable_top.html
1	1	lib/toaster/toastergui/templates/filtersnippet.html

commit 3928dc93188880386588fe3f440cd0aaa83d22de
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2015-06-22 14:54:08 +0100

    toastergui: enable strict variable checking
    
    In order to make sure we don't use undefined variables in the
    templates, we enforce strict variable checking in the templating
    engine.
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>

7	0	lib/toaster/toastermain/settings.py

commit 7ee0f1da0a8fcac37419ffdddbe35a9268a1ded4
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2015-06-02 12:57:03 +0100

    toaster: improve the buildenvironment API
    
    We improve the buildenvironment API by reducing it to a single
    command: triggerBuild.
    
    This command is specifically implemented in each BE controller
    type, so the runbuilds management command is only concerned
    with scheduling the next build, and not with the details
    of how a build is actually started.
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>

3	0	lib/toaster/bldcontrol/bbcontroller.py
22	0	lib/toaster/bldcontrol/localhostbecontroller.py
7	23	lib/toaster/bldcontrol/management/commands/runbuilds.py
21	0	lib/toaster/bldcontrol/sshbecontroller.py

commit 77d3f7c6cdc7f06807024896369f8f8ae94263fc
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2015-05-28 14:11:55 +0100

    toastergui: fix angular error
    
    Due to invalid identification of builds in the array update
    code (by id and status), we could end up with multiple entries
    sharing the same primary id, visible in the UI as an angular error.
    
    We modify the code to identify the builds exclusively by id.
    
    [YOCTO #7611]
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>

1	1	lib/toaster/toastergui/static/js/projectapp.js

commit 32166ac3c85ff3c04081580ae76bd63590d6ff3e
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2015-06-19 12:27:46 +0100

    runqueue: Sanity check BB_NUMBER_THREADS
    
    Bitbake does really weird things with negative or zero numbers of threads
    which is confusing to the user. Add a sanity check for this.
    
    When you have code doing arithmetic on the values and a VM reconfigures
    to only a single thread, negative numbers are easier than you'd think.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	0	lib/bb/runqueue.py

commit 29d28e22ce431c3d3aabdb88ff4d8cca67a1cfad
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2015-06-19 12:26:54 +0100

    runqueue: Handle BBHandledException correctly
    
    If we see a BBHandledException in runqueue, the understanding is the system
    handled it, printing a log and traceback is just confusing.
    
    Therefore only print these in the cases where its an unknown/unhandled
    exception.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

7	0	lib/bb/runqueue.py

commit d88ecc2bc44dce8fd92ca3a2c0fd4124a5e464fa
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2015-06-19 12:26:25 +0100

    server/process: Don't log BBHandledException
    
    If we see a BBHandledException in the idle handler, the understanding
    is the system handled it, printing a log and traceback is just confusing.
    
    Therefore only print these in the cases where its an unknown/unhandled
    exception.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	2	lib/bb/server/process.py

commit ad286d6fed7a580bec36a92c7b7e205322ac407b
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2015-06-19 12:25:45 +0100

    runqueue: Improve handling of fakeworker failing to start
    
    Currently if the fakeworker failes to start the output from bitbake is confusing.
    Improve the error handling to give a clear indication of what failed.
    
    Patch from Chris Larson.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

6	1	lib/bb/runqueue.py

commit 44ac81e5281fb62ad00e2f79a9d754118ea62526
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2015-06-19 09:27:14 +0100

    event: Inject 'd' into event handlers
    
    To quote Chris Larson:
    
    """
    e.data.getVar() gets a bit old in a large event handler, and it means a
    simple handler has to be modified if switching between an event handler
    (e.g. RecipeParsed) and anonymous python. I think it would make sense
    to restore the 'd' convention here to align with python elsewhere.
    It'd just be a convenience, d==e.data, to avoid the common pattern of
    setting it at the top of the event handler.
    """
    
    I couldn't find a way to inject 'd' via locals/globals due to the use
    of a function parameter so this left __builtins__ as the only way
    I could find to make this work.
    
    [YOCTO #7668]
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	0	lib/bb/event.py

commit 659ef95c9b8aced3c4ded81c48bcc0fbde4d429f
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2015-06-18 15:14:19 +0100

    bitbake: Add explict getVar param for (non) expansion
    
    Rather than just use d.getVar(X), use the more explict d.getVar(X, False)
    since at some point in the future, having the default of expansion would
    be nice. This is the first step towards that.
    
    This patch was mostly made using the command:
    
    sed -e 's:\(getVar([^,()]*\)\s*):\1, False):g' -i `grep -ril getVar *`
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

4	4	conf/bitbake.conf
2	2	doc/bitbake-user-manual/bitbake-user-manual-execution.xml
1	1	doc/bitbake-user-manual/bitbake-user-manual-fetching.xml
3	3	doc/bitbake-user-manual/bitbake-user-manual-metadata.xml
4	4	lib/bb/build.py
14	14	lib/bb/cooker.py
3	3	lib/bb/cookerdata.py
1	1	lib/bb/data.py
1	1	lib/bb/fetch2/__init__.py
2	2	lib/bb/fetch2/clearcase.py
1	1	lib/bb/fetch2/perforce.py
2	2	lib/bb/parse/__init__.py
11	11	lib/bb/parse/ast.py
4	4	lib/bb/parse/parse_py/BBHandler.py
2	2	lib/bb/parse/parse_py/ConfHandler.py
9	9	lib/bb/tests/data.py
3	3	lib/bb/ui/crumbs/builder.py

commit 5ecd6a671c088f270d5f49093f8da83278fc0aa9
Author: Trevor Woerner <twoerner@gmail.com>
Date:   2015-06-19 07:17:36 -0600

    bitbake-user-manual-ref-variables: Added BBLAYERS_FETCH_DIR glossary item.
    
    Add BBLAYERS_FETCH_DIR to the Variables Glossary.
    
    Signed-off-by: Scott Rifenbark <scott.m.rifenbark@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

14	0	doc/bitbake-user-manual/bitbake-user-manual-ref-variables.xml

commit 1408654e6d8f5ae962744c6cc2d8a49df34c5101
Author: Scott Rifenbark <scott.m.rifenbark@intel.com>
Date:   2015-06-15 09:22:35 -0600

    bitbake-user-manual-ref-variables.xml: Added BB_ALLOWED_NETWORKS desc.
    
    Added a new variable description for the BB_ALLOWED_NETWORKS
    variable.
    
    Signed-off-by: Scott Rifenbark <scott.m.rifenbark@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

50	0	doc/bitbake-user-manual/bitbake-user-manual-ref-variables.xml

commit 937665bd57dad04dd6bb46d06488b699f5c54d29
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2015-06-10 15:27:52 +0100

    toastergui: prevent contamination of libtoaster context
    
    This patch modifies the New Build button to use a local
    copy of the default libtoaster project context in order
    to prevent page contamination when a different project is
    selected in the drop-down menu.
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>

18	20	lib/toaster/toastergui/static/js/base.js

commit 978ab17033ec48ee0a82016b7e4d6a2fe5d21dbb
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2015-05-21 18:45:44 +0100

    toaster: Add global ajaxError handler
    
    If any ajax calls fail and debug is enabled log the error to the console.
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>

5	0	lib/toaster/toastergui/static/js/libtoaster.js
0	5	lib/toaster/toastergui/static/js/table.js

commit ecb70b0bc996529f1a6e58e5716b31e273395c98
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2015-05-21 18:44:18 +0100

    toaster: Add ajax loading spinner
    
    This adds an ajax loading spinner to provide feedback when in-page
    loading is happening. It will show after 1.2 seconds of initial loading.
    
    [YOCTO #7790]
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>

49	0	lib/toaster/toastergui/static/css/default.css
22	0	lib/toaster/toastergui/static/js/libtoaster.js
5	0	lib/toaster/toastergui/templates/base.html

commit 058e9db05767f2d46d46c02dd5043bb0f6b8e460
Author: Vlad Fulgeanu <andrei-vlad.fulgeanu@intel.com>
Date:   2015-06-04 16:59:58 +0300

    toaster: tables: Remove obsolete field_name for select column
    
    field_name is no longer used for this kind of column. So no need to specify
    it here.
    
    Signed-off-by: Vlad Fulgeanu <andrei-vlad.fulgeanu@intel.com>

1	2	lib/toaster/toastergui/tables.py

commit febf8bedf8f9d37659831cdde208d14ece2fb322
Author: Ed Bartosh <ed.bartosh@linux.intel.com>
Date:   2015-05-21 18:00:41 +0300

    toaster: Make toaster script to work in dash
    
    Made it working in dash. Note, that due to dash limitations
    script will not work if sourced.
    
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>

18	9	bin/toaster

commit bd95425c35c7d8386c57329e425aa7802537b479
Author: Ed Bartosh <ed.bartosh@linux.intel.com>
Date:   2015-05-04 13:38:50 +0300

    toaster: Code cleanup: bashisms
    
    Fixed the following bashisms:
     replaced echo -e -> printf
     removed 'function' from function definitions
     replaced $(< ${file}) -> `cat ${file}`
    
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>

28	27	bin/toaster

commit a5bc29083d4f85a5695f3f62d5badb783c6f7224
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2015-06-08 18:33:44 +0100

    toaster: fixes after refactoring
    
    This patch fixes issues brought in by refactoring:
    
    * the New Build button is working with pre-set projects
    * the xhr_datatypeahead is exposed for calls that are not
    mapable to the REST objects
    * a new table returing recipes provided by layers currently
    selected in the project is used to provide recipe suggestions
    * the field names in json are switched from "list" to "rows" as
    to maintain consistency with the ToasterTables
    * the "value" field in xhr_ calls is now named "search" to maintain
    consistency
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>

2	3	lib/toaster/orm/models.py
61	43	lib/toaster/toastergui/static/js/base.js
1	1	lib/toaster/toastergui/static/js/libtoaster.js
16	8	lib/toaster/toastergui/static/js/projectapp.js
9	1	lib/toaster/toastergui/tables.py
5	2	lib/toaster/toastergui/templates/base.html
2	1	lib/toaster/toastergui/templates/project.html
8	0	lib/toaster/toastergui/urls.py
12	5	lib/toaster/toastergui/views.py

commit 33d2b87aca667d72262a3928deaf35414b46a7c1
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2015-06-08 15:22:01 +0100

    toastergui: remove xhr_datatypeahaed layerdeps call
    
    This patch removes the url-constructing calls to get the layer details
    in favor of embedding the look-up URL in the JSON data on the
    layer list page.
    
    This allows further removal of the XHR-specific code for layer dependencies
    in favor of REST calls to layer details data.
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>

4	4	lib/toaster/toastergui/static/js/importlayer.js
1	1	lib/toaster/toastergui/static/js/layerdetails.js
4	5	lib/toaster/toastergui/static/js/libtoaster.js
46	15	lib/toaster/toastergui/static/js/projectapp.js
17	6	lib/toaster/toastergui/tables.py
0	1	lib/toaster/toastergui/templates/importlayer.html
0	1	lib/toaster/toastergui/templates/layerdetails.html
0	1	lib/toaster/toastergui/templates/project.html
0	3	lib/toaster/toastergui/urls.py
1	10	lib/toaster/toastergui/views.py

commit 8e7a2c3b125a34fd9d6fa0442ab13290137ecc51
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2015-06-08 13:36:56 +0100

    toastergui: remove xhr_datatypeahead and xhr_XXXbuild
    
    We remove the endpoints for XHR on the toastergui application.
    
    The endpoints are now replaced with calls to the respective
    REST endpoints (i.e. projectlayers, projecttargets, projectmachines).
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>

0	2	lib/toaster/contrib/tts/urllist.py
3	3	lib/toaster/toastergui/static/js/base.js
3	3	lib/toaster/toastergui/static/js/importlayer.js
2	2	lib/toaster/toastergui/static/js/layerdetails.js
4	4	lib/toaster/toastergui/static/js/libtoaster.js
0	2	lib/toaster/toastergui/templates/base.html
2	2	lib/toaster/toastergui/templates/layerdetails.html
1	1	lib/toaster/toastergui/templates/managed_mrb_section.html
36	16	lib/toaster/toastergui/templates/project.html
1	1	lib/toaster/toastergui/templates/runagain.html
1	1	lib/toaster/toastergui/templatetags/projecttags.py
3	3	lib/toaster/toastergui/tests.py
3	5	lib/toaster/toastergui/urls.py
56	152	lib/toaster/toastergui/views.py
3	3	lib/toaster/toastergui/widgets.py
1	1	lib/toaster/toastermain/settings.py

commit fb5eb1d7759222573565936a964d602c148df139
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2015-06-08 12:26:12 +0100

    toaster: eliminate duplicate querysets
    
    The Layer_Version.get_equivalents_wpriority performs the same
    function as Project.compatible_layerversions, but in memory and
    with worse performance.
    
    Replace the code in get_equivalents_wpriority with a call to
    the project compatible_layerversions, which also returns a queryset
    instead of a list (can be used to further enhance queries)
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>

3	38	lib/toaster/orm/models.py

commit d3edea773000a663f5883e04f477d853bff64cf6
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2015-06-08 11:12:47 +0100

    toaster: add class template view for single-object pages
    
    Adding ToasterTemplateView as prototype for all class-based
    views that display single objects; equivalent to ToasterTable
    for object lists.
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>

10	2	lib/toaster/toastergui/tables.py
26	0	lib/toaster/toastergui/widgets.py

commit 26dc19284e06a7ae35f75a243b2062f61e30f2ca
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2015-06-05 14:13:03 +0100

    toaster: toastertables raise errors
    
    Modifies the widget code to raise the Exceptions to the user
    instead of printing then to stdout - making the programming
    errors much more visible.
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>

7	5	lib/toaster/toastergui/widgets.py

commit fb683135348b074412da154585c75865aad1eab0
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2015-06-05 12:30:12 +0100

    toaster: ToasterTables add computational fields
    
    This patch adds the ability to pass a function to be computed
    for generating a field value in setting up a column in
    ToasterTables.
    
    Also adding "displayable" property that can be turned False for
    columns that are present in JSON data but are not part of the UI.
    
    Add the "id" column by default for all rows.
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>

13	0	lib/toaster/toastergui/static/js/table.js
6	2	lib/toaster/toastergui/tables.py
3	0	lib/toaster/toastergui/views.py
16	3	lib/toaster/toastergui/widgets.py

commit 928ee3fd4b52ea14b7eb704f1f27351362a9d27a
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2015-06-08 11:01:43 +0100

    toaster: toaster table add raw data
    
    We add in a JSON response both the raw data and the rendered
    version for display. The rendered fields start with "static:"
    to mark a different "namespace".
    
    The toaster.js is updated to always display the "static:" version
    of a field, if it exists (and ignore the raw data unless the
    static rendering is missing).
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>

13	1	lib/toaster/toastergui/static/js/table.js
30	1	lib/toaster/toastergui/views.py
11	5	lib/toaster/toastergui/widgets.py

commit 6ad3078bd2be1a8cda99040acaa9bb81d77f0013
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2015-06-08 18:41:46 +0100

    toastergui: remove xhr_projectedit and xhr_projectinfo URLs
    
    This patch removes the xhr_projectedit and xhr_projectinfo URLs
    in favour of REST calls to the Project page.
    
    The project page takes now the POST requests to modify project
    settings. All usages of removed URLs are now changed to point to the
    project page, using the json format.
    
    The interface call specs have not modified.
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>

0	3	lib/toaster/contrib/tts/urllist.py
1	2	lib/toaster/toastergui/static/js/base.js
4	4	lib/toaster/toastergui/static/js/libtoaster.js
61	12	lib/toaster/toastergui/static/js/projectapp.js
0	3	lib/toaster/toastergui/templates/base.html
1	1	lib/toaster/toastergui/templates/project.html
0	1	lib/toaster/toastergui/tests.py
0	2	lib/toaster/toastergui/urls.py
41	69	lib/toaster/toastergui/views.py

commit 4528490cf663790a455815dc48fbf3dda264098c
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2015-06-03 15:18:33 +0100

    toastergui: use defaults on xhr_datatypeahead parameters
    
    This patch prevents crashes when xhr_datatypeahead is called
    without proper parameters.
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>

10	10	lib/toaster/toastergui/views.py

commit 1778dac9fd39dae75c55bf2cf836cdd488dbc265
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2015-06-03 12:36:30 +0100

    toaster: toastertables REST refactoring
    
    This patch refactors the ToasterTables to bring them in line
    with REST principles -
    
    - all table pages now support the "format=json" GET parameter
    that returns the data in JSON format
    - the tables themselves
    
    This cleans up the URL namespace by aleviating the need to
    have two URLS for each table (one for the template and one for
    the data loading), and fixes minor things in the ToasterTable
    implementation.
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>

3	2	lib/toaster/toastergui/static/js/table.js
56	28	lib/toaster/toastergui/tables.py
1	1	lib/toaster/toastergui/templates/layerdetails.html
1	1	lib/toaster/toastergui/templates/toastertable-simple.html
1	1	lib/toaster/toastergui/templates/toastertable.html
21	9	lib/toaster/toastergui/urls.py
19	28	lib/toaster/toastergui/widgets.py

commit 7a6eb36b82c5f2e342777e479d9c401ded42453d
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2015-06-02 12:23:12 +0100

    convert all project-based view to JSON APIs
    
    This patch converts all-project views that are REST-style URLs
    to support JSON encoding if the "format=json" parameter is supplied.
    
    The formatting code is enhanced to prevent following Django foreign
    keys, to convert enum-values from int to string, and support for
    timedelta.
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>

99	65	lib/toaster/toastergui/views.py

commit 15a2274eba13d19b864f337057d61c75ff7849cc
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2015-05-19 16:14:29 +0100

    toaster: move project data typeahead to the REST API
    
    This patch enables JSON requests on the project REST endpoint,
    and replaces the universal queries "xhr_datatypeahead" with the
    `project` type to the REST project endpoint.
    
    The patch adds a decorator that takes a context returned by a view
    and either renders the template specified as the decorator argument,
    or converts the context to JSON.
    
    Normal "search", "filter" and "order" options for view work as normal
    on the JSON API format. To enable the JSON return, set the "format"
    GET parameter to "json".
    
    In order to demonstrate the functionality, the "New build" button
    is switched from using the xhr_datatypeahead to the project
    REST API with JSON formatting. Additionally, the XHR APIs that
    perform actions with the project id passed as parameter are removed,
    and the needed URLs are populated from the project JSON API returns after
    the project has been selected.
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>

34	17	lib/toaster/toastergui/static/js/base.js
3	3	lib/toaster/toastergui/static/js/importlayer.js
1	1	lib/toaster/toastergui/static/js/layerdetails.js
6	6	lib/toaster/toastergui/static/js/libtoaster.js
15	9	lib/toaster/toastergui/templates/base.html
1	1	lib/toaster/toastergui/templates/basetable_bottom.html
1	1	lib/toaster/toastergui/templates/detail_pagination_bottom.html
2	2	lib/toaster/toastergui/templatetags/projecttags.py
0	3	lib/toaster/toastergui/urls.py
56	33	lib/toaster/toastergui/views.py

commit 430f7a288b4446600b3a943c51f6711ffcf9e619
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2015-06-09 13:29:19 +0100

    bitbake: Bump version to 1.27.1
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	bin/bitbake
1	1	lib/bb/__init__.py

commit c5e6f929f3d5eeb7954660dea62611c58b795ff8
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2015-06-07 08:07:13 +0100

    cooker/event: Add an event which lists all stamps reachable after parsing
    
    The metadata can potentially use such an event to clean up any
    "unreachable" data, solving several problems we currently have
    where obsolete data may continue to exist in the shared areas.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

5	0	lib/bb/cooker.py
10	0	lib/bb/event.py

commit 88e4600aa66dda2e6c807f9d97af8982bcd8817b
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2015-06-04 10:42:26 +0100

    parse/BBHandler: Avoid repeatedly resetting FILE
    
    If we're not going to change the value of FILE, or we know it isn't
    going to have changed (ext == bbclass), don't set FILE.
    
    This avoids messy looking history of the variable as well as optimises
    parsing speed slightly.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	2	lib/bb/parse/parse_py/BBHandler.py

commit a52242bb4d928b9abba8a3489e350e4615a9da29
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2015-05-28 12:30:50 +0100

    toaster: more HTML5 fixes
    
    More HTML5 fixes highlighted by tests on new data.
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>

1	1	lib/toaster/toastergui/templates/builddashboard.html
1	1	lib/toaster/toastergui/templates/configvars.html
2	0	lib/toaster/toastergui/templates/recipe.html

commit 931caab56301876cb8632b289835c2545a096ef6
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2015-05-18 14:04:53 +0100

    toaster tests: enable url check test
    
    Integrate the HTML5 validation as a test instead of
    calling a separate script. This enables us to get the
    HTML5 validation report as part of patch-level
    testing.
    
    gitignore the cache directory created by the http client
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>

21	0	lib/toaster/contrib/tts/config.py
1	1	lib/toaster/contrib/tts/runner.py
53	2	lib/toaster/contrib/tts/tests.py
19	22	lib/toaster/contrib/tts/urlcheck.py

commit f4257f8df3be0627bdc7209fe34d674c42baf8d2
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2015-05-15 13:15:08 +0100

    toaster/tts: Fix tests
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>

0	2	lib/toaster/contrib/tts/backlog.txt
1	1	lib/toaster/contrib/tts/launcher.py
1	1	lib/toaster/contrib/tts/runner.py
1	1	lib/toaster/contrib/tts/tests.py

commit ccf7f39d470fe6d743b58b1140c19cb8da31ecaf
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2015-05-18 14:13:15 +0100

    toaster: enable no browser start
    
    We enable a "nobrowser" parameter that inhibits
    the launch of a browser when toaster starts.
    
    This is useful for integration with automated startup scripts
    and enables headless testing.
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>

5	1	bin/toaster

commit dfbcbe116d0b987b850f67056f02f489ac0b8360
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2015-05-20 15:44:16 +0100

    orm: Fix all failing unit test
    
    This fixes all the unit tests for the orm. Also added is the ability to
    set a custom Layer index if you want to avoid using the public one by
    specifying TTS_LAYER_INDEX
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>

4	1	lib/toaster/orm/models.py
20	12	lib/toaster/orm/tests.py

commit c17933271cd273a346115c2ee0b6695ff3f981ce
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2015-05-20 15:41:24 +0100

    bldcontrol: Fix all failing unit tests
    
    This fixes the unit tests for the bldcontrol it requires the
    implementation of a new Exception type so that a known Exception can be
    handled. Also fixed is the path to the toaster conf files so that the
    test doesn't need to be run from the top level directory and the ability
    to specify the values of TTS_SOURCE_DIR and TTS_BUILD_DIR and
    TTS_TEST_ADDRESS used for testing.
    
    Edited by Alex Damian to correct the rebasing of the localhostbecontroller.py
    file.
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>

1	1	lib/toaster/bldcontrol/localhostbecontroller.py
4	1	lib/toaster/bldcontrol/sshbecontroller.py
56	28	lib/toaster/bldcontrol/tests.py

commit 9a3197fba46b38e5863e7ded11e4bf9530cfcc9b
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2015-05-19 18:02:21 +0100

    toastergui: add tests for xhr_datatypeahead calls
    
    In order to make sure we replace the xhr_datatypeahead calls
    with similar APIs, we add tests that validate the data returned
    by the xhr_datatypeahead. A copy of these tests will be enabled
    for each type of datatypeahead that will be replaced.
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>

46	4	lib/toaster/toastergui/tests.py

commit 9edd61fe7afaf273ed31d214af9251462182ad4f
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2015-05-19 17:22:46 +0100

    toastergui: tests for the all-projects API point
    
    This patch adds Django tests that verify that the 'all-projects'
    page returns a valid HTML page when invoked normally, containing
    the project name; and valid JSON containing API-needed fields
    if the GET parameter `format` is set to "json"
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>

36	0	lib/toaster/toastergui/tests.py

commit 125d0e05805247450be0675e281a21bd6146d108
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2015-05-19 13:30:05 +0100

    toasterui: replace cookie-based preferences with session data
    
    We switch from storing the user preferences using cookies
    to saving them in the server-side session.
    
    Patch for "count/pagesize" and "orderby" fields in the table-based
    pages.
    
    This patch will solve two problems:
    * the browser-side race between the GET header data and the cookie data
    * page breakages when field names chances in orderby statements.
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>

0	4	lib/toaster/toastergui/templates/basetable_bottom.html
1	8	lib/toaster/toastergui/templates/basetable_top.html
0	5	lib/toaster/toastergui/templates/detail_pagination_bottom.html
1	1	lib/toaster/toastergui/templates/detail_sorted_header.html
18	19	lib/toaster/toastergui/views.py

commit adf67dd79dbf6b585bf8cd54f99c389409b88ecd
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2015-05-19 13:13:27 +0100

    toaster: refactor checksettings command
    
    This patch refactors the checksetting command to prevent
    early return from the handle function.
    
    It also adds a check that marks IN PROGRESS builds at startup time
    as FAILED. Minor changes to BuildRequest and Build classes
    ensure useful string representation for the objects.
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>

24	2	lib/toaster/bldcontrol/management/commands/checksettings.py
3	0	lib/toaster/bldcontrol/models.py
3	0	lib/toaster/orm/models.py

commit ae6349a13f11b6fa90fe5603b000bef14ee0f2f0
Author: Ed Bartosh <ed.bartosh@linux.intel.com>
Date:   2015-05-20 00:34:56 +0300

    toastergui: Consider task name when restarting a build in /builds
    
    Previously the same issue was fixed for project view.
    'Run again' button now restarts builds using target:task also in builds view.
    
    [YOCTO #7442]
    
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>

14	2	lib/toaster/toastergui/templates/managed_mrb_section.html
7	0	lib/toaster/toastergui/templates/runagain.html
4	3	lib/toaster/toastergui/templatetags/projecttags.py

commit 6492349d50a2048b1cbebab482bfd075bb48dd96
Author: Ed Bartosh <ed.bartosh@linux.intel.com>
Date:   2015-05-19 18:44:50 +0300

    toaster-gui: Show task name for the builds in /builds
    
    Task name was only shown for the latest builds in project view.
    Now it should be shown also in builds view.
    
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>

20	0	lib/toaster/toastergui/templates/brtargets.html
5	7	lib/toaster/toastergui/templates/managed_mrb_section.html

commit eb0b1450e421cf65b407b1ac0336ac24ffc626e8
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2015-05-19 16:10:19 +0100

    toaster: Add an invalidate cache method on data update signal
    
    Instead of relying on the cache expiring over an amount of time we can
    listen to the changed notification on the models to invalidate the
    cache. Also fixes overlapping cache names.
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>

12	0	lib/toaster/orm/models.py
0	5	lib/toaster/toastergui/tables.py
4	2	lib/toaster/toastergui/widgets.py

commit 8ce35f81631e31539aeb82f8a85abbb3312e5097
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2015-05-18 20:08:28 +0100

    toaster: Port layerdetails to ToasterTables
    
    This ports the layerdetails page to using ToasterTables
    Also some whitespace and strict clean ups in the existing layerdetails
    js and html template.
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>

52	18	lib/toaster/toastergui/static/js/layerdetails.js
3	0	lib/toaster/toastergui/static/js/libtoaster.js
48	29	lib/toaster/toastergui/static/js/table.js
78	9	lib/toaster/toastergui/tables.py
183	411	lib/toaster/toastergui/templates/layerdetails.html
18	0	lib/toaster/toastergui/templates/toastertable-filter.html
4	22	lib/toaster/toastergui/templates/toastertable-simple.html
18	32	lib/toaster/toastergui/templates/toastertable.html
4	2	lib/toaster/toastergui/urls.py
0	49	lib/toaster/toastergui/views.py
7	10	lib/toaster/toastergui/widgets.py

commit 4ce35c74d2b1ecd68c494fa9bab3c1133f9679c1
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2015-05-18 20:01:44 +0100

    toaster: Add a simplified ToasterTable template
    
    This is like the normal ToasterTable template but with a number of
    features removed such as edit columns and has a lower profile compared
    to the "main" tables.
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>

112	0	lib/toaster/toastergui/templates/toastertable-simple.html

commit 406a7f81420f7baa5cbfc034b573a4d692b98874
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2015-05-18 13:44:53 +0100

    toaster: Fix toastertable header
    
    Fixes regression introduced by 'tables updates for HTML5 compliance'
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>

1	0	lib/toaster/toastergui/templates/toastertable.html

commit 873087b11653848ec2704d67de5680a265b71eaa
Author: Ed Bartosh <ed.bartosh@linux.intel.com>
Date:   2015-05-18 12:03:00 +0300

    toastergui: show relative paths in configvars view
    
    Reworked filtering of config paths.
    
    Stripped clone paths, topdir and its parent directory from the paths
    to config files in configvars view.
    
    [YOCTO #7463]
    
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>

6	4	lib/toaster/toastergui/templates/configvars.html
23	53	lib/toaster/toastergui/templatetags/projecttags.py
13	6	lib/toaster/toastergui/views.py

commit 9855e0b9735ebf0a6c622bee6ec787dfc1d9e474
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2015-05-15 14:43:31 +0100

    toastergui: table header bring back
    
    This patch brings back the table header, which I mistakenly
    took out when fixing HTML5 compliance.
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>

1	1	lib/toaster/toastergui/static/js/table.js
1	1	lib/toaster/toastergui/templates/toastertable.html

commit 5e0bf388f4e5c1cc493ac8264785e631bad2f672
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2015-05-14 16:44:27 +0100

    toaster logger: assign projects to all builds
    
    Bitbake logger now sets a default project if the TOASTER_BRBE
    or TOASTER_PROJECT Bitbake variables are not set.
    
    This a necessary step in getting all builds under a project,
    as to unify the MANAGED and interactive modes.
    
    Other small fixes are included, related to the size of the
    fields in the database.
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>

27	10	lib/bb/ui/buildinfohelper.py
368	0	lib/toaster/orm/migrations/0021_auto__chg_field_build_project__chg_field_project_bitbake_version__chg_.py
9	6	lib/toaster/orm/models.py
1	1	lib/toaster/orm/views.py

commit ec43dc569e370767c709dec225cbee0c99151c19
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2015-05-14 16:10:50 +0100

    toaster logger: refactor recipe and layer file paths
    
    This refactoring brings the "local_path" of the
    layer from the Layer object to the Layer_Version object, which
    is more appropriate as different checkouts of the same
    Layer may live in different directories.
    
    This enables us to store Recipe file paths relative to a Layer_Version
    at all times, aleviating the need to store full file paths in the
    database. We also turn the prefix of the path (e.g. virtual:native
    path name space) into a pathflag field.
    
    In turn, this solves the problem of mis-identification of tasks based
    on the recipe file paths, since we can also match the namespace of the
    file paths on the recipe files.
    
    [YOCTO #7594]
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>

32	15	lib/bb/ui/buildinfohelper.py
7	7	lib/toaster/contrib/tts/toasteruitest/toaster_automation_test.py
361	0	lib/toaster/orm/migrations/0020_auto__add_field_layer_version_local_path__add_field_recipe_pathflags__.py
7	16	lib/toaster/orm/models.py
2	2	lib/toaster/toastergui/templates/bpackage.html
1	1	lib/toaster/toastergui/templates/configuration.html
1	1	lib/toaster/toastergui/templates/package_detail_base.html
2	2	lib/toaster/toastergui/templates/recipe.html
2	2	lib/toaster/toastergui/templates/recipes.html
1	1	lib/toaster/toastergui/templates/target.html
11	11	lib/toaster/toastergui/views.py

commit ba10b6f89767c0dad8a2b064f42a84956764e9da
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2015-05-14 14:40:10 +0100

    toaster: enable server-side sessions for all usages
    
    In an effort to fix client-side session storage using
    cookies, we enable server-side session support for all pages.
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>

5	1	bin/toaster
4	2	lib/toaster/toastergui/views.py
6	11	lib/toaster/toastermain/settings.py

commit e169ed5cf190af62586f3e1c6ed6db6120406e05
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2015-05-14 17:17:51 +0100

    toaster: Fix build button current project race
    
    Make sure the current project value is set before we check to see if the
    project is buildable. Also update the blacklist url patterns where we
    aren't displaying the button.
    
    [YOCTO #7739]
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>

3	2	lib/toaster/toastergui/static/js/base.js

commit 863b6add24c211d64ba7931647084321f2d65889
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2015-05-27 17:37:33 +0100

    data: Make expandKeys deterministic
    
    At least in theory, the order the keys are expanded in can make
    a difference, particularly if there is key overlap.
    
    We also want to ensure that any underlying base key is processed
    before any overridden version of that variable (FOO before FOO_x)
    which helps the update_data removal code I've been testing.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/data.py

commit 366af3be1cffd64e4a79c15990c1e05869022c14
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2015-05-27 17:28:56 +0100

    ConfHandler: Fix bogus dependency problems
    
    Adding a dependency when errors occur accessing a file when calling
    handle() is not the correct thing to do. THe handle() code calls
    resolve_file() which can raise an exception without ever touching
    "fn" itself, it has also already marked all the dependencies correctly.
    
    This leads to bogus files being resolved to the local cwd and
    hence triggers reparses for no good reason.
    
    The solution is to simply remove the bogus dependency.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

0	1	lib/bb/parse/parse_py/ConfHandler.py

commit 508aad9d5db7e51328b1fd6ee53b4bc3720a30b7
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2015-05-27 17:30:31 +0100

    BBHandler: Drop cwd from search path
    
    Whilst bitbake has done this for a long time, the behaviour of resolving
    class files against cwd is not desirable. This can be seen during
    base configuration parsing when looking for base.bbclass where a dependency
    on cwd is added. If cwd then changes, the cache is invalid and triggers a
    re-parse.
    
    The only real option is to drop this entry and if files can't be found, we
    fix BBPATH in the cases where it needs fixing. I didn't find any in the
    random selection of layers I tested parsing locally.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	2	lib/bb/parse/parse_py/BBHandler.py

commit d3d2541aacd1ea560da0d8b25a3ea3f0563dee70
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2015-05-27 17:31:10 +0100

    cooker/utils: Improve parsing profiling
    
    Currently the cooker parsing processes each dump an individual profile
    which is ok, but means absolute numbers of function calls for a given load
    can be tricky to determine as parsing of recipes may go to different pool
    threads on different runs.
    
    This change collects up the individual thread parsing results and processes
    them into one profile output. The profile processing function in utils
    needed tweaks to allow this to work.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

12	2	lib/bb/cooker.py
9	3	lib/bb/utils.py

commit ed5a8954ac923eda9750a636c5bb5b95ffce664f
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2015-05-26 16:18:43 +0100

    tests/data: Add key expansion unit test
    
    This ensures basic key expansion works and that overlapping
    keys generate a log message.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

14	0	lib/bb/tests/data.py

commit b30ee0aba51a35a194a4338b988f93ece1ed281c
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2015-05-27 17:33:16 +0100

    tests/data: Add log parsing test code
    
    This allows us to write tests which ensure a particular action generates
    a particular log message.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

24	1	lib/bb/tests/data.py

commit 5e9d0911cd86e980ab310cc0d79c9383fbc2c844
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2015-05-26 16:16:45 +0100

    data: Revert expandKeys warning move
    
    This was incorrect, it *must* be done next to the rename as a previous
    may overlap with the current one and we need to detect this case.
    
    I'll add a test case to better catch this problem in future.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

5	6	lib/bb/data.py

commit a4cd4c56284812efb2a2bc0c8667ddad073f8e94
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2015-05-26 11:41:02 +0100

    data: Clean up expandKeys None value handling
    
    This comparison is interesting even in the case of empty vales. Enabling
    this warning actually found a bug in the metadata in avahi. Make the
    code handle None specifically and also remove the dead code path in the
    second if statement.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	2	lib/bb/data.py

commit 702b42a47904f2378dd819e7463b3206883c2651
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2015-05-25 08:53:52 +0100

    data: Move warning code to the first loop for performance
    
    By doing this we can take advantage of the expansion cache before
    starting write operations on the data store.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

5	5	lib/bb/data.py

commit c6798b431571aae18bb8699ac6e3ec75b731d719
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2015-05-25 08:51:37 +0100

    siggen: Don't crash if number of task dependencies change
    
    If the number of task dependencies change you currently get
    a traceback when using diffsigs.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

10	6	lib/bb/siggen.py

commit 0eb75a34bd9731e9de7bc9600a7418a927561fdb
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2015-05-25 08:50:33 +0100

    cache: Clean up getVar usage to modern syntax/style
    
    No functional change.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

6	6	lib/bb/cache.py

commit 8d1748f75763b4a66516cc46d5457ee6404b1b68
Author: Jason Wessel <jason.wessel@windriver.com>
Date:   2015-05-20 20:01:02 -0500

    bitbake-worker: Fix regression with unbuffered logs
    
    I noticed that I was seeing loss of the log files when hitting
    control-c while debugging a function in bitbake.  In fact if you
    take a recipe and replace its compile function as shown below let
    it run for a few seconds and hit control-c, you will see first
    hand that log data is not there.
    
    do_compile () {
            while [ 1 ] ; do
                    echo -n "Output date: "
                    date
                    sleep 1
            done
    }
    
    It turns out there was a regression introduced by commit:
    d0f0e5d9e69 which created the bitbake worker.  Since the bitbake
    worker is started in its own process space, it needs the exact
    same code added from commit: 88429f018b where the problem was
    fixed the first time around.
    
    Signed-off-by: Jason Wessel <jason.wessel@windriver.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

9	0	bin/bitbake-worker

commit 2df35a25b4968f64adfa673d5b73442c1a30829d
Author: Ash Charles <ashcharles@gmail.com>
Date:   2015-05-22 08:39:30 -0700

    fetch/hg: Disable checksums for archived downloads
    
    Like the Git fetcher, the Mercurial fetcher shouldn't expect recipes to
    provide a checksum.  As described [1], recipes using a mercurial
    fetcher that don't provide a checksum will fail in a the repository has
    previously been downloaded and archived.
    
    Credit to Rafaël Carré for figuring out the bug.
    
    [1] https://www.mail-archive.com/openembedded-devel@lists.openembedded.org/msg41328.html
    
    Signed-off-by: Ash Charles <ashcharles@gmail.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

7	0	lib/bb/fetch2/hg.py

commit 7023f5431345e1613bc155be5a9560c8a88e8642
Author: Mike Looijmans <mike.looijmans@topic.nl>
Date:   2015-05-22 08:29:05 +0200

    bitbake.conf: Set GITPKGV variable
    
    Set GITPKGV to mimic the meta-openembedded 'gitpkgv' class. This allows
    a recipe to simply set:
    PKGV="1.2+${GITPKGV}"
    And no longer needs to inherit gitpkgv class.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	0	conf/bitbake.conf

commit 989c08f62aff7b707c25c692c23284f16506b7bc
Author: Mike Looijmans <milo-software@users.sourceforge.net>
Date:   2015-05-22 08:29:04 +0200

    fetch2/git.py: Add gitpkgv_revision alternative version information
    
    gitpkgv_revision returns a sortable revision number that can be used
    in the PKGV variable for example. To mimic meta-openembedded gitpkgv
    behaviour to provide a sortable revision numner, one could set the
    following:
    
    PKGV = "1.0+${@bb.fetch2.get_srcrev(d, 'gitpkgv_revision')}"
    
    This would yield a package version like "1.0+69+fb5eb80".
    
    Signed-off-by: Mike Looijmans <mike.looijmans@topic.nl>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

25	0	lib/bb/fetch2/git.py

commit 2f1f4483493cc290f5d2c07f9906e90eaea2f4c1
Author: Mike Looijmans <milo-software@users.sourceforge.net>
Date:   2015-05-22 08:29:03 +0200

    fetch2/__init__.py: Make get_srcrev output configurable
    
    The idea here is to support package version numbering similar to gitpkgv in
    meta-openembedded. This commit is the first step towards such functionality.
    
    The original plan was to add a "get_pretty_srcrev" method to the fetcher, as
    per Richard's suggestion [1]. While writing this, I noticed that it would
    become a copy of get_srcrev with only two lines changed. So to create something
    more Pythonic than a boolean argument and conditionals around the calls to the
    fetcher's sortable_revision, I just made the method to be called on the fetcher
    an argument to the method. Defaulting to 'sortable_revision' prevents affecting
    existing code.
    
    Now if the git fetcher were to implement, say 'gitpkgv_revision' one could
    set the following in a recipe:
      PKGV="1.2+${@bb.fetch2.get_srcrev(d, 'gitpkgv_revision')}"
    and this would yield the same result as gitpkgv's GITPKGV variable.
    
    See for the discussion leading to this change:
    [1] http://lists.openembedded.org/pipermail/openembedded-core/2015-January/100345.html
    
    Signed-off-by: Mike Looijmans <mike.looijmans@topic.nl>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

6	3	lib/bb/fetch2/__init__.py

commit 5ea3a206bb5beef4c12d56d9e42e29d324a08e16
Author: Scott Rifenbark <scott.m.rifenbark@intel.com>
Date:   2015-05-22 09:42:34 -0600

    bitbake-user-manual: Updated "Delete a Task" section for broken deps
    
    Fixes [YOCTO #7803]
    
    I added information for the scenario where deleting a task using the
    deltask command could "break" implicit dependencies.
    
    Signed-off-by: Scott Rifenbark <scott.m.rifenbark@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

30	2	doc/bitbake-user-manual/bitbake-user-manual-metadata.xml

commit d9811231b4c8211446bd9275084c26a4718cd175
Author: Scott Rifenbark <scott.m.rifenbark@intel.com>
Date:   2015-05-19 13:08:25 -0600

    bitbake-user-manual-customization.xsl: Pointing to mirrors for XSL files.
    
    Instead of pointing to the Sourceforge area, which seems to flake out
    every so often, we are now pointing to a mirror to get the XSL files
    needed to build the manual.
    
    Signed-off-by: Scott Rifenbark <scott.m.rifenbark@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

9	1	doc/bitbake-user-manual/bitbake-user-manual-customization.xsl

commit efa44d04137977f883db4a643b0f774e91514722
Author: Marcin Smoczyński <marcin.smoczynski@enigma.com.pl>
Date:   2015-04-02 14:24:51 +0200

    fetch/git: Fix uri in git checkstatus
    
    Pass proper repository url without arguments after a semicolon.
    
    Executing checkuri on a rule with git repository in SRC_URI does
    not report errors when working offline because wrong repository
    url is passed to the ls-remote command. For example
    "bitbake -c checkuri glibc" command executes:
    "git -c core.fsyncobjectfiles=0 ls-remote git://sourceware.org/git/glibc.git;branch=release/2.21/master"
    command in a shell subprocess to determine if url is valid.
    Shell subprocess executes in fact 2 commands:
    "git -c core.fsyncobjectfiles=0 ls-remote git://sourceware.org/git/glibc.git"
    and
    "branch=release/2.21/master"
    
    First one returns 127 or 128 depending on error but second one
    returns 0 because it is just env variable setup. Therefore we're not catching
    connection error.
    
    [YOCTO #7558]
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	2	lib/bb/fetch2/git.py

commit 1dd599ddfcdb547bee49bd7d86acddf64c675b42
Author: Randy Witt <randy.e.witt@linux.intel.com>
Date:   2015-05-18 15:06:12 -0700

    toaster: Remove dependency on daemon application
    
    The bitbake observer is now started using python subprocess. This should
    allow for toaster to run without installing the "daemon" application.
    
    [Yocto #7271]
    
    Signed-off-by: Randy Witt <randy.e.witt@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

0	5	bin/toaster
9	3	lib/toaster/bldcontrol/localhostbecontroller.py

commit 9097bae469cb1e005092c11610d92e908b8f19f5
Author: Randy Witt <randy.e.witt@linux.intel.com>
Date:   2015-05-18 15:06:11 -0700

    localhostbecontroller: Fix server search debug message
    
    When the output from the commands ran was redirected to
    "toaster_server.log" instead of the console, the debug message stating
    the port on which bitbake is running would no longer appear.
    
    This change makes looks at "toaster_server.log" for the port rather than
    the _shellcmd output. This makes the debug message useful again.
    
    Signed-off-by: Randy Witt <randy.e.witt@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

5	4	lib/toaster/bldcontrol/localhostbecontroller.py

commit 02763306662e15a4750395e5eab64ba98d1f9939
Author: Robert Yang <liezhi.yang@windriver.com>
Date:   2015-05-18 02:04:07 -0700

    fetch2/hg.py: add clean function
    
    Fixed when bitbake vim -ccleanall:
    
    File: '/path/to/bitbake/lib/bb/fetch2/__init__.py', lineno: 1462, function: clean
         1458:    def clean(self, urldata, d):
         1459:        """
         1460:        Clean any existing full or partial download
         1461:        """
     *** 1462:        bb.utils.remove(urldata.localpath)
         1463:
         1464:    def try_premirror(self, urldata, d):
         1465:        """
         1466:        Should premirrors be used?
    File: '/path/to/bitbake/lib/bb/utils.py', lineno: 633, function: remove
         0629:        subprocess.call(['rm', '-rf'] + glob.glob(path))
         0630:        return
         0631:    for name in glob.glob(path):
         0632:        try:
     *** 0633:            os.unlink(name)
         0634:        except OSError as exc:
         0635:            if exc.errno != errno.ENOENT:
         0636:                raise
    
    Exception: OSError: [Errno 21] Is a directory: '/path/to/downloads/hg/vim.googlecode.com/hg/vim'
    
    Signed-off-by: Robert Yang <liezhi.yang@windriver.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

5	0	lib/bb/fetch2/hg.py

commit 20059e4d5ab9bf0f32c781ccb208da3c95818018
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2015-05-18 16:08:36 +0100

    lib/bb/utils: fix and extend edit_metadata_file()
    
    Fix several bugs and add some useful enhancements to make this into a
    more generic metadata editing function:
    * Support modifying function values (name must be specified ending with
      "()")
    * Support dropping values by returning None as the new value
    * Split out edit_metadata() function to provide same functionality
      on a list/iterable
    * Pass operation to callback and allow function to return them
    * Pass current output lines to callback so they can be modified
    * Fix handling of single-quoted values
    * Handle :=, =+, .=, and =. operators
    * Support arbitrary indent string
    * Support indenting by length of assignment (by specifying -1)
    * Fix typo in variablename - intentspc -> indentspc
    * Expand function docstring to cover arguments / usage
    * Add a parameter to enable matching names with overrides applied
    * Add some bitbake-selftest tests
    
    Note that this does change the expected signature of the callback
    function. The only known caller is in lib/bb/utils.py itself; I doubt
    anyone else has made extensive use of this function yet.
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

271	0	lib/bb/tests/utils.py
180	58	lib/bb/utils.py

commit 0b0c82f49cf2de887967d305768cbd95314bb171
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2015-05-18 16:08:35 +0100

    lib/bb/utils: fix several bugs in edit_metadata_file()
    
    * Fix unchanged assignments being dropped if other lines changed
    * Fix not passing variable name from single-line assignments to the
      function
    * Fix not trimming the trailing quote from values
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

11	3	lib/bb/utils.py

commit 3bf9c8830c5d5eea5502230d5af84ebd87ad5849
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2015-05-18 16:08:34 +0100

    lib/bb/utils: add function to get layer containing a file
    
    In certain contexts it can be useful to find the layer that a file (e.g.
    a recipe) appears in.
    
    Implements [YOCTO #7723].
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

16	0	lib/bb/utils.py

commit 76f095107a0eaf987a5a6a48eed7b98f87aea121
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2015-05-16 22:40:30 +0100

    tests/parse: Add file missing from previous commit
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

69	0	lib/bb/tests/parse.py

commit e33d82bc10283d533f928836d56a6f0af80ea5c1
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2015-05-15 18:01:27 +0100

    tests/fetch: Add mirror of mirror tests
    
    Add some tests of mirrors or mirrors to the fetcher unittests.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

25	0	lib/bb/tests/fetch.py

commit b7fd3ec9994f664b17fc86423e6e7afac07e897b
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2015-05-15 18:00:49 +0100

    fetch2: Improve mirror building function error handling
    
    First, when building mirror urls we don't do any fetching so we should never
    be calling clean functions.
    
    Currently, if a mirror url fails, we don't process it further to see
    if there are any mirrors of the mirror.
    
    We should do this even when the mirror url fails, else we may miss out
    on valid/useful mappings, particularly in the case of file:// urls.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	1	lib/bb/fetch2/__init__.py

commit e5c97a85bed0436d48eeaac2e32962cfb5371d2f
Author: Liam R. Howlett <Liam.Howlett@windriver.com>
Date:   2015-05-15 11:56:24 -0400

    fetch2: Allow GIT_SMART_HTTP to be passed through
    
    Allow GIT_SMART_HTTP to be passed through to the fetch command so that
    servers that cannot use GIT_SMART_HTTP can be used by the fetcher.
    
    Signed-off-by: Liam R. Howlett <Liam.Howlett@WindRiver.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	0	lib/bb/fetch2/__init__.py

commit 9f2115b07a55cb14e4a74dc6fbd3707c28a234d0
Author: Mariano Lopez <mariano.lopez@linux.intel.com>
Date:   2015-05-13 11:24:57 +0000

    bitbake: fetch2/git: Add URL when latest_revision generates an exception.
    
    The URL is not sent when _latest_revision generates and exception.
    When performing the sanity checks it is not possible to know the URI that failed.
    
    This add the URL when latest_revision generates an exception.
    
    [YOCTO: #7592]
    
    Signed-off-by: Mariano Lopez <mariano.lopez@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	1	lib/bb/fetch2/git.py

commit b7bcef141b56fe8eb03724ea5251e3251fc63817
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2015-05-14 17:58:12 +0100

    tests/parse: Add very basic start of parse tests
    
    This tests very basic usage of the parser and then adds a test
    to ensure that incomplete functions raise an exception.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	0	bin/bitbake-selftest

commit 6b54a72638f57882d4fd5aab96b2752a09e065af
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2015-05-14 17:56:51 +0100

    BBHandler: Error for incomplete function definitions
    
    Add some sanity checks on the parsing state engine when returning data
    so that incomplete functions raise parse errors.
    
    This means a recipe doing:
    
    do_somefunction {
         echo 1
    
    VAR = "1"
    
    will now raise a ParseError. To get the right file/line information,
    __infunc__ was changed to a list.
    
    [YOCTO #7633]
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

12	7	lib/bb/parse/parse_py/BBHandler.py

commit b1653855c74f86909c9f329ed6d2b10391c28395
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2015-05-14 14:33:50 +0100

    tests/fetch: ensure fetch tests preserve current dir
    
    The fetcher calls os.chdir() in a number of places, which can affect
    other tests (since the directory it changes into gets deleted) - let's
    just put the current directory back to where it was when we're done.
    
    (This fixes bb.tests.Path.test_unsafe_delete_path failing if it was run
    as part of a full bitbake-selftest run, where the fetcher tests get to
    run before it.)
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	0	lib/bb/tests/fetch.py

commit 80ecd1c54d4c748cee3a7ce0d64013a346e7671e
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2015-05-14 14:33:49 +0100

    fetch2/git: ensure the unpacked origin remote points upstream
    
    If you're interested in using the checked out repository for development
    (e.g. in OE with devtool) then you ideally want the origin remote to
    point to the repository it was fetched from, so just set that after
    cloning.
    
    (As part of this I did a minor refactor so we have one function to
    generate the repository URL, which was already in two places.)
    
    Fixes [YOCTO #7756].
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

17	14	lib/bb/fetch2/git.py

commit 18d3a03e1b07c98b2dce46eb94f30de1a2b4320b
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2015-05-14 10:34:04 +0100

    runqueue: Handle cases where siginfo is now a parameter to the hashvadlidate function
    
    In some cases we need to check specifically for siginfo files, in
    some cases we need to check for the actual sstate objects themselves.
    
    Therefore make this a parameter to the function. A fallback to the
    previous function style is maintained for now.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

7	2	lib/bb/runqueue.py

commit 39e4ce20d1e0bf6c93ca7ef2dcc4019979de3e39
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2015-05-14 11:02:05 +0100

    toastergui: tables updates for HTML5 compliance
    
    This is a patch to bring the generic table code in compliance
    with HTML5 specification.
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>

1	2	lib/toaster/toastergui/templates/toastertable.html

commit 7d24fea2b5dcaac6add738b6fb4700d698824286
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2015-05-13 13:21:33 +0100

    toaster/contrib: adding TTS squashed patch
    
    In order to move the Toaster Test System in Toaster itself,
    we create a contrib directory.
    
    The TTS is added as a squashed patch with no history.
    
    It contains code contributed by Ke Zou <ke.zou@windriver.com>.
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>

6	0	lib/toaster/contrib/README
41	0	lib/toaster/contrib/tts/README
9	0	lib/toaster/contrib/tts/TODO
2	0	lib/toaster/contrib/tts/backlog.txt
70	0	lib/toaster/contrib/tts/config.py
100	0	lib/toaster/contrib/tts/launcher.py
0	0	lib/toaster/contrib/tts/log/.create
51	0	lib/toaster/contrib/tts/recv.py
200	0	lib/toaster/contrib/tts/runner.py
20	0	lib/toaster/contrib/tts/scratchpad.py
5	0	lib/toaster/contrib/tts/settings.json
139	0	lib/toaster/contrib/tts/shellutils.py
57	0	lib/toaster/contrib/tts/tests.py
87	0	lib/toaster/contrib/tts/toasteruitest/run_toastertests.py
1924	0	lib/toaster/contrib/tts/toasteruitest/toaster_automation_test.py
21	0	lib/toaster/contrib/tts/toasteruitest/toaster_test.cfg
44	0	lib/toaster/contrib/tts/urlcheck.py
53	0	lib/toaster/contrib/tts/urllist.py

commit 6de539d5953b2dca2a9ed75556a59764337a194c
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2015-05-11 18:51:28 +0100

    toaster: Port All recipes, layers and machines to ToasterTables
    
    Port of the main tables to the new ToasterTable widget.
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>

11	0	lib/toaster/orm/models.py
3	0	lib/toaster/toastergui/static/css/default.css
4	1	lib/toaster/toastergui/static/js/layerBtn.js
3	0	lib/toaster/toastergui/static/js/libtoaster.js
279	0	lib/toaster/toastergui/tables.py
9	0	lib/toaster/toastergui/templates/layer_btn.html
0	132	lib/toaster/toastergui/templates/layers.html
8	0	lib/toaster/toastergui/templates/machine_btn.html
0	88	lib/toaster/toastergui/templates/machines.html
8	0	lib/toaster/toastergui/templates/recipe_btn.html
0	142	lib/toaster/toastergui/templates/targets.html
23	5	lib/toaster/toastergui/urls.py
1	266	lib/toaster/toastergui/views.py

commit b3a6fa4861bf4495fbd39e2abb18b3a46c6eac18
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2015-05-08 17:24:11 +0100

    toaster: Add toaster table widget
    
    This widget provides a common client and backend widget to support
    presenting data tables in Toaster.
    
    It provides; data loading, paging, page size, ordering, filtering,
    column toggling, caching, column defaults, counts and search.
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>

485	0	lib/toaster/toastergui/static/js/table.js
25	0	lib/toaster/toastergui/templates/generic-toastertable-page.html
117	0	lib/toaster/toastergui/templates/toastertable.html
316	0	lib/toaster/toastergui/widgets.py

commit db61587fdd78af071d8a2a50d494fe159bf169a6
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2015-05-12 15:34:45 +0100

    toaster: managedcontextprocessor requires Project imported
    
    Temporarily move this import into the main view so that the context
    processor can return a value for projects (albeit an unused one) when in
    non managed mode. This will be changed in the near future but this
    will fix it until we finish the refactoring.
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>

1	1	lib/toaster/toastergui/views.py

commit 10b7c359613629bf6e3465234512990ba4742c48
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2015-05-12 15:29:45 +0100

    toaster: Remove old bldviewer application
    
    The SimpleUI is obsolete and not maintained. It should be deleted as
    there is no use to it.
    
    [YOCTO #7709]
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>

0	0	lib/toaster/bldviewer/__init__.py
0	44	lib/toaster/bldviewer/api.py
0	4797	lib/toaster/bldviewer/static/css/bootstrap.css
0	1982	lib/toaster/bldviewer/static/js/bootstrap.js
0	6	lib/toaster/bldviewer/static/js/jquery-2.0.3.js
0	30	lib/toaster/bldviewer/templates/simple_base.html
0	17	lib/toaster/bldviewer/templates/simple_basebuildpage.html
0	64	lib/toaster/bldviewer/templates/simple_basetable.html
0	24	lib/toaster/bldviewer/templates/simple_bfile.html
0	44	lib/toaster/bldviewer/templates/simple_bpackage.html
0	43	lib/toaster/bldviewer/templates/simple_build.html
0	22	lib/toaster/bldviewer/templates/simple_configuration.html
0	34	lib/toaster/bldviewer/templates/simple_layer.html
0	36	lib/toaster/bldviewer/templates/simple_package.html
0	50	lib/toaster/bldviewer/templates/simple_recipe.html
0	71	lib/toaster/bldviewer/templates/simple_task.html
0	0	lib/toaster/bldviewer/templatetags/__init__.py
0	29	lib/toaster/bldviewer/templatetags/simple_projecttags.py
0	345	lib/toaster/bldviewer/tests.py
0	35	lib/toaster/bldviewer/urls.py
0	287	lib/toaster/bldviewer/views.py
0	2	lib/toaster/toastermain/urls.py

commit 6e60ed8ab71e4300ab571f42b7af5011086df697
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2015-05-11 18:58:25 +0100

    toaster: fix html5 compliance
    
    This patch brings needed changes in all views so that
    each view passes the HTML5 compliance test by the
    W3C Markup Service.
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>

1	1	lib/toaster/orm/models.py
4	4	lib/toaster/toastergui/templates/base.html
2	1	lib/toaster/toastergui/templates/baseprojectpage.html
1	1	lib/toaster/toastergui/templates/builddashboard.html
1	1	lib/toaster/toastergui/templates/buildrequestdetails.html
8	8	lib/toaster/toastergui/templates/importlayer.html
23	27	lib/toaster/toastergui/templates/layerdetails.html
1	1	lib/toaster/toastergui/templates/layers.html
1	1	lib/toaster/toastergui/templates/machines.html
4	3	lib/toaster/toastergui/templates/newproject.html
92	92	lib/toaster/toastergui/templates/project.html
3	3	lib/toaster/toastergui/templates/recipe.html
2	2	lib/toaster/toastergui/templates/targets.html
19	18	lib/toaster/toastergui/templates/task.html
6	6	lib/toaster/toastergui/urls.py
8	14	lib/toaster/toastergui/views.py

commit 3424110d1d95e3cc039e8775324f814e7fdd5470
Author: Belen Barros Pena <belen.barros.pena@intel.com>
Date:   2015-05-07 13:49:35 +0100

    toastergui: change the import layer action help text
    
    To match the form labels and the order in which the
    information is requested. That should make
    understanding the text easier.
    
    Signed-off-by: Belen Barros Pena <belen.barros.pena@intel.com>

1	1	lib/toaster/toastergui/templates/importlayer.html

commit c7263096ba31ba45daeeb9de90c1cb9ebef24a28
Author: Liam R. Howlett <Liam.Howlett@windriver.com>
Date:   2015-04-16 13:23:18 -0400

    fetch2: Add BB_ALLOWED_NETWORKS support
    
    BB_ALLOWED_NETWORKS is a list of hosts that the fetcher will be allowed
    to use when BB_NO_NETWORK is not set.
    
    If BB_NO_NETWORK is set, then networking is still disabled.
    
    If BB_ALLOWED_NETWORKS is not set, the behaviour remains the same as
    today.
    
    If BB_NO_NETWORK is NOT set, and BB_ALLOWED_NETWORKS is configured, then
    only the hosts in the list are usable by the fetcher.
    
    eg:
    BB_ALLOWED_NETWORKS="yoctoproject.org git.gnu.org"
    The fetcher will be able to download from yoctoproject.org, git.gnu.org,
    but not ftp.gnu.org or any other hostname that is not in the list.
    
    There is also limited support for wildcards on the beginning of the
    hosts, so BB_ALLOWED_NETWORKS="*.gnu.org" with match git.gnu.org and
    ftp.gnu.org as well as foo.git.gnu.org
    
    Signed-off-by: Liam R. Howlett <Liam.Howlett@WindRiver.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

53	0	lib/bb/fetch2/__init__.py
37	0	lib/bb/tests/fetch.py

commit f002b1ca80cb542a4ed0c06c53c914cd5e076565
Author: Daniel McGregor <daniel.mcgregor@vecima.com>
Date:   2015-05-11 21:25:18 -0600

    fetch/hg: support submodules
    
    Use hg clone and hg pull to copy the source into the build
    directory rather than taring up the cloned repository and
    untarring in the destination.
    
    This allows submodules to be cloned. While here, make the default
    behaviour keep the hg scm data to match the behaviour of the git
    fetcher.
    
    Signed-off-by: Daniel McGregor <daniel.mcgregor@vecima.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

36	19	lib/bb/fetch2/hg.py

commit 40ff92282bbf32cf644b021bf7cbb1f393dbb856
Author: Jason Wessel <jason.wessel@windriver.com>
Date:   2015-05-08 13:21:40 -0500

    fetch2: Allow git to use a different CA Bundle with private keys
    
    Setting BB_ENV_EXTRAWHITE to include GIT_SSL_CAINFO is enough to
    get "git ls-remote" to work for recipe parsing but it is not enough
    to get the fetcher to clone properly.
    
    This is because the fetcher has its own idea about what variables
    should be exported in the environment for some operations.
    
    It is desirable to use alternate CA Bundles for internal testing prior
    to using public keys for https, so we should allow the GIT_SSL_CAINFO
    to pass through.
    
    Signed-off-by: Jason Wessel <jason.wessel@windriver.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	0	lib/bb/fetch2/__init__.py

commit 9b7fae5c36c7b48237ce7903434602ebc1a07b20
Author: Scott Rifenbark <scott.m.rifenbark@intel.com>
Date:   2015-05-11 08:36:50 -0600

    bitbake-user-manual-metadata.xml: Alphabetized varflag list.
    
    This list should have been in alphabetical order.  It is now.
    
    Signed-off-by: Scott Rifenbark <scott.m.rifenbark@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

43	43	doc/bitbake-user-manual/bitbake-user-manual-metadata.xml

commit ee52aa304680a27529264cb186df6936b0375118
Author: Scott Rifenbark <scott.m.rifenbark@intel.com>
Date:   2015-05-11 08:31:29 -0600

    bitbake-user-manual-metadata.xml: Added two new varflag descriptions
    
    Added brief descriptions for recideptask and lockfiles.
    
    Reported-by: Robert P. J. Day <rpjday@crashcourse.ca>
    Signed-off-by: Scott Rifenbark <scott.m.rifenbark@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

14	0	doc/bitbake-user-manual/bitbake-user-manual-metadata.xml

commit 96bdebaa1aa43a35dc0747eda3081e7cf1a3dbde
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2015-05-08 17:33:21 +0100

    toastergui: removing unused views
    
    We remove url entries, views and templates that are not
    used in the interface; these are leftovers from the development
    process, and are not linked anywhere in the interface nor
    mentioned in documentation.
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>

0	34	lib/toaster/toastergui/templates/layer.html
0	36	lib/toaster/toastergui/templates/package.html
0	5	lib/toaster/toastergui/urls.py
0	29	lib/toaster/toastergui/views.py

commit 2f98e6e78845f699777856ee5dec7b26f4c88d08
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2015-05-08 13:20:55 +0100

    toastergui: fix whitespace after URL
    
    This patch fixes whitespace after URLs in the tasks page,
    fixing warnings from the linkchecker.
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>

4	4	lib/toaster/toastergui/templates/tasks.html

commit 09acf77bb49ade1f0daa8c62de33fee5ba0ca747
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2015-05-08 13:01:50 +0100

    toaster: adding art missing from Bootstrap
    
    When Bootstrap 2.3 was imported, we missed a couple of art file.
    
    This patch adds them to complete Bootstrap integrity.
    
    License used is (as previously documented).
    
    GLYPHICONS Halflings released with Bootstrap, CC BY 3.0
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>

-	-	lib/toaster/toastergui/static/img/glyphicons-halflings-white.png
-	-	lib/toaster/toastergui/static/img/glyphicons-halflings.png

commit cc251da0f211f3ee881ad07478733e2f4c1b7019
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2015-05-07 18:09:09 +0100

    toasterui: URL refactoring
    
    This is a URL refactoring needed to remove the inadvertent
    usage of server-side user session in a REST-style API.
    We move the parameters that were stored in the user session
    to the URL, making navigation more robust.
    
    This refactoring allows a clean (no 500 HTTP return codes) crawl
    of the website following inside links.
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>

1	1	lib/toaster/toastergui/templates/basetable_top_layers.html
1	1	lib/toaster/toastergui/templates/importlayer.html
4	4	lib/toaster/toastergui/templates/layerdetails.html
7	7	lib/toaster/toastergui/templates/layers.html
2	2	lib/toaster/toastergui/templates/machines.html
12	12	lib/toaster/toastergui/templates/project.html
3	3	lib/toaster/toastergui/templates/targets.html
13	8	lib/toaster/toastergui/urls.py
37	57	lib/toaster/toastergui/views.py

commit 420b197227394b341bcc1075bc298ecf2aabec46
Author: Ed Bartosh <ed.bartosh@linux.intel.com>
Date:   2015-05-05 15:06:28 +0300

    toastergui: Consider task name when restarting a build
    
    'Run again' button now restarts the build using target:task if task
    was specified for the build.
    
    [YOCTO #7442]
    
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>

1	1	lib/toaster/toastergui/static/js/projectapp.js

commit 4854f91cd0983bdb9d23e4ffd7119e8a0e0204de
Author: Mihail Stanciu <stanciux.mihail@intel.com>
Date:   2015-05-04 07:47:10 -0400

    toaster: <Add class id to a few columns>
    
    Added class ids to columns that were missing them in the Packages and Recipes pages. This is required for Toaster UI automation efforts.
    
    [YOCTO #7377]

2	2	lib/toaster/toastergui/templates/bpackage.html
6	2	lib/toaster/toastergui/templates/recipes.html

commit 308b5529d4e183d550221864bfdbefd31cc23705
Author: Ed Bartosh <ed.bartosh@linux.intel.com>
Date:   2015-05-02 00:58:15 +0300

    toaster: fix typo in format string
    
    Fixed TypeError: not all arguments converted during string formatting
    
    [YOCTO #7618]
    
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>

1	1	lib/toaster/orm/models.py

commit 5bfe5eb0bf1e53ddb04c31e786e1ffc15542e6e8
Author: Ed Bartosh <ed.bartosh@linux.intel.com>
Date:   2015-05-04 13:03:59 +0300

    toaster: Code cleanup: indent
    
    Replaced tabs with 4 spaces.
    Removed useless semicolons at the end of lines.
    
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>

62	63	bin/toaster

commit e7b27843e2f37619dbe555a8883ac67f418f32dc
Author: Ed Bartosh <ed.bartosh@linux.intel.com>
Date:   2015-05-04 12:16:48 +0300

    toaster: Make toaster script working in zsh
    
    Fixed shell syntax not understood by zsh. Made toaster
    script to work for both shells in both modes: sourced and
    directly called.
    
    [YOCTO #6964]
    
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>

13	13	bin/toaster

commit 222e21d2fc3dc67449e582d983e11ea927e3eaef
Author: Ed Bartosh <ed.bartosh@linux.intel.com>
Date:   2015-05-02 18:50:34 +0300

    toastergui: decrease load time for configuration page
    
    Used __in field lookup for QuerySet to get build variables faster.
    
    [YOCTO #6691]
    
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>

9	37	lib/toaster/toastergui/views.py

commit a00cd5135a4bbd61d311fa17569894f974ab4420
Author: Alexander Kanevskiy <alexander.kanevskiy@intel.com>
Date:   2015-03-31 17:56:58 +0100

    toaster: clear up toaster shutdown for mac osx
    
    This patch properly shuts down toaster in interactive mode
    under Mac OSx.
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>

1	1	bin/toaster

commit 3e12f4e8e3ec66d1df772a64be04b90ec72462ae
Author: Maxin B. John <maxin.john@enea.com>
Date:   2015-05-04 13:35:35 +0200

    prserv: serv.py: remove unused and duplicate imports
    
    Remove unused xmlrpclib, atexit and duplicated threading module imports
    
    Signed-off-by: Maxin B. John <maxin.john@enea.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	2	lib/prserv/serv.py

commit e446281fbdd13cdfd2e39af0f48035829e2133ba
Author: Ross Burton <ross.burton@intel.com>
Date:   2015-05-07 16:15:49 +0100

    setup.py: remove
    
    This setup.py doesn't actually work and due to the lack of versioning or
    stability guarantees we don't endorse system-wide installation.
    
    Signed-off-by: Ross Burton <ross.burton@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

0	73	setup.py

commit b64bbc2dd51369b64fae2b1a10502b9dd4ceebfd
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2015-04-27 15:05:18 +0100

    toaster: filtersnippet remove redefinition of filter type key
    
    This redefinition is not needed and also used Mozilla specific API to
    access the data thus breaking the date filter in all other browsers.
    
    [YOCTO #7577]
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>

1	2	lib/toaster/toastergui/static/js/filtersnippet.js

commit 3b323af501f7ec81cce34adb4ea86a7d6599e60a
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2015-04-21 20:29:46 +0100

    toaster: Add links to the layer add notification
    
    Adds links to the layer details for the layer that has just been
    removed or added
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>

4	3	lib/toaster/toastergui/static/js/libtoaster.js

commit ae7a656ba7fc6f4356b57aa309a9b6d035e51d2e
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2015-04-21 11:59:37 +0100

    toaster: Refactor and expand layer add remove mechanism
    
    We have multiple pages which have buttons to add and remove layers this
    patch adds functionality to libtoaster to abstract this and implements
    it in the pages affected. We handle loading and showing the dependencies
    dialog here too and generating the notification messages.
    Also implemented is using the selectmachine api from the projectapp to
    avoid having to handle this in each page that allows selecting machines.
    A small number of jshint issues, help text and the machine page name
    have also been fixed.
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>

1	1	lib/toaster/toastergui/static/css/default.css
17	0	lib/toaster/toastergui/static/html/layer_deps_modal.html
4	4	lib/toaster/toastergui/static/js/importlayer.js
63	0	lib/toaster/toastergui/static/js/layerBtn.js
90	0	lib/toaster/toastergui/static/js/layerDepsModal.js
18	72	lib/toaster/toastergui/static/js/layerdetails.js
78	1	lib/toaster/toastergui/static/js/libtoaster.js
0	95	lib/toaster/toastergui/static/js/machines.js
0	9	lib/toaster/toastergui/static/js/projectapp.js
2	0	lib/toaster/toastergui/templates/base.html
1	1	lib/toaster/toastergui/templates/importlayer.html
2	2	lib/toaster/toastergui/templates/layerdetails.html
27	196	lib/toaster/toastergui/templates/layers.html
0	99	lib/toaster/toastergui/templates/layers_dep_modal.html
16	15	lib/toaster/toastergui/templates/machines.html
41	179	lib/toaster/toastergui/templates/targets.html
1	1	lib/toaster/toastergui/views.py

commit 9847e04d86063e4464afb402cb1352243b51f504
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2015-04-21 11:38:03 +0100

    toaster: projectapp Implement machine select command
    
    Use the project page to select the machine rather than setting it and
    then redirecting to the project page. This will also avoid having to have a
    special handler in the machines page it's self.
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>

21	1	lib/toaster/toastergui/static/js/projectapp.js

commit 4ef2774a2f683929c700550a9acc7b8f6074195b
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2015-04-10 18:15:03 +0100

    toaster: Move project context variables to common scope
    
    We have a bunch of context data which are used in multiple pages so it
    makes more sense to have this in a single place libtoaster.ctx that's
    accessible from each page rather than request it from every page.
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>

21	18	lib/toaster/toastergui/static/js/base.js
6	6	lib/toaster/toastergui/static/js/importlayer.js
10	13	lib/toaster/toastergui/static/js/layerdetails.js
8	8	lib/toaster/toastergui/static/js/libtoaster.js
5	7	lib/toaster/toastergui/static/js/machines.js
12	5	lib/toaster/toastergui/templates/base.html
0	4	lib/toaster/toastergui/templates/importlayer.html
0	5	lib/toaster/toastergui/templates/layerdetails.html
1	1	lib/toaster/toastergui/templates/layers_dep_modal.html
0	5	lib/toaster/toastergui/templates/machines.html

commit af63abe88327fd5c1b3d7c00a84d9e408ef23285
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2015-05-01 16:42:39 +0100

    toasterui: close build on BuildCompleted event
    
    Moving the code to close the build and instantiate a fresh
    buildinfohelper object to BuildCompleted event, as the
    CommandCompleted/Failed/Exit events come in too early.
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>

18	16	lib/bb/ui/toasterui.py

commit 1ddd6a9e4280a4adf971132ff1fe7ec9b3252905
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2015-05-01 16:20:33 +0100

    toasterui: proper exit code on toaster errors
    
    This patch modifies the toasterui to properly return the exit
    code based on the errors found in the toaster itself.
    
    The upload event file API call will not delete event logs for which
    toasterui showed an error. This will facilitate debugging.
    
    Minor enhancement in the buildinfohelper to reduce the number
    of lookups on unknown layer objects (prevented testing of the patch).
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>

4	9	bin/toaster-eventreplay
4	1	lib/bb/ui/buildinfohelper.py
6	5	lib/bb/ui/toasterui.py
5	3	lib/toaster/orm/views.py

commit f8590547a198a78334debdf14bf40acb50c22ecc
Author: Ed Bartosh <ed.bartosh@linux.intel.com>
Date:   2015-04-21 18:48:49 +0300

    bitbake: reset build mtime cache before the build
    
    Introduced build mtime cache structure. Reset it before the build
    to prevent bitbake from crashing when build/tmp/stamps hierarchy
    is removed.
    
    [YOCTO: #7562]
    
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

16	1	lib/bb/build.py
2	1	lib/bb/cooker.py

commit 5ecb8817bd49223652ede4fe513f1a42f2196798
Author: Ed Bartosh <ed.bartosh@linux.intel.com>
Date:   2015-04-28 15:52:18 +0300

    bitbake: use sys.exit to simplify the code
    
    Used sys.exit instead of assigning exit code to
    variable. This way it's more clear when bitbake
    exists and which exit code is used.
    
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

5	8	bin/bitbake

commit 2fe7d8c574ddf6a30278cff1a5a5c4089dc56d6d
Author: Ed Bartosh <ed.bartosh@linux.intel.com>
Date:   2015-04-28 15:15:57 +0300

    bitbake: Check if bitbake versions match
    
    Bitbake program and core versions must match.
    
    Moved __version__ from main.py back to bin/bitbake.
    Implemented check for version match in bin/bitbake.
    
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    
    tbs
    
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

4	0	bin/bitbake
1	2	lib/bb/main.py

commit c8e2a40c4e9865ebef9936d23644f2602a5c90f5
Author: Ed Bartosh <ed.bartosh@linux.intel.com>
Date:   2015-04-28 14:27:34 +0300

    bitbake: Handle BBMainException
    
    Some error messages were lost because BBMainException was
    inherited from bb.BBHandledException. When bb.BBHandledException
    is processed error messages are not printed as they suppose to
    be printed before raising this exception.
    
    Stopped to inherit BBMainException from bb.BBHandledException.
    Handled BBMainException in bin/bitbake and printed error message
    to the stderr.
    
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

4	1	bin/bitbake
1	1	lib/bb/main.py

commit 56cddeb9e1e4d249f84ccd6ef65db245636e38ea
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2015-04-17 15:26:59 +0100

    lib/bb/utils: add safeguard against recursively deleting things we shouldn't
    
    Add some very basic safeguard against recursively deleting paths such
    as / and /home in the event of bugs or user mistakes.
    
    Addresses [YOCTO #7620].
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

17	0	lib/bb/tests/utils.py
21	0	lib/bb/utils.py

commit 3b8a656d3ccb543c32696229184ebf12237ad38e
Author: Ed Bartosh <ed.bartosh@linux.intel.com>
Date:   2015-04-18 18:09:46 +0300

    cookerdata: Allow ~ in bblayers
    
    Implemented processing of ~ in bblayer's paths if HOME
    environment variable is approved.
    
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	0	lib/bb/cookerdata.py

commit e2879c60e905d7566091d40eab330372fa001313
Author: Scott Rifenbark <scott.m.rifenbark@intel.com>
Date:   2015-04-16 13:15:29 -0700

    bitbake-user-manual: Cleaned up parallelism note and formatted user input
    
    I updated the note in the second chapter that discusses the role for
    BB_NUMBER_THREADS.  The updates make it a bit clearer.
    
    Also scrubbed the manual for instances of user-supplied values to check
    how they are being formatted.  I fixed the formatting to use the
    <replaceable></replaceable> tags so they are in italics.
    
    Signed-off-by: Scott Rifenbark <scott.m.rifenbark@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

11	9	doc/bitbake-user-manual/bitbake-user-manual-execution.xml
15	9	doc/bitbake-user-manual/bitbake-user-manual-fetching.xml
1	1	doc/bitbake-user-manual/bitbake-user-manual-hello.xml
3	3	doc/bitbake-user-manual/bitbake-user-manual-metadata.xml
6	6	doc/bitbake-user-manual/bitbake-user-manual-ref-variables.xml

commit c34613eb69fd19770cbfc78ab8384221f10d5587
Author: Chen Qi <Qi.Chen@windriver.com>
Date:   2015-03-11 11:21:06 +0800

    bitbake-diffsigs: consider the situation where sigdata and siginfo files having the same hash values
    
    For now, `bitbake-diffsigs -t <recipe> <task>' doesn't work. It always outputs
    nothing.
    
    The problem is that bitbake-diffsigs are comparing sigdata and siginfo files
    that have the same hash value. This is not what we want. These two files are
    actually duplicates considering the purpose of bitbake-diffsigs. So we need
    to remove one of them so that bitbake-diffsigs could actually compare the
    correct signature files.
    
    Signed-off-by: Chen Qi <Qi.Chen@windriver.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

17	1	bin/bitbake-diffsigs

commit 294ea99263385525a1434bc6df690b653ee1f81b
Author: David Reyna <David.Reyna@windriver.com>
Date:   2015-04-15 20:37:38 -0700

    toaster: date range filter for project builds page
    
    Port date range filter initialization code to the project builds page.
    
    [YOCTO #7578]
    
    Signed-off-by: David Reyna <David.Reyna@windriver.com>

16	0	lib/toaster/toastergui/templates/projectbuilds.html

commit ee5c569ebe21c065508cd816ae8cb8842baf0b7e
Author: David Reyna <David.Reyna@windriver.com>
Date:   2015-03-30 07:12:01 -0700

    toaster: recipe path broken in recipe detail page
    
    The recipe paths in managed mode are not processed correctly. They need
    any prefix tags removed, and then any build path prefix removed only if
    present.
    
    [YOCTO #7523]
    
    Signed-off-by: David Reyna <David.Reyna@windriver.com>

7	1	lib/toaster/orm/models.py
1	1	lib/toaster/toastergui/templates/recipes.html

commit ff475c1a6dec883f855dfce7cb0650135da33751
Author: Belen Barros Pena <belen.barros.pena@intel.com>
Date:   2015-03-31 15:37:48 +0100

    toasterui: remove 'targets' from project notification
    
    Remove the last remnant of the "targets" wording, which was
    lurking in the notification we show you when you create
    a project.
    
    Signed-off-by: Belen Barros Pena <belen.barros.pena@intel.com>

1	1	lib/toaster/toastergui/static/js/projectapp.js

commit 62f486f81f59a3186a57f93c3b102404a3da8a6f
Author: David Reyna <David.Reyna@windriver.com>
Date:   2015-03-30 18:26:19 -0700

    toaster: searching all projects table resets page count
    
    Add missing '_save_parameters_cookies' to preserve page count.
    
    [YOCTO #7483]
    
    Signed-off-by: David Reyna <David.Reyna@windriver.com>

4	1	lib/toaster/toastergui/views.py

commit 4de721aa75a4aaad186312443726e6daa764934b
Author: David Reyna <David.Reyna@windriver.com>
Date:   2015-03-31 01:58:11 -0700

    toaster: add layer source in admin throws an error
    
    Preset uninitialized object members to bootstrap new layer source creation.
    
    [YOCTO #7437]
    
    Signed-off-by: David Reyna <David.Reyna@windriver.com>

14	6	lib/toaster/orm/models.py

commit ed741d022e9bd13cbef5c71e33b1e68cb2e42d9b
Author: Belen Barros Pena <belen.barros.pena@intel.com>
Date:   2015-03-31 15:59:17 +0100

    toasterui: correct terminology in landing page
    
    Change the introductory description of Toaster
    we provide on first use, to make sure it mentions
    all the bits that make up the build system, and
    not just BitBake.
    
    Signed-off-by: Belen Barros Pena <belen.barros.pena@intel.com>

1	1	lib/toaster/toastergui/templates/landing.html

commit cf7d0418ff2d4aec508c7942f96e9b52a491b25e
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2015-03-27 15:49:54 +0000

    toaster: BuildButton target input allow building targets with tasks
    
    Allow the input for targets to contain tasks in the form target:task
    
    [YOCTO #7501]
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>

2	3	lib/toaster/toastergui/static/js/base.js

commit 8652fbaf5e8c56d9d28b7da57432f37313a19b4a
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2015-03-27 15:49:55 +0000

    toaster: base.js minor jshint fixes
    
    Fixing errors identified by jshint, some missing semicolons and
    preference for === operator. Also pass the urldata in libtoaster as an
    object rather than constructing a query string.
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>

9	10	lib/toaster/toastergui/static/js/base.js
4	5	lib/toaster/toastergui/static/js/libtoaster.js

commit 380a3fb372c8b0a53dd7528562e6e7a222dc76ef
Author: Anders Darander <anders@chargestorm.se>
Date:   2015-04-17 07:49:42 +0200

    fetch/git: Remove a possible trailing '/' in subpath
    
    If the subpath parameter to the git fetcher ends with a trailing '/',
     bb.utils.prunedir() will be called on '/'...
    
    Fixes [YOCTO #7620].
    
    Signed-off-by: Anders Darander <anders@chargestorm.se>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/fetch2/git.py

commit 8cb95090c4b35b3fa54b25110ed6be4ef0d18e15
Author: Andre McCurdy <armccurdy@gmail.com>
Date:   2015-04-16 16:03:50 -0700

    toastergui: minor spelling fixes
    
      RRECOMENDS -> RRECOMMENDS
      TRECOMENDS -> TRECOMMENDS
    
    Signed-off-by: Andre McCurdy <armccurdy@gmail.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/toaster/toastergui/views.py

commit c4172fe33f0c63eda7f4af2bd36a5e9738e13595
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2015-04-07 14:14:04 +0100

    bitbake-layers: ensure non-extended recipe name is preferred
    
    In show-recipes and show-overlayed, we only list one variant of each
    recipe where multiple exist, therefore we should show the main one (e.g.
    in OpenEmbedded, we now show openssl and not nativesdk-openssl which
    would otherwise sort first.)
    
    Fixes [YOCTO #7514].
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

7	1	bin/bitbake-layers

commit 2e683c25b856b431198573f7f352d841587275e6
Author: Christopher Larson <kergoth@gmail.com>
Date:   2015-04-03 15:04:10 -0700

    runqueue: pass finalized metadata to scenequeue callbacks
    
    This ensures that _append, _prepend, overrides, etc are functional when used
    on sstate variables (e.g. SSTATE_DIR).
    
    [YOCTO #7564]
    
    Signed-off-by: Christopher Larson <kergoth@gmail.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

4	4	lib/bb/runqueue.py

commit a1431b1b85bf90ed5f771552d0ce91de288047d4
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2015-03-31 22:35:27 +0100

    bin/image-writer: Add ext4 as a deployable image type
    
    This is particularly problematic since qemu images switched to ext4 by
    default and now cannot work properly with UIs like hob.
    
    This patch adds in ext4 to the appropriate variable fixing this.
    
    [YOCTO #7426]
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	bin/image-writer

commit f980f060cd0d1e7fe5011f3c325c1b254f05eccf
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2015-03-30 13:29:33 +0100

    cooker: Ensure bbappend files are processed in a determistic order
    
    self.appendlist is a dict and as such unordered. This can lead to cases
    where appends with different names (e.g. x_%.bbappend vs. x_123.bbappend)
    can be reordered in application which in turn reorders the variables
    that those bbappend files might touch. Reorderd variables changes the sstate
    cache signatures causing real world issues.
    
    To avoid this, use a list for the append files instead.
    
    This patch is conservative and just adds a new data structure alongside
    the existing one and uses it to resolve the core issue. Later patches
    (post release) can handle some of the wider but less problematic ones
    (e.g. issues in bitbake-layers flatten).
    
    [YOCTO #7511]
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

9	7	lib/bb/cooker.py

commit 3d838ddc2f1f92e2dd940e43c3467f6ba4ba043d
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2015-03-31 14:59:28 +0100

    Revert "toaster: machine not searchable in all builds/projects"
    
    This reverts commit 1a86ed8f95649c5f5a3a66984ce36978d93b0e01.
    
    Bug [YOCTO #7334] was incompletly fixed, and the proper fix is
    not straightfoward. Consequently we revert the partial fix, as
    a incomplete fix is worse than no fix.
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/toaster/bldcontrol/models.py

commit e5a44e1096ba62b50bed4eee191f109c4f2c4105
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2015-03-31 13:57:40 +0100

    toastergui: add ext4 option for IMAGE_FSTYPES
    
    This patch adds "ext4" as a selectable option in IMAGE_FSTYPES,
    to keep in sync with the OE-Core capabilities.
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/toaster/toastergui/views.py

commit f4a64c2386a534aae9522629afde219d2aa00817
Author: Belen Barros Pena <belen.barros.pena@intel.com>
Date:   2015-03-26 16:47:02 +0000

    toasterui: rename 'targets' to 'recipes'
    
    A recent round of informal user feedback has revealed
    that the term 'target' is quite problematic. For
    all the users we spoke to the word refers to the
    target arch. In Toaster, it refers to the software
    you build.
    
    This patch replaces the word 'target' with 'recipe'
    across the Toaster interface. This is by no means
    self-explanatory, but at least it cannot be confused
    with target hardware, and it is also consistent with
    the terminology we use in the analysis portion of
    the interface.
    
    Signed-off-by: Belen Barros Pena <belen.barros.pena@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/toaster/toastergui/static/js/layerdetails.js
2	2	lib/toaster/toastergui/templates/base.html
8	8	lib/toaster/toastergui/templates/layerdetails.html
11	11	lib/toaster/toastergui/templates/project.html
8	8	lib/toaster/toastergui/templates/targets.html
9	9	lib/toaster/toastergui/views.py

commit d028fbe76962f3b86239633a0951626dfa66b8af
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2015-03-25 13:34:27 +0000

    toastergui: prevent error on empty build list
    
    This patch prevents errors being thrown on date limit
    computations if the build list is empty.
    
    [YOCTO #7513]
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

8	2	lib/toaster/toastergui/views.py

commit 0153e0b4e089f62a7d5a92ca6be2fa5a8f61a6e4
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2015-03-25 12:49:39 +0000

    Update to version 1.27.0 post 1.26 release
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/__init__.py
1	1	lib/bb/main.py

commit 14da7bc06bc6ea6fd051c0afd8d4839d96f415e7
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2015-03-25 12:49:06 +0000

    Update to version 1.26.0
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/__init__.py
1	1	lib/bb/main.py

commit 260dd77fa771ae3b777134f4178d344e96b6f3d6
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2015-03-19 16:05:03 +0000

    toasterui: enable sanity checker
    
    Since toasterui acts as the user-facing UI, we need
    to run sanity checks in order to let the GUI display proper
    warnings and stop the build if something is wrong.
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>

1	1	lib/bb/ui/toasterui.py

commit dda2f07193e740860f4497c3761d340d8c5c2b41
Author: Dave Lerner <dave.lerner@windriver.com>
Date:   2015-03-14 09:00:15 -0500

    toaster: most-build-targets bug fixes
    
    Fixes for the following for the "Most built targets" section of the
    project page:
    1) limit the number of most built targets to 5,
    2) order the list of most built targets by build count,
    3) select only those builds that had build status of 'fail', 'success',
    or a BuildRequest of 'failed',
    4) if there are no layers in the project then (on refresh) all of the
    checkboxes in the 'Most built targets' list are disabled.
    
    Note that per agreement with UI designer, the only sort on the most
    target list is build count as described in (3) above; secondary sorting
    is random.
    
    [YOCTO #7177]
    
    Signed-off-by: Dave Lerner <dave.lerner@windriver.com>

19	0	lib/toaster/toastergui/static/js/projectapp.js
4	3	lib/toaster/toastergui/templates/project.html
3	3	lib/toaster/toastergui/views.py

commit 0479faa46f0364df6d8e151be34e1834076df49d
Author: David Reyna <David.Reyna@windriver.com>
Date:   2015-03-22 01:40:14 -0700

    toaster: PACKAGE_CLASSES variable does not show current value when editing
    
    A typo in some element selectors caused the package_rpm setup to break.
    
    [YOCTO #7448]
    
    Signed-off-by: David Reyna <David.Reyna@windriver.com>

27	13	lib/toaster/toastergui/templates/projectconf.html

commit d886db3add1351a806ab58ec7519d2321687187b
Author: Belen Barros Pena <belen.barros.pena@linux.intel.com>
Date:   2015-03-23 17:15:01 +0000

    toasterui: small changes to empty states
    
    This commit:
    
    * Makes some changes to the layout and styles of the
    landing.html template
    
    * Adds the empty state to layers.html
    
    * Changes the message of the empty state of machines.html
    to use the same wording used in all other pages
    
    * Adds the project name and the right styles to
    the empty state of the project.html template
    
    * Makes small changes in style and wording to the
    empty state of targets.html
    
    * Updates all "configure a layer source" links to point
    to the new Toaster manual.
    
    Signed-off-by: Belen Barros Pena <belen.barros.pena@linux.intel.com>
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>

10	1	lib/toaster/toastergui/static/css/default.css
42	58	lib/toaster/toastergui/templates/landing.html
13	3	lib/toaster/toastergui/templates/layers.html
2	4	lib/toaster/toastergui/templates/machines.html
11	11	lib/toaster/toastergui/templates/project.html
6	8	lib/toaster/toastergui/templates/targets.html

commit fe9fff960d0a6fc24e0e177e5194f93a7be9456b
Author: Belen Barros Pena <belen.barros.pena@linux.intel.com>
Date:   2015-03-22 19:35:11 +0000

    toasterui: hide right column if empty
    
    In the layer details page, if the background
    information about the layer that shows in the
    right hand column is completely empty, remove
    it altogether.
    
    Signed-off-by: Belen Barros Pena <belen.barros.pena@linux.intel.com>

5	0	lib/toaster/toastergui/static/js/layerdetails.js

commit 40b46ce28b0b93241f9ce581f1e295e95bbff284
Author: Belen Barros Pena <belen.barros.pena@linux.intel.com>
Date:   2015-03-22 19:17:31 +0000

    toasterui: Improve messaging for empty layer details
    
    Explain that, if information is found during the build
    process, it will appear in the layer details page.
    
    Signed-off-by: Belen Barros Pena <belen.barros.pena@linux.intel.com>

4	2	lib/toaster/toastergui/templates/layerdetails.html

commit 0bd81be04c88104d7d460f913d0500e5fa9755fe
Author: Belen Barros Pena <belen.barros.pena@linux.intel.com>
Date:   2015-03-22 17:18:31 +0000

    toasterui: hide release when only one exists
    
    If only one release has been set up in Toaster,
    any project you create defaults to that release,
    and we simply don't show the release selection
    menu when creating projects.
    
    However, we were still showing the release information
    in the project page, which would leave users wondering
    what that release thing is since they never were
    exposed to it.
    
    This patch hides the release information in the
    project page when only one release has been set
    up in Toaster.
    
    Signed-off-by: Belen Barros Pena <belen.barros.pena@linux.intel.com>

2	3	lib/toaster/toastergui/templates/project.html

commit 88b1201a2f6dec53970b120cc8e13c0eb5ae21e1
Author: Belen Barros Pena <belen.barros.pena@linux.intel.com>
Date:   2015-03-23 15:26:02 +0000

    toasterui: update links to Toaster manual
    
    Set the links to the Toaster manual in the base.html
    and landing_not_managed.html templates to the URL of
    the new Toaster manual.
    
    Signed-off-by: Belen Barros Pena <belen.barros.pena@linux.intel.com>

1	0	lib/toaster/toastergui/static/css/default.css
1	1	lib/toaster/toastergui/templates/base.html
6	6	lib/toaster/toastergui/templates/landing_not_managed.html

commit b4ffe490253108e7a009290474e206468255ce12
Author: Belen Barros Pena <belen.barros.pena@intel.com>
Date:   2015-03-19 14:29:58 +0000

    toastergui: changes to release change notifications
    
    * Remove the branch name from the list of the layers
    deleted (it does not apply).
    
    * In the modal dialog that warns you before layer
    deletion, use the release description instead of
    the release name
    
    Signed-off-by: Belen Barros Pena <belen.barros.pena@intel.com>

6	2	lib/toaster/toastergui/static/js/projectapp.js
3	3	lib/toaster/toastergui/templates/project.html

commit 24d0938001da27c7ebcf36ce076f2aa58cbcf256
Author: Dave Lerner <dave.lerner@windriver.com>
Date:   2015-03-18 10:52:48 -0500

    toaster: alert fixes for project release change
    
    When a project release changes, if there are layers included with the
    project, then show the release branch name in the layer list.  If there
    aren't any layers in the project, then suppress the statement on the
    changed layers.
    
    [YOCTO # 7168]
    
    Signed-off-by: Dave Lerner <dave.lerner@windriver.com>

9	4	lib/toaster/toastergui/static/js/projectapp.js

commit 7c86ed5fb51c6237fa40fb454e58564ef027dd51
Author: David Reyna <David.Reyna@windriver.com>
Date:   2015-03-21 18:01:38 -0700

    toaster: build date range selections
    
    Enable date range selections for build start and build complete in all
    builds page for both managed and interactive mode. Disable the filter
    counts.
    
    [YOCTO #6040]
    [YOCTO #7249]
    [YOCTO #7461]
    
    Signed-off-by: David Reyna <David.Reyna@windriver.com>

95	0	lib/toaster/toastergui/static/js/filtersnippet.js
17	0	lib/toaster/toastergui/templates/build.html
25	9	lib/toaster/toastergui/templates/filtersnippet.html
18	1	lib/toaster/toastergui/templates/managed_builds.html
4	0	lib/toaster/toastergui/templatetags/projecttags.py
118	14	lib/toaster/toastergui/views.py

commit cedebbb47192be85ff0b1e4a313c6f9cf737a9c6
Author: David Reyna <David.Reyna@windriver.com>
Date:   2015-03-17 15:40:25 -0700

    toaster: build date range selections static sources
    
    Add the static resources from jquery-ui needed for datepicker
    
    The static files are licensed MIT and produced by jQuery foundation
    under the jQueryUI project.
    
    [YOCTO #6040]
    [YOCTO #7249]
    
    Signed-off-by: David Reyna <David.Reyna@windriver.com>

-	-	lib/toaster/toastergui/static/css/images/ui-bg_diagonals-thick_18_b81900_40x40.png
-	-	lib/toaster/toastergui/static/css/images/ui-bg_diagonals-thick_20_666666_40x40.png
-	-	lib/toaster/toastergui/static/css/images/ui-bg_flat_10_000000_40x100.png
-	-	lib/toaster/toastergui/static/css/images/ui-bg_glass_100_f6f6f6_1x400.png
-	-	lib/toaster/toastergui/static/css/images/ui-bg_glass_100_fdf5ce_1x400.png
-	-	lib/toaster/toastergui/static/css/images/ui-bg_glass_65_ffffff_1x400.png
-	-	lib/toaster/toastergui/static/css/images/ui-bg_gloss-wave_35_f6a828_500x100.png
-	-	lib/toaster/toastergui/static/css/images/ui-bg_highlight-soft_100_eeeeee_1x100.png
-	-	lib/toaster/toastergui/static/css/images/ui-bg_highlight-soft_75_ffe45c_1x100.png
-	-	lib/toaster/toastergui/static/css/images/ui-icons_222222_256x240.png
-	-	lib/toaster/toastergui/static/css/images/ui-icons_228ef1_256x240.png
-	-	lib/toaster/toastergui/static/css/images/ui-icons_ef8c08_256x240.png
-	-	lib/toaster/toastergui/static/css/images/ui-icons_ffd27a_256x240.png
-	-	lib/toaster/toastergui/static/css/images/ui-icons_ffffff_256x240.png
-	-	lib/toaster/toastergui/static/css/jquery-ui.min.css
-	-	lib/toaster/toastergui/static/css/jquery-ui.structure.min.css
-	-	lib/toaster/toastergui/static/css/jquery-ui.theme.min.css
-	-	lib/toaster/toastergui/static/js/jquery-ui.min.js

commit 1a86ed8f95649c5f5a3a66984ce36978d93b0e01
Author: David Reyna <David.Reyna@windriver.com>
Date:   2015-03-17 20:13:09 -0700

    toaster: machine not searchable in all builds/projects
    
    Add "build__machine" to searchable fields.
    
    [YOCTO #7334]
    
    Signed-off-by: David Reyna <David.Reyna@windriver.com>

1	1	lib/toaster/bldcontrol/models.py

commit 994b19ef7f633b8d463efa7022f2e17cd483a387
Author: Belen Barros Pena <belen.barros.pena@intel.com>
Date:   2015-03-19 12:29:55 +0000

    toastergui: changes to the all projects table
    
    The 'Last build' column in the all projects table
    was supposed to provide the completion time stamp
    of the latest project build. Instead, it is showing
    the time stamp of the latest project activity, which
    includes:
    
    * when the project was created and
    * when the last build started
    
    but not when you make a change to the configuration.
    
    The result is that the column and the sorting are very
    misleading. The template is set so that the time stamp
    only shows when the project has builds (if 0 builds, no
    time stamp is shown). But of course the sorting still
    happens according to the value, even if it doesn't
    display. The result is that, when you sort by the
    'Last build' column, projects with no builds
    appear listed between projects with builds, and you
    have no idea why.
    
    This patch:
    
    * changes the column label
    * its position in the table
    * makes sure the time stamp always displays
    * and adds help text
    
    to reflect what the data actually means.
    
    It also makes some small changes to other table
    headings.
    
    Signed-off-by: Belen Barros Pena <belen.barros.pena@intel.com>

1	2	lib/toaster/toastergui/templates/projects.html
12	10	lib/toaster/toastergui/views.py

commit cbf3d652dcbfc1db527eb13cd796fa57d8ff3748
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2015-03-19 11:09:43 +0000

    toaster: Project page fix targets url and tooltip placement
    
    Make sure we point to the all targets page for the notification links.
    Also fix the tooltip placements and a minor typo on the targets page.
    
    [YOCTO #7480]
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>

2	2	lib/toaster/toastergui/templates/project.html
1	1	lib/toaster/toastergui/templates/targets.html

commit ef6e854a50ea6894b0e320025280431a6fc8a9a5
Author: Dave Lerner <dave.lerner@windriver.com>
Date:   2015-03-11 15:05:08 -0500

    toaster: layer-relative paths for config files
    
    Change bitbake variables table to show the path to the file in which
    the variable was defined using a layer-relative path instead of the
    full path to the file.
    
    The layer-relative path is found by matching on the full defining file
    path with entries in a list of layer names, sorted in descending order,
    and with 'meta' appended as a built-in layer to the end of the list.
    
    Additional filters are used to reduce false matches, although even if
    there is a false match, the actual path to the defining file will be
    obvious and not misleading.
    
    [YOCTO #7414]
    
    Signed-off-by: Dave Lerner <dave.lerner@windriver.com>

2	2	lib/toaster/toastergui/templates/configvars.html
15	0	lib/toaster/toastergui/templatetags/projecttags.py
6	0	lib/toaster/toastergui/views.py

commit 4f2a6d5b515dec4b6199cc4517cd13dcc331f3c3
Author: Belen Barros Pena <belen.barros.pena@intel.com>
Date:   2015-03-19 10:34:58 +0000

    toastergui: give button nice rounded corners
    
    In the 'add variable' form, the submit button had
    a class applied that gave it straight corners on the
    left, and rounded corners on the right.
    
    Remove the class so that we have 4 nicely rounded corners.
    
    The patch also removes the unncessary inline styles in the
    same button.
    
    Signed-off-by: Belen Barros Pena <belen.barros.pena@intel.com>

1	1	lib/toaster/toastergui/templates/projectconf.html

commit 0412631fb4a15ff42bf5ee46a77920fa558ae358
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2015-03-19 19:01:47 +0000

    uievent: catch and log exceptions in receiving events
    
    This patch prevents tracebacks and instead logs exceptions
    that may happen during event processing.
    
    [YOCTO #7216]
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>

6	1	lib/bb/ui/uievent.py

commit d377f7f88d73f4e5d2dffef03d6acee809827ac6
Author: Ed Bartosh <ed.bartosh@linux.intel.com>
Date:   2015-03-20 15:13:05 +0200

    bin/bitbake: Create bitbake_main API
    
    Moved most of functionality of bin/bitbake to lib/bb/main.py
    to be able to call bitbake from python code.
    
    Signed-off-by: Ed Bartosh <ed.bartosh@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

6	357	bin/bitbake
3	3	lib/bb/cookerdata.py
390	0	lib/bb/main.py
1	1	lib/bb/tinfoil.py

commit fc0cec1f38aa6f2d09434cc008a429d350a5706f
Author: David Reyna <David.Reyna@windriver.com>
Date:   2015-03-12 16:56:12 -0700

    toaster: insure IMAGE_INSTALL_append values have a space prefix
    
    When the IMAGE_INSTALL_append value is not empty, it must have a space prefix
    in order for the "append" operator to concatenate the values correctly, so we
    enforce it in this variable's submit javascript.
    
    [YOCTO #7394]
    
    Signed-off-by: David Reyna <David.Reyna@windriver.com>

11	7	lib/toaster/toastergui/templates/projectconf.html

commit 23c83c6a8af12ad1c008372685f7cd9f87023145
Author: David Reyna <David.Reyna@windriver.com>
Date:   2015-03-13 17:10:01 -0700

    toaster: display machine and project values in input fields
    
    Explicitly preset the machine and project values in their respective
    input fields.
    
    [YOCTO #7170]
    
    Signed-off-by: David Reyna <David.Reyna@windriver.com>

2	2	lib/toaster/toastergui/templates/project.html

commit 484797744dbe421dfeea52e9428ba63b44f1ed88
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2015-03-13 15:22:32 +0000

    toaster: tasks trigger the select related tables before ordering
    
    In two of the cases the data is changed from a QuerySet to a sorted list
    so we aren't able to use the QuerySet api at this point, moving it
    before the data type is changed fixes this.
    
    [YOCTO #7404]
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>

3	1	lib/toaster/toastergui/views.py

commit 23f1439a5d3e8f4053826794c6502eca20189054
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2015-03-13 14:34:41 +0000

    toaster: Add cancel build to latest build section
    
    Add this functionality to the common managed_mrb_section
    Make sure we are using the correct version of this template in the
    projects template and remove now redundant code.
    
    [YOCTO #7351]
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>

28	0	lib/toaster/toastergui/static/js/libtoaster.js
16	26	lib/toaster/toastergui/templates/managed_mrb_section.html
0	39	lib/toaster/toastergui/templates/mrb_section.html
1	1	lib/toaster/toastergui/templates/projects.html
8	3	lib/toaster/toastergui/views.py

commit 6966d68e650c2d5655a1e747e70d35f5f037dc94
Author: David Reyna <David.Reyna@windriver.com>
Date:   2015-03-12 21:50:56 -0700

    toaster: Incorrect breadcrumb behaviour in the project page
    
    The last item in the breadcrumb for the project page should not be a link.
    
    [YOCTO #7157]
    
    Signed-off-by: David Reyna <David.Reyna@windriver.com>

6	0	lib/toaster/toastergui/templates/baseprojectpage.html
1	0	lib/toaster/toastergui/views.py

commit adcd24b97ea78fbccb870d62bd1297edae3a3487
Author: Dave Lerner <dave.lerner@windriver.com>
Date:   2015-03-12 13:55:27 -0500

    toaster: leave cancel enabled for release change
    
    When you click the 'change' icon to edit the project release, the
    "cancel" button, should always be enabled so that the user can
    return to the 'not editable' state at any time.
    
    [YOCTO #7151]
    
    Signed-off-by: Dave Lerner <dave.lerner@windriver.com>

1	1	lib/toaster/toastergui/templates/project.html

commit a92bb33a3ceacab2bfee9df1c39a202832866970
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2015-03-16 12:50:11 +0000

    toastergui: recipe and layer identification
    
    This patch fixes the recipe and layer identification by path
    when Toaster uses relative paths.
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>

16	3	lib/bb/ui/buildinfohelper.py

commit 64b0867108d03c7e9215b80c59c1bba919e82994
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2015-03-16 12:33:39 +0000

    toasterui: fix error message parameter
    
    Fix the error message parameter.
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>

1	1	lib/bb/ui/buildinfohelper.py

commit 624e67b0d142e5dac946ebb63bcfad0625b88799
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2015-03-16 12:19:56 +0000

    toaster: do not throw exception on misconfigured data
    
    We do not want to throw an exception while handling exceptions
    that may print information, so replace the exception throwing
    with returning data.
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>

1	1	lib/toaster/orm/models.py

commit 61f209db436344efa29fbbd34faaf3ba085c3ce3
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2015-03-13 17:32:34 +0000

    toastergui: builds and projects outcome filter
    
    This patch fixes the Outcome filter in the all builds and
    all projects pages in Build mode.
    
    [YOCTO #7450]
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>

2	2	lib/toaster/toastergui/views.py

commit 51c6e3edf074da6ebd8b347f13dc0f88b25c0111
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2015-03-13 17:13:25 +0000

    toastergui: fix machines page search
    
    This patch fixes the machine page search.
    
    [YOCTO #7407]
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>

6	4	lib/toaster/toastergui/views.py

commit 6b46f436296683f7a2f72ac978ef30d0a38ad7a4
Author: Belen Barros Pena <belen.barros.pena@intel.com>
Date:   2015-03-12 11:30:43 +0000

    toaster: display bitbake output after process start
    
    If the bitbake server exists after the initial process start,
    the only output displayed shows proper server start, with
    no debug info.
    
    This patch also brings the server log into the error message,
    so the user has better info about what's going on.
    
    Signed-off-by: Belen Barros Pena <belen.barros.pena@intel.com>

9	5	lib/toaster/bldcontrol/localhostbecontroller.py
7	5	lib/toaster/orm/models.py

commit 03e3286dcdc557a314c139b55b458d6fefcbc51c
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2015-03-12 14:44:56 +0000

    toaster: targets page performance improvement
    
    Yet another performance improvement, this time by forcing
    two-step evaluation instead of using subqueries to select data.
    
    This avoid using full-table lookups on un-indexed temporary
    tables.
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>

4	1	lib/toaster/toastergui/views.py

commit 3cd248f99b90367bd41aab81e255fc1912434890
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2015-03-12 12:44:05 +0000

    toasterui: improve info in the toaster_ui.log
    
    We improve logging and signalling of errors in the
    toaster_ui.log to facilitate debugging on remote systems.
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>

8	4	lib/bb/ui/buildinfohelper.py
8	0	lib/bb/ui/toasterui.py

commit 162d35ed53d34b28b153adf643044e7f105fcff1
Author: Robert Yang <liezhi.yang@windriver.com>
Date:   2015-03-18 22:27:36 -0700

    knotty.py: fix indent
    
    It used 5 spaces as the indent.
    
    Signed-off-by: Robert Yang <liezhi.yang@windriver.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

19	19	lib/bb/ui/knotty.py

commit 4b07195405b124ff39703e1ddc226dee420fed22
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2015-03-11 18:59:17 +0000

    toaster: Fix the orderkey to match the column
    
    If the orderkey doesn't map to the current sort value then when hiding
    the column the sort doesn't get removed.
    
    [YOCTO #7262]
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>

1	1	lib/toaster/toastergui/views.py

commit 0d305d0ae06f5e4a3e271147e7f87c33a20fdcb2
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2015-03-11 18:19:31 +0000

    toaster: projectconf fix typo of package name
    
    The package should be deb rather than dev.
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>

11	11	lib/toaster/toastergui/templates/projectconf.html

commit 220f5b853fd3236b49faa5ec54c9c96050a84fa9
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2015-03-11 14:33:50 +0000

    toastergui: replace ETA with percentage
    
    We replace the ETA (which was an inaccurate estimation)
    with the percentage of completed tasks.
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>

1	1	lib/toaster/toastergui/templates/managed_mrb_section.html
1	1	lib/toaster/toastergui/templates/project.html

commit 2824888196acc5cbe326b18148581472772ab21d
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2015-03-11 14:20:00 +0000

    toastergui: fix mrb Run again buttons
    
    The button for error-ed builds had invalid javascript markup,
    this patch fixes the buttons.
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>

2	3	lib/toaster/toastergui/templates/managed_mrb_section.html

commit 80476705f960a14bb8dc68c1d89460aeb6ca90c5
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2015-03-11 14:18:36 +0000

    toaster: localhost build increase timeout
    
    We increase the timeout for waiting bitbake to start
    for localhost builds.
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>

2	2	lib/toaster/bldcontrol/localhostbecontroller.py

commit 253d69e88fd68729196ad43c15e8733527d76198
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2015-03-11 14:17:21 +0000

    toasterui: relative recipe paths
    
    We modify the toasterui to log relative recipe paths
    in order to maintain consistency with data fetched from
    the layer sources.
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>

7	1	lib/bb/ui/buildinfohelper.py

commit 61b0f0e46a589af9d669e52d4cec656bbd0d0057
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2015-03-10 18:55:54 +0000

    toastergui: improve toaster suggestion
    
    Improving the suggestions by ordering entries
    based on position of the search string.
    
    Speed improvements in suggestion calls.
    
    [YOCTO #7152]
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>

20	8	lib/toaster/toastergui/views.py

commit 965e2a2cc32d196c9d595ea89c45a84bd46ba2fe
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2015-03-10 18:31:45 +0000

    toastergui: dirinfo needs path separation
    
    In the dirinfo URLs we use the "/" separator for directory
    separation which coincides with the "/" separator in HTTP URIs.
    
    This is not a problem, but we must not have consecutive "/"
    characters as the web servers will conflate those - we add
    a "_" delimitator to separate the Django managed URL from the
    dirpath parameter, while maintaining the unique ID of REST urls.
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>

1	1	lib/toaster/toastergui/urls.py

commit a1ad86febb9d8a4ee7f15aa726f267d64b8e0dc4
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2015-03-10 17:38:00 +0000

    toastergui: tables display optimizations
    
    This patch brings in a new set of optimizations in the tables pages,
    with the focus of reducing the number of SQL queries performed per
    row.
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>

22	18	lib/toaster/orm/models.py
1	1	lib/toaster/toastergui/templates/targets.html
10	4	lib/toaster/toastergui/views.py

commit bfd56aa653a1ec7f8777bcb5e627910c3a7ee35b
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2015-03-10 17:36:32 +0000

    toastergui: project app build command fix
    
    This patch fixes the build command in the angular
    project for builds triggered from All targets page.
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>

4	3	lib/toaster/toastergui/static/js/projectapp.js

commit b85bcc854264336c1aef1e5fd4ea9e56f5af94fd
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2015-03-10 16:20:47 +0000

    toastergui: update search fields
    
    We update the search fields for the machine suggestions
    and recipes tables.
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>

1	1	lib/toaster/orm/models.py
1	1	lib/toaster/toastergui/views.py

commit 22962b540ace6868cb357c0fd13f01ffd24449c4
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2015-03-04 15:52:01 +0000

    toasterui: identify proper layer in build mode
    
    In build mode, instead of creating our own layer objects,
    we identify the layer objects that the build system set up.
    
    [YOCTO #7378]
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>

18	5	lib/bb/ui/buildinfohelper.py
2	2	lib/toaster/bldcontrol/localhostbecontroller.py
2	8	lib/toaster/orm/models.py

commit 027e3b7c579e21b3164f2785578ae9905b4fb325
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2015-03-09 18:42:17 +0000

    toastergui: improve performance in the all targets page
    
    This patch improves performance in the all targets display
    by computing the preffered layer only for displayed targets,
    instead of computing for all targets.
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>

7	7	lib/toaster/toastergui/views.py

commit 02a4997807ee995817d741985eea13d38e548007
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2015-03-09 18:39:18 +0000

    toastergui: improve data suggestion
    
    We improve the data suggestions in the project page.
    
    The machines suggestions now contain the layer name.
    
    The targets and machine do not show the layer branch.
    
    For targets, the layer name is searchable.
    For machines, the description field is searchable.
    
    [YOCTO #7153]
    [YOCTO #7154]
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>

1	1	lib/toaster/toastergui/templates/project.html
8	6	lib/toaster/toastergui/views.py

commit bc838a6c075c4d7e24f7820088f485bbfdea5a32
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2015-03-09 17:24:05 +0000

    toastergui: fix project page layer branch names
    
    Change inconsistent branch name usage in project page to
    the uniquely defined get_vcs_reference()
    
    [YOCTO #7381]
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>

1	1	lib/toaster/toastergui/templates/project.html
2	2	lib/toaster/toastergui/views.py

commit de1a1504967b1c2df701f5b7496004f8cd68c407
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2015-03-09 17:08:53 +0000

    toastergui: suggestion in alphabetical order
    
    Patch bringing ordering in alphabetical order for
    targets, machines and layers suggestion in typeaheads.
    
    [YOCTO #7152]
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>

4	4	lib/toaster/toastergui/views.py

commit d37eaaa48a63a137ded25a14911c97a5ae861ff6
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2015-03-09 16:42:44 +0000

    toastergui: project page - consistent error display
    
    We modify the project page to provide a consistent view of the
    build errors. The display is now similar with the
    managed_mrb_section and links point to the buildrequest
    detail view.
    
    [YOCTO #7188]
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>

28	22	lib/toaster/toastergui/templates/project.html
4	1	lib/toaster/toastergui/views.py

commit e96fc0ccfc9f5be2c41c9733c92dc81df3df5065
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2015-03-16 10:35:10 +0000

    bitbake-layers: use stdout instead of stderr for logging
    
    We use logger.plain() to produce actual output which needs to go to
    stdout. We could use more advanced filtering (and probably should in
    future) but for the moment let's just fix the regression.
    
    Fixes [YOCTO #7458].
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	bin/bitbake-layers

commit dee0ba94e39ea49c1e9261a5e8932356e3bb7c57
Author: Rob Woolley <rob.woolley@windriver.com>
Date:   2015-02-27 09:32:23 -0500

    knotty: Do not log show_versions output
    
    Every time the bitbake show versions command (bitbake -s) is run it creates
    a 100k log file.
    
    The consolelogfile is disabled for show environment and disabling show
    versions would make the behaviour match.
    
    Signed-off-by: Rob Woolley <rob.woolley@windriver.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/ui/knotty.py

commit 146e7e157f97b676858ecff583dd53800d997253
Author: Rob Woolley <rob.woolley@windriver.com>
Date:   2015-02-27 09:32:22 -0500

    knotty: Catch exceptions on broken pipes
    
    Any exceptions that occur in calls to logging methods are automatically
    suppressed, including exceptions due to broken pipes.
    
    However, the knotty summary messages are printed directly to stdout, which
    means that any broken pipes will cause an exception traceback in python.
    
    By wrapping the summary section in a try / catch block we can check for
    IOError exceptions caused by broken pipes and let them pass.
    
    Signed-off-by: Rob Woolley <rob.woolley@windriver.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

24	19	lib/bb/ui/knotty.py

commit 0e0ba408c2dce14a0fabd3fdf61d8465a031495b
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2015-03-10 10:29:46 +0000

    cooker/server: Fix up 100% CPU usage at idle
    
    The recent inotify changes are causing a 100% cpu usage issue in the
    idle handlers. To avoid this, we update the idle functions to optionally
    report a float value which is the delay before the function needs to be
    called again. 1 second is fine for the inotify handler, in reality its
    more like 0.1s due to the default idle function sleep.
    
    This reverts performance regressions of 1.5 minutes on a kernel build
    and ~5-6 minutes on a image from scratch.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/cooker.py
3	0	lib/bb/server/process.py
3	0	lib/bb/server/xmlrpc.py

commit fbd4a0d422cf7f43db2f9eab2e47c41246a9031e
Author: Clemens Lang <clemens.lang@bmw-carit.de>
Date:   2015-03-06 15:28:54 +0100

    fetch2: Revalidate checksums, YOCTO #5571
    
    [YOCTO #5571] -- https://bugzilla.yoctoproject.org/show_bug.cgi?id=5571
    
    The following workflow (whether accidentally or deliberately) would
    previously not result in a checksum error, but would be helpful to do
    so:
     - Write a recipe with correct checksums
     - Fetch the sources for this recipe using bitbake
     - Change the checksums
    Since the bitbake fetcher writes a done stamp after the initial download
    and does not verify the checksums again (even if they are changed in the
    recipe afterwards), the change of checksums is silently ignored.
    
    Fix this without the overhead of computing the checksums from scratch on
    every do_fetch by storing them in pickled format in the done stamp and
    verifying that they still match those in the recipe.
    
    Signed-off-by: Clemens Lang <clemens.lang@bmw-carit.de>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

102	10	lib/bb/fetch2/__init__.py

commit d4ac60c41f1ee9a8c59f9ede5b0948303f793afa
Author: Dave Lerner <dave.lerner@windriver.com>
Date:   2015-03-05 17:01:55 -0600

    toaster: cached outcome download button
    
    When a task is executed successfully without using saved-state cache,
    then a button appears allowing the user to download the log file for
    that task.  This commit allows the user to download the log file for a
    task that is completed by unpacking data from the saved-state cache, a
    task with outcome 'Cached'.  The same button 'Download task log' is
    shown, which when pressed downloads the '_setscene' log file for that
    task.
    
    [YOCTO #7379]
    
    Signed-off-by: Dave Lerner <dave.lerner@windriver.com>

8	0	lib/toaster/toastergui/templates/task.html

commit 10e58867a0231c8039f6d2523b885b9ca7c7dff6
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2015-03-09 13:03:39 +0000

    toaster: projectapp.js - clear up jslint warnings
    
    This patch clears up jslint warnings for the project app,
    and improves file readability.
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>

100	81	lib/toaster/toastergui/static/js/projectapp.js

commit 93a1e05a5d6bd19e689126bfef0df8caa0d8bf34
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2015-03-03 16:18:24 +0000

    toaster: libtoaster Fix a few warnings picked up by jshint
    
    Fix warnings and items that do not conform to strict.
    Also add a fairly lenient jshintrc. usage: jshint js_file
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>

11	0	lib/toaster/toastergui/static/js/.jshintrc
40	39	lib/toaster/toastergui/static/js/libtoaster.js

commit 70c8d8f471653e6832d1bbc469914b7e59372c1b
Author: Belen Barros Pena <belen.barros.pena@intel.com>
Date:   2015-02-27 17:45:55 +0000

    toaterui: shorten the unavailable artifact message
    
    Make it slightly shorter, and separate the 'back' action
    so that is more visible and easier to hit.
    
    Signed-off-by: Belen Barros Pena <belen.barros.pena@intel.com>

4	6	lib/toaster/toastergui/templates/unavailable_artifact.html

commit da7c450f28cdf1c851b14f7a1fac08e6cf1dd894
Author: Belen Barros Pena <belen.barros.pena@intel.com>
Date:   2015-02-27 17:29:04 +0000

    toasterui: give some space to the download log button
    
    In the build dashboard, the download build log button was
    a bit too close to the build time.
    
    Signed-off-by: Belen Barros Pena <belen.barros.pena@intel.com>

1	0	lib/toaster/toastergui/static/css/default.css
2	2	lib/toaster/toastergui/templates/builddashboard.html

commit c78a19ecd2b397ccce59c1f6b852953b04afd37a
Author: Belen Barros Pena <belen.barros.pena@intel.com>
Date:   2015-02-27 17:17:32 +0000

    toasterui: apply correct class to latest builds targets
    
    Failed builds were showing the target name with the .success
    class applied (cognitive disonance, anyone?).
    
    Signed-off-by: Belen Barros Pena <belen.barros.pena@intel.com>

5	1	lib/toaster/toastergui/templates/project.html

commit df8bdd357b126a0436c15cf66a13d398df273867
Author: Belen Barros Pena <belen.barros.pena@intel.com>
Date:   2015-02-27 15:12:57 +0000

    toasterui: fix the h1 in the project builds page
    
    It was not displaying the number of search results.
    
    Signed-off-by: Belen Barros Pena <belen.barros.pena@intel.com>
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>

12	14	lib/toaster/toastergui/templates/projectbuilds.html

commit 45d3c27e68149bce089551539f6bbdaef98b7896
Author: Belen Barros Pena <belen.barros.pena@intel.com>
Date:   2015-02-27 14:53:07 +0000

    toasterui: don't open layer details in a new tab
    
    In the project page, the project layer links were opening
    in a new tab. They should not do that.
    
    Signed-off-by: Belen Barros Pena <belen.barros.pena@intel.com>

1	1	lib/toaster/toastergui/templates/project.html

commit 4590cfcb2d5e26518e04f8abc8e7c2dad973f6d2
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2015-03-02 15:00:49 +0000

    toaster: Enforce unique layer names
    
    We had some clever functionality to manage duplicate layer names by
    using layer versions and new revisions, unfortunately this was too
    opaque to the user.
    
    [YOCTO #7337]
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>

40	54	lib/toaster/toastergui/static/js/importlayer.js
34	5	lib/toaster/toastergui/templates/importlayer.html
8	3	lib/toaster/toastergui/views.py

commit 507d2a36e53ba2c1f49616d52e4700f6c1bca8fd
Author: Dave Lerner <dave.lerner@windriver.com>
Date:   2015-02-25 14:53:22 -0600

    toaster: commit id format on layers page
    
    On the layers page, when a layer revision is a commit id instead of a
    an upstream branch name, then follow the same format for displaying the
    commit id as on the recipes page.  That format is a button with the
    truncated commit SHAID which when pressed expands to the full SHAID.
    
    [YOCTO #7191]
    
    Signed-off-by: Dave Lerner <dave.lerner@windriver.com>
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>

9	6	lib/toaster/toastergui/templates/layers.html
12	0	lib/toaster/toastergui/templatetags/projecttags.py

commit 73afee5ddb2e89dcec65854639b19b8860232d89
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2015-03-09 11:57:08 +0000

    toastergui: bring back base URLs for pages that need them
    
    Some URLs, although invalid on their own, are used in JS to
    build valid page pointers. Previous patch removed two of these URLs,
    breaking the display of several patches.
    
    This patch re-adds these URLs with different names, and returns
    400 Bad Request empty pages on them, which is consistent with the
    intended usage of these URLs.
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>

1	1	lib/toaster/toastergui/templates/base.html
1	1	lib/toaster/toastergui/templates/importlayer.html
1	1	lib/toaster/toastergui/templates/layerdetails.html
1	1	lib/toaster/toastergui/templates/project.html
4	0	lib/toaster/toastergui/urls.py

commit 76c54a79c4e26cefa5e72ca1cb14bc9d46e8f9dd
Author: David Reyna <David.Reyna@windriver.com>
Date:   2015-02-27 00:47:32 -0800

    toaster: reconcile non-manage-mode landing classes
    
    Remove obsolete manage-mode URLs, fix not-manage mode landing classes that have
    obsolete non-matching parameter lists, remove orphaned landing classes..
    
    [YOCTO #6483]
    
    Signed-off-by: David Reyna <David.Reyna@windriver.com>

0	2	lib/toaster/toastergui/urls.py
5	8	lib/toaster/toastergui/views.py

commit 1f9aaa7747351f7b0063f80c56cf7fa2c9cc3cf9
Author: David Reyna <David.Reyna@windriver.com>
Date:   2015-02-26 19:46:23 -0800

    toaster: hide special code for core vars not present, disable add button
    
    Hide the special config variable management sections when the respective
    variables are not present. Disable the variable add button after a
    variable is added so that blank values cannot be added, and also when a
    variable name managed in the project detail page (e.g. BBLAYERS and MACHINE)
    is entered.
    
    [YOCTO #7246]
    [YOCTO #7371]
    
    Signed-off-by: David Reyna <David.Reyna@windriver.com>

70	11	lib/toaster/toastergui/templates/projectconf.html
22	4	lib/toaster/toastergui/views.py

commit 8a3095a33551a96176fdff83ea33cda5b30311dd
Author: Dave Lerner <dave.lerner@windriver.com>
Date:   2015-02-26 14:29:23 -0600

    toaster: layer rev tooltip only if necessary
    
    On the heading for the layer detail page, only show a tool tip on the
    heading revision branch/shaid field if the string is too large to fit
    in the 13 character field. That is, don't show a hovering tool tip
    with exactly the same string that is shown without the tip.
    
    [YOCTO #7312]
    
    Signed-off-by: Dave Lerner <dave.lerner@windriver.com>

5	1	lib/toaster/toastergui/templates/layerdetails.html

commit 6cb9e853d05c2c71467af22ef459ffbe6f41de36
Author: Dave Lerner <dave.lerner@windriver.com>
Date:   2015-02-24 16:14:41 -0600

    toaster: add sort, search, paging to recipe package page
    
    When selecting the packages tab on a recipe detail page, the page now
    includes:
        column sort on package name and size columns,
        search on the package name, and
        pagination.
    
    Column sort is added by splitting the recipe view/html for a recipe's
    package list into a new url path, view name and template, so that
    the sorting routine, views.reload_params(), interfaces similar to other
    views.
    
    Search, sorting,  and pagination are implemented for this detail page
    using three new templates.
      templates/detail_pagination_bottom.html
      templates/detail_search_header.html
      templates/detail_sorted_header.html
    
    views.recipe() is optimized since the recipe's package list is no
    longer needed by the recipe template, only the recipe's package count
    is required for the first page.
    
    The recipe view and template also changes to support tabbing to the
    right context on the recipe detail page from the recipe-package page.
    
    [YOCTO #6154]
    
    Signed-off-by: Dave Lerner <dave.lerner@windriver.com>

60	0	lib/toaster/toastergui/templates/detail_pagination_bottom.html
68	0	lib/toaster/toastergui/templates/detail_search_header.html
25	0	lib/toaster/toastergui/templates/detail_sorted_header.html
8	44	lib/toaster/toastergui/templates/recipe.html
123	0	lib/toaster/toastergui/templates/recipe_packages.html
2	0	lib/toaster/toastergui/urls.py
56	4	lib/toaster/toastergui/views.py

commit 48d0d510816346073f135bb86fb7904fdb50bb27
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2015-03-09 11:23:47 +0000

    toaster: models.py do not use transactions
    
    This is the counterpart patch of
            do not use transactions if the database autocommits
    
    fix on toasterui, applied to models.py
    
    [YOCTO #7402]
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>

23	11	lib/toaster/orm/models.py

commit e7c9a6788d969c901fd6394416ac3936e62c4c72
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2015-03-06 15:42:03 +0000

    xmlrpc server: delete function on errors
    
    This patch makes sure to delete an idle function that
    raises an exception for the xmlrpc server.
    
    The counterpart functionality in the process server was
    added with:
    
    commit db50630948394bdcd361f3511af40c1896b1a017.
    duthor: Richard Purdie <richard.purdie@linuxfoundation.org>
    Date:   Wed Aug 20 22:31:06 2014 +0000
    
        bitbake: process: Deal with infinite looping of the server
    
    This patch fixes
    
    [YOCTO #7316]
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>

4	0	lib/bb/server/xmlrpc.py

commit 0b66b05169688aa4ddc4c54d175bb961b2f27fec
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2015-03-06 15:37:25 +0000

    cooker: make sure state is properly used to accept clients
    
    This patch fixes a bug where if the build is force stopped,
    subsequent clients cannot connect to the server due to
    unnecessary limits on setFeature.
    
    Additionally, we make sure that the state is properly reset
    even if the BuildCompleted event firing excepts for some reason.
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>

3	3	lib/bb/cooker.py

commit 4e4a2ee2f05f8741b2e09263e328420363975b02
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2015-03-06 14:47:28 +0000

    xmlrpcserver: do not connect client on error
    
    We roll back the client connection if some error happens,
    like during setFeatures, as to leave the server accessible
    to other clients.
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>

2	0	lib/bb/server/xmlrpc.py

commit 8fda1b66e695ccdf98ae1c34a0bd655be2878188
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2015-03-05 16:33:53 +0000

    toaster: delete test data
    
    Toaster used a test fixture to verify page rendering
    on known data.
    
    This fixture is outdated due to changes in the data structure,
    and we remove it to avoid confusions about its usage.
    
    The tests using this data are now disabled.
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>

4	1	lib/toaster/bldviewer/tests.py
0	140835	lib/toaster/orm/fixtures/orm_views_testdata.json

commit 996e663fd5c254292f44eca46f5fdc95af897f98
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2015-02-23 19:24:58 +0000

    cooker: read file watches on server idle
    
    The inotify facility monitoring changes to the config files
    could be overwhelmed by massive changes to the watched files
    while server is running.
    
    This patch adds verification the notification watches to the
    server idle functions, in addition to the cooker updateCache
    command which executes only infrequently, thus preventing
    overflowing the notification buffer.
    
    [YOCTO #7316]
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>

23	7	lib/bb/cooker.py

commit baec2940c2b4ec792cacad5cc8d8056d9162919b
Author: David Reyna <David.Reyna@windriver.com>
Date:   2015-02-26 21:42:01 +0000

    toaster: config var layout fixes
    
    Block duplicates of custom variables regardless of case, fix spacing of
    delete icon, no extra error msg on blank DISTRO name
    
    [YOCTO #7359]
    
    Signed-off-by: David Reyna <David.Reyna@windriver.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/toaster/toastergui/static/css/default.css
11	11	lib/toaster/toastergui/templates/projectconf.html

commit cc6ca17e80844ecb4a777276d5f5177ebbcd93f9
Author: David Reyna <David.Reyna@windriver.com>
Date:   2015-02-26 21:42:00 +0000

    toaster: all projects data and sorts
    
    Implement the 'last build' data methods, enhance variable display,
    add empty page and empty sort support.
    
    [YOCTO #6682]
    
    Signed-off-by: David Reyna <David.Reyna@windriver.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/toaster/bldcontrol/models.py
63	0	lib/toaster/orm/models.py
12	10	lib/toaster/toastergui/templates/managed_builds.html
48	12	lib/toaster/toastergui/templates/projects.html
66	31	lib/toaster/toastergui/views.py

commit 6b2403992f1f5f84114ec9b243813957ff907051
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2015-02-26 21:41:59 +0000

    toastergui: add csrf tokens for AJAX calls
    
    This patch adds CSRF tokens in pages using AJAX calls in
    order to force Django to generate the CSRF cookie used to
    authenticate the call.
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	0	lib/toaster/toastergui/templates/layers.html
1	0	lib/toaster/toastergui/templates/managed_mrb_section.html
1	0	lib/toaster/toastergui/templates/projectconf.html
1	0	lib/toaster/toastergui/templates/targets.html

commit 90231ab63a129fa344d461c2911898ea0f07f206
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2015-02-26 21:41:58 +0000

    toasterui: do not use transactions if the database autocommits
    
    Some databases, notably the SQLite3 adapter, force autocommits even if
    the autocommit is turned off. The behavious is tracked in this bug:
    http://bugs.python.org/issue8145#msg109965
    
    Django refuses to work with autocommit off in this case, so we have
    to take the same precautions when using manual transaction support.
    
    [YOCTO #7363]
    [YOCTO #7365]
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

12	8	lib/bb/ui/buildinfohelper.py

commit 09171a892935d46ed32162b2d0f4a536c546facc
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2015-02-26 21:41:57 +0000

    toaster: order layers with same priority
    
    When we have multiple layers with the same priority, we
    need to order them by date, newest first. The layer version
    ID is a complete ordering by recent-ness, so it is suitable.
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/toaster/orm/models.py

commit 8a326a9a5a08981f1b7960e02fdb8a9436db16fb
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2015-02-26 21:41:56 +0000

    toasterui: fix sstate task identification
    
    This patch fixes a problem where set sstate scene tasks
    were not identified, causing cache attempt not being recorded.
    
    [YOCTO #7223]
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	2	lib/bb/ui/buildinfohelper.py
4	9	lib/toaster/orm/models.py

commit 06294c5d3b512fb849fc1eedc9d5ea344f535bec
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2015-02-26 21:41:55 +0000

    toastergui: stop covered task graph traversal early
    
    This patch stops the breadth-frist graph traversal for
    finding covering tasks after the finding the first level
    of executed tasks.
    
    The reasoning is that the first level of executed tasks is the
    actually relevent information on how a task was covered.
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	4	lib/toaster/toastergui/views.py

commit f1b794e6abba5c7cdda49666a7ff27db7dd6ea72
Author: Belen Barros Pena <belen.barros.pena@intel.com>
Date:   2015-02-26 21:41:54 +0000

    toaster: fix typo in models.py
    
    The typo caused the tasks table to break when a task has no
    help text.
    
    Signed-off-by: Belen Barros Pena <belen.barros.pena@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/toaster/orm/models.py

commit 7182cdd3c4a534a87147bb0aad7b360ffef6426b
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2015-02-25 15:29:58 +0000

    bitbake-layers: fix wildcard support in remove-layer
    
    The recent refactoring caused use of wildcards to trigger a traceback
    because the old variable name was being used.
    
    Fixes [YOCTO #7367].
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	bin/bitbake-layers

commit 8a5c83c953c1e541704fe979e90d9d3be66e9ffd
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2015-02-24 17:21:00 +0000

    toasterui: fix ETA calculation
    
    This patch fixes the ETA calculation.
    
    [YOCTO 7349]
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/toaster/orm/models.py

commit bc76da054570ae385c87d14c9f2337368e8311f3
Author: Alexandru Damian <alexandru.damian@intel.com>
Date:   2015-02-24 17:20:58 +0000

    toastergui: performance improvements in task details page
    
    This patch brings better forward and reverse dependency computing in
    tasks page (offloading python code to the database), as well as
    replacing the recursive depth-first covered-by tree search with
    breadth-first search.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	0	lib/toaster/orm/models.py
21	19	lib/toaster/toastergui/views.py

commit 3978c819e797f857235499a4b8ec238134f1c028
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2015-02-24 17:20:57 +0000

    toasterui: disable autocommit for build logging
    
    This patch disables autocommit for inserting build data,
    effectively updating all build data in a single transaction.
    
    This is a purely performance improvement patch, as the transaction
    will always be commited.
    
    Similar manual transaction handling in the layer source update
    method. Added feedback messages during update method.
    
    [YOCTO #7140]
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

11	0	lib/bb/ui/buildinfohelper.py
17	1	lib/toaster/orm/models.py

commit 8640769296c3fffa2cf56cfb5327ca24533f5a41
Author: Alexandru Damian <alexandru.damian@intel.com>
Date:   2015-02-24 17:20:56 +0000

    toaster: update requirement for Django 1.6
    
    In order to bring in transaction.set_commit support,
    we need Django 1.6, discarding support for Django 1.5
    
    This patch removes 1.5 from the list of acceptable Django
    versions.
    
    Signed-off-by: Alexandru Damian <alexandru.damian@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	2	bin/toaster

commit 0825f1a74b3767aad67674ab5044075c90067377
Author: Belen Barros Pena <belen.barros.pena@intel.com>
Date:   2015-02-24 17:20:55 +0000

    toasterui: improving the latest builds consistency
    
    We have 2 pages where we have a 'latest builds' section:
    the 'all builds / all projects' page and the 'project'
    page. Unfortunately, we are currently using different
    code base in both, which means that some inconsistencies
    between the two in behaviour and presentation have sneaked
    in.
    
    This patch addresses some of such inconsistencies.
    
    Signed-off-by: Belen Barros Pena <belen.barros.pena@intel.com>
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	0	lib/toaster/toastergui/static/css/default.css
16	11	lib/toaster/toastergui/templates/managed_mrb_section.html
5	5	lib/toaster/toastergui/templates/project.html

commit fa5343cf867586c0e42517dd2ed0ec5a4c28c408
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2015-02-24 17:20:54 +0000

    toaster: Add machine selection notification
    
    This adds a notification to the project page to notify users of the
    change in project configuration.
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

6	0	lib/toaster/toastergui/static/css/default.css
1	1	lib/toaster/toastergui/static/js/layerdetails.js
1	2	lib/toaster/toastergui/static/js/machines.js
9	0	lib/toaster/toastergui/static/js/projectapp.js

commit 5de46fabe9ab1e525048353c2ecd8846ffefc760
Author: Belen Barros Pena <belen.barros.pena@intel.com>
Date:   2015-02-24 17:20:53 +0000

    toasterui: style the Toaster version information
    
    When debugging is turned on, we show some Toaster version
    information in the top bar. Present it so that it can
    be easily copied and pasted.
    
    Signed-off-by: Belen Barros Pena <belen.barros.pena@intel.com>
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	1	lib/toaster/toastergui/static/css/default.css
3	0	lib/toaster/toastergui/static/js/libtoaster.js
1	1	lib/toaster/toastergui/templates/base.html
4	3	lib/toaster/toastergui/views.py
2	2	lib/toaster/toastermain/settings.py

commit 0b35eed7ca758476f20d6875291ee31fad35b7d3
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2015-02-24 17:20:52 +0000

    toaster: layerdetails Fix pagination controls
    
    Bring the pagination controls into line with others in toaster by
    limiting the number of page buttons to 5
    
    [YOCTO #7195]
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	2	lib/toaster/toastergui/templates/layerdetails.html
2	18	lib/toaster/toastergui/views.py

commit 8c4e5fb580f5e375ccb1e84d8adb9562d1ba4b62
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2015-02-24 17:20:51 +0000

    toaster: layerdetails Add link to machines file
    
    In the machines table for a layer add a link/icon to the machine
    definition file.
    
    [YOCTO #7241]
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

6	1	lib/toaster/toastergui/templates/layerdetails.html

commit 1a1a61f587e05af76299c7e1d3b7ab079fb4b1c1
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2015-02-24 17:20:50 +0000

    toaster: layerdetails summary/descriptions to be searchable
    
    Allow the descriptions of the machine summary and layer description to
    be searchable in their respective tables.
    
    [YOCTO #7199]
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/toaster/toastergui/templates/layerdetails.html
25	17	lib/toaster/toastergui/views.py

commit 219d57d1cec178820f679a4153324986c37821db
Author: Belen Barros Pena <belen.barros.pena@intel.com>
Date:   2015-02-24 17:20:49 +0000

    toastergui: fix spacing and input field sizes
    
    The revision label was missing the projec-form class (which
    controls the spacing in the form), and the revision text
    field was a bit too long, so changed it from span4 to
    span3.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	2	lib/toaster/toastergui/templates/importlayer.html

commit 4b8fcf9a5bc802793bf332334217faace55f14f6
Author: Chong Lu <Chong.Lu@windriver.com>
Date:   2015-02-20 17:52:43 +0000

    bitbake-layers: add ability to fetch layers and their dependencies from layer index
    
    Add a command to query layer dependencies from a layer index such as the
    OpenEmbedded Layer Index at http://layers.openembedded.org. Fetches the
    layer and its dependencies and adds them into conf/bblayers.conf.
    
    [YOCTO #5348]
    
    Signed-off-by: Chong Lu <Chong.Lu@windriver.com>
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

252	0	bin/bitbake-layers

commit 62b825b19b13a914cbff5303d541bd5dbbec90a7
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2015-02-20 17:52:42 +0000

    bitbake-layers: fix logging
    
    Logging output was simply not getting printed.
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

12	2	bin/bitbake-layers

commit 6e2f09b58882d3949026b9dd545f789ad3fe6fab
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2015-02-20 17:52:41 +0000

    bitbake-layers: refactor to use argparse instead of cmd
    
    This makes help formatting and option handling a lot more standardised
    and allows us to drop a bunch of code. We also gain slightly more
    straightforward error handling.
    
    One side-effect however is that the old subcommand syntax using
    underscores is no longer supported. The dashed form has been supported
    (and displayed in the help text) for quite a while now so I wouldn't
    imagine that will be much of an issue.
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

110	151	bin/bitbake-layers

commit 605298ff3ce919127003dadef95798472327f943
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2015-02-18 15:18:51 +0000

    toaster: importlayer Remove description input field
    
    This wasn't required or working due to a typo and adds ambiguity between
    the summary and description. The correct method for changing the description
    or summary is via the layerdetails page.
    
    [YOCTO #7190]
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>

0	1	lib/toaster/toastergui/static/js/importlayer.js
0	6	lib/toaster/toastergui/templates/importlayer.html
0	3	lib/toaster/toastergui/views.py

commit 1eaf60d0fe34f5f43386c6f0e91f0b26c7a62845
Author: Belen Barros Pena <belen.barros.pena@intel.com>
Date:   2015-02-16 16:49:40 +0000

    toasterui: remove layer directory in managed mode
    
    Removes the layer directory information from the packages
    built page when in managed mode.
    
    [YOCTO #7221]
    
    Signed-off-by: Belen Barros Pena <belen.barros.pena@intel.com>

3	1	lib/toaster/toastergui/templates/bpackage.html
10	4	lib/toaster/toastergui/views.py

commit 8365f19191d0ec5901c79b7afd5005f7a546fe74
Author: Belen Barros Pena <belen.barros.pena@intel.com>
Date:   2015-02-16 17:52:51 +0000

    toasterui: style the Toaster version information
    
    In debug mode, we show the Toaster version and mode in the
    top bar. Display them inside a tooltip that appears when
    you hover over a nice info icon to make them less conspicuous.
    
    Signed-off-by: Belen Barros Pena <belen.barros.pena@intel.com>

4	18	lib/toaster/toastergui/static/css/default.css
6	7	lib/toaster/toastergui/templates/base.html

commit 34397e585df0fc04ea53046347856e8cddb8f8e1
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2015-02-18 15:09:44 +0000

    toaster: layerdetails Don't show None type in description/summary
    
    When the result for the summary or description is None don't output the
    result as the string version of None, use an empty value so that the
    "Not set" mechanism works.
    
    [YOCTO #7244]
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>

2	2	lib/toaster/toastergui/templates/layerdetails.html

commit 6618a0a71cc9ea5426238549094ab9e05ae61649
Author: David Reyna <David.Reyna@windriver.com>
Date:   2015-02-17 21:54:15 -0800

    toaster: landing page when no build module
    
    Add landing page for managed build pages when build module not installed.
    
    Some wording and whitespace changed.
    
    [YOCTO #6483]
    
    Signed-off-by: David Reyna <David.Reyna@windriver.com>
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>

32	0	lib/toaster/toastergui/templates/landing_not_managed.html
21	21	lib/toaster/toastergui/views.py

commit 5cc87ee0ac3b2bd399e7f009dda9d6de87209a27
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2015-02-18 18:28:18 +0000

    toaster: get proper version string
    
    This patch brings in the toaster tree commit ID in
    the version string to allow users properly report their
    toaster version when submitting issues.
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>

2	1	lib/toaster/toastermain/settings.py

commit eefdae12120f879b555ba0a353277a18675eecbc
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2015-02-17 17:24:29 +0000

    toasterui: UI query performance improvements
    
    We reduce the number of queries by using "select_related"
    to bring in more data in a single query. Improvements in
    project page refresh, recipes table and tasks table.
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>

7	4	lib/toaster/orm/models.py
9	6	lib/toaster/toastergui/views.py

commit 5fecfda0e47c2ecba9b7c903c6d258eefa431aa0
Author: Alexandru Damian <alexandru.damian@intel.com>
Date:   2015-02-17 15:02:26 +0000

    toasterui: fix time estimation in project page
    
    This patch fixes the time estimation to build completion
    in project page. Additionally it fixes the Most Recent Builds
    section used in various pages in managed mode, and proper
    time to build estimation in all pages.
    
    [YOCTO #7004]
    
    Signed-off-by: Alexandru Damian <alexandru.damian@intel.com>

1	1	lib/toaster/orm/models.py
21	3	lib/toaster/toastergui/static/js/projectapp.js
1	2	lib/toaster/toastergui/templates/managed_mrb_section.html
1	1	lib/toaster/toastergui/templates/project.html

commit 6da36cbf5eeb30b8352c22aed3e0ede35705e13c
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2015-02-17 12:57:29 +0000

    toaster: properly detect starting in rolling log file
    
    This patch brings in properly detection of system start in
    a rolling toaster_ui log file.
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>

10	2	lib/toaster/bldcontrol/localhostbecontroller.py

commit fad80e36c9da663b000cdf2cb3c75440c6431d84
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2015-02-16 17:47:07 +0000

    toaster: bitbake cooker log saving and downloading
    
    This patch brings in cooker log saving and proper download links.
    
    * toasterui will now write the cooker log file if running in managed
    mode
    * the BuildRequest has a new state, REQ_ARCHIVE, indicating that the
    build is completed, and the artifacts are ready to be grabbed
    * the runbuild test execution commands will gather needed artifacts,
    and save them to a storage directory selected during Toaster setup.
    * the build dashboard, project builds and all builds pages have
    permanent links for the cooker log
    
    [YOCTO #7220]
    [YOCTO #7206]
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>

2	1	lib/bb/ui/buildinfohelper.py
27	2	lib/bb/ui/toasterui.py
17	0	lib/toaster/bldcontrol/management/commands/checksettings.py
28	1	lib/toaster/bldcontrol/management/commands/runbuilds.py
138	0	lib/toaster/bldcontrol/migrations/0008_brarchive.py
2	0	lib/toaster/bldcontrol/models.py
3	6	lib/toaster/toastergui/templates/build.html
6	5	lib/toaster/toastergui/templates/builddashboard.html
8	1	lib/toaster/toastergui/templates/managed_builds.html
8	6	lib/toaster/toastergui/templates/projectbuilds.html
17	0	lib/toaster/toastergui/templates/unavailable_artifact.html
76	18	lib/toaster/toastergui/views.py
3	3	lib/toaster/toastermain/urls.py

commit 7cfe279bf77b59d5cbd20d8a93e1d33279bebc20
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2015-02-13 13:08:26 +0000

    toasterui: empty state for pages
    
    Toaster needs to properly prompt the user and display
    actionable help texts when the database is void of
    meaningful information. This patch brings in the
    "empty" states for pages.
    
    [YOCTO #6755]
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>

6	2	lib/toaster/orm/models.py
-	-	lib/toaster/toastergui/static/img/toaster_1.7.png
50	5	lib/toaster/toastergui/templates/landing.html
19	10	lib/toaster/toastergui/templates/machines.html
6	0	lib/toaster/toastergui/templates/managed_builds.html
2	3	lib/toaster/toastergui/templates/managed_mrb_section.html
14	0	lib/toaster/toastergui/templates/project.html
10	3	lib/toaster/toastergui/templates/projectbuilds.html
1	1	lib/toaster/toastergui/templates/projectconf.html
12	0	lib/toaster/toastergui/templates/targets.html
15	5	lib/toaster/toastergui/views.py

commit 7c862ae4e3c3a00f2b37c2272007ce64304359bd
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2015-02-12 15:47:34 +0000

    toaster: Set the machines page default pagesize to 100
    
    This brings it into line with the all layers and targets pages
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>

2	1	lib/toaster/toastergui/views.py

commit ca5124d48d306921ac0f0499762ea5867644b0ef
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2015-02-12 15:45:52 +0000

    toaster: Remove filtering from layers,machines and targets
    
    The filter counts are unreliable so for consistency the filter feature
    here is removed.
    
    [YOCTO #7060]
    [YOCTO #7052]
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>

2	59	lib/toaster/toastergui/views.py

commit 7fee378849c9518a4560aa5be65fca9644c03048
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2015-02-12 15:08:24 +0000

    toaster: Remove Layer source from machines, layers and targets
    
    From the bug: The layer source reveals too much of the implementation model,
    without explaining what is going on behind the scenes. It will confuse more
    than inform, so let's get rid of it.
    
    [YOCTO #7302]
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>

0	1	lib/toaster/toastergui/templates/layers.html
0	1	lib/toaster/toastergui/templates/machines.html
0	1	lib/toaster/toastergui/templates/targets.html
0	37	lib/toaster/toastergui/views.py

commit d753db7a18eb9218016e586171d2a08298a0b05d
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2015-02-06 19:22:49 +0000

    toaster: New build button allow arbitrary build targets
    
    Target input field needed to support both selecting suggestions and
    typing targets, since Toaster doesn't always know about all the targets
    provided by the layers in the project.
    
    [YOCTO #7187]
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>

2	0	lib/toaster/toastergui/static/js/base.js

commit 58f19f1c3128c303fb8e5338c01f575418dc0b15
Author: David Reyna <David.Reyna@windriver.com>
Date:   2015-02-12 03:40:53 -0800

    toaster: Additional fixes for the project variable page
    
    Fix IMAGE_FSTYPES, IMAGE_INSTALL_append, and DISTRO editing management, plus other usability details.
    
    [YOCTO #7231]
    
    Signed-off-by: David Reyna <David.Reyna@windriver.com>
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>

182	68	lib/toaster/toastergui/templates/projectconf.html
28	14	lib/toaster/toastergui/views.py

commit fa6e6d5b18c8c6231ae8ac499d332298f551fd7d
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2015-02-13 15:53:34 +0000

    toaster: layerdetails use new vcs reference api
    
    Use the new layer_version api so that we return the vcs reference whether
    that be the commit hash, branch name or the upstream branch to which the
    layer is associated with.
    
    [YOCTO #7192]
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>

6	7	lib/toaster/toastergui/templates/layerdetails.html

commit 25640851c8f8459741d2c423b2bb54f9f59a536a
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2015-02-13 10:22:35 +0000

    toaster: fix git checkout command
    
    This patch fixes the git checkout command that would fail to
    properly rebase the working tree in some cases.
    
    [YOCTO #7309]
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>

1	1	lib/toaster/bldcontrol/localhostbecontroller.py

commit 7f47b67bccff55673a827dbcccc767af4459c933
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2015-02-10 16:25:17 +0000

    toaster: properly detect failed server start
    
    This patch brings in reading the server log if the server
    fails to start. This is the first step in displaying the errors
    in a manner that is actionable by the user.
    
    [YOCTO #7285]
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>

4	1	lib/toaster/bldcontrol/localhostbecontroller.py
9	3	lib/toaster/bldcontrol/management/commands/runbuilds.py

commit 2060be8d31baa0cd302aa8dc0b6d179df853ee99
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2015-02-06 19:18:19 +0000

    toaster: Use on input event for validation rather than keyup
    
    Avoid using keyup event to trigger form validation as this won't fire
    for events such as pasting or autofill from the browser.
    
    [YOCTO #7292]
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>

2	2	lib/toaster/toastergui/static/js/base.js
3	3	lib/toaster/toastergui/static/js/importlayer.js
1	1	lib/toaster/toastergui/static/js/layerdetails.js
1	1	lib/toaster/toastergui/templates/newproject.html
4	4	lib/toaster/toastergui/templates/projectconf.html

commit 2e4a03db967ac1459b2764108fc54c4566a7e371
Author: Aníbal Limón <anibal.limon@linux.intel.com>
Date:   2015-02-13 15:58:14 -0600

    tests/fetch.py: latest_versionstring add set of PN
    
    Add set of PN in data because now latest_versionstring use it for
    validate version directory searching.
    
    Signed-off-by: Aníbal Limón <anibal.limon@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	0	lib/bb/tests/fetch.py

commit 8fa43245351f3ec0a5007b2742c08b7ef98e7879
Author: Aníbal Limón <anibal.limon@linux.intel.com>
Date:   2015-02-13 15:58:13 -0600

    fetch2: wget remove scape of - in regexes don't needed
    
    Signed-off-by: Aníbal Limón <anibal.limon@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

9	9	lib/bb/fetch2/wget.py

commit 63a9e60a6d80cfd2693ec1a6359785dc19f98e1f
Author: Aníbal Limón <anibal.limon@linux.intel.com>
Date:   2015-02-13 15:58:12 -0600

    fetch2: wget _modelate_version improvments
    
    Fix sustition for rc, beta and alpha releses from -N to N weight.
    
    Signed-off-by: Aníbal Limón <anibal.limon@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	3	lib/bb/fetch2/wget.py

commit 1a75b3707743c32eec9d2cf566fb6bbea9f73784
Author: Aníbal Limón <anibal.limon@linux.intel.com>
Date:   2015-02-13 15:58:11 -0600

    fetch2: wget latest_versionstring improvments in get version by dir
    
    Add support for scan every version directory using _check_latest_version
    makes code more robust because sometimes upstream projects publish
    new directories without files, causing don't find version.
    
    To support this new behaviour remove _check_latest_dir and replace for
    _check_latest_version_by_dir,
    
    Signed-off-by: Aníbal Limón <anibal.limon@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

37	71	lib/bb/fetch2/wget.py

commit 5f7c5eb218a221165f59a0f4dd48d2d97f756193
Author: Aníbal Limón <anibal.limon@linux.intel.com>
Date:   2015-02-13 15:58:10 -0600

    fetch2: wget add _check_latest_version_by_dir
    
    Add _check_latest_version_by_dir this function provides support
    for scan every directory newer than current dir in order to get
    latest_versionstring, example:
    
            http://somedoamin.com/project/v2.1/
            http://somedoamin.com/project/v3.0/
    
    Change return of _vercmp from True/False to -1/0/1 to provide test
    when current directory is equal to newer directory this helps to
    scan the same directory to get minor versions, example:
    
            http://somedoamin.com/project/v2.1/project-v2.1.2.tgz
            http://somedoamin.com/project/v2.1/project-v2.1.6.tgz
    
    Signed-off-by: Aníbal Limón <anibal.limon@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

46	6	lib/bb/fetch2/wget.py

commit e7284e3ad0e7dd91ed59dfbf8450ef62e89c7e54
Author: Aníbal Limón <anibal.limon@linux.intel.com>
Date:   2015-02-13 15:58:09 -0600

    fetch2: wget latest_versionstring _check_latest_version improvments
    
    In order to reduce code duplication now compile package_regex in
    _init_regexes instead of make this decision at _check_latest_version,
    
    Signed-off-by: Aníbal Limón <anibal.limon@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

25	26	lib/bb/fetch2/wget.py

commit 1127af5b8c458929c4685b0326f86870ed09442e
Author: Aníbal Limón <anibal.limon@linux.intel.com>
Date:   2015-02-13 15:58:08 -0600

    fetch2: wget latest_versionstring improve _parse_path
    
    Add support for get group only if exist in regex, this enables to use
    this function in _check_latestversion regardless if the regex is generic
    or specified by REGEX_URI.
    
    Signed-off-by: Aníbal Limón <anibal.limon@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

24	20	lib/bb/fetch2/wget.py

commit 408be9cdf2b1e32e64ea488d8051a546fb54c144
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2015-02-10 18:13:25 +0000

    cooker: rework LAYERDEPENDS versioning so that it is actually useful
    
    We've had versioned dependency support in LAYERDEPENDS for quite a long
    time, but I can say with pretty good certainty that almost nobody has
    used it up to now because it was too strict - the specified version had
    to exactly match the version in your configuration or you would get an
    error; there was no "greater than or equal" option, which is usually
    what you will want given that LAYERVERSION does get bumped from time to
    time.
    
    However, users mismatching layer branches and then having their builds
    fail later on with some incomprehensible error is still a pretty common
    problem. We can't simply use the git branch because not everyone is
    always on a branch and the branch names don't always match up (and
    that's not an issue). To provide a practical means to address branch
    mismatching, I have reworked LAYERDEPENDS version specifications to use
    the more familiar "dependency (>= version)" syntax as used with package
    dependencies, support non-integer versions, and clarified the error
    message a little. If we then take care to bump the version on every
    breaking change, it is at least possible to have layers depend on these
    changes when they update to match; we can now even support a major.minor
    scheme to allow retrospectively adding a version limiter to old branches
    when a new branch is created and yet still allow the old branch minor
    version to be bumped if needed.
    
    Fixes [YOCTO #5991].
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

14	26	lib/bb/cooker.py
33	0	lib/bb/tests/utils.py
22	0	lib/bb/utils.py

commit 3a9eefe27f29a4593d6298f0427ac5f3e9183377
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2015-02-10 18:13:24 +0000

    tests: add tests for OE pre-release version formatting
    
    This scheme is used for versioning recipes that are pre-release (alpha,
    beta, etc.) within OpenEmbedded, so add some tests to ensure the
    appropriate comparison results still hold true.
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

4	0	lib/bb/tests/utils.py

commit b6dc946f477adc40d68da16e2f2580cb3b4a10db
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2015-02-10 18:13:23 +0000

    utils: ensure explode_dep_versions2 raises an exception on invalid/missing operator
    
    We really want an error rather than the version to just be silently
    skipped when the operator is missing (e.g. "somepackage (1.0)" was
    specified instead of "somepackage (>= 1.0)".)
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

4	0	lib/bb/utils.py

commit f35e9bd7b59c180fe9a3d9177efb57b92d9cd373
Author: Maxin B. John <maxin.john@enea.com>
Date:   2015-02-16 09:25:02 +0100

    depexp.py: Fix segfault if DISPLAY is not set
    
    bitbake -g -u depexp <package> segfaults when DISPLAY is not set
    properly. Fix it with a proper check.
    
    [YOCTO #7299]
    
    Signed-off-by: Maxin B. John <maxin.john@enea.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

7	0	lib/bb/ui/depexp.py

commit 27848725316ddae619c1b86f8adc0bfecfadf413
Author: Scott Rifenbark <scott.m.rifenbark@intel.com>
Date:   2015-02-10 07:00:00 -0800

    bitbake-user-manual: Removed errant writer note line.
    
    Removed a note to myself in the BB_ORIGENV example.
    
    Reported-by: Paul Eggleton <paul.eggleton@intel.com>
    Signed-off-by: Scott Rifenbark <scott.m.rifenbark@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

0	2	doc/bitbake-user-manual/bitbake-user-manual-metadata.xml

commit 5b8249acabad3eeedcf564590e6ab71588aec89c
Author: Scott Rifenbark <scott.m.rifenbark@intel.com>
Date:   2015-02-09 13:16:51 -0800

    bitbake-user-manual: Added some links to some new variables.
    
    Signed-off-by: Scott Rifenbark <scott.m.rifenbark@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

9	7	doc/bitbake-user-manual/bitbake-user-manual-fetching.xml

commit 5b797c758bf0499646e4e0256f03fbbdfb3ea080
Author: Scott Rifenbark <scott.m.rifenbark@intel.com>
Date:   2015-02-09 13:14:06 -0800

    bitbake-user-manual: Added five new repo variables and links.
    
    Added the following variables to the glossary:
    
      CVSDIR
      GITDIR
      SVNDIR
      HGDIR
      BZRDIR
    
    Several areas in the main manual mentioned these variables.  For
    each, I added the appropriate link to the glossary term.
    
    Signed-off-by: Scott Rifenbark <scott.m.rifenbark@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

50	4	doc/bitbake-user-manual/bitbake-user-manual-ref-variables.xml

commit e19320b4c453844f4ea7f7c1e56a9ed3e552f014
Author: Scott Rifenbark <scott.m.rifenbark@intel.com>
Date:   2015-02-09 12:44:24 -0800

    Makefile: Updated the script to not create PDF version by default
    
    For this release, we are dropping automatic creation of PDF manual.
    The user can still create them by specifically using the 'pdf' target.
    
    Signed-off-by: Scott Rifenbark <scott.m.rifenbark@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

6	6	doc/Makefile

commit 5482507210c3bd1c6223fc1e7881ac5c5474fbdf
Author: Belen Barros Pena <belen.barros.pena@intel.com>
Date:   2015-02-02 15:01:31 +0000

    toastergui: links outside Toaster should open in a new window
    
    Make sure all links going to pages outside Toaster in
    the layer details page (to web repos and the like)
    open in a new tab/window.
    
    [YOCTO #7193]
    
    Signed-off-by: Belen Barros Pena <belen.barros.pena@intel.com>

2	2	lib/toaster/toastergui/templates/layerdetails.html

commit 97ef99ea5107543799ec2386b3840b435347edfb
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2015-02-09 13:54:14 +0000

    toaster: All machines Fix filter counts
    
    Filter counts needed to take into account the filters that had
    previously been applied.
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>

4	6	lib/toaster/toastergui/views.py

commit 44e989b32cc36efa31f893c40930bcc9f746bd43
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2015-02-05 18:54:48 +0000

    toaster: All machines show results count if filtering or searching
    
    Show the number of results returned if filtering as well as when
    searching.
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>

1	1	lib/toaster/toastergui/templates/machines.html

commit fcb551ff622b3b24ee113ad49ec6cbd26569acd0
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2015-02-05 18:50:20 +0000

    toaster: All machines reset order_by if removing that column
    
    When you remove a column from a table that is currently being sorted by
    that value we also need to remove the sort.
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>

2	0	lib/toaster/toastergui/views.py

commit ae52f478bbf693b85da21f64835e70825968a305
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2015-02-05 18:19:57 +0000

    toaster: all Machines exclude de-prioritised layer source items
    
    If a duplicate layer exists from another layer source and provides a
    machine we don't want to show it if that layer comes from a low priority
    layer source.
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com

22	11	lib/toaster/toastergui/views.py

commit 97366eae1d5c2c84b03b3e019480e56e03f812da
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2015-02-05 14:26:10 +0000

    toaster: All Machines fix reset search link
    
    In firefox this link wasn't valid as it was inside a button element.
    Remove this and add a click handler for the button.
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>

5	0	lib/toaster/toastergui/static/js/machines.js
2	2	lib/toaster/toastergui/templates/machines.html

commit 0a2e0194fe7d949f1e9e01f7b42a7e0dc7a223f5
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2015-02-05 14:24:01 +0000

    toaster: models Allow the machine's layer name to be searched
    
    Make the layer name searchable. If you know the name of the layer you are
    interested in, searching for it is a fast way of getting the list of
    machines provided by it.
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>

1	1	lib/toaster/orm/models.py

commit b0ae4d2bb71e897d8a846a3cf14b7151baa09bd2
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2015-02-04 18:06:30 +0000

    toaster: All machines Add filtering based on layer in project
    
    Add a filter so that we can filter machines which are already being provided
    by a layer in the current project.
    Also make sure that we're only showing layers which are compatible with
    the current project.
    Also handle no results returned and page heading reflecting the number of
    results returned from a search.
    
    AlexD solved conflicts while merging the patch.
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>

43	24	lib/toaster/toastergui/templates/machines.html
43	5	lib/toaster/toastergui/views.py

commit 8fffd7b5fd53bd66ed7621595f57e2cae416e80d
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2015-02-03 17:48:45 +0000

    toaster: All machines Add layer name order by functions
    
    Allow the layer name to be sorted alphabetically in the machines table.
    Also fix the default ordering to be machine name
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>

1	1	lib/toaster/toastergui/templates/machines.html
3	1	lib/toaster/toastergui/views.py

commit b3af4f01856c1983f2e77293444e2c3c1b08f879
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2015-02-03 16:08:47 +0000

    toaster: layerdetails Don't remove alert from dom on dismissal
    
    When dismissing the alert we actually want to keep the alert area still
    in the dom for the use of future alerts. The default behaviour is to
    remove it from the dom. Hide it again instead.
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>

2	0	lib/toaster/toastergui/static/js/layerdetails.js
1	1	lib/toaster/toastergui/templates/layerdetails.html

commit 2a571a4523dbbe9b6afcf2e6b41edf2cb059729d
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2015-02-03 16:05:15 +0000

    toaster: All machines Update layer notifications
    
    Update layer notifications to the new wording for layer add remove
    notifications.
    Fix bug where the the alert area is being removed from the dom on
    dismiss instead of re-hidden
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>

6	2	lib/toaster/toastergui/static/js/machines.js
2	2	lib/toaster/toastergui/templates/machines.html

commit c1462c0530fe6c34ffef87bcde7a363995b503c9
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2015-02-03 15:40:41 +0000

    toaster: All machines add a column to link back to machine conf
    
    Add a column with the "path" to the machine file and add a link back to
    the vcs web to view the machine configuration file.
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>

6	1	lib/toaster/orm/models.py
1	0	lib/toaster/toastergui/templates/machines.html
4	1	lib/toaster/toastergui/views.py

commit 2c3b84f5012196c62be3ecf212e9752ee307635c
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2015-02-02 17:27:54 +0000

    toaster: machines Make sure we don't overwrite the pagesize
    
    The pagesize was accidentally being over written and should be set to
    the value returned from the cookie if there was one.
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>

1	1	lib/toaster/toastergui/views.py

commit ca4e4ab09ba214363181eeb8ad54ccc716bd65f3
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2015-01-30 18:21:05 +0000

    toaster: Add add/select functionality to machines page
    
    This feature for the machines page allows the user to add a layer and
    it's dependencies to the current project and then if successful select
    the machine(s) which become available due to being provided by the
    layer.
    
    AlexD merged the changes into the submission queue.
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>

89	0	lib/toaster/toastergui/static/js/machines.js
51	48	lib/toaster/toastergui/templates/machines.html
6	6	lib/toaster/toastergui/views.py

commit 388cfb26695ffd6ac0498e5de571cd4a5e083f8b
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2015-01-30 18:18:44 +0000

    toaster: machines Fix undefined variables
    
    pagesize and orderby were undefined causing an error to be thrown when
    browsing to the all machines page
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>

1	0	lib/toaster/toastergui/views.py

commit 29837409a6cbabafe9e4d102e8143bab5ec22dc2
Author: Belen Barros Pena <belen.barros.pena@intel.com>
Date:   2015-02-09 11:48:39 +0000

    toastergui: add download task log icon to recipe details page
    
    When a task fails, we keep the log and allow users to
    download it. Make sure the download is provided in the
    tasks table of the recipe details page.
    
    [YOCTO #7207]
    
    Signed-off-by: Belen Barros Pena <belen.barros.pena@intel.com>
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>

3	1	lib/toaster/toastergui/static/js/libtoaster.js
5	6	lib/toaster/toastergui/templates/recipe.html
5	5	lib/toaster/toastergui/templates/tasks.html

commit 49d85b7035d12a6e482d608e828f69fcafb59d39
Author: Belen Barros Pena <belen.barros.pena@intel.com>
Date:   2015-02-06 17:55:46 +0000

    toastergui: add the word 'compatible' to 'all' pages
    
    Labels for the 'all' pages don't really convey what's provided in them.
    The team has suggested we add the word 'compatible' to them,
    to make clear they will show all layers / targets / machines that
    can be built with the version of the build system you are
    using in a certain project. A link like 'view all targets'
    becomes 'view all compatible targets'.
    
    I've also added some help text.
    
    Signed-off-by: Belen Barros Pena <belen.barros.pena@intel.com>
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>

1	1	lib/toaster/toastergui/static/css/default.css
1	1	lib/toaster/toastergui/templates/layerdetails.html
3	3	lib/toaster/toastergui/templates/layers.html
3	3	lib/toaster/toastergui/templates/machines.html
16	8	lib/toaster/toastergui/templates/project.html
3	3	lib/toaster/toastergui/templates/targets.html

commit 102144f8e5069f76e7de8db052c3c4531609771f
Author: Belen Barros Pena <belen.barros.pena@intel.com>
Date:   2015-02-04 13:10:07 +0000

    toastergui: set column heading to 'Revision'
    
    Replace the column heading 'Branch, tag or commit' with
    'Revision'. This also fixes 7023.
    
    [YOCTO #7023]
    
    Signed-off-by: Belen Barros Pena <belen.barros.pena@intel.com>
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>

4	1	lib/toaster/toastergui/templates/layerdetails.html
6	4	lib/toaster/toastergui/views.py

commit 93e4f8c44273f4657c5be4c00b61db12aa875e31
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2015-02-06 15:32:18 +0000

    toaster: display Toaster mode and version in debug mode
    
    This patch displays the current running mode and checked-out git branch
    as Toaster version when running in debug mode.
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>

19	0	lib/toaster/toastergui/static/css/default.css
6	0	lib/toaster/toastergui/templates/base.html
6	2	lib/toaster/toastergui/views.py
3	2	lib/toaster/toastermain/settings.py

commit 8a8248f7b7e30469f592e2f8adbf6ce21e8685c5
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2015-02-05 13:18:06 +0000

    toaster: improve logging facilities for toaster
    
    This patch improves the logging facilities for toaster in order
    to help diagnose bugs that happen on user machines.
    
    The logs are stored now under "/tmp/toaster_$$" where $$ is a
    PID-based unique identifier. On shutdown, toaster will automatically
    erase all logs unless errors are listed in the log file.
    
    On error, Toaster provides suggestions on what to do.
    
    This patch includes a minor fix found as a result of logging
    improvements.
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>

34	7	bin/toaster
35	12	lib/bb/ui/buildinfohelper.py
1	1	lib/toaster/bldcontrol/management/commands/runbuilds.py
1	1	lib/toaster/toastergui/views.py
3	3	lib/toaster/toastermain/settings.py
17	1	lib/toaster/toastermain/urls.py

commit c5ddd9d88910857a1b745b1c237df0390dd56835
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2015-02-05 12:07:44 +0000

    toaster: enhancements for the startup sequence
    
    This patch brings fixes and enhancements in the startup sequence.
    
    - the dependency version checking is now correctly enforced when
    starting in both modes
    - fixed errors in looking up environment variables
    - added message with 'daemon' program start location
    - presenting menu for selecting config file
    
    [YOCTO #7283]
    [YOCTO #7291]
    [YOCTO #7273]
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>

26	11	bin/toaster
58	18	lib/toaster/bldcontrol/management/commands/checksettings.py

commit f0faba8ef0f08c98ac4bddf5b3954d540820d215
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2015-02-02 17:57:36 +0000

    toastergui: improvements in layer selection logic
    
    This patch clearers and bring fixes for the layer selection
    logic in order to enable information collected during build to be used
    in configuring projects, specifically targeting the recipes
    learned through the building process.
    
    The patch also adds tests to verify the layer selection logic.
    
    [YOCTO #7189]
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>

0	13	lib/toaster/bldcontrol/bbcontroller.py
38	16	lib/toaster/bldcontrol/localhostbecontroller.py
1	1	lib/toaster/bldcontrol/sshbecontroller.py
19	4	lib/toaster/orm/models.py
130	1	lib/toaster/orm/tests.py
7	7	lib/toaster/toastergui/templates/targets.html
24	11	lib/toaster/toastergui/views.py
5	0	lib/toaster/toastermain/urls.py

commit 00496fb67fa341477edbf80c5438f0b069871ac6
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2015-02-03 18:28:20 +0000

    toaster: enable server-side caches and debug-panel
    
    This patch enables the server-side caches for Django using
    file cache in /tmp/ directory.
    
    Patch enables django debug panel if available.
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>

40	1	lib/toaster/toastermain/settings.py

commit 2a18952a525d15814389584817674f6c3aee12d6
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2015-02-03 18:25:14 +0000

    toastergui: fix loadconf error message
    
    Toaster crashes in loadconf if it needs to raise an Exception due
    to poorly formatted error message. This patch fixes the formatting
    
    [YOCTO #7276]
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>

1	1	lib/toaster/bldcontrol/management/commands/loadconf.py

commit f28fb3d660d8726b75e6c31fa36bc22b54e1bca7
Author: Belen Barros Pena <belen.barros.pena@intel.com>
Date:   2015-02-03 17:11:51 +0000

    toaster: correct typo in toaster script
    
    A small typo slipped in the message included in
    the fix for [YOCTO #6023].
    
    Signed-off-by: Belen Barros Pena <belen.barros.pena@intel.com>

2	2	bin/toaster

commit b96457870b40ba60dd5c86d83c43093d09b70aea
Author: Belen Barros Pena <belen.barros.pena@intel.com>
Date:   2015-02-02 17:40:21 +0000

    toasterui: use text() instead of html()
    
    Use the text() jQuery function instead of the html()
    one for security reasons.
    
    Signed-off-by: Belen Barros Pena <belen.barros.pena@intel.com>

2	2	lib/toaster/toastergui/static/js/layerdetails.js

commit b7b1e64f650c9ea676714209b9d6e7efeca992be
Author: Belen Barros Pena <belen.barros.pena@intel.com>
Date:   2015-02-02 14:41:07 +0000

    toastergui: remove time link for failed build requests
    
    Failed build requests do not have a build time page where
    you can look at the time spent on each task. Therefore,
    their build time information cannot be a link to such
    a page.
    
    Signed-off-by: Belen Barros Pena <belen.barros.pena@intel.com>

1	1	lib/toaster/toastergui/templates/managed_mrb_section.html

commit 207013b6dde82f9654f9be996695c8335b95a288
Author: Ross Burton <ross.burton@intel.com>
Date:   2015-02-02 15:09:25 +0000

    data_smart: split expanded removal values when handling _remove
    
    Given these assignments:
    
     TEST="a b c d"
     TEST_remove = "b d"
    
    TEST evaluates to "a c".  However, if the _remove override is given as a
    variable:
    
     TEST="a b c d"
     FOO = "b d"
     TEST_remove = "${FOO}
    
    TEST evaluates to "a b c d", because when FOO is expanded it isn't split into a
    list.
    
    Solve this by splitting all members of removeactive once they've been expanded.
    
    [ YOCTO #7272 ]
    
    Signed-off-by: Ross Burton <ross.burton@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	1	lib/bb/data_smart.py

commit cb2a62a5fbffb358528a85b46c1fc6383286cb9d
Author: Ross Burton <ross.burton@intel.com>
Date:   2015-02-02 15:09:24 +0000

    tests/data: add test for incorrect remove behaviour
    
    The _remove operator isn't working correctly when used with a variable that
    expands to several items, so add a test case to exercise this path.
    
    Signed-off-by: Ross Burton <ross.burton@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

7	0	lib/bb/tests/data.py

commit 0a1db7d1531f8254955e1152bcd8e6db4ec1d277
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2015-02-02 12:13:58 +0000

    toaster: proper setup for build configuration
    
    This patch makes sure that all the toaster conf files are actually
    written from the build enviroment controllers.
    
    Additionally, toaster checks that the 'daemon' program, which is used
    to start the build system, is available (currently for localhost).
    
    [YOCTO #7171]
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

5	0	bin/toaster
8	8	lib/toaster/bldcontrol/bbcontroller.py
11	0	lib/toaster/bldcontrol/localhostbecontroller.py
2	1	lib/toaster/bldcontrol/management/commands/runbuilds.py

commit c6eb0f7f16c59530c2525b2e5629fe86de4e8f0f
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2015-01-28 13:18:09 +0000

    toaster: new layer checkout logic
    
    This patch implements a new layer checkout logic that brings more
    flexibility in getting layers under different commits work with
    Toaster.
    
    The new hibrid logic will checkout separately each layer and commit id;
    the task execution will be delegated to the checkedout bitbake, but the
    data logger will be executed from the current toaster version as to
    bring in enough data to sustain the updates in UI models.
    
    [YOCTO #7171]
    [YOCTO #6892]
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>

9	4	lib/toaster/bldcontrol/bbcontroller.py
76	31	lib/toaster/bldcontrol/localhostbecontroller.py
5	2	lib/toaster/bldcontrol/management/commands/runbuilds.py
2	56	lib/toaster/bldcontrol/sshbecontroller.py

commit 90ef8975f35e2da824bc1c80e41ca26d9af0b208
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2015-01-27 17:59:25 +0000

    toaster: update texts for the startup sequence
    
    This patch updates the prompts to the user to better explain
    what Toaster is doing and the information it needs from the user.
    
    Additionally, fixes a check in loadconf command.
    
    [YOCTO #6785]
    [YOCTO #7251]
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>

3	3	bin/toaster
14	7	lib/toaster/bldcontrol/management/commands/checksettings.py
1	1	lib/toaster/bldcontrol/management/commands/loadconf.py

commit 9facf3604759b00e8fe99f929353d46f8b8ba5cb
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2015-01-29 14:35:37 +0000

    data_smart: Don't use mutable objects as default args
    
    These only have one instance created which means your subsequent datastores
    can contain echos of previous ones. Obviously this is not the behaviour
    we want/expect. It doesn't affect bitbake too badly as we only have one
    datastore, it does massively potentially break our selftests though.
    
    Thanks to Tim Amsell for pointing out the now obvious problem!
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

6	1	lib/bb/data_smart.py

commit 4fea138f7cef53626a40decb96207dbaf9284020
Author: Pascal Bach <pascal.bach@siemens.com>
Date:   2015-01-29 09:52:04 +0100

    parse/ast: Fix issue if path contains '&'
    
    Signed-off-by: Pascal Bach <pascal.bach@siemens.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/parse/ast.py

commit ee13bf45cecd6a0132d724b3206a6f4515669496
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2015-01-23 17:36:14 +0000

    toastergui: update project build listing
    
    We update the build listings in the project mode to enable
    proper display and selection of build requests that do not have
    an actual build object because the bitbake process did not start.
    
    We add a page to display error details for build requests that
    did not start a build.
    
    Fixing errors and misspelling in build sections.
    
    Sorting by "timespent" is disabled for build-listing pages.
    
    [YOCTO #7165]
    [YOCTO #7156]
    [YOCTO #7196]
    [YOCTO #7188]
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>

9	0	lib/toaster/bldcontrol/models.py
67	0	lib/toaster/toastergui/templates/buildrequestdetails.html
9	9	lib/toaster/toastergui/templates/managed_builds.html
30	12	lib/toaster/toastergui/templates/managed_mrb_section.html
10	10	lib/toaster/toastergui/templates/projectbuilds.html
2	0	lib/toaster/toastergui/urls.py
66	37	lib/toaster/toastergui/views.py

commit b11e8bd626e0212ee72914529c3d92d1dd718674
Author: Alexandru Damian <alexandru.damian@intel.com>
Date:   2015-01-23 11:15:31 +0000

    toasterui: do not filter images by extension
    
    ToasterUI filters build artifacts by extension in order
    to determine if a build artifact is an image or not.
    
    Using IMAGE_FSTYPES for this purpose is not correct as
    the varible value holding image extensions is just a coincidence.
    
    So we just look if the filename contains the "rootfs" magic
    string, which is a pretty good approximation.
    
    [YOCTO #7213]
    
    Signed-off-by: Alexandru Damian <alexandru.damian@intel.com>

1	1	lib/bb/ui/buildinfohelper.py

commit 8be4a8cf1673112e9e613e719fa6ed96dbca8976
Author: Belen Barros Pena <belen.barros.pena@intel.com>
Date:   2015-01-26 17:29:02 +0000

    toastergui: alignment fix
    
    Align horizontally the pagination and show rows
    controls at the bottom of the layer details page.
    
    Signed-off-by: Belen Barros Pena <belen.barros.pena@intel.com>
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>

4	4	lib/toaster/toastergui/templates/layerdetails.html

commit 947ef663e452c15933218fd680875ade7cb46e9a
Author: Belen Barros Pena <belen.barros.pena@intel.com>
Date:   2015-01-26 16:37:05 +0000

    toastergui: remove recipe id links to the layer index
    
    Toaster cannot use the recipe id to link to the layer
    index, because recipe ids can change. We need to search
    by the recipe name instead.
    
    This patch removes the recipe id link from the layer
    details page and replaces it with a search by the
    recipe name.
    
    It also makes sure links to the layer index open in
    a new tab/window.
    
    [YOCTO #7194]
    [YOCTO #7193]
    
    Signed-off-by: Belen Barros Pena <belen.barros.pena@intel.com>

1	1	lib/toaster/toastergui/templates/layerdetails.html

commit 4d52ceb7e66835a3088d83cd4caa002a3e7a1297
Author: Belen Barros Pena <belen.barros.pena@intel.com>
Date:   2015-01-26 16:08:35 +0000

    toastergui: consistent capitals in button
    
    Capitalise correctly the 'Build target' button label in
    the layer details page: it should match the table heading.
    
    Signed-off-by: Belen Barros Pena <belen.barros.pena@intel.com>

1	1	lib/toaster/toastergui/templates/layerdetails.html

commit 5399738fb2e2956a7d4ce59699dc4b6f6c67bbb2
Author: Belen Barros Pena <belen.barros.pena@intel.com>
Date:   2015-01-26 16:02:24 +0000

    toastergui: hide table controls when when less than 10 entries
    
    The 'show rows' and pagination controls in the layer details
    page should only show when there are more than 10 entries
    in a table.
    
    [YOCTO #7217]
    
    Signed-off-by: Belen Barros Pena <belen.barros.pena@intel.com>

10	0	lib/toaster/toastergui/templates/layerdetails.html

commit 4282a92fe3652c52448dba3d5f3fc4e1de28be63
Author: Belen Barros Pena <belen.barros.pena@intel.com>
Date:   2015-01-26 15:48:45 +0000

    toastergui: set column width in layer details page
    
    Set the width of the action columns to span2 to stop
    the buttons from wrapping as much as possible.
    
    Signed-off-by: Belen Barros Pena <belen.barros.pena@intel.com>

2	2	lib/toaster/toastergui/templates/layerdetails.html

commit 70486fc36c5b6bd6b7b8e846e23ad4062d583877
Author: Belen Barros Pena <belen.barros.pena@intel.com>
Date:   2015-01-26 15:37:30 +0000

    toastergui: add 'show all' link to no results page
    
    When you search for targets or machines in the layer details
    page and your search returns no results, you should
    see a 'show all' link that you can click to clear the
    search and display all table entries.
    
    [YOCTO #7218]
    
    Signed-off-by: Belen Barros Pena <belen.barros.pena@intel.com>

2	2	lib/toaster/toastergui/static/js/layerdetails.js
8	2	lib/toaster/toastergui/templates/layerdetails.html

commit 2c576552118bcfe65d375ff809b3b4a4916da225
Author: Belen Barros Pena <belen.barros.pena@intel.com>
Date:   2015-01-26 15:25:05 +0000

    toastergui: give the add dependencies form some breathing space
    
    In the editable version of the layer details page, the form to
    add dependencies needs some distance from the dependency list.
    
    Signed-off-by: Belen Barros Pena <belen.barros.pena@intel.com>

1	0	lib/toaster/toastergui/static/css/default.css

commit 87deeb2016cbfdaff5531e1badb58761af6df848
Author: Belen Barros Pena <belen.barros.pena@intel.com>
Date:   2015-01-26 15:11:54 +0000

    toastergui: consistent add / remove layer notifications
    
    In my struggle to ensure consistency in the format and content
    of the notifications we show when you add and remove layers to
    a project, I've:
    
    * added the project name to the notifications
    in the layer details page
    
    * removed the 'Go to project configuration' link
    from the notifications in the layer details page
    
    This changes align the notifications we show in the layer
    details page with the ones we show in the 'all' pages.
    
    Signed-off-by: Belen Barros Pena <belen.barros.pena@intel.com>

6	4	lib/toaster/toastergui/static/js/layerdetails.js
1	1	lib/toaster/toastergui/templates/layerdetails.html

commit 4fcea0aad1ac715d6eb104f60972007bc2289569
Author: Belen Barros Pena <belen.barros.pena@intel.com>
Date:   2015-01-26 13:53:29 +0000

    toastergui: remove redundant style declaration
    
    The bottom margin for dd tags nested inside forms is
    set twice. Delete one of them.
    
    Signed-off-by: Belen Barros Pena <belen.barros.pena@intel.com>

0	1	lib/toaster/toastergui/static/css/default.css

commit 48123b53d66de01ad6273140aa148276d63707ba
Author: Belen Barros Pena <belen.barros.pena@intel.com>
Date:   2015-01-26 13:42:44 +0000

    toastergui: Generic message for the layer details empty states
    
    In the layer details page, change the message you see when
    the number of targets or machines provided by a layer is
    0, either because that's what's reported by a layer index
    instance, or because Toaster does not have any information
    about the layer.
    
    The new message is more generic, in order to fit layers from
    all layer sources.
    
    Signed-off-by: Belen Barros Pena <belen.barros.pena@intel.com>

2	6	lib/toaster/toastergui/templates/layerdetails.html

commit aed92feac017c967834575344faa3bad7a905b18
Author: Belen Barros Pena <belen.barros.pena@intel.com>
Date:   2015-01-14 17:27:00 +0000

    toaster: apply common styles to right hand column of detail pages
    
    Layer, recipe and package details pages have a right column
    with additional information. This commit standardises the
    formatting of the content in that right column across
    all these pages by creating a new css class .item-info
    in default.css
    
    Signed-off-by: Belen Barros Pena <belen.barros.pena@intel.com>

1	2	lib/toaster/toastergui/static/css/default.css
1	1	lib/toaster/toastergui/templates/layerdetails.html
1	1	lib/toaster/toastergui/templates/package_detail_base.html
3	3	lib/toaster/toastergui/templates/recipe.html

commit 49d56fcbbf6b7d0c0c589b93182e4c73071b3fcf
Author: Belen Barros Pena <belen.barros.pena@intel.com>
Date:   2015-01-26 12:17:18 +0000

    toaster: make layouts consistent
    
    The layer details page should have the same layout as all
    other detail pages (recipes, packages). For this to happen,
    the basebuilddetailpage.html and baseprojectpage.html
    templates should use the same layout, and so should the
    layerdetails.html and recipe.html templates.
    
    This patch also capitalises the string 'All layers' in the
    breadcrumb of layerdetails.html as all other breadcrumb elements.
    
    Signed-off-by: Belen Barros Pena <belen.barros.pena@intel.com>
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>

4	8	lib/toaster/toastergui/templates/baseprojectpage.html
4	13	lib/toaster/toastergui/templates/layerdetails.html
2	2	lib/toaster/toastergui/templates/project.html

commit 9b5b1bd7d77e3f5886f6c557d3b750de1f6d6025
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2015-01-23 14:38:12 +0000

    siggen: Ensure taskdata default functions exist in base class
    
    The get/set_taskdata functions are now part of the API of the class,
    ensure they exist in the base class definition so the noop handler
    works.
    
    [YOCTO #7233]
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

7	6	lib/bb/siggen.py

commit cc4c8478fc547ea0ebf827a8d319496b39f25684
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2015-01-21 16:08:06 +0000

    cooker: Use expanded_data for ASSUME_PROVIDED
    
    Users expect operators like _remove to work on this variable. We need
    to use expanded_data to ensure this happens correctly.
    
    [YOCTO #7135]
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	2	lib/bb/cooker.py

commit 1a3c1c9203e1a1452314954f1cfd771e5c1ce89b
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2015-01-21 16:07:19 +0000

    cooker: Rename event_data -> expanded_data
    
    event_data would be better named expanded_data, then we can widen its scope
    to other places in cooker where we need to access an expanded data store.
    We certainly don't want multiple expanded data stores.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	3	lib/bb/command.py
12	11	lib/bb/cooker.py

commit 8f166e1a0f3574ae7d1e917a8bb403b87bad15bf
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2015-01-21 17:43:51 +0000

    server/process: Fix select call
    
    There was a report that bitbake -e | less would use 100% cpu when it shouldn't
    really. The issue appears to be a bogus file descriptor in the select call. We
    shouldn't be blocking if there is event data pending to a *reader* from server
    context.
    
    [YOCTO #7138]
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/server/process.py

commit c1b9c7a05c1c05fcd73d819e8b0142169106f0da
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2015-01-21 12:59:51 +0000

    toastergui: enable re-ordering when columns are hidden
    
    This patch enables table re-ordering when a sorted-by column is hidden.
    This is default functionality in toaster table pages, but was not
    enabled for all columns in this situation.
    
    [YOCTO #7125]
    [YOCTO #7022]
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>

10	0	lib/toaster/toastergui/views.py

commit 1d07020049d3bd824f6d0280c1cc7effa3db339d
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2015-01-21 10:34:46 +0000

    toastergui: all projects column show/hide
    
    This patch fixes the show/hide in all projects page.
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>

6	6	lib/toaster/toastergui/templates/projects.html

commit ad6a2d42b9ce7ce317184d978253e5506be7e47f
Author: Belen Barros Pena <belen.barros.pena@intel.com>
Date:   2015-01-20 17:47:31 +0000

    toastergui: fix the second 'view all targets' link
    
    The project page has 2 links to the all targets page.
    The one at the top of the page is working, but not
    the one further down. This patch sorts that out.
    
    [YOCTO #7147]
    
    Signed-off-by: Belen Barros Pena <belen.barros.pena@intel.com>

2	1	lib/toaster/toastergui/templates/project.html

commit bd4ff7a15e74e1d4af8ea3dbaaed141678046a9b
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2015-01-20 18:08:16 +0000

    toastergui: minor fixes
    
    This is a minor fixes patch.
    
    - legacy sorting by "timespent" does not crash the builds pages
    - missing xhr_configvaredit view in observer mode is added
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>

8	1	lib/toaster/toastergui/views.py

commit 8278d7b15b58484af93d952e594f29dabb9200a9
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2015-01-20 16:56:35 +0000

    toastegui: project page build selected targets
    
    Fixing the action on the "Build selected targets" button.
    Remove "build-button" duplicate id from the build page.
    
    [YOCTO #7047]
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>

22	3	lib/toaster/toastergui/static/js/projectapp.js
3	3	lib/toaster/toastergui/templates/project.html

commit 4957ec63a11d51dfac2252263e4d26c705eb31e9
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2015-01-20 16:37:53 +0000

    toastergui: fix all targets page search
    
    This fixes the display of layers in all-targets page search/filtering
    usage pattern by displaying layer-equivalence class.
    
    The significant impact is the correct display of the list size
    for search/filtering actions
    
    [YOCTO #7051]
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>

5	2	lib/toaster/toastergui/views.py

commit f1cccafb4c7aa2c338e29ec5d2ea190dfeceb132
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2015-01-20 15:57:11 +0000

    toastergui: fix all-targets redirect
    
    Fixes the all targets redirect to /api/1.0/targets.
    
    [YOCTO #7147]
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>

1	1	lib/toaster/toastergui/templates/project.html
1	1	lib/toaster/toastergui/urls.py
1	1	lib/toaster/toastergui/views.py

commit bcd7ba013b973d3b3ac1e0845acf60b80cb227c2
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2015-01-20 12:55:19 +0000

    toaster: newproject default release selection fix
    
    This patch fixes the default project release selection to
    obey the DEFAULT_RELEASE name set in ToasterSettings.
    
    [YOCTO #7035]
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>

19	13	lib/toaster/toastergui/templates/newproject.html

commit 37125f2b52492f8bee465611e60514b365541892
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2015-01-19 17:27:35 +0000

    toastergui: "Run again" button in build pages
    
    This patch fixes the "Run again" button for the completed builds.
    
    [YOCTO #7173]
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>

1	1	lib/toaster/toastergui/static/js/projectapp.js
2	2	lib/toaster/toastergui/templates/managed_mrb_section.html

commit bd681cb2ce349dd7de01c98d5089a368c4514c37
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2015-01-19 17:15:02 +0000

    toastergui: fix duplicate IDs all builds page
    
    This patch fixes the duplicate IDs found in the all builds page,
    originating in the "Project" column filter.
    
    Also fix misspell "Log1" instead of "Log".
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>

10	27	lib/toaster/toastergui/views.py

commit 4f5b19d453da64749affc1c27ec51b013bedc71a
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2015-01-19 16:28:19 +0000

    toasterui: save event backlog to build
    
    We add a call that saves any queued events to the build
    
    [YOCTO #7021]
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>

9	2	lib/bb/ui/buildinfohelper.py

commit 58b35c055e37b5e1552d8ba3db2e05ea4ee85023
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2015-01-19 15:14:39 +0000

    toastergui: save cookie for orderby/page size settings
    
    We save the current settings as cookies on the server side
    for the layers, targets and machines pages under Project pages.
    
    [YOCTO #6961]
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>

0	2	lib/toaster/toastergui/templates/targets.html
11	4	lib/toaster/toastergui/views.py

commit 0926492295d485813d8a4f6b77c7b152e4c5b4c4
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2015-01-21 13:53:59 +0000

    prserv/serv: Improve exit handling
    
    Currently, I'm not sure how the prserver managed to shut down cleanly. These
    issues may explain some of the hangs people have reported.
    
    This change:
    
    * Ensures the connection acceptance thread monitors self.quit
    * We wait for the thread to exit before exitting
    * We sync the database when the thread exits
    * We do what the comment mentions, timeout after 30s and sync the database
      if needed. Previously, there was no timeout (the 0.5 applies to sockets,
      not the Queue object)
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

9	5	lib/prserv/serv.py

commit 909fa19f20e909820aa484967b7fe2a34d89ab49
Author: David Reyna <David.Reyna@windriver.com>
Date:   2015-01-16 16:42:41 +0000

    toaster: project configuration variables page
    
    Implement the project configuration variables page.
    
    AlexD made whitespace changes and a minor fix.
    
    [YOCTO #6588]
    
    Signed-off-by: David Reyna <David.Reyna@windriver.com>
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

624	25	lib/toaster/toastergui/templates/projectconf.html
1	0	lib/toaster/toastergui/urls.py
105	1	lib/toaster/toastergui/views.py

commit 0353d49ae934c4595408e1b7a1443769f095f2aa
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2015-01-16 16:42:40 +0000

    toaster: project builds page
    
    This is a complete re-write of the "Project builds" page
    based on the "All builds" page in managed mode.
    
    [YOCTO #6589]
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	0	lib/toaster/bldcontrol/models.py
92	26	lib/toaster/toastergui/templates/projectbuilds.html
66	204	lib/toaster/toastergui/views.py

commit 1689edd35477a126bfbf4bd3257c4f1f9e16f20d
Author: Ross Burton <ross.burton@intel.com>
Date:   2015-01-16 17:53:23 +0000

    fetcher: use os.path.splitext() instead of string.split()
    
    Signed-off-by: Ross Burton <ross.burton@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	3	lib/bb/fetch2/__init__.py

commit 7a87ca9518f7239a2dfeb4576c59ea7b1f8d3071
Author: Ross Burton <ross.burton@intel.com>
Date:   2015-01-21 14:13:38 +0000

    bin/bitbake: only check that /dev/shm is writable on Linux
    
    Signed-off-by: Ross Burton <ross.burton@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	2	bin/bitbake

commit 1aa1de4b0c5bd34466e04844bbc371933736be59
Author: Aníbal Limón <anibal.limon@linux.intel.com>
Date:   2015-01-19 17:34:25 -0600

    bb/fetch2/wget.py: latest_versionstring escape packagename when built regex
    
    When built package regex for use in searching upstream version in sites,
    the package name need to be escaped to avoid usage of special regex
    char.
    
    For example when search for gtk+, '+' need to be escaped.
    
    Signed-off-by: Aníbal Limón <anibal.limon@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/fetch2/wget.py

commit 2b084dff6ff0d274fbbf7ab07022507f7249e427
Author: Robert Yang <liezhi.yang@windriver.com>
Date:   2015-01-19 23:29:16 -0800

    cooker.py: trap the ENOSPC error and translate it
    
    Trap the ENOSPC error and translate it into a human readable error
    message, which is good for debugging.
    
    Signed-off-by: Robert Yang <liezhi.yang@windriver.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

5	0	lib/bb/cooker.py

commit a2d441237916a99405b800c1a3dc39f860100a8c
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2015-01-21 11:16:20 +0000

    cooker: Further optimise pyinotify
    
    We currently add crazy numbers of watches on files. The per user limit is 8192
    by default and on a system handling multiple builds, this can be an issue.
    
    We don't need to watch all files individually, we can watch the directory containing
    the file instead. This gives better resource utilisation and better performance
    further reverting some of the performance regression seen with the introduction
    of pyinotify.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/cooker.py

commit 4d1343010da757a0c126bc22475354da44aaf8e3
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2015-01-21 10:49:01 +0000

    command/cooker/knotty: Fix memres handling of command environment changes
    
    If the environment changes, we need memory resident bitbake to adapt to those
    changes. This adds in functionality to handle this alongside the configuration
    option handling code. This means that the common usage:
    
    MACHINE=X bitbake Y
    
    now works with the memory resident server.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	1	lib/bb/command.py
21	1	lib/bb/cooker.py
2	2	lib/bb/cookerdata.py
1	1	lib/bb/ui/knotty.py

commit b4d40f1ac7b32990c456cce261f99a5a157b5ae5
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2014-10-30 18:23:21 +0000

    lib/fetch2: Tweak get_srcrev() function description
    
    Tweak the comments on get_srcrev() to better describe its function.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

4	2	lib/bb/fetch2/__init__.py

commit 8118f465b9f87c66b2a741008f69198ac5fea901
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2015-01-14 12:46:55 +0000

    toasterui: fix variable data error
    
    A bug slipped in the toaster ui that prevented saving of
    build configuration despite the data being retrieved
    from the server. This patch fixes the shaming mistake.
    
    [YOCTO #7117]
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/ui/buildinfohelper.py

commit c5f5fb80308228585aa7ff9721352feb5ed9c961
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2015-01-14 12:46:54 +0000

    toastergui: all builds page lists failed build requests
    
    This patch modifies the all builds page by splitting the page
    into two variants - the "interactive" (default) and "managed" mode
    versions.
    
    In the "managed" mode version, we display build requests instead of
    builds, including the failed build requests that have no build
    associated with them.
    
    [YOCTO #6671]
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

135	0	lib/toaster/toastergui/templates/managed_builds.html
172	0	lib/toaster/toastergui/templates/managed_mrb_section.html
19	0	lib/toaster/toastergui/templatetags/projecttags.py
416	199	lib/toaster/toastergui/views.py

commit c46492f5599da8af16af05ecc2d7aa7a8660416b
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2015-01-14 12:46:53 +0000

    toaster: layerdetails Remove compatibility setting
    
    Remove the layer compatibility configuration option from the layer
    details as this is not in the design.
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	8	lib/toaster/toastergui/static/js/layerdetails.js
1	20	lib/toaster/toastergui/templates/layerdetails.html
0	1	lib/toaster/toastergui/views.py

commit c1442bc68ad8ba20c37b1a7cde1400297f4be811
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2015-01-14 12:46:52 +0000

    toaster: Add layer details page feature
    
    This commit adds the layer details page which shows the metadata for the
    layer such as layer description, machines associated with the layer as well
    as the targets provided.
    If the layer is an imported layer this page also allows you to update
    the layer's configuration.
    >From this page you can add/remove the layer from the current project
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	0	lib/toaster/toastergui/static/css/default.css
404	0	lib/toaster/toastergui/static/js/layerdetails.js
35	0	lib/toaster/toastergui/static/js/libtoaster.js
495	149	lib/toaster/toastergui/templates/layerdetails.html
9	0	lib/toaster/toastergui/templates/layers_dep_modal.html
1	0	lib/toaster/toastergui/urls.py
93	1	lib/toaster/toastergui/views.py

commit 4c2f1fe51a13ddc97e518327714292af46b9e1ab
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2015-01-15 09:42:23 +0000

    ConfHandler: Clean up bogus imports
    
    The import statements here are plain bizarre. Remove them, tweaking
    some of the function calls to match current practices. I can't find any
    reason these old imports are as they are.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

4	6	lib/bb/parse/parse_py/ConfHandler.py

commit fc70ed596703a1aa954223b169d4ad51193a6ec1
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2015-01-15 09:41:23 +0000

    ConfHandler: Rename oldfn to parentfn to be clearer
    
    Looking at this function I had no idea what oldfn was, I doubt anyone
    else would either without looking up what the caller does. "parentfn"
    would seem a more appropriate name so rename it.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

5	5	lib/bb/parse/parse_py/ConfHandler.py

commit 493361f35f6cc332d4ea359a2695622c2c91a9c2
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2015-01-15 09:39:34 +0000

    cooker: Improve pyinotify performance
    
    Benchmarks show that the introduction of pyinotify regressed
    performance. This patch ensures we only call the add_watch() function
    for new entries, not ones we've already processed which does improve
    performance as measured by "time bitbake -p".
    
    This doesn't completely remove the overhead but it does substantially
    reduce it.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

6	0	lib/bb/cooker.py

commit 979ddbe4b7340d7cf2f432f6b1eba1c58d55ff42
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2015-01-14 12:18:27 +0000

    cooker: Fix pyinotify handling of ENOENT issues
    
    We try and add watches for files that don't exist but if they did, would influence
    the parser. The parent directory of these files may not exist, in which case we need
    to watch any parent that does exist for changes. This change implements that fallback
    handling.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

17	4	lib/bb/cooker.py

commit 0557d03c170fba8d7efe82be1b9641d0eb229213
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2015-01-13 14:13:53 +0000

    cooker/cache/parse: Implement pyinofity based reconfigure
    
    Memory resident bitbake has one current flaw, changes in the base configuration
    are not noticed by bitbake. The parsing cache is also refreshed on each invocation
    of bitbake (although the mtime cache is not cleared so its pointless).
    
    This change adds in pyinotify support and adds two different watchers, one
    for the base configuration and one for the parsed recipes.
    
    Changes in the latter will trigger a reparse (and an update of the mtime cache).
    The former will trigger a complete reload of the configuration.
    
    Note that this code will also correctly handle creation of new configuration files
    since the __depends and __base_depends variables already track these for cache
    correctness purposes.
    
    We could be a little more clever about parsing cache invalidation, right now we just
    invalidate the whole thing and recheck. For now, its better than what we have and doesn't
    seem to perform that badly though.
    
    For education and QA purposes I can document a workflow that illustrates this:
    
    $ source oe-init-build-env-memres
    $ time bitbake bash
    [base configuration is loaded, recipes are parsed, bash builds]
    $ time bitbake bash
    [command returns quickly since all caches are valid]
    $ touch ../meta/classes/gettext.bbclass
    $ time bitbake bash
    [reparse is triggered, time is longer than above]
    $ echo 'FOO = "1"' >> conf/local.conf
    $ time bitbake bash
    [reparse is triggered, but with a base configuration reload too]
    
    As far as changes go, I like this one a lot, it makes memory resident bitbake
    truly usable and may be the tweak we need to make it the default.
    
    The new pyinotify dependency is covered in the previous commit.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

4	1	lib/bb/cache.py
42	2	lib/bb/cooker.py
5	0	lib/bb/parse/__init__.py

commit d49004a4e247e3958a2f7ea9ffe5ec92794e1352
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2015-01-13 14:11:36 +0000

    bitbake: Add pyinotify to lib/
    
    We need inotify support within bitbake and pyinotify provides the best
    mechanism to add this. We have a few options:
    
    a) Depend on pyinotify from the system
    b) Add in our own copy
    c) Only use pyinotify in cases like the memory resident server
    
    For a), it would mean adding in dependencies, updating documentation and
    generally creating churn for users as well as having implications for things
    like the build-appliance recipe.
    
    It turns out that glibc has the C functionality we need from version 2.4
    onwards (2006) and that we just need a single python file for b), there
    is no binary module needed. We therefore add in a copy of pyinotify 0.9.5
    into the tree meaning we can depend on it simply and unconditionally.
    
    c) is unattractive as we need fewer possible code paths, not more.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2416	0	lib/pyinotify.py

commit 47992591349bab2c12741b937096e41085399087
Author: Aníbal Limón <anibal.limon@linux.intel.com>
Date:   2015-01-12 18:36:13 -0600

    bb/fetch2/ssh.py: Fix urldata.localpath use os.path.normpath
    
    When urls ends with trailing slash os.path.basename return "" [1]
    and built urldata.localpath only with DL_DIR, it causes that
    donestamp is built as DL_DIR + '.done' and seems that ssh resource
    was already download.
    
    [YOCTO #6448]
    
    [1] https://docs.python.org/2/library/os.path.html#os.path.basename
    
    Signed-off-by: Aníbal Limón <anibal.limon@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	1	lib/bb/fetch2/ssh.py

commit 07ad307065bb15a48f0015b9e4a643201abdc283
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2015-01-08 20:57:45 +0000

    fetch/git: Improve ls-remote handling for latest_revision
    
    Currently the code ignores lightweight tags which has caused some user
    complaints. We can't put the right search list in place easily since
    the results don't come back in a good order, head happens to sort
    before tags.
    
    In the end I refactored the function so we get the complete list of
    remotes and then we can filter it ourselves in the order we chose,
    including checking for light weight tags, preferring the proper ones.
    
    Hopefully this resolves the issues people have been seeing.
    
    [YOCTO #6881]
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

11	4	lib/bb/fetch2/git.py

commit 1ea658dcdfde5465d3ecdb97550e0a66cb8b122e
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2015-01-08 13:15:14 +0000

    toaster: implementation of project page
    
    This patch brings the project page in line with the design,
    including build error handling and suggestions.
    
    Includes some refactoring for already existing code.
    
    [YOCTO #6587]
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

166	68	lib/toaster/toastergui/static/js/projectapp.js
36	14	lib/toaster/toastergui/templates/project.html
44	53	lib/toaster/toastergui/views.py

commit 1a52202f7f3719f5421289aaf0fc8eba0bf4c7ce
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2015-01-08 13:15:13 +0000

    toaster: branch name priority resolution
    
    Adding a Layer_Version function that gets back the
    branch name that should be used/displayed for finding the
    targeted git branch name.
    
    Change the commit id to use the branch name instead of the
    last-updated commit hash from the layer source.
    
    [YOCTO #7031]
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

7	1	lib/toaster/orm/models.py

commit 4037f8b08bc9fb5c4c9f260efb847105be718a32
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2015-01-08 13:15:12 +0000

    toaster: do not launch web browser on noweb option
    
    This patch makes Toaster managed mode obey the "noweb" parameter
    by not starting the web server and launching the web browser
    command if the "noweb" parameter is specified.
    
    The web browser will be pointed at 127.0.0.1 instead of 0.0.0.0
    
    [YOCTO #7039]
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

5	2	bin/toaster

commit 854f680b5b9d2d0fa796af84cb1218545fbfc55a
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2015-01-08 13:15:11 +0000

    toaster: write pre-read conf file for build variables
    
    We change the setting of variables from directly injection
    into the set-up cooker to writing a conf file that is pre-read
    on bitbake server startup. This is needed because the injection
    can only happen after the variable set is parsed, and the variables
    already inferred, so setting up variables happens too late.
    
    [YOCTO #7045]
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

5	1	bin/toaster
5	0	lib/toaster/bldcontrol/bbcontroller.py
1	4	lib/toaster/bldcontrol/management/commands/runbuilds.py
1	0	lib/toaster/orm/models.py

commit c34ebc51a6cbf90c64ef1ac461e475c6341f0f2a
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2015-01-08 13:15:10 +0000

    toaster: Improve client side error handling
    
    Make use of the toastermain.settings.DEBUG flag to toggle the client
    side error logging. Make the error logging consistent by using
    console.warn/error across the project, this adds traceability to the
    warnings. Also handles the case where console is not available by
    stubbing it in libtoaster.
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

34	5	lib/toaster/toastergui/static/js/libtoaster.js
14	14	lib/toaster/toastergui/static/js/projectapp.js
5	0	lib/toaster/toastergui/templates/base.html
4	4	lib/toaster/toastergui/templates/layers.html
4	4	lib/toaster/toastergui/templates/mrb_section.html
4	4	lib/toaster/toastergui/templates/targets.html
4	2	lib/toaster/toastergui/views.py

commit 86704281b79e524dccccc88cbf996b299b33bae2
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2015-01-08 10:35:16 +0000

    ast: Add error when trying to use dash in sh function names
    
    A dash character is illegal in function names in sh (but not bash). Since
    our shell tasks run under sh and the shell parser is sh based, EXPORT_FUNCTIONS
    won't work with class names containing a dash.
    
    We can't change sh, we can ensure the user is warned about the problem
    straight away though.
    
    [YOCTO #7006]
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	0	lib/bb/parse/ast.py

commit 6c0706a28d72c591f1b75b6e3f3b645859387c7e
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2014-12-08 21:25:23 +0000

    cache/fetch2/siggen: Ensure we track include history for file checksums
    
    Currently, if you reference a file url, its checksum is included in the
    task hash, however if you change to a different file at a different
    location, perhaps taking advantage of the FILESPATH functionality, the
    system will not reparse the file in question and change its checksum to
    match the new file.
    
    To correctly handle this, the system not only needs to know if the
    existing file still exists or not, but also check the existance
    of every file it would have looked at when computing the original file.
    
    We already do this in the bitbake parsing code for class inclusion. This
    change uses the same technique to log the file list we looked at and
    if files in these locations exist when they previously did not, to
    invalidate and reparse the file.
    
    Since data stored in the cache is flattened text, we have to use a string
    form of the data and split on the ":" character which is ugly, but is
    an internal detail we can improve later if a better method is found.
    
    The cache version changes to trigger a reparse since the previous
    cache data is now incompatible.
    
    [YOCTO #7019]
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

6	3	lib/bb/cache.py
18	17	lib/bb/fetch2/__init__.py
2	1	lib/bb/siggen.py

commit ea5efeac5c1f7986666c979f789786f29fc1619a
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2014-12-08 21:22:26 +0000

    wget: Add localpaths method which gives localpath with history
    
    In some cases for cache purpoes we not only need to know which file
    is going to be used but also which paths were considered. Add a
    localpaths method which includes the history.
    
    The core which() funciton already supports this, this just extends
    the function to preserve the extra data we need. localpath becomes
    just a special case of the case with history.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

33	21	lib/bb/fetch2/local.py

commit 461aa73fff0ab616032d28c4fd0322eb88838be6
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2014-12-08 21:31:56 +0000

    bitbake-worker: Use setsid() rather than setpgid()
    
    The bug has a long discussion of this. Basically, in some environments,
    the exact details of which aren't understood, a Ctrl+C signal to the
    UI is being transmitted to all the process children. Looking at the output
    of "ps ax -O tpgid", its clear the main process is still the terminal
    owner of these processes.
    
    stty -a on a problematic system shows: "-ignbrk brkint"
    and on a working system shows: "-ignbrk -brkint"
    
    The description of brkint would suggest this is the problem, setting up
    that terminal environment wasn't able to reproduce the problem though.
    It was confirmed that using setsid() caused the problem to be resolved
    and is probably the right thing to be doing anyway, so lets do it.
    
    [YOCTO #6949]
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

5	2	bin/bitbake-worker

commit 294bb9cad294423d4f8998405ceff58655f12660
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2015-01-08 09:41:03 +0000

    cooker: Shut down the parser in error state
    
    If the cooker is in an error state, we shouldn't continue to try parsing.
    This fixes an issue where an invalid PR server is detected when bitbake
    is started and ensures bitbake exits cleanly rather than hanging.
    
    [YOCTO #6934]
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/cooker.py

commit 24a28205ab680b6cc645d97b76c9855920608229
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2014-12-29 11:14:27 +0000

    utils: make edit_metadata_file() handle VARIABLE +=
    
    This is a little crude as the usage basically ignores that you're doing
    an append operation, but for a lot of cases it will be sufficient.
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/utils.py

commit 1c743fd2103730e27699dd55efc6914d3b0c3702
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2014-12-29 11:14:26 +0000

    bitbake-layers: fix error handling in add-layer / remove-layer
    
    * Fix add-layer error message when a layer is already in BBLAYERS
    * Ensure we show an error message if we can't find BBLAYERS at all
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	bin/bitbake-layers
8	0	lib/bb/utils.py

commit 10a47b1ec7470c9e8c4ffe0bb35cdf6d1bb2ee2e
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2014-12-23 12:32:36 +0000

    fetch2/wget: Fix horrible temp file handling
    
    Hardcoding a temp directory is bad practice and leads to races between
    the tests. There is no longer any good reason for doing this, drop it
    and ensure the files get cleaned up correctly.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	2	lib/bb/fetch2/wget.py

commit 16d5f40ad20fd08bf7a4d0e36200c739b5a9f59e
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2014-12-23 12:33:48 +0000

    tests/data: Add a key deletion test
    
    If you copy the datastore, then delete a key, it should not exist in
    d.keys(). This adds a test to cover the recently found data store bug.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

6	0	lib/bb/tests/data.py

commit 6c046660cfc4fb3792a42aeafff91a13f68a2e89
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2014-12-23 12:33:10 +0000

    tests/fetch: Add versionstring tests to network tests list, fix print()
    
    The versionstring tests hit the network so should only run when
    network tests are enabled.
    
    Also remove the print statement which confuses the test output and
    add it to the test failure message instead.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

20	20	lib/bb/tests/fetch.py

commit f28ee1bb03cb32d3757fbef67c9fbe143e3dadfa
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2014-12-23 12:32:06 +0000

    data_smart: Ensure d.keys() doesn't list deleted variables
    
    If you copy the datastore, then delete a variable, it still shows up
    in d.keys() when it should not. This patch addresses the issue.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

4	0	lib/bb/data_smart.py

commit 231cae9f9b552ec6737795c098d1de426b5adcbc
Author: Aníbal Limón <anibal.limon@linux.intel.com>
Date:   2014-12-18 17:58:57 -0600

    bb/fetch2/wget.py: latest_versionstring fix multithread and remove deprecated code
    
    In order to fix multithread usage of latest_versionstring moves package_custom_regex_comp
    from class to method level because need to be defined by package.
    
    Remove code for build url's with /download suffix because it's deprecated since you can
    specify the download directory using package_regex.inc file.
    
    Signed-off-by: Aníbal Limón <anibal.limon@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

13	17	lib/bb/fetch2/wget.py

commit 730b4c50364fba7173309278d670eda02e0ce38e
Author: Andy Voltz <andy.voltz@timesys.com>
Date:   2014-12-19 11:31:37 -0500

    ui/ncurses: Update ncurses ui to accept configParams
    
    Signed-off-by: Andy Voltz <andy.voltz@timesys.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	2	lib/bb/ui/ncurses.py

commit 19c74aaa2836a88d666f0032452fac521689ab6b
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2014-12-19 10:20:32 +0000

    cooker: add ability to ignore unmatched regexes in BBFILE_PATTERN
    
    Add a BBFILE_PATTERN_IGNORE_EMPTY variable to allow ignoring the fact
    that a regex specified in BBFILE_PATTERN for a particular collection
    doesn't match any recipes. This will be used in OpenEmbedded in the
    workspace layers created by "devtool" which may not always contain any
    recipes (which is not cause for warning the user).
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

4	3	lib/bb/cooker.py

commit 0e94aed033917b91ea6ba0522b14a040c3bdc987
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2014-12-19 10:20:31 +0000

    bitbake-layers: add commands for adding and removing layers
    
    Add add-layer and remove-layer commands for easily adding and removing
    layers to/from bblayers.conf.
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

54	0	bin/bitbake-layers

commit aa03a28b442549dd8ffe92ae4d6390f62202a76a
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2014-12-19 10:20:30 +0000

    utils: add basic metadata manipulation functions
    
    * Add a generic edit_metadata_file() function to modify variable
      assignments in any metadata file (conf, bb, bbappend) using a callback
      for flexibility
    * Add a specific edit_bblayers_conf() function to modify
      conf/bblayers.conf and add and/or remove layers from the BBLAYERS
      value within it.
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

127	0	lib/bb/utils.py

commit 73498afc3d45beede5b8f24a9acd523a1663b793
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2014-12-19 10:20:29 +0000

    siggen: ensure nostamp tasks force dependent tasks to re-execute
    
    If a nostamp task is depended on by a non-nostamp task, then we want the
    signature of that task to change such that it re-executes afterwards.
    This is an unusual situation, but we want this to work in OE in
    externalsrc.bbclass so that compilation happens every time it is
    requested.
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

6	0	lib/bb/siggen.py

commit 18cd0ce6a55c9065c3f1bf223b47d817b5efcd8f
Author: Richard Tollerton <rich.tollerton@ni.com>
Date:   2014-12-17 19:11:18 -0600

    data: escape '$' in shell variable assignment
    
    Running bitbake inside make results in the exported environment variable
    MAKEOVERRIDES="${-*-command-variables-*-}", which the shell chokes on
    when trying to expand it. But of course, it probably shouldn't have been
    trying to expand it in the first place -- so just escape the dollar
    sign.
    
    Signed-off-by: Richard Tollerton <rich.tollerton@ni.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	0	lib/bb/data.py

commit 3a5b78af4f3cab203824d933a73e82a41ab377e3
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2014-12-11 14:17:10 +0000

    toaster: importlayer Tidy up the page initialisation
    
    Tidy up the page initialisation and change the error logging so that
    it's consistent with other pages.
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>

11	10	lib/toaster/toastergui/templates/importlayer.html

commit c23736003b788f2b45ae7cbcd7c7250ead2e5724
Author: Belen Barros Pena <belen.barros.pena@intel.com>
Date:   2014-12-08 16:11:45 +0000

    toaster: Change the full stop to a colon
    
    In the import layers notification for multiple layers
    there was a full stop where there should be a colon.
    
    Signed-off-by: Belen Barros Pena <belen.barros.pena@intel.com>

1	1	lib/toaster/toastergui/static/js/projectapp.js

commit 19b8ff1949072691dade96038af529200175843a
Author: Belen Barros Pena <belen.barros.pena@intel.com>
Date:   2014-12-05 11:26:29 +0000

    toaster: Formatting changes to error messages
    
    Just giving a bit of space to the content of the error
    messages we show when you try to import a layer that
    already exists.
    
    Signed-off-by: Belen Barros Pena <belen.barros.pena@intel.com>

3	3	lib/toaster/toastergui/static/js/importlayer.js
1	1	lib/toaster/toastergui/templates/importlayer.html

commit 07e5c7c82519604501feb7d892db330c610978e9
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2014-12-08 15:29:01 +0000

    toaster: projectapp Add links to the imported layers notify
    
    Adds links to layer details for each of the layers that has been added
    to the project.
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>

1	2	lib/toaster/toastergui/static/js/importlayer.js
21	8	lib/toaster/toastergui/static/js/projectapp.js
2	1	lib/toaster/toastergui/templates/project.html
2	2	lib/toaster/toastergui/views.py

commit 54165dd929ef304357806411cd70caf85b6132f0
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2014-12-08 15:26:27 +0000

    toaster: importlayer Avoid namespace clash with layer name
    
    This was causing validation issues as the layer name was being picked up
    from a different location in the dom.
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>

1	1	lib/toaster/toastergui/static/js/importlayer.js
2	2	lib/toaster/toastergui/templates/importlayer.html

commit 23ca89dc3e0f0ea387649f1e9e8d7d50846048d6
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2014-12-05 17:25:51 +0000

    toaster: Importlayer add notify exactly which layers changed
    
    This changes when the dependencies are added to the project so that we
    can know which ones were successfully added by waiting for the server to
    respond with a list. This is more reliable because we may have specified
    dependencies which are already in the project.
    
    To pass this information to the project page a temporary cookie is used
    with the values for the notification.
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>

16	3	lib/toaster/toastergui/static/js/importlayer.js
23	4	lib/toaster/toastergui/static/js/projectapp.js
35	13	lib/toaster/toastergui/templates/layers_dep_modal.html
8	3	lib/toaster/toastergui/views.py

commit 1fae3ef8f87a836758519c85afb2762768c29efc
Author: Belen Barros Pena <belen.barros.pena@linux.intel.com>
Date:   2014-12-02 17:28:56 +0000

    toaster: tweaking the import layers form
    
    This commit makes the following changes to the import
    layers form:
    
    * In the explanatory text at the top of the page, show only
    the release description (to match the information shown in all
    other pages)
    
    * Make sure the spacing between form fields and labels is
    consistent across the form
    
    * Change the 'Branch, tag or commit' label to 'Revision'
    and add some help text to the label
    
    * Change the help text and the input type in the layer
     description
    
    * Change the help text next to the form actions to match
    the new field ordering in the form
    
    Signed-off-by: Belen Barros Pena <belen.barros.pena@linux.intel.com>
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>

4	4	lib/toaster/toastergui/templates/importlayer.html

commit 017f5c746e894f9d87d927c848386459ea332378
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2014-11-28 20:12:18 +0000

    toaster: Add import layer feature.
    
    This feature allows users to import layers from git into their current
    project and associate it with the release of the current project and the
    dependencies for the newly imported layer with existing layers.
    It will also resolve the child dependencies of the dependencies added.
    
    [YOCTO #6595]
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>

277	0	lib/toaster/toastergui/static/js/importlayer.js
6	0	lib/toaster/toastergui/static/js/projectapp.js
78	31	lib/toaster/toastergui/templates/importlayer.html
68	0	lib/toaster/toastergui/templates/layers_dep_modal.html
2	0	lib/toaster/toastergui/urls.py
102	5	lib/toaster/toastergui/views.py

commit 9bdd0a687ba74577f2c0f0b6c696433ea662d38f
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2014-12-03 13:55:19 +0000

    toasterui: refactor project layer finding logic
    
    This is a basic refactoring of the code computing
    the layer equivalence classes for a project, in order to
    bring common bits of logic in a single place.
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>

20	1	lib/toaster/orm/models.py
18	31	lib/toaster/toastergui/views.py

commit 5f98f245bdd381a141a018a7f9953a5510fbb4df
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2014-11-26 15:06:47 +0000

    toaster: libtoaster Add editProject and getLayerDepsForProject
    
    Add two utility functions for editing project settings and returning the
    layer "dependencies" for a specified layer.
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>

49	0	lib/toaster/toastergui/static/js/libtoaster.js

commit 9e3f2e2d985a575adb5520d8b517eac5ad6a15ed
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2014-11-26 15:05:07 +0000

    toaster: libtoaster Add a error handler to GET in makeTypehead
    
    If the JSON data comes back from the request with an error set, have a
    default handler which logs the error to the console.
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>

5	0	lib/toaster/toastergui/static/js/libtoaster.js

commit c635dd71670030da78c52545d2bb32b8c485c1af
Author: Belen Barros Pena <belen.barros.pena@intel.com>
Date:   2014-12-03 13:57:30 +0000

    toaster: Initialise the 'change' icon tooltips
    
    All 'change' icons should have a tooltip that appears
    when you hover over them. The tootlip says (fittingly):
    "Change". Initialise those icons in the libtoaster.js
    file so that they work outside the project page.
    
    Signed-off-by: Belen Barros Pena <belen.barros.pena@intel.com>

3	0	lib/toaster/toastergui/static/js/libtoaster.js

commit e354a40d7dbcd85fea9d37d3983428e4470df2dd
Author: Belen Barros Pena <belen.barros.pena@intel.com>
Date:   2014-12-03 13:53:34 +0000

    toaster: base Only show change project icon when > one project
    
    In the new build button, it only makes sense to change
    the selected project when there is more than one project
    in the Toaster instance. If the number of projects is 1,
    we hide the change project icon.
    
    Signed-off-by: Belen Barros Pena <belen.barros.pena@intel.com>

4	0	lib/toaster/toastergui/static/js/base.js

commit cf98a8cbc5dd7a41bbe5fdebcd81e29b1621ff35
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2014-12-09 14:19:23 +0000

    add POST endpoint for uploading eventlog files
    
    This patch adds a simple UI-less POST endpoint, where
    bitbake_eventlog.json files generated by a bitbake run can be
    uploaded to the running toaster instance for insertion into
    the database.
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>

27	0	lib/toaster/orm/urls.py
60	0	lib/toaster/orm/views.py

commit 6000e1ae5c846e51932ecd0dc21e0fa02eb10357
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2014-12-05 15:19:55 +0000

    toastergui: implement UI changes to allow file download
    
    This patchset adds download links in the build analisys pages
    if toaster runs in managed mode. This allows the user to access
    data directly from the web interface.
    
    [YOCTO #6837]
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>

9	9	lib/toaster/toastergui/templates/base.html
26	3	lib/toaster/toastergui/templates/build.html
91	40	lib/toaster/toastergui/templates/builddashboard.html
5	1	lib/toaster/toastergui/templates/configuration.html
3	0	lib/toaster/toastergui/templates/package_detail_base.html
10	1	lib/toaster/toastergui/templates/recipe.html
5	2	lib/toaster/toastergui/templates/recipes.html
5	3	lib/toaster/toastergui/templates/target.html
11	7	lib/toaster/toastergui/templates/task.html
10	2	lib/toaster/toastergui/templates/tasks.html
101	67	lib/toaster/toastergui/views.py

commit 1befb4a783bb7b7b387d4b5ee08830d9516f1ac2
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2014-12-09 11:57:38 +0000

    add option to write offline event log file
    
    This patch adds a "-w/--write-log" option to bitbake
    that writes an event log file for the current build.
    
    The name of the file is passed as a parameter to the "-w"
    argument. If the parameter is the empty string '', the file
    name is generated in the form bitbake_eventlog_DATE.json,
    where DATE is the current date and time, with second precision.
    
    The "-w" option can also be supplied as the BBEVENTLOG
    environment variable.
    
    We add a script, toater-eventreplay, that reads an event
    log file and loads the data into a Toaster database, creating
    a build entry.
    
    We modify the toasterui to fix minor issues with reading
    events from an event log file.
    
    Performance impact is undetectable under no-task executed builds.
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>

11	1	bin/bitbake
179	0	bin/toaster-eventreplay
72	3	lib/bb/cooker.py
1	0	lib/bb/cookerdata.py
36	17	lib/bb/ui/buildinfohelper.py
1	1	lib/bb/ui/toasterui.py

commit 10c27450601b4d24bbb273bd0e053498807d1060
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2014-01-20 09:39:34 +0000

    toasterui: add extra debug and development infos
    
    We update and add logs throughout the code in order to help
    with development. The extra logging is turned off by default,
    but it can be enabled by using environment variables.
    
    All logging happens through the Python logging facilities.
    
    The toaster UI will save a log of all incoming events if the
    TOASTER_EVENTLOG variable is set.
    
    If TOASTER_SQLDEBUG is set all DB queries will be logged.
    
    If TOASTER_DEVEL is set and the django-fresh module is available,
    the module is enabled to allow auto-reload of pages when the
    source is changed.
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>

10	2	lib/bb/ui/buildinfohelper.py
10	9	lib/bb/ui/toasterui.py
17	10	lib/toaster/bldcontrol/localhostbecontroller.py
1	1	lib/toaster/bldcontrol/management/commands/checksettings.py
9	4	lib/toaster/bldcontrol/management/commands/runbuilds.py
25	2	lib/toaster/toastermain/settings.py
7	3	lib/toaster/toastermain/urls.py

commit bbe24d912869312d561be199b2c029b0c898e049
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2014-12-05 15:14:20 +0000

    add build artifacts table and other improvements
    
    We add a BuildArtifacts class to store data about files
    discovered during the build process and not stored anywhere
    else.
    
    Small cosmetic changes in the toasterui.
    
    Add model methods to return file path display data relative
    to the build environment instead of absolute file paths.
    
    [YOCTO #6834]
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>

20	6	lib/bb/ui/buildinfohelper.py
4	0	lib/bb/ui/toasterui.py
9	1	lib/toaster/bldcontrol/models.py
342	0	lib/toaster/orm/migrations/0019_auto__add_buildartifact.py
29	0	lib/toaster/orm/models.py

commit 9e27bb2869e8ec6781d2f68d0585ebbf9ca6f3d8
Author: Robert P. J. Day <rpjday@crashcourse.ca>
Date:   2014-08-10 16:21:51 +0300

    bitbake-user-manual-metadata.xml: Updated do_package_write example
    
    Given that the "do_package_write" task doesn't exist in OE anymore,
    steal another, existing example to demonstrate the "rdeptask" flag.
    
    Signed-off-by: Scott Rifenbark <scott.m.rifenbark@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	3	doc/bitbake-user-manual/bitbake-user-manual-metadata.xml

commit 38150bc53c6bda5be7194f9acd112d362506d2ea
Author: Scott Rifenbark <scott.m.rifenbark@intel.com>
Date:   2014-08-15 09:01:49 +0300

    bitbake-user-manual-metadata.xml: Added [eventmask] flag information.
    
    Reported-by: Laszlo Papp <lpapp@kde.org>
    Signed-off-by: Scott Rifenbark <scott.m.rifenbark@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

23	2	doc/bitbake-user-manual/bitbake-user-manual-metadata.xml

commit 497404e8484b7ca7c11e459bf0845642156eb677
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2014-12-08 16:38:14 +0000

    runqueue: Fix 100% cpu use after keyboard interrupt
    
    After Ctrl+C is pressed to interrupt bitbake, it loops continually, running
    at 100% cpu. This patch selects on the correct file descriptors resolving
    the excess cpu usage.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

4	5	lib/bb/runqueue.py

commit f28f37220e7787721a31b659521a1c44ebea92bf
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2014-12-08 16:37:26 +0000

    data: Handle BASH_FUNC shellshock implication
    
    The shellshock patches changed the way bash functions are exported.
    Unfortunately different distros used slightly different formats,
    Fedora went with BASH_FUNC_XXX()=() { echo foo; } and Ubuntu went with
    BASH_FUNC_foo%%=() {  echo foo; }.
    
    The former causes errors in dealing with out output from emit_env,
    the functions are not exported in either case any more.
    
    This patch handles things so the functions work as expected in either
    case.
    
    [YOCTO #6880]
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

7	0	lib/bb/data.py

commit ac45ea848901b0f6cd23087b662dde8ce9cd807e
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2014-12-08 10:50:25 +0000

    event: fix resetting class handlers object
    
    If you don't explicitly specify to use a global variable when doing an
    assignment, you will be setting a local variable instead, which means
    this function wasn't working at all. It explains some odd behaviour we
    have seen in the layer index where event handlers were sometimes
    bleeding into other contexts where they should not have been.
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	0	lib/bb/event.py

commit 41236c28985a3b66b3737382a94e39dbf6480160
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2014-12-08 10:50:24 +0000

    event: add a means of filtering events internally
    
    When using external tinfoil-based utilities, it is useful to be able to
    turn off most of the event handlers; for example sstate_eventhandler
    doesn't like being sent events for any recipe which has been skipped.
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

8	0	lib/bb/event.py

commit 49dbcfbc56a206964acc5de761bba31be0283ba1
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2014-12-08 10:50:23 +0000

    fetch2: add means of disabling SRC_URI checksums
    
    If we're fetching outside of the context of a recipe, it's handy to be
    able to disable checksum functionality so you don't get a meaningless
    warning about the signatures being missing.
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	1	lib/bb/fetch2/__init__.py

commit 20e6939ebcb62e08a9a7ad586a915dfe368136a0
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2014-12-08 10:50:22 +0000

    utils: add exec_flat_python_func()
    
    Add a function that allows executing a flat python function (defined
    with def funcname(args): ...).
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

22	0	lib/bb/utils.py

commit be8f0076667f17587dbcff4b6b6467a7ec29d2b8
Author: Scott Rifenbark <scott.m.rifenbark@intel.com>
Date:   2014-12-09 11:53:15 -0600

    bitbake-user-manual: Updated copyright to 2015.
    
    Signed-off-by: Scott Rifenbark <scott.m.rifenbark@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	doc/bitbake-user-manual/bitbake-user-manual.xml

commit 94d9590a4310f96396e8e782bcf65918f4dcdb36
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2014-12-03 12:14:43 +0000

    bitbake: Update to 1.25.0 as development version after release
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	bin/bitbake
1	1	lib/bb/__init__.py

commit 2800958dadaa5c055ba21d52c98d842d360f0785
Author: Ross Burton <ross.burton@intel.com>
Date:   2014-12-01 20:50:14 +0000

    data: rename defaultval to _defaultval
    
    The defaultval field is intended to be internal and the only use of that field
    outside of data.py is to skip over it when iterating over a value's flags.
    
    For clarity and convenience, rename the field to _defaultval so that it is
    considered internal and not exposed through the data API.
    
    Signed-off-by: Ross Burton <ross.burton@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	3	lib/bb/data_smart.py
1	1	lib/bb/parse/ast.py

commit c52841445d8db8f84c4da34203b195fea5874247
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2014-11-27 14:59:21 +0000

    cooker: Allow featureset in error state
    
    Currently, if an invalid PR service is selected the server will error
    with a traceback. This is because its set into the error state and the
    setFeature code will then fail since its not in the initial state.
    
    Modifying the featureset in the error state is acceptable, we just need
    to ensure we don't trigger a reset, that would happen from whichever
    code handles the error.
    
    [YOCTO #6934]
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	2	lib/bb/cooker.py

commit e30c11af7bc8a1f3d8c9198ee3c0065bd6b447cc
Author: Aníbal Limón <anibal.limon@linux.intel.com>
Date:   2014-11-27 17:48:43 -0600

    fetch/wget: latest_versionstring clean improvments minor
    
    Update documentation strings in _check_latest_dir and _check_latest_version
    methods with  the correct return types.
    
    _check_latest_version method remove unused testversion variable.
    
    Signed-off-by: Aníbal Limón <anibal.limon@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	3	lib/bb/fetch2/wget.py

commit 148aba30155f4de17f6c6fb9b4c37f08a2db202b
Author: Aníbal Limón <anibal.limon@linux.intel.com>
Date:   2014-11-27 15:49:28 -0600

    tests/fetch: Update wget latest_versionstring cups case
    
    Update test case for cups is needed because match only 2.0.0
    versions see VERSION=2\.0\.0 in the previous string.
    
    Signed-off-by: Aníbal Limón <anibal.limon@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/tests/fetch.py

commit d2890c8868281cb7d89a8dc66e5db589cddb3363
Author: Aníbal Limón <anibal.limon@linux.intel.com>
Date:   2014-11-27 15:46:12 -0600

    fetch/wget: latest_versionstring remove newuri set because is previous set
    
    Signed-off-by: Aníbal Limón <anibal.limon@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

0	2	lib/bb/fetch2/wget.py

commit 4fa8542a8880d5749fbb3382706e011b012024d0
Author: Aníbal Limón <anibal.limon@linux.intel.com>
Date:   2014-11-27 19:12:07 -0600

    fetch/wget: latest_versionstring add support for search in RAW html lines
    
    Some upstream sites put the name of the package in the body of href tags,
    i.e. <a href="#43">somepackage-v1.4.10.tar.gz </a>.
    
    Signed-off-by: Aníbal Limón <anibal.limon@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

6	1	lib/bb/fetch2/wget.py

commit 91b6b38ccee5e9d5bb27e4cd1578356c3b3dc607
Author: Aníbal Limón <anibal.limon@linux.intel.com>
Date:   2014-11-27 19:12:06 -0600

    fetch/wget: latest_versionstring remove unnecessary usage for name in version comparision
    
    Signed-off-by: Aníbal Limón <anibal.limon@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	2	lib/bb/fetch2/wget.py

commit 91a7ac8c7f87f98e366585cf9720ec35b0790bae
Author: Aníbal Limón <anibal.limon@linux.intel.com>
Date:   2014-11-27 19:12:05 -0600

    fetch/wget: latest_versionstring improvments in searching
    
    Validate if package contain version string if not return the current
    version cases for spectrum-fw and corpus recipes.
    
    _check_latest_version return the latest version available don't
    take into account the current version previous this only return
    the upstream version if it greater than the current version.
    
    Signed-off-by: Aníbal Limón <anibal.limon@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

23	14	lib/bb/fetch2/wget.py

commit a69d5d48c4bf9a3df3121cc4e69ba5d7e947ad8d
Author: Aníbal Limón <anibal.limon@linux.intel.com>
Date:   2014-11-27 19:12:04 -0600

    fetch/wget: latest_versionstring add package_custom_regex_comp
    
    package_custom_regex_comp is built with the current package name and
    then used to search upstream version this reduces custom regex'es in
    sites that have different packages in the same directory.
    
    Signed-off-by: Aníbal Limón <anibal.limon@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

11	4	lib/bb/fetch2/wget.py

commit afc33ec7cdb7d8ee3602a23fa973551ca5510ac4
Author: Aníbal Limón <anibal.limon@linux.intel.com>
Date:   2014-11-27 19:12:03 -0600

    fetch/wget: Improve REGEX_URI handling
    
    Latest version string only try to find latest directory when REGEX_URI
    isn't specified to avoid unnecessary processing and makes code easier
    
    Signed-off-by: Aníbal Limón <anibal.limon@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

29	26	lib/bb/fetch2/wget.py

commit 583e5d9c1c3cb8a25d34648078200faadc597e9c
Author: Aníbal Limón <anibal.limon@linux.intel.com>
Date:   2014-11-27 19:12:02 -0600

    fetch/wget: _init_regexes rename variables to be more consistent and move dirver_regex into it
    
    Signed-off-by: Aníbal Limón <anibal.limon@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

18	12	lib/bb/fetch2/wget.py

commit 6989193a875afd0b1f0f88c95e28cb81bfdb4eaf
Author: Aníbal Limón <anibal.limon@linux.intel.com>
Date:   2014-11-27 19:12:01 -0600

    fetch/wget: latest_versionstring create _init_regex method for have one place when regex'es are defined
    
    Signed-off-by: Aníbal Limón <anibal.limon@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

10	5	lib/bb/fetch2/wget.py

commit 1bf19f66260aaca2caa300e976bf90479e2c48f3
Author: Belen Barros Pena <belen.barros.pena@linux.intel.com>
Date:   2014-11-27 14:27:18 +0000

    toaster: remove the word 'project' from layers and machine
    
    Remove the word 'project' from the 'Layers' and 'Machine'
    sections of the project page, following feedback from the
    QA team, who suggested that the word 'project'
    raised questions regarding the scope of the configuration,
    
    Signed-off-by: Belen Barros Pena <belen.barros.pena@linux.intel.com>

2	2	lib/toaster/toastergui/templates/project.html

commit 9a90bf201dab83060f0bdd6ac08c72b8d62f6060
Author: Belen Barros Pena <belen.barros.pena@linux.intel.com>
Date:   2014-11-27 12:18:25 +0000

    toaster: release name consistency
    
    Small changes to the project, new project and all layers
    pages to ensure consitency in release naming across the
    interface.
    
    The changes are:
    
    * In the new project page, change the label 'release version' to
    'release'
    
    * In the new project page, sort the releases in the dropdown menu
    in ascending alphabetical order
    
    * In the new project page, remove the release name that was
    showing between brackets after the release description in the
    dropdown menu
    
    * In the project page, make sure the release information
    shows the release description field instead of the release name,
    to keep consistency with the new project page
    
    * In the all layers page, provide some help text for the branch 'HEAD'
    
    Signed-off-by: Belen Barros Pena <belen.barros.pena@linux.intel.com>

8	1	lib/toaster/toastergui/templates/layers.html
2	2	lib/toaster/toastergui/templates/newproject.html
2	2	lib/toaster/toastergui/templates/project.html
2	2	lib/toaster/toastergui/views.py

commit 8d75e28e0688a6520311afce36543175f36910b3
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2014-11-26 17:09:16 +0000

    toasterui: Compatibility patch for daisy and dizzy
    
    This patch brings in changes that allow a toasterUI coming in
    from 'master' branch to record data from a 'daisy' or 'dizzy'
    bitbake server.
    
    This is needed to allow Toaster to record builds running
    on older branch releases.
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>

26	17	lib/bb/ui/buildinfohelper.py
1	2	lib/bb/ui/toasterui.py

commit d1cd8b229c402fae3499e35415ad79c0e11ee517
Author: Belen Barros Pena <belen.barros.pena@intel.com>
Date:   2014-11-25 18:58:35 +0000

    toaster: fix padding of build notifications
    
    In managed mode, we show the name of the project in the build
    notifications of the all builds page. The way we show the
    project requires modifying the default padding of the .alert
    class. This patch makes sure the padding modification is
    only applied in managed mode, i.e., when the project name
    needs to be shown.
    
    Signed-off-by: Belen Barros Pena <belen.barros.pena@intel.com>

4	0	lib/toaster/toastergui/static/css/default.css
2	2	lib/toaster/toastergui/templates/mrb_section.html

commit 99ac7379e5df6c5cc491c2be591b15ad7ec04caa
Author: Belen Barros Pena <belen.barros.pena@linux.intel.com>
Date:   2014-11-24 18:30:58 +0000

    toaster: make 'latest builds' section consistent across pages
    
    Make sure that the 'latest builds' sections in the all builds
    page and the project page are identical:
    
    * no icon to represent build outcome
    * remove machine name
    * show date only when the build is more than 24 hours old
    * same date and time format
    
    Signed-off-by: Belen Barros Pena <belen.barros.pena@linux.intel.com>
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>

11	4	lib/toaster/toastergui/templates/mrb_section.html
8	0	lib/toaster/toastergui/templatetags/projecttags.py

commit 3f6b33472820e339c0f057c2e30f25ec2a04366b
Author: Belen Barros Pena <belen.barros.pena@linux.intel.com>
Date:   2014-11-24 18:27:48 +0000

    toaster: fix errors and warnings display
    
    In the 'Latest builds' section of the project page,
    show number of errors and number of warnings as we
    show them in the all builds page.
    
    Signed-off-by: Belen Barros Pena <belen.barros.pena@linux.intel.com>
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>

18	2	lib/toaster/toastergui/templates/project.html

commit be357d147d525ac3d6b7bd33ca0aa594728ffedd
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2014-11-26 12:18:55 +0000

    toastergui: new project page
    
    Patch that brings in to new project page according to specifications.
    
    [YOCTO #6596]
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>

1	1	lib/toaster/toastergui/templates/base.html
86	30	lib/toaster/toastergui/templates/newproject.html
5	2	lib/toaster/toastergui/views.py

commit e764834f3c7c7da9356fa11b62e1fa8f643986fc
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2014-11-25 16:12:05 +0000

    toaster: fix loadconf path calculation
    
    Fixing the path calculation for local layer sources, as the
    path need to be absolute.
    
    Added tests for pieces of code.
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>

25	17	lib/toaster/bldcontrol/management/commands/loadconf.py
19	0	lib/toaster/bldcontrol/tests.py

commit e02ec052a62cbc476bdac65cb7cea1167ce04781
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2014-11-25 13:40:38 +0000

    toasterui: fix layer identification for managed builds
    
    If we have a managed build, we match the layers used for build
    with the layers configured for project, as we know where the layers
    are coming from
    
    [YOCTO #6962]
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>

25	13	lib/bb/ui/buildinfohelper.py

commit 2378812bc24d433125fb940f110154f0ce638448
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2014-11-25 10:12:46 +0000

    toaster: display Toaster exceptions and other fixes
    
    Changing ToasterUI to log toaster exceptions on a different level than
    build errors.
    
    Updating the build dashboard to show Toaster exceptions.
    
    We add extra logging to console for exceptions.
    
    Fixed a problem where packages database entries were created instead of
    being looked up in the database, conficting with entries created to
    satisfy dependency information.
    
    Toaster now checks for invalid states at startup and performs needed
    cleanups.
    
    Removed loading reference to jquery-ui.min.css as we do not have this
    file.
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>

13	2	lib/bb/ui/buildinfohelper.py
4	3	lib/bb/ui/toasterui.py
8	0	lib/toaster/bldcontrol/management/commands/checksettings.py
8	1	lib/toaster/orm/models.py
7	0	lib/toaster/toastergui/static/js/libtoaster.js
1	1	lib/toaster/toastergui/templates/base.html
35	0	lib/toaster/toastergui/templates/builddashboard.html
1	1	lib/toaster/toastergui/views.py

commit 86dced90db666aa73ebb7ebb48d64fc08f66e7e2
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2014-11-25 11:21:53 +0000

    toastergui: do not show project info in interactive mode
    
    The most recent builds section showed the project name and the Run Again
    buttons regardless whenever the Toaster was in interactive or managed
    modes. These widgets have no meaning in interactive mode, and this
    patch disables the widgets if toaster is not running in Managed mode.
    
    [YOCTO #6776]
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>

3	3	lib/toaster/toastergui/templates/mrb_section.html

commit e1f7ec868b0702dfd27d5708581c134aaa6f4ae8
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2014-11-24 12:52:49 +0000

    toastergui: update layer search criteria
    
    In order to accomodate the designs around imported layer,
    we add a "project" field for in the layer versions.
    
    The field must be set if and only if the layer is manually
    imported in the project. This will prevent information leakage
    between different projects.
    
    The views have been updated to perform relevant layer queries
    in a single location.
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>

331	0	lib/toaster/orm/migrations/0018_auto__add_field_layer_version_project.py
3	1	lib/toaster/orm/models.py
37	22	lib/toaster/toastergui/views.py

commit 6daada59ee846c4e957bba3574dc262a0c79854d
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2014-11-20 15:06:28 +0000

    toaster: base Only show New Build button when there are > 0 projects
    
    Only show new build button if we have defined at least one project as we
    can't select a project to build against if there are no projects created
    yet.
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>

9	4	lib/toaster/toastergui/static/js/base.js
1	0	lib/toaster/toastergui/templates/base.html

commit 9f3cf52b3a96768e5b9764dde02833b078fe61e4
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2014-11-21 13:58:51 +0000

    toaster: use http proxies to fetch data
    
    Under some network configurations http proxies are used
    for Internet access. This patch makes Toaster obey
    the http_proxy environment variable when fetching
    information from layer indexes.
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>

32	13	lib/toaster/orm/models.py

commit 27023ce2d264ce05008ef9af33982b054c6a87b5
Author: Belen Barros Pena <belen.barros.pena@linux.intel.com>
Date:   2014-11-18 14:16:57 +0000

    toaster: do not show target if target name is empty
    
    In the all targets table, all entries should have a target
    name. If a target does not have a name, something has not
    gone to plan, so don't show it.
    
    Signed-off-by: Belen Barros Pena <belen.barros.pena@linux.intel.com>

2	0	lib/toaster/toastergui/templates/targets.html

commit dc9b4a4ab06ed49f3fcab4f644b8bc136f19fdb0
Author: Belen Barros Pena <belen.barros.pena@linux.intel.com>
Date:   2014-11-13 11:16:56 +0000

    toaster: fix dependencies dialog layout
    
    Remove the bottom margin of forms inside dependencies
    modal dialogs.
    
    Signed-off-by: Belen Barros Pena <belen.barros.pena@linux.intel.com>
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>

3	0	lib/toaster/toastergui/static/css/default.css
1	1	lib/toaster/toastergui/templates/layers.html

commit c67a5dd8026833e167c58a17643febee130dbb35
Author: Belen Barros Pena <belen.barros.pena@linux.intel.com>
Date:   2014-11-13 11:34:01 +0000

    toaster: add no results state to all layers page
    
    When you search for a layer and your search returns no results,
    we should show you an alert and a link to show back all layers,
    as we do in all other tables.
    
    Signed-off-by: Belen Barros Pena <belen.barros.pena@linux.intel.com>

14	0	lib/toaster/toastergui/templates/layers.html

commit 83af0db872ea28965cd6007ad72ff210f67a4f30
Author: Belen Barros Pena <belen.barros.pena@linux.intel.com>
Date:   2014-11-18 12:02:22 +0000

    toaster: Tiny refinements to the new build button dialog
    
    * Get rid of the display:block attribute for the "View
    all projects" link, to stop it from firing when you
    click outside (but next to) the link
    
    * Give some margin to the incomplete configuration
    alert
    
    Signed-off-by: Belen Barros Pena <belen.barros.pena@linux.intel.com>

2	1	lib/toaster/toastergui/static/css/default.css
2	2	lib/toaster/toastergui/templates/base.html

commit c2021dda953db51f59fb115542ea4a329a854f76
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2014-11-14 15:44:55 +0000

    toaster: project page remove additional tooltip for Change pencil
    
    We have a global pencil icon tooltip so avoid two tooltips appearing by
    removing them from the project page. This also means it's one less place to
    update it.
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>

3	3	lib/toaster/toastergui/templates/project.html

commit e92769b43b00764082a7cb2207e314b40510ef62
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2014-11-11 16:30:22 +0000

    toaster: Add New Build Button feature
    
    This adds a quick access dropdown menu feature for running builds on a
    selected project.
    
    [YOCTO #6677]
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>

4	0	lib/toaster/toastergui/static/css/default.css
125	0	lib/toaster/toastergui/static/js/base.js
64	5	lib/toaster/toastergui/templates/base.html
3	0	lib/toaster/toastergui/urls.py
31	1	lib/toaster/toastergui/views.py

commit af42ea5f006c5cf55a7c57a42904f412639d261f
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2014-11-14 18:12:20 +0000

    toaster: libtoaster: Add getProjectInfo utility function
    
    Add a utility function to return a specified project's info/config
    This re-uses the existing server code path for the project edit
    except that it allows any project id to be used as a parameter
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>

22	0	lib/toaster/toastergui/static/js/libtoaster.js
1	0	lib/toaster/toastergui/urls.py
4	1	lib/toaster/toastergui/views.py

commit cdf6178ae3675b40afca9f08d491ca1b7e45914e
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2014-11-11 16:23:58 +0000

    toaster: Create libtoaster.js with some utility functions
    
    Replace main.js with libtoaster. This can be a place for common
    functionality for toaster. Calling it lib... makes it more obvious as
    well as helps with code readability due to the namespacing.
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>

237	0	lib/toaster/toastergui/static/js/libtoaster.js
0	111	lib/toaster/toastergui/static/js/main.js
2	27	lib/toaster/toastergui/templates/base.html

commit 4357200aed522ad56cfd84917f877645b83b6a70
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2014-11-14 17:07:06 +0000

    toastergui: layer name correlation
    
    This patch modifies how layers are identified and matched.
    
    Layers were primarely organized by the source of layer information,
    and Releases were separated by both layer git branches and originating
    source of layer information. This setup prevented mixing layers from
    different sources for a certain release, which didn't match the way
    people use Yocto Project / bitbake.
    
    This patch brings name-based indentification, where layers with the
    same name are assumed to be equivalent, in the sense of being able
    to substitute one another. To facilitate this identification to
    humans, layers are differentiated by GIT URI instead of layer sources,
    which was a rather arbitrary abstraction.
    
    Additional changes include modification to models in order accomodate
    for the new data structure, and to config file loading to match
    the new toasterconf.json layout.
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>

1	1	bin/toaster
35	12	lib/toaster/bldcontrol/management/commands/checksettings.py
19	10	lib/toaster/bldcontrol/management/commands/loadconf.py
396	0	lib/toaster/orm/migrations/0017_auto__del_toastersettingdefaultlayer__add_releaselayersourcepriority__.py
86	29	lib/toaster/orm/models.py
7	4	lib/toaster/orm/tests.py
2	0	lib/toaster/toastergui/static/js/projectapp.js
3	3	lib/toaster/toastergui/templates/layers.html
2	2	lib/toaster/toastergui/templates/project.html
48	36	lib/toaster/toastergui/views.py

commit 3f614295d688c33b690f63ff7eb28e6988707919
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2014-10-27 19:03:06 +0000

    toaster: skip virtualenv when searching for django apps
    
    If we are using a virtualenv in the current search path we end up trying
    to add modules to the django apps list which do not have the correct
    load path or are internal to other modules. Fix this by skipping the
    virtualenv path.
    
    [YOCTO #6896]
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>

4	0	lib/toaster/toastermain/settings.py
4	0	lib/toaster/toastermain/urls.py

commit d4a47bc84f762666a847f1152cc2e75c9ef36092
Author: Belen Barros Pena <belen.barros.pena@linux.intel.com>
Date:   2014-11-18 15:02:17 +0000

    toaster: fix file name collision
    
    When toaster is used by multiple users on the same machine,
    it is possible that files in /tmp have a name race.
    
    This patch makes sure that the files have unique names.
    
    Signed-off-by: Belen Barros Pena <belen.barros.pena@linux.intel.com>

1	1	bin/toaster

commit 40d2ae0723de2bf5fee343faafb4afda40546839
Author: Robert Yang <liezhi.yang@windriver.com>
Date:   2014-11-17 02:27:36 -0800

    bitbake-worker: exit normally when SIGHUP
    
    Fixed:
    1) Run "bitbake recipe" in the terminal
    2) Close the terminal while building
    3) $ ps aux | grep bitbake-worker
    There will be many processes, and they will keep the resources (e.g.,
    memory), and won't exit unless kill or kill -9.
    
    Signed-off-by: Robert Yang <liezhi.yang@windriver.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

8	1	bin/bitbake-worker
6	1	lib/bb/cooker.py

commit 5cfdebe7a67dccc7552ff80c1ccc970e36d562df
Author: Otavio Salvador <otavio@ossystems.com.br>
Date:   2014-11-12 08:33:23 -0200

    bb.codeparser.py: Remove reference for oe.utils.contains
    
    The oe.utils.contains function has been removed from OE-Core metadata
    as the references for it has been replaced to use the
    bb.utils.contains.
    
    Signed-off-by: Otavio Salvador <otavio@ossystems.com.br>
    Signed-off-by: Ross Burton <ross.burton@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/codeparser.py

commit 196106100e2dedfacce95be0ee6def94c5a80f27
Author: Ross Burton <ross.burton@intel.com>
Date:   2014-11-13 16:33:18 +0000

    depexp: use stateForceShutdown instead of stateStop
    
    This state was renamed in bitbake 12e9d3 but this use of it wasn't changed.
    
    [ YOCTO #5445 ]
    
    Signed-off-by: Ross Burton <ross.burton@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/ui/depexp.py

commit 2a8e847de85546d43600a561f9c63aa36bd69222
Author: Brendan Le Foll <brendan.le.foll@intel.com>
Date:   2014-11-12 11:42:39 +0000

    cooker.py: fix loginfo op being set to an invalid value
    
    loginfo "op" was being set to invalid values in saveConfigurationVar it was
    working because set is a python global but append is not. This replaces both
    the "op" with strings and removes the crash when calling appendConfigurationVar
    
    Signed-off-by: Brendan Le Foll <brendan.le.foll@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	2	lib/bb/cooker.py

commit 23c440db9c076ca37e651bdbbdbefee54998e1dc
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2014-11-11 17:01:09 +0000

    toastergui: fix XSS injection points in projects page
    
    We close XSS injection points in Projects page.
    
    * modify the json filter to properly escape HTML tags in strings
    * enable $sanitize to automatically sanitize dangerous HTML in
    user-supplied input
    * clean dangerous characters in targets field, as that field contents
    will be directly passed to a shell command
    
    Based on the vulnerability discovered and the patch provided by Michael Wood.
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>

4	3	lib/toaster/toastergui/static/js/projectapp.js
9	7	lib/toaster/toastergui/templates/project.html
5	1	lib/toaster/toastergui/templatetags/projecttags.py
25	23	lib/toaster/toastergui/views.py

commit 4165895329b3a5e439a38ee749b089637dc502d7
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2014-11-11 16:29:44 +0000

    toaster: importing angular service
    
    We import angular services ngRoute and
    ngSanitize that helps performing user-input
    sanitization in order to prevent XSS.
    
    Both services are version 1.2.23.
    
    License is MIT.
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>

-	-	lib/toaster/toastergui/static/js/angular-route.min.js
-	-	lib/toaster/toastergui/static/js/angular-sanitize.min.js

commit 19113c4fe915be7db51ab06dfab5ea0797faea84
Author: Belen Barros <belen.barros.pena@intel.com>
Date:   2014-11-11 12:22:46 +0000

    toastergui: Silly UI fixes
    
    Small fixes to the UI of the project.html and targets.html templates.
    
    In project.html:
    
    * Remove some inline styles and replace them with declarations
    in default.css
    
    * Make sure that the 'add' and 'build' buttons in the project
    configuration areas have nice, rounded corners
    
    * Add some space between the machine name and the change icon
    
    * Remove the input-prepend class from the build form (we don't
    need it)
    
    * Apply the success class to target names in completed builds
    
    * Bold machine and project name in the change notifications to
    match all other notifications
    
    * There is a bug in Twitter Boostrap in tooltips inside buttons, so
    moving the tooltip in the 'build' button outside the button tag
    
    In targets.html, just add a missing space between the semicolon
    and the first layer name in the add layer notification.
    
    Signed-off-by: Belen Barros <belen.barros.pena@intel.com>
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>

2	0	lib/toaster/toastergui/static/css/default.css
2	2	lib/toaster/toastergui/static/js/projectapp.js
18	13	lib/toaster/toastergui/templates/project.html
1	1	lib/toaster/toastergui/templates/targets.html

commit 76c90fe9dcd6fc1aa7e82d9dca0ea9e653d322a1
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2014-11-06 15:27:24 +0000

    toaster: Replace bootstrap js with the correct version
    
    The bootstrap version we are working with is 2.3 not 3
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>

-	-	lib/toaster/toastergui/static/js/bootstrap.min.js
0	15003	lib/toaster/toastergui/static/js/jquery-ui.js

commit 09e3ba8f800a03de731b022543cae33a46be17ef
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2014-11-07 13:26:45 +0000

    toastergui: changes for the Project page, round 3 of reviews
    
    This patch implements the round 3 of reviews for the Project
    page, including fixing the time display, fixing the build list
    display, with fade-in and fade-out animations, and various
    small layout fixes.
    
    [YOCTO #6587]
    [YOCTO #6731]
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>

27	0	lib/toaster/toastergui/static/css/default.css
141	41	lib/toaster/toastergui/static/js/projectapp.js
45	17	lib/toaster/toastergui/templates/project.html
31	10	lib/toaster/toastergui/views.py

commit 3ed596ac4e21a4494fd7f6cd8739d460fd98512f
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2014-11-06 12:57:58 +0000

    toaster: separate the load configuration file command
    
    We separate the load configuration command as to allow
    system administrators load toasterconf.json file as part of the
    setup process.
    
    [YOCTO #6895]
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>

5	134	lib/toaster/bldcontrol/management/commands/checksettings.py
157	0	lib/toaster/bldcontrol/management/commands/loadconf.py

commit d17e8425de6c609394b9a029afa2dcb455df0b3c
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2014-10-31 16:18:04 +0000

    toaster: Update filter count labels when Add/Remove layers
    
    When the user has added/removed a layer but no page reload/requery has
    happened we need to update the filter count labels client side.
    
    [YOCTO #6861]
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>

2	2	lib/toaster/toastergui/templates/filtersnippet.html
13	0	lib/toaster/toastergui/templates/layers.html
10	0	lib/toaster/toastergui/templates/targets.html

commit 4ef276e379d58130bb50024d7b74b7774fce6fdd
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2014-10-29 17:44:33 +0000

    toaster: Fix the table data so that it matches the column order
    
    This fixes the issue where the column is under the wrong table header.
    
    [YOCTO #6684]
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>

6	4	lib/toaster/toastergui/templates/target.html

commit 96d7738f964784871c928c376cb9fbc9a275cf00
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2014-10-02 17:58:15 +0100

    toastergui: Various fixes for projects, layers and targets page
    
    This is a combined set of fixes for the project, layers and targets
    pages in the project section of toaster.
    
    The fixes correct behaviour and look in various parts of the page,
    including submitting XHR commands and updating the DOM with the correct
    info.
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>

28	5	lib/toaster/bldcontrol/models.py
2	2	lib/toaster/toastergui/static/css/default.css
21	3	lib/toaster/toastergui/static/js/projectapp.js
2	1	lib/toaster/toastergui/templates/base.html
8	5	lib/toaster/toastergui/templates/basetable_bottom.html
78	46	lib/toaster/toastergui/templates/layers.html
5	6	lib/toaster/toastergui/templates/mrb_section.html
27	21	lib/toaster/toastergui/templates/project.html
207	133	lib/toaster/toastergui/templates/targets.html
80	77	lib/toaster/toastergui/views.py

commit 12162fda32af4bc805d6ff5b0348d93befe2f623
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2014-11-07 13:23:58 +0000

    adding angular-animate plugin
    
    We add a static copy of the Angular's animate plugin,
    version 1.2.23
    
    Licensed under MIT.
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>

-	-	lib/toaster/toastergui/static/js/angular-animate.min.js

commit d58aacc69b1832f99758b941803123329e06082d
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2014-11-05 14:47:51 +0000

    toaster: update Release model to pinpoint to specific Branch
    
    We update the release model to pinpoint to specific branch,
    instead of holding a branch name that needs to be matched.
    
    This is needed because we move away from mixing branches on different
    layer sources.
    
    Various minor changes to models file.
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>

4	5	lib/toaster/bldcontrol/management/commands/checksettings.py
2	0	lib/toaster/bldcontrol/models.py
1	1	lib/toaster/bldcontrol/tests.py
359	0	lib/toaster/orm/migrations/0016_auto__add_field_release_helptext__chg_field_release_branch__add_index_.py
40	25	lib/toaster/orm/models.py

commit 54fd0a76fa3154adfab5688ecc96963f42cded11
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2014-11-05 13:30:31 +0000

    toaster: SQL query logging
    
    We add a logger, enabled through the settings.py, that
    logs all SQL queries, with timestamp and duration, to console.
    
    This is helpful in profiling the SQL queries.
    
    The facility is disabled by default.
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>

21	0	lib/toaster/toastermain/settings.py

commit d42784432f927f58730caf80546c66772e0fec89
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2014-11-04 16:47:36 +0000

    toasterui: performance improvements
    
    Improve the performance of data logging in toasterui.
    We modify the data queries used to:
    
     * cache searching in memory
     * insert in bulk (i.e. multiple values per insert, where possible)
    
    On development test rig (networked mysql), on no-op build,
    time for data recording is reduced from 4:10 to 1:30 (minutes).
    
    We also improve the logging, so it is easier to detect
    toasterui errors.
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>

147	60	lib/bb/ui/buildinfohelper.py
9	1	lib/bb/ui/toasterui.py

commit cd3eb5b051743463cfe51dba97cae4da75420048
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2014-11-03 13:47:16 +0000

    toaster script: webport option and other improvements
    
    We add the "webport=" command line option as to allow starting
    the web server on a custom port.
    
    The bitbake server port is now auto-allocated. This is needed
    to be able to run multiple toaster environments on a single machine.
    
    We tackle bug 6023 (toaster refusing to start when lock file is present)
    by using more specific checks, and automatically recover from
    bitbake server down / webserver up error mode.
    
    Command line parameters are now read on both interactive and managed
    modes.
    
    The localhost and ssh controllers are updated to work with the modified
    toaster launcher script.
    
    [YOCTO #6023]
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>

53	43	bin/toaster
19	0	lib/toaster/bldcontrol/bbcontroller.py
17	21	lib/toaster/bldcontrol/localhostbecontroller.py
31	15	lib/toaster/bldcontrol/sshbecontroller.py

commit 90d9bf1bda282fb5d053a42438a8cfd02475b9cd
Author: Martin Hundebøll <martin@hundeboll.net>
Date:   2014-10-30 11:43:24 +0100

    progressbar: use '/usr/bin/env' in shebangs with python
    
    To support yocto on systems with python3 as default version, scripts
    should use /usr/bin/env python in the shebang, as this allows the use of
    a fake env to mimic python2 as default version.
    
    This patch simply replaces occurrences of #!/usr/bin/python with
     #!/usr/bin/env python and was done with this oneliner:
    
         git grep -lE '^#!/usr/bin/python' | xargs \
             sed -i 's|/usr/bin/python|/usr/bin/env python|'
    
    Signed-off-by: Martin Hundebøll <martin@hundeboll.net>
    Signed-off-by: Ross Burton <ross.burton@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/progressbar.py

commit a8272e22b7819e0e8afd8e291d276f5f28fc0007
Author: Aníbal Limón <anibal.limon@linux.intel.com>
Date:   2014-11-05 12:10:29 -0600

    fetch/wget: Add latest_versionstring method
    
    Being able to query whether updated versions of a url are available
    is useful, not least for the package reporting system. Since such code
    is closely linked to the url type and the url itself, the fetcher
    makes a locical place to contain this code.
    
    For wget based urls this means taking upstream directory listings
    and searching those for later versions, returning those that are
    found.
    
    The patch also adds unittests for this function so that if
    improvements are made, the original test urls can be used
    to evaulate the those changes.
    
    This is based on code from Irina Patru <irina.patru@intel.com>.
    
    Signed-off-by: Aníbal Limón <anibal.limon@linux.intel.com>
    Signed-off-by: Saul Wold <sgw@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

239	0	lib/bb/fetch2/wget.py
35	0	lib/bb/tests/fetch.py

commit f71c8c0354e87fed80bc845db6728e6e18ce9c4d
Author: Aníbal Limón <anibal.limon@linux.intel.com>
Date:   2014-11-05 12:10:28 -0600

    fetch/git: Add latest_versionstring method
    
    Being able to generate a version string representing the most recent git commit
    given git is useful, not least for the package reporting system.
    
    This adds in a latest_versionstring method to the git fetcher
    which allows users to query the latest version using ls-remote
    and filtering the responses.
    
    The patch also adds unittests for this function so that if
    improvements are made, the original test urls can be used
    to evaulate the those changes.
    
    This is based on code from Irina Patru <irina.patru@intel.com>.
    
    Signed-off-by: Saul Wold <sgw@linux.intel.com>
    Signed-off-by: Aníbal Limón <anibal.limon@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

38	0	lib/bb/fetch2/git.py
43	1	lib/bb/tests/fetch.py

commit 9f171ea755644ecd9d2b3d7ed13bf8ec09ec917a
Author: Stefan Müller-Klieser <s.mueller-klieser@phytec.de>
Date:   2014-11-06 13:03:38 +0100

    data_smart.py: fix variable splitting at _remove mechanism
    
    If we split variables only at whitespaces, a slipped in tab will render
    a value unremovable.
    
    Signed-off-by: Stefan Müller-Klieser <s.mueller-klieser@phytec.de>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/data_smart.py

commit d753644c67d163f338f2bdc3d600203e8b1a5734
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2014-11-07 17:47:37 +0000

    siggen: Fix shared work checksum mismatch/rebuild issues
    
    Similar to the last shared work task signature bug, we've found another
    one. Looking at the improved output of diffsigs in this case:
    
    runtaskdeps changed from [
    'autoconf_2.69.bb.do_populate_sysroot:virtual:native',
    'gnu-config_20120814.bb.do_populate_sysroot:virtual:native',
    'libgcc-initial_4.9.bb.do_patch:virtual:nativesdk'
    ] to [
    'autoconf_2.69.bb.do_populate_sysroot:virtual:native',
    'gcc-crosssdk-initial_4.9.bb.do_patch',
    'gnu-config_20120814.bb.do_populate_sysroot:virtual:native'
    ]
    
    so we can get a different task hash since libgcc sorts before gnu-config
    and gcc sorts after it. We could do with a way of fixing this, the best
    I can come up with is to include a single parent directory. Since
    recipes are never at the top of any metadata trees I've seen, this
    should suffice for now.
    
    I'm planning to burn the concept of shared work within bitbake
    and do something at the metadata level in the 1.8 timeframe as its just
    too fragile as things stand and hard to fix well.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	3	lib/bb/siggen.py

commit 54ecf96c6f031927ee2410f6efde4e16f19bbf66
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2014-11-07 17:46:05 +0000

    siggen: Add computed hash code to verify hash computation to dumpsig
    
    This is useful code to double check the computed checksum value if nothing
    else. Might as well have it in tree.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

13	0	lib/bb/siggen.py

commit 40c95cb9def282dc88234cd72ff462d7a01e47c1
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2014-11-07 17:45:07 +0000

    siggen: Ensure we output if the ordering of runtaskdeps changes
    
    Order of runtaskdeps is important. If the hashes differ we should print output.
    This is complicated by shared work where the filenames themselves can differ,
    but the checksum should not.
    
    This fixes a case where two different checksums could show no output with
    bitbake-diffsigs.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

17	0	lib/bb/siggen.py

commit 35c1de4b05c64ee1c436be2dfbd97dcf9ed9ed71
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2014-10-31 19:17:02 +0000

    toastergui: fix invalid build url usage
    
    We need to pass the URL for the build action as javascript
    parameter, since the project ID is different for each build,
    instead of using the project id of the most-recently-used project.
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

5	5	lib/toaster/toastergui/templates/mrb_section.html

commit 0b225035cefee3d3713a93f9a432e5e4d4e174f1
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2014-10-31 19:17:01 +0000

    toasterui: improvements in data reading
    
    We add improvements in data reading, following
    issues discovered in testing.
    
    - elapsed_time is now read from buildstats
    - we add safeguards to not fail logging if the build was triggered
    with a toaster_brbe configuration, but it's running in
    1.6 mode
    - added log markups for build finish to let other programs
    known when the work is done.
    
    [YOCTO #6833]
    [YOCTO #6685]
    [YOCTO #6887]
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

13	9	lib/bb/ui/buildinfohelper.py
4	2	lib/bb/ui/toasterui.py

commit 0cdd48261daeb17efc528b5de0ac81c8836e8565
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2014-11-05 16:58:13 +0000

    prserv: Use WAL mode
    
    Ideally, we want the PR service to have minimal influence from
    queued disk IO. sqlite tends to be paranoid about data loss and
    locks/fsync calls. There is a "WAL mode" which changes the journalling
    mechanism and would appear much better suited to our use case.
    
    This patch therefore switches the database to use WAL mode. With this
    change, write overhead appears significantly reduced.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	0	lib/prserv/db.py

commit 72ac9f9227fbfb4dc8b933b357d21aa0e4060959
Author: Gary Thomas <gary@mlbassoc.com>
Date:   2014-11-05 08:08:24 -0700

    bitbake: Make printed 'runqueue' be consistently capitalized
    
    This has always bothered me:
      NOTE: Preparing runqueue
      NOTE: Executing RunQueue Tasks
    
    This patch changes the messages to be consistent.
    
    Signed-off-by: Gary Thomas <gary@mlbassoc.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	doc/bitbake-user-manual/bitbake-user-manual-hello.xml
1	1	lib/bb/runqueue.py

commit 4626c9b77e5eded97507b6f9ca0d891f9a54bb8a
Author: Aníbal Limón <anibal.limon@linux.intel.com>
Date:   2014-11-05 12:10:27 -0600

    bs4: Add beautifulsoup 4.3.2 to assist the fetcher
    
    Added Beautifulsoup module because fetch/wget latest_versionstring
    method depends on it.
    
    This provides support to fetch/wget.py module for search new package
    versions in upstream sites.
    
    Signed-off-by: Aníbal Limón <anibal.limon@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

43	0	lib/bs4/AUTHORS.txt
26	0	lib/bs4/COPYING.txt
1066	0	lib/bs4/NEWS.txt
406	0	lib/bs4/__init__.py
321	0	lib/bs4/builder/__init__.py
285	0	lib/bs4/builder/_html5lib.py
258	0	lib/bs4/builder/_htmlparser.py
233	0	lib/bs4/builder/_lxml.py
829	0	lib/bs4/dammit.py
204	0	lib/bs4/diagnose.py
1611	0	lib/bs4/element.py
592	0	lib/bs4/testing.py
1	0	lib/bs4/tests/__init__.py
141	0	lib/bs4/tests/test_builder_registry.py
36	0	lib/bs4/tests/test_docs.py
85	0	lib/bs4/tests/test_html5lib.py
19	0	lib/bs4/tests/test_htmlparser.py
91	0	lib/bs4/tests/test_lxml.py
434	0	lib/bs4/tests/test_soup.py
1829	0	lib/bs4/tests/test_tree.py

commit 268e9c0c6830e8e621c418f20c2ca12dc840e48b
Author: Fredrik Svensson <fredrik.svensson@axis.com>
Date:   2014-11-04 12:29:32 +0100

    fetch2/git: Allow other namespaces than refs/heads to be searched.
    
    This makes it possble to fetch Gerrit review references which are
    normally stored under refs/changes.
    
    Please disregard previous patch with the same topic.
    
    Signed-off-by: Fredrik Svensson <fredrik.svensson@axis.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

4	1	lib/bb/fetch2/git.py

commit 92e128a0e331e563cfe48827e95939041c16c88e
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2014-11-04 14:02:32 +0000

    prserv/serv: Ensure sync happens in the correct thread
    
    The sync/commit calls are happening in the submission thread which can
    race against the handler. The handler may start new transactions which
    then causes the submission thread to error with "cannot start a
    transaction within a transaction".
    
    The fix is to move the calls to the correct thread.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

8	7	lib/prserv/serv.py

commit 26d601ab2a677a422bab425696a2cf6357ff3576
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2014-10-23 15:00:01 +0100

    bitbake: clarify startup message
    
    Fix the startup message by making clear which
    server runs on which port.
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>

1	1	bin/bitbake
2	0	bin/toaster

commit 14762e182c8af22fd0fa96f0ba0db1ecd2495fbc
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2014-10-20 16:26:14 +0100

    toaster: update web vcs fields for layers
    
    We update the layer vcs web fields to record extra URLs
    for directory and file viewing. Updating the layers
    view to show this data.
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>

336	0	lib/toaster/orm/migrations/0015_auto__add_field_layer_vcs_web_url__add_field_layer_vcs_web_tree_base_u.py
49	4	lib/toaster/orm/models.py
3	3	lib/toaster/toastergui/templates/layers.html

commit 5fce7f6e83c6143244faa9618b7ed20c1106e08f
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2014-10-14 13:57:33 +0100

    toastergui: provide download file capability
    
    We add, for the localhost environments, the capability to
    download build artifacts. This is a pontentially dangerous API,
    because it gives unrestricted read access to the build environment
    file system - do not expose the functionality directly to the
    web layer, but use filtering/translation code, such as
    exemplified in the build_artifact view.
    
    The capability for remote build environments is dependent
    on bug 6835, as to use the collect storage as intermediary
    storage for serving files.
    
    [YOCTO #6834]
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>

13	0	lib/toaster/bldcontrol/models.py
4	0	lib/toaster/toastergui/templates/builddashboard.html
4	0	lib/toaster/toastergui/templates/task.html
4	1	lib/toaster/toastergui/urls.py
40	0	lib/toaster/toastergui/views.py

commit 7c333350418c4140e6c988c5272940f8057d327d
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2014-10-13 17:10:39 +0100

    toaster: change startup parameter passing to avoid race
    
    We avoid a race between the setting the TOASTER_BRBE variable
    and reading the variable in toaster ui by supplying the variable
    at server startup time through the toaster.conf post-read file.
    
    Additional small changes are included, including marking the
    build request with the environment id of where the build took place.
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>

10	3	bin/toaster
8	5	lib/bb/ui/buildinfohelper.py
3	2	lib/bb/ui/toasterui.py
3	3	lib/toaster/bldcontrol/bbcontroller.py
32	7	lib/toaster/bldcontrol/localhostbecontroller.py
12	7	lib/toaster/bldcontrol/management/commands/runbuilds.py
145	0	lib/toaster/bldcontrol/migrations/0007_auto__add_field_buildrequest_environment__chg_field_buildrequest_build.py
2	1	lib/toaster/bldcontrol/models.py
2	2	lib/toaster/bldcontrol/sshbecontroller.py
2	8	lib/toaster/bldcontrol/tests.py

commit 7d51f895bd56bd18f2258059b377851c2ce82114
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2014-10-09 12:37:30 +0100

    toaster: improvements for admin pages
    
    The default django URL validator marks git URLs as not valid,
    so we change the default validators to a URLValidator-derived
    that adds git and ssh protocol schemas and inhibits the
    frontend URL validator.
    
    We update the branch names based on the white-listed
    branch names in the Releases name.
    
    Adds proper class string to ease usage in admin section.
    
    Other small improvements.
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>
    
    Conflicts:
            bitbake/lib/toaster/orm/admin.py

1	1	lib/toaster/orm/admin.py
336	0	lib/toaster/orm/migrations/0014_auto__chg_field_package_summary__chg_field_layer_summary__chg_field_re.py
12	6	lib/toaster/orm/models.py

commit 7223619505c0939358287e5baf84da0a91cb8d34
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2014-10-09 12:37:30 +0100

    toaster: use modified validators for git url fields
    
    The default django URL validator marks git URLs as not valid,
    so we change the default validators to a URLValidator-derived
    that adds git and ssh protocol schemas and inhibits the
    frontend URL validator.
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>

20	3	lib/toaster/orm/admin.py
25	2	lib/toaster/orm/models.py

commit c6c7c05521daa9bf16c122d7d472330ca4c05e88
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2014-10-03 18:03:37 +0100

    toaster: changes to the landing page
    
    This patch brings in a new landing page to be shown
    when there are no builds and no projects available.
    
    The builds page now displays only only the builds part,
    without the landing page bits.
    
    There is a new projects page that displays the All Projects
    table as specified in the design.
    
    [YOCTO #6682]
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>

1	1	lib/toaster/toastergui/templates/basetable_top.html
16	0	lib/toaster/toastergui/templates/basetable_top_buildprojects.html
16	0	lib/toaster/toastergui/templates/basetable_top_projectbuilds.html
3	75	lib/toaster/toastergui/templates/build.html
66	0	lib/toaster/toastergui/templates/landing.html
102	0	lib/toaster/toastergui/templates/mrb_section.html
36	0	lib/toaster/toastergui/templates/projects.html
11	0	lib/toaster/toastergui/templatetags/projecttags.py
4	1	lib/toaster/toastergui/urls.py
129	1	lib/toaster/toastergui/views.py

commit 5b13eabdec1e8a052d343fd67654d7fe8974224f
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2014-09-30 13:45:51 +0100

    toastergui: protect variable value reads
    
    We make sure we don't throw an exception when reading
    non-existent variables from the database, and we return
    empty data that can be displayed without ill effects.
    
    This fixes the Configuration page on empty builds.
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>

17	9	lib/toaster/toastergui/views.py

commit 6abec6631fbadaecc474f2a4e7981fde3c58657c
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2014-09-30 13:31:57 +0100

    toastergui: refactor objects get in views.py
    
    We refactor the objects.filter()[0] pattern to the proper
    Django QuerySet usage of objects.get() to make sure we
    get one and only one object for a query.
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>

37	38	lib/toaster/toastergui/views.py

commit e690080f83ad53c5e4a31e8c0fba2cc744eea1eb
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2014-09-29 20:20:33 +0100

    toastergui: project edit capabilities in all layers page
    
    This patch definitivates the all layers page, providing interactivity
    for adding and removing layers inside the project from this page.
    
    [YOCTO #6590]
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>

9	0	lib/toaster/orm/models.py
2	1	lib/toaster/toastergui/static/css/default.css
1	0	lib/toaster/toastergui/templates/basetable_top.html
5	0	lib/toaster/toastergui/templates/basetable_top_layers.html
167	115	lib/toaster/toastergui/templates/layers.html
25	3	lib/toaster/toastergui/views.py

commit c60e540dc532e3625a53854d7b02bf1e2568c3ca
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2014-09-09 11:47:13 +0100

    toaster: fix Project page in order to trigger builds
    
    This patch rewrites the Project page and the additional
    infrastructure in order to fix a bug that makes triggering
    builds through UI impossible, and to introduce data feeds
    for suggestions for the user.

29	20	lib/toaster/orm/models.py
53	7	lib/toaster/toastergui/static/css/default.css
531	0	lib/toaster/toastergui/static/js/projectapp.js
0	12	lib/toaster/toastergui/templates/base.html
4	4	lib/toaster/toastergui/templates/baseprojectpage.html
7	0	lib/toaster/toastergui/templates/build.html
0	8	lib/toaster/toastergui/templates/layers.html
0	7	lib/toaster/toastergui/templates/newproject.html
320	332	lib/toaster/toastergui/templates/project.html
2	0	lib/toaster/toastergui/urls.py
198	39	lib/toaster/toastergui/views.py

commit e1169127405ce10a044ac9cdf4a892838a99d01f
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2014-09-23 16:48:52 +0100

    toaster: fix layer source update code
    
    We fix problems in the layer source update code related to
    non-null field restrictions.
    
    We add missing layer dependency update.
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>

28	6	lib/toaster/orm/models.py

commit 8b4d33a6182486795cca53b2832967de583281e1
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2014-09-05 13:13:09 +0100

    toaster: we add static copies of AngularJS and related libraries
    
    We add the Angular JS library, release 1.2.23
    https://angularjs.org/
    
    We add the Bootstrap directives for AngularUI, release 0.11.0
    http://angular-ui.github.io/bootstrap/
    
    The license ued for all libraries is MIT
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>

-	-	lib/toaster/toastergui/static/js/angular-cookies.min.js
-	-	lib/toaster/toastergui/static/js/angular.min.js
8	0	lib/toaster/toastergui/static/js/angular.min.js.map
10	0	lib/toaster/toastergui/static/js/ui-bootstrap-tpls-0.11.0.js
-	-	lib/toaster/toastergui/static/js/ui-bootstrap-tpls-0.11.0.min.js

commit fe568c9350a691c863f9f5bf8703d639c12a9961
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2014-09-30 13:57:14 +0100

    toastergui: update breadcrumb in analysis pages
    
    If we are in managed mode, and we inspect a build that comes
    from a project, we modify the breadcrumb as to display
    the project from where the build originated.
    
    [YOCTO #6776]
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>

4	1	lib/toaster/toastergui/templates/basebuilddetailpage.html
5	2	lib/toaster/toastergui/templates/basebuildpage.html

commit 9504ca6a69ba6da21f88b3cc77fa5910d886b6c3
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2014-09-29 15:35:59 +0100

    toasterui: save build id in build request on first chance
    
    We change the saving of the build id to the build request as
    soon is the build is created, as to allow for a consistent
    display of build data while build is in progress.
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>

2	1	lib/bb/ui/buildinfohelper.py

commit fc2a7be3982ea5441beef1b7e9e187caf5df2beb
Author: Belen Barros Pena <belen.barros.pena@linux.intel.com>
Date:   2014-09-29 15:37:29 +0100

    toastergui: Show failed tasks in the build dashboard
    
    The build dashboard is supposed to show failed
    tasks (if any) in the "Tasks" section.
    
    Signed-off-by: Belen Barros Pena <belen.barros.pena@linux.intel.com>
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>

16	2	lib/toaster/toastergui/templates/builddashboard.html

commit cad45dfebaabe1875f786ba7ceeb3ee377e926b3
Author: Belen Barros Pena <belen.barros.pena@linux.intel.com>
Date:   2014-09-29 14:44:03 +0100

    toastergui: Tiny change to help text
    
    Modify the help text we show for the "Task covered by"
    information to indicate that a task can be covered by
    more than one task.
    
    Signed-off-by: Belen Barros Pena <belen.barros.pena@linux.intel.com>

1	1	lib/toaster/toastergui/templates/task.html

commit e84db294f733464b4952a3c92120e5b19e8c2750
Author: Belen Barros Pena <belen.barros.pena@linux.intel.com>
Date:   2014-09-29 14:23:22 +0100

    toastergui: Remove extra <div> from build dashboard
    
    For builds that generate no rootfs files, an extra <div>
    was being added between the build status and the build
    summary section. This commit removes the extra <div> and the
    white space it created.
    
    Signed-off-by: Belen Barros Pena <belen.barros.pena@linux.intel.com>

2	3	lib/toaster/toastergui/templates/builddashboard.html

commit acf372eb5a083451ab1507dd24e3a84380420c9a
Author: Belen Barros Pena <belen.barros.pena@linux.intel.com>
Date:   2014-09-29 14:13:11 +0100

    toastergui: Remove sorting from "Size over total" column
    
    The sorting in this column is tied to the sorting by
    "Size". If we make both columns sortable, when you sort
    by one of them it also sorts the other, and the table looks
    as if you have sorted by 2 columns at the same time.
    
    This was fixed in YOCTO #6061, but turned up again.
    
    Signed-off-by: Belen Barros Pena <belen.barros.pena@linux.intel.com>

0	2	lib/toaster/toastergui/views.py

commit 25fd347b6a972164af9a0b5b56f803a296290246
Author: Belen Barros Pena <belen.barros.pena@linux.intel.com>
Date:   2014-09-29 14:00:36 +0100

    toastergui: Fix blue highlight for failed tasks
    
    Change the background colour of table rows with the .error
    class from white to transparent, to make sure the blue
    highlight animation works when you click on the order
    number in the task details page.
    
    Signed-off-by: Belen Barros Pena <belen.barros.pena@linux.intel.com>

1	1	lib/toaster/toastergui/static/css/default.css

commit 8dc3e582eb5f1d6e9a79de59a53014495a48e862
Author: Belen Barros Pena <belen.barros.pena@linux.intel.com>
Date:   2014-09-29 12:10:15 +0100

    toastergui: Fix reverse dependencies tab for packages included
    
    Make sure the reverse dependencies tab for included packages
    shows a notification when the number of reverse dependencies
    is 0, instead of an empty table.
    
    Signed-off-by: Belen Barros Pena <belen.barros.pena@linux.intel.com>

1	1	lib/toaster/toastergui/templates/package_included_reverse_dependencies.html

commit 64894d640ee70a301f6f399db118ed17c0ccde08
Author: Belen Barros Pena <belen.barros.pena@linux.intel.com>
Date:   2014-09-26 17:23:23 +0100

    toastergui: Add missing task descriptions
    
    The "Prebuilt task could be based on" table we provide in the task
    details page for prebuilt tasks is missing the task descriptions.
    This patch adds them.
    
    [YOCTO #6328]
    
    Signed-off-by: Belen Barros Pena <belen.barros.pena@linux.intel.com>
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>

3	0	lib/toaster/toastergui/templates/task.html

commit 03f7ba3d8a101e05c106e5fb65eb379a6e4cb476
Author: Belen Barros <belen.barros.pena@intel.com>
Date:   2014-08-29 13:46:41 +0100

    toastergui: Amend show rows options
    
    In the templates basetable_bottom.html and basetable_top.html
    remove the '2' and '5' options from the 'show rows' menu, and
    add the '150' option as per design specs.
    
    Alex edited conflicts.
    
    Signed-off-by: Belen Barros <belen.barros.pena@intel.com>
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>

1	1	lib/toaster/toastergui/templates/basetable_bottom.html
1	1	lib/toaster/toastergui/templates/basetable_top.html

commit ca8fc7bd4ad940c8eeefa57619a6c8423f116fc7
Author: Belen Barros Pena <belen.barros.pena@linux.intel.com>
Date:   2014-09-26 14:13:09 +0100

    toastergui: Fix help text in packages 'Reverse runtime dependencies' tab
    
    For those packages renamed at packaging time, the help text
    in the 'Reverse runtime dependencies' tab was missing the
    original package name.
    
    [YOCTO #6327]
    
    Signed-off-by: Belen Barros Pena <belen.barros.pena@linux.intel.com>

1	1	lib/toaster/toastergui/templates/package_included_reverse_dependencies.html

commit c127ecb3b5b27b705b8714af063d910b944c8bbc
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2014-10-06 11:02:36 +0100

    toasterbld: update checksettings command
    
    We update the checksettings command to allow for upstream
    git url detection at runtime by looking up a named remote
    of a local repository.
    
    Also various small fixes in check settings.
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>

42	5	lib/toaster/bldcontrol/management/commands/checksettings.py

commit 3aa13bc1d8218c97c76581a895fa5f03ff807fbe
Author: Michael Wood <michael.g.wood@intel.com>
Date:   2014-10-28 17:47:12 +0000

    buildinfohelper: Make sure we use the orm defined value for loglevel
    
    We need to consistently use LogMessage.INFO/WARNING/ERROR to make sure toaster knows
    how to categories these rather than passing in the "raw" loglevel value
    which in best case comes from python logging but worst case any value.
    
    [YOCTO 6885]
    
    Signed-off-by: Michael Wood <michael.g.wood@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	5	lib/bb/ui/buildinfohelper.py

commit 424df64f2e9679043f0ce2b4f7dfc59c3d404304
Author: Ben Shelton <ben.shelton@ni.com>
Date:   2014-10-27 12:27:23 -0500

    prserv: don't wait until exit to sync
    
    In the commit 'prserv: Ensure data is committed', the PR server moved to
    only committing transactions to the database when the PR server is
    stopped.  This improves performance, but it means that if the machine
    running the PR server loses power unexpectedly or if the PR server
    process gets SIGKILL, the uncommitted package revision data is lost.
    
    To fix this issue, sync the database periodically, once per 30 seconds
    by default, if it has been marked as dirty.  To be safe, continue to
    sync the database at exit regardless of its status.
    
    Signed-off-by: Ben Shelton <ben.shelton@ni.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

14	0	lib/prserv/db.py
7	0	lib/prserv/serv.py

commit 4bdfeab7845bdcd62a4928200dd13701414a464e
Author: Oscar Utbult <oscar@oscr.io>
Date:   2014-10-26 23:43:32 +0100

    utils.py: don't use len() for truth value testing.
    
    Signed-off-by: Oscar Utbult <oscar@oscr.io>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/utils.py

commit 9027b1273b5405c7269b013604ab417771b5eafe
Author: Koen Kooi <koen@dominion.thruhere.net>
Date:   2014-10-26 16:09:47 +0100

    fetch2: add .lz compression support
    
    See http://www.nongnu.org/lzip/lzip.html for details on the compression
    format.
    
    Signed-off-by: Koen Kooi <koen@dominion.thruhere.net>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

5	1	lib/bb/fetch2/__init__.py

commit 2ac33aac3446cb12227f1b8daa5f27f417c9bb9e
Author: Alejandro Hernandez <alejandro.hernandez@linux.intel.com>
Date:   2014-10-10 13:13:46 -0500

    fetcher: fix getVar call due to incorrect argument datatype
    
    Signed-off-by: Alejandro Hernandez <alejandro.hernandez@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/fetch2/__init__.py

commit b8ed2098bdea2afd93ab4e3e1b834f3a31cb60de
Author: Alejandro Hernandez <alejandro.hernandez@linux.intel.com>
Date:   2014-09-30 11:21:58 -0500

    fetcher: fix BB_STRICT_CHECKSUM datatype check
    
    Forcing strict to be a string, to avoid problems when performing comparisons
    
    [YOCTO #6762]
    
    Signed-off-by: Alejandro Hernandez <alejandro.hernandez@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	2	lib/bb/fetch2/__init__.py

commit afa2431c21b8271b05dc4cca4265f98d9f338007
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2014-09-25 16:10:33 +0100

    toastergui fix size rendering in dirinfo page
    
    We fix the rendering of the size field in dirinfo-related pages
    by directly calling filtered_filesizeformat and not rendering
    it through the template engine.
    
    Additionally, we enable error dumping into logs if an
    Exception happens.
    
    [YOCTO #6669]
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

5	5	lib/toaster/toastergui/views.py

commit fae5914030bcf4c061c22fc61034c40c87b7121a
Author: Konrad Scherer <Konrad.Scherer@windriver.com>
Date:   2014-09-24 09:06:42 -0400

    prserv/serv: Improve error message when prserver cannot bind to supplied host address
    
    If localhost resolves to a remote address (due to a misconfigured network),
    starting the pr server will fail without useful information.
    
    To reproduce, add '<bogus ip> localhost' to /etc/hosts and run
    'bitbake -p'. The error message will be:
    
    ERROR: Timeout while attempting to communicate with bitbake server
    ERROR: Could not connect to server False:
    
    Running 'bitbake-prserv --host=localhost --port=0 --start' will fail with:
    
    error: [Errno 99] Cannot assign requested address
    
    Since these errors does not show the IP address of the attempted socket
    binding, this results in a lot of wasted time looking at firewall rules, etc.
    
    This patch results in the following error message if the socket binding fails:
    
    PR Server unable to bind to <bogus ip>:0
    
    Signed-off-by: Konrad Scherer <Konrad.Scherer@windriver.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

11	2	lib/prserv/serv.py

commit 73bf120062fc00c7e26dc4e77a7d140658d89daf
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2014-09-24 16:51:47 +0000

    hob: Fix sstate mirrors mangling
    
    hob was adding the redundant characters "\1" in SSTATE_MIRRORS variable. If
    needed it is expected the user will add this instead so remove the code
    that was doing this.
    
    [YOCTO #6600]
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	4	lib/bb/ui/crumbs/hig/simplesettingsdialog.py

commit 46306912a96444790efa9418d934dfdd36773ba1
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2014-09-24 14:16:52 +0000

    fetch: Extend testing of subdir unpack parameter and fix
    
    This fixes urls of the form file://some/path/file;subdir=b. It also
    adds in a couple of tests so we now tests these corner cases.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	0	lib/bb/fetch2/__init__.py
7	0	lib/bb/tests/fetch.py

commit 836a986b365eb9798563ec08d90b346596de7791
Author: Roxana <roxana.ciobanu@intel.com>
Date:   2014-07-31 13:29:24 +0300

    fetch: SRC_URI parameter "subdir" does not work for local files
    
    Check if the 'subdir' parameter exists and assign it to 'destdir' so that
    files are copied in ${WORKDIR}/destdir. This fixes urls that are of the form
    file://a;subdir=b.
    
    Signed-off-by: Roxana Ciobanu <roxana.ciobanu@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

4	1	lib/bb/fetch2/__init__.py

commit ca93bc84ee5fb94a50c11c47e4d212d7da649e24
Author: Ross Burton <ross.burton@intel.com>
Date:   2014-09-25 15:28:52 +0100

    monitordisk: don't log when not monitoring a filesystem for inodes
    
    Writing a log that the filesystem isn't being monitored for inode usage just
    confuses users who are not aware about the nature of inodes in their filesystem,
    so don't say anything, just silently disable the monitor.  In general this only
    happens on filesystems which don't have a limit on inodes.
    
    Signed-off-by: Ross Burton <ross.burton@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	4	lib/bb/monitordisk.py

commit 637ce8df2658e4905fab8a0600a45505596bf472
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2014-09-23 21:45:49 +0100

    bin/bitbake: Update to version 1.24.0
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	bin/bitbake
1	1	lib/bb/__init__.py

commit 5bf5a937b26896bedbfea78dd1d62bce5a26ac2a
Author: Chad Nelson <cnelson711@gmail.com>
Date:   2014-09-15 08:01:42 -0500

    fetch2/perforce: Use replace (1 line) instead of find (3 lines)
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	7	lib/bb/fetch2/perforce.py

commit 3b5b1703b77490116dda895b29737cea51a3d6a0
Author: Chad Nelson <cnelson711@gmail.com>
Date:   2014-09-12 15:42:21 -0500

    fetch2/perforce: Fix localfile name if labels are used
    
    I could apply the label "release_1.0" to a super project that contains
    many sub projects.  If my recipes have SRC_URI's that use that label but
    grab different sub-folders, than there's a bug where the cached localfile
    (tar.gz) will not be unique and reused at the wrong times.
    
    SRC_URI = "p4://perforce::1234@//depot/SuperProject/MiniProjectAAA/...;label=release_1.0 \
                         p4://perforce::1234@//depot/SuperProject/MiniProjectBBB/...;label=release_1.0"
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

7	10	lib/bb/fetch2/perforce.py

commit 1c75cc4d0c8b606c1fe76e6bf60bf6a32298b105
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2014-09-23 12:58:22 +0100

    knotty: Ensure commandline parameters are updated in memres server
    
    When using options like -k, -f, -v and so on with the memory resident
    server, they'd currently only be set on the initial values passed to
    the original command. This ensures they now match those specified
    on the commandline for the options where this makes sense.
    
    To make this work, a command to update the options on the server side
    is required so this is added.
    
    [YOCTO #5292]
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

4	0	lib/bb/command.py
4	0	lib/bb/cooker.py
11	0	lib/bb/cookerdata.py
1	0	lib/bb/ui/knotty.py

commit cd477b5e77ab0373248b8a8fa30e1c7b8ea984fd
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2014-09-22 15:51:59 +0100

    bitbake-worker: Fix bitbake -n
    
    Without this you see:
    
    File "bitbake/bin/bitbake-worker", line 201, in fork_off_task
        os._exit(child())
    TypeError: an integer is required
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	2	bin/bitbake-worker

commit a2ca038dd1d0be4e0a0b20ae16a467d5a0075514
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2014-09-15 14:43:56 +0000

    data_smart: Clarify what 'computed' means in the data store history context
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/data_smart.py

commit 72a1ca4a104ccab73d6abcbd44db9c2636a58572
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2014-09-13 08:50:26 +0100

    data_smart: Fix remove operator and its interaction with data expansion
    
    If you have:
    
    FOO = "${bindir}/X Y"
    FOO_remove = "${bindir}/X"
    
    the expected result is "Y". Currently this doesn't work since the removed
    expressions are not expanded first. This patch adjusts things so the
    expressions are expanded before being processed for removal.
    
    Also add a test to ensure this case continues to work.
    
    [YOCTO #6624]
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	1	lib/bb/data_smart.py
7	0	lib/bb/tests/data.py

commit e24095f54c52a547c0462836586a5d716249036e
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2014-09-11 17:31:09 +0100

    bin/bitbake: Update to version 1.23.2
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	bin/bitbake
1	1	lib/bb/__init__.py

commit cf2d642052979d236185c5b8ca2c5478c06e62ae
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2014-09-05 10:34:41 +0100

    siggen/runqueue/bitbake-worker: Improve siggen data transfer interface
    
    We need to transfer some of the siggen data from the core/cooker into
    the worker instances. There was a partial API created for this but
    its ugly and its not possible to extend it from the siggen class.
    
    This patch completes the interface/abstraction for the data and
    means the class can extend/customise it in any siggen class.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	bin/bitbake-worker
1	3	lib/bb/runqueue.py
5	4	lib/bb/siggen.py

commit a9439b136f55f3f0e80ff053cd3b159da69ba362
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2014-09-03 17:06:42 +0100

    tinfoil: add a means of enabling variable history tracking
    
    Unfortunately it seems like the external use of the cooker
    enableDataTracking() function broke at some point since the code that
    reads it now runs within BBCooker's constructor. Since this now has to
    be done early, add a parameter to Tinfoil's constructor to allow
    enabling variable history tracking.
    
    Fixes [YOCTO #6676].
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

6	3	lib/bb/tinfoil.py

commit cdaea8951df6b707afd1fefbf22295088256dd6f
Author: Marius Avram <marius.avram@intel.com>
Date:   2014-08-29 15:51:26 +0300

    toaster: fix some code spacing issues
    
    Code is related to the basetable templates files.
    It had mixed tabs and spaces and was miss aligned in various places,
    making it hard to read.
    
    Signed-off-by: Marius Avram <marius.avram@intel.com>

20	19	lib/toaster/toastergui/templates/basetable_bottom.html
5	4	lib/toaster/toastergui/templates/basetable_top.html

commit 880b58c845e3a501fa90d24e1bd89c87ca84b709
Author: Marius Avram <marius.avram@intel.com>
Date:   2014-08-29 15:51:01 +0300

    toaster: use cookies for count and sorting in templates tables
    
    Until now cookies were used to save which columns were shown and which
    were hidden in toaster tables. The tables from the templates also have
    functionalities like sorting the entries on a certain column and
    limiting the number of entries displayed on a page. The later however
    were not saved using cookies. This patch brings this new feature.
    
    The cookies are not saved only in the front-end. They are saved both
    in the frontend in case the user uses the inputs/buttons to change
    a parameter and also in the backend in case the user specifies manually
    using GET variables the value of the parameters.
    
    When no GET parameters are given the views will redirect the url to one
    containg the parameters saved as cookies. When no cookies exist, default
    values will be used.
    
    [YOCTO #6126]
    
    Signed-off-by: Marius Avram <marius.avram@intel.com>

12	3	lib/toaster/toastergui/templates/basetable_bottom.html
9	2	lib/toaster/toastergui/templates/basetable_top.html
81	41	lib/toaster/toastergui/views.py

commit 39d0f0c2e87d4b161f1eeaa2657e61b5a6bc9ee2
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2014-09-04 17:00:11 +0100

    toaster: do not save objects in session
    
    In order to avoid problems when using JSON serializer for
    saving sessions, we move from storing the objects themselves
    in the session to storing the object id and reloading the
    object when retrieved.
    
    This allows, for example, to use cookie-storage sessions if the
    infrastructure owner so desires.
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>

9	9	lib/toaster/toastergui/views.py

commit c2ad9c9bb83f61c171434324df8c4d5ee655a556
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2014-09-04 15:27:32 +0100

    toaster: enable SSH-based remote build support
    
    We enable support for starting builds on remote machines
    through SSH. The support is limited to poky-based distributions.
    
    We refactor localhost build support and we update
    bldcontrol application tests to uniformely test the APIs
    of localhost and SSH build controllers.
    
    [YOCTO #6240]
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>

12	158	lib/toaster/bldcontrol/bbcontroller.py
191	0	lib/toaster/bldcontrol/localhostbecontroller.py
193	0	lib/toaster/bldcontrol/sshbecontroller.py
92	24	lib/toaster/bldcontrol/tests.py

commit 137179eafca8d1a5a69b6302f8cc8961be3b45c4
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2014-09-04 15:39:47 +0100

    toaster: bitbake server listen on all interface
    
    We change the toaster starting script to make the
    bitbake server listen on all interfaces on the local machine.
    
    This is needed to be able to receive a controlling client
    running on a remote machine.
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>

3	3	bin/toaster

commit a37f2c194d7e59611177cb8755524b7ad702fe91
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2014-09-03 14:20:25 +0100

    toaster: rename bldviewer projecttags custom tagset
    
    We rename the projecttags in bldviewer.templatetags to
    simple_projecttags in order to avoid conflict with the
    similarly named tagset in toastergui.
    
    The conflict leads to an intermittent bug where proper
    tags are not read correctly since Django uses only the
    module name as global tag library identificator.
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>

1	1	lib/toaster/bldviewer/templates/simple_build.html
1	1	lib/toaster/bldviewer/templates/simple_layer.html
1	1	lib/toaster/bldviewer/templates/simple_recipe.html
0	0	lib/toaster/bldviewer/templatetags/{projecttags.py => simple_projecttags.py}

commit 8f5c1cdae1ee6ce04ae0d04d0b95bd80efbf7534
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2014-09-02 17:08:43 +0000

    process: Ensure abnormal exits set an error level
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/server/process.py

commit 418358a595c75f45b8d15160ec42bbe569562d91
Author: Dan McGregor <dan.mcgregor@usask.ca>
Date:   2014-08-29 13:46:18 -0600

    knotty: ignore interrupted system calls
    
    With the improved exception handling added in an earlier commit bitbake
    now stops when recieving a SIGWINCH. This happens frequently when
    disconnecting and reconnecting tmux sessions and bitbake didn't survive.
    Restore old behaviour of ignoring interrupted system calls but keep
    proper exception handling for other errors.
    
    Signed-off-by: Dan McGregor <dan.mcgregor@usask.ca>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/ui/knotty.py

commit eed9ae5c2a2bd7567e12ae9a4f02a5a966a1e1a3
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2014-08-29 16:42:00 +0100

    toastergui: added pages for project details
    
    We add new pages for the layer importing, layer details,
    showing project builds and project configuration.
    
    The pages are  in read-only mode, but they're needed as
    to be able to verify the quality of data in the system.
    
    Write capabilities will be added in a subsequent patch.
    
    [YOCTO #6595]
    [YOCTO #6590]
    [YOCTO #6591]
    [YOCTO #6588]
    [YOCTO #6589]
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

68	0	lib/toaster/toastergui/templates/importlayer.html
159	0	lib/toaster/toastergui/templates/layerdetails.html
1	1	lib/toaster/toastergui/templates/layers.html
35	23	lib/toaster/toastergui/templates/project.html
59	0	lib/toaster/toastergui/templates/projectbuilds.html
62	0	lib/toaster/toastergui/templates/projectconf.html
1	1	lib/toaster/toastergui/urls.py
179	13	lib/toaster/toastergui/views.py

commit 973f582a19441c1ec67061160e4c50ce03ed7b68
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2014-08-29 16:41:59 +0100

    toaster: add project pages for machines, targets, layers
    
    We add new pages for the all-machines and all-targets
    project-related views.
    
    We update the existing template structure to create
    a base project view, similar to a base build view, that includes
    a breadcrumb.
    
    Updating existing all layers view to use the new structure.
    
    We update methods in the models to provide corrent
    information display.
    
    [YOCTO #6592]
    [YOCTO #6593]
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

64	67	lib/toaster/orm/models.py
0	0	lib/toaster/toastergui/templates/basebuilddetailpage.html
43	0	lib/toaster/toastergui/templates/baseprojectpage.html
7	2	lib/toaster/toastergui/templates/layers.html
63	0	lib/toaster/toastergui/templates/machines.html
29	40	lib/toaster/toastergui/templates/project.html
0	0	lib/toaster/toastergui/templates/recipes.html
186	0	lib/toaster/toastergui/templates/targets.html
167	6	lib/toaster/toastergui/views.py

commit c2ced09e7ea4a1762d2788bb12a761734d20fd8e
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2014-08-27 17:24:42 +0100

    toaster: create Build methods for calculating progress and ETA
    
    We move the code to calculate build progress as percent
    and the ETA of the build to the model, so that they can be
    reused across different pages.
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>

18	0	lib/toaster/orm/models.py
1	12	lib/toaster/toastergui/views.py

commit 93887dadd5ee35557d320e96059c466d2e541065
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2014-08-27 15:50:35 +0100

    buildinfohelper: BuildRequest project file update soft linked
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>

1	1	lib/bb/ui/buildinfohelper.py

commit 8f47ec259106da714260c7388cee75a6c1f4622d
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2014-08-26 15:39:14 +0100

    toatergui:  update pages to match project models
    
    We update pages and queries to match the new project
    models.
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>

2	2	lib/toaster/toastergui/templates/newproject.html
2	2	lib/toaster/toastergui/templates/project.html
6	7	lib/toaster/toastergui/views.py

commit 9eafe14956013f5af39b68fc93e1b03e7ea1f5c2
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2014-08-26 15:36:29 +0100

    toaster: update the bldcontrol to the new orm models
    
    We update the build controller application to make proper
    use of the bitbake specification in project settings.
    
    Added heuristic to detect when the meta* layers and bitbake
    are checked out from Yocto Project poky, and use a single
    git checkout.
    
    Building without a proper oe-init-build-env is not yet supported.
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>

24	11	lib/toaster/bldcontrol/bbcontroller.py
1	1	lib/toaster/bldcontrol/management/commands/runbuilds.py
128	0	lib/toaster/bldcontrol/migrations/0006_auto__add_brbitbake.py
5	0	lib/toaster/bldcontrol/models.py

commit 2aab77dfccb538e2b09829841ea6c464d40cafb1
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2014-08-12 15:45:48 +0100

    toaster: update checksettings command for auto-detection
    
    We enhance the checksettings command to try to automatically
    detect settings for running on localhost.
    
    The checksettings will look for a nearby poky layer source,
    for a nearby build directory, and will try to import settings
    from "toasterconf.json" files found in the local layer.
    
    On new configuration, it will also perform updates from the
    layer source.
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>

6	3	bin/toaster
182	8	lib/toaster/bldcontrol/management/commands/checksettings.py

commit 59f4a9750a6c4f5360a91e3a4d1c03ceb42da086
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2014-08-12 10:56:42 +0100

    toaster: add all layers page
    
    We add a page where the user can browse
    and import layers from all the layers known
    by Toaster.
    
    [YOCTO #6590]
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>

173	0	lib/toaster/toastergui/templates/layers.html
73	1	lib/toaster/toastergui/views.py

commit 6f0cb9d106129eb496a4c009d95b0727378e97c1
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2014-08-08 17:50:02 +0100

    toaster: create project section navigation structure
    
    We create the navigation structure for the project section.
    This includes adding URLs for configuration, builds, all layers,
    layer details and all targets pages.
    
    Changes to existing pages to exemplify navigation links.
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>

3	2	lib/toaster/toastergui/templates/newproject.html
25	22	lib/toaster/toastergui/templates/project.html
10	1	lib/toaster/toastergui/urls.py
47	1	lib/toaster/toastergui/views.py

commit 6618613c9210fb44d36d90f5f2404b435f10dfc8
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2014-08-08 17:17:13 +0100

    toaster: enable admin interface on select models
    
    We enable the admin interface in Toaster.
    
    We add admin models for Build Environments (where the
    sysadmin can configure where the builds take place)
    and for Layer Sources (marking the upstream provider
    for layer information).
    
    The admin interface and associated data are enabled
    only for the MANAGED version.
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>

8	0	lib/toaster/bldcontrol/admin.py
17	0	lib/toaster/orm/admin.py
5	5	lib/toaster/toastermain/settings.py
13	5	lib/toaster/toastermain/urls.py

commit 89e13579e1b44b738f10fadec8454aa0e6f073af
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2014-08-08 15:03:03 +0100

    toaster: update orm models for layerindex compatibility
    
    We add a ToasterSettings table that will keep
    installation-wide settings.
    
    We update the models for the layer-related data storage to
    make them compatible with the layerindex application API.
    
    We add a LayerSource class that can update local data from
    a LayerIndex-like compatible API.
    
    Adding a command line option to perform information update
    from all upstream layer sources.
    
    Fair warning - there is no backward migration from 0013.
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>

0	0	lib/toaster/orm/management/__init__.py
0	0	lib/toaster/orm/management/commands/__init__.py
12	0	lib/toaster/orm/management/commands/lsupdates.py
710	0	lib/toaster/orm/migrations/0013_auto__add_release__add_layerversiondependency__add_unique_layerversion.py
339	38	lib/toaster/orm/models.py
33	0	lib/toaster/orm/tests.py
2	0	lib/toaster/toastermain/settings.py

commit a6f18aac3e6bb448d89a3425a2f756c6514ee595
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2014-07-28 11:28:39 +0100

    toaster: fix application discovery in settings.py
    
    We fix application discovery, tuples don't have .append().
    
    Other minor fixes.
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>

1	3	lib/toaster/toastermain/settings.py

commit 63fd06ff05a7b1e7c48148d02160c90211f7a147
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2014-07-24 18:20:25 +0100

    toasterui: refactor log saving and save out-of-build errors
    
    We refactor log saving to go through only one code path.
    
    All logs that happened outside the build (i.e. before build
    starting) now will be logged to either toaster_ui.log if the
    build command ran in interactive mode, or to the build request
    errors if the command ran in managed mode.
    
    This enables proper display of error logs in project page.

47	32	lib/bb/ui/buildinfohelper.py
4	6	lib/bb/ui/toasterui.py

commit 02667e048c3e632f857c87177c0022eaf5481802
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2014-08-27 14:24:52 +0100

    build/data: Write out more complete python run files
    
    Currently the output in the python task/function run files is rather
    incomplete and effectively useless. This enhances the code to take
    advantage of the bitbake's dependency tracking and extend the output to
    include dependencies. This makes the files more usable for debugging
    purposes. Since this only happens at python function execution time, the
    overhead is minimal in the grand scheme of things.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/build.py
35	0	lib/bb/data.py

commit 446e490bf485b712e5cee733dab5805254cdcad0
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2014-08-27 14:55:50 +0100

    bitbake-worker: Extra profiling data dump
    
    Currently we get no profiling oversight into either the main bitbake worker
    process, or the overall parsing before task execution. This adds in extra
    profiling hooks so we can truly capture all parts of bitbake's execution
    into the profile data.
    
    To do this we modify the 'magic' value passed to bitbake-worker to trigger
    the profiling, before the configuration data is sent over to the worker.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

32	4	bin/bitbake-worker
5	2	lib/bb/runqueue.py

commit 93d155f4766e27e7b004d13569aa03961fe89e3b
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2014-08-27 14:56:25 +0100

    utils: Improve profile log processing
    
    This stream redirection of stdout is horrible. pstats takes a stream argument
    so lets use that instead.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	6	lib/bb/utils.py

commit 303e6256947f4df4f283b75b7ccfdffa72864d67
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2014-08-27 13:56:25 +0100

    fetch2/hg: Fix username/password handling
    
    We should only add user/password options if they're specified as in the
    fetch case. Patch from Volker Vogelhuber <v.vogelhuber@digitalendoscopy.de>
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

4	1	lib/bb/fetch2/hg.py

commit f787957a224e8c2682a19e5c4a4d9c86bdce52ba
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2014-08-27 13:07:24 +0100

    runqueue: Fix setscene tasks not running
    
    Currently, if you have hard dependencies between setscene tasks (like avahi on
    base-passwd through useradd.bbclass), other dependencies may not be installed
    even if these exist in sstate. For example, avahi -> expat -> pigz-native
    (and avahi -> base-passwd) yet if you cleansstate base-passwd:
    
    bitbake gzip-native:do_clean avahi:do_clean expat:do_clean pigz-native:do_clean base-passwd:do_cleansstate
    bitbake avahi | tee
    
    you will currently see pigz-native being rebuilt even though it was in
    sstate. The fix for this is to continue to iterate dependency chains
    around hard blocked dependencies as per this patch.
    
    After this patch is applied, you will see pigz-native installed from sstate.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

4	0	lib/bb/runqueue.py

commit 5d858e23de8b15badc3ab7f56ad5160a76a89de1
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2014-08-24 10:09:53 +0100

    bitbake.conf: Drop unused MKTEMP* variables
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

0	2	conf/bitbake.conf

commit 63552ca06d52c6cceb7a18a9efb022098d38f6c0
Author: Robert P. J. Day <rpjday@crashcourse.ca>
Date:   2014-06-25 11:08:05 -0400

    bitbake.conf: Delete long-dead {FETCH, RESUME, UPDATE}COMMAND variables
    
    Delete apparently long-obsolete variable settings in bitbake.conf.
    
    Signed-off-by: Robert P. J. Day <rpjday@crashcourse.ca>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

0	9	conf/bitbake.conf

commit 587b144ee409d444494d8d7f2d1c53ede8f7c953
Author: Robert P. J. Day <rpjday@crashcourse.ca>
Date:   2014-08-20 08:23:27 -0400

    lib/bb/*.py: Typo fixes/grammar/comment fixes, nothing functional.
    
    Signed-off-by: Robert P. J. Day <rpjday@crashcourse.ca>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/__init__.py
5	6	lib/bb/build.py
2	2	lib/bb/cache.py
6	3	lib/bb/daemonize.py
3	3	lib/bb/data.py
2	2	lib/bb/event.py
6	6	lib/bb/monitordisk.py
2	2	lib/bb/namedtuple_with_abc.py
2	2	lib/bb/utils.py

commit 984ad90b2f1e29634dc79803a4a0404ab0534039
Author: Olof Johansson <olof.johansson@axis.com>
Date:   2014-08-21 10:25:24 +0200

    depexp: don't use undefined variable 'logging'
    
    This fixes an issue when trying to use depexp without specifying a
    recipe. Before change:
    
      $ bitbake -g -udepexp
      Traceback (most recent call last):
        File ".../bitbake/bin/bitbake", line 382, in <module>
          ret = main()
        File ".../bitbake/bin/bitbake", line 370, in main
          return ui_module.main(server_connection.connection, server_connection.events, configParams)
        File ".../bitbake/lib/bb/ui/depexp.py", line 201, in main
          logger.error(cmdline['msg'])
      NameError: global name 'logger' is not defined
    
    After change:
    
      $ bitbake -g -udepexp
      Please specify a package name for dependency graph generation.
    
    Signed-off-by: Olof Johansson <olof.johansson@axis.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/ui/depexp.py

commit 86a67a1fd4244da9343dbf14deed1ad0d3003f32
Author: Bernhard Reutner-Fischer <rep.dot.nop@gmail.com>
Date:   2014-08-22 13:45:11 +0200

    cooker: tweak CookerCollectFiles::find_bbfiles
    
    since python-2.5 string.endswith() takes a tuple
    
    Signed-off-by: Bernhard Reutner-Fischer <rep.dot.nop@gmail.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/cooker.py

commit 2e80b5d10a5037ed6f0bc227a1f9b42529c87086
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2014-08-22 17:23:55 +0000

    siggen: Fix a subtle bug in hash calculation for shared work tasks
    
    With a shared work task like gcc, the task can be run from a variety of
    different recipes which may have different virtual extensions in place.
    
    Depending on whether gcc-runtime or nativesdk-gcc-runtime's do_preconfigure
    task is called for example will change the sorting of the task hashes due
    to the way clean_basename currently works.
    
    The correct thing to do here is sort on the base filename first, then any
    extension when ordering the hashes. This means we do account for things
    like recipes with both a native and non-native dependency but we also fix
    the shared work case where we don't care whether it was a virtual version
    or not.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/siggen.py

commit ac418e1112ff5f9c3157569316902f7a27fba4b4
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2014-08-21 10:27:10 +0100

    process: Further improve robustness against server shutdown
    
    Currently, if an exception occurs in an event handler, the server shuts
    down but the UI simply hangs. This happens in two places, firstly waiting
    for events and secondly, sending events to a server which no longer exists.
    
    The latter does time out, the former does not. These patches improve
    both code sections to check if the main server process is alive and if not,
    trigger things to shut down gracefully. This avoids the timeout in the
    command sending case too.
    
    This resolves various cases where the UI would simply hang indefintely.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

14	3	lib/bb/server/process.py

commit a16185e602b39b71475aa7e9ee80ad2b1f28d0f7
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2014-08-21 21:47:25 +0100

    utils: Add workaround for multiprocessing bug
    
    Our usage of multitprocessing is problematic. In particular, there is a bug
    in python 2.7 multiprocessing where signals are not handled until command
    completion instead of immediately.
    
    This adds a workaround into our wrapper function to deal with the issue.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

12	0	lib/bb/utils.py

commit 25bfa2478f1c3a8eb695e1e5760e06db5be8f2fc
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2014-08-21 21:45:52 +0100

    command: Trigger updateCache to shut down any active parser threads
    
    If we trigger a shutdown whilst parsing for whatever reason, in some
    cases we were not closing down the parser threads. This change
    ensures we do so. The function names are not entirely intuitive
    but the behaviour is more correct (and commented). The previous bug
    with the stdout failure would trigger this one, if there was a cold
    cache and parsing was required (but not otherwise).
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	0	lib/bb/command.py

commit 96f8ea07ace1379380fab2d78eb592fa40c867d4
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2014-08-21 21:46:57 +0100

    bitbake-worker: Improve sigterm handler
    
    When processes terminate, we really want all of the child processes to
    terminate too. This was not happening for worker processes which spawned their
    own multiprocessing pools, leading to build hangs. This change ensures any
    sigterm gets passed to the whole process group. In local tests, this resolved
    some hanging process workloads I could generate. It does rely on signals
    being delivered in a timely fashion and there is a multiprocessing bug we have
    to work around there.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

6	1	bin/bitbake-worker

commit 9544108f7b413038d871ce6ca88232de2f2434d9
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2014-08-21 21:45:16 +0100

    knotty: Improve exception handling
    
    Currently, IOErrors are just passed over due to the broken Exception
    clause. A command like "bitbake X | <invalid command>" would break stdout
    triggering a traceback. With these changes we print the exceptions, shut down
    the server gracefully and exit which is a much nicer behaviour and is less
    confusion to the user.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

9	1	lib/bb/ui/knotty.py

commit 1f28d8d3311262427938180435b68f0a35c2b330
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2014-08-20 22:31:06 +0000

    process: Deal with infinite looping of the server
    
    Currently if an exception occurs, we just run the idle handler again and
    again, usually looping indefintely. Chances are the exception that occurred
    will keep occuring and this is not a good place to be.
    
    This was breaking the autobuilders with gigabytes of logs.
    
    At least improve things so the cooker shuts down gracefully when this happens.
    Some trace of the original problem may still be present on the console too!
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	0	lib/bb/server/process.py

commit 000fa81013205dd9bc907ff7a61f06f57637212d
Author: Robert P. J. Day <rpjday@crashcourse.ca>
Date:   2014-08-12 04:53:16 -0400

    runqueue.py: Fix typoes/grammar in comments.
    
    Signed-off-by: Robert P. J. Day <rpjday@crashcourse.ca>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

6	6	lib/bb/runqueue.py

commit cec5859dec56529d76a0a685cc67b8da29453c69
Author: Andre McCurdy <armccurdy@gmail.com>
Date:   2014-08-12 16:41:48 -0700

    fetch2/local.py: fix first line indent of search path debug output
    
    Make OE do_unpack logs slightly prettier.
    
    Signed-off-by: Andre McCurdy <armccurdy@gmail.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/fetch2/local.py

commit fd293c5fcc89bc7a541d09e88a6aec5e0b2a1db2
Author: Robert P. J. Day <rpjday@crashcourse.ca>
Date:   2014-08-12 05:18:11 -0400

    daemonize.py: Non-functional comment/aesthetic fixes.
    
    Signed-off-by: Robert P. J. Day <rpjday@crashcourse.ca>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	3	lib/bb/daemonize.py

commit 4e9aef14d747c37444a4fc683f9641906906afe9
Author: Robert P. J. Day <rpjday@crashcourse.ca>
Date:   2014-08-13 05:18:50 -0400

    runqueue.py: Correct several misspellings of "notifing".
    
    Signed-off-by: Robert P. J. Day <rpjday@crashcourse.ca>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

7	7	lib/bb/runqueue.py

commit 17fc0174f177b444815487ba67a5d623e47ee8b1
Author: Robert Yang <liezhi.yang@windriver.com>
Date:   2014-08-18 17:38:18 -0700

    newbb.vim: remove PR
    
    We don't need the "PR = r0" in the bb, so remove it to avoid misleading
    the user.
    
    Signed-off-by: Robert Yang <liezhi.yang@windriver.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

0	1	contrib/vim/plugin/newbb.vim

commit 38d4f65bf1cbcdd5a2d60dff0e1d2859c34ed62e
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2014-08-02 09:51:00 +0100

    runqueue: Add sceneQueueComplete event
    
    Its useful to have an event emitted when all of the sceneQueue tasks
    have completed since the metadata can hook this for processing.
    Therefore add such an event.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

12	0	lib/bb/runqueue.py

commit c29c2370635075949c75937c237602600f4f10dc
Author: Namhyung Kim <namhyung@gmail.com>
Date:   2014-07-30 11:17:20 +0900

    cooker: Get rid of duplicate 'import re'
    
    The re module was imported at the top, no need to do it again.
    
    Signed-off-by: Namhyung Kim <namhyung@gmail.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

0	2	lib/bb/cooker.py

commit e304ace6d8f7d0808ee401b7c01146b2798a81b4
Author: Namhyung Kim <namhyung@gmail.com>
Date:   2014-07-30 11:01:45 +0900

    knotty: Move second event check into a proper block
    
    so that it doesn't check it twice for non-empty events
    
    Signed-off-by: Namhyung Kim <namhyung@gmail.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	2	lib/bb/ui/knotty.py

commit 78b6c89931a78b2c722d2fcf61cf553b45566a5a
Author: Scott Rifenbark <scott.m.rifenbark@intel.com>
Date:   2014-08-01 14:17:57 +0300

    bitbake-user-manual-metadata.xml: Fixed variable flags example.
    
    Signed-off-by: Scott Rifenbark <scott.m.rifenbark@intel.com>

1	1	doc/bitbake-user-manual/bitbake-user-manual-metadata.xml

commit 33cd736d84eb8d4719e430450f26acaee5b31782
Author: Scott Rifenbark <scott.m.rifenbark@intel.com>
Date:   2014-07-22 12:17:05 +0300

    bitbake-user-manual-fetching.xml: Minor edits to clearcase fetcher
    
    Signed-off-by: Scott Rifenbark <scott.m.rifenbark@intel.com>

4	4	doc/bitbake-user-manual/bitbake-user-manual-fetching.xml

commit 63f5a4b06a575e1fb18805b45a01549bffdc4a03
Author: Scott Rifenbark <scott.m.rifenbark@intel.com>
Date:   2014-07-22 12:10:35 +0300

    bitbake-user-manual/bitbake-user-manual-intro.xml: Fixed link
    
    I inadvertantly used a &YOCTO_* variable in the book to get
    a link to the landing YP page.  Of course this does not work.
    I replaced it with the actual URL.  Unfortunately, a previous
    commit slipped through that would have prevented the manual
    from "making" correctly.
    
    Signed-off-by: Scott Rifenbark <scott.m.rifenbark@intel.com>

1	1	doc/bitbake-user-manual/bitbake-user-manual-intro.xml

commit dc669c4beda04ee88a50c9b48facfbd8cf17a331
Author: Scott Rifenbark <scott.m.rifenbark@intel.com>
Date:   2014-07-22 12:09:39 +0300

    bitbake-user-manual-fetching.xml: Added new clearcase fetcher module.
    
    Reported-by: Richard Purdie <richard.purdie@linuxfoundation.org>
    Signed-off-by: Scott Rifenbark <scott.m.rifenbark@intel.com>

81	0	doc/bitbake-user-manual/bitbake-user-manual-fetching.xml

commit 4aaf56bfbad4aa626be8a2f7a5f70834c3311dd3
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2014-07-25 14:54:23 +0100

    codeparser cache improvements
    
    It turns out the codeparser cache is the bottleneck I've been observing when running
    bitbake commands, particularly as it grows. There are some things we can do about
    this:
    
    * We were processing the cache with "intern()" at save time. Its actually much
      more memory efficient to do this at creation time.
    
    * Use hashable objects such as frozenset rather than set so that we can
      compare objects
    
    * De-duplicate the cache objects, link duplicates to the same object saving
      memory and disk usage and improving speed
    
    * Using custom setstate/getstate to avoid the overhead of object attribute names
      in the cache file
    
    To make this work, a global cache was needed for the list of set objects as
    this was the only way I could find to get the data in at setstate object creation
    time :(.
    
    Parsing shows a modest improvement with these changes, cache load time is
    significantly better, cache save time is reduced since there is now no need
    to reprocess the data and cache is much smaller.
    
    We can drop the compress_keys() code and internSet code from the shared cache
    core since its no longer used and replaced by codeparser specific pieces.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

0	12	lib/bb/cache.py
109	34	lib/bb/codeparser.py

commit c22441f7025be012ad2e62a51ccb993c3a0e16c9
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2014-07-25 14:52:19 +0100

    cache: Optimise invalid cache file handling
    
    If there is a corrupt/invalid cache file, we'd keep trying to reopen
    it. This is pointless, simplify the code paths and delete the dead
    file.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	1	lib/bb/cache.py

commit 14c31e18e4a4a52ee54056aeefb09ff8c295b475
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2014-07-25 14:50:43 +0100

    cache: Don't reload the cache file since we already have this data in memory
    
    If we're writing out merged data to disk, its safe to assume that either
    we loaded the data or couldn't. Loading it again is relatively pointless
    and time consuming.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	9	lib/bb/cache.py

commit 0036b36e333a68c6d30a6bf5c21bfd4fd3e8441b
Author: Robert Yang <liezhi.yang@windriver.com>
Date:   2014-07-24 01:22:42 -0700

    bitbake: remove choices for dump-signatures
    
    The SIGNATURE_HANDLER can be defined by the user, so we can't use choices.
    
    Signed-off-by: Robert Yang <liezhi.yang@windriver.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	bin/bitbake

commit 3f191b7cfe95aea4d4e96babf001d62d45dd3aaa
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2014-07-18 12:07:22 +0100

    toasterui: fixing event.data clash
    
    This patch fixes a name collision on the event.data
    in the MetadataEvent class. event.data is used in the
    event system as a copy of "d" in certain situations,
    and this collision triggered a bug leading to data loss.
    
    [YOCTO #6332]
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>

1	1	lib/bb/event.py
15	15	lib/bb/ui/buildinfohelper.py

commit b5789c7ea7e6d1a4b67ec60fc0e4233ec543ba3a
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2014-07-17 15:30:17 +0100

    toaster-requirements.txt: document requirements for the python environment
    
    Since Toaster adds a number of specific requirements managed
    by pip, we document these requirements in order to be able
    to run bitbake and toaster under virtualenv. The target here
    is to break the dependency on distro packages for specific
    python libraries.
    
    In order to start bitbake/Toaster in a distro-independent manner,
    we use virtualenv and pip. We add venv to the .gitignore list
    to make room for the virtualenv deployment in this directory.
    
    Use this command sequence to setup the virtualenv:
    
    $ virtualenv venv
    $ . venv/bin/activate
    $ cat toaster-requirements.txt | xargs pip install
    
    bitbake and Toaster will then run normally under virtualenv.
    
    We also fix bugs related to toaster starting in managed mode
    through this script:
      * toaster will not use bldcontrol application in interactive mode
      * a proper message will be displayed if toaster detects a managed
    start request in a build environment
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>

2	0	.gitignore
11	8	bin/toaster
4	0	toaster-requirements.txt

commit 1868d5635b517e0fe1b874674ea7a78910b26e2e
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2014-07-15 19:31:10 +0100

    toaster: properly set layers when running a build
    
    This patch enables the localhost build controller to
    properly set the layers before the build runs.
    
    It creates the checkout directories under BuildEnvironment
    sourcedir directory, and runs the build in the buildir
    directory.
    
    Build launch errors are tracked in the newly added BRError table.
    These are different from build errors, in the sense that the
    build can't start due to these errors.
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>

93	15	lib/toaster/bldcontrol/bbcontroller.py
14	9	lib/toaster/bldcontrol/management/commands/runbuilds.py
112	0	lib/toaster/bldcontrol/migrations/0005_auto__add_brerror.py
7	1	lib/toaster/bldcontrol/models.py

commit 4e438854120cbd10319df1b571ec93e334002325
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2014-06-30 18:33:04 +0100

    toaster: add project main edit page
    
    This is the first commit on the project main edit page.
    
    At this point we have:
    * the default settings for a newly created project
    * the ability to add targets
    * the ability to trigger a build command, and have
    the build executed
    
    Project layers now have an optional field, allowing for
    removal. Default meta, meta-yocto and meta-yocto-bsp
    layers cannot be optional.
    
    We add XHR calls for interactivity in the main page.
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>

252	0	lib/toaster/orm/migrations/0012_auto__add_field_projectlayer_optional__add_field_projecttarget_task.py
6	2	lib/toaster/orm/models.py
28	14	lib/toaster/toastergui/static/css/default.css
4	0	lib/toaster/toastergui/templates/base.html
356	0	lib/toaster/toastergui/templates/project.html
3	0	lib/toaster/toastergui/urls.py
99	6	lib/toaster/toastergui/views.py

commit 525c316ac95c06c52fbcfc836ca5599ee9dbfe8b
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2014-07-15 14:14:56 +0100

    toaster: move bldcontrol initial_data fixture to code
    
    We move the initial_data fixture to a code migration,
    in order to make sure that we don't overwrite modified data.
    
    The data is inserted only if no data is present, instead
    of always overwriting the entry.
    
    The check settings returns 0 if the check was ok.
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>

0	1	lib/toaster/bldcontrol/fixtures/initial_data.json
5	0	lib/toaster/bldcontrol/management/commands/checksettings.py
104	0	lib/toaster/bldcontrol/migrations/0004_loadinitialdata.py

commit 1b5835e5d48cbfb7d38e38437c45d161052dfb37
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2014-07-15 13:01:56 +0100

    toaster: improved Project models
    
    A layer may live in a subdirectory of a git repository,
    so we add a field to track this setting in the Project layers.
    
    We add the Project schedule_build function, which creates
    a build request from the current project configuration.
    
    We also fix an import problem with Projects in views.
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>

99	0	lib/toaster/bldcontrol/migrations/0003_auto__add_field_brlayer_dirpath.py
2	0	lib/toaster/bldcontrol/models.py
242	0	lib/toaster/orm/migrations/0011_auto__add_field_projectlayer_dirpath.py
19	2	lib/toaster/orm/models.py
2	0	lib/toaster/toastergui/views.py

commit d17500d3f73fdeeef5f11fb3773a65e927be3f02
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2014-07-15 12:35:43 +0100

    toaster: add fields for sourcedir and builddir paths
    
    We add explicit absolute paths for a directory where
    the layer sources will be checked out (sourcedir) and
    where the build activities will take place.
    
    Adding minimal checking when starting the application in
    order to make sure that BuildEnvironment (BE) settings are
    usable. This check is ran by the toaster script at startup.
    
    Modify the localhost bbcontroller to use the BE settings
    instead of trying to self-configure on checked out sources.
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>

1	0	bin/toaster
25	26	lib/toaster/bldcontrol/bbcontroller.py
33	0	lib/toaster/bldcontrol/management/commands/checksettings.py
106	0	lib/toaster/bldcontrol/migrations/0002_auto__add_field_buildenvironment_sourcedir__add_field_buildenvironment.py
2	0	lib/toaster/bldcontrol/models.py

commit 1cd369883469747a8158826bb8d67dcca2a8577f
Author: Robert P. J. Day <rpjday@crashcourse.ca>
Date:   2014-07-22 17:54:42 -0400

    "per-package" should say "per-recipe"
    
    Signed-off-by: Robert P. J. Day <rpjday@crashcourse.ca>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	bin/bitbake
1	1	doc/bitbake-user-manual/bitbake-user-manual-intro.xml
1	1	doc/bitbake.1
1	1	lib/bb/cooker.py

commit 8fbffd25d42f1f2d9a85ae1d9cc4852e835730d4
Author: Scott Rifenbark <scott.m.rifenbark@intel.com>
Date:   2014-07-07 09:11:34 +0300

    Updated the the example 'bitbake -h' output to match the actual
    output, which has been recently patched to fix the
    '-S SIGNATURE_HANDLER, --dump-signatures=SIGNATURE_HANDLER'
    option.
    
    Note also, that I have added a new option that has since appeared
    in the output but was not in the manual's example.  That option
    added is '--token=XMLRPCTOKEN'.
    
    Reported-by: Richard Purdie <richard.purdie@linuxfoundation.org>
    Signed-off-by: Scott Rifenbark <scott.m.rifenbark@intel.com>

8	4	doc/bitbake-user-manual/bitbake-user-manual-intro.xml

commit 76cff0aaad4cf10b325bceadd8ea90b3d75edcc2
Author: Dennis Meier <meier.dennis@siemens.com>
Date:   2014-07-17 11:23:45 +0200

    fetch2: Add module for ClearCase (ccrc://)
    
    The clearcase fetcher is used to retrieve files from a ClearCase
    (http://en.wikipedia.org/wiki/Rational_ClearCase) repository.
    
    Usage in the recipe:
    
        SRC_URI = "ccrc://cc.example.org/ccrc;vob=/example_vob;module=/example_module"
        SRCREV = "EXAMPLE_CLEARCASE_TAG"
        PV = "${@d.getVar("SRCREV").replace("/", "+")}"
    
    The fetcher uses the rcleartool or cleartool remote client, depending on which one is available.
    
    Supported SRC_URI options are:
    
    - vob
        (required) The name of the clearcase VOB (with prepending "/")
    
    - module
        The module in the selected VOB (with prepending "/")
    
        The module and vob parameters are combined to create
        the following load rule in the view config spec:
                    load <vob><module>
    
    - proto
        http or https
    
    Related variables:
    
        CCASE_CUSTOM_CONFIG_SPEC
                Write a config spec to this variable in your recipe to use it instead
                of the default config spec generated by this fetcher.
                Please note that the SRCREV loses its functionality if you specify
                this variable. SRCREV is still used to label the archive after a fetch,
                but it doesn't define what's fetched.
    
    User credentials:
    
        When using cleartool:
                The login of cleartool is handled by the system. No special steps needed.
    
        When using rcleartool:
                In order to use rcleartool with authenticated users an `rcleartool login` is
                necessary before using the fetcher.
    
    Signed-off-by: Dennis Meier <meier.dennis@siemens.com>
    Reviewed-by: Roger Meier <r.meier@siemens.com>
    Reviewed-by: Christian Liechti <christian.liechti@siemens.com>
    Reviewed-by: Henrique Mendonca <henrique.mendonca@siemens.com>
    Reviewed-by: Pascal Bach <pascal.bach@siemens.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	0	lib/bb/fetch2/__init__.py
263	0	lib/bb/fetch2/clearcase.py

commit 39b08c604ba713100e174c136f81f18eca6ef33d
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2014-07-21 09:35:53 +0100

    command/runqueue: Fix shutdown logic
    
    If you hit Ctrl+C at the right point, the system processes the request
    but merrily continues building. It turns out finish_runqueue() is called
    but this doesn't stop the later generation and execution of the
    runqueue.
    
    This patch adjusts some of the conditionals to ensure the build really
    does stop.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/command.py
2	1	lib/bb/runqueue.py

commit 021b778fa4685bdde39e1a0f6c7c57632dcf792a
Author: Robert Yang <liezhi.yang@windriver.com>
Date:   2014-07-03 22:39:04 -0700

    bitbake: update help message for dump-signatures
    
    The bitbake -S had been updated which always reuires an argument, so
    update the help info:
    - Add the two args in the help message: none and printdiff
    
    - Use type="choice" so that we can get more friendly error messages,
      for example:
      bitbake: error: option -S: invalid choice: 'printdiffX' (choose from 'none', 'printdiff')
    
    - dump-signatures=DUMP_SIGNATURES -> dump-signatures=SIGNATURE_HANDLER
    
    Signed-off-by: Robert Yang <liezhi.yang@windriver.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	2	bin/bitbake

commit 4c6e7d88d715db18e61bb263dfd2672ebb6c6b09
Author: Scott Rifenbark <scott.m.rifenbark@intel.com>
Date:   2014-07-10 10:45:09 +0300

    bitbake-user-manual-metadata.xml: fixed some example whitespace issues
    
    I added some whitespace to bring the example to use 5 spaces
    rather than for so that it follows the manual's convention.
    
    Signed-off-by: Scott Rifenbark <scott.m.rifenbark@intel.com>

1	1	doc/bitbake-user-manual/bitbake-user-manual-metadata.xml

commit 17fcac8a7b21afa5c7d201e94cbf603ab07ba70c
Author: Scott Rifenbark <scott.m.rifenbark@intel.com>
Date:   2014-07-10 10:38:39 +0300

    bitbake-user-manual-metadata.xml: KERNEL_FEATURES example updated.
    
    I added text to separate this example code from the general
    BitBake User Manual's spirit of standing alone and away from
    YP or OE stuff.  Also, added another space to move the examples
    code so that 5 spaces are used for literal indentation.
    
    Signed-off-by: Scott Rifenbark <scott.m.rifenbark@intel.com>

5	4	doc/bitbake-user-manual/bitbake-user-manual-metadata.xml

commit c487341bd20b70aae6b430ee1c74a7f20345f81a
Author: Scott Rifenbark <scott.m.rifenbark@intel.com>
Date:   2014-07-10 10:33:08 +0300

    bitbake-user-manual-metadata.xml: Fixed whitespace
    
    I noticed that the examples from some patches were not indenting
    by 5 spaces.  I have fixed these to be consistent.
    
    Signed-off-by: Scott Rifenbark <scott.m.rifenbark@intel.com>

13	13	doc/bitbake-user-manual/bitbake-user-manual-metadata.xml

commit 749b39a8e5e8060222c748a349efc31f541da94e
Author: Robert P. J. Day <rpjday@crashcourse.ca>
Date:   2014-07-10 10:28:39 +0300

    bitbake-user-manual-metadata.xml: Removed fakeroot from list
    
    "fakeroot" is now specified as a function attribute, not as a task
    flag.
    
    Signed-off-by: Scott Rifenbark <scott.m.rifenbark@intel.com>

0	6	doc/bitbake-user-manual/bitbake-user-manual-metadata.xml

commit 834780772a08ecce7ed863e96d0674b47d0e589d
Author: Robert P. J. Day <rpjday@crashcourse.ca>
Date:   2014-07-10 10:23:32 +0300

    bitbake-user-manual-metadata.xml: Added second conditional metadata example.
    
    I think having a couple real-life examples here would make a huge
    difference.
    
    Comment from Scott: I modified the example description to indicate
    that it is from an OpenEmbedded metadata-based recipe (i.e from
    YP).  We have been trying very hard to keep the BitBake User
    Manual as separate as possible from the YP docs.
    
    Signed-off-by: Scott Rifenbark <scott.m.rifenbark@intel.com>

31	0	doc/bitbake-user-manual/bitbake-user-manual-metadata.xml

commit a18cc69c2fef6484a6acd78ea008d1da71198e68
Author: Robert P. J. Day <rpjday@crashcourse.ca>
Date:   2014-07-10 10:12:09 +0300

    bitbake-user-manual-metadata.xml: Adding some flag examples.
    
    As long as i've understood everything correctly, this is just
    throwing in some physical examples of a couple concepts.
    
    Signed-off-by: Scott Rifenbark <scott.m.rifenbark@intel.com>

24	1	doc/bitbake-user-manual/bitbake-user-manual-metadata.xml

commit 877c4c9a466e26953abd6fe416c2cba092607dac
Author: Scott Rifenbark <scott.m.rifenbark@intel.com>
Date:   2014-07-09 14:59:47 +0300

    bitbake-user-manual-metadata.xml: Edits to some operators
    
    Added wording to clearly state immediate or delayed application
    for various operators.
    
    Reported-by: Robert P. J. Day <rpjday@crashcourse.ca>
    Signed-off-by: Scott Rifenbark <scott.m.rifenbark@intel.com>

15	7	doc/bitbake-user-manual/bitbake-user-manual-metadata.xml

commit 8ff1b363df74f7e48da67fce9cf6b7e868c5e28e
Author: Robert P. J. Day <rpjday@crashcourse.ca>
Date:   2014-07-08 21:58:42 +0300

    bitbake-user-manual-execution.xml: Minor edits to execution chapter.
    
    Signed-off-by: Scott Rifenbark <scott.m.rifenbark@intel.com>

30	1	doc/bitbake-user-manual/bitbake-user-manual-execution.xml

commit af98b2ff4f44f892b63a6598e7fdfc144972ed3d
Author: Robert P. J. Day <rpjday@crashcourse.ca>
Date:   2014-07-08 15:32:50 +0300

    bitbake-user-manual-intro.xml: More edits to the intro chapter.
    
    Some applied as is, some not applied, some modified.
    
    Signed-off-by: Scott Rifenbark <scott.m.rifenbark@intel.com>

18	7	doc/bitbake-user-manual/bitbake-user-manual-intro.xml

commit 4e5db4bc460c12194a233dd283c273009606bb64
Author: Robert P. J. Day <rpjday@crashcourse.ca>
Date:   2014-07-08 15:11:06 +0300

    bitbake-user-manual-intro.xml: Minor edits to start of intro chapter
    
    Signed-off-by: Scott Rifenbark <scott.m.rifenbark@intel.com>

15	10	doc/bitbake-user-manual/bitbake-user-manual-intro.xml

commit dbe5902e64259e2143f09ab1aa9afa03aa02f4c4
Author: Robert Yang <liezhi.yang@windriver.com>
Date:   2014-07-07 08:57:19 +0300

    bitbake-user-manual-metadata.xml: Replaced "populate_staging"
    
    There is no "populate_staging" any longer, should be
    "populate_sysroot".
    
    Signed-off-by: Scott Rifenbark <scott.m.rifenbark@intel.com>

4	4	doc/bitbake-user-manual/bitbake-user-manual-metadata.xml

commit 366c70dbb0e9916f50ce1a4ff3ad4bd2757832a3
Author: Scott Rifenbark <scott.m.rifenbark@intel.com>
Date:   2014-07-03 15:27:54 +0300

    bitmake-user-manual-fetching.xml: Added transportuser parameter for SVN
    
    Fixes [YOCTO #6475]
    
    A new parameter has been added to make sure the user is not
    passed as the username for the subversion commands with the
    SVN fetcher.
    
    Signed-off-by: Scott Rifenbark <scott.m.rifenbark@intel.com>

7	0	doc/bitbake-user-manual/bitbake-user-manual-fetching.xml

commit af1d3373706d365f9138caec110fcb20a5966b7b
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2014-07-04 12:17:35 +0100

    toasterui: fix build - project identification
    
    This patches fixes the build - project identification when
    running under managed mode. The build is assigned to the
    project from which it was triggered, and to the
    build request, as to simplify relationships queries
     in the database.
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>

15	2	lib/bb/ui/buildinfohelper.py
3	4	lib/bb/ui/toasterui.py

commit 8855daebe55917c4f5855413d02ae1f3f7f76571
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2014-06-30 15:58:36 +0100

    toaster: new project page implementation
    
    We add the logic to create a new project. This page
    also serves as user registration and silent login
    for users.
    
    Once the project is added, the main project page is displayed.
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>

257	0	lib/toaster/orm/migrations/0010_auto__add_field_project_branch__add_field_project_short_description__a.py
38	0	lib/toaster/orm/models.py
6	7	lib/toaster/toastergui/templates/newproject.html
1	1	lib/toaster/toastergui/urls.py
36	12	lib/toaster/toastergui/views.py

commit 5f33d1a240faa49bd8259a48eb15ef57a6b4ce55
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2014-06-30 11:16:15 +0100

    toaster: whitespace fix
    
    This patch is just a whitespace (end-of-line) fix.
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>

9	9	lib/toaster/toastergui/templatetags/projecttags.py
7	7	lib/toaster/toastergui/views.py

commit a9062d9692525e24e59b5b2bb4dfdef90b41bf2a
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2014-06-27 15:09:04 +0100

    toaster: add automated login in new project page
    
    Toaster uses the Django authentication system to assign
    user accounts to the projects that are being created.
    
    In the current implementation, the user accounts are
    created/authenticated automatically, on the fly, based
    on the fields specified in the create new project page.
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>

19	16	lib/toaster/toastergui/templates/newproject.html
27	2	lib/toaster/toastergui/views.py

commit 927a27c68e24cfe13f62ca5f0e60878b04fa4e24
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2014-06-26 15:21:42 +0100

    toaster: add project pages
    
    We add the new project and project page skeletons.
    
    In the process, we add an identifier in the settings.py
    to detect whenever Toaster is running in managed mode,
    and a context processor to make this value available
    to the template processor.
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>

1	0	bin/toaster
13	0	lib/toaster/toastergui/templates/base.html
41	0	lib/toaster/toastergui/templates/newproject.html
6	0	lib/toaster/toastergui/templates/project.html
5	0	lib/toaster/toastergui/urls.py
38	0	lib/toaster/toastergui/views.py
15	4	lib/toaster/toastermain/settings.py

commit 9949948f92bbe2717a05a380d3df63a332d39c9a
Author: Dave Lerner <dave.lerner@windriver.com>
Date:   2014-06-25 15:40:29 +0100

    toasterui: Show in the log that ToasterUi is ready to receive events.
    
    Issue: TA53702
    
    It was observed that a sequence in a script such as
       bitbake --server-only ..
       bitbake --observe-only ..
       bitbake <some target>
    could generate events from the server to the observer before
    the observer was ready to read the events, and the early events
    of builds were consistently dropped.  Adding a "ready" note in the
    log allows the script to scan for that message before proceeding
    to building a target.
    
    Signed-off-by: Dave Lerner <dave.lerner@windriver.com>
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>

4	0	lib/bb/ui/toasterui.py

commit 05b246095d161143ca2ebc126d9e70d198ab8bb8
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2014-06-25 14:28:36 +0100

    toaster: automatically enable applications
    
    We automatically enable local applications in INSTALLED_APPS
    based on detecting a models.py or views.py file.
    This allows Toaster extensibility by adding applications,
    without having to edit configuration files.
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>

9	0	lib/toaster/toastermain/settings.py

commit 4000d8224206f404d174a5bc4aa49af55cb44d27
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2014-06-25 14:13:08 +0100

    toaster: automatically discover urls.py files
    
    Added code to automatically discover and add url dispatchers
    to the urlpattern list. This allows extension of Toaster
    through adding applications that will be automatically
    registered with the URL dispatcher.
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>

12	4	lib/toaster/toastermain/urls.py

commit 149693a342fe3a56027943d3ecb8bf2e1d0d652b
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2014-06-24 13:43:45 +0100

    toaster: remove strftime calls in filters
    
    We remove the unneeded strftime calls in filters, as the
    filters can deal directly with datetime types.
    
    [YOCTO #6379]
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>

6	6	lib/toaster/toastergui/views.py

commit 56c294dc30b6c2575b1cf904e26b8b8bef7677c2
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2014-07-03 11:39:34 +0100

    fetch2/svn: Add transportuser parameter
    
    There may be a need to set the user for the transport rather than the subversion
    command itself. Add a parameter to the url to allow this.
    
    [YOCTO #6475]
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	1	lib/bb/fetch2/svn.py

commit 54f1359ed2e9d47980cd221b7b43ef56543fe06d
Author: Robert Yang <liezhi.yang@windriver.com>
Date:   2014-07-03 14:12:12 +0800

    lib: fix no newline at end of file
    
    Add a '\n' to the last line of the file to fix:
    
    No newline at end of file
    
    Signed-off-by: Robert Yang <liezhi.yang@windriver.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/pysh/sherrors.py
1	1	lib/prserv/__init__.py

commit 5eb65d92c35264087e5d82c35638f3b8805b1b3e
Author: Robert Yang <liezhi.yang@windriver.com>
Date:   2014-07-03 14:12:12 +0800

    toaster: fix no newline at end of file
    
    Add a '\n' to the last line of the file to fix:
    
    No newline at end of file
    
    Signed-off-by: Robert Yang <liezhi.yang@windriver.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/toaster/bldcontrol/migrations/0001_initial.py
1	1	lib/toaster/bldviewer/static/css/bootstrap.css
1	1	lib/toaster/orm/migrations/0001_initial.py
1	1	lib/toaster/orm/migrations/0002_auto__add_field_build_timespent.py
1	1	lib/toaster/orm/migrations/0004_auto__add_field_package_installed_name.py
1	1	lib/toaster/orm/migrations/0005_auto__add_target_image_file__add_target_file__add_field_variablehistor.py
1	1	lib/toaster/orm/migrations/0006_auto__add_field_target_image_size__add_field_target_license_manifest_p.py
1	1	lib/toaster/orm/migrations/0007_auto__add_helptext.py
1	1	lib/toaster/orm/migrations/0008_auto__chg_field_variablehistory_operation__chg_field_recipe_descriptio.py
1	1	lib/toaster/orm/migrations/0009_auto__add_projectvariable__add_projectlayer__add_projecttarget__add_pr.py
1	1	lib/toaster/toastergui/static/css/prettify.css
-	-	lib/toaster/toastergui/static/js/bootstrap.min.js
1	1	lib/toaster/toastergui/static/js/jquery-2.0.3.min.map

commit 01692654cd792eaf6362bbac9c34314db4a7ffea
Author: Scott Rifenbark <scott.m.rifenbark@intel.com>
Date:   2014-07-03 15:26:35 +0300

    templates: Added newline character to end of script.
    
    Prevents errors when editing in vi and writing and quiting.
    
    Signed-off-by: Scott Rifenbark <scott.m.rifenbark@intel.com>

1	1	doc/template/component.title.xsl
2	1	doc/template/division.title.xsl

commit 0ac8a504de1798dae02eb2dade2776e7e25d034d
Author: Scott Rifenbark <scott.m.rifenbark@intel.com>
Date:   2014-06-27 15:44:00 +0300

    bitbake-user-manual-ref-variables.xml: Edits to OVERRIDES variable.
    
    More detail.
    
    Signed-off-by: Scott Rifenbark <scott.m.rifenbark@intel.com>

10	2	doc/bitbake-user-manual/bitbake-user-manual-ref-variables.xml

commit ebca1b7847ff34213e6da71c79f00cb4b6b0757b
Author: Robert P. J. Day <rpjday@crashcourse.ca>
Date:   2014-06-27 07:50:56 +0300

    bitbake-user-manual-execution.xml: Minor fixes.
    
    Collection of typo and grammar fixes from "Execution"
    chapter.
    
    Signed-off-by: Scott Rifenbark <scott.m.rifenbark@intel.com>

38	24	doc/bitbake-user-manual/bitbake-user-manual-execution.xml

commit fedc5470e9f4f5438d3de957f47985f76a484533
Author: Robert P. J. Day <rpjday@crashcourse.ca>
Date:   2014-06-27 07:29:11 +0300

    bitbake-user-manual-intro.xml: Minor fixes mostly grammar adjustments.
    
    Signed-off-by: Scott Rifenbark <scott.m.rifenbark@intel.com>

14	12	doc/bitbake-user-manual/bitbake-user-manual-intro.xml

commit 90b1aec42cd29716f1cbd058757941cbfda235b0
Author: Scott Rifenbark <scott.m.rifenbark@intel.com>
Date:   2014-06-26 15:30:24 +0300

    bitbake-user-manual-fetching.xml: Small fix in Git Fetcher
    
    Fixed how we refer to the "rev" paramater.
    
    Signed-off-by: Scott Rifenbark <scott.m.rifenbark@intel.com>

1	1	doc/bitbake-user-manual/bitbake-user-manual-fetching.xml

commit c469ceb86c1f76e9fa867ffb8a5c9b120ed7942b
Author: Robert P. J. Day <rpjday@crashcourse.ca>
Date:   2014-06-26 15:19:11 +0300

    bitbake-user-manual-execution.xml: Typo and grammar fixes.
    
    Signed-off-by: Scott Rifenbark <scott.m.rifenbark@intel.com>

7	7	doc/bitbake-user-manual/bitbake-user-manual-execution.xml

commit 394f64123d5ef1e9b4628d083488b9432eccbded
Author: Scott Rifenbark <scott.m.rifenbark@intel.com>
Date:   2014-06-26 15:13:13 +0300

    bitbake-user-manual-execution.xml: Edits to "Providers and Preferences"
    
    I split this section into two sections and tried to simplify what
    was being said about PROVIDES.
    
    Signed-off-by: Scott Rifenbark <scott.m.rifenbark@intel.com>

55	38	doc/bitbake-user-manual/bitbake-user-manual-execution.xml

commit 66529a17d50bbce211361d98ace012b9424459c9
Author: Scott Rifenbark <scott.m.rifenbark@intel.com>
Date:   2014-06-26 14:42:49 +0300

    bitbake-user-manual-fetching.xml: Small wording change.
    
    Signed-off-by: Scott Rifenbark <scott.m.rifenbark@intel.com>

1	1	doc/bitbake-user-manual/bitbake-user-manual-fetching.xml

commit 4b2019e67324f0f86e1a49d256eddb4f9ca597f4
Author: Scott Rifenbark <scott.m.rifenbark@intel.com>
Date:   2014-06-26 09:50:26 +0300

    bitbake-user-manual-ref-variables.xml: Edits to PROVIDES variable.
    
    Added some more detail to help describe the variable.
    
    Signed-off-by: Scott Rifenbark <scott.m.rifenbark@intel.com>

22	10	doc/bitbake-user-manual/bitbake-user-manual-ref-variables.xml

commit ee8db0cda1c8716ab0151a4859bfff84b2f3bd58
Author: Scott Rifenbark <scott.m.rifenbark@intel.com>
Date:   2014-06-25 14:42:51 +0300

    bitbake-user-manual-style.css: Added permalink style for display
    
    Fixes [YOCTO #5772]
    
    Added a couple styles to the CSS style sheet so that the displayed
    permalink symbol is barely visible unless you hover over it with
    the mouse.
    
    Signed-off-by: Scott Rifenbark <scott.m.rifenbark@intel.com>

7	0	doc/bitbake-user-manual/bitbake-user-manual-style.css

commit 04467594a599472c367365dffe205bf727c4d592
Author: Scott Rifenbark <scott.m.rifenbark@intel.com>
Date:   2014-06-25 09:14:35 +0300

    bitbake-user-manual-customization.xsl: Added support for variable permalinks.
    
    Fixes [YOCTO #5772]
    
    Including the gloss-permalink.xsl file in the customization layer
    so that making the manual now generates permalinks for each variable
    definition in the glossary.
    
    Signed-off-by: Scott Rifenbark <scott.m.rifenbark@intel.com>

1	0	doc/bitbake-user-manual/bitbake-user-manual-customization.xsl

commit 772f2bdc10fa242646e4d09f6bdbaf8558f06b22
Author: Scott Rifenbark <scott.m.rifenbark@intel.com>
Date:   2014-06-25 09:13:08 +0300

    template: Added XSL template to support variable glossary permalinks.
    
    Fixes [YOCTO #5772]
    
    This file enables creation of permalinks for variables defined
    in the glossary.
    
    Signed-off-by: Scott Rifenbark <scott.m.rifenbark@intel.com>

14	0	doc/template/gloss-permalinks.xsl

commit a2a3b534871aa23a5d442b93dd9660d5f9e27536
Author: Scott Rifenbark <scott.m.rifenbark@intel.com>
Date:   2014-06-19 08:38:51 +0300

    bitbake-user-manual-intro.xml: Edits to "Obtaining BitBake"
    
    Updated the last bullet item that describes a final way to
    obtain a copy of BitBake.  The example was too specific regarding
    Poky and OE.  So, I made it quite generic and kept with the
    convention of not having any specific links from the BitBake
    manual into YP docs or such.
    
    Signed-off-by: Scott Rifenbark <scott.m.rifenbark@intel.com>

5	6	doc/bitbake-user-manual/bitbake-user-manual-intro.xml

commit 266a0b5ef41dcc4048e2a4d1c43567568d7449d7
Author: Robert P. J. Day <rpjday@crashcourse.ca>
Date:   2014-06-18 16:46:50 +0300

    bitbake-user-manual-intro.xml: Basic proofreading, grammar fixes.
    
    Signed-off-by: Scott Rifenbark <scott.m.rifenbark@intel.com>

32	12	doc/bitbake-user-manual/bitbake-user-manual-intro.xml

commit b82f724c271c43218dc28440219adcea968e2a26
Author: Belen Barros <belen.barros.pena@intel.com>
Date:   2014-06-11 10:58:55 +0100

    toaster: Fix spacing and layout in no image files notification
    
    Close the definition list before adding the notification, and
    restrict the notification width to avoid uncomfortable line
    lenghts.
    
    Signed-off-by: Belen Barros <belen.barros.pena@intel.com>
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

17	12	lib/toaster/toastergui/templates/builddashboard.html

commit ac1911eb857f4759ed085c8a4fc4b47cefafcd7a
Author: Farrell Wymore <farrell.wymore@windriver.com>
Date:   2014-05-23 12:09:29 -0700

    toaster: display message if no images are generated
    
    Display message if no images are generated for a target. This
    commit was amended to have more conditions for displaying the
    message.
    
    [YOCTO #6094]
    
    Signed-off-by: Farrell Wymore <farrell.wymore@windriver.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

15	0	lib/toaster/toastergui/templates/builddashboard.html
5	0	lib/toaster/toastergui/views.py

commit 4a1fc6851d21500150715f0e8fa03c0b228ec5f2
Author: Ionut Chisanovici <ionutx.chisanovici@intel.com>
Date:   2014-05-28 15:52:26 +0300

    toaster: Add performance testing script
    
    This is implemented as a django management command.
    For the moment the 'manage.py perf' command will track the toaster
    'gui' urls http response code and load time.
    
    To use it:
    1. do your toaster builds
    2. ensure toaster is started
    1. cd bitbake/lib/toaster
    2. ln -s ../../../build/toaster.sqlite
    3. ./manage.py perf
    
    Signed-off-by: Ionut Chisanovici <ionutx.chisanovici@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

53	0	lib/toaster/toastermain/management/commands/perf.py

commit b21a2af9411da17d49521820fa512292e89c856e
Author: Farrell Wymore <farrell.wymore@windriver.com>
Date:   2014-05-22 14:58:14 -0700

    toaster: refactor the target page
    
    the target (packages) page had to refactored to
    allow the displays to differ depending on the caller
    namely the license manifest link. Amended to make the
    link from the tag rather than the pathname itself.
    
    [YOCTO #6291]
    [YOCTO #6079]
    
    Signed-off-by: Farrell Wymore <farrell.wymore@windriver.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/toaster/toastergui/templates/builddashboard.html
1	0	lib/toaster/toastergui/urls.py
156	114	lib/toaster/toastergui/views.py

commit 7ae1d4844d9d3a76f86ef32c5a794e51e334e588
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2014-06-18 17:59:39 +0100

    build.py: Ensure shared work siginfo files are written to the correct location
    
    Right now shared work signature data is saved to the non-shared directory
    which is confusing to everyone including bitbake. Whilst its messy,
    extra the stampbase data instead, which ensures the sig data is written
    to the correct location alongside its corresponding stamp file.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

6	2	lib/bb/build.py

commit 39bbc8f82894ca521d35645cd618dd131fde38ef
Author: Robert P. J. Day <rpjday@crashcourse.ca>
Date:   2014-06-18 14:25:40 +0300

    bitbake-user-manual-fetching.xml: Grammar, typo, and tweaks.
    
    Various grammatical and typo tweaks all in fetching chapter, including
    moving CVS section after wget section for more logical content flow.
    
    Signed-off-by: Scott Rifenbark <scott.m.rifenbark@intel.com>

48	46	doc/bitbake-user-manual/bitbake-user-manual-fetching.xml

commit dc5adbb8ce140b6898f18bb99bac02aac16f2ac8
Author: Scott Rifenbark <scott.m.rifenbark@intel.com>
Date:   2014-06-13 07:38:15 +0300

    bitbake-user-manual-style.css: Removed dead .PNG file
    
    Fixes [YOCTO #6430]
    
    I removed an old .PNG file that is not used.
    
    Signed-off-by: Scott Rifenbark <scott.m.rifenbark@intel.com>

0	1	doc/bitbake-user-manual/bitbake-user-manual-style.css

commit e1c24a79ededb2dd4ac5ce09fcfdf93218261907
Author: Scott Rifenbark <scott.m.rifenbark@intel.com>
Date:   2014-06-06 14:41:03 +0300

    bitbake-user-manual: Added permalink support.
    
    Fixes [YOCTO #5772]
    
    I added the five XSL templates to the template folder.  I updated
    the bitbake-user-manual-customization.xsl layer file to include
    the new templates.
    
    Signed-off-by: Scott Rifenbark <scott.m.rifenbark@intel.com>

6	0	doc/bitbake-user-manual/bitbake-user-manual-customization.xsl
39	0	doc/template/component.title.xsl
24	0	doc/template/division.title.xsl
21	0	doc/template/formal.object.heading.xsl
25	0	doc/template/permalinks.xsl
55	0	doc/template/section.title.xsl

commit bf79174e02cc113e0512bcadc3ab0fdffd138215
Author: Scott Rifenbark <scott.m.rifenbark@intel.com>
Date:   2014-06-06 14:34:01 +0300

    bitbake-user-manual-customization.xsl: Removed stale TOC variable.
    
    I deleted the commented out xsl:param line that attempts to
    set labeling for Appendices.  It had been replaced by a working
    line.
    
    Signed-off-by: Scott Rifenbark <scott.m.rifenbark@intel.com>

0	1	doc/bitbake-user-manual/bitbake-user-manual-customization.xsl

commit 90cc450671eaabf917c10a8d01b729b6bc0f544c
Author: Scott Rifenbark <scott.m.rifenbark@intel.com>
Date:   2014-05-19 16:03:02 +0300

    bitbake-user-manual-fetching.xml: Edits to the Git Submodule fetcher section.
    
    Exchanged "SRC_URI" for "URI" for clarity.
    
    Signed-off-by: Scott Rifenbark <scott.m.rifenbark@intel.com>

2	1	doc/bitbake-user-manual/bitbake-user-manual-fetching.xml

commit a3a3331e7118fd3139fe5a80b157a5a5b38631de
Author: Scott Rifenbark <scott.m.rifenbark@intel.com>
Date:   2014-05-19 14:49:56 +0300

    bitbake-user-manual-fetching.xml: Added new Git Submodule Fetcher section.
    
    Added the "GIT Submodule Fetcher (gitsm://)" section to the
    fetchers chapter.  This information was provided by Chris
    Morgan.
    
    Reported-by: Chris Morgan <chmorgan@gmail.com>
    Signed-off-by: Scott Rifenbark <scott.m.rifenbark@intel.com>

21	6	doc/bitbake-user-manual/bitbake-user-manual-fetching.xml

commit 10988bd77c8c7cefad3b88744bc5d8a7e3c1f4cf
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2014-06-12 12:57:22 +0100

    toaster: build control functionality
    
    We add the build control functionality to toaster.
    
    * The bldcontrol application gains bbcontroller classes
    that know how to manage a localhost build environment.
    
    * The toaster UI now detects it is running under build
    environment controller, and update the build controller
    database and will shut down the bitbake server once
    the build is complete.
    
    * The toaster script can now run in standalone mode,
    launching the build controller and the web interface instead
    of just monitoring the build, as in the interactive mode.
    
    * A fixture with the default build controller entry for
    localhost is provided.
    
    [YOCTO #5490]
    [YOCTO #5491]
    [YOCTO #5492]
    [YOCTO #5493]
    [YOCTO #5494]
    [YOCTO #5537]
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>

4	3	bin/toaster
10	0	lib/bb/ui/buildinfohelper.py
3	0	lib/bb/ui/toasterui.py
239	0	lib/toaster/bldcontrol/bbcontroller.py
1	1	lib/toaster/bldcontrol/fixtures/initial_data.json
0	0	lib/toaster/bldcontrol/management/__init__.py
0	0	lib/toaster/bldcontrol/management/commands/__init__.py
85	0	lib/toaster/bldcontrol/management/commands/runbuilds.py
2	0	lib/toaster/bldcontrol/models.py
69	4	lib/toaster/bldcontrol/tests.py

commit dc1daae51ef5201475b5c1a69d966ae57b66dcb6
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2014-06-11 15:33:17 +0100

    toastergui: fix built ETA calculation
    
    We fix the calculation showing the estimated time
    to build completion.
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>

3	4	lib/toaster/toastergui/views.py

commit db5390940c0afbcdc9fbcf1225761968ae51d4a7
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2014-06-11 10:19:03 +0100

    xmlrpc: add support for token reusing
    
    We add support to specify a connection token in the command line
    and in the environment variable BBTOKEN.
    
    When a client registers to a bitbake server, that client
    will have exclusive access to the server. The client is identified
    by a server-supplied token. If a client terminates, we cannot
    reconnect to the server as the token is lost.
    
    This patch adds the capability to specify the connection token
    in the command line for xmlrpc clients. This allows us
    to have bitbake work as an already-authenticated
    client with the server and resume sending commands to a server.
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>

7	1	bin/bitbake
12	7	lib/bb/server/xmlrpc.py

commit 272a4bba0804bb6b5e0d498d3453321b5ed1dc76
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2014-06-11 09:34:55 +0100

    toaster: add function to get the database url
    
    We add a function that returns the DATABASE_URL
    for the current 'default' database settings. This
    is useful to be able to start other toaster instances
    with the same database settigns as the currently running
    instance.
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>

19	0	lib/toaster/toastermain/settings.py

commit d4bfe9059f765f11244b97e324c0131f32f8e400
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2014-06-09 12:55:53 +0100

    toaster: create models for bldcontrol and enable it
    
    We create the model classes that store information
    about triggering builds, and the available build
    environments.
    
    We add a fixture with a default build environment
    for build control, using a "build/" directory under
    the poky checkout directory.
    
    We enable the bldcontrol in toaster starting script
    and in the toaster settings as to allow the actual database
    to be kept in sync with the source code.
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>

1	1	bin/toaster
1	0	lib/toaster/bldcontrol/fixtures/initial_data.json
154	0	lib/toaster/bldcontrol/migrations/0001_initial.py
0	0	lib/toaster/bldcontrol/migrations/__init__.py
79	1	lib/toaster/bldcontrol/models.py
1	0	lib/toaster/toastermain/settings.py

commit 08556b79b7b2af08aaeedf8733b1b8996f387c4e
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2014-06-09 12:05:26 +0100

    toaster: initial bldcontrol application
    
    The build features of Toaster will be contained into
    a separate application, as to modularize the Toaster
    project and provide multiple options for deployment.
    
    This patch adds the application as a barebone Django
    application in the Toaster project.
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>

0	0	lib/toaster/bldcontrol/__init__.py
3	0	lib/toaster/bldcontrol/models.py
16	0	lib/toaster/bldcontrol/tests.py
1	0	lib/toaster/bldcontrol/views.py

commit 2e742c03e8dfdfa67899e7f5d579ed14bd87e139
Author: Ross Burton <ross.burton@intel.com>
Date:   2014-06-11 11:04:44 +0100

    bb/utils: fix contains_any()
    
    "set1 in set2" doesn't do what you'd expect, and if it did do a subset test
    that's not the logic required by contains_any().
    
    Instead get the intersection of checkvalues and val and check if the resulting
    set is empty or not (by evaluating it in a boolean context), which tells us if
    there are any elements in common.
    
    Based on a patch by Valentin Popa <valentin.popa@intel.com>.
    
    Signed-off-by: Ross Burton <ross.burton@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/utils.py

commit 25d10c349aab77bf99745c0a90dd8f9b90abccac
Author: Ross Burton <ross.burton@intel.com>
Date:   2014-06-11 11:04:43 +0100

    bb/tests/data.py: add tests for contains() and contains_any()
    
    contains_any is buggy so write a test case to demonstrate this.
    
    Signed-off-by: Ross Burton <ross.burton@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

36	0	lib/bb/tests/data.py

commit cf33d4bfc53ae8dc6353fa295e1acd789d4fc2d2
Author: Robert Yang <liezhi.yang@windriver.com>
Date:   2014-06-06 10:35:06 -0400

    cache.py: print debug info when EXCLUDE_FROM_WORLD
    
    This gives us an easy way to find out which recipes have been excluded
    from world when there are many layers.
    
    Signed-off-by: Robert Yang <liezhi.yang@windriver.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	1	lib/bb/cache.py

commit 38f77a43d16e202d1f40632b27cb70dd20d02a5e
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2014-06-09 11:36:01 +0100

    toaster: add Project class models to orm
    
    This patch adds the Project class models to the
    toaster GUI data model. There is no specified use,
    and the link in the Build class is optional.
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

286	0	lib/toaster/orm/migrations/0009_auto__add_projectvariable__add_projectlayer__add_projecttarget__add_pr.py
1	1	lib/toaster/orm/models.py

commit d095eec6fc958d0aeb514cdc206734617fd7c930
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2014-06-06 15:03:32 +0100

    toaster: comment out bldcontrol migration command
    
    This fixes toaster startup failing after the preparatory patches
    for bldcontrol application have been merged.
    
    I slipped a bldcontrol-specific line into the toaster startup
    script and this prevents toaster from starting. We comment
    out this line until the bldcontrol application have been merged.
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	bin/toaster

commit 2732dbae67c1945b668c38cc4cc5678c4aafe3d6
Author: Ash Charles <ashcharles@gmail.com>
Date:   2014-06-05 12:56:05 -0700

    bitbake: show wildcard appends for bitbake-layers
    
    The 'bitbake-layers show-appends' command can use the built-in
    get_file_appends() method which correctly identifies bbappends that
    include a '%' wildcard in their filename.
    
    Signed-off-by: Ash Charles <ashcharles@gmail.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	bin/bitbake-layers

commit 8271e61a2fbddd3fc49556829675478d7505d58f
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2014-06-03 16:26:18 +0100

    toasterui: fix django settings environment value
    
    Previously, the buildinfohelper only set a django settings module
    environment variable if none were set.
    
    This may lead to problems when the starting the toasterui
    from an already existing Django environment.
    
    As such, we always override the variable to provide the
    correct name for the local Django settings module.
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/ui/buildinfohelper.py

commit 0bf0251ae05442ae260c6099b389bf765c4fef26
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2014-06-03 16:26:17 +0100

    toaster: add project related models
    
    We introduce the notion of a project in Toaster as the item
    that holds the specification for triggering a build: the set
    of layers used, the set of configuration variable values, and
    the set of targets to be build.
    
    Builds triggered through Toaster will be associated with a
    Project, and they will be configured based on the project
    settings at the moment when the build is ordered.
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

19	0	lib/toaster/orm/models.py

commit 30159dbda3a40fa596302f91c705cb5f148c97a9
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2014-06-03 16:26:16 +0100

    toaster: update toaster to run in managed mode
    
    We disable bitbake self start to prevent race condition.
    
    ToasterUI will shutdown the server when the build is done
    if running in managed mode.
    
    We fix usage of kill server flag in the bitbake binary.
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

16	18	bin/bitbake
12	4	lib/bb/ui/toasterui.py

commit c1db4ccf27bedcbab2f03e7539fdb11b042c4fb9
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2014-06-03 16:26:15 +0100

    toaster: startup script standalone mode
    
    The toaster starter script was designed to be sourced in
    a build environment and set up the build recording environment
    to be used in an interactive mode.
    
    For the standalone web server mode, we modify the toaster
    script to be run directly from the checked-out sources,
    without a build environment set up, and run the web server
    alone. In the standalone mode, the build environemnts and
    all build activities are controled through the web interface.
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

46	6	bin/toaster

commit c39838201301b9732581288a93783400bebe6591
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2014-06-03 16:26:14 +0100

    toaster: startup script noweb mode
    
    We add an option to the startup script, named "noweb" that
    will start toaster without the embedded web server.
    
    This is useful to start the system for build-only environments,
    where the web server code is running on a different machine.
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

5	1	bin/toaster

commit d16d19dafb83448fc214fce4fbdc2bcbf4bf9ce3
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2014-06-03 16:26:13 +0100

    toaster: read database settings from the environment
    
    We add the capability to read the database settings for
    Toaster from the environment. The DATABASE_URL is intepreted
    and used to override the default settings.
    
    This capability is essential for easy deployment of Toaster
    in a managed hosted environment, and for creating
    build environments with custom database settings.
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

34	1	lib/toaster/toastermain/settings.py

commit c3d520c92ae4ae80d31926a416456df510654b6a
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2014-06-03 16:26:12 +0100

    uievent: retry on handler registration failure
    
    The registration of a remote UI event handler may fail
    if the server cooker is currently in some certain states.
    This may happen, for example, when a remote UI is started
    very fast after the bitbake server is started, and the
    server hadn't time to finish initial configuration parsing.
    
    Rather than fail outright, we have the remote UI event retry
    registration for five time at one-second intervals,
    in the hope it will succeed.
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

19	3	lib/bb/ui/uievent.py

commit eb63f08c33644f64752aaae2146a000956ce894a
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2014-06-04 15:47:02 +0100

    xmlrpc: client - remove fatal errors
    
    When we use the XMLRPC client API to connect to a bitbake server,
    we want to receive errors from the API instead of having the
    API exiting without warning.
    
    Thus the "bb.fatal" calls have been replaced with "bb.warn" calls,
    and we re-raise the original exception for handling by the
    original caller.
    
    The bitbake starting script has been modified to properly test
    for failures in calling the client API and handle them.
    
    Additional error handling added in the client, as to prevent
    fatal crashes.
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

13	10	bin/bitbake
14	7	lib/bb/server/xmlrpc.py
2	1	lib/bb/ui/uievent.py

commit ac5753274ff932e1d6f073ab4dab7bd6fe5355a1
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2014-06-03 16:26:10 +0100

    bitbake: move configuration reading code
    
    The configuration reading code should live in the
    main bitbake entry point, and the server modules should
    be supplied with correct configuration instead of attempting
    to parse from configuration files.
    
    This patch moves the endpoint address reading from XMLRPC
    to the bitbake main script.
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

22	1	bin/bitbake
0	24	lib/bb/server/xmlrpc.py

commit 18f9bcbad059608e22fca20309314e1c399acec7
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2014-05-31 00:23:46 +0100

    siggen: Print warning about tainted tasks
    
    The big warning printed when people use -f is easily ignored/forgotten.
    To raise user awareness, print a warning any time we include a tainted
    stamp file into a build instead.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	0	lib/bb/siggen.py

commit b131229145e1f2c372d6230a7b554e436c13c3f9
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2014-05-30 15:56:11 +0100

    build/utils: Fix broken exception handling
    
    Checking for explicit exception names is bad, we also want to be able top
    rely on inheritance. Fix these checks to be part of the real except clauses
    so SkipPackage is recognised as being inherited from SkipRecipe.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	3	lib/bb/build.py
2	7	lib/bb/utils.py

commit 181a9735d02ebd517378558e909efc8b1b118973
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2014-05-30 15:57:50 +0100

    bb.fatal: Raise a BBHandledException instead of exiting
    
    With new bitbake UIs having the cooker exit at 'random' points
    in the codebase is problematic. This patch raises an exception
    which matches the situation instead.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	2	lib/bb/__init__.py

commit 98d9e6e0f514a7cb7da1d99bf4bd5602b89426d6
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2014-05-30 15:55:37 +0100

    event: Add SkipRecipe event to replace SkipPackage
    
    In the depths of time we were rather confused about naming. bb files
    are recipes, the event to skip parsing them should be SkipRecipe,
    not SkipPackage. This changes bitbake to use the better name but
    leaves the other around for now. We can therefore start removing
    references to it from the metadata.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/build.py
1	1	lib/bb/cache.py
1	1	lib/bb/data_smart.py
1	1	lib/bb/event.py
5	2	lib/bb/parse/__init__.py
3	3	lib/bb/parse/ast.py
1	1	lib/bb/parse/parse_py/BBHandler.py
1	1	lib/bb/utils.py

commit f63b61f8997862439519f474cc09f3e05e95288c
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2014-05-30 15:54:29 +0100

    event.py: Allow passthrough of BBHandledException events
    
    We need BBHandledException events to be passed through to the higher
    layers, they don't need addition of any traceback since they've already
    been reported to the user.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/event.py

commit e01988d9a1b7c40e31161c6ce7b85c4405671068
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2014-05-30 15:53:53 +0100

    cookerdata: Improve error handling
    
    If we see errors during parsing, firstly its bad to show a traceback
    for an expansion error so lets suppress this.
    
    Secondly, raise a BBHandledException instead of a SystemExit to show
    we've informed the user about the condition (printing a traceback in the
    default unknown case).
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

5	2	lib/bb/cookerdata.py

commit 79211b3434855942f9fad4a1db69ce7be911327c
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2014-05-30 15:52:59 +0100

    event: Fix event handlers to raise SkipPackage
    
    If an event handler triggers a SkipPackage event, we really want that
    event to be received and processed by the higher code levels. Currently
    it was getting caught and ignored which was leading to recipes
    being present when they clearly shouldn't have been.
    
    In general this exception catching looks to be doing the wrong thing. It
    was introduced in
    http://git.yoctoproject.org/cgit/cgit.cgi/poky/commit/bitbake/lib/bb/event.py?id=37cb4cc02b2e2b6c338c5943747e0a1ef15176b3
    but we likely want exceptions to pass through to the higher layers.
    
    This patch therefore removes that code.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	4	lib/bb/event.py

commit 5b0da8932c318813138c113d2bb20498145dbd42
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2014-05-29 18:17:16 +0100

    utils: avoid printing traceback on ExpansionError during parsing
    
    If an ExpansionError occurs during better_exec() we should just raise it
    instead of printing the traceback, so that recipe errors (such as broken
    URLs in SRC_URI) are more easily comprehensible.
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	0	lib/bb/utils.py

commit bfd13dfbc4c9f1dd8315002271791b1d9e274989
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2014-05-29 18:17:15 +0100

    fetch2: improve handling of two classes of URL parameter mistakes
    
    Handle the following situations in a URL (e.g. in SRC_URI):
    
    * Trailing semicolon in a URL - this is now ignored.
    * Parameter specified with no value (no equals sign). This still
      produces an error, but at least it is MalformedUrl with a proper
      message rather than "ValueError: need more than 1 value to unpack".
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

10	4	lib/bb/fetch2/__init__.py

commit 42182e3971c2ab17a17754e651e8943b0177410e
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2014-05-30 10:19:20 +0100

    Revert "toaster: toaster oe-selftest support"
    
    This reverts commit bb5b1d6b139b886e54bfdc0c17f2b556db6a7fde.
    
    Applied to incorrect repo.

0	411	meta/lib/oeqa/selftest/toaster.py

commit 0e7b594ccbceb3149f38776cea204807031ef69f
Author: Volker Vogelhuber <v.vogelhuber@digitalendoscopy.de>
Date:   2014-05-26 09:22:03 +0200

    fetch2/hg: Fix missing proto param for hg checkout with user and pw
    
    A fix for the former patch when checking out a repository with
    username and password using HG
    
    Signed-off-by: Volker Vogelhuber <v.vogelhuber@digitalendoscopy.de>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/fetch2/hg.py

commit 5569b3dca61e6d962494ca65c7aad09b2eb2ae63
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2014-05-23 16:22:17 +0100

    bitbake-layers: show-cross-depends: add support for RRECOMMENDS
    
    RRECOMMENDS must be satisfied at build time, and these could cross layer
    boundaries, so report these if they exist.
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

20	0	bin/bitbake-layers

commit b94318174fe7f92b9a20eabb0bc4055066cb3d51
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2014-05-23 16:22:16 +0100

    bitbake-layers: show-cross-depends: ignore self-satisfied RDEPENDS
    
    Overlayed recipes caused this to show false positives because the
    overlaying version appeared to be satisfying the overlayed version's
    RDEPENDS; but you'd never be building both at the same time.
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	0	bin/bitbake-layers

commit d16948bb88fcf44d861985838030be7c08697963
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2014-05-23 16:22:15 +0100

    bitbake-layers: show-cross-depends: ignore global inherits
    
    It's not particularly useful to show globally inherited classes here
    since they do not normally represent a dependency.
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

5	0	bin/bitbake-layers

commit 0e9062e65acbb05c1d9b3a9145eb866c3d562309
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2014-05-23 16:22:14 +0100

    bitbake-layers: show-cross-depends: add option to ignore a layer
    
    By default, show-cross-depends shows dependencies on OE-Core (i.e.
    "meta") which is not particularly useful. Add an option to allow you to
    hide those. For example, to hide all dependencies on OE-Core:
    
      bitbake-layers show-cross-depends -i meta
    
    Multiple layers can be specified by using commas as separators (no
    spaces).
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

24	20	bin/bitbake-layers

commit af3ce0fc0280e6642fa35de400f75fdbabf329b1
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2014-05-21 15:29:40 +0100

    data_smart: Fix an unusual variable reference bug
    
    If you try:
    
    Y = ""
    Y_remove = "X"
    
    in OE-Core, bitbake will crash with a KeyError during expansion. The reason
    is that no expansion of the empty value is attempted but removal from is it
    and hence no varparse data is present for it in the expand_cache.
    
    If the value is empty, there is nothing to remove so the best fix is simply
    not to check for None but check it has any value.
    
    Also add a test for this error so it doesn't get reintroduced.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/data_smart.py
5	0	lib/bb/tests/data.py

commit a68a6dc50c11cc59e7c873414e3e22ac2644dea7
Author: David Reyna <david.reyna@windriver.com>
Date:   2014-05-21 15:15:09 +0100

    toaster: reduce redundant foreign key lookups
    
    Replace redundant foreign key lookups with "with" to improve all
    recipes page load time. Do depends pre-lookup in the view class,
    and use python itertation instead of filter() all to achieve x16
    processing speedup.
    
    [YOCTO #6137]
    
    Signed-off-by: David Reyna <David.Reyna@windriver.com>
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>
    
    Conflicts:
            bitbake/lib/toaster/toastergui/views.py
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

14	6	lib/toaster/toastergui/templates/recipes.html
15	0	lib/toaster/toastergui/views.py

commit 64618f7489eb9eb13a97d03cd2d353384f5faa70
Author: Farrell Wymore <farrell.wymore@windriver.com>
Date:   2014-05-21 15:15:08 +0100

    toaster: sort columns properly after edit columns
    
    If a sorted column is made invisible through the edit columns function,
    resort the table the its default order.
    
    [YOCTO 5919]
    
    Signed-off-by: Farrell Wymore <farrell.wymore@windriver.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

159	13	lib/toaster/toastergui/templates/basetable_top.html
45	1	lib/toaster/toastergui/views.py

commit bb5b1d6b139b886e54bfdc0c17f2b556db6a7fde
Author: Ionut Chisanovici <ionutx.chisanovici@intel.com>
Date:   2014-05-21 15:15:07 +0100

    toaster: toaster oe-selftest support
    
    This patch adds toaster tests using the oe-selftest infrastructure.
    You need to have builds done - the tests will verify data integrity
    after the toaster collection phase.
    
    Once you have your toaster builds done, to run the automated backend
    tests via oe-selftest do the followings:
    
    1. Update builddir/conf/bblayers.conf to contain the meta-selftest
    layer
    2. From the builddir run:
    
    'oe-selftest toaster'
    
    or if you just want to run a single test:
    
    'oe-selftest toaster.Toaster_DB_Tests.testname'
    
    This first part adds the meta/lib/oeqa toaster file.
    
    Signed-off-by: Ionut Chisanovici <ionutx.chisanovici@intel.com>
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

411	0	meta/lib/oeqa/selftest/toaster.py

commit ef2bf63e56b87e19d1a9059dd2d81a9a1a537254
Author: Chris Morgan <chmorgan@gmail.com>
Date:   2014-05-18 14:24:12 -0400

    fetch2/gitsm: Documentation improvements for gitsm:// fetcher
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

13	3	doc/bitbake-user-manual/bitbake-user-manual-fetching.xml
10	0	lib/bb/fetch2/gitsm.py

commit d150226d11d5f041f78c8c3ce4abc5465dbc81d8
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2014-05-11 15:25:44 +0100

    fetch2/perforce: Ensure command has a default
    
    Ensure there is default command available if FETCHCMD_p4 isn't set.
    
    Also clean up the getVar references whilst here.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

4	4	lib/bb/fetch2/perforce.py

commit 633a56987df639295fe9128418da5634050063e5
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2014-05-11 13:05:40 +0100

    parse: Improve file inheritance logging
    
    The file inheritance logging has been here since the dawn of time. It
    duplicates output many times over and logs to debug level 2. When running
    with the debug option, its understandable the user may want to see the
    paths of files included in the build.
    
    These changes remove pointless/duplicate output and print the
    include paths clearly at debug level one in a form which
    users should be able to more easily parse.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

0	1	lib/bb/parse/__init__.py
1	7	lib/bb/parse/parse_py/BBHandler.py

commit 20a3c93d8572969e76563f29bff89400b93ffae7
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2014-05-11 13:06:14 +0100

    knotty: Fix output printed to the user at debug log levels
    
    If a user runs with the -v or -D options, its understandable they'd
    expect to see log output from the workers yet right now a bug in the
    log handling does not show this.
    
    Fix the conditional to ensure such log output is shown on the terminal
    when it has been requested. Ideally this data should always flow to
    the logfiles but that is for another patch.
    
    This also fixes the code to do what was always intended in the comments,
    i.e. if the user specifies -D or -v, output is shown from the tasks,
    otherwise notes are suppressed.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/ui/knotty.py

commit 5824bf9c6feea05567d155911f4ab2e371911d34
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2014-05-09 13:31:25 +0100

    parse/ast: Show append logging at lower log level
    
    It was reported that bitbake -D made no mention of which append files it
    was using. bitbake -DD does but it makes sense to increase the log level
    of this piece of debug information.
    
    [YOCTO #6262]
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/parse/ast.py

commit 9a328262e047562a6edf7b2ec7b8a1949e287cbe
Author: Volker Vogelhuber <v.vogelhuber@digitalendoscopy.de>
Date:   2014-05-09 10:10:13 +0200

    fix cloning of mercurial repository with username and password specified in url
    
    Signed-off-by: Volker Vogelhuber <v.vogelhuber@digitalendoscopy.de>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

4	1	lib/bb/fetch2/hg.py

commit aaefbc0b4e7484d6f4854ce49602821a6e4adc4b
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2014-04-28 22:11:03 +0800

    toaster: modify SQL data type constraints
    
    This patch modifies the data type constraints for the SQL
    fields.
    
    The original constraints have been based on guess worked, and
    they weren't strictly enforced for sqlite. On MySQL, the
    constraints are strictly enforced, and need to match the real
    data that we have.
    
    After measuring data on sample builds, the new constraints
    have been validated to work with MySQL, and this patch updates
    the database schema with the new field types / constraints.
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>

225	0	lib/toaster/orm/migrations/0008_auto__chg_field_variablehistory_operation__chg_field_recipe_descriptio.py
4	4	lib/toaster/orm/models.py

commit 29afc29154b948d270ce52978a1eed4cd8887f92
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2014-04-28 21:10:16 +0800

    toaster: fix migration code for MySQL
    
    This is a patch that fixes the 0004, 0005 migrations of the toaster
    model to get them to properly work with MySQL.
    
    These migrations had a conflict around Build.timespent field.
    The sqlite3 constraits were not enough to detect the conflict, and
    the migrations worked as expected.
    
    MySQL objected to adding the field twice, so I did regenerate
    the migrations with the correct model listing. The net effect
    is the same, so the migrations work the same, but now we
    can use these two migration on the MySQL and other more advanced
    SQL engines.
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>

1	0	lib/toaster/orm/migrations/0004_auto__add_field_package_installed_name.py
18	38	lib/toaster/orm/migrations/0005_auto__add_target_image_file__add_target_file__add_field_variablehistor.py

commit 436865ac8520c1d75401dde7df373dba9a386c9d
Author: Dave Lerner <dave.lerner@windriver.com>
Date:   2014-04-11 17:19:28 -0500

    toaster: fix span2 headings for packages
    
    [YOCTO 6147]
    
    Fix bug in views.py that put 'span2' class id in a 'clclass' key
    instead of the 'dclass' key.  This fix exposed another problem in
    target.html and the target view function that used 'package_size'
    instead of 'size' as the 'clclass' which is inconsistent with the
    model field name, causing table data columns to be shown when
    the header is hidden.
    
    Signed-off-by: Dave Lerner <dave.lerner@windriver.com>

1	1	lib/toaster/toastergui/templates/target.html
6	3	lib/toaster/toastergui/views.py

commit 72adcadb931519f803dad7488544767241561fb7
Author: Belen Barros Pena <belen.barros.pena@intel.com>
Date:   2014-04-01 23:11:30 +0100

    toaster: Make sure layer branch only shows when not empty
    
    In the recipe details and package details pages, the layer branch
    definition list elements should only show when the branch field in
    the database is populated. If the branch field is empty, we don't
    show them.
    
    The patch also removes all unnecessary data-toggle and
    data-original-title attributes.
    
    [YP #6152]
    
    Signed-off-by: Belen Barros Pena <belen.barros.pena@intel.com>

2	2	lib/toaster/toastergui/templates/dirinfo.html
2	2	lib/toaster/toastergui/templates/package_built_dependencies.html
2	2	lib/toaster/toastergui/templates/package_built_detail.html
11	10	lib/toaster/toastergui/templates/package_detail_base.html
2	2	lib/toaster/toastergui/templates/package_included_tabs.html
12	10	lib/toaster/toastergui/templates/recipe.html
2	2	lib/toaster/toastergui/templates/target.html
1	1	lib/toaster/toastergui/templates/task.html
1	1	lib/toaster/toastergui/templates/tasks.html

commit eee0abe70e4d85a0753f0b122518d7a9f06181bc
Author: David Reyna <David.Reyna@windriver.com>
Date:   2014-04-10 21:43:11 -0700

    toaster: sort outcome and sstate columns by string value
    
    Sort the 'outcome' and 'sstate_result' columns by their
    description string values and not their numerical values.
    
    [YOCTO #5921]
    
    Signed-off-by: David Reyna <David.Reyna@windriver.com>

12	0	lib/toaster/orm/models.py
8	1	lib/toaster/toastergui/views.py

commit 42b7be1a6c5ff559f4a213eed04b370ca955460d
Author: Nick Lewis <nick.lewis@usa.g4s.com>
Date:   2014-05-07 14:02:25 +0100

    Fix refetch of local files when they are read only
    
    Signed-off-by: Nick Lewis <nick.lewis@usa.g4s.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	2	lib/bb/fetch2/__init__.py

commit 13beb6c9f92c0b3d56fc9aa06eb2259fb8390949
Author: Andreas Bofjall <andreas@gazonk.org>
Date:   2014-05-07 06:29:24 +0200

    setup.py: fix documentation build
    
    setup.py currently aborts when building the documentation:
    
    > ./setup.py build
    [..]
    error: [Errno 2] No such file or directory:
    '/home/jab/src/x/bitbake/doc/manual'
    
    because the doc/manual directory has been renamed to
    doc/bitbake-user-manual since commit 452a62a ("doc: Rename user-manual
    -> bitbake-user-manual") and its Makefile has been removed as of commit
    d419907 ("user-manual: Import YP Docs templates for usermanual
    improvements").
    
    Update setup.py to reflect the new name and usage.
    
    Signed-off-by: Andreas Bofjall <andreas@gazonk.org>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

5	5	setup.py

commit d1c712fd3a59fa804e6fd451612c30487671f3a2
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2014-05-07 10:20:17 +0100

    data_smart: Ensure all possible overrides are cached including those with '_' in the name
    
    Unfortunately we've been neglecting to pay the correct tributes to the
    cookie monster and hence the datastore is malfunctioning.
    
    Currently tributes are only paid on the last part of a variable after
    the last "_" character. We need to split by *all* "_" characters since
    an override may contain the character.
    
    This fixes the code so the correct number of tributes are made. Paradoxically
    parsing appears to be faster after this change.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

6	1	lib/bb/data_smart.py

commit 4eb2dc8048e2722d64d589f453df1ce6262c71b8
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2014-05-03 11:18:41 +0100

    prserv/db: Avoid fsync() calls
    
    If the power were to fail, it doesn't matter to us much if the data
    makes it to disk or not, we'd have other problems. However an fsync()
    call on a multi build autobuilder is painful so lets avoid them.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	0	lib/prserv/db.py

commit ec28256ac2a30f047585e8f61200d764bc295ded
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2014-05-03 11:18:33 +0100

    persist_data: Avoid fsync() calls
    
    If the power were to fail, it doesn't matter to us much if the data
    makes it to disk or not, we'd have other problems. However an fsync()
    call on a multi build autobuilder is painful so lets avoid them.
    
    This is particularly true in this case if a timeout causes a reconnect
    during a build.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	1	lib/bb/persist_data.py

commit cf763cddc3faa2361b4c4dbd08419e4ebabf208f
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2014-05-03 11:15:37 +0100

    codeparser: Fix to better catch all getVar references
    
    Currently if you do localdata.getVar, the code parser simply ignores
    the references. Change the code to use endswith() to catch more of the
    references. These names are probably unique enough to get away with this.
    
    Bump the cache version to ensure things get updated.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	3	lib/bb/codeparser.py

commit c40a4100ddb841d231360344616e59ab98e61fb5
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2014-05-01 22:47:42 +0100

    bitbake: Bump version to 1.23.1
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	bin/bitbake
1	1	lib/bb/__init__.py

commit d1e3345d715e488ec3f5515fb0e1fb39366346bc
Author: Otavio Salvador <otavio@ossystems.com.br>
Date:   2014-04-25 18:21:24 -0300

    bb.utils, bb.codeparser: Add bb.utils.contains_any
    
    This includes contains_any in the special handling code for sstate. It
    does not take into account the equivalence of the values. In current
    code, considering 'bb.utils.contains_any("A", "foo bar", ...)':
    
    A = "foo"
    A = "bar"
    A = "foo bar"
    
    All those will get different signatures.
    
    Signed-off-by: Otavio Salvador <otavio@ossystems.com.br>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/codeparser.py
13	0	lib/bb/utils.py

commit 97537e4786a1e3a329249497498b59b8f5174fc3
Author: Christopher Larson <kergoth@gmail.com>
Date:   2014-04-28 08:27:34 -0700

    codeparser: don't interact with the cache for subshells
    
    Doing so was causing leakage between the execs of the main value and that of
    the subshell value, and was causing the cached subshell value to be used for
    the overall variable. At the least this could cause execs contamination
    between two variables that while differing, run the same subshell. Beyond
    that, it's possible we could have been using an incomplete cached value of
    a subshell for that of the main value.
    
    Before this, bb_codeparser.dat would change between parses with differing
    bbfile parse order. After, it does not change.
    
    The codeparser cache version is bumped, to ensure we don't use potentially
    incorrect cached values from previous runs.
    
    This should hopefully resolve the difficult-to-reproduce issues we've seen at
    Mentor Graphics where bitbake emits a script to run a task and misses
    dependent functions, resulting in 'command not found' failures. This issue has
    also been mentioned on the oe devel list, where someone hit a case where
    oe_runmake was missing from a do_install task (IIRC). Adding debug information
    showed that bitbake's information about the variable dependencies for this
    task is inaccurate in the failure cases.
    
    Signed-off-by: Christopher Larson <kergoth@gmail.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

12	9	lib/bb/codeparser.py

commit 9ee19a3ca2f8e11a91f0289ea3486310c61d40f2
Author: Jacob Kroon <jacob.kroon@mikrodidakt.se>
Date:   2014-04-28 19:14:56 +0200

    fetch2: Cleanup file checksum generation, v2
    
    The initial version of this patch was reverted in
    
    0a94e568152de550dedc8135a766beb18bf064ab
    
    However, it was later agreed upon that it was reverted due to
    a misunderstanding during code review; the patch is ok.
    
    This version of the patch also removes an unneeded initialization of
    the 'checksum' variable outside the scopes it is being used in.
    
    Signed-off-by: Jacob Kroon <jacob.kroon@mikrodidakt.se>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	6	lib/bb/fetch2/__init__.py

commit dfa041c940caad12da50126a559afc8de089eeda
Author: Volker Vogelhuber <v.vogelhuber@digitalendoscopy.de>
Date:   2014-04-29 17:34:03 +0200

    HG Fetch with username and password in url
    
    Following up a previous patch for mercurial fetcher, I just fixed a
    problem when calling update on a repository with subrepositories enabled.
    
    Attached a patch that fixes this problem
    
    >From caae519a2bd64bf7c729bb26aff344827def47fb Mon Sep 17 00:00:00 2001
    From: Volker Vogelhuber <v.vogelhuber@digitalendoscopy.de>
    Date: Tue, 29 Apr 2014 15:29:47 +0200
    Subject: [PATCH] - fixed authentication issues in case of using sub
     repositories
    
    Signed-off-by: Volker Vogelhuber <v.vogelhuber@digitalendoscopy.de>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/fetch2/hg.py

commit 0a94e568152de550dedc8135a766beb18bf064ab
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2014-04-28 12:53:31 +0100

    Revert "fetch2: Cleanup file checksum generation"
    
    This reverts commit 6dfb33fd7204e09815bde7ba5bf21941a73fe965.
    
    It causes an unindeded change in behaviour.

5	2	lib/bb/fetch2/__init__.py

commit 7d3545a66863ad7183a7650b2af57eee091c45ae
Author: Jacob Kroon <jacob.kroon@mikrodidakt.se>
Date:   2014-04-26 17:05:30 +0200

    bitbake-diffsigs: Fix runtime error when no arguments are given
    
    If bitbake-diffsigs is run without arguments it will error:
    
        Traceback (most recent call last):
          File "./bin/bitbake-diffsigs", line 121, in <module>
            if output:
        NameError: name 'output' is not defined
    
    Fix this by moving the check for output into the inner else-clause.
    
    Signed-off-by: Jacob Kroon <jacob.kroon@mikrodidakt.se>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	2	bin/bitbake-diffsigs

commit 6dfb33fd7204e09815bde7ba5bf21941a73fe965
Author: Jacob Kroon <jacob.kroon@mikrodidakt.se>
Date:   2014-04-26 16:32:18 +0200

    fetch2: Cleanup file checksum generation
    
    Cleanup the fix done in f9416e76e272ba3249abff099f6f3a47fe82e03e.
    
    Instead of adding continue statements we can just move the last
    statements into the final else-clause.
    
    Signed-off-by: Jacob Kroon <jacob.kroon@mikrodidakt.se>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	5	lib/bb/fetch2/__init__.py

commit 0a26abaf3a1e34d556c9375068dd17c879568d0f
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2014-04-26 11:20:04 +0100

    fetch2/git: Stop git from triggering fsync() calls
    
    We only ever clone other repositories, if there were a problem such as power
    failure, we'd blow away data and rebuild. As such we don't need fsync(). With
    filesystems like ext*, the fsync pushes nearly all the data out to disk
    which impacts all running processes.
    
    We therefore set a configuration parameter to disable the fsync() calls.
    
    Also fixup a case where basecmd wasn't being used for no good reason.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	2	lib/bb/fetch2/git.py

commit 92526eadd09d19938762290e0492076174367583
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2014-04-13 11:49:45 +0100

    bitbake-worker: Drop BBHASH variables
    
    Iterating through and calling setVar on this number of variables has significant
    overhead in the profiling data. By not setting this, we save 3,000 calls
    to setVar which gives a noticeable improvement to the speed of task execution.
    
    The BBHASH variables have since been replaced by accessing that data through
    the siggen code and going forward, that is the preferred way work with it.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

0	4	bin/bitbake-worker

commit b56918c7ef7913e84356c69ee9b269844a446728
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2014-04-13 11:48:53 +0100

    parse/ast: Optimise data finalisation
    
    The optimisation where only the data we're interested in was finalised
    was good but it turns out we can do better. In the case where a
    class-extension is to be targeted, we can skip the other targets.
    
    This change does that and speeds up parsing at the bitbake-worker
    execution time. Specifically, you can see an improvement in the speed
    of bitbake X -n.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

5	3	lib/bb/parse/ast.py

commit aa6448a0552ba2947ac262b8b5314a593d1058d3
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2014-04-13 11:45:58 +0100

    runqueue: Do not write out stamp files in dry_run mode
    
    In dry run mode, stamps for noexec tasks are being written out which
    is incorrect. Avoid this.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	1	lib/bb/runqueue.py

commit 12dc1d17fac3e8ec420fcafb06186d32fd847d89
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2014-04-13 11:45:03 +0100

    runqueue: Fix task weighting algorithm
    
    When looking at a list of tasks, do_patch and do_unpack were being
    given equal priority when one clearly depends on another. The
    reason for this was the default task weights of 0 being to tasks.
    This is therefore changed to 1 to allow correct weighting of dependencies
    which means the scheduler has better information available to it about
    tasks.
    
    Weight endpoints differently (10) for clearer debugging of priorities.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	2	lib/bb/runqueue.py

commit 49c9d8c9400f74c804c2f36462639236e0841ff0
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2014-04-13 11:44:25 +0100

    runqueue: Fix handling of zero priority task
    
    The zero priority task should be run first but was being confused with
    the None value the priority field defaulted to. Check for None
    explicitly to avoid this error.
    
    In the real world this doesn't change much but it confused the debug
    output from the schedulers.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/runqueue.py

commit 1cc2a299c842185ba14074817d5cd2925275610b
Author: Belen Barros Pena <belen.barros.pena@intel.com>
Date:   2014-04-11 17:32:31 +0100

    bitbake: toaster: Fix Empty tasks filter
    
    Somehow the counter was set to count tasks with outcome
    'not available', instead of outcome 'empty'. This patch
    fixes the problem.
    
    [YOCTO #6146]
    
    Signed-off-by: Belen Barros Pena <belen.barros.pena@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/toaster/toastergui/views.py

commit f8817c060042147a173d3451121304b25ffc4b6c
Author: Belen Barros Pena <belen.barros.pena@intel.com>
Date:   2014-04-11 17:32:30 +0100

    bitbake: toaster: Fix total number of tasks in build dashboard
    
    The total number of tasks in the build dashboard was counting
    _setscene tasks, which are not exposed by Toaster as separate
    tasks. This patch makes sure that _setscene tasks are not
    counted when calculating that number.
    
    [YOCTO #6145]
    
    Signed-off-by: Belen Barros Pena <belen.barros.pena@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/toaster/toastergui/templates/builddashboard.html

commit 431181705f1bc3fc51439faa04a193debc1d03fd
Author: Scott Rifenbark <scott.m.rifenbark@intel.com>
Date:   2014-04-17 11:57:51 -0700

    bitbake-user-manual-hello.xml: Edits to the "Hello World" Appendix.
    
    Fixes [YOCTO #1973]
    
    These are review changes applied from Paul Eggleton.
    
    Signed-off-by: Scott Rifenbark <scott.m.rifenbark@intel.com>

17	29	doc/bitbake-user-manual/bitbake-user-manual-hello.xml

commit 176baaf3d0f033091f5ab9d9cfb2cec3d25a5442
Author: Scott Rifenbark <scott.m.rifenbark@intel.com>
Date:   2014-04-15 14:06:21 -0700

    bitbake-user-manual-hello.xml: First draft of "Hello World" appendix
    
    Fixes [YOCTO #1973]
    
    Added the complete "Hello World" appendix first draft beyond
    what Bill Traynor had supplied.
    
    Signed-off-by: Scott Rifenbark <scott.m.rifenbark@intel.com>

328	321	doc/bitbake-user-manual/bitbake-user-manual-hello.xml

commit 43286d31c22e6e2fa96ba1b82445e85db0a0f18c
Author: Scott Rifenbark <scott.m.rifenbark@intel.com>
Date:   2014-04-15 06:53:29 -0700

    bitbake-user-manual-hello.xml: Edits to environment for hello world.
    
    Some general edits to the sections that get you set up to run
    the "Hello World" example.
    
    Signed-off-by: Scott Rifenbark <scott.m.rifenbark@intel.com>

203	24	doc/bitbake-user-manual/bitbake-user-manual-hello.xml

commit 8e4c5cee932c3f38d4147c59612d76ca0b002727
Author: Scott Rifenbark <scott.m.rifenbark@intel.com>
Date:   2014-04-14 17:56:23 -0700

    bitbake-user-manual-metadata.xml: Added section on pathname syntax
    
    Added a brief subsection to the "Basic Syntax" section that
    describes the issue using the tilde character (~) when providing
    a pathname as part of a statement.  BitBake does not expand
    this character like the shell does.  We recommend to not use
    it in pathnames.
    
    Signed-off-by: Scott Rifenbark <scott.m.rifenbark@intel.com>

23	0	doc/bitbake-user-manual/bitbake-user-manual-metadata.xml

commit 783f29a593ce16a37b275b02f71b3ec918ef8c91
Author: Scott Rifenbark <scott.m.rifenbark@intel.com>
Date:   2014-04-14 17:10:03 -0700

    bitbake-user-manual-ref-variables.xml: Edits to the BBPATH variable.
    
    I took the stuff about running bitbake outside the build
    directory and removed the note syntax.
    
    Signed-off-by: Scott Rifenbark <scott.m.rifenbark@intel.com>

12	11	doc/bitbake-user-manual/bitbake-user-manual-ref-variables.xml

commit 896a1c102a4afda0e5d07d009bd7918044f88269
Author: Scott Rifenbark <scott.m.rifenbark@intel.com>
Date:   2014-04-14 15:31:14 -0700

    bitbake-user-manual-ref-variables.xml: Fixed BBPATH example
    
    The example used in the note in the BBPATH variable description
    had incorrect syntax.  Spaces existed in the BBPATH = statement.
    I have removed them.
    
    Signed-off-by: Scott Rifenbark <scott.m.rifenbark@intel.com>

1	1	doc/bitbake-user-manual/bitbake-user-manual-ref-variables.xml

commit 13bf6cf71ff49572c3413435a33d87e5b6a8df0d
Author: Scott Rifenbark <scott.m.rifenbark@intel.com>
Date:   2014-04-14 13:05:48 -0700

    user-manual-hello.xml: General edits
    
    I worked through the chapter and made some minor edits based
    on my user experience.  Part of what I did was to update
    the console output for the examples.
    
    Signed-off-by: Scott Rifenbark <scott.m.rifenbark@intel.com>

39	41	doc/bitbake-user-manual/bitbake-user-manual-hello.xml

commit 7a0948beba2c882de31ec9b98c7740bba230aed9
Author: Scott Rifenbark <scott.m.rifenbark@intel.com>
Date:   2014-04-14 11:00:42 -0700

    bitbake-user-manual-hello.xml: Fixed two broken links.
    
    Signed-off-by: Scott Rifenbark <scott.m.rifenbark@intel.com>

2	2	doc/bitbake-user-manual/bitbake-user-manual-hello.xml

commit 983d03c1a082e2b83187f0788e61a7941670b242
Author: Scott Rifenbark <scott.m.rifenbark@intel.com>
Date:   2014-04-14 09:34:39 -0700

    bitbake-user-manual-metadata.xml: New section on anonymous Python functions
    
    Per Paul Eggleton's suggestion, I added a new section on
    anonymous Python functions into the "Functions" section.
    I also updated the intro text to account for the added
    type of functions.
    
    Signed-off-by: Scott Rifenbark <scott.m.rifenbark@intel.com>

41	1	doc/bitbake-user-manual/bitbake-user-manual-metadata.xml

commit 7259d9d40aad8254751f7674653cd362a9023054
Author: Scott Rifenbark <scott.m.rifenbark@intel.com>
Date:   2014-04-11 11:47:57 -0700

    bitbake-user-manual-metadata.xml: Edits to flexible inheritance section.
    
    Fixes [YOCTO #5472]
    
    Applied review edits from Paul Eggleton to this section.
    Minor edits and some re-writing.
    
    Signed-off-by: Scott Rifenbark <scott.m.rifenbark@intel.com>

37	26	doc/bitbake-user-manual/bitbake-user-manual-metadata.xml

commit 452a62ae0c2793e281d6769fd3e45500a74898d6
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2014-04-11 17:38:18 +0100

    doc: Rename user-manual -> bitbake-user-manual
    
    This manual gets combined with other manuals and in that context, it helps
    a lot if its seen as the Bitbake User Manual. Renames are a pain but
    this is worthwhile so that other docs can correctly be combined with this
    one. This also clarifies things like google search results which is helpful.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	3	.gitignore
7	7	doc/Makefile
2	2	doc/README
0	0	doc/{user-manual/user-manual-customization.xsl => bitbake-user-manual/bitbake-user-manual-customization.xsl}
2	2	doc/{user-manual/user-manual-execution.xml => bitbake-user-manual/bitbake-user-manual-execution.xml}
0	0	doc/{user-manual/user-manual-fetching.xml => bitbake-user-manual/bitbake-user-manual-fetching.xml}
1	1	doc/{user-manual/user-manual-hello.xml => bitbake-user-manual/bitbake-user-manual-hello.xml}
2	2	doc/{user-manual/user-manual-intro.xml => bitbake-user-manual/bitbake-user-manual-intro.xml}
1	1	doc/{user-manual/user-manual-metadata.xml => bitbake-user-manual/bitbake-user-manual-metadata.xml}
0	0	doc/{user-manual/user-manual-ref-variables.xml => bitbake-user-manual/bitbake-user-manual-ref-variables.xml}
0	0	doc/{user-manual/user-manual-style.css => bitbake-user-manual/bitbake-user-manual-style.css}
6	6	doc/{user-manual/user-manual.xml => bitbake-user-manual/bitbake-user-manual.xml}
-	-	doc/{user-manual => bitbake-user-manual}/figures/bitbake-title.png
0	0	doc/{user-manual => bitbake-user-manual}/html.css
2	2	doc/template/titlepage.templates.xml

commit bb4980c63db386ce7d30d9a6b86e9f3861b3bc3a
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2014-04-10 17:47:51 +0100

    bitbake: Update to version 1.23.0 for master
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	bin/bitbake
1	1	lib/bb/__init__.py

commit a8a32de0fb74ff63e5490e3b5e4419146a8f7367
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2014-04-10 17:47:22 +0100

    bitbake: Update to version 1.22.0
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	bin/bitbake
1	1	lib/bb/__init__.py

commit 340c250fc664414ab2715a454bedbd19e8efe103
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2014-04-10 17:35:40 +0100

    cache: don't trigger reparse on recipes with wildcards in SRC_URI
    
    Since we now get wildcards in the file checksum list in the cache, we
    need to ignore them when checking to see if they still exist. This
    fixes connman-gnome reparsing on every bitbake execution in OE-Core.
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/cache.py

commit 40027a6e093c3b7480bfaccbd57e0e613d9a7b71
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2014-04-09 17:00:53 +0000

    toaster: Allow toaster to start without pytz
    
    This patch allows toaster to start without pytz.
    
    Django can work with or without pytz, but in the
    time zone fix I mistakenly added a hard dependency
    on this module.
    
    This patch eliminates the hard dependency.
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

9	5	lib/toaster/toastermain/settings.py

commit 6d07b531736c2b304da2dfe661239fd3612b0541
Author: David Reyna <David.Reyna@windriver.com>
Date:   2014-04-08 03:26:12 +0000

    toaster: add URI search path list
    
    Display the URI paths from SSTATE_DIR and SSTATE_MIRRORS
    in the Task page.
    
    [YOCTO #5996]
    
    Signed-off-by: David Reyna <David.Reyna@windriver.com>
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/toaster/toastergui/templates/task.html
12	0	lib/toaster/toastergui/views.py

commit d16126e9abfffde66ab70865a81997322847d44e
Author: Dave Lerner <dave.lerner@windriver.com>
Date:   2014-04-08 16:32:21 +0000

    toaster: sort on size in detail pages
    
    [YOCTO 5778]
    
    Implements the features described in the attachment to bugzilla 5778
       - new global changes to the format of size data, and
       - adding sorts by selected columns to specific detail pages.
    
    Although new pagination and row search capabilities are shown on the
    screen shots for the 5778 attachment, those features are specified in
    a different bugzilla entry 5777 and are not implemented in this commit.
    
    Also, the 5778 spec includes table sorting for the recipe package
    detail page, but sorting for that page was not implemented in this
    commit due to complications with sorting then returning to a page that
    is only one URL fragment in a template.
    
    The scope of file changes are described below.
    Changes to support new 'size' field column formats...
        default.css - added sizecol class style (right justified)
        projecttags.py - changed filtered_filesizeformat to allow
            ".0" suffixes
    
    Changes that add class 'sizecol, span2(as spec'd) ' to <th> and/or
    <td> size columns were made to...
        dirinfo.py,
        package_built_dependencies.html,
        package_included_dependencies.html,
        recipe.html,
        bpackage.html, and
        target.html
    
    More significant changes to support detail page table sorting
    are:
        - tablesort.html: New created to implement the sort icons,
            directions, and table headings, and
            suppress sort handling if 'disable_sort' in context,
            without search or pagination elements ingrained
            in basetable_top. Confining the changes to this small file
            reduces the impact (testing and risk) on the larger set of
            files that arleady include basetable_top/bottom files.
        - view.py: Modified the following view functions with
            - trivial changes for size formatting to the views: target,
            - changes to package_built_detail, package_included_detail,
                package_included_reverse_dependencies to handle the sorting
                implementation as well as moving headings and size
                formatting for size columns from templates to the views.
        - Implementation of the detail sorting using above in:
                package_built_detail.html,
                package_included_detail.html, and
                package_included_reverse_dependencies.html
            to include the tablesort heading setup, format the size column,
            and iterate over the new sorted objects, suppressing sorts if
            table row count less than 2.
    
    Signed-off-by: Dave Lerner <dave.lerner@windriver.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	1	lib/toaster/toastergui/static/css/default.css
1	1	lib/toaster/toastergui/templates/bpackage.html
1	1	lib/toaster/toastergui/templates/dirinfo.html
4	4	lib/toaster/toastergui/templates/package_built_dependencies.html
4	10	lib/toaster/toastergui/templates/package_built_detail.html
4	4	lib/toaster/toastergui/templates/package_included_dependencies.html
4	10	lib/toaster/toastergui/templates/package_included_detail.html
6	13	lib/toaster/toastergui/templates/package_included_reverse_dependencies.html
2	2	lib/toaster/toastergui/templates/recipe.html
38	0	lib/toaster/toastergui/templates/tablesort.html
2	2	lib/toaster/toastergui/templates/target.html
1	1	lib/toaster/toastergui/templatetags/projecttags.py
91	24	lib/toaster/toastergui/views.py

commit bdbba81715765681a0404fa82f28e471b241051a
Author: David Reyna <David.Reyna@windriver.com>
Date:   2014-04-08 01:11:42 +0000

    toaster: hide tasks without order or outcome
    
    Hide the incomplete tasks, those without order numbers and/or outcomes.
    
    [YOCTO #6060]
    
    Signed-off-by: David Reyna <David.Reyna@windriver.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

8	5	lib/toaster/toastergui/views.py

commit fd57128dc3a35ca87031f3df1a531a085e89baf0
Author: David Reyna <David.Reyna@windriver.com>
Date:   2014-04-08 16:25:44 +0000

    toaster: regex alternation filter caused django error
    
    The combination of a regex filter specification that uses alternate,
    plus a search string, plus multiple search_allowed_fields, leads to
    a Django fatal error. Replace this regex filter for variables in
    local files with a simpler 'contains' against the project's directory
    plus a '/conf/' string.
    
    Alex rebased this on top of fix for #6048.
    
    [YOCTO #5962]
    
    Signed-off-by: David Reyna <David.Reyna@windriver.com>
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	3	lib/toaster/toastergui/templatetags/projecttags.py
5	5	lib/toaster/toastergui/views.py

commit 845b081fc108c656f04d4a70afa4695defc13c9f
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2014-04-08 16:10:33 +0000

    toaster: fix filtering query for multiple filters
    
    This is a fix for using multiple expressions in filters.
    Three different issues are touched:
    * added an explicit error message for incorrect filter usage
    * changed the value separator to something that will pass
    through from the browser to the actual code
    * changed the "and" operator for combining Q from a dubios
    lambda function to the standard operator.and_
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	3	lib/toaster/toastergui/views.py

commit a84f296591be26972b808e98816e9d92cadf3eb5
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2014-04-07 11:10:54 +0000

    toaster: keep number of rows across searches
    
    This patch will make Toaster remember the selected
    number of rows to be displayed in tables across different
    searches.
    
    The number of rows setting will not be remembered if the
    the user leaves the page and subsequently returns to it.
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	0	lib/toaster/toastergui/templates/basetable_top.html

commit e69a57fc3302ed8fac21631ba95ea66e93b243e5
Author: David Reyna <David.Reyna@windriver.com>
Date:   2014-04-04 21:21:09 +0000

    toaster: show unique set-in files in configvar
    
    When listing the set-in files in the configure varaible table, only show
    each file once in that summary view.
    
    [YOCTO #6048]
    
    Signed-off-by: David Reyna <David.Reyna@windriver.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

8	4	lib/toaster/toastergui/templatetags/projecttags.py

commit ba6937c9bffcf81f71ef6fa9f0d29fbbd6e17b2d
Author: Dave Lerner <dave.lerner@windriver.com>
Date:   2014-03-31 20:44:05 +0000

    toaster: disable 'size over total' sort
    
    [YOCTO 6061]
    
    Disable size-over-total table column sorts in the image installed
    packages view because that field is a computed field and only model
    fields are sortable in the current table toaster implementation.
    
    Signed-off-by: Dave Lerner <dave.lerner@windriver.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

0	2	lib/toaster/toastergui/views.py

commit bfe67472e3ee778b78ef004b2153fa88b3807b92
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2014-04-01 15:28:15 +0000

    toaster: do not load all available timezones
    
    This patch makes sure that we only load pytz-recognized
    timezones. Pytz is used to transform the timezone information
    for the database queries, and needs to be able to deal with
    the TIME_ZONE value that we set up.
    
    [YOCTO #6093]
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

9	1	lib/toaster/toastermain/settings.py

commit ca921c773c52392a5a338b2f493ad38c8132f708
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2014-04-08 16:49:55 +0100

    bitbake-selftest: add tests for local fetching
    
    Add some explicit tests for unpacking local files to the appropriate
    location. Some of these tests are actually testing for broken behaviour;
    these have been called out in the comments, and associated bugs have
    been filed.
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

55	0	lib/bb/tests/fetch.py

commit 3016af554d9cc67aec2429b96d8d085b88315e77
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2014-04-08 16:49:54 +0100

    bitbake-selftest: fix help message to include command line
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	bin/bitbake-selftest

commit 4fafea4fa69542b491e84463f6eae0d5bf645673
Author: Peter Kjellerstedt <peter.kjellerstedt@axis.com>
Date:   2014-04-08 16:09:34 +0200

    bitbake: knotty: Clear footer before outputting to stderr
    
    With the recent change to split the log output to stdout and stderr,
    error messages that appeared while the footer was printed got all
    messed up. This was because the messages to stderr was output _after_
    the footer, then clearFooter() tried to remove the footer but removed
    the error message and parts of the footer.
    
    Signed-off-by: Peter Kjellerstedt <peter.kjellerstedt@axis.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	2	lib/bb/ui/knotty.py

commit ae87b7eb414e3d5eefd2effec7b30c22d2186b02
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2014-04-08 15:03:10 +0100

    fetch2: fix traceback when a wildcard matches a directory
    
    If there is a directory matching a wildcard in SRC_URI when getting file
    checksums, we should recurse into that instead of producing an error.
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

18	10	lib/bb/fetch2/__init__.py

commit 4a90edd62c16cbf41b5b93280e155077564c774a
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2014-04-08 15:03:09 +0100

    fetch2: handle wildcards correctly when recording file checksums
    
    The Local fetcher's localpath is returning the parent directory for a
    wildcard match; we need to handle this and add the wildcard
    specification so that we checksum the correct files.
    
    Fixes [YOCTO #6127].
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	0	lib/bb/fetch2/__init__.py

commit 35c67281775b08925957c32663d587d486944e0e
Author: Irina Patru <irina.patru@intel.com>
Date:   2014-04-08 14:59:30 +0300

    hob: add "recipes/images/" to BBFILES when Hob is launched
    
    The path for "recipes/images/" was not added in BBFILES when Hob had
    to search for an image recipe. Therefore, it could not find it and an
    error occurred.
    This path needs to be added when Hob is launched.
    
    [HOB #6086]
    
    Signed-off-by: Irina Patru <irina.patru@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	0	lib/bb/ui/crumbs/builder.py
0	1	lib/bb/ui/crumbs/hobeventhandler.py

commit 71da822762cb298261cccdfa54b9c0fea02c3c5d
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2014-04-07 15:01:17 +0100

    fetch2: avoid cache ignoring missing files
    
    Previously, if a file listed in SRC_URI was missing at the time of
    parsing, and then was added and bitbake run again, it would not be
    picked up because the recipe was cached without it. If we allow the file
    to be added to the list of files to checksum, then it will be checked
    for and found on the second run.
    
    Fixes [YOCTO #4790].
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

0	1	lib/bb/fetch2/__init__.py

commit f9416e76e272ba3249abff099f6f3a47fe82e03e
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2014-04-06 11:08:22 +0100

    fetch2: Fix bug in file checksum generation
    
    For a while its been puzzling me why connman-gnome rebuilds as often as it
    does. It turns out you can trigger this with a new checkout of the metadata.
    
    The SRC_URI that is causing the problems is:
    
    SRC_URI = "file://images/*"
    
    and rather oddly the results in checksums for a file "." being added to
    the tree, e.g.:
    
    ('.', 'ab48a68186f0e0f277c21ef4cb390b4b')
    
    The problem is that when iterating files lists, the checksum variable can
    become set yet we don't break the out from the for loop, which leads to
    odd (and non-deterministic) entries being added into the file checksum list.
    The exact item added probably depends on the order of items on the disk.
    
    Before this change, bitbake-diffsigs on connman-gnome:do_fetch would report:
    
    This task depends on the checksums of files: [
    ('connman-signal-03.png', 'f6c16aee57b37b73793a2f1dea433ffa'),
    ('connman-signal-02.png', 'ad0cd22710c097d8174121fc1023c3be'),
    ('connman-signal-01.png', '8842bd83d2fa9ba56480df34c727c629'),
    ('null_check_for_ipv4_config.patch', 'a23271e41c9fe81551244d875106af10'),
    ('connman-signal-05.png', '808589e7e8d502b44c7b007e9e68d48c'),
    ('connman-signal-04.png', 'ab48a68186f0e0f277c21ef4cb390b4b'),
    ('null_check_for_ipv4_config.patch', 'a23271e41c9fe81551244d875106af10'),
    ('0001-Removed-icon-from-connman-gnome-about-applet.patch', 'e2d8269357c1e8c84291606da24eea85'),
    ('0001-Removed-icon-from-connman-gnome-about-applet.patch', 'e2d8269357c1e8c84291606da24eea85'),
    ('.', 'ab48a68186f0e0f277c21ef4cb390b4b')]
    
    Afterwards:
    
    This task depends on the checksums of files: [
    ('connman-signal-03.png', 'f6c16aee57b37b73793a2f1dea433ffa'),
    ('connman-signal-02.png', 'ad0cd22710c097d8174121fc1023c3be'),
    ('connman-signal-01.png', '8842bd83d2fa9ba56480df34c727c629'),
    ('null_check_for_ipv4_config.patch', 'a23271e41c9fe81551244d875106af10'),
    ('connman-signal-05.png', '808589e7e8d502b44c7b007e9e68d48c'),
    ('connman-signal-04.png', 'ab48a68186f0e0f277c21ef4cb390b4b'),
    ('null_check_for_ipv4_config.patch', 'a23271e41c9fe81551244d875106af10'),
    ('0001-Removed-icon-from-connman-gnome-about-applet.patch', 'e2d8269357c1e8c84291606da24eea85'),
    ('0001-Removed-icon-from-connman-gnome-about-applet.patch', 'e2d8269357c1e8c84291606da24eea85')]
    
    which is correct and deterministic without the "." entry.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	0	lib/bb/fetch2/__init__.py

commit bb05ee13f53f10988579b6238802327732041d0c
Author: Farrell Wymore <farrell.wymore@windriver.com>
Date:   2014-04-02 12:10:55 -0700

    toaster: added covered task list
    
    if a task has a 'covered' indication, the list of tasks that
    covered the task are computed and displayed. amended to add tooltip.
    
    [YOCTO #5925]
    
    Signed-off-by: Farrell Wymore <farrell.wymore@windriver.com>

10	1	lib/toaster/toastergui/templates/task.html
42	22	lib/toaster/toastergui/views.py

commit 06b190b2c23799bd2c9749be28e11bf5d59ed4fc
Author: Farrell Wymore <farrell.wymore@windriver.com>
Date:   2014-04-02 15:04:08 -0700

    toaster: correct package count
    
    The package count was incorrect because it was counting anonymous
    packages. the full path of the image files was shortened to just
    the filename.
    
    [YOCTO 6087]
    [YOCTO 6091]
    
    Signed-off-by: Farrell Wymore <farrell.wymore@windriver.com>

1	1	lib/toaster/toastergui/templates/builddashboard.html
46	27	lib/toaster/toastergui/views.py

commit 644a38e9a90728af52ebda9846d2037dd6831b41
Author: Belen Barros Pena <belen.barros.pena@intel.com>
Date:   2014-03-31 15:46:53 +0100

    toaster: Fixes to the build dashboard
    
    * Add "on" before the date in the build status
    
    * Get rid of the extra space before the "and" in the
    build status
    
    * Make the errors and warnings links in the build
    status show the message content
    
    * Make sure that the "Images" section in the left navigation
    appears only for successful builds
    
    * Link the number of packages installed to the "Packages
    included" tab in the image information page
    
    * Remove unnecessary inline styles in the dashboard
    template
    
    * Make sure target names in the h1 are listed in
    alphabetical order
    
    Signed-off-by: Belen Barros Pena <belen.barros.pena@intel.com>

1	0	lib/toaster/toastergui/static/css/default.css
1	1	lib/toaster/toastergui/templates/basebuildpage.html
15	15	lib/toaster/toastergui/templates/builddashboard.html

commit a7fee015b1cc34351d5ad8b854fc6bf368416400
Author: Belen Barros Pena <belen.barros.pena@intel.com>
Date:   2014-04-01 01:56:44 +0100

    toaster: Make tables happy in Chrome
    
    There is a known layout issue with Bootstrap tables in
    Chrome. This change applies a css fix for it, and changes
    the span classes in the variables table to improve
    formatting.
    
    Signed-off-by: Belen Barros Pena <belen.barros.pena@intel.com>

3	0	lib/toaster/toastergui/static/css/default.css
1	3	lib/toaster/toastergui/views.py

commit 1ca139ca157d62cee9c48b22063e77614fa34325
Author: Belen Barros Pena <belen.barros.pena@intel.com>
Date:   2014-04-01 00:53:09 +0100

    toaster: Fix the empty packages alert
    
    * Remove a tag in all capitals
    * Remove an unnecessary div
    * Fix a typo
    
    Signed-off-by: Belen Barros Pena <belen.barros.pena@intel.com>

5	7	lib/toaster/toastergui/templates/bpackage.html

commit 94c61d0d9ff24e0c781ea0a8e4bfea4c4ac94d4e
Author: Belen Barros Pena <belen.barros.pena@intel.com>
Date:   2014-04-01 00:39:13 +0100

    toaster: Fix "Recent builds" links
    
    * Link the number of errors to the #errors section in the
    build dashboard
    
    * Link the number of warnigns to the #warnings section in
    the build dashboard
    
    * Link the build time to the build time page
    
    * Move some javascript that applies only to builddashboard.html
    to that template from main.js
    
    Signed-off-by: Belen Barros Pena <belen.barros.pena@intel.com>

3	3	lib/toaster/toastergui/templates/build.html
9	0	lib/toaster/toastergui/templates/builddashboard.html

commit f6fcce974ce3b145bc472cd4e9721d56191828a4
Author: David Reyna <David.Reyna@windriver.com>
Date:   2014-04-02 00:21:02 -0700

    toaster: catch IndexError error in dictionary lookups
    
    In the get_dict_value filter, there is the edge case where halted
    builds can lead to IndexError errors in dictionary lookups, so we
    need to catch those.
    
    [YOCTO #6067]
    
    Signed-off-by: David Reyna <David.Reyna@windriver.com>

1	1	lib/toaster/toastergui/templatetags/projecttags.py

commit ce89530b178be2f3202d45523ef1340e00df05be
Author: Belen Barros Pena <belen.barros.pena@intel.com>
Date:   2014-03-16 13:09:34 +0000

    toaster: Changes to help text
    
    All help text strings have been reviewed by the
    technical writer, and some of them by Paul Eggleton.
    This patch implements their suggested changes.
    
    Signed-off-by: Belen Barros Pena <belen.barros.pena@intel.com>

1	1	lib/toaster/orm/models.py
16	4	lib/toaster/toastergui/templates/builddashboard.html
2	2	lib/toaster/toastergui/templates/package_built_dependencies.html
3	3	lib/toaster/toastergui/templates/package_built_detail.html
2	2	lib/toaster/toastergui/templates/package_detail_base.html
1	1	lib/toaster/toastergui/templates/package_included_dependencies.html
1	1	lib/toaster/toastergui/templates/package_included_tabs.html
8	8	lib/toaster/toastergui/templates/recipe.html
17	17	lib/toaster/toastergui/templates/task.html
26	26	lib/toaster/toastergui/views.py

commit 471234f1ab1dbcd736a892720e99a305363db5ff
Author: Belen Barros Pena <belen.barros.pena@intel.com>
Date:   2014-03-17 04:53:08 +0000

    toaster: Remove html validation errors in tasks.html
    
    Remove the duplicated class attribute and the name
    attribute.
    
    Also, make sure that the row blue highlight works
    without the name attribute when you land on the
    tasks table after clicking the order link in a
    task details page.
    
    The commit also fixes a typo in default.css.
    
    [YOCTO #6033]
    
    Signed-off-by: Belen Barros Pena <belen.barros.pena@intel.com>

1	1	lib/toaster/toastergui/static/css/default.css
1	1	lib/toaster/toastergui/static/js/main.js
14	1	lib/toaster/toastergui/templates/tasks.html

commit fc7a74e7961775b5d7ff25298abed10138d24dc9
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2014-04-02 11:56:52 +0100

    toasterui: save warnings from non-build context
    
    Some warnings and errors may come from a non-build context,
    and they were not saved, even if they were counted for the current
    build.
    
    This patch saves these messages in memory until we have the
    entire build context available.
    
            [YOCTO #5642]
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>

13	5	lib/bb/ui/buildinfohelper.py
2	1	lib/bb/ui/toasterui.py

commit f4e57f794651c4894600445e843ca9d5e104cd84
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2014-04-02 11:11:29 +0100

    toasterui: avoid variable name conflict
    
    We rename a local variable in as to prevent a conflict with
    a similary named function parameter.
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>

8	8	lib/bb/ui/buildinfohelper.py

commit fb3d1d189f010488a8726872b01313857697751b
Author: Belen Barros Pena <belen.barros.pena@intel.com>
Date:   2014-03-28 19:28:45 +0000

    toaster: Update API
    
    Make sure the REST API includes the latest changes
    to the database schema.
    
    Signed-off-by: Belen Barros Pena <belen.barros.pena@intel.com>

2	1	lib/toaster/bldviewer/api.py
2	1	lib/toaster/bldviewer/views.py

commit e5b6681432b627eb73bfa766d3154162206f374e
Author: David Reyna <David.Reyna@windriver.com>
Date:   2014-03-29 07:47:43 -0700

    toaster: link task order to right tasks page
    
    When linking from a task order number to the All Tasks
    page, automatically display the correct page for that link
    anchor.
    
    [YOCTO #5933]
    
    Signed-off-by: David Reyna <David.Reyna@windriver.com>
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>

1	1	lib/toaster/toastergui/templates/task.html
1	0	lib/toaster/toastergui/urls.py
30	6	lib/toaster/toastergui/views.py

commit e42ee93519000f827be49659b6b5fb7717b3d592
Author: Marius Avram <marius.avram@intel.com>
Date:   2014-04-01 13:59:05 +0300

    cooker: Overwrite IMAGE_BASENAME to default in custom image
    
    This solves a problem of custom images which inherit a base
    image with IMAGE_BASENAME overwritten in their recipe by a
    different value than its default one: ${PN}.
    
    The value of IMAGE_BASE causes a crash when hob will try to
    create symbolic links to the resulting images from the deploy
    directory, because it will look for names similar to
    <original_recipe_name>-edited-timestamp-machine.rootfs.*
    which might be different from the actual resulting image.
    
    The solution is to simply overwrite IMAGE_BASENAME in the
    custom recipe to the default value in the case IMAGE_BASENAME
    is found in the base recipe.
    
    Some recipes which were affected by this problem are those
    from meta-fsl-demos (e.g.: fsl-image-test).
    
    [YOCTO #6017]
    
    Signed-off-by: Marius Avram <marius.avram@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

11	0	lib/bb/cooker.py

commit fa4ea3b4b40e7e9e6767e0cd51c6701e0af07135
Author: Marius Avram <marius.avram@intel.com>
Date:   2014-04-03 15:15:59 +0300

    hob: fix customization of empty image recipe
    
    This fixes a problem which happened when you tried to build an
    image by selecting 'Start with an empty image recipe' from the
    Image configuration page of hob.
    
    The reason on of the bug was that the name of the resulting image
    was threated the same way as ordinary custom images, when in fact
    they should use the default name: "hob-image", because they do not
    derive from any other recipe.
    
    [YOCTO #6102]
    
    Signed-off-by: Marius Avram <marius.avram@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	1	lib/bb/ui/crumbs/builder.py
5	4	lib/bb/ui/crumbs/hobeventhandler.py

commit be8511c9d474c570f6ca7078e28919c8a5175a42
Author: Cristiana Voicu <cristiana.voicu@intel.com>
Date:   2014-04-04 13:53:40 +0300

    hob: adding INHERIT += " testimage " affects image recipes list
    
    To find if a recipe is for an image, Hob checks if it inherits
    image.bbclass. But when you add testimage in local.conf, this will
    be added for each recipe, and it pass the test. Adding a "/" before
    "image.bbclass", will check only for image.bbclass.
    
    [YOCTO #6117]
    Signed-off-by: Cristiana Voicu <cristiana.voicu@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/ui/crumbs/hoblistmodel.py

commit b05e741cb5fe44b37538f2b727782f80dc9bb8fa
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2014-04-03 11:16:24 +0100

    toaster: fix mis-detection of targets as images
    
    If you are using the testimage class then the old test mistook the
    global inheritance of testimage.bbclass with the recipe inheriting
    image.bbclass because it was only looking for that at the end of the
    string.
    
    Also tidy up the code so you an easily tell what it's doing. (The
    original method may have been more "pythonic", but it does nothing for
    readability.)
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

5	3	lib/bb/ui/buildinfohelper.py

commit 0d76a5461ce4bd554ff70a465064969e53edf0a4
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2014-04-03 11:16:23 +0100

    toaster: fix help texts not showing for most tasks
    
    These were not being collected properly because we were explicitly
    excluding variables defined as functions from being stored in the
    database. We don't want these to be shown in the variables list, and in
    any case it makes sense for these to be stored elsewhere, so create a
    separate model to store these.
    
    Fixes [YOCTO #6050].
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

14	9	lib/bb/ui/buildinfohelper.py
214	0	lib/toaster/orm/migrations/0007_auto__add_helptext.py
11	2	lib/toaster/orm/models.py

commit cec33d4fdc05db3a41e978f3a1ab977730c443eb
Author: Scott Rifenbark <scott.m.rifenbark@intel.com>
Date:   2014-04-02 12:26:02 +0000

    user-manual-metadata.xml: Added new section on mapping functions.
    
    Fixes [YOCTO #5472]
    Fixes [YOCTO #1973]
    
    Created a new section called "Automatically Mapping Functions
    Within the Context of a Class".  This section addresses the
    EXPORT_FUNCTIONS "operator", which was the last of the adjustments
    to the variables bug against the BB manual (1973).  The related
    bug (5472) is a general bug against enhancing the BB manual, which
    this change caps off.
    
    The section here was reviewed and approved by Richard Purdie.
    
    Signed-off-by: Scott Rifenbark <scott.m.rifenbark@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

76	0	doc/user-manual/user-manual-metadata.xml

commit f0a1a3e24757f7658d272035620465f92a3e4c3c
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2014-04-01 12:24:49 +0100

    bitbake: cooker: mark setFeatures command as read-only
    
    This patch makes sure that the setFeatures command is marked
    as read-only and that it can only run if the cooker is in
    the initial state.
    
    Additionally, remove logging from the XMLRPC module in favor
    of sending the exception to the client for easy processing.
    
            [YOCTO #6089]
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

4	0	lib/bb/command.py
3	0	lib/bb/cooker.py
1	1	lib/bb/server/xmlrpc.py

commit 1a0defce1499fdc320bcb27b41e06bea2ca2aef2
Author: David Reyna <David.Reyna@windriver.com>
Date:   2014-03-26 16:24:43 -0700

    toaster: secondary sort key as table's default order
    
    Provide for a secondary sort key based on the table's default
    ordering when doing sort on alternate columns.
    
    [YOCTO #5920]
    
    Signed-off-by: David Reyna <David.Reyna@windriver.com>

16	11	lib/toaster/toastergui/views.py

commit b095ab30a827a50f66a06ac9170d33fae2670736
Author: Dave Lerner <dave.lerner@windriver.com>
Date:   2014-03-26 15:49:43 -0500

    toaster: unbuilt package dependency formats
    
    [YOCTO 6057]
    
    For a package shown on the package build dependency page, the dependent
    packages may be unbuilt packages, as indicated with the dependent
    package's size set to -1.  This fix changes the build template to use
    the same formatting functions for unbuilt dependent packages as the
    include package templates use for unbuilt dependent packages.
    
    Signed-off-by: Dave Lerner <dave.lerner@windriver.com>

33	42	lib/toaster/toastergui/templates/package_built_dependencies.html

commit 4b64f4452aa2da4dcc0491cefa6f1a07f7dd173f
Author: Belen Barros Pena <belen.barros.pena@intel.com>
Date:   2014-03-17 00:11:46 +0000

    toaster: Update help text in format_vpackage_namehelp tag
    
    The text now says that the package has not been built.
    
    Signed-off-by: Belen Barros Pena <belen.barros.pena@intel.com>

1	1	lib/toaster/toastergui/templatetags/projecttags.py

commit 1cd01dbf3cd59bac6b62fe91ba2bafa0c62fd7f1
Author: Belen Barros Pena <belen.barros.pena@intel.com>
Date:   2014-03-16 16:59:13 +0000

    toaster: Match search results form to no results form
    
    In the search results form, add the btn class to the clear
    search button and set its tabindex to -1 so that you don't
    accidentally clear the search when you want to search
    again.
    
    Signed-off-by: Belen Barros Pena <belen.barros.pena@intel.com>

1	1	lib/toaster/toastergui/templates/basetable_top.html

commit 0d48cec969a68f9b70e04be6d86b078df8f1ec5b
Author: Belen Barros Pena <belen.barros.pena@intel.com>
Date:   2014-03-16 14:58:33 +0000

    toaster: Increase animation duration
    
    Increase the duration of the blue highlight animation
    from 7 to 10 seconds.
    
    Signed-off-by: Belen Barros Pena <belen.barros.pena@intel.com>

1	1	lib/toaster/toastergui/static/css/default.css

commit b228739888cf8bac99da4aada3c040aac40f784d
Author: Belen Barros Pena <belen.barros.pena@intel.com>
Date:   2014-03-14 19:32:05 +0000

    toaster: Fix the fade out animation
    
    Apply the animation to any element with the class
    .highlight
    
    Signed-off-by: Belen Barros Pena <belen.barros.pena@intel.com>
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>

1	2	lib/toaster/toastergui/static/css/default.css

commit 80df010c12f7ba19649a7bbda9d788217cabc57a
Author: Belen Barros Pena <belen.barros.pena@intel.com>
Date:   2014-03-16 14:42:28 +0000

    toaster: Small tweaks to the packages included interface
    
    * Capitalise correctly the label "Reverse runtime dependencies"
    
    * Change dependency popover labels to match the rest of the
    interface
    
    * Make sure that dependency links go to the initial tab
    of the installed package details pages
    
    Signed-off-by: Belen Barros Pena <belen.barros.pena@intel.com>

1	1	lib/toaster/toastergui/templates/package_included_tabs.html
4	4	lib/toaster/toastergui/templates/target.html

commit 263eae9d2d7acf62240320765c80f60f3553f620
Author: Belen Barros Pena <belen.barros.pena@intel.com>
Date:   2014-03-16 14:21:55 +0000

    toaster: Remove trailing spaces from 'name'
    
    Remove all trailing spaces from 'name' because they show up
    in the filter headings, which I find incredibly annoying.
    
    Signed-off-by: Belen Barros Pena <belen.barros.pena@intel.com>

3	3	lib/toaster/toastergui/views.py

commit c8495c38b892d22a1f85286f34b0fdbc17febf78
Author: Belen Barros Pena <belen.barros.pena@intel.com>
Date:   2014-03-16 14:14:47 +0000

    toaster: Show "No builds found" in the builds table
    
    Making sure the h1 of build.html shows "No builds found"
    instead of "0 builds found" when a search returns no results.
    This matches the builds table to all other Toaster tables.
    
    Signed-off-by: Belen Barros Pena <belen.barros.pena@intel.com>

3	3	lib/toaster/toastergui/templates/build.html

commit 800cbddd612c977960aa4dd93b24c22aac4bfae0
Author: David Reyna <David.Reyna@windriver.com>
Date:   2014-03-26 06:43:04 -0700

    toaster: disable configvar sorts for value and files
    
    Disable the sort on files because it sorts on the file array's
    first (and invisible) element. Disable the sort on values
    because the raw ASCII sort looks wrong to the general user,
    especially for values with leading spaces.
    
    [YOCTO #6004]
    
    Signed-off-by: David Reyna <David.Reyna@windriver.com>

0	4	lib/toaster/toastergui/views.py

commit 6dd8133b06bbda5cce50de39123f429a6a3f772d
Author: Cristiana Voicu <cristiana.voicu@intel.com>
Date:   2014-03-27 11:58:02 +0200

    toaster: use deploy_dir var to obtain the license.manifest path
    
    [YOCTO #6051]
    Signed-off-by: Cristiana Voicu <cristiana.voicu@intel.com>

1	1	lib/bb/ui/buildinfohelper.py

commit 4ffc380d11cff4e1d32d2bf5fb6c7cda6f7e22e6
Author: Ravi Chintakunta <ravi.chintakunta@timesys.com>
Date:   2014-03-18 15:17:31 -0400

    toaster: Display task description
    
    Display task description as content of help bubble for a task.
    
    [YOCTO #5748]
    
    Signed-off-by: Ravi Chintakunta <ravi.chintakunta@timesys.com>

7	0	lib/toaster/orm/models.py
1	1	lib/toaster/toastergui/templates/recipe.html
1	1	lib/toaster/toastergui/templates/tasks.html

commit 3a0a556a65368f02635606e4eb707ca08e25007a
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2014-03-28 14:43:48 +0000

    toaster: fix timezone detection
    
    This patch replaces faulty timezone detection with a version
    that simply reads the TZ environment variable if it is set.
    
    If the TZ is not set, we do a reverse match search among known
    timezone definitions and take the first match.
    
        [YOCTO #5499]
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>

17	3	lib/toaster/toastermain/settings.py

commit 60c577b1080219b795d3c8ab4e149e929cf9ce14
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2014-03-25 15:51:07 +0000

    toaster: update saving sstate task data
    
    This is an update on the sstate file saving data.
    It saves both found and missed sstate tasks.
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>

16	1	lib/bb/ui/buildinfohelper.py

commit 5edb1a3e3f454ba6e65551174d86229db2f99636
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2014-04-01 09:16:30 +0100

    runqueue: Address issues with incomplete sstate sets
    
    The first part of the sstate code checks en-mass whether given checksums
    are available. The next part of the code then either triggers those
    setscene tasks either running them or skipping them if they've been
    covered by others.
    
    The problems was that this second part would always skip a task if it
    was unavailable in the first part, even if it would have otherwise been
    covered by other tasks.
    
    This mean the mere presence of an artefact (or lack of presence) could
    cause a different build failure.
    
    The issue reproduces if you run a build and populate an sstate feed, then
    run a second build off that feed, then run a third build off the sstate
    feed of the second build (which is reduced in size).
    
    The fix is rather than immediately skipping tasks if the checksum is
    unavailable, create a list of missing tasks, then, if that task cannot
    be covered by others we can skip it later. The deferral makes the
    behaviour the same even when the cache is "incomplete".
    
    [YOCTO #6081]
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

5	1	lib/bb/runqueue.py

commit 724c889eed3b03d3199810c185086d3973af826c
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2014-03-31 23:07:20 +0100

    runqueue: Fix sstate task dependency problems
    
    If a setscene task has [depends], its possible they may still get executed out
    of order. The issue is that the dependencies are set to set() for all tasks
    involved. This patch adds back in explict dependencies within these chains
    to avoid the setscene task failures.
    
    [YOCTO #6069]
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

4	0	lib/bb/runqueue.py

commit f4ebc4de63d64e3b5f87e1d0f51507760c3d82d7
Author: Scott Rifenbark <scott.m.rifenbark@intel.com>
Date:   2014-03-28 13:12:52 +0000

    user-manual-execution.xml: Added how BB processes curly braces.
    
    Signed-off-by: Scott Rifenbark <scott.m.rifenbark@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

40	53	doc/user-manual/user-manual-execution.xml

commit 4093fa6c96eebe0bbafb93dc27d8a978cca436c4
Author: Scott Rifenbark <scott.m.rifenbark@intel.com>
Date:   2014-03-27 15:35:43 +0000

    user-manual-execution.xml: Updated "Checksum (Signatures) section.
    
    Fixes [YOCTO #5357]
    
    Added a paragraph at the end of this section to address the fact
    that the user can now debug Bitbake's processing of signatures.
    This introduces the -S bitbake option and the fact that the
    user can provide a couple parameters with it: "none" and
    "printdiff".
    
    Signed-off-by: Scott Rifenbark <scott.m.rifenbark@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

24	0	doc/user-manual/user-manual-execution.xml

commit 5a406a69c14b6ddf179fea2c4bc68cddf9eddeea
Author: Scott Rifenbark <scott.m.rifenbark@intel.com>
Date:   2014-03-27 13:59:40 +0000

    user-manual-intro.xml: updated bitbake -h output
    
    The new -S syntax is in there now.
    
    Signed-off-by: Scott Rifenbark <scott.m.rifenbark@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

71	70	doc/user-manual/user-manual-intro.xml

commit c3b5cc5691291c74dd315c4439c80e0e4b2b5c1d
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2014-03-28 17:06:43 +0000

    server/xmlrpc: Simlify featureset handling
    
    Rather than passing featureset around various places where the data doesn't
    really belong, run a command at connection time to set the appropriate
    features. This is similar to what the process server does.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

8	9	lib/bb/server/xmlrpc.py
2	2	lib/bb/ui/uievent.py

commit db4d80b5c2d32117cdf06333b9627202998b1512
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2014-03-28 17:07:21 +0000

    bin/bitbake: Only try and process an event_queue if it exists
    
    The connection may have failed before the event queue has been setup.
    Handle this correctly in the exception handler.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	bin/bitbake

commit 59f2f33440449c586c23dd3a192698a37aaf0595
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2014-03-28 15:30:35 +0000

    bitbake: toaster: do not trap SIGCHLD
    
    We remove trapping SIGCHLD due to a weird interaction
    with the bash version used with Ubuntu 14.04 LTS.
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	2	bin/toaster

commit 81f41a806aeddcc38992163557672e296bcbc967
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2014-03-28 12:10:54 +0000

    prserv: Fix exit race issues
    
    We shouldn't immediately remove the pid file when stopping the server, if we do, this
    causes a traceback within the server itself which can then hang. Fix this by removing
    the stale pid file as the last thing we do.
    
    Also:
    
    * don't printing a new "waiting" line every 0.5 seconds.
    * make the loop more granular since the user can 'feel' the 0.5 seconds
    
    [YOCTO #5984]
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

6	7	lib/prserv/serv.py

commit 1249543c4dbf3edeac033d888497864cfc807a4e
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2014-03-28 11:09:19 +0000

    bin/bitbake/cooker: Ensure initial featureset is optimal
    
    If the featureset didn't match the defaults, we'd pay the price of two
    base configuration parses which showed up adversely in the performance
    benchmarks. This also passes the feature set into the cooker creation so
    in the common case we don't have to reset the server. This speeds up
    both knotty and hob startup. If the featureset doesn't match, the system
    will reset as before, this just streamlines the common case.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

9	7	bin/bitbake
3	1	lib/bb/cooker.py

commit 9d8f7efbc39d64124936ccaeb3c47a112e595d78
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2014-03-28 11:06:18 +0000

    cooker: Only change self.data if it exists
    
    With the change to more optimal default featureset behaviour, a race was
    exposed by hob where the code may try and change self.data before it
    exists. This change avoids that.
    
    When the datastore is created, the cooker configuration is used so
    data tracking is correctly handled regardless.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

4	2	lib/bb/cooker.py

commit b1f52a87e367b8dea9bd974bc5a886d84d839c45
Author: David Reyna <David.Reyna@windriver.com>
Date:   2014-03-25 22:48:18 -0700

    toaster: filter tasks with cache attempts for all attempts
    
    Adjust the filter for task cache attempts to include all attempts except
    SSTATE_NA.
    
    [YOCTO #5923]
    
    Signed-off-by: David Reyna <David.Reyna@windriver.com>
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>

1	1	lib/toaster/toastergui/views.py

commit 964d2d6efe9a2cfa7cd8760cda4453c3d69b2e27
Author: Dave Lerner <dave.lerner@windriver.com>
Date:   2014-03-25 15:23:53 -0500

    toaster: fix dirinfo empty dir expansion
    
    [YOCTO 6036]
    
    In the page that shows the directory layout for an image, if the
    directory is empty, then the directory folder icon should be black and
    the table row should not be 'expandable' on a mouse click.  That
    behavior depends on the directory's child entry count calculated in the
    view function controlling that page.
    
    Two images in the database with the same directory path in the target
    image, but one with path having entries and the other not having
    any entries caused the path without entries to be clickable; the
    query for a directory's count of entries, didn't filter on the image id,
    only on the path.
    
    Signed-off-by: Dave Lerner <dave.lerner@windriver.com>

1	1	lib/toaster/toastergui/views.py

commit 842abf6759894690d5bc770f4ea2ac15b127e5e2
Author: David Reyna <David.Reyna@windriver.com>
Date:   2014-03-25 10:42:55 -0700

    toaster: added file types to the Outputs column in the build
    
    The file types are displayed in the Outputs column in the build page. The file types
    are derived from the target image filenames.
    
    [YOCTO #5947]
    
    Signed-off-by: Farrell Wymore <farrell.wymore@windriver.com>
    Signed-off-by: David Reyna <David.Reyna@windriver.com>
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>

5	1	lib/toaster/toastergui/templates/build.html
9	0	lib/toaster/toastergui/templatetags/projecttags.py
22	2	lib/toaster/toastergui/views.py

commit eaff7b50d7102c97b75df185b9ef917970319d59
Author: David Reyna <David.Reyna@windriver.com>
Date:   2014-03-25 18:53:08 -0700

    toaster: add support for empty states in pages
    
    Add support for empty states in the top build page,
    the all packages page, and the all tasks page.
    
    [YOCTO #4865]
    
    Signed-off-by: David Reyna <David.Reyna@windriver.com>

3	1	lib/toaster/toastergui/static/css/default.css
-	-	lib/toaster/toastergui/static/img/toaster.png
27	7	lib/toaster/toastergui/templates/bpackage.html
40	10	lib/toaster/toastergui/templates/build.html
23	11	lib/toaster/toastergui/templates/tasks.html

commit c604e14df8cdb1f47535f093d7044955d4c2057d
Author: Dave Lerner <dave.lerner@windriver.com>
Date:   2014-03-24 16:37:17 -0500

    toaster: show installed package name
    
    [YOCTO #5922]
    
    Implement changes that show the installed package name after the
    official 'recipe-named' package name.  If the alias exists and
    is different than the package name, then the alias is shown as a
    'muted' string after the package name in the form 'as some-alias-name'.
    This formatting appears in the included package pages in the elements:
    * local breadcrumbs at the top of package included pages,
    * <h1> title headings along with a help bubble that is not hovering,
    and
    * package lists where the help bubble appears when the mouse hovers
    over the row.
    
    The changes in detail in this patch per file are:
    views.py
    - added function that tests whether the package object's installed_name
    should be shown,
    - added function that appends package name with version and revision to
    encapsulate package name formatting in one place and referred to as
    package.fullpackagespec,
    - changed package_built* and package_included* functions to use both
    of the above new formatting functions, passing the formatted values to
    templates, and
    - adhered to django coding styles by renaming  module local
    'get_package*' functions with "_" prefix.
    
    package_detail_base.html
    - added display of package aliases for included package page,
    - refactored to use package.fullpackagespec, formatted by view function,
    - added javascript function to format package alias with help, and
    - removed trailing whitespace.
    
    package_included_detail.html
    - used javascript function above to format package alias, and
    - refactored to use package.fullpackagespec.
    
    package_included_dependencies.html
    - used javascript function above to format package alias,
    - refactored to use package.fullpackagespec,
    - forced empty data cells following hover-help to draw borders
    by appending space, and
    - removed trailing whitespace.
    
    package_included_reverse_dependencies.html
    - use javascript function above to format package alias,
    - refactor to use views fullpackagespe, and
    - force empty data cells following hover-help to draw borders
    by appending space.
    
    package_built_detail.html
    - refactored to use package.fullpackagespec, and
    - removed trailing whitespace.
    
    package_built_dependencies.html
    - refactored to use package.fullpackagespec, and
    - removed trailing whitespace.
    
    projecttags.py
    - removed unused filter to handle installed name
    - removed extra spaces around "title = " in format_vpackage_namehelp
    
    Signed-off-by: Dave Lerner <dave.lerner@windriver.com>

4	6	lib/toaster/toastergui/templates/package_built_dependencies.html
4	4	lib/toaster/toastergui/templates/package_built_detail.html
28	8	lib/toaster/toastergui/templates/package_detail_base.html
18	13	lib/toaster/toastergui/templates/package_included_dependencies.html
9	5	lib/toaster/toastergui/templates/package_included_detail.html
10	7	lib/toaster/toastergui/templates/package_included_reverse_dependencies.html
1	9	lib/toaster/toastergui/templatetags/projecttags.py
47	13	lib/toaster/toastergui/views.py

commit 65bdd6cf8d0cc2af6cd424de735a5e3f2e54fa99
Author: Belen Barros Pena <belen.barros.pena@intel.com>
Date:   2014-03-16 13:33:36 +0000

    toaster: Fix typo in heading code
    
    Fix typo in the code that handles the changes
    in the h1 text in order to display the number of results
    returned by a search.
    
    [YOCTO #6001]
    
    Signed-off-by: Belen Barros Pena <belen.barros.pena@intel.com>

1	1	lib/toaster/toastergui/templates/configvars.html

commit d21b64bad8a6a5e23eab552868d555f6e004f4c7
Author: David Reyna <David.Reyna@windriver.com>
Date:   2014-03-24 21:32:08 -0700

    toaster: insure _get_query returns distinct records
    
    The '_get_query' can return duplicate records if a search term appears
    multiple times in the same row, so the queryset must be made
    distinct before returning.
    This commit also removes the initial special case for configvars in
    favor of this general solution.
    
    [YOCTO #6012]
    
    Signed-off-by: David Reyna <David.Reyna@windriver.com>

3	4	lib/toaster/toastergui/views.py

commit cb26c4df04170143babd6c9fd60600bfb31486ed
Author: David Reyna <David.Reyna@windriver.com>
Date:   2014-03-24 19:50:50 -0700

    toaster: blocks for custom/highlighted navigation and breadcrumb links
    
    Implement the navigation links as blocks so that each page can override and have
    its respective link appear highlighted. Make the build breadcrumb a block so that
    it is customizable to not be a link for the dashboard page. Reorder the page headers
    to be consistent order for extends, projecttags, localbreadcrumb, nav-links.
    
    [YOCTO #5916]
    [YOCTO #4258]
    
    Signed-off-by: David Reyna <David.Reyna@windriver.com>

36	14	lib/toaster/toastergui/templates/basebuildpage.html
5	1	lib/toaster/toastergui/templates/bpackage.html
4	0	lib/toaster/toastergui/templates/builddashboard.html
5	1	lib/toaster/toastergui/templates/configuration.html
7	3	lib/toaster/toastergui/templates/configvars.html
4	0	lib/toaster/toastergui/templates/recipes.html
10	0	lib/toaster/toastergui/templates/target.html
30	0	lib/toaster/toastergui/templates/tasks.html

commit 09b099903bdf51bfb277b9a8f922255cfe83ab96
Author: David Reyna <David.Reyna@windriver.com>
Date:   2014-03-21 05:35:50 -0700

    toaster: add Image detail and multiple targets to dashboard
    
    Filled in the Image section detail information and allow for multiple targets.
    Each target has a separate section. Added license manifest display. Changed the
    target of the license manifest link. Added Tasks failed in the build summary.
    The target lists required filters to create sorted lists.
    
    [YOCTO #4258]
    [YOCTO #5936]
    
    Signed-off-by: Farrell Wymore <farrell.wymore@windriver.com>

5	0	lib/toaster/orm/models.py
5	2	lib/toaster/toastergui/templates/basebuildpage.html
67	20	lib/toaster/toastergui/templates/builddashboard.html
45	4	lib/toaster/toastergui/views.py

commit 794680f6480e0aea65f2ea611730083bc4aad0d5
Author: Trevor Woerner <trevor.woerner@linaro.org>
Date:   2014-03-27 13:00:51 -0400

    .gitignore: update documentation directory name
    
    In the yocto-docs repository, the documentation is stored in a directory
    called "documentation". In this repository the documentation is stored in
    "doc".
    
    This update allows git to properly ignore generated documentation.
    
    Signed-off-by: Trevor Woerner <trevor.woerner@linaro.org>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	3	.gitignore

commit 0664fa15597785dd90cf205531a9801e6da6ba47
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2014-03-27 10:38:50 +0000

    knotty: Show a link to the logfile for failed setscene tasks
    
    Its not immediately obvious to the user that a logfile exists for a failed setscene
    task. Add code to knotty to display where that logfile is in those cases.
    
    [YOCTO #6055]
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	0	lib/bb/ui/knotty.py

commit ebb797fc5c37d729e3cc8b2dc7156287d385c13b
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2014-03-26 16:57:41 +0000

    knotty: Split error output onto stderr
    
    When using bitbake -e in scripts, it would be helpful if the error
    output appeared on stderr, not stdout. This change enables that building
    upon the new bb.msg filters.
    
    [YOCTO #5274]
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

5	1	lib/bb/ui/knotty.py

commit 0529aa9966df5c56b07affe865efce18852efe5a
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2014-03-26 16:56:08 +0000

    knotty: Ensure the progress bar shows on stdout
    
    I can understand why some programs would want the progress on stderr so
    that real output can be captured on stdout. This is confusing for bitbake
    since we don't show a progress bar at all in non-interactive cases.
    
    Therefore make sure the progress bar goes to stdout, not the stderr default.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/ui/knotty.py

commit d3e1419ef76be5e9ec976597361a5e14a7b6bcb6
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2014-03-26 16:55:35 +0000

    msg: Add stdout/stderr filters
    
    Add logging filters which can be used to split output between stdout and
    stderr, ERROR messages and above as passed by the Err filter, anything
    below ERROR is passed by the Out filter. This is useful when trying to make
    stderr more useful.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

16	2	lib/bb/msg.py

commit 32e171bcc92c6e27fefee971e8714ddf8e1a8ac1
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2014-03-26 15:07:59 +0000

    cooker/event: Overhaul sanity test mechanism
    
    Sanity tests are currently a pain as its hard to control when they run. This results
    in issues where for example the bitbake -e output is not useful as the sanity tests
    prevent it from executing. The sanity tests should run later than the base configuration.
    
    This patch changes the sanity tests to always be event triggered with the option of
    returning either events on the status, or raising errors. A new cooker feature is used
    to change the behaviour depending on the controlling UI.
    
    This does need a change to sanity.bbclass in the OE metadata but its worth the pain
    for the increased flexibility and control this offers UIs and the improvement to the
    user experience.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	1	lib/bb/cooker.py
8	2	lib/bb/event.py
2	0	lib/bb/ui/knotty.py

commit ef8537a2e9b48f4fe065a165c102935aee2c9029
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2014-03-26 13:47:29 +0000

    runqueue/siggen: Pass in commandline options to dump_sigs()
    
    This allows the commandline options to be processed in the dump signature
    code.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	3	lib/bb/runqueue.py
2	2	lib/bb/siggen.py

commit b9873588696507dfb6aade6821f6f75cb9a19e0a
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2014-03-26 13:46:54 +0000

    bitbake: Force -S option to take a parameter
    
    There is no easy way to make this change. We really need parameters for the -S
    (dump signatures) handling code. Such a parameter can then be used within the
    codebase to handle the signatures in different ways.
    
    For now, "none" is the recommended default and "printdiff" will execute the
    new (and more expensive) comparison algorithms.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	2	bin/bitbake
1	1	lib/bb/cookerdata.py
6	3	lib/bb/runqueue.py

commit 2a80735183e8faa110b4c6d8d85c4707f28e03a1
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2014-03-25 22:23:09 +0000

    data_smart: Fix caching issue for double remove references
    
    FOO = "foo bar"
    FOO_remove = "bar"
    FOO_FOO = "${FOO} ${FOO}"
    
    would show FOO_FOO = "foo foo bar" rather than the expected "foo foo".
    
    This is actually a cache bug, this patch ensures the right value is
    put into the cache. The preceeding patch adds a test case to ensure
    we don't regress in future.
    
    [YOCTO #6037]
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

4	0	lib/bb/data_smart.py

commit 93291bd90e18808c7a1c8c692949396bbc7e4348
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2014-03-25 22:22:45 +0000

    test/data: Add in test for append/prepend/remove override operations
    
    We currently don't have test cases for _append, _prepend and _remove. This
    patch adds some basic tests and includes a test case for a recently reported
    issue with the _remove operator.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

41	0	lib/bb/tests/data.py

commit 6cdd4067f766ef5680076c33a32b2dc5d622362c
Author: Dave Lerner <dave.lerner@windriver.com>
Date:   2014-03-21 13:43:18 -0500

    toaster: format packages with size = -1
    
    Packages that have a size of -1 are virtual packages with limited
    information.  Such packages should be suppressed from the package
    list page for an image.  On dependency and reverse dependency lists of
    package, such packages should appear in muted rows, without links,
    and with help information.
    
    The formatting rules are encapsulated into projecttags filters when
    possible to minimize tests on size==-1 in the templates.
    
    Testing the relevant pages with an HTML5 validator found a stray end
    tag in package_detail_base which has been fixed in this commit.
    
    [YOCTO #5966]
    
    Signed-off-by: Dave Lerner <dave.lerner@windriver.com>
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>

1	1	lib/toaster/toastergui/templates/package_detail_base.html
16	3	lib/toaster/toastergui/templates/package_included_dependencies.html
8	1	lib/toaster/toastergui/templates/package_included_reverse_dependencies.html
20	1	lib/toaster/toastergui/templatetags/projecttags.py
1	1	lib/toaster/toastergui/views.py

commit ff46fd6d8db52eeabe8c938c347ce5ba8d328cc1
Author: Belen Barros Pena <belen.barros.pena@intel.com>
Date:   2014-03-15 17:04:50 +0000

    toaster: Small fixes in tasks UI
    
    This commit:
    
    * Fixes an issue with white space when showing the log
    in Cached tasks (task details page)
    
    * Formats the no results alert of the "Prebuilt task
    could be based on" search in the task details page
    
    * Brings in the task outcome help text to "Prebuilt
    task could be based on" table in the task details page,
    to the tasks table in the recipe details page, and to
    the all tasks page
    
    * Adds the task_color tag to the "Prebuilt task could
    be based on" table in the task details page, so that
    each task gets the required visual treatment based on
    execution
    
    * Makes sure performance information for not executed
    tasks shows in the task details page when it exists
    (empty tasks often report a short time, for example)
    
    Signed-off-by: Belen Barros Pena <belen.barros.pena@intel.com>

4	2	lib/toaster/toastergui/templates/recipe.html
8	10	lib/toaster/toastergui/templates/task.html
2	1	lib/toaster/toastergui/templates/tasks.html

commit fd7c7b064f14d15131322610e552483ce670614d
Author: Belen Barros Pena <belen.barros.pena@intel.com>
Date:   2014-03-15 14:48:49 +0000

    toaster: Fix help text typos
    
    Fix a couple of typos in the help text of the builds
    and recipes tables.
    
    Signed-off-by: Belen Barros Pena <belen.barros.pena@intel.com>

5	5	lib/toaster/toastergui/views.py

commit f9bfbda3557272452b824a433cf391e983e4abfe
Author: Belen Barros Pena <belen.barros.pena@intel.com>
Date:   2014-03-15 14:01:48 +0000

    toaster: Remove commented-out code from views.py
    
    This code in the All tasks view class needed to be removed.
    
    [YOCTO #6010]
    
    Signed-off-by: Belen Barros Pena <belen.barros.pena@intel.com>

0	5	lib/toaster/toastergui/views.py

commit a18ae43e0ffa25df50ae6908270bb6b2304022a8
Author: Belen Barros Pena <belen.barros.pena@intel.com>
Date:   2014-03-15 13:41:58 +0000

    toaster: Change placeholder attribute in variables table
    
    Set placeholder attribute for the search input field in
    the variables table to "Search BitBake variables" as per
    the design specification.
    
    [YOCTO #5998]
    
    Signed-off-by: Belen Barros Pena <belen.barros.pena@intel.com>

1	1	lib/toaster/toastergui/views.py

commit 84be1a27f89d1bf63c21f06d831df0a66a5db860
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2014-03-25 14:13:50 +0000

    runqueue: Fix sceneQueueEvent to use the correct hashes
    
    The runqueue should be using the "realtask" ID to lookup the task
    hash, not the "task" ID. This patch resolves corruption issues where
    incorrect task hashes were displayed within toaster.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/runqueue.py

commit bdbcd8866104c315fc9da631407d4280433dbfde
Author: Marius Avram <marius.avram@intel.com>
Date:   2014-03-25 15:02:35 +0200

    hob: fix set_extra_setting function
    
    The function is used to save additional variables in the configuration file
    when the user adds a new (key, value) pair from the Settings->Others. There
    was a problem though when the function was trying to retrieve an older
    instance of EXTRA_SETTINGS from the configuration file. Sometimes its value
    was returned as a dictionary and sometimes a string, which caused a crash when
    calling ast.literal_eval(). The reason of the problem must be a change in
    bitbake's parsing system. The changes will fix this issues.
    
    While analysing this problem I discovered that the variables were not saved
    properly in the configuration file after consecutive changes to Settings->Others
    because of the way saveConfigurationVar() from cooker.py works. This patch
    will also solve this issue.
    
    [YOCTO #5989]
    
    Signed-off-by: Marius Avram <marius.avram@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

21	9	lib/bb/ui/crumbs/hobeventhandler.py

commit 30cd1fab6633aaf50ef53eefccc6d69d598eb293
Author: Marius Avram <marius.avram@intel.com>
Date:   2014-03-25 15:02:10 +0200

    cooker: delVar in removeConfigurationVar
    
    When a variable was removed from a configuration file it was not
    removed from memory. This also had the effect of not allowing
    to set a new value for the same variable with saveConfigurationVar.
    
    Signed-off-by: Marius Avram <marius.avram@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	0	lib/bb/cooker.py

commit 01a07dabb0d0c6a7f8c3c048396cfdf9d756b032
Author: Scott Rifenbark <scott.m.rifenbark@intel.com>
Date:   2014-03-20 13:23:53 -0600

    user-manual-metadata.xml: Added varflag for vardepvalueexclude.
    
    Fixes [YOCTO #5897]
    
    Added several new varflags to the existing list in the
    "Variable Flags" section.  The key one being the
    "vardepvalueexclude" flag.
    
    Signed-off-by: Scott Rifenbark <scott.m.rifenbark@intel.com>

34	0	doc/user-manual/user-manual-metadata.xml

commit 0d63589abfa6b353f3b456a9a91de4dd98eb3965
Author: Scott Rifenbark <scott.m.rifenbark@intel.com>
Date:   2014-03-20 04:59:29 -0600

    user-manual-metadata.xml: Edits to "Basic Variable Setting"
    
    Fixes [YOCTO #5507]
    
    I applied some edits from Richard's review to the fix for
    handling variable setting.  Moved the new section I created into
    the existing "Basic Variable Setting" section.
    
    Signed-off-by: Scott Rifenbark <scott.m.rifenbark@intel.com>

1	8	doc/user-manual/user-manual-metadata.xml

commit 96d0b38577476a3576487f1fa9a4b6c9dff5d3ed
Author: Scott Rifenbark <scott.m.rifenbark@intel.com>
Date:   2014-03-20 04:35:43 -0600

    user-manual-metadata.xml: Sections to handle variable setting added.
    
    Fixes [YOCTO #5507]
    
    I provided further explanation in the "Basic Variable Setting"
    section to note that trailing and leading blanks are not stripped
    from a value when set (e.g. VARIABLE = " value").
    
    I added a new section "Null and Blank Setting" explaning that setting
    a variable to "" and " " are two different things.
    
    Signed-off-by: Scott Rifenbark <scott.m.rifenbark@intel.com>

20	0	doc/user-manual/user-manual-metadata.xml

commit a895f76836c867822f5be33546e51b285e7016e0
Author: Scott Rifenbark <scott.m.rifenbark@intel.com>
Date:   2014-03-13 11:20:04 -0600

    Makefile: Added publish tag so the book can be published.
    
    Signed-off-by: Scott Rifenbark <scott.m.rifenbark@intel.com>

15	1	doc/Makefile

commit 9dd53bd4355148916a89cf672b6c5db5f6b1ae35
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2014-03-24 15:08:04 +0000

    toaster: replace package dependency tag w/ view queries
    
    This patch moves the queries for package dependencies from the
    project tags to the views. This is done to bring the code inline
    with the Django philosophy of making all data queries in views.py
    
    This change has no performance implication.
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>

2	2	lib/toaster/toastergui/templates/target.html
0	14	lib/toaster/toastergui/templatetags/projecttags.py
6	0	lib/toaster/toastergui/views.py

commit a9cfa3eacfc99550e1ad3f8bb61b2a0bc9b44332
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2014-01-09 15:11:59 +0000

    toaster: clean exit on bb server shutdown
    
    This patch adds the capability to have the Toaster UI
    detect when the Bitbake server exited and cleanly
    trigger a clean shutdown of the system through the toaster
    starting script.
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>

26	2	bin/toaster
5	2	lib/bb/ui/toasterui.py

commit 6f22e02614adcc642fe011e5e31ca4936d1cb19d
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2014-02-17 17:33:27 +0000

    toasterui: save missed sstate tasks
    
    We save the missed sstate tasks as tasks that executed
    but have the sstate_result set to "SSTATE_MISSED", signaling
    that the attempt to find an sstate file failed.
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>

21	0	lib/bb/ui/buildinfohelper.py
2	0	lib/bb/ui/toasterui.py

commit e855031410daf2b99a6ca40b70956fe67c96f71c
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2014-03-19 17:39:25 +0000

    toaster: select recipe based on PN name
    
    When saving task stats, if there were multiple tasks executed
    based on the same recipe file, we might have saved the stats
    to the wrong task by selecting another recipe.
    
    This patch takes the PN into account to properly select
    the file stats.
    
    A check is also made to make sure we don't fail saving
    data due to interrupted builds.
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>

14	12	lib/bb/ui/buildinfohelper.py

commit 77e6cc952e73dec4a6e5149e52f87000709d2152
Author: Irina Patru <irina.patru@intel.com>
Date:   2014-03-19 14:24:47 +0200

    toaster: Remove circular dependecies from packages/recipes
    
    The RelatedManager for Package_Dependency and Recipe_Dependency is changed
    so that circular dependacies are hidden in the UI, but will still remain in
    the database.
    
    [YOCTO #5655]
    
    Signed-off-by: Irina Patru <irina.patru@intel.com>
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>

14	0	lib/toaster/orm/models.py

commit 16e6fc6e0492f4ebd5f18bd236478b6f9f778a1e
Author: Amit Kumar Chaudhary <amit@floatingpondtech.com>
Date:   2014-03-19 16:51:40 +0530

    toaster: combine ready functions
    
    Merge the code into single ready function.
    
    [YOCTO #4283]
    
    Signed-off-by: Amit Kumar Chaudhary <amit@floatingpondtech.com>

1	3	lib/toaster/toastergui/static/js/main.js

commit 560569d0e1e5de694bc19d09bdf98890af54a6d6
Author: David Reyna <David.Reyna@windriver.com>
Date:   2014-03-18 21:18:28 -0700

    toaster: add search by section to all recipe page
    
    Add the 'section' to the searchable columns list for the recipe model.
    
    [YOCTO #5993]
    
    Signed-off-by: David Reyna <David.Reyna@windriver.com>

1	1	lib/toaster/orm/models.py

commit 017771ed0508b247edaf875789260906f44381f4
Author: Cristiana Voicu <cristiana.voicu@intel.com>
Date:   2014-03-18 18:27:17 +0200

    bitbake toaster: check the file_name with the content of the IMAGE_FSTYPES variable
    
    File_name information of Target_image_file is being collected for a
    .rootfs.manifest file. We would like not to collect this. The solution is
    to cross check the information gathered for file_name with the content
    of the IMAGE_FSTYPES variable. If any of the file_name entries does not
    match the content of IMAGE_FSTYPES, we do not store it.
    
    [YOCTO #5189]
    
    Signed-off-by: Cristiana Voicu <cristiana.voicu@intel.com>
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>

2	1	lib/bb/ui/buildinfohelper.py

commit 50e7f8f3bcfdd5b3e1b7778bfaaa93a563aba45d
Author: Marius Avram <marius.avram@intel.com>
Date:   2014-03-18 16:48:37 +0200

    toaster: apply filter only on selected attributes
    
    This fixes the filter from the main page: 'All builds' applied to the
    table header. Once one is selected, the filter button for that respective
    column will receive a title attribute which will show additional options
    when you hover over it. Until now the additional option was active for
    all filters buttons not only for the one selected. This also caused
    malformed output in the case of the buttons which weren't among the
    selected filter.
    
    [YOCTO #5929]
    
    Signed-off-by: Marius Avram <marius.avram@intel.com>
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>

1	1	lib/toaster/toastergui/templates/basetable_top.html

commit 8d71bd39947dd909d02c8d33847e5852c9f20f19
Author: Belen Barros Pena <belen.barros.pena@intel.com>
Date:   2014-03-15 01:00:29 +0000

    toaster: Change "0 found" to "No found"
    
    Change the string in the h1 when search returns no results
    from "0 things found" to "None things found". The change
    applies to the BitBake variables, tasks, recipes, packages
    built, time, CPU and disk I/O tables.
    
    [YOCTO #5981]
    
    Signed-off-by: David Reyna <David.Reyna@windriver.com>
    Signed-off-by: Belen Barros Pena <belen.barros.pena@intel.com>

3	3	lib/toaster/toastergui/templates/bpackage.html
3	3	lib/toaster/toastergui/templates/configvars.html
3	3	lib/toaster/toastergui/templates/recipes.html
3	3	lib/toaster/toastergui/templates/tasks.html

commit 0047dd486c23707dd0fd7f9a2ae485b987d0b3e3
Author: Belen Barros Pena <belen.barros.pena@intel.com>
Date:   2014-03-15 00:21:51 +0000

    toaster: Update local configuration counter
    
    The counter for the local configuration filter in the
    variables table was counting only variables set by
    local.conf. Updating to add in variables set by
    bblayers.conf
    
    Signed-off-by: Belen Barros Pena <belen.barros.pena@intel.com>

1	1	lib/toaster/toastergui/views.py

commit 7793de593121da9761e4584331b68bf684112300
Author: Belen Barros Pena <belen.barros.pena@intel.com>
Date:   2014-03-15 00:13:06 +0000

    toaster: Add help text to filters
    
    The 'Set in file' and 'Description' filters in the configuration page,
    and the 'Outcome' and 'Cache attempt' filters in the tasks page should
    include a help tooltip with some explanation about what they do.
    This change adds the tooltips.
    
    Signed-off-by: Belen Barros Pena <belen.barros.pena@intel.com>

1	0	lib/toaster/toastergui/templates/filtersnippet.html
16	16	lib/toaster/toastergui/views.py

commit 54ec8dfe779bc20d5aaeeeeb768da8412e5dfd0f
Author: Belen Barros Pena <belen.barros.pena@intel.com>
Date:   2014-02-19 23:43:50 +0000

    toaster: Fix alignment issue in searchform
    
    The search form in basetable_top.html had a small alignment
    issue between the search text field and the search button.
    This change aligns the elements correctly.
    
    Whitespace fix by Alex Damian.
    
    Signed-off-by: Belen Barros Pena <belen.barros.pena@intel.com>

3	5	lib/toaster/toastergui/templates/basetable_top.html

commit 3d69f5cdf154df83e7a487e1b609bb8f7b5b6df2
Author: Dave Lerner <dave.lerner@windriver.com>
Date:   2014-03-18 09:24:43 -0500

    toaster: fix package size 1st sort order
    
    [YOCTO #5914]
    
    On the pages with tables listing packages with a size column, change the
    first click sort order on the size column so that packages are sorted in
    decreasing order instead of increasing order.  It is more likely that
    the user sorts this page data by size because the user is interested in
    those packages consuming the most disk space.
    
    Signed-off-by: Dave Lerner <dave.lerner@windriver.com>

2	2	lib/toaster/toastergui/views.py

commit 841a086822a3fa740b5651938aee6a42eba58409
Author: Belen Barros Pena <belen.barros.pena@intel.com>
Date:   2014-03-14 23:19:07 +0000

    toaster: Change objectname 'packages' to 'packages built'
    
    This will set the placeholder attribute of the search input
    field in bpackage.html to the required "Search packages
    built".
    
    [YOCTO #5977]
    
    Signed-off-by: Belen Barros Pena <belen.barros.pena@intel.com>

1	1	lib/toaster/toastergui/views.py

commit b80c578d9330a45e9c2502701de2ebb6307b1caf
Author: David Reyna <David.Reyna@windriver.com>
Date:   2014-03-15 15:10:27 -0700

    toaster: reset default filter for configvar page on new searches
    
    The configvar page has a default filter by design. However, new search terms
    should override and clear that filter, for consistency across the interface.
    
    [YOCTO #5961]
    
    Signed-off-by: David Reyna <David.Reyna@windriver.com>

4	1	lib/toaster/toastergui/views.py

commit 6be58123fcdb0ff20de2a88315e1e3012effd1d3
Author: David Reyna <David.Reyna@windriver.com>
Date:   2014-03-14 00:26:32 -0700

    toaster: warn new filter replaces existing filter
    
    If the user pop-ups a filter dialog when another filter is already
    active, warn the user that the new filter would replace the
    previous filter.
    
    [YOCTO #5960]
    
    Signed-off-by: David Reyna <David.Reyna@windriver.com>
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>

1	0	lib/toaster/toastergui/static/css/default.css
5	0	lib/toaster/toastergui/templates/filtersnippet.html
6	0	lib/toaster/toastergui/templatetags/projecttags.py

commit 7e59b6b1cb44de00c512facece5ede96375a411f
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2014-03-20 11:44:19 +0000

    toaster: Revert "added file types to the Outputs column in the build page"
    
    This reverts commit d40ac966b22e1fa1956d8f2fe37fd55fa670e88f.
    
    Sloppy review on my part let the original patch in, when it should've
    been rejected because the filter tags should have no knowledge of the
    object system.
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>

1	5	lib/toaster/toastergui/templates/build.html
0	27	lib/toaster/toastergui/templatetags/projecttags.py

commit f34575809677dc52e1071a3ae3daebe92819cec0
Author: Marius Avram <marius.avram@intel.com>
Date:   2014-03-18 14:17:06 +0200

    hob: output filenames based on initial recipe name
    
    If a recipe for an image was edited from the hob interface the name
    of the files outputed in the <build_dir>/tmp/deploy/images/${MACHINE}/ and the
    temporary recipes from <build_dir>/recipes/images/ contained only the
    generic name "hob-image". From now on both the temporary recipes and
    the output from the deploy/ directory will contain the name of the base
    recipe appended by the "-edited" suffix, in the case when a base image recipe was
    edited. The base recipe can be a standard recipe (e.g core-image-minimal) or
    a custom created and saved by the user.
    
    For example, if core-image-minimal is edited the deploy/ directory will contain
    core-image-minimal-edited-20140318-140428-qemux86.ext3 and the recipes/images/
    directory will contain the recipe core-image-minimal-edited-20140318-140428.bb.
    
    [YOCTO #5002]
    
    Signed-off-by: Marius Avram <marius.avram@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

5	2	lib/bb/ui/crumbs/builder.py
13	9	lib/bb/ui/crumbs/hobeventhandler.py
1	1	lib/bb/ui/crumbs/hoblistmodel.py
2	1	lib/bb/ui/crumbs/imageconfigurationpage.py
1	1	lib/bb/ui/crumbs/packageselectionpage.py

commit 25faef3a047f9c7564089463d7c96f6910b640cb
Author: Olof Johansson <olof.johansson@axis.com>
Date:   2014-01-20 12:03:24 +0100

    fetch2.URI: Set username/password should not change the other
    
    When setting the username after already having set the password, the password
    was unexpectedly reset. This change fixes this issue and introduces unit tests
    to make sure it doesn't happen again.
    
    Signed-off-by: Olof Johansson <olof.johansson@axis.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	2	lib/bb/fetch2/__init__.py
14	0	lib/bb/tests/fetch.py

commit c2f27ae4271985b48f957747b6ea372c8699cb49
Author: Olof Johansson <olof.johansson@axis.com>
Date:   2014-01-20 12:03:23 +0100

    fetch2.URI: Support URIs with both query strings and params
    
    There is a case in meta-intel where a SRC_URI contains both a query string and
    URI parameter:
    
     https://edc.intel.com/Download.aspx?id=6190;downloadfilename=LIN_IEMGD_1_14_GOLD_2443.tgz
    
    Python's urlparse thought the URI parameters were part of the query parameter
    value, but in the bitbake context this is obviously not the case. As bitbake's
    usage isn't really RFC compliant, we have to extract and remove the URI parameters
    *before* urlparse sees the URI.
    
    Signed-off-by: Olof Johansson <olof.johansson@axis.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

5	11	lib/bb/fetch2/__init__.py
18	0	lib/bb/tests/fetch.py

commit 1cb2b3c458c8c5521591d2c8f2e0058143fc77bb
Author: Olof Johansson <olof.johansson@axis.com>
Date:   2014-01-20 12:03:22 +0100

    fetch2.URI: add support for query parameters
    
    This change introduces the .query property of the URI class. It is a
    read/write dict of the parameters supplied in the query string of the
    URI. E.g.:
    
      http://example.com/?foo=bar => .query = {'foo': 'bar'}
    
    Signed-off-by: Olof Johansson <olof.johansson@axis.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

23	15	lib/bb/fetch2/__init__.py
30	0	lib/bb/tests/fetch.py

commit f112660bca0ed8be061055b1e388deeb2d1980a7
Author: Olof Johansson <olof.johansson@axis.com>
Date:   2014-01-20 12:03:21 +0100

    tests.fetch: Remove debug assert
    
    Signed-off-by: Olof Johansson <olof.johansson@axis.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

0	2	lib/bb/tests/fetch.py

commit 4d502578f022bcf772780550c047b8c09ba01443
Author: Olof Johansson <olof.johansson@axis.com>
Date:   2014-01-20 12:03:20 +0100

    fetch2.URI: Coerce urlparse to use netloc for all schemes
    
    Signed-off-by: Olof Johansson <olof.johansson@axis.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

15	6	lib/bb/fetch2/__init__.py

commit fa9f4eb8784553deb782bff34c5e04012c2c52c9
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2014-03-18 14:58:04 +0000

    toaster: fix task elapsed time calculation
    
    This patch restricts the elapsed calculation to just
    the events that have the "time" parameter set.
    
    This fixes an error where data was lost due to an exception
    where invalid dictionary lookups were made on the wrong
    events.
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>

8	6	lib/bb/ui/buildinfohelper.py

commit 1ba9f310a8b4fd0952a95be86ab43ae27fe6d983
Author: Dave Lerner <dave.lerner@windriver.com>
Date:   2014-03-12 16:54:09 -0500

    toaster: image information views
    
    [YOCTO # 4346]
    
    When a target image is selected, this commit adds to the toaster
    project a two-tabbed page that shows
    1) 'packages included' a table of packages included in the image
    (see target.html), and
    2) 'directory structure', the target image's file system directory
    and detailed information showing the source of each file in the
    directory table (see dirinfo.html).
    
    The directory structure tab relies on the open source jQuery plugin
    jtreetable which provides hierarchical table expansions and contractions
    of the directory entry tables as the user drills down into directories.
    
    A file of jtreetable styles that are compatible with other toaster styles
    is provided included as css/jquery.treetable.theme.toaster.css. The
    complete unaltered jtreetable plugin is added via a separate commit.
    
    This work was developed base on the bugzilla specification number 4346
    and the document "Design 1.1 Image information" attached to that report.
    
    Whitespace and typo fixes from Alex Damian.
    
    Signed-off-by: Dave Lerner <dave.lerner@windriver.com>
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>

4	1	lib/toaster/orm/models.py
1	1	lib/toaster/toastergui/static/css/default.css
38	0	lib/toaster/toastergui/static/css/jquery.treetable.theme.toaster.css
66	0	lib/toaster/toastergui/static/jquery.treetable.theme.toaster.css
2	0	lib/toaster/toastergui/templates/base.html
1	1	lib/toaster/toastergui/templates/basebuildpage.html
237	0	lib/toaster/toastergui/templates/dirinfo.html
1	1	lib/toaster/toastergui/templates/package_included_detail.html
149	4	lib/toaster/toastergui/templates/target.html
49	0	lib/toaster/toastergui/templatetags/projecttags.py
3	1	lib/toaster/toastergui/urls.py
241	17	lib/toaster/toastergui/views.py

commit 9a260d8b08053e3dcc2fe5960e060b2da1109790
Author: Dave Lerner <dave.lerner@windriver.com>
Date:   2014-03-04 15:02:58 -0600

    toaster: add jquery treetable plugin
    
    This commit includes the critical javascript and css files
    downloaded from http://plugins.jquery.com/treetable version 3.1.0.
    The following is from the author's README.md included with
    the license files in the directory static/jquery-treetable-license.
    
    "jQuery treetable is a plugin for jQuery, the 'Write Less, Do More,
    JavaScript Library'. With this plugin you can display a tree in an
    HTML table, e.g. a directory structure or a nested list...
    Download the latest release from the jQuery Plugin Registry or grab
    the source code from Github. Please report issues through Github
    issues. This plugin is released under both the MIT and the GPLv2
    license by Ludo van den Boom...
    See index.html for technical documentation and examples. The most
    recent version of this document is also available online at
    http://ludo.cubicphuse.nl/jquery-treetable. An AJAX enabled example
    built with Ruby on Rails can be found at
    https://github.com/ludo/jquery-treetable-ajax-example."
    
    Author: Ludo van den Boom
    
    The relevant files were moved to the static/js and static/css
    directories to match the existing javascript and css toaster
    deployment model.
    
    The applicable licenses and the README are in
    static/jquery-treetable-license.
    
    Signed-off-by: Dave Lerner <dave.lerner@windriver.com>

28	0	lib/toaster/toastergui/static/css/jquery.treetable.css
64	0	lib/toaster/toastergui/static/css/jquery.treetable.theme.default.css
28	0	lib/toaster/toastergui/static/css/screen.css
278	0	lib/toaster/toastergui/static/jquery-treetable-license/GPL-LICENSE.txt
20	0	lib/toaster/toastergui/static/jquery-treetable-license/MIT-LICENSE.txt
20	0	lib/toaster/toastergui/static/jquery-treetable-license/README.md
620	0	lib/toaster/toastergui/static/js/jquery.treetable.js

commit 3aca83accd6755d518d6b6c667e685020efdfb8d
Author: David Reyna <David.Reyna@windriver.com>
Date:   2014-03-13 16:18:37 -0700

    toaster: filter out setscene tasks in recipe details
    
    Filter out any *_setscene tasks in recipe details page, as
    they are not relevant.
    
    [YOCTO #5913]
    
    Signed-off-by: David Reyna <David.Reyna@windriver.com>

1	1	lib/toaster/toastergui/views.py

commit 7d93dd7a1ddb43279e0e1309ac6d935bf6b2ec97
Author: Belen Barros Pena <belen.barros.pena@intel.com>
Date:   2014-03-13 05:16:23 +0000

    toaster: Amend failed tasks behaviour
    
    In the builds table, when a build reports more than one
    failed task, the number of failed tasks should be a link
    to the tasks table with the failed tasks filter applied.
    Amend the URL to include the filter.
    
    Signed-off-by: Belen Barros Pena <belen.barros.pena@intel.com>

1	1	lib/toaster/toastergui/templates/build.html

commit dc96eecd2e8bef1b4d4fc500bf496b3edb91f808
Author: Belen Barros Pena <belen.barros.pena@intel.com>
Date:   2014-03-13 03:57:37 +0000

    toaster: Set display of "Cache attempt" column
    
    The "Cache attempt" column should display by default in the
    tasks table, but should be hidden by default in the time,
    CPU and Disk I/O tables.
    
    Signed-off-by: Belen Barros Pena <belen.barros.pena@intel.com>

5	5	lib/toaster/toastergui/views.py

commit 0d5e342d8878d8aff0ffe723be376845cccd8720
Author: Belen Barros Pena <belen.barros.pena@intel.com>
Date:   2014-03-13 03:27:31 +0000

    toaster: Remove extra space in the breadcrumb
    
    For builds with more than one target, remove the extra
    space between the '+' and the number of targets - 1.
    
    Signed-off-by: Belen Barros Pena <belen.barros.pena@intel.com>

1	1	lib/toaster/toastergui/templates/basebuildpage.html

commit 9def611e25c0d90285012cf44cb40256984368f3
Author: Belen Barros Pena <belen.barros.pena@intel.com>
Date:   2014-03-13 03:01:52 +0000

    toaster: Change "Package version" to "Version"
    
    We use "Version" everywhere else.
    
    Signed-off-by: Belen Barros Pena <belen.barros.pena@intel.com>

1	1	lib/toaster/toastergui/templates/package_included_reverse_dependencies.html

commit ed958d288de92faf8bd17a067c7a7f719dacd27d
Author: Belen Barros Pena <belen.barros.pena@intel.com>
Date:   2014-03-13 02:51:18 +0000

    toaster: Remove trailing spaces from 'name'
    
    Those extra spaces were showing in the heading of the
    filter modal dialogs.
    
    Signed-off-by: Belen Barros Pena <belen.barros.pena@intel.com>

8	8	lib/toaster/toastergui/views.py

commit 4e382ac6b5c1da497caa1ece3fcdc404dd02c058
Author: Belen Barros Pena <belen.barros.pena@intel.com>
Date:   2014-03-13 02:00:17 +0000

    toaster: Add link to the Toaster manual
    
    The Toaster manual will live at
    http://www.yoctoproject.org/documentation/toaster-manual
    and should open in a new tab / window.
    
    Signed-off-by: Belen Barros Pena <belen.barros.pena@intel.com>

1	1	lib/toaster/toastergui/templates/base.html

commit 7a08282c074c264f414cf7665dc873f51245072c
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2014-03-17 15:28:46 +0000

    toaster: measure task duration with server-side timestamps
    
    The buildstats and toaster use separate time markers to measure the
    duration of task execution. This causes a mismatch in the time
    measured by buildstats class and the time measured in toaster.
    
    The solution implemented here is to timestamp the creation of
    every TaskBase event on the bitbake server side and calculate
    the execution duration as the difference between creation time
    of TaskSucceeded and TaskStarted events.
    
    Based on an original patch by Marius Avram.
    
    [YOCTO #5485]
    
    Signed-off-by: Marius Avram <marius.avram@intel.com>
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>

2	0	lib/bb/build.py
7	4	lib/bb/ui/buildinfohelper.py

commit df9e22901555b06fef308f7136547f2c47ccec35
Author: Marius Avram <marius.avram@intel.com>
Date:   2014-03-11 18:37:06 +0200

    ConfHandlerr: Use full path in variable history
    
    When an evaluation was made for a configuration file the path to the
    file was saved as a relative one. The change in this commit will save the
    location as an absolute path. This way the user will have full information
    regarding the location of the file where a variable was changed and the
    line withing the file.
    
    [YOCTO #5562]
    
    Signed-off-by: Marius Avram <marius.avram@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/parse/parse_py/ConfHandler.py

commit 60969cd62e21e7d4af161bf8504b7643a879c73f
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2014-03-19 17:44:39 +0000

    runqueue: Remove use of waitpid on worker processes
    
    Use of waitpid on the worker processes is a bad idea since it conflicts
    directly with subprocess internals. Instead use the poll() method
    and returncode to determine if the process has exitted, if it has,
    we can shut down the system.
    
    This should resolve the hangs once and for all, famous last words.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

12	16	lib/bb/runqueue.py

commit 5b9a099ec2a1dc954b614e12a306595f55b6a99e
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2014-03-19 12:53:05 +0000

    runqueue: Revert child signal handler for now
    
    We're running into processes using 100% cpu. It appears theses are locked in
    a subprocess.poll() type loop where the process has exited but the code is
    looping as its not handling the ECHILD error.
    
    http://bugs.python.org/issue14396
    http://bugs.python.org/issue15756
    
    This is likely due to one or both of the above bugs. The question is what actually
    grabbed the child exit code as it wasn't this code. Its likely there is therefore
    some other code racing and taking that code, it may be some kind of race like:
    
    http://hg.python.org/cpython/rev/767420808a62/
    
    where the fix effectively catches the childs codes in a different part of the system.
    
    We could try and get everyone onto python 2.7.4 where the above bugs are fixed however
    for now its safer to admit defeat and go back to polling explictly for our worker exit
    codes.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

17	28	lib/bb/runqueue.py

commit fa7ffb62d510ac1124ae7e08fa4d190a710f5b54
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2014-03-19 11:29:12 +0000

    runqueue: Don't catch all child return codes
    
    Catching all child exit status values is a bad idea. Setting an http sstate mirror
    is a great way to view that spectacularly break things. The previous change did
    have good code changes so don't revert those parts.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

4	3	lib/bb/runqueue.py

commit 973876c706f08735c1b68c791a5a137e5f083dd2
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2014-03-18 22:58:52 +0000

    runqueue: Really fix sigchld handling
    
    There are several problems. Firstly, a return value of "None" can mean
    there is a C signal handler installed so we need to better handle that
    case. signal.SIG_DFL is 0 which equates to false so we also need to
    handle that by testing explicitly for None.
    
    Finally, the signal handler *must* call waitpid on all child processes
    else it will just get called repeatedly, leading to the hanging behaviour
    we've been seeing. The solution is to only error for the worker children,
    we warn about any other stray children which we'll have to figure out the
    sources of in due course.
    
    Hopefully this patch gets things working again properly though.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

14	14	lib/bb/runqueue.py

commit e39e85803cbe1ef9413a118868c19087c0546d01
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2014-03-18 11:31:14 +0000

    runqueue: Ensure handler does not recurse
    
    Failures on the autobuilder look like this handler is recursing. That
    shouldn't be possible but it doesn't hurt to code as such.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/runqueue.py

commit 79acfb0853aa3215215cee89a945f8e97b0a8fae
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2014-03-18 10:21:34 +0000

    runqueue: More carefully handle the sigchld handler
    
    We've noticed hanging processes which appear to be looping around
    waitpid. Its possible multiple calls to teardown are causing problem
    or in theory multiple registrations (although the code should not
    allow that). Regardless, put better guards around signal handler
    registration.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

4	2	lib/bb/runqueue.py

commit cc98b19112ab875ebc7cb604cd96acadac4cbf21
Author: Valentin Popa <valentin.popa@intel.com>
Date:   2014-03-17 17:53:38 +0200

    hob: sync after image deploy
    
    Showing "Deploy image successful" after 'dd' returns
    may determine the user to disconnect the usb stick even
    though the writing operations are not finished.
    This patch makes sure that the entire image is deployed
    on the usb stick before the user is informed about any result.
    
    [YOCTO #5892]
    
    Signed-off-by: Valentin Popa <valentin.popa@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/ui/crumbs/hig/deployimagedialog.py

commit ce17478c8197abf178c00774f5bbe23fd4375ee2
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2014-03-17 15:03:51 +0000

    runqueue: Don't error if we never setup workers
    
    If we didn't setup any workers (such as bitbake -S), this would error
    since we're trying to set a signal handler to None. This patch
    avoids that problem.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	1	lib/bb/runqueue.py

commit 37ae4e94d6991d4f05b0236b525e29797ed6e49c
Author: Farrell Wymore <farrell.wymore@windriver.com>
Date:   2014-03-11 14:48:52 -0700

    toaster: added file types to the Outputs column in the build page
    
    The file types are displayed in the Outputs column in the build page.
    The file types are derived from the target image filenames.
    
    [YOCTO #5947]
    
    Signed-off-by: Farrell Wymore <farrell.wymore@windriver.com>

5	1	lib/toaster/toastergui/templates/build.html
27	0	lib/toaster/toastergui/templatetags/projecttags.py

commit f339555df40307420ce80a4ef8cba1a4d284d380
Author: Belen Barros Pena <belen.barros.pena@intel.com>
Date:   2014-02-21 14:00:11 +0000

    toaster: Sort layers in alphabetical order
    
    In the Summary tab of the Configuration page, make
    sure that the table of layers is sorted by layer name
    in ascending alphabetical order.
    
    Signed-off-by: Belen Barros Pena <belen.barros.pena@intel.com>

1	1	lib/toaster/toastergui/templates/configuration.html

commit 886a87de2d36382f40830c0d28fd2f55871d0993
Author: Belen Barros Pena <belen.barros.pena@intel.com>
Date:   2014-02-21 13:48:13 +0000

    toaster: Remove the data-toggle attribute
    
    Help icons with the .get-help class do not need the
    data-toggle attribute. That attribute initialises the
    Bootstrap tooltips, but they are already initialised
    in main.js for any element with the .get-help class.
    
    Signed-off-by: Belen Barros Pena <belen.barros.pena@intel.com>

1	1	lib/toaster/toastergui/templates/basetable_top.html

commit 6cc4aaf08b51bb6cd8d1813c33989a788bd06990
Author: Belen Barros Pena <belen.barros.pena@intel.com>
Date:   2014-02-21 11:57:57 +0000

    toaster: Don't show clear search button if text input field is empty
    
    The clear search button should only show when the search text input
    field is populated. If it is empty (as it happens when a filter
    returns no results) the clear search button should not display.
    
    Signed-off-by: Belen Barros Pena <belen.barros.pena@intel.com>

1	1	lib/toaster/toastergui/templates/bpackage.html
1	1	lib/toaster/toastergui/templates/configvars.html
1	1	lib/toaster/toastergui/templates/recipes.html
1	1	lib/toaster/toastergui/templates/tasks.html

commit fa24c857e6f5b3c56f89a2a85dea6ad271f82c01
Author: Belen Barros Pena <belen.barros.pena@intel.com>
Date:   2014-02-21 07:35:58 +0000

    toaster: Fix Recipe sorting in tasks table
    
    In the tasks table and the other tables derived from it
    (Time, CPU usage and Disk I/O) sorting by Recipe was not
    working correctly. This change fixes the problem by
    specifying use of the recipe name to sort.
    
    Signed-off-by: Belen Barros Pena <belen.barros.pena@intel.com>

2	2	lib/toaster/toastergui/views.py

commit e3b3205674f606b927f1bf568202a592ca6453c9
Author: Belen Barros Pena <belen.barros.pena@intel.com>
Date:   2014-02-20 08:13:17 +0000

    toaster: Not using task_color tag for execution heading
    
    The modifications to the task_color tag in commit
    23a7c338d387ac2ba13a7a1114a4abc75228c960 broke the styling
    of failed tasks in the tasks.html template. Undo the
    changes to the task_color tag and use an if statement
    instead to set the .muted class when the execution
    heading says "Not executed".
    
    Signed-off-by: Belen Barros Pena <belen.barros.pena@intel.com>

5	4	lib/toaster/toastergui/templates/task.html
3	3	lib/toaster/toastergui/templatetags/projecttags.py

commit bbc22958ab37dcd44c03420a7b8f842a1f4e51b1
Author: Belen Barros Pena <belen.barros.pena@intel.com>
Date:   2014-02-20 07:06:51 +0000

    toaster: Presentation fixes for task.html
    
    Tidying up the presentation in the task.html template.
    The changes include:
    
    * Correct the markup for the help tooltips
    * Fix the help content for the outcome heading
    * Make sure <dt> tags do not show for empty log
    file, time, cpu and disk I/O values
    * Eliminate an extra <dl> for tasks with sstate attempts
    * Add <strong> tag to the sstate restored alert
    * Replace the .alert-info class with the .muted class
    for the no dependencies messages
    * Make sure the Executed heading does not inherit
    the .red class for failed tasks
    * Format time and cpu values to make sure they only
    show 2 decimal digits
    
    Signed-off-by: Belen Barros Pena <belen.barros.pena@intel.com>
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>

1	1	lib/toaster/toastergui/static/css/default.css
22	14	lib/toaster/toastergui/templates/task.html
3	3	lib/toaster/toastergui/templatetags/projecttags.py

commit 6147339ac2f93a9e60eed8975ac1784caa06bb0b
Author: Belen Barros Pena <belen.barros.pena@intel.com>
Date:   2014-02-20 15:00:59 +0000

    toaster: Shorten dependency labels
    
    Changing "Task depends on" to "Dependencies" and
    "Task reverse dependencies" to "Reverse dependencies".
    This matches the labeling to recipe and package
    information, with the additional advantage of
    making the labels shorter.
    
    Signed-off-by: Belen Barros Pena <belen.barros.pena@intel.com>

2	2	lib/toaster/toastergui/templates/task.html

commit 5e45f2bb4b0d9b56b5f4734cf40d3a267654ccb9
Author: Belen Barros Pena <belen.barros.pena@intel.com>
Date:   2014-02-20 14:58:49 +0000

    toaster: Give an extra space to the caret
    
    In the "Collapse variable value" button in configvars.html,
    the caret was too close to the button label. Giving it
    a bit of extra space.
    
    Signed-off-by: Belen Barros Pena <belen.barros.pena@intel.com>

1	1	lib/toaster/toastergui/templates/configvars.html

commit 3feff77091b3926c10ca8f30890c9049633ccb66
Author: Belen Barros Pena <belen.barros.pena@intel.com>
Date:   2014-02-20 14:32:32 +0000

    toaster: Add no search results page
    
    Adding the no search results page to the built packages
    (bpackage.html), variables (configvars.html), recipes
    (recipes.html) and tasks (tasks.html) tables.
    
    The change copies the code from the build.html template
    into the other 4 templates. There is probably a smarter way
    of doing this, though.
    
    Signed-off-by: Belen Barros Pena <belen.barros.pena@intel.com>

13	0	lib/toaster/toastergui/templates/bpackage.html
14	0	lib/toaster/toastergui/templates/configvars.html
14	0	lib/toaster/toastergui/templates/recipes.html
15	0	lib/toaster/toastergui/templates/tasks.html

commit a58b88aebfde54ea97740f27335582fac195dfdc
Author: Belen Barros Pena <belen.barros.pena@intel.com>
Date:   2014-02-20 13:11:00 +0000

    toaster: Fixing "Show all builds" link
    
    Replacing the placeholder attribute with the value attribute
    in the no search results page broke the "Show all builds" link.
    This change applies the inline javacript used for the clear search
    button for the "Show all builds" link, which fixes the problem.
    
    Signed-off-by: Belen Barros Pena <belen.barros.pena@intel.com>

1	1	lib/toaster/toastergui/templates/build.html

commit cc478b3b0befc0c8fce93d896074f8d07eaac362
Author: Belen Barros Pena <belen.barros.pena@intel.com>
Date:   2014-02-20 12:43:37 +0000

    toaster: Amend help text in package_built_detail.html
    
    Matching the help text in the tabs to the design specification.
    
    Signed-off-by: Belen Barros Pena <belen.barros.pena@intel.com>

2	2	lib/toaster/toastergui/templates/package_built_detail.html

commit 4ada4307623c1e27b589831d359dc6351e6e3ad5
Author: Belen Barros Pena <belen.barros.pena@intel.com>
Date:   2014-02-20 11:36:13 +0000

    toaster: Small tweaks to the no results page
    
    Correctly align the Search button to the text input field,
    add .btn class to the clear search button, replace the
    placeholder attribute with the value attribute so that you
    can edit your search query, remove the clear search button
    from the tab index so that you don't clear the search by
    mistake and edit the margins of the .no-results class.
    
    Signed-off-by: Belen Barros Pena <belen.barros.pena@intel.com>
    
    Conflicts:
            bitbake/lib/toaster/toastergui/templates/build.html

1	1	lib/toaster/toastergui/static/css/default.css
5	7	lib/toaster/toastergui/templates/build.html

commit c0820f93e0387d2b6ead9e2fa7205d49001d27e6
Author: Belen Barros Pena <belen.barros.pena@intel.com>
Date:   2014-02-20 10:14:41 +0000

    toaster: Replace hyphens with underscores in package name
    
    Package details pages were using hyphens to separate package
    name from package version. Changing them to underscores.
    
    Signed-off-by: Belen Barros Pena <belen.barros.pena@intel.com>

2	2	lib/toaster/toastergui/templates/package_detail_base.html
2	2	lib/toaster/toastergui/templates/package_included_dependencies.html
2	2	lib/toaster/toastergui/templates/package_included_detail.html
2	2	lib/toaster/toastergui/templates/package_included_reverse_dependencies.html

commit 018db5cf683755a7a41b0ef491e130809e1ff003
Author: Belen Barros Pena <belen.barros.pena@intel.com>
Date:   2014-02-20 09:46:22 +0000

    toaster: Format package size in recipe.html
    
    Package sizes in the recipe details page (recipe.html)
    were displaying in bytes. Apply the filtered_filesizeformat
    project tag to show the package size in a more human
    readable format.
    
    Signed-off-by: Belen Barros Pena <belen.barros.pena@intel.com>

1	1	lib/toaster/toastergui/templates/recipe.html

commit a928e0cfb82dac0eb920913e3f9c5b45e3dcdf2f
Author: Belen Barros Pena <belen.barros.pena@intel.com>
Date:   2014-02-20 02:46:25 +0000

    toaster: Make Order column part of the minimum table
    
    The Order column in the tasks table should be always shown and
    be part of the minimum table (i.e. its checkbox should be
    disabled in the Edit columns menu). Changing views.py to
    make sure this is the case.
    
    Signed-off-by: Belen Barros Pena <belen.barros.pena@intel.com>

1	1	lib/toaster/toastergui/views.py

commit 0c111b24e9f86130bc43c1327a6d12026e92cdf2
Author: Belen Barros Pena <belen.barros.pena@intel.com>
Date:   2014-02-20 01:20:47 +0000

    toaster: Move <tbody> outside for statement
    
    In the package details pages, the <tbody> tags where inside
    the for statements, which caused multiple <tbody> tags to
    be generated inside a single table.
    
    To make sure only one <tbody> tag exists per table, moving
    the <tbody> tag outside the for statement.
    
    Signed-off-by: Belen Barros Pena <belen.barros.pena@intel.com>

34	36	lib/toaster/toastergui/templates/package_built_dependencies.html
5	5	lib/toaster/toastergui/templates/package_built_detail.html
9	10	lib/toaster/toastergui/templates/package_included_dependencies.html
4	4	lib/toaster/toastergui/templates/package_included_detail.html
4	4	lib/toaster/toastergui/templates/package_included_reverse_dependencies.html

commit c350e4924abab8688c539608fd7f3af687d7265a
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2014-03-14 16:59:27 +0000

    toaster: improve recipe matching for native tasks
    
    This patch improves the recipe matching algorithm for
    for matching recipes for native tasks.
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>

12	6	lib/bb/ui/buildinfohelper.py

commit 9f34a1c5e94d73cdba1def7059c60211514e054c
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2014-03-13 15:15:38 +0000

    toaster: fix target file inode type information
    
    This patches fixes the inode type saved when writing the
    target file list information.
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>

4	4	lib/bb/ui/buildinfohelper.py

commit 81413d94f40f58d790d7a7dc4259108f9c5d4fc0
Author: Marius Avram <marius.avram@intel.com>
Date:   2014-03-12 14:03:49 +0200

    bitbake: cooker: some IMAGE_FEATURES not recognized
    
    Fixes an issue in hob which happened when the local.conf file was
    modified externally by appending "eclipse-debug" to the IMAGE_FEATURES
    variable. The reason of the problem is that some IMAGE_FEATURES are
    not available in the image.bbclass file and they are declared in the
    core-image.bbclass. Now a default hob image will inherit core-image.
    
    [YOCTO #5711]
    
    Signed-off-by: Marius Avram <marius.avram@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/cooker.py

commit 2004c0fd1dd049d26279ee10a18e69e6852247fa
Author: Amit Kumar Chaudhary <amit@floatingpondtech.com>
Date:   2014-03-12 18:47:42 +0000

    toaster: add errors and warnings listing
    
    Add the errors and warnings listing to the build
    dashboard page.
    
    Signed-off-by: Amit Kumar Chaudhary <amit@floatingpondtech.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

20	0	lib/toaster/toastergui/static/js/main.js
54	2	lib/toaster/toastergui/templates/builddashboard.html
2	1	lib/toaster/toastergui/views.py

commit afd73f8ee47d0fcf600fa919f2d2bc1b7d2eeadf
Author: Ravi Chintakunta <ravi.chintakunta@timesys.com>
Date:   2014-03-12 18:47:41 +0000

    toaster: Add counters to filters
    
    Added count to filters in Build, Tasks and Config variables.
    
    [YOCTO #5821]
    
    Signed-off-by: Ravi Chintakunta <ravi.chintakunta@timesys.com>
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

13	4	lib/toaster/toastergui/templates/filtersnippet.html
45	36	lib/toaster/toastergui/views.py

commit 911b5191133956c30d53f57629c115db196b9ac8
Author: Cristiana Voicu <cristiana.voicu@intel.com>
Date:   2014-03-12 18:47:40 +0000

    toaster: add license manifest path to database
    
    Based on image_name, the target is obtained, and the path
    is added to the database.
    
    [YOCTO #5649]
    
    Signed-off-by: Cristiana Voicu <cristiana.voicu@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

14	0	lib/bb/ui/buildinfohelper.py
5	3	lib/bb/ui/toasterui.py

commit a0b06d362b9aa08fda293489467af343c6ca6de4
Author: Cristiana Voicu <cristiana.voicu@intel.com>
Date:   2014-03-12 18:47:39 +0000

    toaster: populate target image file table
    
    Using ImageFileSize Metadata event, the image output file and its
    size are populated into target_image_file table.
    
            [YOCTO #5189]
            [YOCTO #5228]
    
    Signed-off-by: Cristiana Voicu <cristiana.voicu@intel.com>
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

13	0	lib/bb/ui/buildinfohelper.py
2	0	lib/bb/ui/toasterui.py
1	0	lib/toaster/bldviewer/api.py
2	1	lib/toaster/bldviewer/views.py

commit fe8baaa2f533db7a1b7203476c675588923d8d45
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2014-03-11 18:09:37 +0000

    runqueue: Improve sigchld handler
    
    The sigchld handler was reaping any processes and this was leading to
    confusion with any other process handling code that could be active.
    This patch:
    
    a) Ensures we only read any process results for the worker processes
       we want to monitor
    b) Ensures we pass the event to any other sigchld handler if
       it isn't an event we're interested in so the functions are properly
       chained.
    
    Together this should resolve some of the reports of unknown processes
    people have been reporting.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

10	5	lib/bb/runqueue.py

commit a53c8d1f846d94082aa459996c4114f10970b8ef
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2014-03-12 03:16:12 +0000

    bitbake-worker: Ensure children have default sigterm handler
    
    The children of the worker should have the default SIGTERM handler,
    else they'll try and do cleanup which should only happen in the
    parent leading to all kinds of bizarre build failures.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	0	bin/bitbake-worker

commit 98b991287df06cd89955c1d0591fce3b5d4403d1
Author: Ross Burton <ross.burton@intel.com>
Date:   2014-03-10 15:28:48 +0000

    bitbake: fix typo in variable name
    
    When passing -t with an incorrect server type, the error message was using a
    variable that doesn't exist.
    
    Signed-off-by: Ross Burton <ross.burton@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	bin/bitbake

commit e84866b7aa5a1b272c81fde548f3c7828b036bb9
Author: David Reyna <David.Reyna@windriver.com>
Date:   2014-03-07 21:48:59 -0800

    toaster: fix 'show all' labels for tasks and variables
    
    Fix the 'Show all' button label to indicate 'variables' and 'tasks'
    instead of the internal page label for the variables page and the
    Disk I/O, CPU Usage, and Time pages.
    
    [YOCTO #5915]
    
    Signed-off-by: David Reyna <David.Reyna@windriver.com>

1	1	lib/toaster/toastergui/templates/basetable_top.html

commit 3c41481fd00056712348d305d0246d84e9a2ff0a
Author: David Reyna <David.Reyna@windriver.com>
Date:   2014-03-07 21:58:29 -0800

    toaster: add 'bblayers.conf' files to local config filter
    
    In the variables table, add to the local configuration
    filter the 'bblayers.conf' in addition to the 'local.conf'
    files.
    
    [YOCTO #5912]
    
    Signed-off-by: David Reyna <David.Reyna@windriver.com>

3	1	lib/toaster/toastergui/views.py

commit 874b627b96809c274023b5fa330dfbdd14676d19
Author: David Reyna <David.Reyna@windriver.com>
Date:   2014-03-06 22:15:58 -0800

    toaster: add empty outcome support to task page
    
    Add the new "empty" outcome value to the task detail page,
    with help text, help notice, plus sorting for empty in the
    tasks page.
    
    [YOCTO #5917]
    
    Signed-off-by: David Reyna <David.Reyna@windriver.com>

1	0	lib/toaster/orm/models.py
4	0	lib/toaster/toastergui/templates/task.html
1	1	lib/toaster/toastergui/views.py

commit f3001af0b73f103a5d37af180e8c4c54a6249e97
Author: Belen Barros Pena <belen.barros.pena@intel.com>
Date:   2014-02-21 08:58:01 +0000

    toaster: Fix help text for task details outcome
    
    Changes made to models.py and task.html to make sure the
    help text for the task outcome is displayed.
    
    [YOCTO #5917]
    
    Signed-off-by: Belen Barros Pena <belen.barros.pena@intel.com>

10	10	lib/toaster/orm/models.py
1	1	lib/toaster/toastergui/templates/task.html

commit 5d6594de8876be8ce4df56b846fee0fc687a6261
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2014-03-07 15:10:50 +0000

    toaster: erase checks for stop command
    
    We remove the checks for the stop command, since we assume
    the user really means it wants to shutdown the system when
    he issues the command.
    
            [YOCTO #5376]
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>

2	15	bin/toaster

commit e9a8c32512bb270cda3dee4a3ed5fd22204c24bc
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2014-03-06 16:34:50 +0000

    toaster: add commands to list and delete builds
    
    We add Django commands for the manage.py to manage the database
    content.
    
    The two commands added are:
    * buildslist - produces a list of current builds
    * builddelete - deletes a build and all associated data from the database
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>

0	0	lib/toaster/toastermain/management/__init__.py
0	0	lib/toaster/toastermain/management/commands/__init__.py
33	0	lib/toaster/toastermain/management/commands/builddelete.py
13	0	lib/toaster/toastermain/management/commands/buildslist.py

commit f3a69ef7cc536a4b879d60936199a1002584c4f4
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2014-03-06 16:31:40 +0000

    toaster: write files-in-image to the database
    
    Adding code to write files-in-image data from the metadata
    event to the database.
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>

113	2	lib/bb/ui/buildinfohelper.py

commit f8488845ee9670e16a63c331dd2e97fdb314929c
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2014-03-06 18:22:38 +0000

    toaster: update database schema
    
    This is a schema update to account for
    
    * relaxing constraints in Target_Image_File table
    * modifying permission filed to string value
    * adding license_manifest_path field
    * adding image_size field
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>

235	0	lib/toaster/orm/migrations/0006_auto__add_field_target_image_size__add_field_target_license_manifest_p.py
6	5	lib/toaster/orm/models.py

commit 76029d08ad56a0a264ff9738a0336971a455b7f5
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2014-03-09 17:59:53 -0700

    runqueue: Use SIGCHLD instead of polling waitpid
    
    Instead of a significant number of calls to waitpid, register a SIGCHLD
    handler instead.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

19	14	lib/bb/runqueue.py

commit 069d6538f83b607cb46c6fe21bf6c596e8b99242
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2014-03-09 17:59:10 -0700

    server/process: Optimise latency when finishing idle functions
    
    When idle functions finish, its likely we have some other work
    to do, so don't sleep in the select call but instead, skip it.
    This removes small amounts of latency in common commands.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	0	lib/bb/server/process.py

commit 8e75ee29ae07e13f23525c5c6045fbf6cdbe7675
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2014-03-09 17:58:36 -0700

    server/process: Drop unnecessary exit delay
    
    When the server exits, we no longer appear to need this delay. This
    is likely due to improvements in the various exit codepaths. There
    is therefore no longer any point in taking the latency hit.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

0	1	lib/bb/server/process.py

commit def28239b0f0d5f1cf13214b263114a5328538b7
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2014-03-09 17:58:02 -0700

    server/process: Use a pipe for quit events instead of Event()
    
    Its not possible to notice the change of status of an Event() in
    the select call we sleep in. It would be possible in python 3.3 but
    for now use a pipe instead. This removes small latency when bitbake
    commands finish since the system doesn't sit in the select call.
    
    (Debugging these kind of issues is apparent by setting a long sleep
    for the select call)
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

9	5	lib/bb/server/process.py

commit f147b41bcaf9d05b5ba3a70100f1ca799979aee7
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2014-03-09 17:57:11 -0700

    knotty: Remove latency when exiting
    
    There is no point in waiting 0.25s for when we should be processing
    the shutdown. This simply reordering removes latency from the
    bitbake command.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	2	lib/bb/ui/knotty.py

commit c4ee342300bf905e6e3bef581c61b86289461536
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2014-03-09 17:56:18 -0700

    knotty: Add missing continue statement for runQueueExitWait event
    
    The continue statement was missing for this event and the event was then
    listed in the "known safe to ignore list". Clean this up.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	2	lib/bb/ui/knotty.py

commit d2677f084fe1d8846db77d89ef5e6ffb18dc171a
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2014-03-09 17:55:45 -0700

    providers/runqueue/taskdata: Optimise logger.debug calls
    
    A run of "bitbake bash -c unpack" when the task has already been
    completed resulted in about 9000 calls to logger.debug(). With this
    patch which comments out some noisy/less usefull logging and moves
    other logging calls outside loops, this number is reduced to 1000
    calls. This results in cleaner logs and gives a small but
    measurable 0.15s speedup. The log size dropped from 900kb to 160kb.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/providers.py
1	1	lib/bb/runqueue.py
9	3	lib/bb/taskdata.py

commit 00c22434123739b0819b31d7b1d353901a3e12da
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2014-03-09 10:05:54 -0700

    cooker: Handle SIGTERM more gracefully
    
    If the cooker receives a SIGTERM it currently hangs using 100% CPU,
    
    This patch adds in an intercept for the event and puts the cooker into
    shutdown mode allowing it to exit cleanly/safely and avoiding the hang.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

7	0	lib/bb/cooker.py

commit 0d12041eceeae6bba2034b04913bb13abd67bd15
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2014-03-09 10:04:41 -0700

    server/process: Deal more gracefully with SIGTERM
    
    Currently a SIGTERM to the UI process causes the UI simply to lock up.
    
    By setting an exit flag, the waitEvent can raise a SIGINT, allowing the
    UI to break out the event loop and exit. Currently this is results in a
    traceback but that is more desirable than a hanging process.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

15	1	lib/bb/server/process.py

commit 74532a7cf8ccea8b85f1cda5d5bc23d2f3c72a08
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2014-03-09 10:02:50 -0700

    server/process: Use the setFeatures command on the server instead of a manger
    
    The use of a manager in the process server causes some issues since it remains
    around for the lifetime of the server even though its only used during
    initialisation and the system doesn't respond well to SIGTERM events
    to the extra process (and two threads) the implementation involves.
    
    Switching to a dedicated command simplifies the server process structure.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

8	13	lib/bb/server/process.py

commit f547d6ec6cfd677d71fa96dd3c69823c00dc6c69
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2014-03-09 10:02:08 -0700

    cooker/command: Add setFeatures command
    
    Add a command to allow backends to set particular 'features' on the
    cooker (server).
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

7	0	lib/bb/command.py
8	0	lib/bb/cooker.py

commit 1b1672e1ceff17fc4ff8eb7aa46f59fce3593873
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2014-03-09 10:01:19 -0700

    runqueue.py: Gracefully handle a missing worker process
    
    If the worker has already gone missing (e.g. SIGTERM), we should
    gracefully handle the write failures at exit time rather than throwing
    ugly tracebacks.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

14	7	lib/bb/runqueue.py

commit ee28ddadaa7ef91e4d4b7d22fc267382aaad6d01
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2014-03-09 10:00:17 -0700

    runqueue.py: Handle worker disappearing gracefully
    
    If the worker (or fakeworker) process disappears for some reason, the
    system doesn't currently even notice. To fix this, we call waitpid
    periodically, looking for exit events of our children. If these
    occur, we can gracefully shutdown the server.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

22	5	lib/bb/runqueue.py

commit 551406f3f9ee94de09d2da6e16fea054c6dbfdb7
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2014-03-09 09:59:19 -0700

    bitbake-worker: Gracefully handle SIGTERM
    
    Currently if bitbake-worker handles a SIGTERM, it leaves the child
    processes to complete or hang. It shouldn't do this so hook the SIGTERM
    event and gracefully shutdown any children.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

8	0	bin/bitbake-worker

commit e1d89166f2dfe46412ff9a5610dd57b0cef74fe3
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2014-03-09 09:58:01 -0700

    knotty: Deal with exceptions not resetting terminal configuration
    
    When an exception occurred, the terminal parameters (such as echo)
    may not be reset correctly. This change ensures they do get
    atexit time in all cases, avoiding the terminal corruption issues
    that could sometimes occur.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	2	lib/bb/ui/knotty.py

commit 2d4b09be70c6df0c1605f7e291149c682999cf50
Author: Scott Rifenbark <scott.m.rifenbark@intel.com>
Date:   2014-03-07 12:41:08 -0600

    user-manual: Review edits applied throughout from Paul Eggleton.
    
    Applied review edits from Paul Eggleton spanning the entire book.
    Small areas affected in all chapters except the "Hello World"
    Appendix.
    
    Noteworthy changes in the variables chapter where I added two new
    variables: BBINCLUDELOGS_LINES and BB_CONSOLELOG.
    
    Signed-off-by: Scott Rifenbark <scott.m.rifenbark@intel.com>

7	5	doc/user-manual/user-manual-execution.xml
1	1	doc/user-manual/user-manual-fetching.xml
9	7	doc/user-manual/user-manual-intro.xml
20	20	doc/user-manual/user-manual-metadata.xml
34	19	doc/user-manual/user-manual-ref-variables.xml

commit 5cd310d1df194cd171691a4bcfb98024e2bc66b8
Author: Scott Rifenbark <scott.m.rifenbark@intel.com>
Date:   2014-03-06 09:48:37 -0600

    user-manual: Review edits applied from Paul Eggleton.
    
    Review of the entire manual by Paul.  I have implemented his
    suggestions throughout.
    
    Signed-off-by: Scott Rifenbark <scott.m.rifenbark@intel.com>

17	45	doc/user-manual/user-manual-execution.xml
5	6	doc/user-manual/user-manual-fetching.xml
42	39	doc/user-manual/user-manual-intro.xml
51	36	doc/user-manual/user-manual-metadata.xml

commit fbbd4cd54753a5d91b5c342d60d007bd2b172570
Author: Scott Rifenbark <scott.m.rifenbark@intel.com>
Date:   2014-03-04 14:10:36 -0600

    user-manual: removed SVK references - all types.
    
    Signed-off-by: Scott Rifenbark <scott.m.rifenbark@intel.com>

0	4	doc/user-manual/user-manual-fetching.xml
0	2	doc/user-manual/user-manual-ref-variables.xml

commit 97acce37528ed11165e37996c7076de46c349b0a
Author: Scott Rifenbark <scott.m.rifenbark@intel.com>
Date:   2014-03-04 14:05:45 -0600

    user-manual-ref-variables.xml: Edits to BB_GENERATE_MIRROR_TARBALLS variable
    
    Added some clarification around who would like to set this
    variable and why.
    
    Signed-off-by: Scott Rifenbark <scott.m.rifenbark@intel.com>

2	0	doc/user-manual/user-manual-ref-variables.xml

commit d4328e2df355252870c3bf01031538a77795cedb
Author: Scott Rifenbark <scott.m.rifenbark@intel.com>
Date:   2014-03-04 14:03:01 -0600

    user-manual-metadata.xml: Added BB_ORIGENV example.
    
    Signed-off-by: Scott Rifenbark <scott.m.rifenbark@intel.com>

9	0	doc/user-manual/user-manual-metadata.xml

commit 71e314b86957ecc01d77262d0a000f6f31db2bcc
Author: Scott Rifenbark <scott.m.rifenbark@intel.com>
Date:   2014-03-04 13:58:37 -0600

    user-manual-metadata.xml: Grammar fix.
    
    Signed-off-by: Scott Rifenbark <scott.m.rifenbark@intel.com>

1	1	doc/user-manual/user-manual-metadata.xml

commit 714c0e93bc2d1ae6227991a1c6e4c88504c1870c
Author: Scott Rifenbark <scott.m.rifenbark@intel.com>
Date:   2014-03-04 11:52:01 -0600

    user-manual-execution.xml: Review edits for "Execution" chapter.
    
    Applied various changes from Richard Purdie's review of the
    "Execution" chapter.
    
    Signed-off-by: Scott Rifenbark <scott.m.rifenbark@intel.com>

33	22	doc/user-manual/user-manual-execution.xml

commit 8ec38c6b456a92a0e0b9b04c2793a5b148be5027
Author: Scott Rifenbark <scott.m.rifenbark@intel.com>
Date:   2014-02-25 17:56:24 -0600

    user-manual: Review edits from Richard (second draft)
    
    Applied the comprehensive set of review comments from Richard
    Purdie.  All files affected.  One major point here was that the
    "BitBake Command" chapter was eliminated.  This information was
    folded into various areas of the book.  Consequently, the bits
    including the file for make had to be updated.
    
    Signed-off-by: Scott Rifenbark <scott.m.rifenbark@intel.com>

0	341	doc/user-manual/user-manual-bitbakecommand.xml
264	65	doc/user-manual/user-manual-execution.xml
1	1	doc/user-manual/user-manual-fetching.xml
249	1	doc/user-manual/user-manual-intro.xml
61	2	doc/user-manual/user-manual-metadata.xml
4	5	doc/user-manual/user-manual-ref-variables.xml
0	2	doc/user-manual/user-manual.xml

commit 80e9306c288ca2ab42585f99fb0f396253cb8253
Author: Scott Rifenbark <scott.m.rifenbark@intel.com>
Date:   2014-02-19 16:15:38 -0600

    user-manual: Added "Hello World" Appendix.
    
    I took Bill's chapter and made it into an appendix.  I did some
    re-writing to make it not so much like a getting-started feel,
    although it still leans way that way for an appendix.  The content
    is not complete.
    
    Had to add in a line to the user-manual.xml file so that the
    new appendix would be part of the book.
    
    Had to use a different form of the command in the
    user-manual-cusomization.xsl file in order to not through a bunch
    of errors for an unrecognized parameter value.  I commented out
    the existing one.
    
    Signed-off-by: Scott Rifenbark <scott.m.rifenbark@intel.com>

2	1	doc/user-manual/user-manual-customization.xsl
113	100	doc/user-manual/user-manual-hello.xml
2	0	doc/user-manual/user-manual.xml

commit fad9a6258f8c04bbe0168e46898dd27b86c39ee0
Author: Scott Rifenbark <scott.m.rifenbark@intel.com>
Date:   2014-02-18 17:43:15 -0600

    user-manual-fetching.xml: Re-write of the Fetching chapter.
    
    Based on a Richard Purdie re-write.
    
    Signed-off-by: Scott Rifenbark <scott.m.rifenbark@intel.com>

436	146	doc/user-manual/user-manual-fetching.xml

commit f955171d8468ed987f92146d39f52d9af4a03dbb
Author: Scott Rifenbark <scott.m.rifenbark@intel.com>
Date:   2014-02-18 14:50:13 -0600

    user-manual-metadata.xml: Title change, sections lifted.
    
    Changed the title of the chapter to "Syntax and Operators".  It
    was called "Metadata".
    
    Removed the bulk the "Checksums (Signatures)" section and the
    placeholder for "Setscene".  These are now in the "Execution"
    chapter.
    
    Created a more appropriate overview blurb to start the chapter.
    
    Signed-off-by: Scott Rifenbark <scott.m.rifenbark@intel.com>

8	200	doc/user-manual/user-manual-metadata.xml

commit de1c316a3f5f382c66b58ad2539b4fadb0f000db
Author: Scott Rifenbark <scott.m.rifenbark@intel.com>
Date:   2014-02-18 14:48:46 -0600

    user-manual-fetching.xml: Removed a link.
    
    The link no longer applied as it was linking to a removed
    section from the "Execution" chapter.
    
    Signed-off-by: Scott Rifenbark <scott.m.rifenbark@intel.com>

0	3	doc/user-manual/user-manual-fetching.xml

commit 4a740385a4720e040af3d329d9c7cc77b03e7f46
Author: Scott Rifenbark <scott.m.rifenbark@intel.com>
Date:   2014-02-18 14:46:13 -0600

    user-manual-execution.xml: Review edits applied.
    
    Significant review changes implemented from Richard Purdie.
    
    * Eliminated the lifted text from the "Closer Look" chapter
      of the YP ref-manual.
    
    * Added the "BitBake" chapter in from the YP ref-manual.
    
    * Significant re-writes and suggestions throughout the
      entire chapter.
    
    Signed-off-by: Scott Rifenbark <scott.m.rifenbark@intel.com>

364	362	doc/user-manual/user-manual-execution.xml

commit c6c912cf875766036b91af785f257f64ff07146c
Author: Scott Rifenbark <scott.m.rifenbark@intel.com>
Date:   2014-02-18 07:49:12 -0600

    user-manual-intro.xml: Review edits to Introduction chapter.
    
    Applied review edits to the introduction chapter as suggested
    by Richard Purdie.
    
    Signed-off-by: Scott Rifenbark <scott.m.rifenbark@intel.com>

70	62	doc/user-manual/user-manual-intro.xml

commit 6c4c6fb689b88dbefe63f0062b78d8403fb80d41
Author: Scott Rifenbark <scott.m.rifenbark@intel.com>
Date:   2014-02-14 13:55:42 -0600

    user-manual-execution.xml: Draft of "Execution" chapter
    
    This is a rough draft of the chapter.  Major sections are in
    place.  We need to scrub content now.
    
    Seems like the discussion of BBFILES fit better in this
    execution flow chapter.  So, I moved it above the parsing
    section.
    
    Signed-off-by: Scott Rifenbark <scott.m.rifenbark@intel.com>

69	95	doc/user-manual/user-manual-bitbakecommand.xml
633	670	doc/user-manual/user-manual-execution.xml

commit 38c3ead4ac8036ac88e83a938aa4ce484d4a6a84
Author: Scott Rifenbark <scott.m.rifenbark@intel.com>
Date:   2014-02-14 13:55:03 -0600

    user-manual-intro.xml: Added sections
    
    Added the append files and layer subsections.
    
    Signed-off-by: Scott Rifenbark <scott.m.rifenbark@intel.com>

55	0	doc/user-manual/user-manual-intro.xml

commit 5aa6679aa8b5b6b8bf4b43cabde04072498ccea4
Author: Scott Rifenbark <scott.m.rifenbark@intel.com>
Date:   2014-02-14 07:46:01 -0600

    user-manual-bitbakecommand.xml: Added anchor tag for the chapter.
    
    Signed-off-by: Scott Rifenbark <scott.m.rifenbark@intel.com>

1	1	doc/user-manual/user-manual-bitbakecommand.xml

commit 0f82dc4c22ce015bef87fd5aae0b6fa3e429016e
Author: Scott Rifenbark <scott.m.rifenbark@intel.com>
Date:   2014-02-11 20:00:02 -0600

    user-manual-fetching.xml: Re-write of "File Download Support" chapter.
    
    Basic re-write to clean up text and flow.
    
    Signed-off-by: Scott Rifenbark <scott.m.rifenbark@intel.com>

271	161	doc/user-manual/user-manual-fetching.xml

commit f3b21d1fb711f9625d2ac92d4f4fe0f269242bd7
Author: Scott Rifenbark <scott.m.rifenbark@intel.com>
Date:   2014-02-11 13:45:54 -0600

    user-manual: Added new chapter to cover BB execution.
    
    This commit added need files, cleaned up bogus links, and
    adjusted the build file, which is user-manual.xml.
    
    The new chapter file is "user-manual-execution.xml". The file
    has base text from the bitbake section from the "Closer Look"
    chapter of the YP ref-manual.  This means that I had to initially
    include some figures from that book for now.  I am not including
    them as part of this commit though as they will likely get renamed.
    I made sure that all links were removed that were specific to the
    YP ref-manual.
    
    Another change was in the user-manual.xml file to include
    the new chapter as part of the build.
    
    Another block of text for the new chapter was the "Running a Task"
    section from the user-manual-metadata.xml file.  Consequently, that
    section was deleted from the "Metafile" chapter.
    
    Another block of text for the new chapter was the "Parsing
    and Execution" section from the user-manual-metadata.xml file.
    Consequently, that section was deleted from the "Metafile chapter.
    
    Signed-off-by: Scott Rifenbark <scott.m.rifenbark@intel.com>

690	0	doc/user-manual/user-manual-execution.xml
0	333	doc/user-manual/user-manual-metadata.xml
2	0	doc/user-manual/user-manual.xml

commit b9704a367cccd85931fa4fb779d273a27361d503
Author: Scott Rifenbark <scott.m.rifenbark@intel.com>
Date:   2014-02-11 07:21:58 -0600

    user-manual-intro.xml: Added an introduction to the manual.
    
    Describes purpose and qualifies some stuff.
    
    Signed-off-by: Scott Rifenbark <scott.m.rifenbark@intel.com>

11	0	doc/user-manual/user-manual-intro.xml

commit 8bcc6d1f1ef4e647ad6153ed7a9e0bd5bc62cf0b
Author: Scott Rifenbark <scott.m.rifenbark@intel.com>
Date:   2014-02-11 07:11:07 -0600

    user-manual-ref-variables.xml: Added a note qualifying the variables.
    
    The note provides some information in general about the variables
    that are part of the glossary.
    
    Signed-off-by: Scott Rifenbark <scott.m.rifenbark@intel.com>

22	0	doc/user-manual/user-manual-ref-variables.xml

commit f74045d9ac88aece1d6f8d6a95389d01971ffdac
Author: Scott Rifenbark <scott.m.rifenbark@intel.com>
Date:   2014-02-11 07:02:14 -0600

    user-manual-metadata.xml: WIP - Some edits in the checksum area.
    
    Signed-off-by: Scott Rifenbark <scott.m.rifenbark@intel.com>

64	23	doc/user-manual/user-manual-metadata.xml

commit ee23839596102ccd58e028c10471438f2eb37feb
Author: Scott Rifenbark <scott.m.rifenbark@intel.com>
Date:   2014-02-10 20:25:53 -0600

    user-manual-metadata.xml: Rewrite "Accessing Datastore Variables Using Python"
    
    Rewrote this section.  Used a table instead of the funky list
    that was there.  I still need to format it some.
    
    Also fixed up the term "datastore".  It should not be "data store"
    
    Signed-off-by: Scott Rifenbark <scott.m.rifenbark@intel.com>

87	65	doc/user-manual/user-manual-metadata.xml

commit b11ad97b9334a86b2f3b10bdf5597910854475bd
Author: Scott Rifenbark <scott.m.rifenbark@intel.com>
Date:   2014-02-10 16:18:47 -0600

    user-manual-metadata.xml: Re-write the "Dependencies" section.
    
    General edits and dumping of the useless "Overview" section.
    
    Signed-off-by: Scott Rifenbark <scott.m.rifenbark@intel.com>

73	41	doc/user-manual/user-manual-metadata.xml

commit 7149ab6f6e936c19d681f05aa64b123c10f2f3da
Author: Scott Rifenbark <scott.m.rifenbark@intel.com>
Date:   2014-02-10 12:31:56 -0600

    user-manual-metadata.xml: Re-write of "Variants - Class Extension Mechanism" section.
    
    Some general rewrites here.
    
    Signed-off-by: Scott Rifenbark <scott.m.rifenbark@intel.com>

40	29	doc/user-manual/user-manual-metadata.xml

commit 0ee8e8db8475903754d519c5e6d7ec8e52ba9c85
Author: Scott Rifenbark <scott.m.rifenbark@intel.com>
Date:   2014-02-10 12:31:21 -0600

    user-manual-ref-variables.xml: Added BBVERSIONS variable.
    
    Signed-off-by: Scott Rifenbark <scott.m.rifenbark@intel.com>

21	0	doc/user-manual/user-manual-ref-variables.xml

commit 112dd4279826dc7587e1b8acb4a107374b5bd0fd
Author: Scott Rifenbark <scott.m.rifenbark@intel.com>
Date:   2014-02-10 08:11:58 -0600

    user-manual-metadata.xml: Re-write of "Events" section.
    
    General cleanup of the text.
    
    Signed-off-by: Scott Rifenbark <scott.m.rifenbark@intel.com>

76	33	doc/user-manual/user-manual-metadata.xml

commit dd9a4422d387da45f6de945eb4944c2a06bc98a0
Author: Scott Rifenbark <scott.m.rifenbark@intel.com>
Date:   2014-02-07 17:31:43 -0600

    user-manual-metadata.xml: General cleanup to "Parsing and Execution"
    
    I went through and created links for variables we reference that
    are in the glossary.  I also re-wrote much of the text to just
    clean it up.
    
    Signed-off-by: Scott Rifenbark <scott.m.rifenbark@intel.com>

164	96	doc/user-manual/user-manual-metadata.xml

commit cba57f8d900d7c3ed8da9fcab0697e3047476325
Author: Scott Rifenbark <scott.m.rifenbark@intel.com>
Date:   2014-02-07 14:39:47 -0600

    user-manual-metadata.xml: Edits to "Variable Flags" section
    
    Worked through this section with Richard providing an interactive
    review.  The changes are after the review.  There was also a
    small edit to the "Tasks" section.
    
    Signed-off-by: Scott Rifenbark <scott.m.rifenbark@intel.com>

115	38	doc/user-manual/user-manual-metadata.xml

commit 9673acda2239807e31f4fcda1574b3e5e2d013a6
Author: Scott Rifenbark <scott.m.rifenbark@intel.com>
Date:   2014-02-05 16:31:46 -0600

    user-manual-metadata.xml: Rewrite of the "Tasks" section.
    
    I cleaned up this section with some general improvements.
    
    I also broke this up into a couple sub-sections where it seemed
    to logically fall.  Also, stole some metadata concept from the
    next section ("Running Tasks") that really should be lumped under
    "Tasks".
    
    Signed-off-by: Scott Rifenbark <scott.m.rifenbark@intel.com>

89	66	doc/user-manual/user-manual-metadata.xml

commit 77ef63e5c4a9ea633a1be0f9f90366e0ecf555fa
Author: Scott Rifenbark <scott.m.rifenbark@intel.com>
Date:   2014-02-05 16:29:54 -0600

    user-manual-metadata.xml: Rewrite of the "Functions" section.
    
    Re-organized this around the 3 types of functions that we seem
    to be show-casing here.  The original organization was not very
    good.
    
    Signed-off-by: Scott Rifenbark <scott.m.rifenbark@intel.com>

85	59	doc/user-manual/user-manual-metadata.xml

commit b8472f81387f8b8110cd560d61a4563d53d26859
Author: Scott Rifenbark <scott.m.rifenbark@intel.com>
Date:   2014-02-05 08:15:37 -0600

    user-manual-ref-variables.xml: Edits to SRC_URI.
    
    Signed-off-by: Scott Rifenbark <scott.m.rifenbark@intel.com>

7	8	doc/user-manual/user-manual-ref-variables.xml

commit bc2a13ba86a5e01b457209b72608403e6aa12003
Author: Scott Rifenbark <scott.m.rifenbark@intel.com>
Date:   2014-02-05 08:06:59 -0600

    user-manual-ref-variables.xml: Edits to BBCLASSEXTEND.
    
    Signed-off-by: Scott Rifenbark <scott.m.rifenbark@intel.com>

9	9	doc/user-manual/user-manual-ref-variables.xml

commit f4dc71a3ff2c7f2ca6093b751883a1244f8d3847
Author: Scott Rifenbark <scott.m.rifenbark@intel.com>
Date:   2014-02-04 13:36:11 -0600

    user-manual-metadata.xml: Edits to "Sharing Functionality"
    
    Applied some review edits from Paul to the section.
    
    Signed-off-by: Scott Rifenbark <scott.m.rifenbark@intel.com>

68	29	doc/user-manual/user-manual-metadata.xml

commit cf0ccb26cc7af9f29704bb4c7ada6bf8ef5b0ee6
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2014-03-09 18:48:14 -0700

    user-manual-metadata.xml: Add bare bones of a scheduler section
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

13	0	doc/user-manual/user-manual-metadata.xml

commit 7e78785a53e259225b632c161a70d82fe66eb672
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2014-03-09 18:47:48 -0700

    user-manual-metadata.xml: Add details about general variables used by BitBake
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

19	0	doc/user-manual/user-manual-metadata.xml

commit 91d3e60a48d2269adfd0084eb6f1bcdb211dbce1
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2014-03-09 18:47:30 -0700

    user-manual-metadata.xml: Add details about environment variables used by BitBake
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

13	0	doc/user-manual/user-manual-metadata.xml

commit a6e597e690b3c6c6fa2af6db8cd871c02fc80421
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2014-03-05 14:59:55 +0000

    toasterui: fix task identification
    
    This patch adds extra checks when selecting and writing
    task and recipe objects to the database.
    
    The patch fixes several issues where tasks may have been
    misidentified between virtual-native and target tasks,
    or spurious task objects may have been created.
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>

22	6	lib/bb/ui/buildinfohelper.py

commit 47196039bd8bac2eddb1c19ad4fc2e285dc23ee3
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2014-02-21 15:23:52 +0000

    toaster: fix issues in the build table
    
    This patches fixes minor issues in the sorting functionality
    of the build table.
    
            [YOCTO #5455]
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>

1	1	lib/toaster/toastergui/templates/basetable_top.html
1	1	lib/toaster/toastergui/templates/build.html
10	1	lib/toaster/toastergui/views.py

commit 777458a20a7f686881e525a4d81b286c486ead6a
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2014-02-21 11:59:38 +0000

    toasterui: fix status update on failed sstate tasks
    
    This patch fixes a logical error when updating task information
    based on the corresponding sstate task state.
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>

6	3	lib/bb/ui/buildinfohelper.py

commit f8ad96d10a095e21fd2ce424c45e17f54642fb54
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2014-02-20 12:47:55 +0000

    toaster: update database schema
    
    This patch updates the database schema to resolve a
    number of issues discovered while implementing the
    UI interface.
    
    We do not expect that all the data will come in valid
    at this point.
    
            [YOCTO #5453]
            [YOCTO #5833]
            [YOCTO #5836]
            [YOCTO #5811]
            [YOCTO #5812]
            [YOCTO #5820]
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>

1	7	lib/bb/ui/buildinfohelper.py
1	1	lib/toaster/bldviewer/templates/simple_build.html
0	2	lib/toaster/bldviewer/templates/simple_recipe.html
301	0	lib/toaster/orm/migrations/0005_auto__add_target_image_file__add_target_file__add_field_variablehistor.py
37	8	lib/toaster/orm/models.py
1	1	lib/toaster/toastergui/templates/build.html
1	1	lib/toaster/toastergui/views.py

commit 73828f047385ced160c7900cad24535aa8d325cd
Author: Belen Barros Pena <belen.barros.pena@intel.com>
Date:   2014-02-19 21:08:15 +0000

    toaster: Move long content toggle to main.js
    
    I have move all javascript needed for toggling very long
    values for bitbake variables to main.js. I have changed the
    names of the classes involved to make them more generic,
    since I hope we'll be able to reuse them in other parts
    of the Toaster interface.
    
    .full-variable is now .full
    .full-variable-hide is now full-hide
    .full-variable-show is now full-show
    
    I have also removed all the inline scripting in base.html, since
    it is no longer needed.
    
    Signed-off-by: Belen Barros Pena <belen.barros.pena@intel.com>

15	0	lib/toaster/toastergui/static/js/main.js
0	52	lib/toaster/toastergui/templates/base.html
3	3	lib/toaster/toastergui/templates/configvars.html

commit 54a767809960b66b2fe2d3bc46aa9c7e040c4ae3
Author: David Reyna <David.Reyna@windriver.com>
Date:   2014-02-28 05:55:46 -0800

    toaster: implement the configuration pagedreyna/configure-detail-view
    
    Update the configuration page with the file list pop-up, implement the file and description filters.
    
    [YOCTO #4259]
    
    Signed-off-by: David Reyna <David.Reyna@windriver.com>

53	0	lib/toaster/toastergui/templates/base.html
22	10	lib/toaster/toastergui/templates/configuration.html
85	13	lib/toaster/toastergui/templates/configvars.html
59	0	lib/toaster/toastergui/templatetags/projecttags.py
80	21	lib/toaster/toastergui/views.py

commit 62f502b1237d4060df6be1ee4f4865db5fa39a6a
Author: Ravi Chintakunta <ravi.chintakunta@timesys.com>
Date:   2014-02-17 23:30:41 -0500

    toaster: View detailed information about a task
    
    Information about a task is displayed depending on it's execution
    status and outcome status.
    
    Edited to iterate through all possible entries for related setscene
    tasks.
    
    [YOCTO #4282]
    
    Signed-off-by: Ravi Chintakunta <ravi.chintakunta@timesys.com>
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>

12	0	lib/toaster/orm/models.py
263	0	lib/toaster/toastergui/templates/task.html
2	2	lib/toaster/toastergui/templates/tasks.html
6	2	lib/toaster/toastergui/templatetags/projecttags.py
32	2	lib/toaster/toastergui/views.py

commit 8cba40daf521d1740687f9a030f8472f980a4563
Author: Ravi Chintakunta <ravi.chintakunta@timesys.com>
Date:   2014-02-17 23:26:10 -0500

    toaster: Bug fix in reload page with parameters
    
    Fix the bug in reload_params function that was failing when
    the page URL did not have any parameters.
    
    Signed-off-by: Ravi Chintakunta <ravi.chintakunta@timesys.com>

5	1	lib/toaster/toastergui/templates/base.html

commit 188c12901c9573285956cded76f27a0d6330c82e
Author: Belen Barros Pena <belen.barros.pena@intel.com>
Date:   2014-02-19 10:57:56 +0000

    toaster: Fix breadcrumb date format in detail pages
    
    The template basebuilddetailpage.html had the completed
    on date in the breadcrumb set to naturaltime. Changed to
    d/m/y H:i to match the date format in the basebuildpage.html
    template, so that breadcrumbs display the same date format across
    all pages.
    
    Signed-off-by: Belen Barros Pena <belen.barros.pena@intel.com>

1	1	lib/toaster/toastergui/templates/basebuilddetailpage.html

commit ff6c448c7b5bc7bf4fe75e15e66c4e02f07f7618
Author: Belen Barros Pena <belen.barros.pena@intel.com>
Date:   2014-02-19 10:35:27 +0000

    toaster: Sort packages and dependencies in recipe.html
    
    The tables in the Packages, Build dependencies and
    Reverse build dependencies tabs in the recipe details
    pages (template recipe.html) should be sorted by package
    name and recipe name respectively.
    
    This change adds the sorting.
    
    Signed-off-by: Belen Barros Pena <belen.barros.pena@intel.com>

3	3	lib/toaster/toastergui/templates/recipe.html

commit 05f19e5cd8cca48e6e52f4b3ea1cd25d2ba4ac1c
Author: Belen Barros Pena <belen.barros.pena@intel.com>
Date:   2014-02-19 09:54:47 +0000

    toaster: Change popover headings in recipes table
    
    In the recipes table, dependencies and reverse dependencies
    are shown inside a popover. The popover headings did not
    match the table headings, so changed to "dependencies" and
    "reverse dependencies" as per the design spec.
    
    Signed-off-by: Belen Barros Pena <belen.barros.pena@intel.com>

2	2	lib/toaster/toastergui/templates/recipes.html

commit 984273e07126674c674ad8b400418117ae087860
Author: Belen Barros Pena <belen.barros.pena@intel.com>
Date:   2014-02-19 09:45:24 +0000

    toaster: Change help text for Section
    
    The help text for the Section information in the
    recipes table and the recipe details page said
    "packages" instead of recipes, and it said there
    were 5 possible values for the SECTION variable
    (which is not true).
    
    Changed to "The section in which recipes should
    be categorised"
    
    Signed-off-by: Belen Barros Pena <belen.barros.pena@intel.com>

1	1	lib/toaster/toastergui/templates/recipe.html
1	1	lib/toaster/toastergui/views.py

commit 5928d2f3cba4524966a34d8c845a04627b9b310b
Author: Belen Barros Pena <belen.barros.pena@intel.com>
Date:   2014-02-19 09:32:23 +0000

    toaster: Hide the applied filter tooltip on click
    
    When you apply a filter, we show you a tooltip on hover
    that tells you which filter you have applied and allows you
    to clear it quickly. That tooltip does not disappear
    straight away if you click on the filter button: it hangs
    in there because the tooltip has a delay specified on
    hide. The effect is quite annoying.
    
    This change to main.js makes sure the tooltip disappears when
    you click the filter button.
    
    Signed-off-by: Belen Barros Pena <belen.barros.pena@intel.com>

5	0	lib/toaster/toastergui/static/js/main.js

commit 125a3da654ac7742a93ac93f4f23336ecd251a61
Author: Belen Barros Pena <belen.barros.pena@intel.com>
Date:   2014-02-19 00:38:28 +0000

    toaster: Add .muted class to disabled checkboxes
    
    In the edit columns menu, the checkboxes for the columns in the
    minimum table are disabled. To better communicate visually
    the disabled state, this change applies the .muted class
    to the labels of those checkboxes.
    
    Signed-off-by: Belen Barros Pena <belen.barros.pena@intel.com>

2	2	lib/toaster/toastergui/templates/basetable_top.html

commit 1e655eb121173b4441a9a4e9005fe8c1f235dfbb
Author: Belen Barros Pena <belen.barros.pena@intel.com>
Date:   2014-02-18 14:29:26 +0000

    toaster: Set the right styles for definition lists
    
    In the task details page, our labels are quite long and
    the default width of the dt elements in the .dl-horizontal
    class is too small. Changing the width to 200px, and the
    left margin of the dd element to 220px.
    
    Changing the bootstrap.min.css file is not ideal (ok, is
    a pretty bad hack), but it is the only way to keep the
    nice responsive styles for those definition lists.
    
    Signed-off-by: Belen Barros Pena <belen.barros.pena@intel.com>

-	-	lib/toaster/toastergui/static/css/bootstrap.min.css

commit cb76a1d39ce36a36dc398a0422bcfac1c72f9c2b
Author: Belen Barros Pena <belen.barros.pena@intel.com>
Date:   2014-02-18 12:08:40 +0000

    toaster: Set correct string for missed sstate attempts
    
    Replace 'Missed' with 'File not in cache'in models.py
    
    Signed-off-by: Belen Barros Pena <belen.barros.pena@intel.com>

1	1	lib/toaster/orm/models.py

commit 2841f0740024a8351606452a5f803b9b7f70c783
Author: Belen Barros Pena <belen.barros.pena@intel.com>
Date:   2014-02-06 18:57:56 +0000

    toaster: Remove inline styles in h1
    
    The templates bpackage.html, recipes.html and build.html included
    an inline style declaration in the div containing the h1
    tag to add a top margin of 40px. The extra top margin
    is unnecessary in bpackage.html and recipes.html, but nicely
    separates the Recent builds and All builds sections in build.html.
    
    The changes remove the inline style declaration and create
    a .top-air class in default.css to include the extra top margin
    when needed, i.e. in the build.html template.
    
    Signed-off-by: Belen Barros Pena <belen.barros.pena@intel.com>

1	0	lib/toaster/toastergui/static/css/default.css
1	1	lib/toaster/toastergui/templates/bpackage.html
2	2	lib/toaster/toastergui/templates/build.html
1	1	lib/toaster/toastergui/templates/recipes.html

commit 7e78836ebbddf0240094fd79a18cb057d6c4f322
Author: David Reyna <David.Reyna@windriver.com>
Date:   2014-02-14 14:58:20 -0800

    toaster: extend Tasks to include Time, Disk IO, and CPU Usage
    
    Update the All Tasks page to also cover the Time, Disk I/O, and
    CPU Usage pages. Add filter count header support, and fix minor column
    enablements.
    
    [YOCTO #4387]
    
    Signed-off-by: David Reyna <David.Reyna@windriver.com>
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>

2	2	lib/toaster/orm/models.py
1	1	lib/toaster/toastergui/templates/basetable_top.html
2	2	lib/toaster/toastergui/templates/filtersnippet.html
47	46	lib/toaster/toastergui/templates/tasks.html
183	140	lib/toaster/toastergui/views.py

commit e2fbd5c6fa6b53514e2cb23d42aa639020d8a475
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2014-02-19 17:26:18 +0000

    toasterui: add asserts on expected values
    
    We add assert statements that validate expectations of
    correct values and context when the data collection code is running.
    
    These checks will help pinpointing unexpected data or
    call flows, reducing debugging time.
    
    Also contains a couple of very small fixes discovered through
    these checks, including a virtual:native conflict with
    regular tasks.
    
            [YOCTO #5553]
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>

105	37	lib/bb/ui/buildinfohelper.py

commit 49cb9f543526a161bc4c097f94422ea08b491ef9
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2014-02-18 18:41:47 +0000

    toasterui: task data structure in toasterui
    
    We update the structure used to hold interm task data,
    before it is written to the database, to lower the changes
    of key collision.
    
    This will also lead to a cleaner data structure and easier
    inspection.
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>

10	7	lib/bb/ui/buildinfohelper.py

commit b86fd2be40303d886fdb9ad3009355584d285acc
Author: Marius Avram <marius.avram@intel.com>
Date:   2014-02-18 16:39:24 +0200

    bb/ui: store_dependency_information optimization
    
    This optimization is in support of the bug #5485. The function called
    at the beginning of every build: store_dependency_information was taking
    approximately 20sec and it was delaying the arrival of events from the
    event queue. The change minimizes the calls to _save_a_task(),
    reducing the time to half.
    
    Signed-off-by: Marius Avram <marius.avram@intel.com>

13	3	lib/bb/ui/buildinfohelper.py

commit 47f5fde1bd8cf2e6f7e5c4ec2534a2f9599c4ea2
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2014-02-10 14:24:48 +0000

    toaster: array-assignment fix from Chome
    
    Apparently the JS engine in Chrome can't handle assignments to an array,
    so I'm patching this up by using an intermediate array to hold the
    values.
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>

2	1	lib/toaster/toastergui/templates/base.html
2	1	lib/toaster/toastergui/templates/basetable_bottom.html

commit d11ed273dd6c520b16e9ccfe79476f340006a55d
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2014-02-10 14:26:12 +0000

    toaster: mark dependency packages
    
    We need to mark the package entries that are
    created solely for dependency tracking purposes.
    
    In order to avoid altering the database schema,
    we mark the dependency targets with size = -1, since
    this is not a valid size anyway and makes for easy
    filtering.
    
            [YOCTO #5803]
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>

5	1	lib/bb/ui/buildinfohelper.py
2	2	lib/toaster/toastergui/views.py

commit 475643ad78796835bf2e731b9d0fa5794ec80dd1
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2014-02-13 13:12:39 +0000

    toasterui: adding new task outcome empty
    
    In order to separate tasks with invalid states from the
    no exec tasks, we add a new value OUTCOME_EMPTY for the tasks.
    
    OUTCOME_EMPTY has the same value as OUTCOME_NA as to maintain
    compatibility with already existing builds. New value for
    OUTCOME_NA can be used to detect tasks with invalid states, i.e.
    it should never appear after finishing a build.
    
    Fixing noexec tasks outcomes.
    
            [YOCTO #5763]
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>

15	12	lib/bb/ui/buildinfohelper.py
5	2	lib/toaster/orm/models.py

commit bb21b71dab70db163b804c7ebf27b85c59a39112
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2014-02-13 13:36:54 +0000

    toastergui: fix task executed status display
    
    The proper way to get a display-able value
    in Django is to use a model method instead of clutter
    the template with if/else.
    
            [YOCTO #5641]
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>

5	0	lib/toaster/orm/models.py
1	5	lib/toaster/toastergui/templates/recipe.html
1	7	lib/toaster/toastergui/templates/tasks.html

commit e008d9bb07e5d1a3584cc04ca2cd3dd906fd5759
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2014-03-09 11:11:30 -0700

    fetch2/wget: Fix downloadfilename functionality
    
    Some of the previous cleanups broke the downloadfilename functionality.
    This change fixes the code to ensure the commandline is correctly built.
    
    Thanks Kristof Robot <krirobo@gmail.com> for reporting the issue.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	2	lib/bb/fetch2/wget.py

commit 316daad7928a58cdfc42e27b20e739f4dd74a02a
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2014-03-06 22:34:33 +0000

    runqueue: Fix typo
    
    slef.self is clearly meant to be self, fix typo.
    
    Otavio spotted and reported, thanks.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/runqueue.py

commit f803bf8cfefafcbe212442e66b301ccd9c5aa2a5
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2014-03-03 16:54:31 +0000

    data: add vardepvalueexclude varflag
    
    On rare occasions it's useful to be able to exclude a part of a
    variable's value from the variable's signature; for example if you want
    to add an item to a list sometimes and not have the signature of the
    variable change depending on whether the item is in the list or not. The
    initial intended use case for this in OpenEmbedded is to allow adding a
    function to SSTATEPOSTINSTFUNCS in buildhistory.bbclass and not have
    that change any task signatures (so adding and removing
    INHERIT += "buildhistory" won't lead to any rebuilds).
    
    Part of the fix for [YOCTO #5897].
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

7	1	lib/bb/data.py

commit 8239264753977bd06ad5b1b574245d3842af489b
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2014-02-28 17:43:49 +0000

    fetch2: Drop svk fetcher
    
    The svk fetcher never appears to be used by anyone and the development
    on svk appears to have stopped in 2010. We might as well drop support
    for it.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

0	2	lib/bb/fetch2/__init__.py
0	95	lib/bb/fetch2/svk.py

commit 8a24f2d3b735bbc59ca4a09670cabbadb1868c1a
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2014-02-28 17:38:15 +0000

    codeparser: Fix var_execs to append to execs, not references
    
    When using the "execs" information in new code, it became clear that
    the returned data was incorrect and there were missing exec'd functions.
    This corrects the error and changes one of the test results to match
    the correct behaviour.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/codeparser.py
2	1	lib/bb/tests/codeparser.py

commit 7413e0fa4dca9571ea98f32dab87d4fd60bc8de9
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2014-02-28 17:26:20 +0000

    fetch/wget: Separate out download and checkstatus functions
    
    These two functions have little in common, separate them out.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

19	13	lib/bb/fetch2/wget.py

commit 4e59fe45be2088996abc21e9a631a32b9a9642c9
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2014-02-28 17:25:21 +0000

    fetch/wget: Start to clean up command construction
    
    Start to clean up wget fetcher command construction to allow clearer
    and more extensible code structure. Drops support for ${URI} and
    ${FILE} directly in the commands.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

8	9	lib/bb/fetch2/wget.py

commit bd33e709ab65d6966b234010641861834d170e2b
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2014-02-28 17:56:04 +0000

    wget: Drop usage of old style *COMMAND variables
    
    These variables were dropped from OE-Core some time ago, drop their
    usage from the fetcher as well.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	3	lib/bb/fetch2/wget.py

commit c127bb3a9b7b1d2ab2c833ff73186b6ead0dc29c
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2014-02-28 17:24:24 +0000

    fetch/svk: Drop usage of old style *COMMAND variable and MKTEMPDIRCMD
    
    Clean up some horrible old code and drop usage of the old style *COMMAND
    variable and MKTEMPDIRCMD whilst in here. This means we don't need to touch
    OVERRIDES either.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	5	lib/bb/fetch2/svk.py

commit 6b79789769da160d0e7fca0f9c6044dc1e11a107
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2014-02-28 17:23:45 +0000

    fetch/perforce: Drop usage of old style *COMMAND variable and MKTEMPDIRCMD
    
    Clean up some horrible old code and drop usage of the old style *COMMAND
    variable and MKTEMPDIRCMD whilst in here. This means we don't need to touch
    OVERRIDES either.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

5	9	lib/bb/fetch2/perforce.py

commit 13f1138f5504feee0ee8e8f3a0675d0bea490351
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2014-02-28 17:22:54 +0000

    fetch/git: Separate out an ls-remote function
    
    There is other code which can want to run ls-remote style commands with
    different parameters so split out the function.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

12	4	lib/bb/fetch2/git.py

commit a750c57242928c546a5aace632543e956ee908eb
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2014-02-24 18:50:05 +0000

    tests: add test for gitsm fetcher
    
    Use a newly created "git-submodule-test" repo on git.yoctoproject.org
    which currently contains one submodule (the bitbake repository).
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

7	0	lib/bb/tests/fetch.py

commit e4bf4ad4b99978483541a719105c98ea124e8a34
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2014-02-24 18:50:04 +0000

    tests: add missing import
    
    This was found when trying to run the data tests individually.
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	0	lib/bb/tests/data.py

commit 4df9c72663e972437131a848e6ddcf3769ae1d2b
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2014-02-24 18:50:03 +0000

    bitbake-selftest: enable specifying tests to run on command line
    
    If you are just trying to fix one test at a time, it can be useful to be
    able to specify an individual test(s) rather than running them all:
    
     bitbake-selftest bb.tests.codeparser bb.tests.cow
    
    You can even specify the test class or function to run, e.g.:
    
     bitbake-selftest bb.tests.fetch.URITest
     bitbake-selftest bb.tests.fetch.FetcherNetworkTest.test_fetch
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

16	5	bin/bitbake-selftest

commit e700d5a41deed4ee837465af526ed30c8a579933
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2014-02-24 18:50:02 +0000

    fetch2: fix fetching git submodules with git 1.7.9.x or older
    
    Git versions older than 1.7.10 put absolute paths in configuration files
    for the submodule repositories, leading to errors when the repository
    checkout is moved. We move the repository as a matter of course in the
    gitsm fetcher; the failure occurs in do_unpack). Change the absolute
    paths to be relative during processing to fix this.
    
    (At the time of writing, Ubuntu 12.04.4 LTS ships Git version 1.7.9.5,
    hence the desire to fix this rather than just mandating a newer Git
    version.)
    
    Fixes [YOCTO #5525].
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

48	0	lib/bb/fetch2/gitsm.py

commit 12946da1353dc35b5c1c4ce56315408f4f5c1edf
Author: Cristiana Voicu <cristiana.voicu@intel.com>
Date:   2014-02-25 15:30:12 +0200

    hob: append bbfiles to bblayers.conf instead of local.conf
    
    [YOCTO #5118]
    Signed-off-by: Cristiana Voicu <cristiana.voicu@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/ui/crumbs/hobeventhandler.py

commit ef32d27b33477a5cbf127cc8b98012b48e89ad07
Author: Cristiana Voicu <cristiana.voicu@intel.com>
Date:   2014-02-25 15:30:11 +0200

    hob: remove the code that adds hob layer to bblayers
    
    [YOCTO #5118]
    Signed-off-by: Cristiana Voicu <cristiana.voicu@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

0	5	lib/bb/ui/crumbs/hobeventhandler.py

commit 4587297b51b7ca71d314bdb2c06f2061e7d4aa7d
Author: Cristiana Voicu <cristiana.voicu@intel.com>
Date:   2014-02-25 15:30:10 +0200

    hob: create a base hob image used to create custom images
    
    In order to remove hob-image.bb from meta-hob, a hob-image.bb should
    be created somewhere in the build directory. I've saved it in build/recipes/images
    directory, and moved the templates to recipes/images/custom (here are those
    templates saved by the user).
    The image is created when hob starts. Also it appends to BBFILES the directory
    where it is created.
    
    Removed images directory from meta-hob.
    
    [YOCTO #5118]
    Signed-off-by: Cristiana Voicu <cristiana.voicu@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	1	lib/bb/ui/crumbs/builder.py
8	1	lib/bb/ui/crumbs/hobeventhandler.py
1	1	lib/bb/ui/crumbs/imageconfigurationpage.py
1	1	lib/bb/ui/crumbs/imagedetailspage.py

commit 7813e1bfd08cd48871f8c03cae2810265590105d
Author: Stefan Stanacar <stefanx.stanacar@intel.com>
Date:   2014-02-27 17:42:07 +0200

    build: filter out expanded empty strings for lockfiles flag
    
    If we have something similar to:
    
        LOCKFILES = "${TMPDIR}/my.lock"
        LOCKFILES_qemuall = ""
    
        do_task[lockfiles] += "${LOCKFILES}"
    
    when expanded, lockfiles will be empty for qemu, resulting in
    
         File "/home/stefans/yocto/poky/bitbake/lib/bb/utils.py", line 630, in mkdirhier
            raise e
        OSError: [Errno 2] No such file or directory: ''
    
    This should filter out the empty expansions.
    
    Signed-off-by: Stefan Stanacar <stefanx.stanacar@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/build.py

commit 4a5009036e9cb38f6e0260a88278948931073bc6
Author: Cristiana Voicu <cristiana.voicu@intel.com>
Date:   2014-02-25 09:15:31 +0200

    hob: replace the use of hob-toolchain with populate_sdk task
    
    Now bitbake has an API to run individual task for targets.
    Hob can use this to build the sdk, instead of using the hob-
    toolchain.
    
    Signed-off-by: Cristiana Voicu <cristiana.voicu@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

0	2	lib/bb/ui/crumbs/builder.py
8	8	lib/bb/ui/crumbs/hobeventhandler.py

commit 348971d410bfd5d8b1757468d73e1d24ae78a594
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2014-02-24 12:57:38 +0000

    fetch2: Fix mirror repo tarball creation
    
    A typo was meaning that the mirror creation method wasn't being called
    when it should have been. Fix the type to fix mirror tarball creation.
    
    [YOCTO #5284]
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/fetch2/__init__.py

commit a69eb4c12c71bba9d742c4e5578f25c388d9f825
Author: Martin Jansa <martin.jansa@gmail.com>
Date:   2014-02-23 11:02:18 +0100

    runqueue: Catch ValueError from pickle.loads
    
    * exception like this keeps spinning quite quickly generating GBs of logs
      better to kill it asap and show invalid pickle
    
    Signed-off-by: Martin Jansa <Martin.Jansa@gmail.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

8	2	lib/bb/runqueue.py

commit 537f1f9bbe110acc9848ef95f43468c07d87af79
Author: Jacob Kroon <jacob.kroon@mikrodidakt.se>
Date:   2014-02-22 17:52:29 +0100

    ast: Fix support for anonymous methods in wildcard .bbappend files
    
    When using wildcard .bbappend files with anonymous methods in them,
    bitbake/python fails to parse the generated code since the '%' is encoded
    in the generated method name.
    
    Fix this by including '%' in the convert-to-underscore list during
    method name mangling.
    
    While we're at it, move the method name mangling translation table
    to a class variable, as suggested by Chris Larson.
    
    [YOCTO #5864]
    
    Signed-off-by: Jacob Kroon <jacob.kroon@mikrodidakt.se>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	1	lib/bb/parse/ast.py

commit c39b99792547b642570ea5152070e7396e812390
Author: David Reyna <David.Reyna@windriver.com>
Date:   2014-02-06 21:21:58 -0800

    toaster: implement package summary page
    
    Implement the updated design for the package summay page, with pop-up
    boxes for the layer commit ids, column filtering, and column sorting
    support.
    
    [YOCTO #4318]
    
    Signed-off-by: David Reyna <David.Reyna@windriver.com>

1	2	lib/toaster/orm/models.py
59	36	lib/toaster/toastergui/templates/bpackage.html
71	2	lib/toaster/toastergui/views.py

commit 92b71c8e6cfcd656866fbf9bd00bf184b223c5fa
Author: David Reyna <David.Reyna@windriver.com>
Date:   2014-02-06 21:06:27 -0800

    toaster: implement recipe summary page
    
    Implement the updated design for the recipe summay page, with pop-up
    boxes for the dependecies and layer commit ids, column filtering, and
    column sorting support.
    
    [YOCTO #4294]
    
    Signed-off-by: David Reyna <David.Reyna@windriver.com>

1	0	lib/toaster/orm/models.py
69	37	lib/toaster/toastergui/templates/recipes.html
75	2	lib/toaster/toastergui/views.py

commit d56633c00f6730c053f355570211eba1bdc41b62
Author: Belen Barros Pena <belen.barros.pena@intel.com>
Date:   2014-02-06 00:24:58 +0000

    toaster: Make popovers mutually exclusive
    
    Table popovers should be mutually exclusive (only one
    of them should be open at any given time), and should
    close when you click outside their area. But this is not
    the default popover behaviour in Bootstrap, so some
    additional javascript is needed.
    
    The code in main.js taking care of this in the design
    prototype was quite ugly and didn't get on well with
    certain browsers. I have replaced it with a better
    solution (although still not ideal).
    
    Signed-off-by: Belen Barros Pena <belen.barros.pena@intel.com>
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>

19	36	lib/toaster/toastergui/static/js/main.js

commit b6416a98f441516100d2ce7baca30f09714a1d1d
Author: Belen Barros Pena <belen.barros.pena@intel.com>
Date:   2014-02-06 00:20:41 +0000

    toaster: Make popovers scrollable
    
    Some recipes and packages have a lot of dependencies.
    To stop their popovers from taking over the full
    height of the screen, I have given them a maximum
    height and made their content scrollable in
    default.css
    
    Signed-off-by: Belen Barros Pena <belen.barros.pena@intel.com>

3	0	lib/toaster/toastergui/static/css/default.css

commit 05f52b9fad597173d813fa4305af65f1c9bb88a1
Author: Belen Barros Pena <belen.barros.pena@intel.com>
Date:   2014-02-05 18:22:34 +0000

    toaster: Make all targets links to the build dashboard
    
    Change the build.html template to remove the conditional check
    that added links to the build dashboard only to those targets
    that are image recipes.
    
    All targets should be links to their corresponding build
    dashboard.
    
    Signed-off-by: Belen Barros Pena <belen.barros.pena@intel.com>

1	1	lib/toaster/toastergui/templates/build.html

commit 8aa63143cc446227c69f64688b314c65b74604d8
Author: Ravi Chintakunta <ravi.chintakunta@timesys.com>
Date:   2014-02-05 22:54:46 -0500

    toaster: Select a radio button by default in Filter Dialog
    
    If none of the filter options in the filter dialog are active,
    then select the first radio button.
    
    Signed-off-by: Ravi Chintakunta <ravi.chintakunta@timesys.com>

2	1	lib/toaster/toastergui/templates/filtersnippet.html
11	0	lib/toaster/toastergui/templatetags/projecttags.py

commit 44c5b3a93a93a464429e8d998aace25f840ae724
Author: Belen Barros Pena <belen.barros.pena@intel.com>
Date:   2014-01-31 07:08:40 +0000

    toaster: Fix for task_color tag
    
    This patch changes the task_color tag in
    projecttags.py to make sure it adds the error
    class to the rows corresponding to failed tasks
    in the tasks table.
    
    Signed-off-by: Belen Barros Pena <belen.barros.pena@intel.com>

1	1	lib/toaster/toastergui/templatetags/projecttags.py

commit e5cbb190317dba2eddd933678474569563ec840b
Author: Belen Barros Pena <belen.barros.pena@intel.com>
Date:   2014-01-31 07:02:32 +0000

    toaster: Apply error style to cell links
    
    This patch changes default.css so that any anchor
    tag inside a table cell with the error class applied
    inherits the class styles. This ensures that the
    failed tasks listed in the builds table look red
    like the failed tasks in the tasks table.
    
    Signed-off-by: Belen Barros Pena <belen.barros.pena@intel.com>

1	1	lib/toaster/toastergui/static/css/default.css

commit c2e43750bf0913523a1abcb2c8bf97b764da2524
Author: Belen Barros <belen.barros.pena@intel.com>
Date:   2014-02-04 15:23:10 +0000

    toaster: Make "Edit columns" multiselect
    
    Twitter Boostrap elements with the dropdown-menu class
    close by default once a selection is performed. Such
    behaviour is not appropriate for our "Edit columns" menu,
    since users might want to check / uncheck several
    columns.
    
    This patch adds a call to the stopPropagation() jQuery
    function to main.js to stop the "Edit columns" menu
    from closing every time you change a checkbox.
    
    Signed-off-by: Belen Barros <belen.barros.pena@intel.com>

5	0	lib/toaster/toastergui/static/js/main.js

commit e123922274ea875105e6ed855b3368b8b77fca64
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2014-02-04 17:38:17 +0000

    toaster: fix javascript for table filters
    
    This patch adds javascript link for resetting page filters
    in the tool tip "Show all" button.
    
    Also fixes a JS bug for when the cookie is not set yet.
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>

2	0	lib/toaster/toastergui/templates/basetable_bottom.html
1	1	lib/toaster/toastergui/templates/basetable_top.html

commit e39857162b5d91cc2f92843a9a14599bab369849
Author: Belen Barros <belen.barros.pena@intel.com>
Date:   2014-02-03 15:35:47 +0000

    toaster: Add clear filter button to filter tooltips
    
    This patch modifies the basetable_top.html template to add
    the 'Show all' button to the applied filter tooltip. It also
    adds a delay in the tooltip dismissal in main.js to allow
    users to click the button comfortably.
    
    The patch does not add the functionality to the button (when
    you click on it nothing happens). Someone else will need
    to add that in.
    
    Signed-off-by: Belen Barros <belen.barros.pena@intel.com>

1	1	lib/toaster/toastergui/static/js/main.js
1	1	lib/toaster/toastergui/templates/basetable_top.html

commit 71a07268c3a2e969c088ef9f6bcf4c54254b3600
Author: Belen Barros <belen.barros.pena@intel.com>
Date:   2014-01-27 14:05:54 +0000

    toaster: Clean up main.js
    
    Clean up main.js to leave only what is being
    used in the design prototype.
    
    Initialise the Bootstrap tooltips for any anchor tag inside
    a table heading with the btn-primary class applied. This
    effectively styles the title attribute of the applied
    filters to look like all other Toaster tooltips.
    
    Signed-off-by: Belen Barros <belen.barros.pena@intel.com>
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>

32	444	lib/toaster/toastergui/static/js/main.js

commit 90409869d49468d31daa60880f54774c4b24d5aa
Author: Belen Barros <belen.barros.pena@intel.com>
Date:   2014-02-03 11:27:02 +0000

    toaster: Clean up default.css
    
    Getting rid of all unused css declarations, grouping
    and annotating to make the file more readable.
    
    Signed-off-by: Belen Barros <belen.barros.pena@intel.com>
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>

114	177	lib/toaster/toastergui/static/css/default.css

commit 6855925c06e7e5bb15ae9d0c08d77f3a9a2574bc
Author: Dave Lerner <dave.lerner@windriver.com>
Date:   2014-01-23 11:47:41 -0600

    toaster: Implementation of package detail views
    
    Adds new package detail views.  The views are based on
    specifications found in attachments to:
        https://bugzilla.yoctoproject.org/show_bug.cgi?id=4328
    specifically:
        design-1.5.1-package-details.pdf, and
        design-1.1.1-included-package-details.
    
    This patch includes a redefinition of constant numbers for
    task dependency tasks. This is needed in order to achieve
    sorting criteria from the design.
    
    This change invalidates currently dependency information for
    currently existing builds, as it breaks compatibility.
    
    [YOCTO #4328]
    
    Signed-off-by: Dave Lerner <dave.lerner@windriver.com>
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>

32	15	lib/toaster/orm/models.py
1	1	lib/toaster/toastergui/templates/bpackage.html
112	0	lib/toaster/toastergui/templates/package_built_dependencies.html
71	0	lib/toaster/toastergui/templates/package_built_detail.html
125	0	lib/toaster/toastergui/templates/package_detail_base.html
93	0	lib/toaster/toastergui/templates/package_included_dependencies.html
46	0	lib/toaster/toastergui/templates/package_included_detail.html
47	0	lib/toaster/toastergui/templates/package_included_reverse_dependencies.html
33	0	lib/toaster/toastergui/templates/package_included_tabs.html
3	3	lib/toaster/toastergui/templates/recipe.html
13	0	lib/toaster/toastergui/templatetags/projecttags.py
14	4	lib/toaster/toastergui/urls.py
187	9	lib/toaster/toastergui/views.py

commit 277d076d777f26f215f01cac59302bcf9cf44a9c
Author: Ravi Chintakunta <ravi.chintakunta@timesys.com>
Date:   2014-01-25 18:27:35 -0500

    toaster: Added sorting to other columns in All tasks table
    
    Added sorting to recipe, time, cpu, disk i/o and log columns of
    all tasks table
    
    Signed-off-by: Ravi Chintakunta <ravi.chintakunta@timesys.com>
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>

9	1	lib/toaster/toastergui/views.py

commit bac1ca6e276b2e276b844d1009dba964810a2957
Author: Ravi Chintakunta <ravi.chintakunta@timesys.com>
Date:   2014-01-21 21:43:33 -0500

    toaster: Fix builds view filter options to match changes in filter dialog
    
    Filter dialog uses an array of tuples for filter options.Fixed the builds view
    by changing the filter options from a dictionary to a list of tuples.
    
    Signed-off-by: Ravi Chintakunta <ravi.chintakunta@timesys.com>

44	27	lib/toaster/toastergui/views.py

commit 5e475b312348fa45312946b528648739c78da2ba
Author: Ravi Chintakunta <ravi.chintakunta@timesys.com>
Date:   2014-01-17 16:27:29 -0500

    toaster: Filter Dialog fix to display filter options as radio buttons
    
    - Filter options are displayed as radio buttons in the filter dialog.
    - To preserve the order of the filter options, the options are passed
    as tuples inside a list, instead of key/value pairs of a dictionary. Changed
    the filter dialog code to use the tuple
    
    Signed-off-by: Ravi Chintakunta <ravi.chintakunta@timesys.com>

14	10	lib/toaster/toastergui/templates/filtersnippet.html

commit 8cd978ec3cc56e3f30d58d17188e67296bdb120b
Author: Ravi Chintakunta <ravi.chintakunta@timesys.com>
Date:   2014-01-25 18:52:53 -0500

    toaster: Removed unused 'disabled' css class in Filter dialog
    
    Signed-off-by: Ravi Chintakunta <ravi.chintakunta@timesys.com>

1	1	lib/toaster/toastergui/templates/filtersnippet.html

commit cf90bd6b2a0ab7dce922bffb500d6a2ff2ff10e2
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2014-02-17 14:07:41 +0000

    build: fix handling of task override for tasks with underscores in their names
    
    Tasks whose names contain underscores (such as do_populate_sdk in OE)
    when converted to a task override do not function properly. If we
    replace underscores with hyphens we can still have a working override
    for these tasks.
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/build.py

commit 22e03ef7ac9bb6b7245250347ae9c10c19f1d74e
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2014-02-17 14:07:40 +0000

    parse: make vars_from_file return None for non-recipes
    
    It doesn't really make sense to set PN from .conf files, for example.
    More concretely, this avoids the config hash changing unnecessarily
    within Hob due to PN effectively changing (since bblayers.conf is
    parsed first and then .hob.conf).
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/parse/__init__.py

commit f975ca2cf728561bd6317ed8f76303598546113a
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2014-02-15 13:49:38 +0000

    runqueue: Fix silly variable overlap
    
    A previous commit of mine used the target variable for two different uses
    resulting in a lot more sstate being installed than is needed.
    
    Fix the variable to use two different names and unbreak the setscene
    behaviour.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	3	lib/bb/runqueue.py

commit 0753899d1e855795cc18671357609a86f169b379
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2014-02-13 15:01:25 +0000

    runqueue: Ensure we do run 'masked' setscene tasks if specified as targets
    
    If you specify multiple targets on bitbake's commandline and some of them are
    setscene tasks which are "masked" by other tasks they may not get run.
    
    For example <image>:do_rootfs <kernel>:do_populate_sysroot
    
    the rootfs tasks "masks" the populate_sysroot task so bitbake would currently
    decide not to run it. In this case, we do really want it to be run.
    
    The fix is not to skip anything which has been given as an explict target.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

12	4	lib/bb/runqueue.py

commit 56321b18808f5ed932543d907b9ebcfbf4420233
Author: Scott Rifenbark <scott.m.rifenbark@intel.com>
Date:   2014-02-04 13:36:11 -0600

    user-manual-metadata.xml: Edits to the "Sharing Functionality" section.
    
    Applied some review edits from Paul to the section.
    
    Signed-off-by: Scott Rifenbark <scott.m.rifenbark@intel.com>

122	28	doc/user-manual/user-manual-metadata.xml

commit 6eea23c4783c591c2d2c7f0b2a98e7a0cc8aa3c3
Author: Scott Rifenbark <scott.m.rifenbark@intel.com>
Date:   2014-02-03 16:55:51 -0600

    user-manual-metadata.xml: Edits to "Conditional Syntax (Overrides)"
    
    Re-wrote this section to use clearer more described examples.
    
    Signed-off-by: Scott Rifenbark <scott.m.rifenbark@intel.com>

138	69	doc/user-manual/user-manual-metadata.xml

commit 3b6ab095862367bc0101b995b002f62e7968ccf3
Author: Scott Rifenbark <scott.m.rifenbark@intel.com>
Date:   2014-02-03 12:07:43 -0600

    user-manual-metadata.xml: Edits to "Defining Pure Python Functions"
    
    Made a review edit here to the section per Paul Eggleton.
    
    Signed-off-by: Scott Rifenbark <scott.m.rifenbark@intel.com>

4	1	doc/user-manual/user-manual-metadata.xml

commit 665d655f436f1a353f5fe467c5d97588f7b121c5
Author: Scott Rifenbark <scott.m.rifenbark@intel.com>
Date:   2014-02-03 11:51:04 -0600

    user-manual-metadata.xml: Edits through syntax section
    
    I made some general improvements in the "Overview" and
    "Basic Syntax" sections.  Additionally, I added a blank
    section for "Variable Flags" that will eventually hold general
    information on this concept.  Finally, come review edits to the
    "Defining Pure Python Functions" section per Paul Eggleton.
    
    Signed-off-by: Scott Rifenbark <scott.m.rifenbark@intel.com>

183	97	doc/user-manual/user-manual-metadata.xml

commit f635c4b36af79b8572095083a392fb58c11198c9
Author: Scott Rifenbark <scott.m.rifenbark@intel.com>
Date:   2014-02-03 07:29:54 -0600

    user-manual-intro.xml: General edits to Introduction chapter.
    
    I performed a general edit to this chapter.  Some significant changes
    include changing the chapter's title to "Overview" when it was titled
    "BitBake User Manual", doing some consolidation of text to eliminate
    a couple sections that described methods to obtain a copy of BitBake,
    and various improvements as needed.
    
    Signed-off-by: Scott Rifenbark <scott.m.rifenbark@intel.com>

105	125	doc/user-manual/user-manual-intro.xml

commit b653c58284cafd0b79991520543ca6239705d36b
Author: Scott Rifenbark <scott.m.rifenbark@intel.com>
Date:   2014-01-29 12:06:15 -0600

    user-manual-metadata.xml: Added "Checksums (Signatures)" section.
    
    Added this section to the end of the Metadata chapter.
    
    Signed-off-by: Scott Rifenbark <scott.m.rifenbark@intel.com>

183	0	doc/user-manual/user-manual-metadata.xml

commit 8e586ccee6d5e78070d28cda67058578e1fe91d7
Author: Scott Rifenbark <scott.m.rifenbark@intel.com>
Date:   2014-01-27 09:01:21 -0600

    user-manual-ref-variables.xml: Review edits to several variables in glossary.
    
    ASSUME_PROVIDED
    BBCLASSEXTEND
    SRC_URI
    PACKAGES_DYNAMIC
    BB_NUMBER_THREADS
    BB_DANGLINGAPPENDS_WARNONLY
    
    Signed-off-by: Scott Rifenbark <scott.m.rifenbark@intel.com>

39	107	doc/user-manual/user-manual-ref-variables.xml

commit 0e3106bfdebfa255b2db08a8a4585516d8bebe20
Author: Scott Rifenbark <scott.m.rifenbark@intel.com>
Date:   2014-01-24 15:44:24 -0600

    user-manual-ref-variables.xml: Added 11 new variables to glossary.
    
    SRCREV_FORMAT
    BUILDNAME
    BB_ENV_WHITELIST
    BB_PRESERVE_ENV
    BB_ENV_EXTRAWHITE
    BB_ORIGENV
    BB_TASKHASH
    BITBAKE_UI
    BBDUBUG
    BB_DEFAULT_TASK
    BBINCLUDED
    
    Signed-off-by: Scott Rifenbark <scott.m.rifenbark@intel.com>

164	0	doc/user-manual/user-manual-ref-variables.xml

commit 64bdd3ba6fe90ed6e0338ad053c8117db0acfe2e
Author: Scott Rifenbark <scott.m.rifenbark@intel.com>
Date:   2014-01-24 15:10:13 -0600

    user-manual-ref-variables.xml: Edits to FILESPATH.
    
    Signed-off-by: Scott Rifenbark <scott.m.rifenbark@intel.com>

8	6	doc/user-manual/user-manual-ref-variables.xml

commit 4aa8c2f93cc126778f7e99229d99b398d603fcac
Author: Scott Rifenbark <scott.m.rifenbark@intel.com>
Date:   2014-01-24 09:50:29 -0600

    user-manual-ref-variables.xml: Added 6 new variables to glossary:
    
    MULTI_PROVIDER_WHITELIST
    CACHE
    PERSISTENT_DIR
    FETCHCMD
    FILE
    FILESDIR
    
    Signed-off-by: Scott Rifenbark <scott.m.rifenbark@intel.com>

92	3	doc/user-manual/user-manual-ref-variables.xml

commit 9232cca08ec3f099475ad8dfc10e4fa3c2b39366
Author: Scott Rifenbark <scott.m.rifenbark@intel.com>
Date:   2014-01-24 09:01:36 -0600

    user-manual-ref-variables.xml: Edits to PREFERRED_PROVIDER.
    
    Signed-off-by: Scott Rifenbark <scott.m.rifenbark@intel.com>

2	2	doc/user-manual/user-manual-ref-variables.xml

commit 86cacad8129502088011ebb622dd4d3d3663d39e
Author: Scott Rifenbark <scott.m.rifenbark@intel.com>
Date:   2014-01-24 08:59:25 -0600

    user-manual-ref-variables.xml: Added PREFERRED_PROVIDERS to glossary.
    
    Signed-off-by: Scott Rifenbark <scott.m.rifenbark@intel.com>

23	0	doc/user-manual/user-manual-ref-variables.xml

commit 8480db0fa7d0363741e7075bb8169a9c1b6a71dd
Author: Scott Rifenbark <scott.m.rifenbark@intel.com>
Date:   2014-01-24 07:36:15 -0600

    user-manual-ref-variables.xml: Added FAKEROOT* variables to glossary.
    
    FAKEROOT
    FAKEROOTCMD
    FAKEROOTBASEENV
    FAKEROOTDIRS
    FAKEROOTENV
    FAKEROOTNOENV
    
    Signed-off-by: Scott Rifenbark <scott.m.rifenbark@intel.com>

70	1	doc/user-manual/user-manual-ref-variables.xml

commit f02be6ca79fccc3c7bfbbadeef0c98242f661524
Author: Scott Rifenbark <scott.m.rifenbark@intel.com>
Date:   2014-01-23 09:59:53 -0600

    user-manual-ref-variables.xml: Added BB* variables to glossary.
    
    BB_STRICT_CHECKSUM
    BB_WORKERCONTEXT
    BB_SIGNATURE_EXCLUDE_FLAGS
    BB_HASHBASE_WHITELIST
    BB_INVALIDCONF
    BB_LOGFMT
    BB_RUNFMT
    BB_RUNTASK
    BB_HASHBASE_WHITELIST
    BB_STAMP_POLICY
    BB_STAMP_WHITELIST
    BB_SCHEDULER
    BB_SCHEDULERS
    BB_SETSCENE_DEPVALID
    BB_SETSCENE_VERIFY_FUNCTION
    BB_SIGNATURE_HANDLER
    BB_SRCREV_POLICY
    BB_VERBOSE_LOGS
    
    Signed-off-by: Scott Rifenbark <scott.m.rifenbark@intel.com>

329	7	doc/user-manual/user-manual-ref-variables.xml

commit 81bd475585ff1b44b390036b1eca0feae7c149eb
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2014-02-10 22:50:28 +0000

    runqueue: Fix setscene hard dependency problems
    
    Commit c54e738e2b5dc0d8e6fd8e93b284ed96e7a83051 added in the idea of hard dependencies
    such as the case a setscene has a hard dependency on pseudo-native and that
    dependency wasn't available from sstate for some reason.
    
    Unfortunately the implementation was a bit too enthusiastic, causing rebuilds
    of things when it wasn't necessary. A test case was:
    
    bitbake quilt-native
    bitbake quilt-native -c clean
    bitbake <some-image>
    
    and then you'd watch quilt-native get rebuilt for no good reason.
    
    The clue to the problem is in the for loop where it never depends on
    the item being iterated over.
    
    The fix is to include the exact list of hard dependencies rather than
    guessing. With these changes, the use case above works, the one in
    the original commit also works.
    
    This patch also adds in or cleans up various pieces of logging to
    allow issues like this to be more easily debugged in future.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

18	5	lib/bb/runqueue.py

commit c712e622d20c61a07c9c172b60e9dc6beae14197
Author: Laurentiu Palcu <laurentiu.palcu@intel.com>
Date:   2014-02-03 13:33:07 +0200

    bitbake: build.py: create separate function for shell trap creation code
    
    Currently, the shell trap code was created in exec_func_shell(). Split
    the function so that we can create the code separately.
    
    Also, some whitespaces were automatically deleted by my editor. Since
    this is not necessarily a bad thing, leave these changes too.
    
    Signed-off-by: Laurentiu Palcu <laurentiu.palcu@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

20	17	lib/bb/build.py

commit b84d010144de687667cf855ddcb41c9b863c236e
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2014-02-03 16:09:32 +0000

    data: Account for pre/postfunc functions when calculating dependencies
    
    pre/postfuncs were not being added to checksums. This meant that when reconfiguration
    occurred, tasks were not always being rerun when they should. This include
    sstate functions as well as systemd's do_install function in the OE metadata.
    
    With the addition of postfuncs, its possible a shell task can have a python
    pre/postfunc so we have to guard against this when generating shell output
    in emit_func.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

6	2	lib/bb/data.py

commit b1628b1a260ddf43fc9985535b1ddcfcebbb1e5b
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2014-01-31 11:17:34 +0000

    runqueue: Fix race against tasks sharing stamp files
    
    Shared work directories work by assuming bitbake will not run
    more than one task with a specific stamp name. Recent runqueue optimisations
    accidentally broke this meaning there could be races. This fixes the code.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

4	1	lib/bb/runqueue.py

commit 2d052690d46506ba3f4180ad5cdfa835ce85e59a
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2014-01-28 15:29:26 +0000

    user-manual: Fix issue with previous revert
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	doc/user-manual/user-manual.xml

commit 9d315f45224faf8e33bb132c1003a36dbc47bf63
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2014-01-28 14:26:08 +0000

    Revert "usermanual: Updated CC License to version 3.0"
    
    This reverts commit 0546bc19557de9263b448ceb1707884543d2de56.
    
    This change was not discussed with the copyright holders so the license
    needs to remain at version 2.5.

1	1	doc/user-manual/user-manual.xml

commit 2bfcb751891cf3b4050e996b3c8e28678c3a8bf4
Author: Robert Yang <liezhi.yang@windriver.com>
Date:   2014-01-20 19:44:53 +0800

    siggen.py: fix the SignatureGenerator()
    
    If we set:
    
    BB_SIGNATURE_HANDLER = "noop"
    
    Then we would get the following errors:
    
    [snip]
    File "runqueue.py", line 876, in RunQueue._start_worker(fakeroot=False, rqexec=None):
                    "fakerootnoenv" : self.rqdata.dataCache.fakerootnoenv,
       >            "hashes" : bb.parse.siggen.taskhash,
                    "hash_deps" : bb.parse.siggen.runtaskdeps,
    AttributeError: 'SignatureGenerator' object has no attribute 'taskhash'
    [snip]
    
    This patch fixes the problem.
    
    [YOCTO #5741]
    
    Signed-off-by: Robert Yang <liezhi.yang@windriver.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

4	2	lib/bb/siggen.py

commit 1f2bdd1b99075babe8dba91478cfc5d3501676cb
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2014-01-27 21:47:27 +0000

    runqueue: Simplify pointless len() usage
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/runqueue.py

commit a8c9df86b96e27dc49028c2da42034d13988960c
Author: Irina Patru <irina.patru@intel.com>
Date:   2014-01-23 11:49:43 +0200

    hob: No need for enable_proxy and same_proxy in conf file
    
    Hob doesn't read these variable from file and bitbake doesn't use them,
    so they shouldn't be set in conf file.
    
    Signed-off-by: Irina Patru <irina.patru@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

0	2	lib/bb/ui/crumbs/builder.py

commit fbe0851221ecfcefea5bdd4b629a05ed4f5ac189
Author: Irina Patru <irina.patru@intel.com>
Date:   2014-01-23 11:49:42 +0200

    hob: Don't always save proxy values in conf file
    
    If enable_proxy is not activated, Hob should not save the proxy values
    in the conf file when user hits save button.
    
    [ HOB #5308 ]
    
    Signed-off-by: Irina Patru <irina.patru@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

14	6	lib/bb/ui/crumbs/builder.py

commit ea1939f7ec8d8a71ce16a60c251c2413d7d91eb3
Author: Irina Patru <irina.patru@intel.com>
Date:   2014-01-21 17:59:38 +0200

    hob: don't display interruptions as fails
    
    When Hob receives a bb.command.CommandFailed event, it should check if
    it's a log kind of information.
    "Forced shutdown" and "Stopped build" are messages that show when a build
    is not complete, but Hob considered them error.
    
    [HOB #5609]
    
    Signed-off-by: Irina Patru <irina.patru@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	1	lib/bb/ui/crumbs/hobeventhandler.py

commit d440d3ad4b2d99bc20e06d2d5f5e76d07864dff3
Author: Irina Patru <irina.patru@intel.com>
Date:   2014-01-21 17:59:37 +0200

    hob: unsetting busy cursor after hitting Stop button
    
    The busy cursor would never change after pressing Stop button.
    It should be set after the possible return inside machine_combo_changed_cb()
    method.
    
    Signed-off-by: Irina Patru <irina.patru@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	2	lib/bb/ui/crumbs/imageconfigurationpage.py

commit 46943b442ea4fa778f70590b6dcce483595efaf8
Author: Irina Patru <irina.patru@intel.com>
Date:   2014-01-21 17:59:36 +0200

    bitbake: hob: check if parser has attribute 'shutdown'
    
    It must be checked first if parser has the attribute 'shutdown' when
    user hits Stop button and the forceshutdown state is given.
    
    [HOB #5579]
    
    Signed-off-by: Irina Patru <irina.patru@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	1	lib/bb/cooker.py

commit 24543ff6b45771712d624541ae35738d7d98f33c
Author: Irina Patru <irina.patru@intel.com>
Date:   2014-01-21 17:59:35 +0200

    hob: change error_msg for CommandFailed event
    
    When a bb.command.CommandFailed event is received by Hob, the error
    message is stored inside event.error.
    This information tells exactly why bitbake failed, so Hob should display
    it instead of the current composed message.
    
    Signed-off-by: Irina Patru <irina.patru@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	6	lib/bb/ui/crumbs/hobeventhandler.py

commit 55f6bee3114e582333a1784caeddb197b9163d02
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2014-01-27 14:37:04 +0000

    cooker: Add option of specifying indvidual tasks for targets
    
    Currently its near enough impossible to tell bitbake to run target X,
    task Y and target A, task B. We could hack various parts of the API
    around but it would mean incompatibilities.
    
    An alternative is to accept the syntax "<target>:do_<task>" as a target
    name. The default task would be used where the task is unspecified.
    
    This has the advantage that its neat/clean code and works from all
    current APIs including the commandline.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

6	1	lib/bb/cooker.py

commit 72a01a54c4786a7a82ae8b86b8e2beedd07f7f21
Author: Scott Rifenbark <scott.m.rifenbark@intel.com>
Date:   2014-01-22 08:25:28 -0600

    user-manual-ref-variables.xml: Added 10 new variables to the glossary.
    
    Fixes [YOCTO #5472]
    
    1. ASSUME_PROVIDED
    2. BB_CURRENTTASK
    3. BB_FETCH_PREMIRRORONLY
    4. BB_FILENAME
    5. BB_NICE_LEVEL
    6. BB_HASHCONFIG_WHITELIST
    7. BB_TASK_NICE_LEVEL
    8. BB_NO_NETWORK
    9. BB_NUMBER_PARSE_THREADS
    10. STAMPCLEAN
    
    Signed-off-by: Scott Rifenbark <scott.m.rifenbark@intel.com>

158	5	doc/user-manual/user-manual-ref-variables.xml

commit f9e3de2bb3e73204ef35d102ff26ee7393056ede
Author: Scott Rifenbark <scott.m.rifenbark@intel.com>
Date:   2014-01-21 17:25:41 -0600

    user-manual-ref-variables.xml: Fixed references to "Build Directory".
    
    I made sure that these are lower-cased.  Also, removed the tags
    for cross-referencing into the term section of the YP Development
    Manual.
    
    Signed-off-by: Scott Rifenbark <scott.m.rifenbark@intel.com>

4	5	doc/user-manual/user-manual-ref-variables.xml

commit 17cbad436c97e904a04596237022e84853b10a21
Author: Scott Rifenbark <scott.m.rifenbark@intel.com>
Date:   2014-01-21 17:20:55 -0600

    user-manual-ref-variables.xml: Editing pass.
    
    Corrected grammar and applied active voice where possible.
    Also removed several cross-reference tags to the YP manual set.
    
    Signed-off-by: Scott Rifenbark <scott.m.rifenbark@intel.com>

47	46	doc/user-manual/user-manual-ref-variables.xml

commit d7f15880c5423d91fd786e291f3e062545342184
Author: Scott Rifenbark <scott.m.rifenbark@intel.com>
Date:   2014-01-20 17:47:02 -0600

    template/titlepage.templates.xml: Suppress Title Text.
    
    I commented out two blocks of code that are responsible
    for getting the book's title to format onto the title page.
    Commenting the code out suppresses the title from the
    PDF version's title page yet retains the title text for the
    HTML tab space of the browser.  The reason this is necessary
    is because the BitBake User Manual uses an image file for
    the title.  Thus, it is not necessary to print the title
    again.
    
    Signed-off-by: Scott Rifenbark <scott.m.rifenbark@intel.com>

22	3	doc/template/titlepage.templates.xml

commit f95994be26986098c2603ef6d4cb10f06422b790
Author: Scott Rifenbark <scott.m.rifenbark@intel.com>
Date:   2014-01-20 16:35:25 -0600

    user-manual-customization.xsl: Updated param list to pass
    
    I added five parameters here to match the build process used
    for the YP manual set.
    
    Signed-off-by: Scott Rifenbark <scott.m.rifenbark@intel.com>

7	1	doc/user-manual/user-manual-customization.xsl

commit d5f405586f7c50c602241519d32d02b1c7b1f345
Author: Scott Rifenbark <scott.m.rifenbark@intel.com>
Date:   2014-01-20 15:13:18 -0600

    user-manual-metadata.xml: Renamed section tag
    
    There were two section tags that used the same id name "classes".
    One was in the intro chapter and one was in the metadata chapter.
    This was causing an exception in the PDF creation process and
    breaking it.  I renamed the tag in the metadata chapter
    "metadata-classes".
    
    Signed-off-by: Scott Rifenbark <scott.m.rifenbark@intel.com>

1	1	doc/user-manual/user-manual-metadata.xml

commit aae6bcb7fb6e056eb7b1027a8054f6ea5f8ab2b2
Author: Scott Rifenbark <scott.m.rifenbark@intel.com>
Date:   2014-01-20 13:09:43 -0600

    user-manual-ref-variavbles.xml: Added new glossary chapter.
    
    Added a scrubbed copy of the YP ref-manual glossary.  The content
    was scrubbed to contain BB variables only.  Removed broken
    cross-references, made sure the PDF file built.
    
    Signed-off-by: Scott Rifenbark <scott.m.rifenbark@intel.com>

1321	0	doc/user-manual/user-manual-ref-variables.xml
2	0	doc/user-manual/user-manual.xml

commit f079e0886b1b191d84621057f9752cc32bfabb44
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2014-01-18 16:25:25 +0000

    user-manual-bitbakecommand: Various edits/cleanups
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

88	74	doc/user-manual/user-manual-bitbakecommand.xml

commit c85a035608b7c862d964f45bb1b767fde072a1de
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2014-01-18 16:22:01 +0000

    user-manual-bitbakecommand: Standardise on section tags, not example
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

34	27	doc/user-manual/user-manual-bitbakecommand.xml

commit 4fffe48ab607fd0d2f884186006ee168874b8414
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2014-01-18 16:14:52 +0000

    user-manual-bitbakecommand: Replace screen tags with literallayout
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

68	39	doc/user-manual/user-manual-bitbakecommand.xml

commit f1a6d7029e7adc147655809dca71782a143c5ac5
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2014-01-18 16:05:00 +0000

    user-manual-bitbakecommand: Reform whitespace
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

245	108	doc/user-manual/user-manual-bitbakecommand.xml

commit bd1da5001c03cba17a4c61cfb854ab394c50e732
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2014-01-18 15:33:30 +0000

    user-manual-bitbakecommand: Update help text output with that from bitbake master
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

60	38	doc/user-manual/user-manual-bitbakecommand.xml

commit b0fc79e6405b7070a42cfda035e87edc832f8334
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2014-01-18 15:24:18 +0000

    user-manual-fetching: Editing pass over the manual chapter
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

53	44	doc/user-manual/user-manual-fetching.xml

commit 3b04c18212f3f0c22a1167dc6f62210e54ed2002
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2014-01-18 15:21:33 +0000

    user-manual-fetching: Change varname/emphasis tags to filename
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

50	50	doc/user-manual/user-manual-fetching.xml

commit e0474be77c954cac3bb9b403d6c854ff447cc02d
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2014-01-18 15:13:13 +0000

    user-manual-fetching: Change screen -> literallayout
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

37	39	doc/user-manual/user-manual-fetching.xml

commit 7e32068d1ab4e1f342f70a8338bb8a51fc783da9
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2014-01-18 15:07:32 +0000

    user-manual-fetching: Change the file whitespace
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

190	59	doc/user-manual/user-manual-fetching.xml

commit 55158ce6c5435544a62a60c0055724619bafde27
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2014-01-18 14:34:14 +0000

    user-manual-metadata: Clean up task documentation
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

24	4	doc/user-manual/user-manual-metadata.xml

commit b2e8c56d0f554e3b118f23b42858319110501180
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2014-01-18 14:33:33 +0000

    user-manual-metadata: Clean up task flag section
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

26	10	doc/user-manual/user-manual-metadata.xml

commit 2596dd2b42c06ef258032356294cc345a6e25fed
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2014-01-18 14:32:51 +0000

    user-manual-metadata: Expand parsing process docuemtnation
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

87	1	doc/user-manual/user-manual-metadata.xml

commit 0a99fe01dc273c548f7f83f9a7695c21184e7331
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2014-01-18 14:30:45 +0000

    user-manual-metadata: Add section about layers
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

40	0	doc/user-manual/user-manual-metadata.xml

commit f2ffe0365df7aa9c7d6c57b6bff8a5bbed198bfb
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2014-01-18 14:29:16 +0000

    user-manual-metadata: Add section about INHERIT
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

9	0	doc/user-manual/user-manual-metadata.xml

commit b32524643c125c78848630a5ce18d1df36313bc7
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2014-01-18 14:27:30 +0000

    user-manual-metadata: Add section about running tasks and the environment
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

74	0	doc/user-manual/user-manual-metadata.xml

commit c2bcb5364ff7c702bc1ec2726169f608b445f979
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2014-01-18 14:26:07 +0000

    user-manual-metadata: Rework section about shell/python functions
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

49	12	doc/user-manual/user-manual-metadata.xml

commit 85ffd05f292386de1b098debb6a3d3fe18c6b6b7
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2014-01-18 14:24:13 +0000

    user-manual-metadata: Add section about data store operations
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

69	0	doc/user-manual/user-manual-metadata.xml

commit 240d3f0439e7c1f12e06fa738acc20fbcac8ae65
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2014-01-18 14:22:41 +0000

    user-manual-metadata: Add lists of common events
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

27	0	doc/user-manual/user-manual-metadata.xml

commit 6f326f2f2785d6d48d7753abee6e8162852d8702
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2014-01-18 14:02:18 +0000

    user-manual-metadata: Editing pass over the manual chapter
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

137	105	doc/user-manual/user-manual-metadata.xml

commit 56f8c4ad09c244522d68e203fe4cb76d593a9f2f
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2014-01-18 13:20:36 +0000

    user-manual-metadata: Use filename tags instead of literal and varname tags
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

110	103	doc/user-manual/user-manual-metadata.xml

commit be3967f9f088e414c679e72a947817b60bab82d7
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2014-01-18 13:14:30 +0000

    user-manual-metadata: Replace screen tags with literallayout tags
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

142	178	doc/user-manual/user-manual-metadata.xml

commit 7eb1e340321ab4a5baa23e83eebf65ba13d23aef
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2014-01-18 11:34:47 +0000

    user-manual-metadata: Update whitespace (no content changes)
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

621	247	doc/user-manual/user-manual-metadata.xml

commit 6f2bed62bde5cd20f91c336b158f60f4a6bcb82f
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2014-01-17 16:35:32 +0000

    user-manual-metadata: Reorder sections to more logical order
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

95	92	doc/user-manual/user-manual-metadata.xml

commit 4ad94fb161d5fe24869696187e01004bff61d569
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2014-01-17 16:22:42 +0000

    user-manual-metadata: Add section ids for most sections
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

59	33	doc/user-manual/user-manual-metadata.xml

commit 9ddbf31ba7d05a596ca53b8ed78d94221850894b
Author: Scott Rifenbark <scott.m.rifenbark@intel.com>
Date:   2014-01-14 07:27:59 -0600

    user-manual-hello.xml: Added new chapter for "Hello World Example"
    
    This file was evidently a "working" file and not included in the
    manual at the point Bill left off.  The wmat branch, however, had
    a load of commits dedicated to this file.  Rather than attempt to
    replay them all one-by-one, I simply copied the file from the
    wmat branch and hand-inserted the changes to make it equal to what
    was there.  Note also that I re-formatted the file to have the
    same formatting standards I use in the YP manuals.
    
    Signed-off-by: Scott Rifenbark <scott.m.rifenbark@intel.com>

321	0	doc/user-manual/user-manual-hello.xml

commit df92da67ddbb2bcc672911626b9abd1a168cf436
Author: Scott Rifenbark <scott.m.rifenbark@intel.com>
Date:   2014-01-13 18:04:41 -0600

    user-manual.xml: Cleanup on the title page.
    
    1. Added commented out manual revision history.
    2. Cleaned up the author stuff.
    
    Signed-off-by: Scott Rifenbark <scott.m.rifenbark@intel.com>

60	7	doc/user-manual/user-manual.xml

commit afc998a73f09f3d1a0d7e22425badfa5b7001aa1
Author: Bill Traynor <wmat@alphatroop.com>
Date:   2014-01-13 18:34:16 -0600

    user-manual-intro.xml: Re-write of BitBake introduction.
    
    Signed-off-by: Scott Rifenbark <scott.m.rifenbark@intel.com>

40	15	doc/user-manual/user-manual-intro.xml

commit 5e22c0c5d4bb9e63142a13618f5f87e53c83d9f2
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2014-01-17 15:15:24 +0000

    user-manual-intro: Various minor cleanups/improvements
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

20	23	doc/user-manual/user-manual-intro.xml

commit 083e4e44f52ffdfca68ce6c56eae85ce3b719e1b
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2014-01-17 15:07:11 +0000

    user-manual-intro: Add obtaining bitbake and summary sections
    
    Add new obtaining bitbake and summary sections from Bill Traynor
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

83	0	doc/user-manual/user-manual-intro.xml

commit 55875bcf682979ce538845a8118452425ff96cfc
Author: Scott Rifenbark <scott.m.rifenbark@intel.com>
Date:   2014-01-13 17:35:00 -0600

    user-manual-intro.xml: Added "Concepts" section.
    
    Provided initial text for recipes, configuration files, and
    classes.
    
    Signed-off-by: Scott Rifenbark <scott.m.rifenbark@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

89	1	doc/user-manual/user-manual-intro.xml

commit fb74a1926c3a603a4c1ebe0325b27fb2c3aec3ee
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2014-01-17 15:00:48 +0000

    user-manual-intro: Update/improve whitespace
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

95	33	doc/user-manual/user-manual-intro.xml

commit 780f61da6a59c52555de8574093a264d565b2a75
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2014-01-17 14:58:20 +0000

    user-manual-intro: Expand introduction and fix spelling mistakes
    
    Expand the introduction section, fill out the section ids and fix some spelling
    mistakes.
    
    Wording from Bill Traynor/Scott Rifenbark
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

45	14	doc/user-manual/user-manual-intro.xml

commit 67b6e9c54676e979c546c0d350b2d01443f13f36
Author: Bill Traynor <wmat@alphatroop.com>
Date:   2013-01-14 15:24:34 -0500

    documentation: Add README based off the YP docs one
    
    Reusing the README file from the Yocto Project Documentation
    directory but removed the YP specific content and changed to be
    specific to BitBake.
    
    Signed-off-by: Bill Traynor <wmat@alphatroop.com>

39	0	doc/README

commit f6310ca9ccb402a7569a79a4e92751c6d5733697
Author: Bill Traynor <wmat@alphatroop.com>
Date:   2013-01-14 14:32:51 -0500

    gitignore: Update for recent docs changes
    
    Added a few more files to gitignore file to allow document
    generation testing.
    
    Signed-off-by: Bill Traynor <wmat@alphatroop.com>

3	0	.gitignore

commit 020178eba958d2d5142ee0909fc0fd133b97cd92
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2013-01-11 12:45:15 -0500

    user-manual: Separate out chapters into individual files
    
    Splitting the manual into a chapter per file makes the content
    a little more managable.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

158	0	doc/user-manual/user-manual-bitbakecommand.xml
92	0	doc/user-manual/user-manual-fetching.xml
50	0	doc/user-manual/user-manual-intro.xml
311	0	doc/user-manual/user-manual-metadata.xml
31	0	doc/user-manual/user-manual.xml
0	627	doc/user-manual/usermanual.xml

commit d4199078692f86341ed5b42a7c2dd4b34819aead
Author: Bill Traynor <wmat@alphatroop.com>
Date:   2013-01-11 12:45:15 -0500

    user-manual: Import YP Docs templates for usermanual improvements
    
    Import the necessary pieces to be able to build the BitBake User
    Manual using make in a similar way that the Yocto Documentation is
    built.  The Makefile has been edited to remove Yocto Project specific
    content and adapt for bitbake's needs.
    
    Signed-off-by: Bill Traynor <wmat@alphatroop.com>

77	0	doc/Makefile
59	0	doc/poky.ent
-	-	doc/template/Vera.ttf
1	0	doc/template/Vera.xml
-	-	doc/template/VeraMoBd.ttf
1	0	doc/template/VeraMoBd.xml
-	-	doc/template/VeraMono.ttf
1	0	doc/template/VeraMono.xml
64	0	doc/template/db-pdf.xsl
-	-	doc/template/draft.png
58	0	doc/template/fop-config.xml
1240	0	doc/template/titlepage.templates.xml
51	0	doc/tools/docbook-to-pdf
0	56	doc/user-manual/Makefile
-	-	doc/user-manual/figures/bitbake-title.png
8	0	doc/user-manual/user-manual-customization.xsl
978	0	doc/user-manual/user-manual-style.css

commit 4617aa5e8491067f7825062ed3baee27cf697e88
Author: Bill Traynor <wmat@alphatroop.com>
Date:   2013-01-07 09:34:50 -0500

    usermanual: Renamed manual dir to user-manual to be consistent.
    
    Renaming the manual directory to user-manual in order to allow
    for future additions of specific manual types, such as a
    dev-manual.
    
    Signed-off-by: Bill Traynor <wmat@alphatroop.com>

0	0	doc/{manual => user-manual}/Makefile
0	0	doc/{manual => user-manual}/html.css
0	0	doc/{manual => user-manual}/usermanual.xml

commit 0546bc19557de9263b448ceb1707884543d2de56
Author: Bill Traynor <wmat@alphatroop.com>
Date:   2013-01-04 10:40:40 -0500

    usermanual: Updated CC License to version 3.0
    
    Updated the Creative Commons License to the most current version,
    version 3.0.  Also updated the Creative Commons mailing address.
    
    Signed-off-by: Bill Traynor <wmat@alphatroop.com>

1	1	doc/manual/usermanual.xml

commit 24e0367429b248108b104ab5a2af05efcf7a8c39
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2014-01-17 17:58:05 +0000

    toaster: fix package data gathering
    
    Under OE-Core, the name under which a package would
    be installed in a target may have been different than the
    name under it has been built or recorded in the dependencies
    listings.
    
    This patch addresses the way that Toaster records package
    names, and adds the field of "installed_name" to save the
    name under which a package have been installed in an image.
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>

12	2	lib/bb/ui/buildinfohelper.py
180	0	lib/toaster/orm/migrations/0004_auto__add_field_package_installed_name.py
1	0	lib/toaster/orm/models.py

commit 9164948e387a726f318f723f63e8d93435d7afe6
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2014-01-20 17:31:08 +0000

    toaster: fix builds page CSS and functionality
    
    This patch fixes a set of CSS and functionality problems
    with the build list page:
    
    * Fix Recent Builds text styles
    * Added proper links from Failed Tasks entries.
    * Always Search returns to the first page of results.
    * Clear search button appears only if search is active.
    * Search shows the number of object, proper no objects found
    * Various smaller fixes.
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>

2	1	lib/toaster/toastergui/templates/basetable_top.html
8	8	lib/toaster/toastergui/templates/build.html
2	1	lib/toaster/toastergui/views.py

commit 8b44955bb836ccad384718247ceb08d713ebc152
Author: Barros Pena, Belen <belen.barros.pena@intel.com>
Date:   2014-01-16 10:50:59 +0000

    toaster: Set .error styles for tables
    
    Override the default styles of Twitter Bootstrap for table rows
    with the .error class applied, and ensure that table cells and
    anchor tags inherit the .error styles when their table row has
    that class applied.
    
    Signed-off-by: Belen Barros <belen.barros.pena@intel.com>

17	12	lib/toaster/toastergui/static/css/default.css

commit b2f8de082c3ae41eb44e6ccdc283849b64d0b0f2
Author: Ravi Chintakunta <ravi.chintakunta@timesys.com>
Date:   2014-01-10 16:43:24 -0500

    toaster: All Tasks Feature with sorting and filtering
    
    - Fixed the all tasks view and template  to match the UI design and use
    the new basetable code.
    
    - Added a method to views to add sort order icon to the view context.
    
    - Default sort order when the page is loaded is displayed with the sort icon
    
    - Filtering of columns
    
    Signed-off-by: Ravi Chintakunta <ravi.chintakunta@timesys.com>

0	74	lib/toaster/toastergui/templates/task.html
67	0	lib/toaster/toastergui/templates/tasks.html
118	6	lib/toaster/toastergui/views.py

commit d561000b6c4927ef6ec269e9ab7c70249b3c344a
Author: David Reyna <David.Reyna@windriver.com>
Date:   2014-01-17 16:58:08 -0800

    toaster: Implementation of recipe detail views
    
    Add the new recipe detail page and update the view context accordingly.
    Rename the recipe summary page to 'recipes.html' and add the respective
    links to the recipe details page.
    
    The views are based on specifications found in attachments to
            https://bugzilla.yoctoproject.org/show_bug.cgi?id=4299
    
    [YOCTO #4299]
    
    Signed-off-by: David Reyna <david.reyna@windriver.com>

266	42	lib/toaster/toastergui/templates/recipe.html
52	0	lib/toaster/toastergui/templates/recipes.html
14	3	lib/toaster/toastergui/views.py

commit 2d7e9a6f8464783e165804974a7d94b544c9a43f
Author: David Reyna <David.Reyna@windriver.com>
Date:   2014-01-16 17:41:57 -0800

    toaster: Implementation of base build details page
    
    This page is the standard base page for 'details' views. It is
    based on 'basebuildpage.html' but does not include the build's
    quick-link sidebar.
    
    Signed-off-by: David Reyna <david.reyna@windriver.com>
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>

28	0	lib/toaster/toastergui/templates/basebuilddetailpage.html

commit 1e9253984e6f107c6eed1c3b9df3a444076e2989
Author: Ravi Chintakunta <ravi.chintakunta@timesys.com>
Date:   2014-01-14 14:06:38 -0500

    toaster: Added custom filter tags for use in templates.
    
    - custom filter tag to return the css class based on
      the task execution status and execution outcome
    
    - custom filters for active filter icon and tooltip text
    
    - custom filter for displaying blank for None, zero, '0' and
      'Not Applicable'
    
    Signed-off-by: Ravi Chintakunta <ravi.chintakunta@timesys.com>
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>

35	0	lib/toaster/toastergui/templatetags/projecttags.py

commit 53ede15926d45b555252d77919a0568a984c6d74
Author: Ravi Chintakunta <ravi.chintakunta@timesys.com>
Date:   2014-01-10 16:36:40 -0500

    toaster: Base table fixes for header text, sort icon and filter icon
    
    - Display the table column header as a link only if it is sortable.
       Non-sortable column headers are displayed as plain text.
    
    - Display the sort order by an up / down arrow icon next to the
       column header
    
    - Add style for header in default.css
    
    - Set tooltip for the active filter icon
    
    - Pass the view name to the filter dialog
    
    Signed-off-by: Ravi Chintakunta <ravi.chintakunta@timesys.com>
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>

1	0	lib/toaster/toastergui/static/css/default.css
1	1	lib/toaster/toastergui/templates/basetable_bottom.html
3	2	lib/toaster/toastergui/templates/basetable_top.html

commit 8bfd140b93bcbfe8be4dd8a30268d3cc033e180f
Author: Ravi Chintakunta <ravi.chintakunta@timesys.com>
Date:   2014-01-15 14:55:06 -0500

    toaster: Base html fix to set the page title
    
    Set title of the page if the context includes objectname.
    
    Signed-off-by: Ravi Chintakunta <ravi.chintakunta@timesys.com>
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>

1	1	lib/toaster/toastergui/templates/base.html

commit 86d3a44e81aa3dbff947330dfaeff6040bbd625f
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2014-01-09 22:08:09 -0500

    toaster: settings remove duplicate entry
    
    The 'toastergui' application had duplicate entries,
    so this patch removes the duplicate ones.
    
    Based on an original patch from Ravi Chintakunta <ravi.chintakunta@timesys.com>.
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>

0	1	lib/toaster/toastermain/settings.py

commit daf9a61fbf69a46b7afd781a6175b05b05fd452f
Author: Andreea Proca <andreea.b.proca@intel.com>
Date:   2014-01-14 16:01:08 +0200

    toaster: Add initial tests
    
    This adds the initial api tests for toaster, using Django's unittest modules.
    
    Signed-off-by: Andreea Proca <andreea.b.proca@intel.com>

4	3	lib/toaster/bldviewer/api.py
342	0	lib/toaster/bldviewer/tests.py
4	2	lib/toaster/bldviewer/views.py
140835	0	lib/toaster/orm/fixtures/orm_views_testdata.json

commit 61e3dee55ac577fce1c0ae0fe7e0d3cf644e8ae6
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2014-01-16 12:22:21 +0000

    toaster: Toaster GUI Build and Dashboard pages fixes
    
    THis is a large set of fixes for the generic table, Build and
    Dashboard pages.
    
    Among the fixes:
    * the table remembers which columns to show across refreshes,
    based on saving the settings in a cookie
    * added column timespent for a build which is  a denormalization
    of the completed_on - started_on information due to limits in
    computing datetime differences in the SQL engine
    * fixed formatting of the time differences
    * various sorting header links fixed
    * correct error and warning CSS classes applied to the
    respective rows
    * fixes multiple divide-by-zero error in displaying duration
    estimations
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>

2	1	lib/bb/ui/buildinfohelper.py
180	0	lib/toaster/orm/migrations/0002_auto__add_field_build_timespent.py
182	0	lib/toaster/orm/migrations/0003_timespent.py
2	1	lib/toaster/orm/models.py
1	1	lib/toaster/toastergui/templates/basebuildpage.html
15	0	lib/toaster/toastergui/templates/basetable_bottom.html
18	5	lib/toaster/toastergui/templates/basetable_top.html
12	8	lib/toaster/toastergui/templates/build.html
2	2	lib/toaster/toastergui/templates/builddashboard.html
1	1	lib/toaster/toastergui/templates/configvars.html
13	4	lib/toaster/toastergui/templatetags/projecttags.py
45	24	lib/toaster/toastergui/views.py

commit 8ce1668dd93269add878f8ea69deb8b53f3bca8b
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2014-01-16 13:07:02 +0000

    toaster: add jquery cookie plugin
    
    We add the jquery cookie plugin to allow us to save
    and read local client date in cookie.
    
    jquery-cookie using version 1.4.0 under MIT licence.
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>

117	0	lib/toaster/toastergui/static/js/jquery.cookie.js
2	0	lib/toaster/toastergui/templates/base.html

commit 73271a7c6f1913c68a4b39ab86414f44acc04776
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2014-01-14 12:50:32 +0000

    toaster: add vim modelines for .py files
    
    No-op patch that adds vim modelines for all .py files
    intended to be user-edited.
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>

3	0	lib/toaster/bldviewer/api.py
3	0	lib/toaster/bldviewer/templatetags/projecttags.py
3	0	lib/toaster/bldviewer/urls.py
3	0	lib/toaster/bldviewer/views.py
3	0	lib/toaster/orm/models.py
3	0	lib/toaster/toastergui/templatetags/projecttags.py
3	0	lib/toaster/toastergui/urls.py
3	0	lib/toaster/toastergui/views.py
3	0	lib/toaster/toastermain/settings.py
3	0	lib/toaster/toastermain/urls.py
3	0	lib/toaster/toastermain/wsgi.py

commit a4164821a142f8b625a5fdc209adc6dc80874241
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2014-01-14 12:35:12 +0000

    toaster: update Task classification fields
    
    This patch updates the task classification fields (outcome, etc)
    as to
    
    * Changes outcome names from SSTATE to CACHED and
    from EXISTING to PREBUILT
    
    * NoExec tasks now recorded as Not Executed / script type NA instead
    of Executed / script type NOEXEC. Script type NOEXEC is deleted.
    
    * SetScene tasks do not get order numbers
    
    * New task method that returns a QuerySet for setscene tasks related
    to this task: Task.get_related_setscene()
    
    * New custom TaskManager that allows searching for setscene tasks
    related to a certain task: Task.objects.related_setscene(task)
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>

12	7	lib/bb/ui/buildinfohelper.py
6	2	lib/toaster/bldviewer/templates/simple_task.html
1	1	lib/toaster/bldviewer/views.py
15	7	lib/toaster/orm/models.py

commit 6ed1a28eb0e52a6de83a37664ff6f4418ce84ee4
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2014-01-13 17:03:41 +0000

    toaster: update Simple UI references to avoid conflict
    
    Since the Toaster GUI was cloned from the Simple UI, we need
    to update the URL pattern names in Simple UI to
    prevent conflict when determining the reverse URL path.
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>

2	2	lib/toaster/bldviewer/templates/simple_base.html
4	4	lib/toaster/bldviewer/templates/simple_basebuildpage.html
2	2	lib/toaster/bldviewer/templates/simple_bpackage.html
2	2	lib/toaster/bldviewer/templates/simple_build.html
1	1	lib/toaster/bldviewer/templates/simple_layer.html
1	1	lib/toaster/bldviewer/templates/simple_package.html
1	1	lib/toaster/bldviewer/templates/simple_task.html
8	8	lib/toaster/bldviewer/urls.py

commit 1dbf400c662354b7826b2b97ee2e3e6d11af9fd2
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2014-01-20 21:36:36 +0000

    runqueue: Only attempt to print closest matching task if there is a match
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

5	6	lib/bb/runqueue.py

commit 300cba2e1a720dba4b83b0c76208ea93c608c1de
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2014-01-21 09:58:21 +0000

    fetch2/wget: Check downloaded file isn't zero size
    
    I can't think of a reason we'd download zero sized files however there are
    reasons zero length files can accidently make it onto source mirrors.
    
    This check allows us to ignore the broken files and switch to another
    mirror rather than fail with odd checksum failures.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

4	0	lib/bb/fetch2/wget.py

commit 8ef24f4c834298348172b96ec0b855bf09552b09
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2014-01-20 14:23:55 +0000

    fetch2/git: Dereference unresolved tags with ls-remote
    
    We need to deference tags when trying to map them to commit IDs with
    ls-remote. If we don't do this, a given commit might not show up
    later in a specific branch. There appears to be no good reason not
    to do this.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/fetch2/git.py

commit df2e0972cd1db7abd5ec8b7cb295fb0c42e284a4
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2014-01-20 14:30:11 +0000

    fetch2/git: Anchor names when using ls-remote
    
    When specifying tags, they're searched for unanchored so foo/bar could
    match:
    
    refs/heads/abc/foo/bar
    refs/heads/xyz/foo/bar
    refs/heads/foo/bar
    
    This change anchors the expressions so they are based against heads
    or tags (or any other base level tree that has been created).
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	2	lib/bb/fetch2/git.py

commit 0c1bb7c0fce7b0f334311a2893ccb00385fa8d55
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2014-01-20 13:25:43 +0000

    fetch2: Improve invalid SRCREV error message
    
    The current message can be ambiguous, improve it (and also rename a
    variable to clean up the rest of the function).
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

5	10	lib/bb/fetch2/__init__.py

commit e82a4ab48991035866da9914c8b75a9bfbc9a7fc
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2014-01-20 13:15:12 +0000

    fetch2: Sanity check SRCREV matches rev/tag parameter
    
    Add a sanity check so that if some SRCREV is set and a rev parameter is given
    to the url, the revision given should match.
    
    Any tag parameter behaves the same as rev. If both are specified, error to
    tell the user we're confused rather than do something which may or may not
    be what they intended.
    
    Also add some unittests for this.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

14	6	lib/bb/fetch2/__init__.py
15	0	lib/bb/tests/fetch.py

commit 86ef4e65ce18b71dc69643586bd2aa8f48703171
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2014-01-20 13:10:46 +0000

    fetch2: Clean up srcrev_internal_helper
    
    Currently INVALID and None are checked as incorrect values under different
    circumstances. This code standardises those checks to be consistent. We
    should phase out the use of "INVALID".
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

16	9	lib/bb/fetch2/__init__.py

commit c08ca1e4eeb04f78e1354780cf5a4c3855e49572
Author: Robert Yang <liezhi.yang@windriver.com>
Date:   2013-12-26 00:01:26 +0800

    fetch2/__init__.py: let try_mirror_url return correct value
    
    The fetcher will try:
    
    1) PREMIRROR
    2) Upstream
    3) MIRROR
    
    If it fails to download from the Upstream, but succeeds from the MIRROR,
    and ud.localpath != origud.localpath (for example, the git tarball),
    then we will get the error (e.g.: xf86-video-omapfb):
    
    ERROR: Function failed: Fetcher failure for URL: 'xxx'. Unable to fetch URL from any source.
    ERROR: Logfile of failure stored in: /path/to/log.do_fetch.28024
    
    It should not show the error and let the build go on since it succeeds.
    (e.g.: xf86-video-omapfb)
    
    [YOCTO #5686]
    
    Signed-off-by: Robert Yang <liezhi.yang@windriver.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/fetch2/__init__.py

commit 53352e8d388b7fc4da73f95b93dcc087e76d0426
Author: Martin Jansa <martin.jansa@gmail.com>
Date:   2014-01-17 14:13:43 +0100

    SignatureGenerator: Add empty implementation for dump_sigs
    
    * bitbake -S throws exception when 'noop' signature handler is used
    
    [YOCTO #5738]
    
    Signed-off-by: Martin Jansa <Martin.Jansa@gmail.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	0	lib/bb/siggen.py

commit 23ab943be3a33077d6ad8be68bba53cd1e2270b4
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2014-01-17 12:01:27 +0000

    fetch2/gitsm: Use ud.basecmd instead of hardcoding git
    
    This allows FETCHCMD_git to override the fetcher command as the git fetcher does.
    
    [YOCTO #5717]
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

5	5	lib/bb/fetch2/gitsm.py

commit 2c82742114091cb55055328b54223686816582f2
Author: Martin Jansa <martin.jansa@gmail.com>
Date:   2014-01-16 15:55:19 +0100

    fetch2: Don't allow '/' in user:pass, fix branch containing '@'
    
    * currently decode_url regexp parses branch=@foo as username so it ends like this:
      - ('git', '', 'foo', 'git.openembedded.org/bitbake;branch=', '', {})
      + ('git', 'git.openembedded.org', '/bitbake', '', '', {'branch': '@foo'})
    * http://hg.python.org/cpython/file/2.7/Lib/urlparse.py also assumes
      that there is at least one '/' as separator between netloc and path,
      params, so it looks reasonable to prevent including '/' in username
    
    Signed-off-by: Martin Jansa <Martin.Jansa@gmail.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/fetch2/__init__.py
2	1	lib/bb/tests/fetch.py

commit 46fd841319479f6079d850b3813e64bd8c2680a3
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2014-01-18 23:23:02 +0000

    siggen: Remove fsync that is causing performance issues
    
    This fsync was added for belt and braces protection for things like sstate
    on NFS. To be honest, it probably doesn't buy much, if the rename isn't
    atomic, all bets are off anyway and there are bigger issues to worry about.
    
    The issue is that at the end of every task, the dump_sig() code is triggered
    to save out information about the task and this was triggering an fsync(fd).
    
    Whilst it may select the file descriptor, on file systems like ext4, it will
    require large parts of the journal to be written out so it can have
    significant impact. latencytop showed an average fsync() call overhead of about
    2s and if that happens for 5000 tasks, the time mounts up. This blocks the next
    task execution by that time.
    
    We therefore drop the fsync since in reality its causing problems and is unlikely
    to buy much.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

0	1	lib/bb/siggen.py

commit 2ca15117e4bbda38cda07511d0ff317273f91528
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2014-01-07 13:10:42 +0000

    toaster: Toaster GUI, generic search, filter and order
    
    This patch implements table searching, filtering and ordering, in a
    generic mode reusable for all tables.
    
    The search operates list of fields defined in the corresponding
    class for each model, search_allowed_fields.
    
    The search expression and filters are sent through GET requests
    using a QuerySet-like input. The inputs are filtered and
    validated before usage to prevent inadvertent or malicious use.
    
    Filters and table headers are defined in the views for each table,
    and rendered by generic code which is easily modified for various
    tables.
    
    The Build table and Configuration table are implemented using this
    framework as an example of how it should be used.
    
        [YOCTO #4249]
        [YOCTO #4254]
        [YOCTO #4255]
        [YOCTO #4256]
        [YOCTO #4257]
        [YOCTO #4259]
        [YOCTO #4260]
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>

7	3	lib/toaster/orm/models.py
4	1	lib/toaster/toastergui/static/css/default.css
10	3	lib/toaster/toastergui/templates/basetable_bottom.html
43	36	lib/toaster/toastergui/templates/basetable_top.html
69	60	lib/toaster/toastergui/templates/build.html
46	17	lib/toaster/toastergui/templates/configuration.html
40	0	lib/toaster/toastergui/templates/configvars.html
19	0	lib/toaster/toastergui/templates/filtersnippet.html
8	1	lib/toaster/toastergui/templatetags/projecttags.py
1	0	lib/toaster/toastergui/urls.py
252	160	lib/toaster/toastergui/views.py

commit bf7fbf5c0ee39564d813f82e194242f9d4f73c47
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2013-12-13 17:14:34 +0000

    toaster: Build dashboard implementation
    
    This patch adds the build dashboard page implementation,
    which is the landing page for the Toaster GUI.
    
    Also adds correct links from the main build page
    to the various parts of the dashboard.
    
        [YOCTO #4258]
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>

3	4	lib/toaster/toastergui/templates/basebuildpage.html
2	2	lib/toaster/toastergui/templates/basetable_bottom.html
8	9	lib/toaster/toastergui/templates/build.html
66	0	lib/toaster/toastergui/templates/builddashboard.html
18	0	lib/toaster/toastergui/templatetags/projecttags.py
28	8	lib/toaster/toastergui/views.py

commit d31f039ae31b77023722c06e66542751536a1362
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2013-12-11 16:42:34 +0000

    toaster: Create the base page navigation structure
    
    Updating the general container pages to use the graphical
    design and features from the design phase.
    
    In the process of adapting the Simple UI to the designed
    interface, we create all the pages and the navigation
    structure for the Toaster GUI.
    
    Views for each page have been added, and the url mapping
    has been updated to reflect newly added pages.
    
    The table page has been refactored to be component-oriented
    instead of class-oriented in order to facilitate reusage.
    
    Changes are made in different layers of the template
    (base, basetable) in order to maximize code reuse among
    different pages in the build.
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>

49	15	lib/toaster/toastergui/templates/base.html
54	15	lib/toaster/toastergui/templates/basebuildpage.html
0	64	lib/toaster/toastergui/templates/basetable.html
60	0	lib/toaster/toastergui/templates/basetable_bottom.html
66	0	lib/toaster/toastergui/templates/basetable_top.html
9	3	lib/toaster/toastergui/templates/bpackage.html
84	31	lib/toaster/toastergui/templates/build.html
8	0	lib/toaster/toastergui/templates/builddashboard.html
4	0	lib/toaster/toastergui/templates/buildtime.html
8	2	lib/toaster/toastergui/templates/configuration.html
4	0	lib/toaster/toastergui/templates/cpuusage.html
4	0	lib/toaster/toastergui/templates/diskio.html
7	8	lib/toaster/toastergui/templates/recipe.html
8	0	lib/toaster/toastergui/templates/target.html
9	2	lib/toaster/toastergui/templates/task.html
5	0	lib/toaster/toastergui/templatetags/projecttags.py
27	7	lib/toaster/toastergui/urls.py
155	12	lib/toaster/toastergui/views.py
10	0	lib/toaster/toastermain/settings.py

commit 0b3d2000c0bcd2bb5a3af5d49a514a90f001a7d2
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2013-12-11 16:40:05 +0000

    toaster: update static media for Toaster GUI
    
    In the process of making the GUI more usable, we
    bring in the static assets used during the design
    phase into the application.
    
    Licenses used:
    
        Bootstrap 2.3.2 under Apache License 2.0
        Font Awesome under SIL OFL 1.1 (GPL compatible) and MIT licence
        GLYPHICONS Halflings released with Bootstrap, CC BY 3.0
        jQuery 2.0.3 under MIT licence
        prettify.js under Apache Licence 2.0
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>

-	-	lib/toaster/toastergui/static/css/bootstrap-responsive.min.css
-	-	lib/toaster/toastergui/static/css/bootstrap.min.css
174	0	lib/toaster/toastergui/static/css/default.css
-	-	lib/toaster/toastergui/static/css/font-awesome.min.css
1	0	lib/toaster/toastergui/static/css/prettify.css
-	-	lib/toaster/toastergui/static/fonts/FontAwesome.otf
-	-	lib/toaster/toastergui/static/fonts/fontawesome-webfont.eot
284	0	lib/toaster/toastergui/static/fonts/fontawesome-webfont.svg
-	-	lib/toaster/toastergui/static/fonts/fontawesome-webfont.ttf
-	-	lib/toaster/toastergui/static/fonts/fontawesome-webfont.woff
-	-	lib/toaster/toastergui/static/fonts/glyphicons-halflings-regular.eot
229	0	lib/toaster/toastergui/static/fonts/glyphicons-halflings-regular.svg
-	-	lib/toaster/toastergui/static/fonts/glyphicons-halflings-regular.ttf
-	-	lib/toaster/toastergui/static/fonts/glyphicons-halflings-regular.woff
-	-	lib/toaster/toastergui/static/img/logo.png
-	-	lib/toaster/toastergui/static/js/bootstrap.min.js
-	-	lib/toaster/toastergui/static/js/{jquery-2.0.3.js => jquery-2.0.3.min.js}
1	0	lib/toaster/toastergui/static/js/jquery-2.0.3.min.map
15003	0	lib/toaster/toastergui/static/js/jquery-ui.js
497	0	lib/toaster/toastergui/static/js/main.js
28	0	lib/toaster/toastergui/static/js/prettify.js

commit e2fde84f16da017ba0d71aef6a1fa8e2b9255db4
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2013-12-18 19:50:45 +0000

    toaster: clone Simple UI as base for Toaster GUI
    
    This patch clones the Simple UI to provide the base code for
    the development of the Toaster GUI. The clone takes the place
    of the application that was reserved for Javascript MVC code.
    
    The templates used for Simple UI are renamed to start with
    an "simple_" to prevent name resolution conflict with the
    Toaster GUI templates.
    
    Minor changes are made to the settings.py and urls.py in the
    toaster main section to account for the newly enabled application.
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>

0	0	lib/toaster/bldviewer/templates/{base.html => simple_base.html}
17	0	lib/toaster/bldviewer/templates/simple_basebuildpage.html
64	0	lib/toaster/bldviewer/templates/simple_basetable.html
24	0	lib/toaster/bldviewer/templates/simple_bfile.html
44	0	lib/toaster/bldviewer/templates/simple_bpackage.html
43	0	lib/toaster/bldviewer/templates/simple_build.html
22	0	lib/toaster/bldviewer/templates/simple_configuration.html
34	0	lib/toaster/bldviewer/templates/simple_layer.html
36	0	lib/toaster/bldviewer/templates/simple_package.html
52	0	lib/toaster/bldviewer/templates/simple_recipe.html
67	0	lib/toaster/bldviewer/templates/simple_task.html
8	8	lib/toaster/bldviewer/views.py
-	-	lib/toaster/toastergui/static/images/yocto.jpg
6	0	lib/toaster/toastergui/static/js/jquery-2.0.3.js
30	0	lib/toaster/toastergui/templates/base.html
0	0	lib/toaster/{bldviewer => toastergui}/templates/basebuildpage.html
0	0	lib/toaster/{bldviewer => toastergui}/templates/basetable.html
0	0	lib/toaster/{bldviewer => toastergui}/templates/bfile.html
0	0	lib/toaster/{bldviewer => toastergui}/templates/bpackage.html
0	0	lib/toaster/{bldviewer => toastergui}/templates/build.html
0	0	lib/toaster/{bldviewer => toastergui}/templates/configuration.html
0	13	lib/toaster/toastergui/templates/index.html
0	0	lib/toaster/{bldviewer => toastergui}/templates/layer.html
0	0	lib/toaster/{bldviewer => toastergui}/templates/package.html
0	0	lib/toaster/{bldviewer => toastergui}/templates/recipe.html
0	0	lib/toaster/{bldviewer => toastergui}/templates/task.html
0	0	lib/toaster/toastergui/templatetags/__init__.py
26	0	lib/toaster/toastergui/templatetags/projecttags.py
11	6	lib/toaster/toastergui/urls.py
258	4	lib/toaster/toastergui/views.py
1	0	lib/toaster/toastermain/settings.py
1	1	lib/toaster/toastermain/urls.py

commit e13acb4113ce75226664c3006a9776cc885e860d
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2014-01-08 15:26:29 +0000

    fetch2/gitannex: Fix function arguments to match bitbake master
    
    This code clearly uses an earlier fetcher API. Update it to match master.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

5	5	lib/bb/fetch2/gitannex.py

commit e14031fbe4924819ab4c9705eef2bedccae1506c
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2014-01-08 13:07:39 +0000

    gitannex: Add missing file from previous commit
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

76	0	lib/bb/fetch2/gitannex.py

commit b426740b2ae8245c8cf0f314bf4983b6fff7ecb7
Author: Zhenhua Luo <zhenhua.luo@freescale.com>
Date:   2014-01-08 18:17:08 +0800

    bitbake: fetch2/git: add description for nobranch
    
    Signed-off-by: Zhenhua Luo <zhenhua.luo@freescale.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

5	0	lib/bb/fetch2/git.py

commit a61fc4db598e9d13c966712a6a0e4783e19448be
Author: Otavio Salvador <otavio@ossystems.com.br>
Date:   2014-01-07 13:58:33 -0200

    bitbake: gitannex.py: Add Git Annex support
    
    This add a Git Annex backend which reuses the Git fetcher code; it
    allows managing files with git, without checking the file contents
    into git, being useful when dealing with files larger than git can
    currently easily handle, whether due to limitations in memory, time,
    or disk space.
    
    Signed-off-by: Otavio Salvador <otavio@ossystems.com.br>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	0	lib/bb/fetch2/__init__.py

commit f594cb9f5a18dd0ab2342f96ffc6dba697b35f65
Author: Zhenhua Luo <zhenhua.luo@freescale.com>
Date:   2014-01-07 18:45:34 +0800

    bitbake: fetch2/git: add nobranch option for SRC_URI to skip SHA validating for branch
    
    For rebased git tree, some commits doesn't exist in any branch, and such commits are
    valid in tag, the change is useful for such case.
    
    Signed-off-by: Zhenhua Luo <zhenhua.luo@freescale.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

9	2	lib/bb/fetch2/git.py

commit 0636797d75874ce4577f29011d69c56a4c6b9e89
Author: Robert Yang <liezhi.yang@windriver.com>
Date:   2014-01-06 04:52:35 -0500

    bitbake/lib/bb/build.py: fix the task flags cleandirs
    
    The user manual said:
    
    'cleandirs' - directories which should created before the task runs but should be empty
    
    But it only removes the dir, doesn't create it
    
    [YOCTO #5703]
    
    Signed-off-by: Robert Yang <liezhi.yang@windriver.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	0	lib/bb/build.py

commit 146318729dbeeee4136bcb4832e6f8f69f9a2489
Author: Robert Yang <liezhi.yang@windriver.com>
Date:   2014-01-06 04:52:36 -0500

    bitbake: usermanual.xml: fix a typo
    
    Fixed:
    "should created" -> "should be created"
    
    [YOCTO #5703]
    
    Signed-off-by: Robert Yang <liezhi.yang@windriver.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	doc/manual/usermanual.xml

commit f43d284e7ae752049711d8215a6020bee6966d45
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2013-12-10 18:24:18 +0000

    toaster: add two-stage commit startup logic
    
    Toaster start script lunches multiple process components
    of the toaster system.
    
    This patch adds logic into the startup script to
    safely fail startup and do proper cleanup on any error
    that may happen during system start.
    
    Bitbake needs to return 0 if it will successfully lunches
    the server-mode.
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	0	bin/bitbake
35	10	bin/toaster

commit 34afbdd0fc809b8fb20696aeef3e6a61d6812e16
Author: Robert Yang <liezhi.yang@windriver.com>
Date:   2014-01-04 01:24:32 +0800

    bitbake/lib/bb/cooker.py: remove a duplicated self.data
    
    Signed-off-by: Robert Yang <liezhi.yang@windriver.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

0	2	lib/bb/cooker.py

commit 2bc99b9dfa532430a13c39fca4e5ef3a2206b3b8
Author: Robert Yang <liezhi.yang@windriver.com>
Date:   2013-12-27 01:51:51 -0500

    bitbake: fetcher2: clean(): remove the .patch.done
    
    There was a problem:
    
    $ bitbake xf86-video-omapfb -cfetch && bitbake xf86-video-omapfb -ccleanall
    
    Everything should be removed, but the
    0006-omapfb-port-to-new-xserver-video-API.patch.done still exists in the
    DL_DIR, this is because the clean() in the fetch2/__init__.py skips
    removing the local file, so that it will skip removing the .done.
    
    The local file (file://) isn't needed to be removed since it is not
    downloaded into DL_DIR, but the .done should be removed, this patch will
    remove the .done, and it doesn't remove anything else since the clean()
    in local.py does nothing.
    
    [YOCTO #5687]
    
    Signed-off-by: Robert Yang <liezhi.yang@windriver.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/fetch2/__init__.py

commit fb2dc84875eb477661f421b21bc404d4805ce379
Author: Robert Yang <liezhi.yang@windriver.com>
Date:   2013-12-27 01:51:52 -0500

    bitbake: fetcher2: git.py: clean(): remove the .tar.gz.done
    
    There was a problem:
    
    $ bitbake xf86-video-omapfb -cfetch && bitbake xf86-video-omapfb -ccleanall
    
    The git2_git.pingu.fi.xf86-video-omapfb.tar.gz has been removed from the
    DL_DIR, but the git2_git.pingu.fi.xf86-video-omapfb.tar.gz.done still exists,
    this is because the "open(ud.donestamp, 'w').close()" in try_mirror_url() will
    create the git2_git.xxx.tar.gz.done, but no one removes it (the clean() in
    fetch2/__init__.py removes the DL_DIR/git2/pkg.done)
    
    This only happens on the git fetcher AFAIK.
    
    [YOCTO #5688]
    
    Signed-off-by: Robert Yang <liezhi.yang@windriver.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	0	lib/bb/fetch2/git.py

commit abafd85e2fcf23cee872e0e9e468898101430f1f
Author: Robert Yang <liezhi.yang@windriver.com>
Date:   2013-12-27 23:55:53 +0800

    bitbake: replace 3 spaces with 4
    
    A part of fetch2/__init__.py uses 3 spaces as the indent, I
    think that they should be typos.
    
    Signed-off-by: Robert Yang <liezhi.yang@windriver.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

4	4	lib/bb/fetch2/__init__.py

commit 46765369d7f76ec7f67b90430131a79eb6a66235
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2013-12-20 14:48:45 +0000

    fetch2: avoid printing "no checksum" error message twice
    
    Because of the way we were handling this error, it was printed twice -
    once via logger.error() (to avoid the log being printed) and a second
    time when the exception gets wrapped in a FuncFailed at a higher level.
    Call logger.error() earlier and change the text we send in the
    exception to be more brief, so it more closely resembles the behaviour
    when there is an invalid checksum.
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

4	5	lib/bb/fetch2/__init__.py

commit 040943a718795c64dc4e604abfcf08b26b7d00e6
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2013-12-20 14:48:44 +0000

    fetch2: fail checksum validation if SRC_URI checksums set to ""
    
    We were checking SRC_URI md5sum/sha256sum values against None here, so
    if they were set to "" then no error was produced. Since the value is
    still effectively unset in this case, this is not the right behaviour;
    just check if the value doesn't evaluate to False instead.
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	3	lib/bb/fetch2/__init__.py

commit 4cc6e61fe11eb233bdba7c1bdc110b8cdafa56f8
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2013-12-20 12:23:12 +0000

    Update to version 1.21.1 for master
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	bin/bitbake
1	1	lib/bb/__init__.py

commit 9b4142df36619099670740a5d3bc94e404ab2b56
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2013-12-20 12:07:20 +0000

    siggen: Fix reversed difference output
    
    The output when comparing siginfo files for dict_diff is reversed and shows
    additions when things were removed and vice versa. This patch reverses the operation
    so the changes are shown correctly and makes the output less confusing.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

6	6	lib/bb/siggen.py

commit 7a77861feb62750ef166d2d1e89ed1f444ca8dc7
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2013-12-19 09:40:52 +0000

    runqueue: Further extend bitbake -S output to view signature differences
    
    Based upon the list of difference starting points, we can use the siggen.find_siginfo()
    function call and the difference printing code to provide a list of differences
    between the current build target and whatever can be obtained from the sstate cache.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

45	2	lib/bb/runqueue.py

commit 7a17fd6e51a76d3582c357b79f5ef86e1969650c
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2013-12-19 09:37:39 +0000

    siggen: When printing signatures recursively, limit the output
    
    Currently the code prints all differences. If the task dependencies have changed hash,
    we recurse into those and print those differences as well. This leads to a lot
    of output. The reality is if the parents changed signature, we might as well just
    say that and recurse with no other output since we're much more interested in how
    the parents changed in nearly all cases. The changes in the parent are probably
    the same ones we'd have printed at each level anyway.
    
    By doing this we focus the output more carefully on the thing the user wants/needs
    to see.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	1	lib/bb/siggen.py

commit e6d5e925c402cd2cc7ee034e9de4cc6df8944a34
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2013-12-19 09:36:58 +0000

    runqueue: Fix data being written into siginfo/sigdata files
    
    The way hash_deps was being generated was different to the way siggen generated
    the data internally which lead to seemingly different sigdata/siginfo files
    for the same checksum. The -S output correct but the files written during
    builds contained superflous data which would look like a difference.
    
    This patch removes the badly duplicated data and uses it from the source
    which ensures its consistent.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	15	lib/bb/runqueue.py

commit c18b8450640ebfd55a2b35b112959f9ea3e0a700
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2013-12-18 16:21:27 +0000

    runqueue: Add output for -S option for listing the changepoints compared with an sstate cache
    
    Its useful to understand where the delta starts against an existing sstate cache
    for a given target. Adding this to the output of the -S option seems like a
    natural fit.
    
    We use the hashvalidate function to figure this out and assume it can find siginfo
    files for more than just the setscene tasks.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

77	0	lib/bb/runqueue.py

commit f8df6f746fb2e27f029a5449cee6c891b1f36f4f
Author: Olof Johansson <olof.johansson@axis.com>
Date:   2013-12-12 17:48:55 +0100

    bb.fetch2.git: reuse basecmd attribute
    
    The basecmd is initialized in urldata_init; there's no need redoing that
    work.
    
    Signed-off-by: Olof Johansson <olof.johansson@axis.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

7	8	lib/bb/fetch2/git.py

commit e85f39fe9d1b224414b5da0780da514f75c5df92
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2013-12-12 17:48:54 +0100

    fetch2/git: Improve handling of unresolved names verses branches
    
    Currently the fetcher doesn't distinguish between names that the fetcher
    needs to resolve verses branch names that the user specified.
    
    This meant that if you specify a tag and a branch, the fetcher broke. This
    separates the two so that the branch name is preserved and can be used in
    appropriate places.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

5	3	lib/bb/fetch2/git.py

commit bf7138dd38fc1f8efca80891198e3422fef64093
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2013-12-18 10:45:02 +0000

    build/ast: Create strong task add/del API in bb.build
    
    Currently its near impossible to control task addition/deletion from
    metadata context. This adds stong add/deltask API to bb.build
    which is traditionally where it resided. The rather broken
    remove_tasks function was removed, it didn't appear to do anything
    useful or have any users.
    
    This allows us to clean up hacks currently in use in metadata and use
    standard API for it instead.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

32	5	lib/bb/build.py
2	31	lib/bb/parse/ast.py

commit acecbde6fb70ff3c96deab3cdf819d8442e87ed4
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2013-12-18 10:44:30 +0000

    ast/BBHandler/build: Add support for removing tasks (deltask)
    
    Back in the depths of time we did support task removal. In the pre
    AST days it was nearly impossible to continue supporting it, it wasn't
    used so it was dropped. With the modern codebase we can easily now support
    deltask and it would be very useful within the metadata since it can
    massively simplify dependency trees.
    
    As an example, a core-image-sato had 47703 inter task dependencies before
    this patch and a patch to native.bbclass, afterwards with the noexec tasks
    deleted, we had 29883. Such a significant simplification is worthwhile
    and justifies adding a deltask operation to the system.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

5	1	lib/bb/build.py
24	1	lib/bb/parse/ast.py
6	0	lib/bb/parse/parse_py/BBHandler.py

commit 8f4733257ad665aa7c7e7061c543379d5e4e3af2
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2013-12-13 12:06:12 +0000

    data_smart: Fix hash corruption issue
    
    We were accidentally using references to sets in the contains functionality
    instead of creating a copy. This could cause data corruption and corruption
    of the resulting sstate checksums.
    
    This patch fixes this to make a copy of the set and resolved the corruption
    issue.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/data_smart.py

commit 5223ffb5b6a46d8b3f6ac3362bd2672e2edf2691
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2013-12-10 17:53:55 +0000

    process: Add timeout to select call
    
    On some machines, a hang has been noticed where the system sits in
    the select call despite the task having completed.
    
    The exact reasons for this as unknown but adding a timeout unblocked
    the builds and resolved the hangs in question.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/process.py

commit 8de14b2a481d61424eb32fd0234f7a38a961a75b
Author: Cristiana Voicu <cristiana.voicu@intel.com>
Date:   2013-12-06 14:23:04 +0200

    hob: after adding a layer, hob do not parse the configuration
    
    Moved the parseConfiguration method before obtaining the machines and
    other configurations from bitbake. If not, Hob doesn't see the new machines
    added by the new layer.
    
    [YOCTO #5632]
    Signed-off-by: Cristiana Voicu <cristiana.voicu@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/ui/crumbs/builder.py
1	1	lib/bb/ui/crumbs/hobeventhandler.py

commit b102af0b7ebd2f06d6352b834ea083e959c21b0f
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2013-12-05 14:34:55 +0000

    toaster: Add more information for tasks in Simple UI
    
    This patch adds more information about Tasks in the Simple UI:
    * all local file system information is not listed in a single
    column, showing the common relationship
    * adding the display for the location of the task source
    * we display the work directory for each task
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>

8	4	lib/toaster/bldviewer/templates/task.html

commit d4f075c050ad9ecebe750420d49961a7f30d090b
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2013-12-05 14:20:36 +0000

    toaster: add pagination to the Simple UI
    
    In an effort to make the Simple UI more usable and
    reponsive, this patch adds pagination support for the
    pages with lots of entries: Builds, Configuration and
    Tasks.
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>

20	2	lib/toaster/bldviewer/templates/basetable.html
3	3	lib/toaster/bldviewer/templates/bfile.html
3	3	lib/toaster/bldviewer/templates/bpackage.html
1	1	lib/toaster/bldviewer/templates/build.html
1	1	lib/toaster/bldviewer/templates/configuration.html
1	1	lib/toaster/bldviewer/templates/layer.html
2	2	lib/toaster/bldviewer/templates/package.html
1	1	lib/toaster/bldviewer/templates/recipe.html
2	2	lib/toaster/bldviewer/templates/task.html
35	12	lib/toaster/bldviewer/views.py

commit 6936faed8d94f3a2ab4055049cd27d02d8229003
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2013-12-03 12:51:04 +0000

    toaster: migrate orm models to South
    
    As Toaster advances, database schema alteration
    will force users to delete old versions and lose
    all data collected.
    
    In order to prevent this, and to allow database
    updates to happen without having to delete old data,
    we use South to handle migrations for the ORM
    application which stores the Toaster data.
    
        [YOCTO #5559]
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>

15	1	bin/toaster
400	0	lib/toaster/orm/migrations/0001_initial.py
0	0	lib/toaster/orm/migrations/__init__.py
1	0	lib/toaster/toastermain/settings.py

commit 2d37a1731a2b681bc976f3f391d65abb7745b6f9
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2013-12-02 15:58:31 +0000

    toaster: update to Django 1.5
    
    In order to remain up to date with the relevant technologies,
    Toaster is updated with this patch to Django 1.5. This also
    makes headways to allow usage of emerging
    Django-related technologies.
    
    Changes include the startup script Django version check, usage
    of TemplateView instead of deprecated simple function to do
    redirects, and update to the new form of the _url_ template tag.
    
    Support for Django 1.4.5 is now deprecated.
    
        [YOCTO #5558]
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>

2	2	bin/toaster
2	2	lib/toaster/bldviewer/templates/base.html
4	4	lib/toaster/bldviewer/templates/basebuildpage.html
2	2	lib/toaster/bldviewer/templates/bpackage.html
2	2	lib/toaster/bldviewer/templates/build.html
1	1	lib/toaster/bldviewer/templates/layer.html
1	1	lib/toaster/bldviewer/templates/package.html
1	1	lib/toaster/bldviewer/templates/task.html
2	2	lib/toaster/bldviewer/urls.py
2	2	lib/toaster/toastermain/urls.py

commit 5839e5b0af45d4c9e05145b16c4ed5817e152606
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2013-12-02 15:32:44 +0000

    toasterui: do not link non-image targets
    
    In the Simple UI, builds table, targets that are images
    have link to the list of installed packages.
    
    There is no point in having links enabled for the non-image
    targets, so we don't link in this case.
    
        [YOCTO #5366]
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>

1	1	lib/toaster/bldviewer/templates/build.html

commit f6031bd753917c459ab232d88d7dcfc3f10e8184
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2013-12-02 14:39:15 +0000

    toasterui: fix version numbers for no PE specified
    
    PE is an optional field in recipes specifiying the epoch
    for the recipe. The canonical form for the
    full recipe version string is: PE:PV-PR
    
    If no PE is specified, we shouldn't store the initial ":"
    character, as it leads to inconsistency with how the
    version string is used elsewhere. This patch drops the leading ":"
    
        [YOCTO #5459]
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>

1	1	lib/bb/ui/buildinfohelper.py

commit f5d655bfaeb349c8680d74530617e34aa389d1f0
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2013-11-26 18:12:43 +0000

    toaster: change package storage model
    
    Up until this patch, package information lived in two
    places - one table for build packages and one table for
    target installed packaged. This situation leads to
    two problems: there is no direct link between a build
    package and a installed package, and a lot of data is duplicated.
    
    This change unifies all package types in a single table.
    The SimpleUI remains the same for continuity sake,
    but the REST API will be changed in a future patch.
    
    The package dependencies and package files are now
    kept in a single table.
    
    Since we collect target installed package information at all times,
    we need to expand it to supplement missing information if a
    package is not actually built in the current build.
    
    Small changes to the Simple UI reflect the updated database schema.
    
        [YOCTO #5565]
        [YOCTO #5269]
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>

76	89	lib/bb/ui/buildinfohelper.py
2	1	lib/bb/ui/toasterui.py
3	3	lib/toaster/bldviewer/templates/bpackage.html
1	1	lib/toaster/bldviewer/templates/package.html
11	14	lib/toaster/bldviewer/views.py
15	35	lib/toaster/orm/models.py

commit 4930ff5b471761c2a8d16c1935cdab9cf141d2d8
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2013-11-27 16:38:29 +0000

    toaster: update build stats reading
    
    In the processes of removing local system accesses
    from toaster UI, we remove the build stats
    code that was moved to toaster.bbclass, and
    adapt the database writing code to read the data
    from BuildStatsList event sent by the toaster.bbclass
    
        [YOCTO #5604]
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>

19	45	lib/bb/ui/buildinfohelper.py
2	0	lib/bb/ui/toasterui.py

commit 33b60a940f58e8374a8c7baa9bf28a98f54cdf13
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2013-11-27 13:56:19 +0000

    toaster: move layer information reading code
    
    In the processes of removing local system accesses
    from toaster UI, we remove the layer data reading
    code that was moved to toaster.bbclass, and
    adapt the database writing code to read the data
    from event sent by the toaster.bbclass
    
        [YOCTO #5604]
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>

16	72	lib/bb/ui/buildinfohelper.py
2	2	lib/bb/ui/toasterui.py
1	0	lib/toaster/orm/models.py

commit a9c24343f13d33d159dab0ac2fd8f50262408980
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2013-11-21 11:47:44 +0000

    toaster: remove Author field in SimpleUI
    
    Removes a left-over Author field in the Simple UI
    recipe page.
    
        [YOCTO #5449]
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>

0	1	lib/toaster/bldviewer/templates/recipe.html

commit f304332da3a51b15e864a853989fe5fbaf5f6079
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2013-11-18 12:43:18 +0000

    toaster: Analysis API variablehistory update
    
    This patch updates the Analysis REST API to expose
    the variablehistory information. A UI tool can query
    this API to get a picture on how a variable value got
    to its final form.
    
    The documentation for VariableHistory is updated on
    Wiki https://wiki.yoctoproject.org/wiki/Analysis_REST_API_Contracts
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>

1	0	lib/toaster/bldviewer/api.py

commit 8f453bb11d72afc90a986ac604b3477d97eaf9a8
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2013-12-09 10:18:31 +0000

    data: Ensure we add the contains keys in a particular order
    
    If we don't sort the data, the values can reorder changing the
    signatures meaning we get confused builds and significant cache
    misses.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	2	lib/bb/data.py

commit 73ddf1a3d1c516ad3bc785e0413483e616ce07a8
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2013-12-06 14:08:46 +0000

    fetch2/git: Ensure check is made in the correct directory
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	0	lib/bb/fetch2/git.py

commit ae0ed55e80b7bd30c775b128b4114b306a50ff69
Author: Cristiana Voicu <cristiana.voicu@intel.com>
Date:   2013-12-04 15:58:06 +0200

    toaster: exclude "set in documentation.conf" from variable history
    
    That has no impact on the builds themselves, so we should just
    remove that line from the variable history.
    
    [YOCTO #5561]
    Signed-off-by: Cristiana Voicu <cristiana.voicu@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

5	4	lib/bb/ui/buildinfohelper.py

commit a2d0122c198ee50325e6f0e2f5d1c2284475fc7b
Author: Cristiana Voicu <cristiana.voicu@intel.com>
Date:   2013-12-05 16:09:15 +0200

    hob: changes to INHERIT var should use "append" operation
    
    Setting INHERIT var means to remove other operations made on INHERIT.
    This is too intrusive, so we decided to use append for this case.
    
    [YOCTO #5448]
    Signed-off-by: Cristiana Voicu <cristiana.voicu@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	3	lib/bb/ui/crumbs/hobeventhandler.py

commit a9112a102a89049cda597dad449e922c9e957a5d
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2013-12-05 15:21:38 +0000

    fetch2/git: Add sanity check to ensure we really did fetch the correct revisions
    
    The fetcher made the rather bold assumption that if it fetched from the upstream,
    the revisions were present and correct. These checks are fast and ensure that
    really is the case. The avoids accidental network accessed and missing
    branch configuration problems.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	0	lib/bb/fetch2/git.py

commit f9d24f55a5ffa9257e7ba3257be1210687513733
Author: Valentin Popa <valentin.popa@intel.com>
Date:   2013-12-03 17:52:58 +0200

    Hob: check if warnings are related to package build
    
    If warnings come from recipes parsing
    and not from package build, 'parent' object
    will be None; so don't update the color for it.
    
    [YOCTO #5621]
    
    Signed-off-by: Valentin Popa <valentin.popa@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

4	4	lib/bb/ui/crumbs/runningbuild.py

commit 11a664292064dbf76850bf21ba386f78a43a56b6
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2013-12-02 18:58:47 +0000

    hob: fix package property dialog for changes to FILES_INFO
    
    The FILES_INFO structure is now much simpler, so remove all of the
    horrible mangling we had to do here in order to read it.
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

15	29	lib/bb/ui/crumbs/hig/propertydialog.py

commit 93b3ddad4396d757d1d0c199ac168f8b1a205fe3
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2013-12-02 18:58:46 +0000

    hob: name package files list variables appropriately
    
    This treeview code was obviously copy-pasted from one of the config
    dialogs and the variables were never renamed. Rename them now to improve
    readability.
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

11	11	lib/bb/ui/crumbs/hig/propertydialog.py

commit 3b5ff814cd4a3efa4b17c6b343ec39c9acca5c9e
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2013-12-02 18:58:45 +0000

    lib/bb/ui: handle PKGSIZE change to bytes
    
    PKGSIZE is now in bytes in pkgdata, so we need to treat it as such in
    the UI code for Hob / Toaster.
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/ui/buildinfohelper.py
3	4	lib/bb/ui/crumbs/hoblistmodel.py

commit bae5210d7e048022f083361964ebec7daf1608f7
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2013-12-02 17:48:40 +0000

    cooker/command/hob: Cleanup configuration init/reset functions and commands
    
    initConfigurationData and loadConfigurationData are similar functions, the only
    reason for them appears to be to be able to reset the pre/post configuration
    files. The current code is confusing and unmaintainable.
    
    Instead this patch creates a new Sync command which allows these to be explicitly
    set. The init and load functions can then be merged into one. There is then no
    need for a parseConfiguration command, we can simply reset the server to have the
    settings take effect.
    
    The reset fuction is not an instant value return and triggers an event so it should
    be an Async command, not a sync one.
    
    The number of calls for the set pre/post command is probably higher than it
    need be but someone with more familiarity with the hob code base can probably
    figure out the right places its needed (maybe just init_cooker?).
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

14	24	lib/bb/command.py
12	19	lib/bb/cooker.py
0	1	lib/bb/ui/crumbs/builder.py
8	9	lib/bb/ui/crumbs/hobeventhandler.py

commit cd7f4d85e3f187140d1bb0aecf82f657a8f8701a
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2013-12-02 17:47:56 +0000

    hob: Use BASEDATASTORE_TRACKING feature
    
    Might as well use this functionality now we have it available.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

0	2	lib/bb/ui/crumbs/hobeventhandler.py
1	1	lib/bb/ui/hob.py

commit fca802187a2a30686a8a07d2b6b16a3e5716e293
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2013-12-03 12:10:05 +0000

    codeparser/data_smart: Optimise parsing speed
    
    The previous "contains" changes caused a ~3% parsing speed impact.
    Looking at the cause of those changes was interesting:
    
    * Use of defaultdict was slower than just checking for missing entries
      and setting them when needed.
    * Even the "import collections" adversely affects parsing speed
    * There was a missing intern function for the contains cache data
    * Setting up a log object for each variable has noticeable overhead
      due to the changes in the code paths uses, we can avoid this.
    * We can call getVarFlag on "_content" directly within VariableParse
      for a noticeable speed gain since its a seriously hot code path.
    
    This patch therefore tweaks the code based on the above observations to
    get some of the speed back.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

6	3	lib/bb/codeparser.py
6	4	lib/bb/data_smart.py

commit 78ad15b669b9c7cde41f7bd1ab884c1d2e0db91b
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2013-12-02 15:10:34 +0000

    hob: fix rotating progress icon animation
    
    I've always found it somewhat annoying that this icon's rotation
    animation wasn't quite correct; this was because it was looping around
    to the second position instead of the first, which made it appear to
    stutter.
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/ui/crumbs/hobwidget.py

commit 4e65463886a2ef245b2f8974e82e9cb942af224b
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2013-12-02 17:41:58 +0000

    imagedetailspage: Fix crash with more than 15 layers
    
    If you had more than 15 layers the system would crash since one more
    value is added to one array than the other. This fixes the code
    so equal numbers of values are added to the arrays and hence
    doesn't crash when many layers are enabled.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/ui/crumbs/imagedetailspage.py

commit b1803958de8d7c3c3279841e38604a08dc2316cc
Author: Jason Wessel <jason.wessel@windriver.com>
Date:   2013-11-25 15:21:26 -0600

    bitbake.lock: Add host:port to bitbake.lock for memres server
    
    The idea is to build on the --status-only option for bitbake and
    expose a mechanism where the oe init scripts can easily switch between
    memres server and the non-memres server.
    
    In the case of the standard oe init script the following
    can shut down the server:
    
    if [ -z "$BBSERVER" ] && [ -f bitbake.lock ] ; then
        grep ":" bitbake.lock > /dev/null && BBSERVER=`cat bitbake.lock` bitbake --status-only
        if [ $? = 0 ] ; then
           echo "Shutting down bitbake memory resident server with bitbake -m"
           BBSERVER=`cat bitbake.lock` bitbake -m
        fi
    fi
    
    A similar function can be used to automatically detect if the server
    is already running for the oe memres init script.  This new
    functionality allows for the memres init script to be started in a new
    shell and connect up to an alaready running server without seeing the
    error of trying to start the server multiple times.
    
    Signed-off-by: Jason Wessel <jason.wessel@windriver.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	0	bin/bitbake
8	0	lib/bb/cooker.py
1	0	lib/bb/cookerdata.py
5	2	lib/bb/server/xmlrpc.py

commit d6abc07ff385357d312d8435b89e0a9c1f965433
Author: Jason Wessel <jason.wessel@windriver.com>
Date:   2013-11-25 15:21:27 -0600

    bitbake, xmlrpc.py: Implement memory resident auto port configuration/restart
    
    This patch adds the ability to dynamically select a port for the
    bitbake memory resident server when the BBSERVER port is set to -1.
    This allows for running multiple instances of the bitbake memory
    resident server on the same system in different build directories.
    
    The client portion of the bitbake instance can also request that the
    server automatically start when using the auto port feature.  This is
    to deal with a bitbake instance that eventually times out and exits or
    that has died for some unknown reason.
    
    The new functionality allows for lazy startup of the server after
    sourcing the init script for the memory resident functionality.
    
    Signed-off-by: Jason Wessel <jason.wessel@windriver.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

10	0	bin/bitbake
29	4	lib/bb/server/xmlrpc.py

commit 46b26ef5c27bfa9c91680f494f02750305b8098c
Author: Jason Wessel <jason.wessel@windriver.com>
Date:   2013-11-25 15:21:25 -0600

    bitbake: Add --status-only option
    
    The --status-only option is purely to check the health of the server.
    The idea is to use it from the oe environment script so as to know if
    the server needs to be started or not.
    
    Signed-off-by: Jason Wessel <jason.wessel@windriver.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

14	1	bin/bitbake

commit d39d957c77b9804670cad3bc9f7742084ead27e8
Author: Cristiana Voicu <cristiana.voicu@intel.com>
Date:   2013-11-29 16:10:39 +0200

    hob: disable layer drag and drop outside the containing widget
    
    [YOCTO #5577]
    Signed-off-by: Cristiana Voicu <cristiana.voicu@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

5	4	lib/bb/ui/crumbs/hig/layerselectiondialog.py

commit 78d285871e4b8c54ccc4602d571e85f922e37ccd
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2013-11-29 23:15:56 +0000

    parse/ConfHander/BBHandler/utils: Fix cache dependency bugs
    
    Currently bitbake only adds files to its dependency list if they exist.
    If you add 'include foo.inc' to your recipe and the file doesn't exist,
    then later you add the file, the cache will not be invalidated.
    
    This leads to another bug which is that if files don't exist and then
    you add them and they should be found first due to BBPATH, again the
    cache won't invalidate.
    
    This patch adds in tracking of files we check for the existence of so
    that if they are added later, the cache correctly invalidates. This
    necessitated a new version of bb.utils.which which returns a list of
    files tested for.
    
    The patch also adds in checks for duplicate file includes and for now
    prints a warning about this. That will likely become a fatal error at
    some point since its never usually desired to include a file twice.
    
    The same issue is also fixed for class inheritance. Now when a class
    is added which would be found in the usual search path, it will cause
    the cache to be invalidated.
    
    Unfortunately this is old code in bitbake and the patch isn't the
    neatest since we have to work within that framework.
    
    [YOCTO #5611]
    [YOCTO #4425]
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

15	4	lib/bb/parse/__init__.py
4	1	lib/bb/parse/parse_py/BBHandler.py
8	1	lib/bb/parse/parse_py/ConfHandler.py
7	1	lib/bb/utils.py

commit 991cbeedbde8bd25ce08c669b1bfac8b99e33149
Author: Nathan Rossi <nathan.rossi@xilinx.com>
Date:   2013-11-29 15:19:11 +1000

    cooker: Fix support for wildcards in bbappend filenames
    
    The 'bbappend in f' incorrectly compares the current recipe with the avaliable
    bbappends recipes. This comparsion causes unrequested bbappend files to be
    appended, e.g. in the case of 'libgcc_4.8.bb', the bbappends for 'libgcc_4.8.bb'
    and 'gcc_4.8.bb' are added to the filelist (because 'gcc_4.8.bb' is contained in
    the 'libgcc_4.8.bb' string) which in turn causes the gcc_4.8.bbappend files to
    be appended to the libgcc_4.8 recipe.
    
    This should be a 'bbappend == f' to match the previous implementation of this
    function, such that if no wildcard is present the recipe names must match
    exactly.
    
    This issue was introduced by commit 31bc9af9cd56e7b318924869970e850993fafc5f,
    which it related to [YOCTO #5411].
    
    Signed-off-by: Nathan Rossi <nathan.rossi@xilinx.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/cooker.py

commit bc3c69e50d36ea5e43f55f7b3b1ff3b0ab3696ee
Author: Yi Zhao <yi.zhao@windriver.com>
Date:   2013-11-27 17:40:56 +0800

    crumbs/builder.py: Fix typo for indefinite article
    
    Signed-off-by: Yi Zhao <yi.zhao@windriver.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/ui/crumbs/builder.py

commit 347b2ead091f00ee60703f6f3d17cfdd9075ac07
Author: Valentin Popa <valentin.popa@intel.com>
Date:   2013-11-26 11:30:41 +0200

    Hob: force notebook refresh
    
    Redraw the entire notebook widget after
    number-of-issues drawable is incremented
    (because for this case, the notebook widget
    doesn't refresh it's children automatically).
    
    [YOCTO #5596]
    
    Signed-off-by: Valentin Popa <valentin.popa@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	0	lib/bb/ui/crumbs/builddetailspage.py

commit ed2d0a22a80299de0cfd377999950cf4b26c512e
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2013-11-25 22:59:39 +0000

    data/codeparser: Improve handling of contains functions
    
    One of the current frustrations with the sstate checksums is that
    code like base_contains('X', 'y',...) adds a full dependency on X
    and varies depend even on whitespace changes in X.
    
    This patch adds special handling of the contains functions to expand
    the first parameter and check for the flag specified by the second
    parameter (assuming its a string).
    
    The result is then appended to the value of the variable with a "Set"
    or "Unset" status. If the flag is added/removed, the stored variable
    value changes and hence the checksum changes. No dependency on X
    is added so it is free to change with regard to other flags or
    whitespace.
    
    This code is far from ideal, ideally we'd have properly typed variables
    however it fixes a major annoyance of the current checksums and
    is of enough value its worth adding in a stopgap solution. It shouldn't
    significantly restrict any propely typed variable implementation in
    future.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>
    Signed-off-by: Christopher Larson <chris_larson@mentor.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

11	3	lib/bb/codeparser.py
18	0	lib/bb/data.py
4	0	lib/bb/data_smart.py

commit 84f1dde717dac22435005b79d03ee0b80a3e8e62
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2013-11-25 23:18:22 +0000

    bitbake: Share BB_TASKDEPDATA with tasks
    
    Currently tasks have no knowledge of which other tasks they depend
    upon. This makes it impossible to do at least two things which would be
    desirable/interesting:
    
    a) Have the ability to create per recipe sysroots
    b) Allow the aclocal files to be present only for the entries in
       DEPENDS (directly and indirectly)
    
    By exporting task data through this new variable, tasks can inspect
    their dependencies and then take actions based upon this.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

4	3	bin/bitbake-worker
26	4	lib/bb/runqueue.py

commit 4841c1d37c503a366f99e3a134dca7440e3a08ea
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2013-11-25 23:12:27 +0000

    runqueue: Optimise next_buildable_task()
    
    This unlikely looking function was found to be eating a lot of CPU time
    since it gets called once per trip through the idle loop if we're not
    running a maximum number of processes. This was particularly true in
    world builds of 13,000 tasks.
    
    Calling the computation code is pretty pointless because until some
    other task finishes nothing is going to become available to build.
    We can know when things become available so this patch teaches the
    scheduler this knowledge.
    
    It also:
    
    * skips any coputation when nothing can be built
    * if there is only one available item to build, ignore the priority map
    * precomputes the stamp filenames, rather than doing it every time
    * saves the length of the array rather than calculating it each time
      (the extra function overhead is significant)
    
    Timing wise, initially, 5000 iterations through here was 20s, with
    the patch 200000 calls takes the same time. The end result is that
    builds get up and running faster.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

48	17	lib/bb/runqueue.py

commit 64d4cbd6360c96574cece70205ea3aecc3f8bae6
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2013-11-25 23:00:17 +0000

    codeparser: Drop unneeded variable separation
    
    There is no good reason to separately track var_references and
    references so merge them and remove the unneeded variable.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	3	lib/bb/codeparser.py

commit 7c94ca56b2fd85a989089f58b3dcce3172a778f2
Author: Peter Kjellerstedt <peter.kjellerstedt@axis.com>
Date:   2013-11-25 12:41:16 +0100

    fetch2: Correct a few calls to latest_revision()
    
    In 6a48474de9505a3700863f31839a7c53c5e18a8d the url parameter to a
    number of functions was removed. However, not all calls to
    latest_revision() were fixed...
    
    Signed-off-by: Peter Kjellerstedt <peter.kjellerstedt@axis.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/fetch2/bzr.py
1	1	lib/bb/fetch2/hg.py

commit e0a2e9699e9f338dd7ade8c9eef0a12c7639ec05
Author: Florin Sarbu <florin.sarbu@windriver.com>
Date:   2013-11-25 12:33:50 +0200

    bitbake: fetch2: Remove the unused urldata from the git fetcher.
    
    Signed-off-by: Florin Sarbu <florin.sarbu@windriver.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/fetch2/git.py

commit fcba5ef0053dc0ef5360e4912609e5d52f5046b0
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2013-11-22 16:17:39 +0000

    data: Fix output inconsistencies for emit_var
    
    VAL = ""     (not shown)
    VAL = " "    (shown as "")
    VAL = " x"   (shown as "x")
    
    would all show up rather differently to what would be expected in the
    bitbake -e output. This fixes things so they appear consistently.
    
    The output for running some shell functions may also change slightly
    but shouldn't change in a way that is likely to cause problems.
    
    [YOCTO #5507]
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	2	lib/bb/data.py

commit 40e06dc459d9c0b5d42d65b2d2c846196fd36b1f
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2013-11-22 16:22:28 +0000

    perforce: Fix path subdirectory issues
    
    With a SRC_URI = " \
    p4://depot/folder/...;module=localfolder/localsubfolder;changeslist=${P4CHANGELIST} \
    "
    
    the subfolders of //depot/folder/... get renamed when mapped to the
    local folder structure. They lose the first 3 letters. This
    patch fixes that.
    
    Issue reported by and patch sent from katutxakurra@gmail.com
    
    [YOCTO #5380]
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/fetch2/perforce.py

commit 8f1e280fbbb6432d7bcc1fb4241f402668c6c5ea
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2013-11-21 14:09:46 +0000

    bitbake-layers: avoid loading configuration when not needed
    
    In recent versions of bitbake, it is not possible to initialise a
    BBCooker object without having it load the configuration first. Thus we
    should avoid creating the Tinfoil object here in bitbake-layers which
    does that internally until we actually need to, so you can run
    "bitbake-layers help" and not have to wait several seconds for the
    output.
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

15	9	bin/bitbake-layers

commit 124428ba8a0b1cc85d4b96053bf71bce14a5774c
Author: Valentin Popa <valentin.popa@intel.com>
Date:   2013-11-21 13:55:13 +0200

    HOB: Show warnings in Issues tab
    
    Proper update of warnings view during build.
    
    [YOCTO #3496]
    
    Signed-off-by: Valentin Popa <valentin.popa@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

33	15	lib/bb/ui/crumbs/runningbuild.py

commit 31bc9af9cd56e7b318924869970e850993fafc5f
Author: Saul Wold <sgw@linux.intel.com>
Date:   2013-11-21 09:50:41 -0800

    cooker: add support for using % as a wildcard in bbappend filename
    
    There has been a continuing call for supporting wildcard in bbappend
    filenames. The wildcard is actually allow matching of the name and
    version up to the point of encountering the %.  This approach will
    allow for matching of the major or major.minor.
    
    Exampes:
    
    busybox_1.21.1.bb
    busybox_1.21.%.bbappend will match
    busybox_1.2%.bbappend will also match
    
    if we update to busybox_1.3.0.bb the above won't match, but a busybox_1.%.bb
    will.
    
    [YOCTO #5411]
    
    Signed-off-by: Saul Wold <sgw@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

10	10	lib/bb/cooker.py

commit f34d0606f87ce9dacadeb78bac35879b74f10559
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2013-11-22 13:31:47 +0000

    runqueue/bitbake-worker: Fix dry run fakeroot issues
    
    When using the dry run option (-n), bitbake would still try and fire
    a specific fakeroot worker. This is doomed to failure since it might
    well not have been built.
    
    Add in some checks to prevent the failures.
    
    [YOCTO #5367]
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	1	bin/bitbake-worker
1	1	lib/bb/runqueue.py

commit 6a48474de9505a3700863f31839a7c53c5e18a8d
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2013-11-19 14:32:08 +0000

    fetch2: Stop passing around the pointless url parameter
    
    There is no good reason to keep passing around the url parameter when
    its contained within urldata (ud). This is left around due to
    legacy reasons, some functions take it, some don't and its time
    to cleanup.
    
    This is fetcher internal API, there are a tiny number of external users
    of the internal API (buildhistory and distrodata) which can be fixed up
    after this change.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

32	32	lib/bb/fetch2/__init__.py
10	10	lib/bb/fetch2/bzr.py
5	5	lib/bb/fetch2/cvs.py
12	12	lib/bb/fetch2/git.py
5	5	lib/bb/fetch2/gitsm.py
8	8	lib/bb/fetch2/hg.py
8	8	lib/bb/fetch2/local.py
4	4	lib/bb/fetch2/osc.py
7	7	lib/bb/fetch2/perforce.py
4	4	lib/bb/fetch2/repo.py
4	4	lib/bb/fetch2/sftp.py
4	4	lib/bb/fetch2/ssh.py
5	5	lib/bb/fetch2/svk.py
9	9	lib/bb/fetch2/svn.py
5	5	lib/bb/fetch2/wget.py

commit 06590cfebbcf6565a17b80cc298e3ecdfaba4656
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2013-11-19 13:59:14 +0000

    fetch2: Clean up some url parameters to functions
    
    urldata contains the url so we might as well stop passing around
    pointless function parameters. This was done for legacy reasons but
    its time to clean this mess up.
    
    This is a first step in cleanup and is a standalone patch but there is
    more to be done in a second patch.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

19	19	lib/bb/fetch2/__init__.py

commit 67b752993a2c64cba9ccc4fa662f0bddf081e74a
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2013-11-19 10:53:39 +0000

    toasterui: fix typo
    
    A typo in buildinfo helper leads to a bug where
    information about tasks is not correctly stored.
    
    This patch fixes the typo.
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/ui/buildinfohelper.py

commit 9a658e8b1511f1b9f91663f546f748fdfbc8965f
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2013-11-19 16:46:41 +0000

    bitbake: cooker, toaster: mark interrupted builds as failed
    
    This patch changes bitbake to log an error to the
    command line when the build is interrupted via Ctrl-C.
    
    This is needed to inform the user that not all tasks
    required for the build have been executed, and
    the build is not complete.
    
    Internally, the Bitbake server will return a CommandFailed
    event that will be logged by Toaster as build failure.
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

8	2	lib/bb/cooker.py
7	0	lib/bb/ui/toasterui.py

commit 2809c2e6f2f35f9b08058950be896947ab5a0284
Author: Peter Seebach <peter.seebach@windriver.com>
Date:   2013-11-19 18:31:39 -0600

    build.py: add single-quotes around already-expanded directory name
    
    If the computed name of a directory contains an undefined variable
    reference, bitbake dutifully creates a directory with a name that has
    ${...} in it. However, the actual task script created then tries to cd
    to that directory, and the cd command fails, because no such directory
    exists -- because the shell has helpfully removed the ${...} which did
    not match any actual variables.
    
    Since we want the name to be used exactly-as-is, add single quotes around
    the name so this doesn't cause strange failures running tasks, which
    allows us to progress past such failures and get to a point where they
    can be diagnosed.
    
    Signed-off-by: Peter Seebach <peter.seebach@windriver.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/build.py

commit f21910157d873c030b149c4cdc5b57c5062ab5a6
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2013-11-20 10:46:28 +0000

    runqueue: Fix hole in setsceneverify skipped task logic
    
    We have do_bundle_initramfs which is a task inserted after compile and
    before build. It is not covered by sstate.
    
    If we run a build with a valid sstate cache present, the setsceneverify
    function realises it will rerun the do_compile step (due to the
    bundle_initramfs task) and hence marks do_populate_sysroot to rerun.
    do_install, a dependency of do_populate_sysroot is left as marked as
    covered by sstate.
    
    What we need to do is traverse the dependency tree for any setsceneverify
    invalided task and ensure any dependencies are also invalidated. We can
    stop at any point we reach another setscene task though.
    
    This means the do_populate_sysroot task has the data from do_install
    available and doesn't crash.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

19	2	lib/bb/runqueue.py

commit a66ee0994645aa5658b2f5ea134ed17d89f8751a
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2013-11-19 13:09:14 +0000

    fetch2: Fix handling of SCM mirrors in MIRRORS
    
    If an SCM mirror is in PREMIRRORS, the tarball is downloaded and then found
    by the "upstream" check and handled correctly.
    
    If an SCM mirror is in MIRRORS, the tarball is downloaded but not used
    since there is no "upstream" run after MIRRORS completes. It therefore
    sits there useless and unused. This code change forces the upstream to
    run after a mirror tarball is found and fixes the usage of SCM mirrors
    in MIRRORS.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

4	0	lib/bb/fetch2/__init__.py

commit 31467c0afe0346502fcd18bd376f23ea76a27d61
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2013-11-19 13:08:59 +0000

    git: Use git branch for ancestor checks
    
    Using git merge-base for checking for ancestors is nice but required git 1.8.0
    which is not in many distrbutions yet. We therefore revert to a more ugly
    check using git branch --contains until such times as we can upgrade.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

4	2	lib/bb/fetch2/git.py

commit 22eec978e70794923c85689928c6be0cfe71cdcd
Author: Konrad Scherer <Konrad.Scherer@windriver.com>
Date:   2013-11-15 15:51:47 -0500

    serv.py: Give pr-server up to 5 seconds to commit data
    
    The default value of 0.5 seconds before sending the pr-server a
    SIGTERM is not enough to guarantee that sqlite has committed all
    the pr data to the database. By polling the pid to see if it is
    still running, this allows the pr-server process to shutdown
    cleanly and finish the final pr data commit.
    
    Signed-off-by: Konrad Scherer <Konrad.Scherer@windriver.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

21	2	lib/prserv/serv.py

commit 89abfbc1953e3711d6c90aff793ee622c22609b1
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2013-11-18 17:17:16 +0000

    git: Use merge-base instead of log for testing if a commit is present
    
    The current use of git log to check if a given revision is present can be
    a little fragile.
    
    For example if revision X was on branch A, and then later added to branch
    B, the update checks would not notice this since they just check for X
    being in the repository.
    
    We also had some autobuilder corruption where an older packed-refs file
    was copied over a new repository containing newer pack files. There
    was no update to the refs file since the revision was present but
    not accessible in any branch.
    
    The correct fix is to check that the required revisions are present
    on the specific branches. This patch does this using merge-base.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

9	8	lib/bb/fetch2/git.py

commit 78e58fed82f2a71f052485de0052d7b9cca53ffd
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2013-11-14 13:56:30 +0000

    cooker, toaster: variable definition tracking
    
    In order to track the file where a configuration
    variable was defined, this patch bring these changes:
    
    * a new feature is defined in CookerFeatures, named
    BASEDATASTORE_TRACKING. When a UI requests BASEDATASTORE_TRACKING,
    the base variable definition are tracked when configuration
    is parsed.
    
    * getAllKeysWithFlags now includes variable history in the
    data dump
    
    * toaster_ui.py will record the operation, file path
    and line number where the variable was changes
    
    * toaster Simple UI will display the file path
    and line number for Configuration page
    
    There is a change in the models to accomodate the recording
    of variable change history.
    
    [YOCTO #5227]
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

12	3	lib/bb/cooker.py
10	4	lib/bb/ui/buildinfohelper.py
1	1	lib/bb/ui/toasterui.py
4	2	lib/toaster/bldviewer/templates/configuration.html
5	1	lib/toaster/orm/models.py

commit 8ff8d75318ea88ba80c744b471e486901ef6749a
Author: Cristiana Voicu <cristiana.voicu@intel.com>
Date:   2013-11-15 13:34:46 +0200

    toaster: task with outcome 2 (sstate), should have sstate_result!=0
    
    0 (not applicable) is not a valid sstate_result for tasks with
    outcome 2 (sstate), which should return 3 (restored), 2
    (failed) or 1 (missed).
    Sstate_result for tasks with outcome 2 is equal to the outcome
    of _setscene corespondent task.
    
    [YOCTO #5220]
    Signed-off-by: Cristiana Voicu <cristiana.voicu@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

6	0	lib/bb/ui/buildinfohelper.py

commit ba9fe77e37be31e8246431578902e871dd94515e
Author: Cristiana Voicu <cristiana.voicu@intel.com>
Date:   2013-09-23 14:11:08 +0300

    hob/hoblistmodel: check if vals of packages/recipes names are not None
    
    [YOCTO #5053]
    Signed-off-by: Cristiana Voicu <cristiana.voicu@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

6	2	lib/bb/ui/crumbs/hoblistmodel.py

commit 65be09f5e2a4a41e65c9232e208d8154b822fc4e
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2013-11-14 14:57:54 +0000

    cooker: warn if user specifies a target listed in ASSUME_PROVIDED
    
    If the user explicitly asks to build a target that is listed in the
    value of ASSUME_PROVIDED, show a warning mentioning that it will be
    ignored.
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

5	0	lib/bb/cooker.py

commit afdea16516084ef6c046d80e12bf244f25a9da50
Author: Cristiana Voicu <cristiana.voicu@intel.com>
Date:   2013-11-13 14:54:16 +0200

    hob: refresh tables when the user is redirected to Edit packages
    
    When the build fails and I click "Edit packages", we should be returned
    to the tab we launched the build from. Hob should remember the tab,
    not the search state.
    
    [YOCTO #5257]
    Signed-off-by: Cristiana Voicu <cristiana.voicu@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	0	lib/bb/ui/crumbs/builder.py

commit 97b8ab88edc7c8dfb26b4cf305701ec96e52cc4f
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2013-11-14 10:53:00 +0000

    toaster: fix path to buildstats file
    
    The buildstats file path changes based on the
    optional PE variable that may be defined for a
    recipe.
    
    The toasterui simply ignored the PE value, and
    as such it didn't correctly reach buildstats files
    for some of the tasks.
    
    This patch fixes the issue.
    
        [YOCTO #5073]
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

5	1	lib/bb/ui/buildinfohelper.py

commit 9b99a417f58381bac4bda412bcfd11de50403318
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2013-11-14 10:53:01 +0000

    toasterui: mark failed sceneQueue tasks as failed
    
    This patch addresses an issue where a failed sceneQueue task
    entry was not updated on the Fail event. As a result, it
    always showed the task as not-available.
    
        [YOCTO #5216]
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/ui/buildinfohelper.py

commit da3ac049300be84defab7b32b0b99ab07c7d0a27
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2013-11-14 10:52:59 +0000

    toaster: remove author field
    
    The AUTHOR field in most recipes is not defined,
    or it's not really consistently set in the metadata,
    Also does it seem particularly useful.
    
    This patch removes the AUTHOR variable from the
    toaster system
    
        [YOCTO #5449]
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

0	1	lib/bb/ui/buildinfohelper.py
0	1	lib/toaster/bldviewer/templates/recipe.html
0	1	lib/toaster/orm/models.py

commit ec6cac74290f0d4f5b60222019c23416b4b8e1ef
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2013-11-14 10:52:58 +0000

    toaster: fix tasks showing as NoExec
    
    Tasks without script type information showed by default
    as NoExec; this happens for all Prebuild or Covered
    tasks, as script type information comes only on TaskStarted
    event. Such a default value may drive confusion, as NoExec value
    should be reserved for the NoExec-flagged tasks.
    
    This patch adds a new default value named Unknown that will be
    used for all tasks that don't have script type information
    available.
    
        [YOCTO #5327]
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

6	4	lib/toaster/orm/models.py

commit e054c1e7c8581f66082fcdfb89769401ca6e78a3
Author: Cristiana Voicu <cristiana.voicu@intel.com>
Date:   2013-11-12 18:12:17 +0200

    cooker: replace "w" file opening mode with "a" mode
    
    Also removed some redundant file manipulation code
    Based on patch sent by Stefan Stanacar <stefanx.stanacar@intel.com>
    
    Signed-off-by: Cristiana Voicu <cristiana.voicu@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

6	34	lib/bb/cooker.py

commit 19eb6e01b675c439ff0a817be6fa5e34ad42ba37
Author: Cristiana Voicu <cristiana.voicu@intel.com>
Date:   2013-11-12 16:50:24 +0200

    toaster: convert build_package size to bytes to keep consistence
    
    [YOCTO #5503]
    Signed-off-by: Cristiana Voicu <cristiana.voicu@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/ui/buildinfohelper.py
1	1	lib/toaster/bldviewer/templates/bpackage.html

commit 0bd1a3026a26c2c01abd31e265668541f6201bae
Author: Trevor Woerner <trevor.woerner@linaro.org>
Date:   2013-11-11 13:51:30 -0500

    newbb.vim: fix spelling
    
    Signed-off-by: Trevor Woerner <trevor.woerner@linaro.org>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	contrib/vim/plugin/newbb.vim

commit a1ccb5e70523be6af7f4bcaabd728af1ddaf6dc5
Author: Valentin Popa <valentin.popa@intel.com>
Date:   2013-11-04 12:53:12 +0200

    HOB: HIG compliant message dialogs
    
    "More" HIG compliant dialogs for HOB.
    
    Signed-off-by: Valentin Popa <valentin.popa@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

49	43	lib/bb/ui/crumbs/builder.py
3	2	lib/bb/ui/crumbs/hig/advancedsettingsdialog.py
15	40	lib/bb/ui/crumbs/hig/crumbsmessagedialog.py
8	4	lib/bb/ui/crumbs/hig/deployimagedialog.py
6	5	lib/bb/ui/crumbs/hig/layerselectiondialog.py
2	3	lib/bb/ui/crumbs/hig/saveimagedialog.py
4	5	lib/bb/ui/crumbs/hig/simplesettingsdialog.py

commit f05f74e98b0dd567a8b0cb85dc8183716619991b
Author: Gary Thomas <gary@mlbassoc.com>
Date:   2013-11-07 10:04:21 -0700

    depexp: Improve wording on requirements
    
    Since -g is required, tell the user exactly so.
    
    Signed-off-by: Gary Thomas <gary@mlbassoc.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/ui/depexp.py

commit ab4bc18409d80de6d069e3dd76c3c54964fe5764
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2013-11-05 12:26:46 +0000

    toaster: fix target package information
    
    Toaster needs to record information about packages
    installed on a built target image, and dependencies
    between these packages.
    
    This patch fixes a bug where the variable from the
    server wasn't read correctly leading which caused
    the buildhistory to not be processed correctly.
    
    Additionally, two display issues in the package table
    were fixed, issues that lead to package information
    being displayed incorrectly.
    
        [YOCTO #5197]
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/ui/buildinfohelper.py
5	5	lib/toaster/bldviewer/templates/package.html

commit 029e868044989eda370340f8bf4200cfd2670fca
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2013-11-01 15:58:35 +0000

    toaster: enable required classes in the toaster startup script
    
    In order to use toaster, now you have to set INHERIT+="toaster buildhistory"
    To keep it simple, I've done some changes in order to automate it. When toaster
    is started, this line is added to a new file called toaster.conf.
    
    This file is passed to the bitbake server with the --postread parameter.
    
    Based on a patch by Cristiana Voicu <cristiana.voicu@intel.com>
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

10	2	bin/toaster

commit 641d9c4fda5fe978154fdfab978c3c09e3906eab
Author: Cristiana Voicu <cristiana.voicu@intel.com>
Date:   2013-11-01 15:58:34 +0000

    toaster: add variable description for prefixed/suffixed variables
    
    In the Configuration table, we need to link prefixed / suffixed
    variables to the corresponding variable descriptions in documentation.conf.
    
    [YOCTO #5198]
    
    Signed-off-by: Cristiana Voicu <cristiana.voicu@intel.com>
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

5	0	lib/bb/ui/buildinfohelper.py

commit 5f8b97010f7b465753b6ff6275d18426006ee14b
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2013-11-01 15:58:33 +0000

    toaster: server shutdown on terminal exit
    
    If the terminal where the server was started is closed,
    the bitbake server should shutdown. Currently the system
    is left in hanging state.
    
    This patch uses "trap" command to make sure the servers
    are closed on terminal exit.
    
    [YOCTO #5376]
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

20	9	bin/toaster

commit a4102b549f04a9b52cdcd318bf511a18ab48067d
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2013-11-01 15:58:32 +0000

    toaster: fix timezone settings
    
    This patch fixes an issue where, if not defined,
    the timezone defaults to 'America/Chicago'.
    
    The solution is to set the timezone to current computer's
    timezone.
    
    [YOCTO #5186]
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	2	lib/toaster/toastermain/settings.py

commit 618d69b00075981b8553513130d7deb1aed61578
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2013-11-01 15:58:30 +0000

    cooker: do not recreate recipecache in buildfile mode
    
    When building a single file, the cooker will recreate
    the recipecache from scratch.
    
    I suspect this is a remnant of past code, since:
    * the current recipecache works fine
    * the new recipecache will not have all the fields as
    requested by HOB_EXTRA_CACHES setting
    
    This patch disables recreating the recipecache, leading
    to shorter times when building single build files
    (-b option) and better compatibility with Toaster.
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

0	1	lib/bb/cooker.py

commit 6648c57e6d369fc009ea3a9fe939def5d2c67bf5
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2013-11-01 15:58:31 +0000

    build, toaster: record proper task type
    
    Bitbake tasks may be of type 'python' or 'shell',
    or they may not be executed at all, which is record
    as task type 'noexec'.
    
    In order to record proper task type, this patch:
    
    * creates no exec task type as the default value in
    the toaster model definition
    
    * adds full task flags to the bb.build.TaskStarted event
    in build.py
    
    * if the task actually starts, the toaster ui will
    record the type of the task as either 'python' or 'shell'
    based on the task flags.
    
    [YOCTO #5073]
    [YOCTO #5075]
    [YOCTO #5327]
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

6	1	lib/bb/build.py
5	2	lib/bb/ui/buildinfohelper.py
5	3	lib/toaster/orm/models.py

commit 7636aba37320aaf9b044d3832ddc21af51ccd69c
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2013-11-01 15:58:29 +0000

    cooker: add data to the dependency tree dump
    
    Toaster needes to record extra data that needs to
    be moved at the time of the dependency tree dump.
    
    This data includes:
    * layer priorities for recording in the layer section
    * the inherit list for each PN which allows to determine
    the type of the PN (regular package, image, etc).
    
    This patch adds this data to the dependency tree dump.
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	0	lib/bb/cooker.py

commit 03fafd086381723c6486522873671515824e49f2
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2013-11-01 15:58:28 +0000

    toaster: fixes for null values from events
    
    Some of the data values may come of as None through the event system,
    and the UI would encounter a problem saving the Configuration.
    It would be trying to save these values as NULL in the
    database, which is not allowed.
    
    This patch adds more verification for data coming through
    the event system.
    
    Other minor updates:
    * update for the event model from toaster.bbclass
    * minor code flow fix in the event system
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

18	22	lib/bb/ui/buildinfohelper.py
1	2	lib/bb/ui/toasterui.py

commit aa2e86a2ac28414f6d25fcd541a6ed2b50f15a2c
Author: Cristiana Voicu <cristiana.voicu@intel.com>
Date:   2013-10-28 15:30:21 +0200

    hob: do not display the "Package list may be incomplete!" dialog
    
    This dialog is not needed. Instead "Edit packages" button should
    redirect to Packages list.
    
    [YOCTO #5257]
    Signed-off-by: Cristiana Voicu <cristiana.voicu@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/ui/crumbs/builddetailspage.py
2	19	lib/bb/ui/crumbs/builder.py
1	1	lib/bb/ui/crumbs/imagedetailspage.py

commit dc3d6d73e44802c203b3f7247f6f212acc2f69bf
Author: Volker Vogelhuber <v.vogelhuber@digitalendoscopy.de>
Date:   2013-11-01 17:53:09 +0000

    fetch/hg: Improve user/password handling
    
    Trying to use a server with username and password authentication
    within the URL of the SRC_URI variable doesn't appear to work.
    
    This patch adds the missing parts to the hg fetcher to make this
    work properly.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

8	2	lib/bb/fetch2/hg.py

commit a5abd1826f34e6a7eefa837620b846e9b62ae758
Author: Cristiana Voicu <cristiana.voicu@intel.com>
Date:   2013-11-01 11:18:45 +0200

    hob: populate error_msg when hob receives a CommandFailed event
    
    When Hob receives a bb.command.CommandFailed event, it doesn't show any error,
    because the error_msg is empty. If so, it is hard to detect the issue, because
    Hob continues to run till it blocks because of an information gap.
    
    [YOCTO #5097]
    Signed-off-by: Cristiana Voicu <cristiana.voicu@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

6	0	lib/bb/ui/crumbs/hobeventhandler.py

commit 17d8ef0b813a05c231e3dbe6e8bc82a4a9b1d2f8
Author: Nicolas Dechesne <nicolas.dechesne@linaro.org>
Date:   2013-10-31 17:36:25 -0700

    fetch2/svn.py: use log instead of info to retrieve revision
    
    We have faced a corner case situation where the 'last changed
    revision' returned from svn info is wrong. It happens when the last
    revision is a directory move. e.g. if we assume that the svn
    repository at revA has root/x/y/z/foo/bar and it is moved to
    root/a/b/c/foo/bar in revB, then svn info 'last change revision' will
    return revA. As such when using AUTOREV, we are going to attempt to
    retrieve root/a/b/c/foo/bar (as per SRC_URI) but at revA when it did
    not exist.
    
    So this patch changes how we retrieve the latest revision and uses
    'svn log --limit 1' which gives correct result in all tested cases.
    
    Signed-off-by: Nicolas Dechesne <nicolas.dechesne@linaro.org>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

8	6	lib/bb/fetch2/svn.py

commit f3ac2d3678f48c68a250a0a20c08cf8687322d38
Author: Olof Johansson <olof.johansson@axis.com>
Date:   2013-10-18 12:21:59 +0200

    monitordisk: lower inode check warning to note
    
    Filesystems like btrfs and reiserfs sets the inode count to 0, since
    they don't have an inode concept. This is expected, and having a warning
    show up every time you run bitbake can cause undue concern.
    
    Signed-off-by: Olof Johansson <olof.johansson@axis.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/monitordisk.py

commit 62200ff6694b21fbd5abf009a6f47ad93adf5309
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2013-09-26 12:50:50 +0100

    toaster: add Toaster UI interface
    
    Adding a new bitbake UI interface named 'toasterui'.
    
    'toasterui' listens for events and data coming from a
    bitbake server during a run, and records it
    in a data store using the Toaster object model.
    
    Adds a helper class named BuildInfoHelper that
    reconstructs the state of the bitbake server and
    saves relevant data to the data store.
    
    Code portions contributed by Calin Dragomir <calindragomir@gmail.com>.
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>

719	0	lib/bb/ui/buildinfohelper.py
273	0	lib/bb/ui/toasterui.py

commit 8395e257fed030f0d9b24feba17ed99664f26b2b
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2013-09-26 12:48:44 +0100

    toaster: adding frameworks for the Simple UI
    
    This commit adds the 3rd party frameworks used for the web UI.
    
    jQuery is licensed under MIT.
    
    Bootstrap is licensed under APACHE-2.0
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>

10	0	LICENSE
4797	0	lib/toaster/bldviewer/static/css/bootstrap.css
1982	0	lib/toaster/bldviewer/static/js/bootstrap.js
6	0	lib/toaster/bldviewer/static/js/jquery-2.0.3.js

commit d24334a5e83d09b3ab227af485971bb768bf5412
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2013-10-11 13:46:23 +0100

    toaster: add toaster code to bitbake
    
    This patch adds the Toaster component to Bitbake.
    
    Toaster is a module designed to record the progress of a
    Bitbake build, and data about the resultant artifacts.
    
    It contains a web-based interface and a REST API allowing
    post-facto inspection of the build process and artifacts.
    
    Features present in this build:
    * toaster start script
    * relational data model
    * Django boilerplate code
    * the REST API
    * the Simple UI web interface
    
    This patch has all the development history squashed together.
    
    Code portions contributed by Calin Dragomir <calindragomir@gmail.com>.
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>

145	0	bin/toaster
0	0	lib/toaster/__init__.py
0	0	lib/toaster/bldviewer/__init__.py
37	0	lib/toaster/bldviewer/api.py
30	0	lib/toaster/bldviewer/templates/base.html
17	0	lib/toaster/bldviewer/templates/basebuildpage.html
46	0	lib/toaster/bldviewer/templates/basetable.html
24	0	lib/toaster/bldviewer/templates/bfile.html
44	0	lib/toaster/bldviewer/templates/bpackage.html
43	0	lib/toaster/bldviewer/templates/build.html
20	0	lib/toaster/bldviewer/templates/configuration.html
34	0	lib/toaster/bldviewer/templates/layer.html
36	0	lib/toaster/bldviewer/templates/package.html
54	0	lib/toaster/bldviewer/templates/recipe.html
63	0	lib/toaster/bldviewer/templates/task.html
0	0	lib/toaster/bldviewer/templatetags/__init__.py
26	0	lib/toaster/bldviewer/templatetags/projecttags.py
32	0	lib/toaster/bldviewer/urls.py
260	0	lib/toaster/bldviewer/views.py
10	0	lib/toaster/manage.py
0	0	lib/toaster/orm/__init__.py
258	0	lib/toaster/orm/models.py
0	0	lib/toaster/toastergui/__init__.py
-	-	lib/toaster/toastergui/static/images/yocto.jpg
13	0	lib/toaster/toastergui/templates/index.html
27	0	lib/toaster/toastergui/urls.py
26	0	lib/toaster/toastergui/views.py
0	0	lib/toaster/toastermain/__init__.py
190	0	lib/toaster/toastermain/settings.py
41	0	lib/toaster/toastermain/urls.py
32	0	lib/toaster/toastermain/wsgi.py

commit 8a8bafc8ded98364a31878b23c64503a53affcd1
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2013-10-17 10:48:09 +0000

    utils: Don't show stack traces for BBHandledException
    
    A BBHandledException means we already showed an error to the user so
    we shouldn't show a stack trace as this just confuses things further.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	0	lib/bb/utils.py

commit 89b31a4fb44f2c2ad0bb4210151652cd3730418d
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2013-09-14 17:03:48 +0000

    bitbake: bitbake: bb: Drop deprecated functions
    
    These functions in the main bb module have long been deprecated
    and moved to other modules. Finally remove the compatibility links.
    
    (Bitbake rev: ccd181c3ed4852e2b9169cf19aaf18aeacddcc18)
    
    (Bitbake rev: d7f817518c5df2524a4bcf008ba63c71a8eb48bb)
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

0	3	lib/bb/__init__.py

commit e4d3077c5b0cc57964640512f3646c2d73c1d855
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2013-10-08 15:34:32 +0100

    siggen: handle recipe path changes in siginfo files
    
    Avoid storing paths to files in SRC_URI when writing out the the
    file checksums to siginfo files. This prevents a move of the source
    directory being reported by bitbake-diffsigs as files being removed and
    then added (the signature itself is not affected since the file paths
    have never been included in the signature).
    
    This has required the format of the file checksums in the siginfo file
    to be changed from a dict to a list of tuples (in order to handle
    multiple files with the same name under different paths, which is
    uncommon but possible); the code remains backwards-compatible with older
    siginfo files that use a dict however.
    
    Fixes [YOCTO #5245].
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

37	4	lib/bb/siggen.py

commit 09b3e4e1e3fac737ea4069457e8bbffe1a4fe09d
Author: Cristiana Voicu <cristiana.voicu@intel.com>
Date:   2013-10-08 13:58:25 +0300

    hob: Hob should ask for ports only when Manual proxy is selected
    
    [YOCTO #5307]
    Signed-off-by: Cristiana Voicu <cristiana.voicu@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

14	12	lib/bb/ui/crumbs/hig/simplesettingsdialog.py

commit 42fa34142ea685f91115a551e74416ca28ef1c91
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2013-10-06 13:42:39 +0100

    cooker/command: Add error state for the server and use for pre_serve errors
    
    Currently if errors occur when starting the PR service, there is a race that
    occurs since the UI runs various commands including starting builds before
    processing the CookerExit(). By adding the error state and refusing to run
    async commands in this mode, builds are prevented from starting and the
    UI reaches the exit code with the system shutting down cleanly.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	0	lib/bb/command.py
2	1	lib/bb/cooker.py

commit 03d051b6da52ec4ee26f97aa9038622f8d87e55d
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2013-10-14 16:58:46 +0100

    bitbake: Update post 1.20 to development version
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	bin/bitbake
1	1	lib/bb/__init__.py

commit 5051f59976de4e099bb434aeea414de5a67a069f
Author: Cristiana Voicu <cristiana.voicu@intel.com>
Date:   2013-10-07 18:21:46 +0300

    hob: change tooltip for live images
    
    This change is needed to inform the user that selecting
    live type means that the system will build a hddimg and iso
    image.
    
    Signed-off-by: Cristiana Voicu <cristiana.voicu@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

4	1	lib/bb/ui/crumbs/hig/advancedsettingsdialog.py

commit 42601a5edef0316767b952b162123534aa8fee18
Author: Cristiana Voicu <cristiana.voicu@intel.com>
Date:   2013-10-07 14:28:55 +0300

    bitbake: replace comment added in conf files
    
    The patch that implements removeConfigurationVar method was made before
    merging the patch that replaces "added by bitbake" with "added by hob".
    This patch corrects this issue.
    
    [YOCTO #5284]
    Signed-off-by: Cristiana Voicu <cristiana.voicu@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/cooker.py

commit 0cabdf1d0cde6687bc1372675a0d6242587c87a0
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2013-10-04 15:36:47 +0000

    bitbake-dumpsig: introduce command line and error handling
    
    This utility doesn't take any special arguments, but it's nice if it at
    least knows how to deal with no arguments, --help and errors properly.
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

57	3	bin/bitbake-dumpsig

commit 77b5f5b8dca4deebb06eeb06a8e7f2ccdbfff46f
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2013-10-04 15:35:29 +0000

    bitbake-diffsigs: improve error handling
    
    * Set up a logger independent of BitBake so we can log errors ourselves
    * Handle common errors without printing a traceback
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

25	5	bin/bitbake-diffsigs

commit daab42d19463b4108968fc88b207936e5ac84154
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2013-10-04 15:06:36 +0000

    bitbake-diffsigs: refactor argument parsing slightly
    
    * Use OptionParser to parse the two options to -t rather than trying to
      pick them out ourselves.
    * Add a description shown with --help output
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

13	16	bin/bitbake-diffsigs

commit d182cbc63745303ef2dc9fa2cbbf5d87a68e0b52
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2013-10-04 11:13:46 +0000

    bitbake-diffsigs: handle if task name is specified without do_ prefix
    
    Adjust the task name automatically if the -t option is specified with
    a task name that doesn't start with do_ (e.g. "configure" instead of
    "do_configure").
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	0	bin/bitbake-diffsigs

commit d7b5938a30a9b0ed83f899a06a88786e8392f8bd
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2013-10-04 14:24:50 +0100

    bin/bitbake: Clarify server error message
    
    Getting an error message about --remote-server being set when really
    BBSERVER was is confusing, clarify the message.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	2	bin/bitbake

commit a886cda58415085981646fb9a024fa7641f55865
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2013-10-04 14:17:45 +0100

    bin/bitbake: Clear ui-queue when starting a server
    
    When starting a server we don't want to show the debug event queue which
    is reserved for when when errors have occurred. This patch copies the UI
    code to ensure the user doesn't see confusing output.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	0	bin/bitbake

commit 1ff5ec26eba70ab1c85674a60b7dac77317bf349
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2013-10-04 14:16:15 +0100

    bin/bitbake: No need to show tracebacks for BBHandledExceptions
    
    For BBHandledExceptions, we've already displaced a sensible error to
    the user so we don't need to do it again. Just exit with an error
    value.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	0	bin/bitbake

commit 26913202f83fbbecdce95da59515af102bcde4a7
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2013-10-04 14:15:36 +0100

    xmlrpc: Show a better error message for connection failures
    
    Showing a traceback when unable to connect to a bitbake server is
    rather ugly. This change allows us to show a sensible error message.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

6	3	lib/bb/server/xmlrpc.py

commit 719808f95adc7820fcc09743c592513414d03ce1
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2013-10-04 14:14:52 +0100

    bin/bitbake: Catch establish connection log messages
    
    If for example you try "bitbake -m" with an invalid BBSERVER, error
    messages are not displayed. This change ensures logging is in place
    to catch and display such errors.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	2	bin/bitbake

commit bd720fb63cef6b399619b8fbcaeb8d7710f2d6df
Author: Cristiana Voicu <cristiana.voicu@intel.com>
Date:   2013-10-04 16:19:45 +0300

    bitbake/hob: removing extra parameters from conf files using hob
    
    In Hob settings, there is a tab to add/remove extra settings. This
    patch implements a way to "remove" variables from conf files, through
    bitbake. But, to keep the history assigment of the variables synchronized,
    instead of removing, it replaces the lines with blank lines.
    
    [YOCTO #5284]
    Signed-off-by: Cristiana Voicu <cristiana.voicu@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

7	0	lib/bb/command.py
38	0	lib/bb/cooker.py
6	2	lib/bb/data_smart.py
1	1	lib/bb/ui/crumbs/builder.py
17	0	lib/bb/ui/crumbs/hobeventhandler.py

commit 2d0ec8ff083b636a6cf98de3278900eb95c3def6
Author: Valentin Popa <valentin.popa@intel.com>
Date:   2013-09-27 17:10:41 +0300

    HOB: MACHINE should be saved in conf files using ?=
    
    MACHINE var is saved using early assignment operator.
    Calling  MACHINE=x bitbake core-image-... works properly.
    Comment "#added by bitbake" is replaced with "#added by hob".
    
    [YOCTO #5070]
    Signed-off-by: Valentin Popa <valentin.popa@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

10	7	lib/bb/cooker.py
1	1	lib/bb/ui/crumbs/builder.py
6	1	lib/bb/ui/crumbs/hobeventhandler.py

commit 90f91f7402ff69f3fe9fba5f94a53d371303ce34
Author: Ross Burton <ross.burton@intel.com>
Date:   2013-10-02 17:47:28 +0100

    utils: use logger.warn instead of print in copyfile
    
    print disappears into the ether, so use logger.warn and clean up the messages.
    
    Signed-off-by: Ross Burton <ross.burton@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

5	5	lib/bb/utils.py

commit 78efda1224a99ed3d2ca6befb9fd719d82f6b0ae
Author: Erik Botö <erik.boto@pelagicore.com>
Date:   2013-10-02 16:37:37 +0200

    lib/bb/monitordisk.py: fix spelling in error text
    
    Signed-off-by: Erik Botö <erik.boto@pelagicore.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	2	lib/bb/monitordisk.py

commit fdb2e0120f189e97b8fdb6eb72d77a3100ba3018
Author: Valentin Popa <valentin.popa@intel.com>
Date:   2013-09-10 15:58:52 +0300

    HOB: Busy cursor when saving configuration
    
    Display a busy cursor while the configuration is saved.
    
    [YOCTO #4846]
    Signed-off-by: Valentin Popa <valentin.popa@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

8	0	lib/bb/ui/crumbs/builder.py
10	0	lib/bb/ui/crumbs/imageconfigurationpage.py

commit 2666865a27cedbffc82800b4cab1d6cff5a0222e
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2013-09-24 18:04:02 +0100

    bitbake: Update to version 1.20.0
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	bin/bitbake
1	1	lib/bb/__init__.py

commit a2074ddaba6f53962d6caf34dbd27bdbc259935b
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2013-09-21 10:44:16 +0000

    tests/data: Whitespace in key names is a really bad idea
    
    The parser never has supported it, the datastore API did happen to work
    but whitespace in key names is a really bad idea and not something I think we
    should encourage or support.
    
    Fix test case failures after excplitly ignoring it for variable expansion
    purposes.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

15	15	lib/bb/tests/data.py

commit 37e13b852b33d98fa40f49dc1e815b3bbe912ff0
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2013-09-20 15:26:32 +0000

    data_smart: Variable references don't contain newlines, spaces or tabs
    
    The code is happily trying to expand variable names containing newlines,
    spaces and tabs which are illegal characters in variable names. This
    patch stops it doing this. This will change dependency checksums
    since some rather weird dependencies were being attempted to be expanded.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/data_smart.py

commit 10757c529fe0b4b9a39740d269831347a3aab4a0
Author: Cristiana Voicu <cristiana.voicu@intel.com>
Date:   2013-09-17 13:51:14 +0300

    hob: populate "Save image" dialog when saving changes to a custom image recipe
    
    If my build starts from a YP standard image recipe, the 'Save image
    recipe' dialog should be empty.
    
    If my build starts from a custom image recipe, the 'Save image recipe'
    dialog should populate the 'Name' and 'Description' fields with the values
    set for the custom image recipe.
    
    [YOCTO #5004]
    Signed-off-by: Cristiana Voicu <cristiana.voicu@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

8	0	lib/bb/ui/crumbs/imagedetailspage.py

commit 516311946c7bd14c84947dc44c3bb0563e5a9667
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2013-09-18 22:12:10 +0000

    bin/bitbake: Improve --help text
    
    The --help text was rather inconsistent in style and plain incorrect in places,
    using confusing terminology in others. I guess most people know what the options
    do and don't read this but its confusing to new users.
    
    This updates it to use the terms recipe and task consistently, remove
    the references to stage, bbread and generally try and make the output
    more useful.
    
    [YOCTO #4856]
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

29	30	bin/bitbake

commit 94d82997220c6cfc7028f76719df028ba8254a5c
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2013-09-20 09:54:40 +0000

    build: Add BB_TASK_NICE_LEVEL to task code
    
    On Linux its not possible for processes to regain a previous nice level after
    it has changed. Its therefore not possible to have a core low priority and
    then raise the priorities of individual tasks.
    
    This variable allows us to do something like:
    
    BB_TASK_NICE_LEVEL = "5"
    BB_TASK_NICE_LEVEL_task-testimage = "0"
    
    to give priority to specific tasks which the BB_NICE_LEVEL functionality
    doesn't give us the option of.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

8	0	lib/bb/build.py

commit b6e2ce1cf7a0ede890f08fabf536a556dc4263c5
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2013-09-18 13:15:53 +0100

    bitbake: runqueue: add task hash to Queue events
    
    Adding the sstate-related hash for all runqueue and
    scenequeue tasks, as it's needed in the WebHob data.
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

5	0	lib/bb/runqueue.py

commit ae1ea51aaab73e010d1c3db39df058bebebc11dd
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2013-09-18 13:15:52 +0100

    bitbake: event: adding generic event for metadata usage
    
    Adding the generic bb.event.MetadataEvent that is
    targeted specifically at metadata usage. This is
    needed in order to let the metadata code send and receive
    events during asynchrous execution without having
    to define each event specifically in Bitbake.
    
    Metadata code should subscribe to and fire the MetadataEvent
    in order to communicate asynchronously, and identify
    the object using event.type field, and parse the
    data in the event.data field.
    
    Knotty UI will ignore these event by default.
    
    This deprecates RequestPackageInfo/PackageInfo, and that
    event pair will be removed in the future.
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

10	0	lib/bb/event.py
1	0	lib/bb/ui/knotty.py

commit 3e094da513e1220319288806cb76ddf804772afd
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2013-09-18 13:15:51 +0100

    bitbake: cooker, command: add a command to return global data
    
    Adding the 'getAllKeysWithFlags' read-only command that will
    return a dump of the global data state, together with specified
    flags for each key. The flag list is passed in as the first
    parameter to the command.
    
    This will be used by UI clients to get the build configuration.
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

9	0	lib/bb/command.py
15	0	lib/bb/cooker.py

commit 47c171005fb3803d936e65fcd4436c643883ae16
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2013-09-18 13:15:50 +0100

    bitbake: cooker: get extra information from recipe cache
    
    The loaded cache modules may add extra attributes to
    the recipecache, that will be populated by the cache
    classes required by the UI. These attributes
    will be used by the UI to display relevant information.
    
    Adds cachefields cache class field to specify
    for each cache class which attributes will be set
    in the recipecache.
    
    Adds code to automatically expand depends tree with the
    fields exported by the extra cache class.
    
    Fixes a cache field name in the HOB UI.
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

6	0	lib/bb/cache_extra.py
29	21	lib/bb/cooker.py
1	1	lib/bb/ui/crumbs/hoblistmodel.py

commit b4a5e4be50d871a80dbe0993117d73f5ad82e38f
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2013-09-18 13:15:49 +0100

    bitbake: build, runqueue: adds info to the *runQueue* events
    
    This patch adds task identifying information for all
    runQueue and sceneQueue events, and for bb.build.Task* events.
    This will allow matching event to specific tasks in the UI
    handlers processing these events.
    
    Adds RunQueueData functions to get the task name and task
    file for usage with the runQueue* events.
    
    Adds taskfile and taskname properties to bb.build.TaskBase.
    
    Adds taskfile and taskname properties to the *runQueue* events
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	0	lib/bb/build.py
10	0	lib/bb/runqueue.py

commit 75466a53b6eece5173a9bfe483414148e4c06517
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2013-09-18 13:15:48 +0100

    bitbake: cooker,runqueue: send the task dependency tree
    
    Adding a CookerFeature that allows UIs to enable
    receving a dependency tree once the task data has been
    computed and the runQueue is ready to start.
    
    This will allow the clients to display dependency
    data in an efficient manner, and not recompute the runqueue
    specifically to get the dependency data.
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

4	1	lib/bb/cooker.py
5	0	lib/bb/runqueue.py

commit 98e594837aab89ea042cfa9f3740d20a661b14e2
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2013-09-18 13:15:47 +0100

    bitbake: cooker,xmlrpc,servers: implement CookerFeatures
    
    Implementing feature set selection that allows a client
    to enable specific features in the server at connection time.
    
    Only enabling of features is supported, as there is
    no way to safely remove data loaded into the cooker.
    Once enabled, a feature will remain enabled for the
    life of the cooker.
    
    Client-server connection now supports specifying the feature
    set required by the client. This is implemented in the Process
    server using a managed proxy list, so the server cooker
    will now load dynamically needed features based on what client
    connects to it.
    
    In the XMLRPC server the feature set is requested by
    using a parameter for registerUIHandler function.
    This allows observer-only clients to also specify features
    for the server.
    
    The server code configuration now is completly separated
    from the client code. All hardcoding of client knowledge is
    removed from the server.
    
    The extra_caches is removed as the client can now specify
    the caches it needs using the feature. The UI modules
    now need to specify the desired featureSet. HOB is modified
    to conform to the featureSet specification.
    
    The only feature available is CookerFeatures.HOB_EXTRA_CACHES
    which forces loading the bb.cache_extra:HobRecipeInfo class.
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

5	20	bin/bitbake
32	2	lib/bb/cooker.py
0	1	lib/bb/cookerdata.py
1	1	lib/bb/server/__init__.py
18	5	lib/bb/server/process.py
22	7	lib/bb/server/xmlrpc.py
1	1	lib/bb/ui/hob.py
3	0	lib/bb/ui/knotty.py
5	2	lib/bb/ui/uievent.py

commit 8a42d082315bd6ce091d006bf83476db257fa48b
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2013-09-18 12:23:54 +0000

    data_smart: Fix variable reference issues
    
    The change to use the expansion cache in VariableParse was incorrect as
    it was adding in references it shouldn't have been. This patch corrects
    the codepaths and ensures the references are correct.
    
    The cache version is bumped since the previous bug could have leave
    to invalid checksum calculations and a clean cache is therefore desireable.
    
    The impact of the bug was that sstate was not getting reused when it should
    and some tasks were also being rerun when they should not have been.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/cache.py
3	4	lib/bb/data_smart.py

commit 97db2a0792d605f27d434bc6a4acce52857deee1
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2013-09-18 07:38:44 +0000

    cooker: return a copy checkPackages
    
    The syntax used for checkPackages implies a copy is returned but it
    did not do so. Make it so.
    
    This is fixes universe builds where error messaages were being shown
    but there should have only been warnings.
    
    [YOCTO #5222]
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	0	lib/bb/cooker.py

commit 6983afab0ce8d82d102142636d5a570f7d86a844
Author: Scott Rifenbark <scott.m.rifenbark@intel.com>
Date:   2013-09-17 14:02:18 -0700

    usermanual.xml: Two new sections added to BitBake "Description"
    
    1. Added a new section "Appending and Prepending (override style
       syntax)".  This section shows how the append and prepend operators
       work using the override style syntax.
    
    2. Added a new section "Removing (override style syntax)".  This
       section describes the new "_remove" operator.
    
    Signed-off-by: Scott Rifenbark <scott.m.rifenbark@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

19	1	doc/manual/usermanual.xml

commit 4aff249ff51aa9fab05d3b65a78016e779af775c
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2013-09-17 19:15:26 +0100

    Revert "bb.fatal: Raise a BBHandledException instead of exiting"
    
    Sanity test failures are no longer fatal with this change so whilst
    its the right idea, the code paths need more work.
    
    This reverts commit a50017ba71250e1710a6425b60ac7e3f03d88295.

2	1	lib/bb/__init__.py

commit a50017ba71250e1710a6425b60ac7e3f03d88295
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2013-09-14 16:59:24 +0000

    bb.fatal: Raise a BBHandledException instead of exiting
    
    With new bitbake UIs having the cooker exit at 'random' points
    in the codebase is problematic. This patch raises an exception
    which matches the siutation instead.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	2	lib/bb/__init__.py

commit 8a59a8707cecbde257fca169775ce8ff7709928b
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2013-09-16 07:54:58 +0000

    data: Optimise flag exclusion list handling
    
    Move the variable lookup to the outer loop for performance, replacing
    a now unneeded parameter (after the previous changes).
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

4	5	lib/bb/data.py

commit 1bf3aee698ad35f6815ea2c75471a96511a29d55
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2013-09-16 07:53:40 +0000

    data: Optimise flag lookup in build_dependencies
    
    When looking up flag variable dependencies, large chunks of the function
    aren't needed. Optimise the function flow accordingly for speed.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

5	2	lib/bb/data.py

commit eba1e9545cc933820d40de96f023b2307b3c4d0b
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2013-09-16 07:51:18 +0000

    data: Optimise build_dependencies a little
    
    Instead of multiple calls to getVarFlag, make one call to getVarFlags, only expanding
    the flags that need to be expanded. This improves performance.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

10	11	lib/bb/data.py

commit b05b748b2153c941b95cd36fb22aaafc4dbf3791
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2013-09-16 07:45:50 +0000

    data_smart: Cache the fact a variable accesses another even if its unset
    
    If a variable references another but it isn't set at present, the
    reference wasn't stored. It really should be marked as a reference
    and the higher level dependency code can handle as appropriate.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/data_smart.py

commit a0122ab80df21597291ff32ff7fbaa4de0347a6f
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2013-09-16 07:45:20 +0000

    data_smart: Allow flags to use the expand cache
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	1	lib/bb/data_smart.py

commit a3ae7efdf750fc5bb9ff5a75defbcfdab1912dbe
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2013-09-16 07:43:30 +0000

    data_smart: Allow expansion of flags in getVarFlags
    
    Allow a list of flags to expand to be passed into getVarFlags. This
    is useful within bitbake itself to optimise performance of the
    dependency generation code.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	2	lib/bb/data_smart.py

commit a4d81e44a7cd3dafb0bf12f7cac5ff511db18e60
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2013-09-16 07:40:20 +0000

    data_smart: Add explict None checks
    
    Simple if xxx checks end up calling len(xxx). We're interested in the specific case
    of None which means we can break out the iterator much earlier after the first
    item. This adds in the specific tests for None in what is a hot path in the
    data store code which gives small performance gains.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	2	lib/bb/data_smart.py

commit f41f46f7eaa6889edeb3a4e4ddedc07084686c60
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2013-09-16 07:36:42 +0000

    data: Cache an list of export variables
    
    Compute a cache of the list of potential export variables so
    that we don't have to compute the list from scratch.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/data.py
7	0	lib/bb/data_smart.py

commit e63448d9ee331b0f45fb9a0197d0dbee49eb2fa0
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2013-09-16 07:33:48 +0000

    data: Use direct iteration, not keys()
    
    Profiling shows the creation of keys() has overhead and we're better using
    an iterator rather than the memory associated with the huge list of keys
    when iterating the whoe datastore. We minimise the number of times
    we do this to twice only per recipe.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	2	lib/bb/data.py

commit f682b8b83d21d576160bac8dc57c4c989b4dc555
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2013-09-16 07:25:08 +0000

    data_smart: use the expand_cache in VariableParse
    
    When in VariableParse, use the expand_cache if possible rather than looking
    up data. Ultimately it would come from the same place but this short cuts
    a heavily used code block for speed improvements.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

5	0	lib/bb/data_smart.py

commit c630d564285f55f9db10c18269bd310df797430e
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2013-09-16 07:21:32 +0000

    data_smart: Improve variable expansion regexp
    
    Debugging showed the variable expansion regexp was catching python
    expressions (starting with @). Since these are caught by their own
    dedicated regexp, stop matching these for the plain variable expansion
    for small performance improvements.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/data_smart.py

commit 8ffaba61da7f195d7c3b64dce35b6a56272aecae
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2013-09-16 07:18:34 +0000

    siggen: Use lookup cache exclusively
    
    All the values we need are already guaranteed to be in the lookupcache
    so rather than fetch variables again, just use the cache. This gives a
    small performance improvement and simplifies the code.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	12	lib/bb/siggen.py

commit 43a245bde318545ea75ca4ce7894395c1cf9b32a
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2013-09-16 07:13:38 +0000

    data: Be explicit in data_db check
    
    The if statement current causes the size of parent to be calcuated which
    is like a len() operation on a datastore. Since we're only interested
    whether the value is none, checking explictly for this gives a
    small performance gain.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/data.py

commit f8a6e4caed4dc3dcf207aecc4ea5f438027da8be
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2013-09-15 08:57:02 +0000

    cooker: Allow profiling of the parser in profile mode
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

22	2	lib/bb/cooker.py

commit 468c221449290c4f196e87f7d8e23fcd7db86135
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2013-09-16 22:50:56 +0000

    cooker: Avoid duplication for taskdata creation
    
    Clean-up to avoid duplication and promote code reuse to factor
    taskdata creation into a common function.
    
    [RP: minor tweaks]
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

27	40	lib/bb/cooker.py

commit cf4a0c7aa82090876ae652b611acfab3ce2688f7
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2013-09-16 12:46:01 +0000

    runqueue: add runQueueTaskSkipped event
    
    Adding a runQueueTaskSkipped to notify that the tasks that are not
    run either because they are set-scened or they don't need an update
    (timestamp was ok).
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

12	3	lib/bb/runqueue.py

commit 8344d84c609446f59f9619cc7ca0d693b7e2bbd6
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2013-09-14 17:54:09 +0100

    build: Add logfile to add TaskBase events
    
    We add the path to the logfile for all Task events except TaskInvalid
    so that we can trace back the logfile locations at some future point.
    
    TaskInvalid doesn't ever have a logfile.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

6	10	lib/bb/build.py

commit dacc94bcace85a2e95aee2dccd8e680c59e4545f
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2013-09-13 17:34:42 +0100

    cooker: updateCache should rause exceptions, not sys.exit
    
    Exiting from the server is antisocial, instead we should raise an exception. This
    will correctly fail the current command and reset the server state. We use
    the handled exception since for these conditions to occur, something was
    already displayed to the user.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	2	lib/bb/cooker.py

commit 568ea00acd226d48e725bb01d4f8c410ed1eaa61
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2013-09-13 17:34:06 +0100

    knotty: Cleanup error/interruption handling
    
    Only display a CommandFailed ERROR: message if there is an error to display.
    
    Only display an errors summary if we actually displayed errors.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

4	3	lib/bb/ui/knotty.py

commit 70a8ead31f9ffc987d9c6db61a926f7a9af8f8b1
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2013-09-13 17:33:30 +0100

    command: Treat empty messages as failures, not CommandCompleted
    
    Empty messages should trigger CommandFailed, not CommandCompleted as
    otherwise the exit code will be incorrect.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/command.py

commit dd15648fc2654b8d7c3e00ea7ab3dbf04f24f24b
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2013-09-13 17:32:53 +0100

    cooker/command: Add finishcommand to reset cooker state
    
    After running a command on the server, it needs to reset to the initial
    state. This ensures that subsequent clients start from a known state
    and notice any configuration changes.
    
    Ultimately we may want to do more than this buts a good start and better
    than nothing.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/command.py
3	0	lib/bb/cooker.py

commit 12e9d33bfae5294e3870dfd1202f63383ad05e92
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2013-09-13 17:31:54 +0100

    cooker: Rename confusing 'stop' state to 'forceshutdown'
    
    The shutdown state causes the server to finish what its doing, stop was
    them meant to completely stop it. It doesn't mean the server is stopped
    though. Renaming the current stop event for forceshutdown gives more
    meaning to what it actually does. The stopped namespace then becomes
    available to indicate a completely stopped server.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	3	lib/bb/command.py
9	9	lib/bb/cooker.py
1	1	lib/bb/server/process.py
2	2	lib/bb/ui/crumbs/hobeventhandler.py
1	1	lib/bb/ui/depexp.py
1	1	lib/bb/ui/goggle.py
1	1	lib/bb/ui/knotty.py
1	1	lib/bb/ui/ncurses.py

commit 1193b8d76fcb6cb87e9ec135a2514370d7dd90ac
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2013-09-13 17:31:09 +0100

    cooker: Clean up init/reset configuration code
    
    Currently the cooker event data isn't rebuilt upon reset and the cache
    configuration cannot be changed after init. These are both bad things
    and this patch refactors the init/reset code so that it is possible
    to reconfigure the server.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

24	25	lib/bb/cooker.py

commit bc0b30199a8e3624c5b9914430adbcc7c6bd4497
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2013-09-13 17:30:18 +0100

    cooker: Drop obsolete worker test
    
    This call only ever happens in cooker context now so we can drop the
    nasty worker check from here.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	5	lib/bb/cooker.py

commit 8e8e17631d790271b1be747c4b45059ec38ab606
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2013-09-09 17:41:03 +0100

    bitbake: xmlrpc: delete unused code BitBakeUIEventServer
    
    BitBakeUIEventServer is an unused class that pushes UI
    events over a separate thread.
    
    The current version of XMLRPC server works just fine with
    the classic UI event handlers, so this class is not needed.
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

0	45	lib/bb/server/xmlrpc.py

commit 62914f9208ef2427a34daa523af857f4027900eb
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2013-09-12 13:06:22 +0000

    data_smart: Account for changes in append/prepend/remove in the config hash
    
    bitbake wasn't reparsing when _remove items were added to its configuration
    and equally, appends/prepends were also being badly tracked. This
    change enrures these variables are accounted for in the configuration
    hash.
    
    [YOCTO #5172]
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

6	3	lib/bb/data_smart.py

commit 843e9339c5ee3c99657a40a0e2c7dbd777b6ef06
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2013-09-11 11:01:47 +0100

    utils: Fix BB_PRESERVE_ENV
    
    BB_PRESERVE_ENV wasn't working since data.inheritFromOS wasn't getting a
    correct list of keys to import into the data store. This fixes
    things so it does add all environment variables into the data store
    when BB_PRESERVE_ENV is used.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	0	lib/bb/utils.py

commit 73b8f4d3fbeaf1b330a66d76012d0a5cef8dbe2d
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2013-09-09 17:40:56 +0100

    bitbake: runqueue: add sceneQueueTaskCompleted event
    
    Adding an event to be fired when a scene task is completed.
    It is analogous to the run task completed event, and has
    been missing for some reason.
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

6	0	lib/bb/runqueue.py

commit ab377c00c33a2d296bfda1b0b6c2a62b29d1004f
Author: Robert Yang <liezhi.yang@windriver.com>
Date:   2013-09-02 09:47:21 -0400

    runqueue.py: check whether multiple versions of the same PN are due to be built
    
    There would be an race issue if we:
    
    $ bitbake make-3.81 make-3.82
    
    This because they are being built at the same time which would cause
    unexpected problems, for example:
    
    [snip]
    ERROR: Package already staged (/path/to/tmp/sstate-control/manifest-qemux86-make.populate-sysroot)?!
    ERROR: Function failed: sstate_task_postfunc
    [snip]
    
    Or there would be python's strack trace such as:
    
    [snip]
     *** 0004:    mfile = open(manifest)
         0005:    entries = mfile.readlines()
         0006:    mfile.close()
         0007:
         0008:    for entry in entries:
    Exception: IOError: [Errno 2] No such file or directory: xxx
    [snip]
    
    [YOCTO #5094]
    
    We can quit earlier to avoid this kind of issue when two versions of the same PN
    are going to be built since this isn't supported.
    
    Signed-off-by: Robert Yang <liezhi.yang@windriver.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

8	1	lib/bb/runqueue.py

commit 92b624cbc2711d3d859994099fb63918dfd0031a
Author: Robert Yang <liezhi.yang@windriver.com>
Date:   2013-09-02 09:41:19 -0400

    providers.py: enhance the runtime debug degbug messgae
    
    The runtime provider debug message is the same as the build time debug
    message, make them different would be better.
    
    [YOCTO #5067]
    
    Signed-off-by: Robert Yang <liezhi.yang@windriver.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/providers.py

commit 4e55f7821786a59c2cd7dbd8bfa2a22f5f196e99
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2013-09-08 09:45:54 +0000

    prserv: Ensure data is committed
    
    In exclusive mode, we need to complete the transaction for writes to make
    it to the database. Therefore add sync calls to ensure this happens.
    
    Autocommit mode is significantly (100 times) slower so caching the
    data is of significant benefit.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

4	0	lib/prserv/db.py
2	1	lib/prserv/serv.py

commit f5f479bbe9b74622cd54c8d6ba8786661a3ae3e6
Author: Christopher Larson <kergoth@gmail.com>
Date:   2013-09-06 12:25:32 -0700

    contrib/vim: merge changes from vim-bitbake repo
    
    commit 00ca441614695b4261d8d4f31b7ef0e3e3784282
    Merge: 8cc367d bb88c0f
    Author: Christopher Larson <kergoth@gmail.com>
    Date:   Thu Aug 22 16:42:42 2013 -0700
    
        Merge pull request #6 from staticshock/multi-line-strings
    
        Remove "keepend" and "excludenl" directives
    
    commit bb88c0fd4ad2b7b9c8c4c73def2b3cb20c473ac3
    Author: Anton Backer <olegov@gmail.com>
    Date:   Sat Jul 13 01:24:15 2013 -0400
    
        Remove "keepend" and "excludenl" directives
    
        It looks like these were never actually used correctly, and were doing
        more harm than good. "keepend" on bbString, for instance, prevented
        proper nesting of ${@python} in strings. Similarly, a balanced pair of
        { } braces inside a shell function would force the function to terminate
        early if the closing brace was on its own line.
    
        So far I've seen absolutely no negative consequences from removing
        these, but a bunch of positive consequences.
    
        Fixes #1
    
    commit 8cc367d01f4c699be5fcc072de59e6f2f14a138b
    Merge: c58628c eec6b7f
    Author: Christopher Larson <kergoth@gmail.com>
    Date:   Thu Aug 22 09:46:46 2013 -0700
    
        Merge pull request #4 from staticshock/function-names
    
        Parse function names with nested vars
    
    commit c58628ca517cd25985361fc0d27863521cc28a5d
    Merge: dfb0f7c a890982
    Author: Christopher Larson <kergoth@gmail.com>
    Date:   Thu Aug 22 09:43:40 2013 -0700
    
        Merge pull request #5 from yoyko/master
    
        syntax: python expansion (${@...}) inside shell functions
    
    commit a890982b7c33a6e363b12d6cb69e22b4bbc0f317
    Author: Jozef Šiška <yoyo@ksp.sk>
    Date:   Thu Aug 22 13:20:45 2013 +0200
    
        syntax: python expansion (${@...}) inside shell functions
    
        Signed-off-by: Jozef Šiška <jsiska@nuvotechnologies.com>
    
    commit eec6b7f6f0472787929f424968f9a0d78ac4af08
    Author: Anton Backer <olegov@gmail.com>
    Date:   Fri Jul 12 22:16:01 2013 -0400
    
        Parse function names with nested vars
    
        For instance, pkg_postinst_${PN}
    
        Fixes #3
    
    commit dfb0f7c0d51556448cba79b474b8c19b9cded9af
    Author: Christopher Larson <chris_larson@mentor.com>
    Date:   Fri Jun 1 18:57:13 2012 -0400
    
        syntax: add ?= flag def
    
        Signed-off-by: Christopher Larson <chris_larson@mentor.com>
    
    commit 589a62a00709ca822a42327e7086008aba2d9933
    Author: Christopher Larson <kergoth@gmail.com>
    Date:   Fri Dec 9 22:25:47 2011 -0700
    
        ftplugin: set commentstring
    
        Signed-off-by: Christopher Larson <kergoth@gmail.com>
    
    commit 7ffc80b3fb4ddf68cc5a69bdc63ab03d70c44f87
    Author: Chris Larson <chris_larson@mentor.com>
    Date:   Thu Jun 2 15:27:48 2011 -0700
    
        Handle +=/=+ for flags
    
        Signed-off-by: Chris Larson <chris_larson@mentor.com>
    
    Signed-off-by: Christopher Larson <kergoth@gmail.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	contrib/vim/ftdetect/bitbake.vim
1	0	contrib/vim/ftplugin/bitbake.vim
11	8	contrib/vim/syntax/bitbake.vim

commit 5d706c7cd6ee8d83b67ff18312d4c8119bea8878
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2013-09-02 21:48:29 +0000

    knotty: Reduce refresh of footer
    
    When displaying larger number of events the client can get caught up in displaying
    the footer, then immediately overwriting it. To avoid this, wait for pauses
    in the event stream before displaying the footer to give a slightly more
    friendly feel to the UI.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

4	2	lib/bb/ui/knotty.py

commit 756cc69ebf8bfe8455d0c90f288dd51be2499773
Author: Peter Kjellerstedt <peter.kjellerstedt@axis.com>
Date:   2013-09-06 17:53:20 +0200

    bitbake: Ensure ${DATE} and ${TIME} are consistent
    
    Due to the worker split the ${DATE} and ${TIME} variables could end up
    with different values for different workers.
    
    E.g., a task like do_rootfs that is run within a fakeroot environment
    had a slightly different view of the time than another task that was not
    fakerooted which made it impossible to correctly refer to the image
    generated by do_rootfs from the other task.
    
    Signed-off-by: Peter Kjellerstedt <peter.kjellerstedt@axis.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	0	bin/bitbake-worker
2	0	lib/bb/runqueue.py

commit 94483ee5ae9f4051bccd660c4718c36564e17161
Author: Cristiana Voicu <cristiana.voicu@intel.com>
Date:   2013-09-04 18:45:07 +0300

    hob: remove custom image from the images list when not needed
    
    Selected custom image recipes should be cleared from the combo the moment
    you change your selection. The idea is to always perform the selection of
    those images in the same way (i.e through the "Select from my image
    recipes" option).
    
    [YOCTO #5001]
    Signed-off-by: Cristiana Voicu <cristiana.voicu@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

4	0	lib/bb/ui/crumbs/imageconfigurationpage.py

commit 9aec9ee41d4d893325d9bf92b8a53f2e68e4973d
Author: Cristiana Voicu <cristiana.voicu@intel.com>
Date:   2013-09-05 15:47:52 +0300

    hob: limit the description size when a custom image is saved
    
    [YOCTO #5003]
    Signed-off-by: Cristiana Voicu <cristiana.voicu@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

11	2	lib/bb/ui/crumbs/hig/saveimagedialog.py

commit 7adb05978b917e624016bae1700db23bd280b41a
Author: Khem Raj <raj.khem@gmail.com>
Date:   2013-09-05 14:09:20 -0700

    newbb.vim: Use 'git config' instead of git-config
    
    Newer versions of git do not have the '-' concatenated command
    
    Signed-off-by: Khem Raj <raj.khem@gmail.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	2	contrib/vim/plugin/newbb.vim

commit 181899bd9665f74f8d1b22d2453616ad30d26d9e
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2013-09-06 20:14:25 +0000

    data_smart: Move getVar expand cache handing to fix _remove operations
    
    DISTRO_FEATURES_remove = "opengl" wasn't working as expected. The reason
    turned out the be the indirect reference to opengl and the fact _remove was
    operating on unexpanded data.
    
    This patch rearranges some code to ensure we operate on expanded data
    by moving the expand cache handing into getVarFlags instead of getVar.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

6	7	lib/bb/data_smart.py

commit 8757f962b92e7668f40d2d8bd9e762b152f91f7b
Author: Cristiana Voicu <cristiana.voicu@intel.com>
Date:   2013-09-03 10:28:01 +0300

    hob: remove PACKAGE_INSTALL variable setting from hob
    
    Before saving the packages for a custom images in a .bb file,
    the packages were saved in bitbake memory. Now all the variables
    are saved in conf file, so saving PACKAGE_INSTALL is not needed anymore.
    Moved were LINGUAS_INSTALL is set, because both conditions are for testing
    if a custom image is saved.
    
    [YOCTO #5101]
    Signed-off-by: Cristiana Voicu <cristiana.voicu@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	3	lib/bb/ui/crumbs/hobeventhandler.py

commit 92940b0427d9b2b3f95e27c230ec1e36638a34bc
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2013-09-02 18:26:28 +0100

    bitbake-worker: ensure BUILDNAME is available during execution
    
    BUILDNAME is set from cooker by default, so since the worker split it
    will not be set when executing functions. In OpenEmbedded this results
    in /etc/version (which is populated from BUILDNAME) not having any
    content. Pass this variable value through to the worker explicitly to
    fix the issue.
    
    Fixes [YOCTO #4818].
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	0	bin/bitbake-worker
1	0	lib/bb/runqueue.py

commit dce0f9d4afe0986e2dd0146944fc4ac9dde275e4
Author: Cristiana Voicu <cristiana.voicu@intel.com>
Date:   2013-09-02 14:18:25 +0300

    bitbake/cooker: fix some calls of cookerdata.findConfigFile method
    
    Cookerdata.findconfigFile method has a new parameter. Changed some calls.
    
    Signed-off-by: Cristiana Voicu <cristiana.voicu@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	3	lib/bb/cooker.py

commit ad7664edd40fa46e6f6fec2144403e3b6fc3a639
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2013-09-02 08:15:19 +0000

    runqueue: Fix scenequeue to pass file descriptors, not a float
    
    This was missed off in a previous patch.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/runqueue.py

commit eb6bae56f62082bf147045311154cbae4bca0f4c
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2013-08-31 23:46:06 +0100

    server/xmlrpc: stop server on client exit
    
    If the server only expects a single client to connect (i.e.
    no bind parameter set, so there is no way for the
    clients to get the server port), stop the server after
    the first client exits.
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

5	0	lib/bb/server/xmlrpc.py

commit e08455d5f3b8e96765942b9c3b9767c30650557d
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2013-08-31 23:44:42 +0100

    prserv/serv: Settle on two threads for optimal performance
    
    Using the threading mixin class resulted in large amounts of memory
    being used by the PR server for no good reason. Using a receiver thread
    and a thread to do the actual database operations on a single connection
    gives the same performance with a much saner memory overhead so
    switch to this.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

34	14	lib/prserv/serv.py

commit c9534f8e59d44b885334607ed90a3be2e492ec69
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2013-08-31 23:43:37 +0100

    build: Fix profile file names
    
    Using the basename of the .bb file is not unique, for example xxx-native
    and xxx can overwrite each other. If this happens whilst running, you can
    get odd backtraces as one file is parsed as another tries to write out
    new data.
    
    Avoid issues by using PN for the output filename instead.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/build.py

commit 42144a54979658f93fbbb43f7e271c1fff4d88ff
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2013-08-31 23:42:13 +0100

    serv/db: Don't use BEGIN/COMMIT
    
    Since we don't support using multiple servers on the same database file,
    don't use the BEGIN/COMMIT syntax and allow writes to the database
    to work ~100 times faster with no transaction locking.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	13	lib/prserv/db.py

commit e3e39be6f2d063858c92971ce8ccd89c95d4f26d
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2013-08-31 23:42:57 +0100

    serv/db: Take an excluside lock on the database
    
    We only support one server using the database at a time so take an exclusive
    lock and avoid later lock overhead.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/prserv/db.py

commit 9f9e6d87007ea87e62495705464f4232c996a165
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2013-08-31 23:41:35 +0100

    serv/db: Fix looping upon database locked issues
    
    If the database is locked we will get an immediate error indicating so,
    there is no retry timeout. The looping code is therefore useless, the loop
    count is near instantly exceeded.
    
    Using a time based retry means we can wait a sensible time, then gracefully
    exit.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

4	3	lib/prserv/db.py

commit 9bee497960889d9baa0a4284d79a384b18a8e826
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2013-08-31 23:40:55 +0100

    server/process, server/xmlrpc, runqueue: Use select.select() on fds, not time.sleep()
    
    The existing backend server implementations were inefficient since they
    were sleeping for the full length of the timeouts rather than being woken when
    there was data ready for them. It was assumed they would wake and perhaps did
    when we forked processes directory but that is no longer the case.
    
    This updates both the process and xmlrpc backends to wait using select(). This
    does mean we need to pass the file descriptors to wait on from the internals
    who know which these file descriptors are but this is a logical improvement.
    
    Tests of a pathaolgical load on the process server of ~420 rapid tasks
    executed on a server with BB_NUMBER_THREAD=48  went from a wall clock
    measurement of the overall command execution time of 75s to a much more
    reasonable 24s.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

10	2	lib/bb/runqueue.py
6	5	lib/bb/server/process.py
12	14	lib/bb/server/xmlrpc.py

commit 1a175b51f80d13f747b653d29e9c0d2201b5109c
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2013-08-30 17:52:20 +0100

    prserv: Allow 'table is locked' matching for retry loop
    
    Try and avoid errors like "ERROR: database table is locked: PRMAIN_nohist"
    by retrying if we see the string "is locked".
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/prserv/db.py

commit ab8d926b9bc27c58011e7db9327e031ac76ba34b
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2013-08-30 17:41:16 +0100

    server/xmlrpc: Increase timeout to 60s
    
    This is a better value that the earlier infinite timeout yet still
    allows for servers with high loads. It does mean the bitbake process
    can hang at exit for the timeout period but that should never happen
    and only happened for me in some test cases which wouldn't happen
    in normal use.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/server/xmlrpc.py

commit e86336b3fe245bc97fe74c9b9d6a21d38a536fb7
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2013-08-29 14:27:29 +0100

    cookerdata: Allow bblayers.conf to be found using BBPATH
    
    It should be possible to run a build anywhere on the filesystem and have
    bitbake find the correct build directory if its set somehow. The BBPATH
    variable makes perfect sense for this usage. Therefore use any available
    value of BBPATH to search for conf/bblayers.conf before walking the parent
    directory structure.
    
    This restores the option of being able to run bitbake from anywhere if
    the user has set things up to operate in that environment.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

15	8	lib/bb/cookerdata.py

commit b266db27de0bba19a418e4d42e870649136b116b
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2013-08-29 14:26:53 +0100

    cookerdata: Set TOPDIR when using bblayers.conf
    
    By definition, bblayers.conf is at the top of the build tree. We'd like
    to support running bitbake anywhere within that build tree but TOPDIR
    gets set to wherever cwd is. Change the code to reset TOPDIR
    to the top of the build directory.
    
    This shouldn't break anything but does make the system more usable.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	0	lib/bb/cookerdata.py

commit bf9be2029b2bded5f532bdda4c38ae3dff5d1cf6
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2013-08-28 16:10:09 +0000

    prserv/serv: Multithread the server
    
    This makes the PR server multithreaded and able to handle multiple connections
    at once which means its no longer a build bottle neck when serving one connection
    at a time. I've experimented and database connection for each thread seems to
    cause the least issues, pushing the contention for sqllite to handle itself.
    
    This means moving the db/table connection code into the actual function methods.
    It doesn't abstract well as a function since we need the db object around for
    the lifetime of the function as well as the table else we lose the connection.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

15	9	lib/prserv/serv.py

commit 5709efc2ff1e36529bd28f49cd093ccfa7abff7f
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2013-08-28 16:06:10 +0000

    prserv/db: Threading fixes
    
    Enabling threading for the PRServer causes a number of issues. Firstly is
    the obtuse error:
    
    sqlite3.InterfaceError: Error binding parameter 0 - probably unsupported type
    
    which is due to the class not being derived from object. See:
    http://docs.python.org/2/library/sqlite3.html#registering-an-adapter-callable
    
    Secondly, we want to enable multithreadded access to the database so we do this
    when we open it. This opens the way up to multithreading the PR server.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	2	lib/prserv/db.py
2	2	lib/prserv/serv.py

commit 85fed8acc3af3e15bf119db2f51c486a9de3646b
Author: Jason Wessel <jason.wessel@windriver.com>
Date:   2013-08-27 21:20:55 -0500

    serv.py: Fix regression from 972bc43e6d5b
    
    commit 972bc43e6d5b1207b944b3baa8f9805adb35dda7 (serv.py: Fix hang
    when spawned dynamically with bitbake) introduced a regression,
    because the wrong patch was submitted.  The syntax was incorrect in
    the original patch.  The logger iterator must be used with a call to
    getLogger().
    
    [YOCTO #5059]
    
    Signed-off-by: Jason Wessel <jason.wessel@windriver.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/prserv/serv.py

commit 04127dec207d6dfc0ada56c5cc67ec9ad30517a8
Author: Christopher Larson <chris_larson@mentor.com>
Date:   2013-08-27 16:27:41 -0700

    data_smart: allow removal of multiple words at once with _remove
    
        FOO = "foo bar baz"
        FOO_remove = "foo baz"
    
    Signed-off-by: Christopher Larson <chris_larson@mentor.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/data_smart.py

commit 1aa49226d5a2bac911feeb90e3d9f19529bc1a3e
Author: Christopher Larson <chris_larson@mentor.com>
Date:   2013-08-27 16:27:40 -0700

    data_smart: use a split/filter/rejoin for _remove
    
    This is more idiomatic, and from the limited performance testing I did, is
    faster as well. See https://gist.github.com/kergoth/6360248 for the naive
    benchmark.
    
    Signed-off-by: Christopher Larson <chris_larson@mentor.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	7	lib/bb/data_smart.py

commit 972bc43e6d5b1207b944b3baa8f9805adb35dda7
Author: Jason Wessel <jason.wessel@windriver.com>
Date:   2013-08-27 15:12:55 -0500

    serv.py: Fix hang when spawned dynamically with bitbake
    
    The PRServer has the possibility to hang indefinitely blocking on a
    semaphore processing a xmlrpc request to send an event back to the
    main bitbake instance.  This was observed during a "bitbake -e" on a
    heavily loaded machine and the main bitbake instance and cooker exited
    before the PRServer emitted its first log.
    
    The stack trace is provided below as to show what happens every time a
    logger.info() is executed in the PRServer.  Not only does it write to
    the stream handler but it also tries to send the event to the main
    event processor.
    
        self._notempty.acquire()
        self.queue.put(event)
        _ui_handlers[h].event.send(event)
        fire_ui_handlers(event, d)
        fire(record, None)
        self.emit(record)
        hdlr.handle(record)
        self.callHandlers(record)
        self.handle(record)
        self._log(INFO, msg, args, **kwargs)
        (self.dbfile, self.host, self.port, str(os.getpid())))
        self.work_forever()
        pid = self.daemonize()
        self.prserv.start()
        singleton.start()
        self.prhost = prserv.serv.auto_start(self.data)
        cooker.pre_serve()
        bb.cooker.server_main(self.cooker, self.main)
        self.run()
        code = process_obj._bootstrap()
        self._popen = Popen(self)
        self.serverImpl.start()
        server.detach()
        server = start_server(servermodule, configParams, configuration)
        ret = main()
    
    It was never intended for the PRServer to send its logs anywhere but
    its own log file.  The event processing is an artifact of how the
    PRServer was forked and it inherits the event log handlers.  The
    simple fix is to clean up and purge all the log handlers after the
    fork() but before doing any of the typical PRServer work or logging.
    
    Signed-off-by: Jason Wessel <jason.wessel@windriver.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

5	0	lib/prserv/serv.py

commit f8166ace0bd9155199166990ce15da24eb2e793b
Author: Cristiana Voicu <cristiana.voicu@intel.com>
Date:   2013-08-27 13:27:37 +0300

    hob: fixes for image combo box
    
    When an image from scratch is selected, and recipes parsing
    is canceled, the image shown by the combo box isn't correct.
    
    [YOCTO #5000]
    Signed-off-by: Cristiana Voicu <cristiana.voicu@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

4	5	lib/bb/ui/crumbs/imageconfigurationpage.py

commit 715aed74f972bb6e9b6a5130ca9ede48d4f79f0a
Author: Cristiana Voicu <cristiana.voicu@intel.com>
Date:   2013-08-27 10:21:38 +0300

    hob: add event handlers filtering in Hob
    
    Create the _evt_list for hob; it is longer than the knotty
    uses because it handles more events.
    
    Signed-off-by: Cristiana Voicu <cristiana.voicu@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

15	0	lib/bb/ui/hob.py

commit 4c95e5f46cf2a656100bbf5a0e5a09d506abf9b9
Author: Cristiana Voicu <cristiana.voicu@intel.com>
Date:   2013-08-27 11:00:33 +0300

    bitbake/event.py: UIhandler filter should work without a mask
    
    The default for the mask will be * (all the handlers)
    
    Signed-off-by: Cristiana Voicu <cristiana.voicu@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/event.py

commit 552b8935dd2f9f11e8d5c08a597a7e966b891480
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2013-08-26 12:41:03 +0000

    command.py: Call updateCache for all states != running
    
    updateCache handles the logic for shutting down the parsing so we need
    to call it for all cases when we're not running.
    
    This fixes hangs if Ctrl+C is pressed during parsing.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	2	lib/bb/command.py
1	0	lib/bb/cooker.py

commit 9c91948e10df278dad4832487fa56888cd58d187
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2013-03-09 12:47:21 +0000

    data_smart: Add _remove operator
    
    There are long standing complaints about the fact its very difficult
    to remove a portion of a variable. The immediate request is for a -=
    and =- operator. The trouble is that += and =+ are "immediate"
    operators and are applied straight away. Most people would expect
    -= and =- to be deferred to have the effect most people desire and
    therefore implementing -= and =- would just make the situation more
    confusing.
    
    This deferred operation is much more similar to the override syntax
    which happens at data store finalisation. The _remove operator is
    therefore in keeping with the _append and _prepend operations.
    
    This code is loosely based on a patch from Peter Seebach although it
    has been rewritten to be simpler, more efficient and avoid some
    potential bugs.
    
    The code currently only works on space delimited variables, which
    are by far the most commom type. If bitbake is ehanced to support
    types natively in future, we can adjust this code to adapt to that.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

18	5	lib/bb/data_smart.py

commit ba5a6c88785d9889d4172ec79937ac2a5555327e
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2013-08-23 16:16:50 +0000

    bitbake: Add ui event handlers filtering
    
    Add functionality to allow UIs to update and change the types of events they
    recieve. To do this we need to add a new command and also need to be able
    to obtain the current event hander ID. In the case of xmlrpc, this is
    straightforward, in the case of the process server we need to save the result
    in a multiprocessing.Value() so we can retrive it. An excplit command
    was added to the server API to facilitate this.
    
    The same function can also be used to mask or unmask specific log messages,
    allowing the UI to optionally differ from the standard set of message
    filtering.
    
    Based upon work by Cristiana Voicu <cristiana.voicu@intel.com>
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

7	0	lib/bb/command.py
14	3	lib/bb/event.py
8	4	lib/bb/server/process.py
5	1	lib/bb/server/xmlrpc.py
12	0	lib/bb/ui/knotty.py

commit 8c01cff94787abbb64fbdf0c16cd63f8f97a7e03
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2013-08-24 12:03:10 +0000

    server/xmlrpc/prserv: Add sane timeout to default xmlrpc server
    
    The standard python socket connect has long timouts which make sense for remote
    connections but not local things like the PR Service. This adds a timeout
    parameter to the common xmlrpc server creation function and sets it to a more
    reasonable 5 seconds.
    
    Making the PR server instantly exit is a good way to test the effect of this
    on bitbake.
    
    We can remove the bodged timeout in the PRServer terminate function which
    has the side effect of affecting global scope.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

18	4	lib/bb/server/xmlrpc.py
0	3	lib/prserv/serv.py

commit c5c8f33ca4b81877a0115887849881001b745bf0
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2013-08-24 11:56:31 +0000

    process: Improve exit handling and hangs
    
    It turns out we have a number of different ways the process server termination can
    hang. If we call cancel_join_thread() on the event queue, it means that it can be left
    containing partial data. This means the reading of the event queue in the terminate()
    function can hang, the timeout and block parameters to Queue.get() don't make any
    difference.
    
    Equally, if we don't call cancel_join_thread(), the join_thread in terminate()
    will hang giving a different deadlock.
    
    The best solution I could find is to loop over the process is_alive() after requesting
    it stops,  trying to join the thread and if that fails, try and flush the event
    queue again.
    
    It wasn't clear what difference a force option should make in this case, we're
    gracefully trying to empty queues and shut down regardless of whether its a SIGTERM
    so I've simply removed the force option.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

17	19	lib/bb/server/process.py

commit b0bbd89a4f0b98fa1ab28b8e0526cd9ddb76fa57
Author: Martin Jansa <martin.jansa@gmail.com>
Date:   2013-08-23 19:06:26 +0200

    parse: Return IOError when including file with absolute path
    
    * resolve_file was behaving different when relative and absolute
      paths were passed to it
    
    * include relative-path/non-existent-file.inc
      works correctly resolve_file throws IOError, BBHandler.py:handle()
      doesn't catch it, ConfHandler.py:include() catches IOError and shows:
      DEBUG: CONF file 'relative-path/non-existent-file.inc' not found
    * include /absolute-path/non-existent-file.inc
      was failing, because resolve_file just returns fn,
      BBHandler.py:handle() calls bb.parse.mark_dependency(d, abs_fn)
      which throws:
      OSError: [Errno 2] No such file or directory: '/absolute-path/non-existent-file.inc'
      and parsing fails.
      Ad isfile() test for absolute fn and throw IOError to make
      resolve_file behavior consistent for both paths.
    
    * I know we had some issues with -b relative-path-to-recipe.bb and
      absolute path, so consider this patch only as RFC and documentation of
      this problem
    
    * Catch OSError too in ConfHandler.py:include() e.g. in case the file exists, but user
      cannot read it or something like that.
    
    Signed-off-by: Martin Jansa <Martin.Jansa@gmail.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	0	lib/bb/parse/__init__.py
1	1	lib/bb/parse/parse_py/ConfHandler.py

commit c696a16c8200c31c52750037eeafe07e065b6517
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2013-08-23 16:41:53 +0000

    prserv/serv: Fix pid file removal
    
    Mark Hatle spotted there were pid files being left around. This patch
    fixes things so the removal function is called correctly, the code
    contained a typo.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/prserv/serv.py

commit 1bf0e88f57ba0bca62532e81d0d62cf88e2abcbb
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2013-08-23 15:55:21 +0100

    event/msg: Add primitive server side UI log record filtering
    
    Currently one of the bigger bottlenecks in bitbake is passing all the
    log messages over IPC to the UI. This is worthwhile if the UI is going
    to use them, pointless otherwise. The memory resident bitbake suffers
    from this performance issue particularly badly.
    
    This patch filters the log events on the server side with the global
    log levels and hence reduces the traffic. This speeds up parsing
    (18.5s down to 17s) and bitbake general command overhead is reduced
    (7.3s for a NOP to 6.2s).
    
    What isn't added here is general event filtering or the ability to
    change the log levels once set. Provision is made for adding this
    in a follow up patch though.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

25	0	lib/bb/event.py
5	2	lib/bb/msg.py

commit a672b39c5d529ba85d72eee8fef4c4273eaa5397
Author: Nicolas Dechesne <nicolas.dechesne@linaro.org>
Date:   2013-08-16 11:20:59 +0200

    build.py: create symlink for run.do_xxx scripts
    
    The 'courtesy' symlink for log.do_xxx are quite useful when debugging, so
    with this commit, we now get similar 'courtesy' symlink for run.do_xxx
    scripts.
    
    We only create symlink for tasks, not individual functions.
    
    The symlink is create right before the actual runfile is created, indeed
    we cannot create the symlink right after running the task since a failure
    or execption can happen, in which case the symlink wouldn't be created,
    and symlink are particularely useful when the task failed!
    
    Another option would be create the symlink after the runfile is created,
    and before the script is executed, but that means we need to duplicate the
    code in case of Shell vs Python task.
    
    Signed-off-by: Nicolas Dechesne <nicolas.dechesne@linaro.org>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

14	0	lib/bb/build.py

commit 457fd80ee6b1b2bcef463e3a83e048da2f8bf805
Author: Cristiana Voicu <cristiana.voicu@intel.com>
Date:   2013-08-20 16:30:22 +0300

    hob: changes to image combo box from image configuration page
    
    In some cases when a new machine is selected, the image combo
    shows the same option. Fixed this issue, because the image
    combo box should be reseted.
    
    Fix the counter for the options in the combobox. This bug
    was introduced by the templates functionality. The combo box had some
    last changes, and I forgot about this counter.
    
    [YOCTO #4858 & #5000]
    Signed-off-by: Cristiana Voicu <cristiana.voicu@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	1	lib/bb/ui/crumbs/imageconfigurationpage.py

commit 78ecabf19bf01e5a662b6e2b865cd93bf47d962b
Author: Andrei Dinu <andrei.adrianx.dinu@intel.com>
Date:   2013-05-15 09:59:26 +0000

    propertydialog.py : Scrollable windows for long tooltips
    
    In some cases, the length of the description and the brought
    in by field was too big. That led to the size of the property
    dialog exceeding Hob's size. For long tooltips we use
    scrollable windows now.
    
    [HOB #4321]
    
    Signed-off-by: Andrei Dinu <andrei.adrianx.dinu@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

38	25	lib/bb/ui/crumbs/hig/propertydialog.py

commit e213e6a4c297a4f1c22eed15bd7b4cbc0e9eab4f
Author: Peter Seebach <peter.seebach@windriver.com>
Date:   2012-10-10 17:11:54 -0500

    build.py: Provide useful diagnostics when exiting.
    
    Running scripts with 'set -e' produces silent failures with no
    diagnostic. Add an exit handler which produces diagnostics, including
    details of what was running if the shell seems to be bash.
    
    Signed-off-by: Peter Seebach <peter.seebach@windriver.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

24	1	lib/bb/build.py

commit 110b485eac6adea242297b7942da8710403c465a
Author: Cristiana Voicu <cristiana.voicu@intel.com>
Date:   2013-08-16 11:48:00 +0300

    hob/retrieveimagedialog: change labels
    
    Some labels needed to be changed in order to respect the convention.
    
    [YOCTO #4999]
    Signed-off-by: Cristiana Voicu <cristiana.voicu@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	1	lib/bb/ui/crumbs/hig/retrieveimagedialog.py

commit ed81b0856b4a3892b53d39871eaaa6273390ea75
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2013-08-09 13:52:05 +0000

    taskdata: report close matches with NoProvider errors
    
    Assuming there is no known reason why an item is not provided, show
    close matches on the assumption that it might have been a typo or
    other mistake.
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	1	lib/bb/event.py
12	1	lib/bb/taskdata.py
8	2	lib/bb/ui/crumbs/runningbuild.py
7	2	lib/bb/ui/knotty.py

commit 15c3db1cffdffd85641c6b12e77f19ce7a553472
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2013-08-09 13:51:22 +0000

    runqueue: report close matches for an invalid task name
    
    Help to pick up mistakes such as "bitbake -c cleanstate xyz" (instead
    of "bitbake -c cleansstate xyz".)
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

7	1	lib/bb/runqueue.py

commit 0eadcc073f270c0b323955cf7719b77195cf4890
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2013-08-12 10:22:40 +0100

    hob: Add missing file from previous commit
    
    This should have been part of 'hob: implement the "retrieve image dialog" +
    changes to image combo box' but got lost in the merge process. This adds
    the missing file.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

49	0	lib/bb/ui/crumbs/hig/retrieveimagedialog.py

commit e3b8585738abea96a9fd1d1204731004a35e0bc9
Author: Ross Burton <ross.burton@intel.com>
Date:   2013-08-05 15:39:47 +0000

    depexp: fix typo in variable name
    
    Signed-off-by: Ross Burton <ross.burton@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/ui/depexp.py

commit 9f50a841f4929e68333ccf2ace32f5d3ca1e7d0d
Author: Ross Burton <ross.burton@intel.com>
Date:   2013-08-05 15:22:11 +0000

    depexp: insert data instead of append/set, for speed
    
    Signed-off-by: Ross Burton <ross.burton@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	9	lib/bb/ui/depexp.py

commit e5709f2b5592eb6448c7d10b9aeb7cf3bef4864e
Author: Ross Burton <ross.burton@intel.com>
Date:   2013-08-05 15:16:32 +0000

    depexp: make parse() a member function
    
    Signed-off-by: Ross Burton <ross.burton@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

16	16	lib/bb/ui/depexp.py

commit 288bbda31164efffd07a370a728a7682db775c08
Author: Cristiana Voicu <cristiana.voicu@intel.com>
Date:   2013-07-25 08:25:29 +0000

    hob/imageconfigurationpage: changes to image combobox
    
    Place the "Create your own image recipe" field to the
    end of the image recipes list.
    
    [YOCTO #4193]
    Signed-off-by: Cristiana Voicu <cristiana.voicu@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/ui/crumbs/imageconfigurationpage.py

commit de3cb77ec7ceb8e0671cf3edfd3713f907d1d0bc
Author: Cristiana Voicu <cristiana.voicu@intel.com>
Date:   2013-07-25 08:24:47 +0000

    hob/imagedetailspage: add tooltip for save image recipe button
    
    [YOCTO #4193]
    Signed-off-by: Cristiana Voicu <cristiana.voicu@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	0	lib/bb/ui/crumbs/imagedetailspage.py

commit bbae370bc57296723cc87e48d64da79882f1e5b6
Author: Cristiana Voicu <cristiana.voicu@intel.com>
Date:   2013-07-16 14:17:10 +0000

    hob: set focus on entry name when the name is not correct
    
    [YOCTO #4193]
    Signed-off-by: Cristiana Voicu <cristiana.voicu@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	0	lib/bb/ui/crumbs/hig/saveimagedialog.py

commit edf3f52c05d86d49b71770cdafde583213e2034d
Author: Cristiana Voicu <cristiana.voicu@intel.com>
Date:   2013-07-16 13:35:22 +0000

    cooker: save packages in IMAGE_INSTALL instead of PACKAGE_INSTALL
    
    Hob retrieves the list of recipes and packages using the IMAGE_INSTALL
    variable, so a custom image should be saved using this variable.
    Changed how the image is saved in a bb file
    
    [YOCTO #4193]
    Signed-off-by: Cristiana Voicu <cristiana.voicu@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

4	4	lib/bb/cooker.py

commit f25322de7e47719b31808397174e5c4f6d8649f2
Author: Cristiana Voicu <cristiana.voicu@intel.com>
Date:   2013-07-16 13:33:21 +0000

    hob: implement the "retrieve image dialog" + changes to image combo box
    
    Tha changes related to the image combo box are related to the
    action done in the retrieveImageDialog. When the user wants to select
    a customize image, but then he cancels the action, the combo box is set to
    --select a base image--.
    If the user selects an image using the new dialog, a new item with its name
    is added to the combo box list and then it is activated.
    
    [YOCTO #4193]
    Signed-off-by: Cristiana Voicu <cristiana.voicu@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	0	lib/bb/ui/crumbs/builder.py
34	3	lib/bb/ui/crumbs/imageconfigurationpage.py

commit 7d15eccc25b6c96851e4d01401f9f9b7821730b1
Author: Cristiana Voicu <cristiana.voicu@intel.com>
Date:   2013-07-25 11:37:51 +0000

    hob: retrieve file name of an image
    
    The entire file name (with the path) is needed to know
    if the image is located in the "build" directory or it comes
    from layers. According to this information, the image is placed
    differently in the combobox.
    
    [YOCTO #4193]
    Signed-off-by: Cristiana Voicu <cristiana.voicu@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

5	2	lib/bb/ui/crumbs/hoblistmodel.py
5	0	lib/bb/ui/crumbs/imageconfigurationpage.py

commit 1eed84c11269c25c13bb444871d84c5dfeabcb73
Author: Cristiana Voicu <cristiana.voicu@intel.com>
Date:   2013-07-25 07:50:33 +0000

    hob: changes to image combo box
    
    Added an item for the custom images.
    Added a separator in the combo box.
    
    [YOCTO #4193]
    Signed-off-by: Cristiana Voicu <cristiana.voicu@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

14	2	lib/bb/ui/crumbs/imageconfigurationpage.py

commit 28296ca78507ba2e414eb136c81afee65a8e25e5
Author: Cristiana Voicu <cristiana.voicu@intel.com>
Date:   2013-07-25 07:45:28 +0000

    hob/bitbake: when an image is saved, it should require an image from layers
    
    Saving an image that requires another image will cause issues when
    the second on is removed. So, we have agreed to "require" only the images
    from layers.
    The functionality is implemented in bitbake, in order to be more abstract,
    and it is used by Hob when an image recipe is saved.
    
    [YOCTO #4193]
    Signed-off-by: Cristiana Voicu <cristiana.voicu@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

7	0	lib/bb/cooker.py

commit 0edad0ab3ccd165125726d2aa3dfeb19dad246c9
Author: Cristiana Voicu <cristiana.voicu@intel.com>
Date:   2013-07-16 13:25:52 +0000

    hob: the saved image should be editable
    
    Also, the image can be saved when the a name is filled.
    
    [YOCTO #4193]
    Signed-off-by: Cristiana Voicu <cristiana.voicu@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	1	lib/bb/ui/crumbs/hig/saveimagedialog.py

commit 6dc0fc243ac6046714523d08df4d8f88c48698cc
Author: Cristiana Voicu <cristiana.voicu@intel.com>
Date:   2013-07-25 07:40:49 +0000

    hob: change the name and description for the saveimagedialog
    
    The image name and description should be saved for a future
    save.
    
    [YOCTO #4193]
    Signed-off-by: Cristiana Voicu <cristiana.voicu@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

7	1	lib/bb/ui/crumbs/hig/saveimagedialog.py
4	2	lib/bb/ui/crumbs/imagedetailspage.py

commit 4aedbee90bd92395c2460a68702e6ede00e256c9
Author: Cristiana Voicu <cristiana.voicu@intel.com>
Date:   2013-07-29 11:44:58 +0000

    hob & bitbake: append a value to a variable from hob throught bitbake
    
    It was necessary to append ${TOPDIR}/recipes/images to BBFILES.
    Implemented the mechanism to append a value to a variable: a command and
    the method in cooker.
    
    [YOCTO #4193]
    Signed-off-by: Cristiana Voicu <cristiana.voicu@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	2	lib/bb/command.py
29	0	lib/bb/cooker.py
4	0	lib/bb/data.py
1	0	lib/bb/ui/crumbs/builder.py
10	1	lib/bb/ui/crumbs/hobeventhandler.py

commit 0aba493103d1fe50026a47db16529febbbbd77a2
Author: Cristiana Voicu <cristiana.voicu@intel.com>
Date:   2013-07-25 07:37:34 +0000

    hob: make changes in order to permit from UI to edit an image after saving it
    
    Added the image name to the list model, in order to show the image name as
    the user named it.
    
    [YOCTO #4193]
    Signed-off-by: Cristiana Voicu <cristiana.voicu@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

4	0	lib/bb/ui/crumbs/hig/saveimagedialog.py
19	9	lib/bb/ui/crumbs/hoblistmodel.py
8	2	lib/bb/ui/crumbs/imagedetailspage.py

commit 5629007f2b984005e3a8ac5d9b71422cbc2f1409
Author: Cristiana Voicu <cristiana.voicu@intel.com>
Date:   2013-07-29 10:02:24 +0000

    hob/bitbake: save the description of a custom image
    
    When an new image is saved, the dialog for this action has
    a field for the description. Changed how an image is saved, by
    appending the DESCRIPTION variable at the end of the .bb file.
    
    [YOCTO #4193]
    Signed-off-by: Cristiana Voicu <cristiana.voicu@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	1	lib/bb/command.py
4	1	lib/bb/cooker.py
2	2	lib/bb/ui/crumbs/builder.py
3	1	lib/bb/ui/crumbs/hig/saveimagedialog.py
3	3	lib/bb/ui/crumbs/hobeventhandler.py

commit 96ffa00945c7eb09a0132fa47159aef3ef20fb3e
Author: Cristiana Voicu <cristiana.voicu@intel.com>
Date:   2013-07-29 09:55:06 +0000

    hob/bitbake: create a template (a .bb file) from hob through bitbake
    
    Modified generateNewImage function from cooker, in order to be used to
    save a template in Hob.
    Created a command to ensure that some dirs are created. The templates
    (recipes) will be saved in {TOPDIR}/recipes/images folder.
    Called these methods from Hob.
    
    [YOCTO #4193]
    Signed-off-by: Cristiana Voicu <cristiana.voicu@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

7	1	lib/bb/command.py
17	7	lib/bb/cooker.py
10	0	lib/bb/ui/crumbs/builder.py
1	1	lib/bb/ui/crumbs/hig/saveimagedialog.py
8	1	lib/bb/ui/crumbs/hobeventhandler.py
2	0	lib/bb/ui/crumbs/imagedetailspage.py

commit 117d4809a62e28ffe7e9dcda5433993d76f7d934
Author: Cristiana Voicu <cristiana.voicu@intel.com>
Date:   2013-07-25 07:25:38 +0000

    hob: create save image dialog used to save a template
    
    Implemented a new dialog used by Hob. This dialog was desinged
    in order to permit to save only in a particular directory.
    Also, it has a field where the user can type a description
    for the image.
    Implemented in the handler a method to retrieve the topdir variable,
    because the changes will be saved in {topdir}/recipes/images directory.
    
    [YOCTO #4193]
    Signed-off-by: Cristiana Voicu <cristiana.voicu@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	0	lib/bb/ui/crumbs/builder.py
136	0	lib/bb/ui/crumbs/hig/saveimagedialog.py
3	0	lib/bb/ui/crumbs/hobeventhandler.py
3	0	lib/bb/ui/crumbs/hoblistmodel.py
18	2	lib/bb/ui/crumbs/imagedetailspage.py

commit fcbadbb73a8a94a3d5e330e1a5fa9550130d2c62
Author: Cristiana Voicu <cristiana.voicu@intel.com>
Date:   2013-07-25 07:21:06 +0000

    hob: labelling changes in Hob
    
    When the design document for templates in Hob was created, we've noticed
    that some labels need to change.
    
    [YOCTO #4193]
    Signed-off-by: Cristiana Voicu <cristiana.voicu@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/ui/crumbs/hobeventhandler.py
2	2	lib/bb/ui/crumbs/hoblistmodel.py
9	13	lib/bb/ui/crumbs/imageconfigurationpage.py
8	3	lib/bb/ui/crumbs/imagedetailspage.py

commit 136eda2dcbc32aba4f59783049352dc1375cc945
Author: Cristiana Voicu <cristiana.voicu@intel.com>
Date:   2013-07-30 12:00:08 +0000

    hob/packageslist: change image size label to estimated image size
    
    On the "Edit packages list" page, the image size may be computed before
    building. We didn't find another way to give a more accurate size, so
    we have agreed to inform the user that this an estimated size.
    
    [YOCTO #4388]
    Signed-off-by: Cristiana Voicu <cristiana.voicu@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/ui/crumbs/packageselectionpage.py

commit 008afbcf6b1b315eb5463ecfb39fc50e6303687e
Author: Cristiana Voicu <cristiana.voicu@intel.com>
Date:   2013-08-02 14:57:55 +0000

    hob/advancedsettings: change toolchain labels to sdk labels
    
    In order to be easier for the user to understand, we have changed the
    toolchain labels to sdk.
    
    [YOCTO #3808]
    Signed-off-by: Cristiana Voicu <cristiana.voicu@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

11	10	lib/bb/ui/crumbs/hig/advancedsettingsdialog.py

commit c2ed639690f135994199eb24d964e37f57259e3a
Author: Valentin Popa <valentin.popa@intel.com>
Date:   2013-07-30 08:27:28 +0000

    bitbake-worker: import needed signal module
    
    bitbake-worker makes use of the signal module
    but it doesn't import it. This patch fixes the issue.
    
    [YOCTO #4750]
    
    Signed-off-by: Valentin Popa <valentin.popa@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	0	bin/bitbake-worker

commit 2cd2d0a48e12ab4358fb967eaf7a56c17993f48d
Author: André Draszik <andre.draszik@linaro.org>
Date:   2013-07-30 12:56:22 +0000

    fetch2: fix unpack of .xz files
    
    If a file ends with .xz, it currently gets overwritten during unpack:
    The decompress command for .xz files is:
      'xz -dc %s > %s' % (file, efile)
    and as efile == file, we end up overwriting file (the source).
    
    Fix this by adding .xz to the list of suffixes that that need to
    be removed from a file name for an extract command, leaving the
    bare file name. Now, for a given file foo.xz,
    file == foo.xz and efile == foo, similar to how .gz .bz2 and .Z
    files are treated.
    
    Signed-off-by: André Draszik <andre.draszik@linaro.org>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/fetch2/__init__.py

commit 6459c1d0eb8f1007246df36149e2496ee531e25f
Author: Petter Mabäcker <petter@technux.se>
Date:   2013-07-24 10:31:04 +0000

    bitbake: runqueue: add warning if invalidating invalid task
    
    Add a warning if 'bitbake -C' is executed with a task that does not
    exist.
    
    Fixes [YOCTO #4877]
    
    Signed-off-by: Petter Mabäcker <petter@technux.se>
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	0	lib/bb/runqueue.py

commit 2e3c87569a8c40f7a2ebda22b01eee3bb7c96d1d
Author: Cristiana Voicu <cristiana.voicu@intel.com>
Date:   2013-07-22 10:54:11 +0000

    hob: sstatemirror is standard also for file://.* regex
    
    Signed-off-by: Cristiana Voicu <cristiana.voicu@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	2	lib/bb/ui/crumbs/hig/simplesettingsdialog.py

commit 73bcd96928cb2df390e1fc6d3a8b7ce3e9d546a4
Author: Cristiana Voicu <cristiana.voicu@intel.com>
Date:   2013-07-22 10:54:10 +0000

    hob: changed the split of SSTATE_MIRRORS variable
    
    Until now the split made searching the string "file://", but
    this is not ok when SSTATE_VARIABLE has the following form:
    SSTATE_MIRRORS ?= "\
         file://.* http://someserver.tld/share/sstate/PATH \n \
         file://.* file:///some/local/dir/sstate/PATH"
    
    In the documentation I've found that \n is the list separator.
    
    [YOCTO #4857]
    Signed-off-by: Cristiana Voicu <cristiana.voicu@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	10	lib/bb/ui/crumbs/hig/simplesettingsdialog.py

commit df372ca057f0c8c2152223b3e26ad9a30958bab6
Author: Robert Yang <liezhi.yang@windriver.com>
Date:   2013-07-19 03:07:51 +0000

    providers.py: print a debug message for dynamic pacakge
    
    We can't know the dynamic pacakge's name exactly, there might be a
    problem, for example, when we use:
    
    IMAGE_INSTALL_append += "ncurses-lib12344"
    
    The ncurses-lib12344 matches ncurses' dynamic packages pattern:
    
    PACKAGES_DYNAMIC = "^${PN}-lib.*"
    
    so there is no errors before the rootfs creation though there is no
    ncurses-lib12344.
    
    We can warn this, but I think that we'd better not since there are many
    dynamic packages, or there would be too many warnings, for example, the
    perl and kernel modules, maybe we can print a debug message for it.
    
    [YOCTO #4798]
    
    Signed-off-by: Robert Yang <liezhi.yang@windriver.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	0	lib/bb/providers.py

commit 6eee0cc37438cc3f91531b7df524330fba27161b
Author: Valentin Popa <valentin.popa@intel.com>
Date:   2013-07-03 11:31:44 +0000

    HOB:Proper handle of SIGINT
    
    Modal dialogs doesn't run on the main loop so they cannot
    catch any signal from the terminal. This patch makes sure
    the dialogs are destroyed when a SIGINT is sent to HOB.
    
    [YOCTO #3329]
    
    Signed-off-by: Valentin Popa <valentin.popa@intel.com>
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

9	0	lib/bb/ui/crumbs/builder.py

commit b6aa2b63d71cbe82850a375381b2dbc750cf1905
Author: Cristiana Voicu <cristiana.voicu@intel.com>
Date:   2013-07-01 08:09:52 +0000

    hob: save button from settings called a nonexisting method
    
    The method was removed when the process for saving configuration
    in Hob was changed. Replace the call with the right function.
    
    [YOCTO #4793]
    Signed-off-by: Cristiana Voicu <cristiana.voicu@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	3	lib/bb/ui/crumbs/builder.py
2	0	lib/bb/ui/crumbs/hobeventhandler.py

commit 0e639f5cbc813c8d4719019cfdd4287e9a429610
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2013-06-28 10:32:56 +0100

    cookerdata: Improve message if BBPATH is unset and bblayers.conf not found
    
    If BBPATH isn't set and bblayers.conf isn't found, improve the message
    shown to the user to help their understanding of what the problem might
    be.
    
    [YOCTO #3271]
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>
    A

6	1	lib/bb/cookerdata.py

commit 684bc6dcb11ecb1fd7a4d25c08909ad9879e8342
Author: Li Wang <li.wang@windriver.com>
Date:   2013-06-25 14:31:14 +0800

    bitbake: python funcname can not include special character @
    
    [YOCTO #4772]
    
    When path:file change to python function, it maybe include '@' character.
    So, add the special character to change to '_' for avoid error.
    
    Signed-off-by: Li Wang <li.wang@windriver.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/parse/ast.py

commit 2beb9589b1bd9773f587b4dc08afdfe50f4ea913
Author: Cristiana Voicu <cristiana.voicu@intel.com>
Date:   2013-06-25 16:03:25 +0300

    bitbake: adding a new comment should be placed on a new line
    
    In this case, the comment is appended to the end of the file.
    Some text editors, do not place  a '\n' to the end of the file
    after saving it.
    
    [YOCTO #4636]
    Signed-off-by: Cristiana Voicu <cristiana.voicu@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/cooker.py

commit 3d8044bc79c482c5ea008ddf12a8128dcd1527ee
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2013-06-21 11:31:32 +0000

    data_smart: Fix bug with overrides and weak default values
    
    (aka pay the cookie monster for weak defaults)
    
    If you have code like:
    
    MYVAR = "a"
    MYVAR_override ??= "b"
    
    then MYVAR will get the value "a" even when override is in OVERRIDES. The
    reason is that the value of ??= is set as a flag not a value and the cookie
    monster isn't paid.
    
    The fix is to ensure appropriate payment is made for a defaultval varflag
    matching the usual setVar case.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

12	5	lib/bb/data_smart.py

commit ed74ea50043f6feb698c891e571feda2b9f8513d
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2013-06-20 21:53:14 +0100

    data_smart: Ensure variable flags are accounted for in config data hash
    
    Currently if the flags set against a variable in the base data store
    change, it doesn't automatically trigger a reparse when it really
    should. For example with the blacklist class setting:
    
    PNBLACKLIST[qemu] = "bar"
    PNBLACKLIST[bash] = "foo"
    
    will not trigger a reparse if only one entry is changed and a
    blacklisted recipe can still be built.
    
    I did consider using BB_SIGNATURE_EXCLUDE_FLAGS in here however it
    doesn't make sense, we want to trigger a reparse when any of the
    flags change too (which is different to the sstate signatures which
    we wouldn't want to change in those cases).
    
    [YOCTO #4627]
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

6	0	lib/bb/data_smart.py

commit ea65ebf43525f173205183aa2fd5d8db303ffd4a
Author: Cristiana Voicu <cristiana.voicu@intel.com>
Date:   2013-06-20 17:21:17 +0300

    hob: save variables in conf/ directory
    
    Until now the variables were saved in bitbake configuration,
    now they are saved in configuration files, in order to be read by
    bitbake-worker. This helps to assure the consistency for the rest
    of the variables.
    
    Signed-off-by: Cristiana Voicu <cristiana.voicu@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

34	30	lib/bb/ui/crumbs/hobeventhandler.py

commit 2b8c0c09e09ab69edc53501b84050c797f0686e4
Author: Cristiana Voicu <cristiana.voicu@intel.com>
Date:   2013-06-20 17:21:16 +0300

    hob: replace the init cooker with reset in order to keep the history
    
    When the cooker initialization is called, the variables history is lost.
    It need a reset, in order to load the configuration files.
    Also, concatenated the value for INHERIT variable.
    
    Signed-off-by: Cristiana Voicu <cristiana.voicu@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	3	lib/bb/ui/crumbs/builder.py

commit 5fe23c1b51da14f58f8c483f43f30b48766a0913
Author: Cristiana Voicu <cristiana.voicu@intel.com>
Date:   2013-06-20 17:21:15 +0300

    bitbake: call the initConfiguration when reparsing
    
    As it is implemented now, when parsing the configuration files is
    needed, it also needs an initialization.
    Also, implemented a function to create an extra configuration files
    which can be used as postfile/prefiles when parsing.
    
    Signed-off-by: Cristiana Voicu <cristiana.voicu@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/command.py
6	2	lib/bb/cooker.py

commit 0aa27598d9fdc8c3d18839b3ef93d0ba9698f761
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2013-06-20 13:07:18 +0000

    cooker: Ensure configuration matches variable tracking state
    
    When we reset, the current tracking value may change unexpectedly. This
    patch ensures that the default value is preserved over a datastore reset.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	0	lib/bb/cooker.py

commit d872fef2c38749c3c6f5d84344db3ec2f9f134ce
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2013-06-20 13:00:59 +0000

    build.py: Cleanup data store references
    
    Clean up a number of old style accesses to the datastore.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

22	22	lib/bb/build.py

commit 188eaba121789112ffeb1188f0984d23dfe8df4f
Author: Cristiana Voicu <cristiana.voicu@intel.com>
Date:   2013-06-19 17:23:28 +0300

    bitbake: remove the function for reparse because it does nothing
    
    The command for reparse does nothing, so I have managed to remove it,
    because it can be misleading. When a reparse is needed, it can be used
    the parse function.
    
    Signed-off-by: Cristiana Voicu <cristiana.voicu@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

0	8	lib/bb/command.py
0	3	lib/bb/cooker.py

commit 087ec3a1b2dde04a8e5ce2943802fccd424ab3f3
Author: Peter Kjellerstedt <peter.kjellerstedt@axis.com>
Date:   2013-06-20 11:35:49 +0200

    Correct a typo
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/fetch2/__init__.py

commit fd438a334d1f90ff07dded61c9648987da42c34f
Author: Peter Kjellerstedt <peter.kjellerstedt@axis.com>
Date:   2013-06-20 11:35:48 +0200

    Allow checksums to be used for files retrieved using SFTP
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	2	lib/bb/fetch2/__init__.py

commit 53c6b65bbcd5a6d3caed8581533f31ac373163a7
Author: Cristiana Voicu <cristiana.voicu@intel.com>
Date:   2013-06-20 14:16:01 +0300

    hob: check if imageconfiguration page has the attribute 'warnings_bar'
    
    [YOCTO #4571]
    Signed-off-by: Cristiana Voicu <cristiana.voicu@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	1	lib/bb/ui/crumbs/imageconfigurationpage.py

commit 92393701adcfa181a1090e3632bc6df7ee7852e6
Author: Cristiana Voicu <cristiana.voicu@intel.com>
Date:   2013-06-20 13:19:42 +0300

    bitbake & hob: modify some commands and call them from hob
    
    This patch adds a new command to create an extra configuration
    file, in order to create it from Hob.
    Also, it calls the enable/disable data tracking when needed.
    Modified the prefiles and postfiles variables because the cooker
    expects some lists.
    
    Signed-off-by: Cristiana Voicu <cristiana.voicu@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

13	3	lib/bb/command.py
2	0	lib/bb/ui/crumbs/hobeventhandler.py

commit c53e902b010d1c3f1550f7e60e744f40120f73c2
Author: Cristiana Voicu <cristiana.voicu@intel.com>
Date:   2013-06-20 13:19:41 +0300

    hob: remove the rest of the old template functionality
    
    Until now, some configuration settings was saved in a hob specific
    directory. From now on, it will be saved in conf directory through bitbake.
    
    Signed-off-by: Cristiana Voicu <cristiana.voicu@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

18	107	lib/bb/ui/crumbs/builder.py
0	187	lib/bb/ui/crumbs/template.py

commit cac3060d0bf8c7deeacda18d06d92787911380d0
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2013-06-19 14:06:08 +0100

    fetch2: Enhance error message for BB_NO_NETWORK
    
    BB_NO_NETWORK can be set by bitbake internally by the use of
    BB_FETCH_PREMIRRORONLY so update the error message to give users a
    hint about this.
    
    [YOCTO #3222]
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/fetch2/__init__.py

commit f8c9b292b02ce2c28741b74901205f5e5807ca87
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2013-06-19 14:03:39 +0100

    runqueue/build: Add recideptask flag
    
    Currently, tasks like fetchall are slightly broken since if a recipe
    has specific [depends] which occur after do_fetch and add items not listed
    in DEPENDS and RDEPENDS, they are not caught by recrdeptask. We've gone
    around in circles on this issue (e.g
    http://git.yoctoproject.org/cgit.cgi/poky/commit/bitbake/lib/bb/runqueue.py?id=5fa6036d49ed7befe6ad50ec95c61a50aec48195
    ) and in many cases the behaviour of recrdepends is correct but tasks like
    fetchall need the other behaviour.
    
    To address this we add a recideptask flag which can be used in conjuction
    with the recrdeptask flag to specify which task to to the inspection upon.
    This means entries like do_rootfs[depends] which have do_fetch tasks are
    caught and run.
    
    I'm not 100% happy with needing another flag but I don't see any rational
    way to get the correct behaviour in all cases without it.
    
    [YOCTO #4597]
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	0	lib/bb/build.py
11	0	lib/bb/runqueue.py

commit 81929f86c57ed0a4ad0cda7aaa820fceabaa61e9
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2013-06-17 12:11:53 +0100

    bitbake: read BBSERVER environement for remote server
    
    This change allows bitbake to connect to a remote server
    by reading the BBSERVER environment variable and effecting
    the config. Basically a shortcut to the command line parameters.
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

9	0	bin/bitbake

commit 7495f835666a9561c2c7d84da7aaa74e4df55b9a
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2013-06-17 12:11:52 +0100

    knotty, bitbake: add option to terminate a remote server
    
    I add an option to terminate a remote server gracefully
    as not to need a kill command.
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	0	bin/bitbake
4	0	lib/bb/ui/knotty.py

commit 4de9ee21f1fa4d04937cc7430fb1fc8b7a8f61e2
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2013-06-17 12:11:51 +0100

    knotty, xmlrpc: add observer-only mode
    
    I add an observer only mode for the knotty UI and
    the XMLRPC server that will allow the UI to register
    a callback with a server in order to receive events.
    
    The observer-UI is able to send read-only commands to the
    server, and also is able to register as an event handler.
    
    Read-only commands are the commands that do not change
    the state of the server and have been marked as such in
    the command module.
    
    The observer can switch to a full client if it calls addClient
    at any time, and the server has no other client running.
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

7	1	bin/bitbake
6	1	lib/bb/command.py
18	8	lib/bb/server/xmlrpc.py
17	12	lib/bb/ui/knotty.py
1	0	lib/bb/ui/uievent.py

commit d48e8bcb24e8fa5d4fd60fd2c9927a95976d8d8b
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2013-06-14 22:00:29 +0100

    utils: Fix multiprocessing pool reference
    
    Interestingly the previous version comparision was broken and we were always using
    the compatibility code, masking this bug. Oops.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/utils.py

commit a51c402304f2080a76720f9b31d6dfdbed393bba
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2013-06-14 16:22:51 +0000

    compat/server/utils: Jettison pre python 2.7.3 workarounds
    
    Now we've moved to require python 2.7.3, we can jettison the compatibility
    workarounds/hacks for older python versions.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	924	lib/bb/compat.py
0	46	lib/bb/server/process.py
11	93	lib/bb/server/xmlrpc.py
2	5	lib/bb/utils.py

commit c54e738e2b5dc0d8e6fd8e93b284ed96e7a83051
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2013-06-14 16:03:45 +0000

    runqueue: Improve handling of failing setscene tasks with hard dependencies
    
    If a setscene task has a hard dependency on a task like pseudo-native, its
    expected that the setscene task will not run unless the dependency is met.
    
    This adds code to ensure that is the case, otherwise a bug would show up
    with a usecase like:
    
    bitbake gnome-common
    bitbake pseudo-native -c cleansstate
    bitbake gnome-common -c clean
    bitbake gnome-common
    
    With the double wrapper script environment, we'd not see issues like
    this as it would be masked. The problem theoretically affects code like
    useradd too as well as anything using a sstate postinstall.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

7	3	lib/bb/runqueue.py

commit e171a363913a86e56266f4c9d107110c7f5221e3
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2013-06-07 17:03:06 +0100

    xmlrpc: removes the event servers controller
    
    XMLRPC API ran a XMLRPC server at port+2 in order
    to provide endpoints to register an event server
    in which to dump the events.
    
    This is no longer used, so we remove it.
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

0	59	lib/bb/server/xmlrpc.py

commit 074003a4e7530a72863b9c685fc5c31b0f08c039
Author: Bogdan Marinescu <bogdan.a.marinescu@intel.com>
Date:   2013-05-31 14:19:14 +0000

    bitbake: Add event mask flag support
    
    Add a flag to event handlers which lists the events a given handler wishes to
    process. By default event handlers recieve all events but this means
    we can stop running code in many cases if we know it doesn't want the event.
    
    This is part of the fix for YOCTO #3812, but implements filtering only
    for class event handlers; the other part (events filter for UIs) will be
    the subject of a different patch.
    
    Signed-off-by: Bogdan Marinescu <bogdan.a.marinescu@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/cookerdata.py
18	5	lib/bb/event.py
1	2	lib/bb/parse/ast.py

commit 6acd444a557bba977ae1772371fdadf5f510e3b6
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2013-06-07 18:14:10 +0100

    bitbake: Update version to 1.19.1
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	bin/bitbake
1	1	lib/bb/__init__.py

commit a01d153a8baac7136c2797c95357e74dd8872026
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2013-06-07 18:14:46 +0100

    bitbake: Bump minimum python version to 2.7.3
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	2	lib/bb/__init__.py

commit c761751e259bb8e940552a28794b45887b5a72d9
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2013-06-07 18:13:04 +0100

    prserv: Adapt autostart to bitbake-worker
    
    With the change to bitbake-worker we need to ensure the workers know
    how to contact the PR service, the magic 0 port and singleton is
    no longer enough.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	0	bin/bitbake-worker
1	1	lib/bb/cooker.py
1	0	lib/bb/runqueue.py
9	2	lib/prserv/serv.py

commit 860ec42b220b7ed3f3bbe52c3546bba66644eac8
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2013-06-07 18:13:04 +0100

    runqueue: Spawn a separate worker for fakeroot tasks
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

58	17	lib/bb/runqueue.py

commit b5d0f12f9df3ab211700473ed145ee6fbd9ca8e9
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2013-06-07 18:12:30 +0100

    runqueue: Abstract the start and teardown worker functions
    
    We're going to need a fakeroot/pseudo version of the worker so
    abstract the code to start the worker process.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

31	17	lib/bb/runqueue.py

commit 8117f8480125b121b2b5ac0afc31b108d9e670ae
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2013-06-07 18:11:49 +0100

    runqueue: Move the bitbake-worker execution to a higher level
    
    The worker was being executed by each execution queue so would get
    constructed twice for each build. This is wasteful so move execution
    to the main runqueue so we only have to start the worker once.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

55	59	lib/bb/runqueue.py

commit b2e26f1db28d74f2dd9df8ab4ed3b472503b9a5c
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2013-06-07 18:11:09 +0100

    runqueue: Split runqueue to use bitbake-worker
    
    This is a pretty fundamental change to the way bitbake operates. It
    splits out the task execution part of runqueue into a completely
    separately exec'd process called bitbake-worker.
    
    This means that the separate process has to build its own datastore and
    that configuration needs to be passed from the cooker over to the
    bitbake worker process.
    
    Known issues:
    
    * Hob is broken with this patch since it writes to the configuration
      and that configuration isn't preserved in bitbake-worker.
    * We create a worker for setscene, then a new worker for the main task
      execution. This is wasteful but shouldn't be hard to fix.
    * We probably send too much data over to bitbake-worker, need to
      see if we can streamline it.
    
    These are issues which will be followed up in subsequent patches.
    
    This patch sets the groundwork for the removal of the double bitbake
    execution for psuedo which will be in a follow on patch.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

358	0	bin/bitbake-worker
5	1	lib/bb/cache.py
18	0	lib/bb/cookerdata.py
3	10	lib/bb/event.py
106	178	lib/bb/runqueue.py
2	1	lib/bb/siggen.py

commit ad8bf10d873abb94d987860a3f6d06b134fb8a99
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2013-06-07 18:10:36 +0100

    fetch2: Fix AUTOINC handling
    
    AUTOINC was meant to appear once at the start of the version string.
    The list of names may not be sorted meaning it could get inserted in
    the middle. This patch simplifies the code and ensures it appears at
    the start.
    
    Include cache version bump to ensure the cache picks up these changes.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/cache.py
3	3	lib/bb/fetch2/__init__.py

commit 063ee01935767ac4c9518d7477c8c85da1c9969a
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2013-06-09 11:15:35 +0100

    bitbake-layers: fix for move of data object to cooker
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

4	4	bin/bitbake-layers

commit c400fe36f7609d53fb413484dc03bbce307f31f9
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2013-06-09 11:15:34 +0100

    tinfoil: fix for move of data attribute to cooker
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/tinfoil.py

commit a30c335b887d58b022838bf0724f4c244cdd845b
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2013-06-04 09:59:37 +0100

    lib/bb/cache.py: invalidate cache when file checksum entry no longer exists
    
    Go through the cached list of file checksums and check if any of the
    files no longer exist; if any are missing then invalidate the cached
    recipe, which will force it to be reparsed and thus force the list of
    files to be collected again. This prevents a warning when moving a file
    to a different location that is still picked up by the recipe, e.g.
    moving a file from a "files" subdirectory to one named with the recipe
    name (${BPN}).
    
    Fixes [YOCTO #4474].
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

9	0	lib/bb/cache.py

commit 35790b507c7d50b95a99529fead6a173d54929f8
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2013-05-30 12:26:58 +0000

    cooker: Split data from configuration
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

9	9	lib/bb/command.py
73	73	lib/bb/cooker.py
6	6	lib/bb/runqueue.py

commit 939cff3004c88d103ca2c60d1526bfbc63cdb7a8
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2013-05-31 11:50:49 +0100

    .gitignore: add vim tag and swp files
    
    Modify gitignore as to include popular editor's temporary
    files, and lookup tags file.
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	0	.gitignore

commit b657208ee15ae065e5fcc2dd6e0051e03d246727
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2013-05-31 12:06:48 +0100

    bitbake: Improve remote server handling
    
    Two fixes in bitbake related to running remote servers -
    * can now specify correctly the bind port
    * the information in print conforms to common server infrastructure
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	2	bin/bitbake

commit e823e1f0675ff3794eb39ef0b4df2d7a220f4013
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2013-05-31 12:06:47 +0100

    xmlrpc: Allow server to remain memory resident
    
    This patch enables the XMLRPC server to remain
    resident in memory after a task is run, and to accept
    a new controlling client. To check the server after
    task completion, do
    
    lsof bitbake.lock
    
    in the build directory. Kill the server with kill.
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

9	11	lib/bb/server/xmlrpc.py

commit 6db4a64cef20f8d0aba804db4c4e1eec7b112b46
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2013-05-31 12:06:46 +0100

    bitbake server: create common server infrastructure
    
    In an attempt to minimize code duplication, create
    clear interfaces, and maximize code reuse through OOP,
    bb.server adds base classes for the BitBakeServer,
    BitBakeServerConnection and actual server implementations
    instructed in particular server types.
    
    These classes document the minimum interfaces that the
    derived classes must implement, and provide boilerplate code.
    
    Changes to None, Process and XMLRPC servers as to use
    the common server infrastructure.
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

96	0	lib/bb/server/__init__.py
20	33	lib/bb/server/process.py
25	39	lib/bb/server/xmlrpc.py

commit 265e27857d1d8914486b924d3390bfbe88f4e39b
Author: Andrei Dinu <andrei.adrianx.dinu@intel.com>
Date:   2013-05-29 11:42:22 +0300

    Added distroy signal to information dialogs
    
    Added distroy signal to information dialogs
    so that when pressing the close button,
    the dialog would close.
    
    [HOB #4568]
    
    Signed-off-by: Andrei Dinu <andrei.adrianx.dinu@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	0	lib/bb/ui/crumbs/hig/propertydialog.py

commit 1965e5cbdfede18d7b7cb0218e0a5147c3f1c884
Author: Mark Hatle <mark.hatle@windriver.com>
Date:   2013-05-28 23:01:18 -0500

    lib/bb/cache.py: Change debugging note to a debug message
    
    Some apparently debugging was left in in a previous commit.  This caused
    bitbake to return a list of bbappends when things changed from the cache.
    
    Make this a proper debug message.
    
    Signed-off-by: Mark Hatle <mark.hatle@windriver.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/cache.py

commit e2cc22fb8b2e97b068b6037540c746ecb1856de6
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2013-05-30 17:05:14 +0000

    prserv: Unbreak after bb.server changes
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/prserv/serv.py

commit d513153cac283aa4ec37135a9190f7a091b6c44b
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2013-05-30 12:37:12 +0000

    cookerdata: Fix tinfoil by adding missinge extra_caches default
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	0	lib/bb/cookerdata.py

commit 25b2af76104d5aaf6435de8c158e0407512f97ce
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2013-05-28 16:52:02 +0000

    bitbake: xmlrpc remote server
    
    Added code in XMLRPC server that creates a stub local server
    for a client-only connection and is able to connect to
    a remote server, and receive events from the remote server.
    
    Added the option to start a client with a remote server in
    bitbake.
    
    Original code by Bogdan Marinescu <bogdan.a.marinescu@intel.com>
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

15	2	bin/bitbake
200	6	lib/bb/server/xmlrpc.py

commit a00c2186bffe848a7cedf31969b904f8f7322ae6
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2013-05-28 13:55:09 +0000

    bitbake: xmlrpc transport has identification token
    
    In order to be able to identify different clients over a
    stateless XMLRPC connection, we add a custom header named
    Bitbake-token, which identifies each client.
    
    We refactor the rest of the code to use the new transport.
    
    Based on a patch by Bogdan Marinescu <bogdan.a.marinescu@intel.com>
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

100	66	lib/bb/server/xmlrpc.py

commit eac00258d213137ef73aed255c92b7981e2f1c75
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2013-05-28 13:32:48 +0000

    bitbake: move start server code in a separate function
    
    This is a code sanitization targeted at making further
    server-related changes easier (launch a server
    separately or creating a mockup-server) to do.
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

41	35	bin/bitbake

commit f0b54280a6bce522508e4741e5f507bc284113a8
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2013-05-28 12:49:55 +0000

    bitbake: move extra cache collection out of cooker
    
    The collection of the extra caching data should not
    be performed by the cooker, but supplied to it.
    This patch will also streamline the code for launching servers
    without a UI attached.
    
    Based on a patch by Bogdan Marinescu <bogdan.a.marinescu@intel.com>
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

18	0	bin/bitbake
2	22	lib/bb/cooker.py
0	1	lib/bb/cookerdata.py

commit f49341a9599d971829ef65b2b02732543740a3c9
Author: Alexandru DAMIAN <alexandru.damian@intel.com>
Date:   2013-05-28 12:31:45 +0000

    bitbake: retrieve the entire ui module in launcher
    
    Slight change in bitbake as to retrieve the entire UI module
    for further processing instead of just the main function.
    
    Based on a patch by Bogdan Marinescu <bogdan.a.marinescu@intel.com>
    
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	3	bin/bitbake

commit 5f960017bb1d4274a5bd5b598971f38c12fc0f11
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2013-05-30 09:50:41 +0100

    fetch2: Fix missing function call
    
    Fix the issue:
    
    File: '/srv/home/pokybuild/yocto-autobuilder-new/yocto-slave/build-appliance/build/bitbake/lib/bb/fetch2/__init__.py', lineno: 813, function: try_mirror_url
         0809:    except bb.fetch2.BBFetchException as e:
         0810:        if isinstance(e, ChecksumError):
         0811:            logger.warn("Mirror checksum failure for url %s (original url: %s)\nCleaning and trying again." % (newuri, origud.url))
         0812:            logger.warn(str(e))
     *** 0813:            self.rename_bad_checksum(ud, e.checksum)
         0814:        elif isinstance(e, NoChecksumError):
         0815:            raise
         0816:        else:
         0817:            logger.debug(1, "Mirror fetch failure for url %s (original url: %s)" % (newuri, origud.url))
    Exception: NameError: global name 'self' is not defined
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

15	14	lib/bb/fetch2/__init__.py

commit 9bef2f2dd0bcaa59528ebcb3c1ce053b7dff1ec6
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2013-05-28 14:32:53 +0100

    server/bitbake: Remove launchUI method
    
    With the removal of the none server type, we can remove the launchUI
    method and simplify the code slightly.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	bin/bitbake
0	4	lib/bb/server/process.py
0	5	lib/bb/server/xmlrpc.py

commit 9af03a89605e3db9bce3cea1e0f2d0b6cfaa6fe1
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2013-05-28 14:28:30 +0100

    server: Remove none server
    
    The process server backend has been serving well as the default for a long
    time now and the UI model is much better thought out that it used to be. With
    the move to make bitbake a memory resident process, the none server is now
    looking rather pointless and complicates the code needlessly. Lets therefore
    now remove it.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	3	bin/bitbake
0	203	lib/bb/server/none.py

commit 64ca1aa1fd5f0473196b6cd805637fa644a92173
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2013-05-24 12:54:59 +0000

    cooker/cookerdata: Fix up event handling for hob
    
    The init function call was clobbering data hob relies on injecting, fix
    this so the data injected by hob isn't overwritten.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	1	lib/bb/cooker.py

commit 7088c0e8553dd3c408b5bc06f8c34d5b72e9ea9a
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2013-05-24 11:28:38 +0100

    build: Avoid empty promises
    
    The "see xxx for further information" is misleading since it is just
    the same information. Clarify just to mention the that this is the location
    of the logfile without any empty promise.
    
    [YOCTO #4343]
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/build.py

commit 54817d0de667941ee68fe3490684159e2d90e9c5
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2013-05-24 11:12:50 +0100

    bitbake-layers: fix show-appends and flatten for recent cooker changes
    
    Fixes the show-appends and flatten subcommands for recent refactoring in
    cooker.
    
    [YOCTO #4536]
    [YOCTO #4535]
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

8	8	bin/bitbake-layers

commit f50df5b891bf318f12fc61c74adfcc626cc6f836
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2013-05-24 09:27:25 +0000

    cooker/cookerdata: Improve configuration object handling
    
    Originally it seemed like a good idea to keep the parameters around. Having
    seen this in real life use, its incorrect, we should pull all the data we need
    into the cooker's configuguration and then use this to build the datastore.
    
    Being able to just build the datastore from the parameters seemed like a good
    idea but having a dummy cooker configuration object is now looking like
    the better option.
    
    This also fixes failures in hob since the parseFiles command can call
    into cooker directly now and reset the configuration prefiles and postfiles
    at will, rather than the indirect calls before which were breaking the datastore
    (e.g. BBPATH wasn't set).
    
    The cleanup this allows in tinfoil illustrates how this change makes more sense.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	1	lib/bb/command.py
1	1	lib/bb/cooker.py
12	9	lib/bb/cookerdata.py
0	5	lib/bb/tinfoil.py

commit e493fe8cb4953935f01361ffc0240e5818ebb283
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2013-05-23 11:51:04 +0100

    fetch2: Fix missing assignment
    
    The assignment to True was missing from the code, well spotted Saul!
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/fetch2/__init__.py

commit 54e35a6cceead9521f8b1dacd48e55064e85c8bd
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2013-05-23 10:50:30 +0100

    cooker/cookerdata/event: Improve class handlers management
    
    Similarly to the execution context changes, establish better lifetime
    management API of the class event handlers.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	2	lib/bb/cooker.py
1	0	lib/bb/cookerdata.py
10	1	lib/bb/event.py

commit 6c3281a140125337fc75783973485e16785d05a1
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2013-05-23 10:49:57 +0100

    cooker/cookerdata/utils: Improve context management
    
    The current execution context management for bitbake is ugly and the
    use of a global variable is nasty. Fixing that is hard, however we
    can improve things to start to establish an API for accessing
    and changing that context.
    
    This patch also adds in an explicit reset of the context when we reparse
    the configuration data which starts to improve the lifecycle of the data
    in setups like hob.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	2	lib/bb/cooker.py
1	0	lib/bb/cookerdata.py
18	8	lib/bb/utils.py

commit 3dc83bbb1bf387bb7ecea2e17f0f72cfccecba92
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2013-05-23 10:49:06 +0100

    event: Drop Handled/NotHandled status return values
    
    These have long since been deprecated, lets remove them.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

0	11	lib/bb/event.py

commit 7fb95f3d133e440d463d2faa7151c731f8e1ae96
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2013-05-23 10:48:26 +0100

    cooker.py: Remove global scope class event handlers
    
    Its confusing when an event handler in for example a bbclass receives
    events for a recipe which doesn't use the class. This is due to the
    class event handlers having confusing scope. Worse, the issue is not
    deterministic and the events a handler will see depends on the parse
    order.
    
    To avoid these issues, remove the class event handler global scope
    and only have class handlers recieve events for recipes using the
    class.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	0	lib/bb/cooker.py

commit 4d50690489ee8dc329a9b0c7bc4ceb29b71e95e9
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2013-05-23 10:47:10 +0100

    methodpool: Retire it, remove global method scope
    
    Having a global method scope confuses users and with the introduction
    of parallel parsing, its not even possible to correctly detect conflicting
    functions. Rather than try and fix that, its simpler to retire the global
    method scope and restrict functions to those locations they're defined
    within. This is more what users actually expect too.
    
    If we remove the global function scope, the need for methodpool is reduced
    to the point we may as well retire it. There is some small loss of caching
    of parsed functions but timing measurements so the impact to be neglibile
    in the overall parsing time.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	0	lib/bb/cooker.py
0	42	lib/bb/methodpool.py
3	5	lib/bb/parse/ast.py
0	4	lib/bb/parse/parse_py/BBHandler.py

commit acd6d7ffa8813b3b11cad9145e8e614a695ae04a
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2013-05-23 10:47:45 +0100

    methodpool: Conflicting methodnames should be a fatal error
    
    When this error occurs, the build should stop, not continue uninterrupted.
    
    [YOCTO #4460]
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/methodpool.py

commit d4968eac539f777367ab1243a1049117cb261176
Author: Cristiana Voicu <cristiana.voicu@intel.com>
Date:   2013-05-22 12:52:35 +0300

    hob: Table sorting criteria should not change after deselecting recipes/packages
    
    After a recipe/package is deselected, the table is sorted as before the
    fadeout animation.
    
    [YOCTO #4453]
    Signed-off-by: Cristiana Voicu <cristiana.voicu@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

14	6	lib/bb/ui/crumbs/hoblistmodel.py
7	1	lib/bb/ui/crumbs/packageselectionpage.py
6	0	lib/bb/ui/crumbs/recipeselectionpage.py

commit 8bd0e0681a6a39c00accbfc0041ab248993f3877
Author: Cristiana Voicu <cristiana.voicu@intel.com>
Date:   2013-05-22 12:52:34 +0300

    hob: apply a fade out animation when deselecting from tables
    
    -applied a fade out mechanism for deselctiong on all the tabs of
    recipes and packages list page
    -set cursor on the package/recipe when it is included(important
    when the its place is changing; like when the tree si order by
    included tab)
    
    [YOCTO #4342]
    Signed-off-by: Cristiana Voicu <cristiana.voicu@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

10	14	lib/bb/ui/crumbs/packageselectionpage.py
20	20	lib/bb/ui/crumbs/recipeselectionpage.py

commit 89332a7874e94c8d91ea24200f9739abb1a50397
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2013-05-22 15:25:13 +0100

    cookerdata: rename _parse to parse_config_file
    
    We use this externally in the OE layer index update script, so it
    shouldn't really be named as an internal function.
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

6	6	lib/bb/cookerdata.py

commit 9d3ca9aa73a448b0594f03ac8e8317403ec0dc8d
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2013-05-22 15:25:12 +0100

    tinfoil: fix for changes to cooker config structure
    
    Fix the code here for recent changes to the initialisation of
    configuration objects for cooker.
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

21	20	lib/bb/tinfoil.py

commit 5d941631ad7198737d9a5c5a920a9062fa0431f8
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2013-05-22 15:25:11 +0100

    bitbake-layers: fix for move of calc_bbfile_priority within cooker
    
    calc_bbfile_priority is now in CookerCollectFiles which can be accessed
    on the collection attribute of a cooker instance.
    
    Fixes [YOCTO #4513].
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	bin/bitbake-layers

commit ff9f62fd5f76892ad41a5329b75472501e17e712
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2013-05-22 14:55:14 +0000

    command: Fix function module reference after code rearrangement
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/command.py

commit bdf437747b664479acde6deaa9096e2a6bcdf483
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2013-02-18 13:18:31 +0000

    runqueue.py: Ensure export flag is set for fakeroot environment variables
    
    This means the variables show up in the shell execution "run" files since
    its useful to know what the fakeroot environment is and how to set it up
    manually.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	0	lib/bb/runqueue.py

commit e57497a24b6157c92519a34accd66035a39ad1f8
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2013-05-20 23:01:48 +0100

    bitbake/cookerdata: Explicitly specify cooker configuration options
    
    As the code stands today its hard to know which configuration variables
    are used by which parts of the system. Some are used by the UIs, some
    by bin/bitbake itself, some by cooker.
    
    This patch changes the configuration to just contain the variables cooker
    uses, and changes bin/bitbake to access the variables it needs directly
    which hopefully lets us start to untangle this mess.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

10	10	bin/bitbake
11	2	lib/bb/cookerdata.py

commit 22a0b3cf73d2689db0c118b37aa7492632f8b0a7
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2013-05-20 23:00:31 +0100

    cooker: Split configuration parsing code into cookerdata
    
    In order to have a memory resident bitbake and to allow task execution, we need
    to be able to rebuild the base configuration without a cooker. This moves the
    code into its own class so it can be built independently.
    
    The interface is less than ideal here but I didn't want to add parsing methods
    a subclassed DataSmart, at least until we've experimented further with this code
    and are certain that makes sense. At the very least, the methods are ugly and need
    cleaning up.  Spliting the code out seems to be the right thing to do though and
    should unblock various activities on BitBake so I believe this code is a step in
    the right direction.
    
    Based on a patch from Alexandru Damian <alexandru.damian@intel.com>
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

9	118	lib/bb/cooker.py
130	0	lib/bb/cookerdata.py

commit 2dbbb1d51dafd4451fef8fe16f095bcd4b8f1177
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2013-05-20 22:54:41 +0100

    cooker: Move commandline parsing back into the UI/cookerdata
    
    Building up a set of actions for the server is tricky since we depend upon the
    commandline but fall back to values from the datastore. We should be able to build
    a datastore without a commandline and vice versa. Ultimately the UI should send
    the commands to the server.
    
    This patch amounts to code rearranging, moving the heavy lifting to the UI, though
    a helper in the configuration option. This will need further cleanup/tweaking but
    this should be the only update needed to the UIs. The code now queries the server
    for any missing data should it need to.
    
    This code allows various knowledge of configuration variables to move to the UI side
    only, partcularly pkgs_to_build but also all the command specifiers. It should also
    be possible to move cmd eventually, I'm just unsure if any callers call the commands
    expecting this to default to something sane right now.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	2	bin/bitbake
8	12	lib/bb/command.py
1	46	lib/bb/cooker.py
56	1	lib/bb/cookerdata.py
9	7	lib/bb/ui/depexp.py
8	6	lib/bb/ui/goggle.py
2	1	lib/bb/ui/hob.py
11	8	lib/bb/ui/knotty.py
8	6	lib/bb/ui/ncurses.py

commit 35bd5997e8d8e74bc36019030cc10c560a8134f9
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2013-05-20 22:54:30 +0100

    bitbake: Create cookerdata splitting config from cooker and bin/bitbake
    
    Currently the UI and server configuration is one big incestuous mess. To
    start to untangle this we creater cookerdata, a new module which contains
    various confiuration modules and the code for building the base datastore.
    
    To start with we add a ConfigParameters() class which contains information
    about both the commandline configuration and the original environment.
    
    The CookerConfiguration class is created to contain the cooker.configuration
    options. This means we can transfer new paramters to the server over something
    like XMLRPC and then build a new configuration from these on the server.
    
    Based on a patch from Alexandru Damian <alexandru.damian@intel.com>
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

69	77	bin/bitbake
1	1	lib/bb/command.py
5	6	lib/bb/cooker.py
73	0	lib/bb/cookerdata.py

commit 7d548568a55adfe84a976f2a549995e42da1afef
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2013-05-20 23:00:10 +0100

    bin/bitbake: Improve exception handling
    
    Due to the internal event processing, this excepting handler usually raises an
    Empty error, masking the underlying failure. Ensure the original exception is
    raised.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	2	bin/bitbake

commit 43a8319cda7fae37862dae323eeb24cb39ca21b7
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2013-05-19 13:21:55 +0300

    fetch2: Shorten long srcrevs
    
    The long srcrevs are mainly used or the workdir construction as well as
    the package version. The long entries are hashes generated by the git fetcher
    and other scms using a similar revision mechanism.
    
    We need these to change when the package changes however collisions are
    unlikely to happen within the domains we care about. The long revisions
    have generated negative user feedback due to the use in path and file
    names.
    
    This patch therefore truncates the revisions to 10 characters maximum.
    
    This should be safe in the contexts where these revisions are used as
    the chances of spatially close collisions is very low (distant
    collisions are not a major issue in the way we use these).
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

4	0	lib/bb/fetch2/__init__.py

commit fb068bee47bb1a06f02447daf16c2b2a79c03288
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2013-05-19 13:17:58 +0300

    fetch2/git: Clean up sortable_revision
    
    Now we no longer try and provide increasing values from the fetcher,
    we can simplify the function structure for the sortable_revision
    pieces and move the AUTOINC handling directly into the function
    which needs it, simplifying the code.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

10	17	lib/bb/fetch2/__init__.py
2	2	lib/bb/fetch2/bzr.py
2	2	lib/bb/fetch2/svn.py

commit 658008cc6a8acd5c1f26877c9444c96002db01e7
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2013-05-19 13:16:54 +0300

    data: Ensure dependencies of subfunctions are accounted for
    
    Currently we account of the top level function's vardeps but not
    those of any subfunction. This would imply we'd have to manually
    write the dependencies of all parent functions which would be crazy.
    
    This patch adds the dependencies to fix the issue.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	0	lib/bb/data.py

commit 565b3e31e0226c6e193ee0b031bd5e7bef25591e
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2013-05-17 12:41:04 +0300

    test/fetch: Allow the conditional network tests to work under python 2.6
    
    The skipIf decorator is unavailable under python 2.6 and finding a syntax
    works there is hard. This patch does allow network tests under 2.6.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

86	96	lib/bb/tests/fetch.py

commit f32265bcc6b4fe5566aca16f6b05555ec6a96d01
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2013-05-17 11:46:47 +0300

    test/fetch: Split the network tests from the rest of the fetcher tests
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

24	23	lib/bb/tests/fetch.py

commit aed4adfbe3a591ca4f8e41fb763c9f961bf2e6d5
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2013-05-17 11:40:01 +0300

    fetch2/utils: Clean up imports
    
    Move various random imports to the start of the modules as cleanup
    and avoid an import issue with bb.process on python 2.6.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

4	7	lib/bb/fetch2/__init__.py
4	3	lib/bb/utils.py

commit a3637155e829e06bbfe50fb8753de3de7ee8c22e
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2013-05-17 11:38:57 +0300

    tests/fetch: Allow to work on python 2.6
    
    Currently the fetch tests fail on python 2.6 since check_output
    doesn't exist on this version of python. Use bb.process instead
    to avoid this problem.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	2	lib/bb/tests/fetch.py

commit 782bc0e797802224f06cb6f9098a50d658c86523
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2013-05-14 15:04:14 +0300

    bin/bitbake: Fix queue import for pyhton 2 and 3
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

4	1	bin/bitbake

commit 3497478f803986af32099ddd124c47df8e89f6da
Author: Bogdan Marinescu <bogdan.a.marinescu@intel.com>
Date:   2013-01-16 12:36:55 +0000

    hob: fix for XMLRPC mode
    
    Contains a small fix to the builder.py code
    (a missing "self" in a variable assignment).
    With this changes, "hob" can run with the XMLRPC backend:
    
    $ hob -t xmlrpc
    
    Signed-off-by: Bogdan Marinescu <bogdan.a.marinescu@intel.com>
    Signed-off-by: Alexandru DAMIAN <alexandru.damian@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/ui/crumbs/builder.py

commit 0f5eee689992f84d263cb817dc2ce755a9a075f7
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2013-05-13 21:53:26 +0300

    cooker/bitbake-layers/tinfoil: Fix recipecache typo
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

7	7	bin/bitbake-layers
69	69	lib/bb/cooker.py
2	2	lib/bb/tinfoil.py

commit 0a9cbe7a6a17c5df38cd442ee8650097d6bbf502
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2013-05-12 18:00:39 +0100

    bitbake-layers/tinfoil: Catch up with status -> recpiecache rename
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

7	7	bin/bitbake-layers
2	2	lib/bb/tinfoil.py

commit db307fc68773868de2db614a061f51c5c6a90468
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2013-05-10 17:35:47 +0000

    cooker: Rename status variable to recipecache
    
    "status" is a relic of very early versions of bitbake, rename it to match what it now
    means.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

69	69	lib/bb/cooker.py

commit a25722175bf61f22961f45dbd356cb6d79864b35
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2013-05-10 15:26:03 +0000

    cooker: Rename confusing buildDepgraph task to handlePrefProviders
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	4	lib/bb/cooker.py

commit 0d7517db234ef5f6b3eb99822ecb5e86cf48fe2e
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2013-05-10 15:24:01 +0000

    cooker: Drop pointless variables
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	7	lib/bb/cooker.py

commit 8b7c65bba466bb6773c56849074978ce2c956129
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2013-05-10 15:09:36 +0000

    cooker.py: Drop confusing updateCache calls
    
    updateCache() gets called by command.py when needed and needs to be iterated
    over. The calls in cooker.py are therefore just plain wrong/confusing now.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	10	lib/bb/cooker.py

commit e01914a8eaa97a410cb5fe9480f2d96bb6553342
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2013-05-10 14:54:46 +0000

    cooker: Remove pointless repeated import
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	3	lib/bb/cooker.py

commit d7047ceaf29b870ade3257e263e010f65aa8bc6e
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2013-05-10 14:52:47 +0000

    cooker: Fix get_bbfiles()
    
    Its clear looking at the code the path argument has never been used and doesn't
    work. Tweak the function to be a little more readable.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

4	4	lib/bb/cooker.py

commit ca1fcbb6e214c155a05328779d3d326e10c5eac0
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2013-05-10 14:35:39 +0000

    cooker: Separate out collections handling code into its own class
    
    The Cooker class is too large and needs to be split up into different
    functional units. Splitting out the collections code into its own class
    seems like a good place to start to try and disentangle things.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

126	106	lib/bb/cooker.py
2	2	lib/bb/runqueue.py

commit 67a8e13eed6433bd1e4fab82ece5f6774b42fa00
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2013-05-10 16:16:26 +0100

    cooker: Drop unused variables from collect_bbfiles()
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/cooker.py

commit 1acb9c338018c612db519d2db823c66b567863b9
Author: Olof Johansson <olof.johansson@axis.com>
Date:   2013-05-07 11:22:37 +0200

    pysh: Say what kind of token isn't implemented
    
    When the shell lexer finds an unrecognized dollar token, the error
    message should contain what kind of token it is having problems with.
    
    Signed-off-by: Olof Johansson <olof.johansson@axis.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/pysh/pyshlex.py

commit 4d6d02e61b32d1d710c708774f08cc5e7764415d
Author: Cristiana Voicu <cristiana.voicu@intel.com>
Date:   2013-05-07 11:07:56 +0300

    hob: assure consistency for image size label
    
    After the image was build, update the image size in the packagelistpage.
    
    [YOCTO #4388]
    Signed-off-by: Cristiana Voicu <cristiana.voicu@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	0	lib/bb/ui/crumbs/builder.py
2	0	lib/bb/ui/crumbs/imagedetailspage.py
12	8	lib/bb/ui/crumbs/packageselectionpage.py

commit 05ebbaa2426716c6254c4a98872020d02d2944bd
Author: Cristiana Voicu <cristiana.voicu@intel.com>
Date:   2013-05-07 11:07:55 +0300

    hob: clicking on "cancel" should reset table sorting to default
    
    Changed the "cancel" callback function for both recipes and packages
    list page.
    
    [YOCTO #4333]
    Signed-off-by: Cristiana Voicu <cristiana.voicu@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

9	0	lib/bb/ui/crumbs/packageselectionpage.py
10	0	lib/bb/ui/crumbs/recipeselectionpage.py

commit 226a5f2d0947460cb6df9e97f0146b65f96a7f8c
Author: Cristiana Voicu <cristiana.voicu@intel.com>
Date:   2013-05-07 11:07:54 +0300

    hob: "Brought in by" sorting should take into account the (+#) information
    
    [YOCTO #4332]
    Signed-off-by: Cristiana Voicu <cristiana.voicu@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

44	2	lib/bb/ui/crumbs/hoblistmodel.py

commit 8d2b2a1c97570d3c6b40727f1afa1db8c00882f9
Author: Cristiana Voicu <cristiana.voicu@intel.com>
Date:   2013-05-07 11:07:53 +0300

    hob: sort alphabetically results in groups of recipes/packages
    
    When you search a string, there are 2 groups: recipes/packages starting
    with that string, and the rest. These 2 groups are now sorted.
    
    [YOCTO #4111]
    Signed-off-by: Cristiana Voicu <cristiana.voicu@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

12	26	lib/bb/ui/crumbs/hoblistmodel.py

commit d3eac3f104689137c071c91a343ca4558b9d9f17
Author: Andrei Dinu <andrei.adrianx.dinu@intel.com>
Date:   2013-05-07 11:06:34 +0300

    Updated information in tooltips
    
    Updated information for "Additional free space" and
    "Image basic size" to match the description in the
    manual.
    
    [HOB #4354]
    [HOB #4355]
    
    Signed-off-by: Andrei Dinu <andrei.adrianx.dinu@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	2	lib/bb/ui/crumbs/hig/advancedsettingsdialog.py

commit d0b180d868390a464b6799ad90db6bbe0350e158
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2013-05-09 21:19:04 +0000

    lib: print is a function in moderm python, covert remaining users
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/server/xmlrpc.py
3	3	lib/bb/ui/knotty.py

commit a4a37b6a83faa62f61433122c4583e93e64f7372
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2013-05-09 21:18:20 +0000

    lib: Use modern expcetion syntax
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/compat.py
1	1	lib/bb/process.py
1	1	lib/bb/siggen.py

commit 4a40046036493f0cdf0f66487ad5ce083461a5c2
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2013-05-09 21:17:18 +0000

    prserv: Drop StandardError usage
    
    StandardError doesn't exist in python 3, use Exception instead.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/prserv/__init__.py

commit d98be5ea69b99fb7934fc3093422f139bc37a1cc
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2013-05-09 21:16:09 +0000

    siggen: Add missing error message parameter
    
    There is clearly a missing parameter from this error message, add it.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/siggen.py

commit da8550fc884596222daa3f8794dce1abd01e5612
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2013-05-09 21:14:50 +0000

    providers: Remove pointless lambda sort function
    
    This lambda function is equivalent to the default sort used by sorted,
    so we can simply remove this. The syntax isn't compatible with python 3.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	2	lib/bb/providers.py

commit 4a43e58dd97ec6ea304eaa727c030973a5bc91b7
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2013-05-09 21:14:06 +0000

    cooker: Remove deprecated operator
    
    The <> operator is deprecated, replace with !=.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/cooker.py

commit 9f08b901375ba640f47596f1bcf43f98a931550f
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2013-05-09 21:06:45 +0000

    lib: Clean up various file access syntax
    
    Python 3 is stricter about how files are accessed. Specficially:
    
     * Use open(), not file()
     * Use binary mode for binary files (when checksumming)
     * Use with statements to ensure files get closed
     * Add missing file close statements
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

7	8	lib/bb/build.py
15	10	lib/bb/cache.py
1	0	lib/bb/parse/parse_py/BBHandler.py
2	0	lib/bb/parse/parse_py/ConfHandler.py
4	0	lib/bb/process.py
10	4	lib/bb/utils.py

commit 3627b02f77c78beedadadd77c619b9e5edaae076
Author: Martin Jansa <martin.jansa@gmail.com>
Date:   2013-05-07 18:39:20 +0200

    git: remove symling before updating mirror tarball
    
    * with read-only PREMIRROR (e.g. mounted over NFS or CIFS
      and referenced as file:///mnt/premirror) we cannot use
      BB_GENERATE_MIRROR_TARBALLS because all git2_abc.git.tar.gz
      files later became just symlinks to read-only location in PREMIRROR
      (it works fine on first build and for new components, because
      at that time there isn't tarball on PREMIRROR yet).
    
      ERROR: Fetcher failure: Fetch command failed with exit code 141, output:
      tar (child): /build/downloads/git2_abc.git.tar.gz: Cannot open: Read-only file system
      tar (child): Error is not recoverable: exiting now
    
    Signed-off-by: Martin Jansa <Martin.Jansa@gmail.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

4	0	lib/bb/fetch2/git.py

commit e7460d01f281f913a94192e1f4bd20688164bdd4
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2013-05-09 11:22:26 +0100

    bin/bitbake: add a check for /dev/shm existing
    
    Python multiprocessing needs /dev/shm, and if it doesn't exist (e.g. in
    a chroot environment) or is not writable, you'll get
    "OSError: [Errno 38] Function not implemented" or
    "OSError: [Errno 13] Permission denied" with a traceback, which doesn't
    really help to explain what is wrong.
    
    Implements [YOCTO #4407].
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

4	0	bin/bitbake

commit 9bc92d0210e13e4cc98727f6c9ec2f47c2221e77
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2013-05-08 18:16:00 +0100

    utils: Improve better_compile error message
    
    Similarly to the better_exec improvements, improve the compile failure
    messages to be more user readable.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

9	7	lib/bb/utils.py

commit c5de66b870406d9bd1161a9b7e2b04fe6eb065fe
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2013-05-08 18:14:53 +0100

    utils: Improve better_exec traceback handling
    
    The current bitbake tracebacks are hard to read/confusing and sometimes
    incomplete. This patch attempts to do better by:
    
    * Moving the note about the exact exception to the end to make things
      read in sequence
    * Merged the initial stack trace to become part of the code dump
    * Added handling for "/xxxx" file paths since we can load these files
      and include the data as part of the trace
    * Dropped the ERROR: prefix to every line, allowing the error messages to
      be spacially accosicated in the UIs
    * Moved the "From:" line to the top of each code block and ensured its present
      consistently
    
    With the complexity now in this funciton, I've added try/except wrapping around
    it to ensure we catch exceptions in the exception handler too.
    
    Example before:
    
    """
    ERROR: Error executing a python function in /media/build1/poky/meta/recipes-core/eglibc/eglibc-initial_2.17.bb:
    TypeError: 'filter' object is not subscriptable
    
    ERROR: The stack trace of python calls that resulted in this exception/failure was:
    ERROR:   File "do_populate_lic", line 13, in <module>
    ERROR:
    ERROR:   File "do_populate_lic", line 6, in do_populate_lic
    ERROR:
    ERROR:   File "license.bbclass", line 99, in find_license_files
    ERROR:
    ERROR:   File "/media/build1/poky/meta/lib/oe/license.py", line 38, in visit_string
    ERROR:     if pos > 0 and license_pattern.match(elements[pos-1]):
    ERROR:
    ERROR: The code that was being executed was:
    ERROR:      0009:    destdir = os.path.join(d.getVar('LICSSTATEDIR', True), d.getVar('PN', True))
    ERROR:      0010:    copy_license_files(lic_files_paths, destdir)
    ERROR:      0011:
    ERROR:      0012:
    ERROR:  *** 0013:do_populate_lic(d)
    ERROR:      0014:
    ERROR: [From file: 'do_populate_lic', lineno: 13, function: <module>]
    ERROR:      0002:def do_populate_lic(d):
    ERROR:      0003:    """
    ERROR:      0004:    Populate LICENSE_DIRECTORY with licenses.
    ERROR:      0005:    """
    ERROR:  *** 0006:    lic_files_paths = find_license_files(d)
    ERROR:      0007:
    ERROR:      0008:    # The base directory we wrangle licenses to
    ERROR:      0009:    destdir = os.path.join(d.getVar('LICSSTATEDIR', True), d.getVar('PN', True))
    ERROR:      0010:    copy_license_files(lic_files_paths, destdir)
    ERROR: [From file: 'do_populate_lic', lineno: 6, function: do_populate_lic]
    ERROR:      0095:        lic_files_paths.append((os.path.basename(path), srclicfile))
    ERROR:      0096:
    ERROR:      0097:    v = FindVisitor()
    ERROR:      0098:    try:
    ERROR:  *** 0099:        v.visit_string(license_types)
    ERROR:      0100:    except oe.license.InvalidLicense as exc:
    ERROR:      0101:        bb.fatal('%s: %s' % (d.getVar('PF', True), exc))
    ERROR:      0102:    except SyntaxError:
    ERROR:      0103:        bb.warn("%s: Failed to parse it's LICENSE field." % (d.getVar('PF', True)))
    ERROR: [From file: 'license.bbclass', lineno: 99, function: find_license_files]
    ERROR: Function failed: do_populate_lic
    ERROR: Logfile of failure stored in: /media/build1/poky/build/tmp/work/i586-poky-linux/eglibc-initial/2.17-r3/temp/log.do_populate_lic.17442
    """
    
    Example after:
    
    """
    ERROR: Error executing a python function in /media/build1/poky/meta/recipes-core/eglibc/eglibc-initial_2.17.bb:
    
    The stack trace of python calls that resulted in this exception/failure was:
    File: 'do_populate_lic', lineno: 13, function: <module>
         0009:    destdir = os.path.join(d.getVar('LICSSTATEDIR', True), d.getVar('PN', True))
         0010:    copy_license_files(lic_files_paths, destdir)
         0011:
         0012:
     *** 0013:do_populate_lic(d)
         0014:
    File: 'do_populate_lic', lineno: 6, function: do_populate_lic
         0002:def do_populate_lic(d):
         0003:    """
         0004:    Populate LICENSE_DIRECTORY with licenses.
         0005:    """
     *** 0006:    lic_files_paths = find_license_files(d)
         0007:
         0008:    # The base directory we wrangle licenses to
         0009:    destdir = os.path.join(d.getVar('LICSSTATEDIR', True), d.getVar('PN', True))
         0010:    copy_license_files(lic_files_paths, destdir)
    File: 'license.bbclass', lineno: 99, function: find_license_files
         0095:        lic_files_paths.append((os.path.basename(path), srclicfile))
         0096:
         0097:    v = FindVisitor()
         0098:    try:
     *** 0099:        v.visit_string(license_types)
         0100:    except oe.license.InvalidLicense as exc:
         0101:        bb.fatal('%s: %s' % (d.getVar('PF', True), exc))
         0102:    except SyntaxError:
         0103:        bb.warn("%s: Failed to parse it's LICENSE field." % (d.getVar('PF', True)))
    File: '/media/build1/poky/meta/lib/oe/license.py', lineno: 38, function: visit_string
         0034:        new_elements = []
         0035:        elements = filter(lambda x: x.strip(), license_operator.split(licensestr))
         0036:        for pos, element in enumerate(elements):
         0037:            if license_pattern.match(element):
     *** 0038:                if pos > 0 and license_pattern.match(elements[pos-1]):
         0039:                    new_elements.append('&')
         0040:                element = '"' + element + '"'
         0041:            elif not license_operator.match(element):
         0042:                raise InvalidLicense(element)
    Exception: TypeError: 'filter' object is not subscriptable
    
    ERROR: Function failed: do_populate_lic
    ERROR: Logfile of failure stored in: /media/build1/poky/build/tmp/work/i586-poky-linux/eglibc-initial/2.17-r3/temp/log.do_populate_lic.3275
    ERROR: Task 9 (/media/build1/poky/meta/recipes-core/eglibc/eglibc-initial_2.17.bb, do_populate_lic) failed with exit code '1
    """
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

57	39	lib/bb/utils.py

commit fda84c4285e0bc31c249b6dd5464aeb6ad622a9a
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2013-05-07 08:23:47 +0000

    bin/bitbake: Ensure early errors are shown to the user
    
    Currently if errors occur early in the init process, the errors may
    not be shown to the user. This change ensures that if a failure does
    occur, the messages are flushed from the queue and shown to the user.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

16	5	bin/bitbake

commit a9b1e7c2ad13ff47acb629bae082d4f96e174f99
Author: Vanveerdeghem, Simon <Simon.Vanveerdeghem@barco.com>
Date:   2013-04-12 08:35:38 +0200

    fetch2/svn: Do not save authentication
    
    Signed-off-by: Simon Vanveerdeghem <simon.vanveerdeghem@barco.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	0	lib/bb/fetch2/svn.py

commit 02629c42fb09413d9da16cfe43e03338ce7db3ff
Author: Bogdan Marinescu <bogdan.a.marinescu@intel.com>
Date:   2013-04-23 16:43:45 +0300

    bitbake: remove stack trace depth limitation
    
    In case of an error in bitbake, the stack trace is limited to 5
    items. This is an endless source of confusion and it makes bugs
    reports impractical, since a full stack trace can't be included
    in the bug report. This patch simply removes the depth limit.
    
    Signed-off-by: Bogdan Marinescu <bogdan.a.marinescu@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	bin/bitbake

commit 260ced7452405fc43ce3d9dd6798236aa07cc716
Author: Laurentiu Palcu <laurentiu.palcu@intel.com>
Date:   2013-05-03 17:37:17 +0300

    data_smart.py: add some internal bitbake variables to configuration hash
    
    Take __BBTASKS, __BBHANDLERS and __BBANONFUNCS into account when
    computing the configuration hash.
    
    [YOCTO #4447]
    
    Signed-off-by: Laurentiu Palcu <laurentiu.palcu@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

10	0	lib/bb/data_smart.py

commit 949c01228a977c3b92bfc0802f6c71b40d8e05b3
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2013-05-02 15:46:11 +0100

    prserv/cooker: Handle PRService errors cleanly
    
    Current if the PR Service fails to start, bitbake carries on regardless or
    hangs with no error message. This adds an exception and then handles it correctly
    so the UIs correctly handle the error and exit cleanly.
    
    [YOCTO #4010]
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

4	1	lib/bb/cooker.py
6	3	lib/prserv/serv.py

commit 263aa44ed47e0cb03e1a97e7ed4a50bd9f828c78
Author: Martin Donnelly <martin.donnelly@ge.com>
Date:   2013-04-25 17:41:06 +0100

    goggle: fix invalid error check
    
    runCommand was returning 'error' but checking for 'err'
    resulting in an exception.
    
    Signed-off-by: Martin Donnelly <martin.donnelly@ge.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/ui/goggle.py

commit 389a4ab300465f7e461eff52bc80646246c359d5
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2013-04-15 15:27:34 +0100

    data: fix performance regression
    
    BitBake commit 7c568132c54a21161de28907159f902462f1e2bb resulted in a
    fairly serious performance regression during parsing, almost doubling
    the time taken to do a full parse and almost certainly impacting
    performance during building. The expandKeys function is called
    frequently, and if we avoid using keys() and instead just use the normal
    variable lookup mechanism, performance is restored.
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	2	lib/bb/data.py

commit 0cfaa3457ca4ede0fdc5c4ac0404e3bbd3f8ebd9
Author: Martin Jansa <martin.jansa@gmail.com>
Date:   2013-04-12 16:08:10 +0200

    fetch2: rename file with bad checksum instead of removing it completely
    
    * this can be useful when someone wan't to compare old file with
      bad checksum and new one
    
    Signed-off-by: Martin Jansa <Martin.Jansa@gmail.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

18	1	lib/bb/fetch2/__init__.py

commit 4a0d7f21ef1a05ee1d243bba8afe2f9dacb756b9
Author: Cristiana Voicu <cristiana.voicu@intel.com>
Date:   2013-04-11 15:07:59 +0300

    hob: Refine sorting mechanisms in Hob
    
    -refine sorting functions for each column from recipe list page
    and package list page
    -sort correctly size column from packages list page
    -set default sroting order and secondary sorting criteria
    -make included on included recipes/packages no sortable
    
    [YOCTO #2346 & #4194]
    Signed-off-by: Cristiana Voicu <cristiana.voicu@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/ui/crumbs/hig/imageselectiondialog.py
91	16	lib/bb/ui/crumbs/hoblistmodel.py
11	5	lib/bb/ui/crumbs/hobwidget.py
6	5	lib/bb/ui/crumbs/packageselectionpage.py
7	7	lib/bb/ui/crumbs/recipeselectionpage.py

commit 6e52dd45190d5fe6005403c7c5c2666c00125831
Author: Robert Yang <liezhi.yang@windriver.com>
Date:   2013-04-15 16:47:36 +0800

    monitordisk.py: disable inode checking for btrfs
    
    The btrfs doesn't have static inode, so disable the inode check for it,
    the previouse patch has set it:
    
    minInode = None
    
    But this is incorrect, the minInode is just a temporary variable, it
    should be:
    
    self.devDict[k][2] = None
    
    [YOCTO #3609]
    
    Signed-off-by: Robert Yang <liezhi.yang@windriver.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/monitordisk.py

commit c47088a86fd8ad06c1810d04d9537c4cd01e8bef
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2013-04-10 16:10:29 +0100

    Update to version 1.19.0 for master
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	bin/bitbake
1	1	lib/bb/__init__.py

commit 94b54788cadabf6ebfb7711674646dbea6204805
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2013-04-10 16:08:53 +0100

    Update to version 1.18.0
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	bin/bitbake
1	1	lib/bb/__init__.py

commit 7c568132c54a21161de28907159f902462f1e2bb
Author: Mark Hatle <mark.hatle@windriver.com>
Date:   2013-03-19 15:28:51 -0500

    data.py: Add a warning when expandKeys overwrites an existing key
    
    When two variables are defined as:
    
    ${var} = "bar"
    foo = "foobar"
    
    The value of 'foo' when ${var} == foo becomes indeterminate.  We
    want to warn a user when this situation has been encountered so they
    can take corrective actions.
    
    In the above example usually foo == bar, unless multilibs are enabled.
    Then ml-foo = "ml-foobar".
    
    Signed-off-by: Mark Hatle <mark.hatle@windriver.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

5	0	lib/bb/data.py

commit 970e2e6f079fa9a49646f86364eae9a4ee241f90
Author: Ioana Grigoropol <ioanax.grigoropol@intel.com>
Date:   2013-04-09 13:25:48 +0300

    hob:Only display scrolled list of images if needed
    
    - do not set the Images window to always display a scroll bar if it is not needed
    
    [Yocto #4171]
    Signed-off-by: Ioana Grigoropol <ioanax.grigoropol@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/ui/crumbs/hobwidget.py

commit 0b81a2c4a5611b64dbdd40131730a82c149b94a2
Author: Cristian Iorga <cristian.iorga@intel.com>
Date:   2013-04-08 19:06:33 +0300

    bitbake:hob: use a socks proxy mechanism for git
    
    Instead of a custom git proxy mechanism, Hob now
    uses a SOCKS proxy in order to work with external
    repos via the oe-git-proxy helper script.
    
    Fixes [YOCTO #4187]
    
    Signed-off-by: Cristian Iorga <cristian.iorga@intel.com>
    Signed-off-by: Cristian Iorga <ubik3000@gmail.com>
    Signed-off-by: Cristian Iorga <cristian.iorga@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

11	12	lib/bb/ui/crumbs/builder.py
16	16	lib/bb/ui/crumbs/hig/simplesettingsdialog.py
3	6	lib/bb/ui/crumbs/hobeventhandler.py

commit 414fe98fe367ba44ea0fd20d8fe1296bcef58ea6
Author: Andrei Dinu <andrei.adrianx.dinu@intel.com>
Date:   2013-04-03 14:58:47 +0300

    propertydialog adjustments for package.bbclass
    
    After moving the code from packageinfo.bbclass to
    package.bbclass, minor adjustments were made to the
    parsing of the package items.
    
    Signed-off-by: Andrei Dinu <andrei.adrianx.dinu@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/ui/crumbs/hig/propertydialog.py

commit b5b4b6e4fefa6a164a49b291a0993b1ff63947f4
Author: Cristiana Voicu <cristiana.voicu@intel.com>
Date:   2013-04-01 13:36:25 +0300

    hob: giving focus to the search field loses the table sorting
    
    Giving focus to the search text field should not impact the table
    sorting.
    
    [YOCTO #4113]
    Signed-off-by: Cristiana Voicu <cristiana.voicu@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/ui/crumbs/hoblistmodel.py
4	0	lib/bb/ui/crumbs/hobwidget.py
27	18	lib/bb/ui/crumbs/packageselectionpage.py
27	18	lib/bb/ui/crumbs/recipeselectionpage.py

commit 3c1b63cf49bdbffef0728fc83bd5a35bc16fd3dc
Author: Cristiana Voicu <cristiana.voicu@intel.com>
Date:   2013-03-29 15:40:18 +0200

    hob: add tooltip on "clear search" button
    
    [YOCTO #4116]
    Signed-off-by: Cristiana Voicu <cristiana.voicu@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	0	lib/bb/ui/crumbs/hobwidget.py

commit 6cabbb241ab3959b3c8f084423469c0bfc9899bd
Author: Andrei Dinu <andrei.adrianx.dinu@intel.com>
Date:   2013-03-29 15:26:37 +0200

    Removed popup when including a package
    
    Fixed the functionality which made an information
    dialog pop up when including any package.
    
    [HOB #4138]
    
    Signed-off-by: Andrei Dinu <andrei.adrianx.dinu@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/ui/crumbs/packageselectionpage.py
1	1	lib/bb/ui/crumbs/recipeselectionpage.py

commit 9ff5f172096a4f51b6b085307506473405dc4f59
Author: Olof Johansson <olof.johansson@axis.com>
Date:   2013-03-26 09:28:38 +0100

    bb.tests.fetch: Opt-out for unittests that require network
    
    With this change, you can opt-out to skip unit tests that require an
    internet connection. To opt-out, you'll set the environment variable
    BB_SKIP_NETTESTS to 'yes'.
    
    Signed-off-by: Olof Johansson <olof.johansson@axis.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

14	0	lib/bb/tests/fetch.py

commit d880ce966ca825aa66a23755fcb47497fb3f26c3
Author: Cristiana Voicu <cristiana.voicu@intel.com>
Date:   2013-03-27 17:20:07 +0200

    hob: Search strings and results should be persistent
    
    Now, the search results stay until I clear the search field,
    so that I can manipulate the search results.
    
    [YOCTO #4112 & #4117]
    Signed-off-by: Cristiana Voicu <cristiana.voicu@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

7	2	lib/bb/ui/crumbs/hobwidget.py
18	17	lib/bb/ui/crumbs/packageselectionpage.py
18	17	lib/bb/ui/crumbs/recipeselectionpage.py

commit ffb8e32166d0ab690131e753f91592011c3f7ffb
Author: Andrei Dinu <andrei.adrianx.dinu@intel.com>
Date:   2013-03-28 10:23:22 +0200

    packageselectionpage.py : added information to hob
    
    In order to have information for each package in hob,
    a new item is added to the dictionary, represeting the
    files that are brought in by each package.
    
    Signed-off-by: Andrei Dinu <andrei.adrianx.dinu@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	1	lib/bb/ui/crumbs/packageselectionpage.py

commit afa78ae15be3e0babadd5d86092a2852135cfcce
Author: Andrei Dinu <andrei.adrianx.dinu@intel.com>
Date:   2013-03-28 10:23:21 +0200

    hoblistmodel.py : passing the package information to hob
    
    Added a new column to the model and also populating
    it with the information brought in from the
    packageinfo.bbclass.
    
    Signed-off-by: Andrei Dinu <andrei.adrianx.dinu@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

4	2	lib/bb/ui/crumbs/hoblistmodel.py

commit 42b1ce37b5c9a357108afdc01b0e9f008a84e6e3
Author: Andrei Dinu <andrei.adrianx.dinu@intel.com>
Date:   2013-03-28 10:23:20 +0200

    propertydialog.py : added 'Package files' functionality
    
    Extended the packages page information with the
    listing of the files brought in by every package.
    
    Signed-off-by: Andrei Dinu <andrei.adrianx.dinu@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

92	2	lib/bb/ui/crumbs/hig/propertydialog.py

commit f2d5f4ca9ac82599c74838844f7e54e481e023d3
Author: Andrei Dinu <andrei.adrianx.dinu@intel.com>
Date:   2013-03-28 10:23:18 +0200

    cooker.py : added variables related to cache_extra
    
    So that the information added to cache_extra could
    be accesed by hob, new variables were added in
    the cooker.py.
    
    Signed-off-by: Andrei Dinu <andrei.adrianx.dinu@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	0	lib/bb/cooker.py

commit 94e2f899457d6565442a933529dd3db261ab12f0
Author: Andrei Dinu <andrei.adrianx.dinu@intel.com>
Date:   2013-03-28 10:23:17 +0200

    cache_extra.py : added package information
    
    Added a new variable to cache_extra so that
    the files brought in by a package can be
    displayed in hob.
    
    Signed-off-by: Andrei Dinu <andrei.adrianx.dinu@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	0	lib/bb/cache_extra.py

commit 25e0b0bc50114f1fbf955de23cc0c96f5f7a41e3
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2013-03-22 14:18:18 +0000

    bitbake/fetch: Add git submodules fetcher
    
    This adds very basic git submodule support to the fetcher. It can be
    used by replacing a git:// url prefix with a gitsm:// prefix, otherwise
    behaviour is the same as the git fetcher. Whilst this code should be
    functional, its not as efficient as the usual git fetcher due to the
    need to checkout the tree to fetch/update the submodule information. git
    doesn't support submodule operations on the bare clones the standard git
    fetcher uses which is also problematic.
    
    This code does however give a starting point to people wanting to use
    submodules.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	0	lib/bb/fetch2/__init__.py
1	1	lib/bb/fetch2/git.py
78	0	lib/bb/fetch2/gitsm.py

commit ca7cd6c1318e0ef066f9e12e7516a47b2af3a7d1
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2013-03-25 15:54:55 +0000

    doc/bitbake.1: Update with missing parameters
    
    Patch from Nobuhiro Iwamatsu <nobuhiro.iwamatsu.yj@renesas.com> to
    add missing parameters to bitbake man page. Added hob to ui list too.
    
    [YCOTO #4049]
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

18	0	doc/bitbake.1

commit 2ecb102968cdbbdbbfa91e1dcccf45bcd0b59a89
Author: Andrei Dinu <andrei.adrianx.dinu@intel.com>
Date:   2013-03-22 17:20:10 +0200

    Adjust spacing on information windows
    
    [Hob #4070]
    
    - tweaked the spacing on info windows
    
    - fixed text bolding in simple settings dialog
    
    Signed-off-by: Andrei Dinu <andrei.adrianx.dinu@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

7	7	lib/bb/ui/crumbs/hig/propertydialog.py
1	1	lib/bb/ui/crumbs/hig/simplesettingsdialog.py

commit b77166ad7b8571895f73a84f7789d93fbd4f6d04
Author: Cristiana Voicu <cristiana.voicu@intel.com>
Date:   2013-03-20 14:35:06 +0200

    hob: implementation of search functionality in Hob
    
    Implemented the search functionality for recipes and packages using
    filters on the listmodel. I have used the design which can be found in
    bugzilla.
    
    [YOCTO #3529]
    Signed-off-by: Cristiana Voicu <cristiana.voicu@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

89	29	lib/bb/ui/crumbs/hoblistmodel.py
57	18	lib/bb/ui/crumbs/hobwidget.py
41	16	lib/bb/ui/crumbs/packageselectionpage.py
47	20	lib/bb/ui/crumbs/recipeselectionpage.py

commit 43703f3eb5f71a117e6315fa5df91711653636a3
Author: Cristiana Voicu <cristiana.voicu@intel.com>
Date:   2013-03-20 11:21:39 +0200

    hob: Hob custom image build error
    
    For a custom image from scratch, the image version is not set and
    it gives an error.
    
    [YOCTO #4065]
    Signed-off-by: Cristiana Voicu <cristiana.voicu@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	1	lib/bb/ui/crumbs/builder.py

commit 58847fabd389e5b8d02d5a9c6827aabedb30312f
Author: Martin Jansa <martin.jansa@gmail.com>
Date:   2013-03-13 21:01:51 +0100

    runqueue: Use taskData.fn_index[depdata] instead of uninitialized dep
    
    * dep variable was removed in
      commit 3190cb83e2af195a464f669c5aa8aedbf795160e
      Author: Richard Purdie <richard.purdie@linuxfoundation.org>
      Date:   Wed Jun 27 11:04:06 2012 +0100
    
        taskdata: Add gettask_id_fromfnid helper function
    
        This is like gettask_id but doesn't require translation of fnid -> fn
        first which the function then translates back. This gives a sizeable
        performance improvement since a significant number of lookups are avoided.
    
    * now it fails completely instead of showing which task is missing
    
    Signed-off-by: Martin Jansa <Martin.Jansa@gmail.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	2	lib/bb/runqueue.py

commit 0f62a12ef3fa4daf8f3a289c984115302b75c23d
Author: Cristiana Voicu <cristiana.voicu@intel.com>
Date:   2013-03-11 15:06:58 +0200

    hob: some settings in Hob are not remembered
    
    Some settings in Hob were not saved in Bitbake and they were not displayed
    correcty in Hob, because Hob used some other variables with the extension "_HOB".
    I have removed this, in order to have a consistency for the variables.
    ALso, I called a function to load the extra variables saved in .hob/template_default.hob.
    
    [YOCTO #3957]
    Signed-off-by: Cristiana Voicu <cristiana.voicu@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

0	7	lib/bb/command.py
14	13	lib/bb/ui/crumbs/builder.py
11	14	lib/bb/ui/crumbs/hobeventhandler.py

commit d2b07e6516dd308d0045a7fdb72b588af9d676ad
Author: Robert Yang <liezhi.yang@windriver.com>
Date:   2013-03-16 16:07:41 +0800

    utils.py: fix BB_ENV_WHITELIST
    
    The BB_ENV_WHITELIST doesn't work well and flushes BB_ENV_EXTRAWHITE,
    here is an example:
    
    $ export BB_ENV_WHITELIST
    
    $ export BB_NUMBER_THREADS=10 (or other value)
    
    Edit conf/local.conf, change "BB_NUMBER_THREADS =" to "BB_NUMBER_THREADS ?="
    
    $ bitbake -e | grep '^BB_NUMBER_THREADS ='
    we will notice that BB_NUMBER_THREADS' value doesn't change, though
    BB_NUMBER_THREADS in both BB_ENV_WHITELIST and BB_ENV_EXTRAWHITE.
    
    This is because the "approved" inside the function approved_variables
    doesn't include BB_ENV_WHITELIST or BB_ENV_EXTRAWHITE when
    BB_ENV_WHITELIST is set (they are incuded by preserved_envvars()), so
    the BB_ENV_WHITELIST and BB_ENV_EXTRAWHITE will be removed from the env
    in the first call from bin/bitbake, and when it is called again by
    cooker.py, their value will be None, then the vars inside them will be
    removed from the env.
    
    Add BB_ENV_WHITELIST and BB_ENV_EXTRAWHITE to the "approved" would fix
    the problem.
    
    [YOCTO #4031]
    
    Signed-off-by: Robert Yang <liezhi.yang@windriver.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	0	lib/bb/utils.py

commit e22a576672ee4a40b44f7a826a78a77fc07e9177
Author: Robert Yang <liezhi.yang@windriver.com>
Date:   2013-03-15 15:42:48 +0800

    monitordisk.py: monitor disks based on path
    
    The previous monitor is based on the disk, and one disk only can have
    one action, this limits its function, for example we set this in the
    current local.conf:
    
    BB_DISKMON_DIRS = "\
        STOPTASKS,${TMPDIR},1G,100K \
        STOPTASKS,${DL_DIR},1G,100K \
        STOPTASKS,${SSTATE_DIR},1G,100K \
        ABORT,${TMPDIR},100M,1K \
        ABORT,${DL_DIR},100M,1K \
        ABORT,${SSTATE_DIR},100GM,1K"
    
    Before:
      * If TMPDIR, DL_DIR and SSTATE_DIR are on the same disk partition,
        only the last line "ABORT,${SSTATE_DIR},100GM,1K" works
    
      * If TMPDIR, DL_DIR and SSTATE_DIR are on the different disk partitions,
        only the last three lines (ABORT) work.
    
    These are not what we expect, now:
      * We monitor the disk based on the path and action, so all the six lines
        will work no matter whether they are on the same disk partition or
        not.
    
      * The out put format will be:
        WARNING: The free space of /path/to/directory (device) is running low (XXGB left)
    
    [YOCTO #3995]
    
    Signed-off-by: Robert Yang <liezhi.yang@windriver.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

41	32	lib/bb/monitordisk.py

commit 60c3b561d66f9a43e696c402899141287ddb496e
Author: Andrei Dinu <andrei.adrianx.dinu@intel.com>
Date:   2013-03-05 17:36:31 +0200

    crumbs/recipeselectionpage: added events for the "Package Groups" "All recipes
    
    " tabs and passing the information needed to the function created
    in the builder.
    
    Signed-off-by: Andrei Dinu <andrei.adrianx.dinu@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

19	3	lib/bb/ui/crumbs/recipeselectionpage.py

commit 840bbdbc973e72d4305c21bcc26c008a6dc39456
Author: Andrei Dinu <andrei.adrianx.dinu@intel.com>
Date:   2013-03-05 17:36:30 +0200

    crumbs/packageselectionpage: added event for the "All packages" tab
    
    and passing the information needed to the function created in the builder.
    
    Signed-off-by: Andrei Dinu <andrei.adrianx.dinu@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

10	3	lib/bb/ui/crumbs/packageselectionpage.py

commit 0301e7622af83c105ba60d7d1749294de06f6a59
Author: Andrei Dinu <andrei.adrianx.dinu@intel.com>
Date:   2013-03-05 17:36:29 +0200

    crumbs/imageconfigurationpage: added information so that it displays correctly
    
    in the information dialogs.
    
    Signed-off-by: Andrei Dinu <andrei.adrianx.dinu@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	2	lib/bb/ui/crumbs/imageconfigurationpage.py

commit e4d9729fc66f472266e9dc2f579edeef74d8f289
Author: Andrei Dinu <andrei.adrianx.dinu@intel.com>
Date:   2013-03-05 17:36:28 +0200

    hobwidget: added functionality for the information dialogs.
    
    Signed-off-by: Andrei Dinu <andrei.adrianx.dinu@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

14	8	lib/bb/ui/crumbs/hobwidget.py

commit 0942f05a1196513c6d163f28cf297728aed6ee22
Author: Andrei Dinu <andrei.adrianx.dinu@intel.com>
Date:   2013-03-05 17:36:27 +0200

    crumbs/hoblistmodel: added information columns needed for prop dialogs
    
    in order to display all the information gathered in the
    backend, new columns needed to be added in the hoblistmodel.
    
    Signed-off-by: Andrei Dinu <andrei.adrianx.dinu@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

19	4	lib/bb/ui/crumbs/hoblistmodel.py

commit bf86cc183c250acd0e52755ae6050a2f8d85ccf5
Author: Andrei Dinu <andrei.adrianx.dinu@intel.com>
Date:   2013-03-05 17:36:26 +0200

    hig/simplesettingsdialog: added entries for information dialogs
    
    added information so that it would display correctly in the information dialogs.
    
    Signed-off-by: Andrei Dinu <andrei.adrianx.dinu@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

7	7	lib/bb/ui/crumbs/hig/simplesettingsdialog.py

commit 82cb844c92fcc71cefe7d7ddc110523c62185e9e
Author: Andrei Dinu <andrei.adrianx.dinu@intel.com>
Date:   2013-03-05 17:36:25 +0200

    hig/propertydialog: new class added for the property windows.
    
    this covers functionality for : recipe selection page
                                    package selection page
                                    information dialogs
    
    Signed-off-by: Andrei Dinu <andrei.adrianx.dinu@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

347	0	lib/bb/ui/crumbs/hig/propertydialog.py

commit 7580716b905366aea70c9eed38dc703cecf24219
Author: Andrei Dinu <andrei.adrianx.dinu@intel.com>
Date:   2013-03-05 17:36:24 +0200

    hig/advancedsettingsdialog: Added information for the information dialogs
    
    added information so that it would display
     correctly in the information dialogs.
    
    Signed-off-by: Andrei Dinu <andrei.adrianx.dinu@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

6	6	lib/bb/ui/crumbs/hig/advancedsettingsdialog.py

commit bec3c1dc91118705149d00e5ec2bea08c8db75ed
Author: Andrei Dinu <andrei.adrianx.dinu@intel.com>
Date:   2013-03-05 17:36:23 +0200

    crumbs/builder: Replaced the function that displayed tooltips
    
    replaced in the builder.py the function that displayed the tooltips
    with two functions that display property windows for recipes and packages
    pages.
    
    Signed-off-by: Andrei Dinu <andrei.adrianx.dinu@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

31	4	lib/bb/ui/crumbs/builder.py

commit e6c2fa2f6669a4adf890a2ee794b100617223b7b
Author: Andrei Dinu <andrei.adrianx.dinu@intel.com>
Date:   2013-03-05 17:36:22 +0200

    cooker: Use extra cache information
    
    -extended cooker.py so that the extra information in cache_extra.py could
     be used
    
    Signed-off-by: Andrei Dinu <andrei.adrianx.dinu@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

9	0	lib/bb/cooker.py

commit bc09090f44f9b3a1b123f5453586295b9623218b
Author: Andrei Dinu <andrei.adrianx.dinu@intel.com>
Date:   2013-03-05 17:36:21 +0200

    cache_extra: Add extra variables
    
    - in order to have the information needed in the property
      windows, cache_extra.py was extended with variables.
    
    Signed-off-by: Andrei Dinu <andrei.adrianx.dinu@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

9	0	lib/bb/cache_extra.py

commit 324ed96e28ec31cff8cef1824d20d40f9a5d46ad
Author: Robert Yang <liezhi.yang@windriver.com>
Date:   2013-03-06 13:36:23 +0800

    bitbake-layers: fix duplicated help info
    
    There are two "help" lines when run bitbake help under python 2.6.6
    (perhaps all python 2.6):
    
    $ bitbake-layers help
    [snip]
    help
        display general help or help on a specified command
    [snip]
    help
        display general help or help on a specified command
    
    This is because the cmd.py in python 2.6.6 also has a do_help() function
    as our bitbake-layers, and the cmd.Cmd.get_names() doesn't consider the
    overload, this has been fixed in python 2.7, use set() to remove the
    duplicated would fix the problem.
    
    [YOCTO #3428]
    
    Signed-off-by: Robert Yang <liezhi.yang@windriver.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	bin/bitbake-layers

commit 32c2d497976a5c6dfa7f25dd2b84f4cd6d0a5b9f
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2013-03-06 15:32:35 +0000

    Revert "cooker: parse using bb.compat.Pool"
    
    Reverting the pool changes, terminate does not work reliably on
    bb.compat.Pool :(
    
    [YOCTO #3978]
    
    This reverts commit 8af519a49a3374bd9004864ef31ca8aa328e9f34.

134	27	lib/bb/cooker.py

commit f68af40555b6b73345805cfb99ca96e3ce27cb35
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2013-03-06 15:31:49 +0000

    Revert "cooker: now that we use a Pool, raise the exceptions"
    
    Reverting the pool changes, terminate does not work reliably on
    bb.compat.Pool :(
    
    This reverts commit 9ca8e513dc142dd7aefadeb6db2ccdb00f38b39f.

2	2	lib/bb/cooker.py

commit 7d85b1a383feaa072503d71d3baeb3bdcd1012a8
Author: Martin Jansa <martin.jansa@gmail.com>
Date:   2013-03-02 17:50:05 +0100

    siggen: add quotes around variable values to see whitespace
    
    * without this change it's hard to see what's changed:
      bitbake-diffsigs sstate-cache/*/sstate-depmodwrapper-cross-cortexa8-vfp-neon-oe-linux-gnueabi-1.0-r0-cortexa8-vfp-neon-*_populate-sysroot.tgz.siginfo
      basehash changed from 62f28c13172d38af917716d6d4b15ac5 to 9cf38842bcc79e0a4356856a64141548
      Variable TUNE_CCARGS value changed from  -march=armv7-a    -mthumb -mthumb-interwork -mfloat-abi=softfp -mfpu=neon -mtune=cortex-a8  to  -march=armv7-a    -mthumb -mthumb-interwork -mfloat-abi=softfp -mfpu=neon -mtune=cortex-a8
      Hash for dependent task depmodwrapper-cross_1.0.bb.do_install changed from 4494cb6c117309a9b4c541ad86c0aac5 to 1e3bcf2d14e5bd30a38350b41bb98db3
    
    * with this change, we can see extra trailing space in first version:
      basehash changed from 62f28c13172d38af917716d6d4b15ac5 to 9cf38842bcc79e0a4356856a64141548
      Variable TUNE_CCARGS value changed from ' -march=armv7-a    -mthumb -mthumb-interwork -mfloat-abi=softfp -mfpu=neon -mtune=cortex-a8 ' to ' -march=armv7-a    -mthumb -mthumb-interwork -mfloat-abi=softfp -mfpu=neon -mtune=cortex-a8'
      Hash for dependent task depmodwrapper-cross_1.0.bb.do_install changed from 4494cb6c117309a9b4c541ad86c0aac5 to 1e3bcf2d14e5bd30a38350b41bb98db3
    
    Signed-off-by: Martin Jansa <Martin.Jansa@gmail.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

4	4	lib/bb/siggen.py

commit 9ca8e513dc142dd7aefadeb6db2ccdb00f38b39f
Author: Christopher Larson <chris_larson@mentor.com>
Date:   2013-02-25 11:48:00 -0700

    cooker: now that we use a Pool, raise the exceptions
    
    Multiprocessing catches these and handles passing them between processes
    itself, we don't need to do it ourselves anymore.
    
    [YOCTO #3926]
    
    Signed-off-by: Christopher Larson <chris_larson@mentor.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	2	lib/bb/cooker.py

commit b7440fb36b419996046f607e66434ce34722272b
Author: Robert Yang <liezhi.yang@windriver.com>
Date:   2013-02-04 03:19:36 +0000

    perforce.py: fix the perforce fetcher
    
    The bb.process.run() will return one tuple, e.g:
    
    p4file = ('strA\nStrB\nstrC\n'), then there will be an iteration on p4file:
    
    for i in p4file:
            [snip]
    
    The i will be 's t r A ...', this is incorrect. use splitlines() to fix
    the problem.
    
    [YOCTO #3619]
    
    Signed-off-by: Robert Yang <liezhi.yang@windriver.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/fetch2/perforce.py

commit e6db0ee31178d4386802e720d75303ec7dc21519
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2013-02-21 15:23:35 +0000

    build.py: avoid deleting taint files when writing stamps
    
    The stamp cleaning process that occurs before writing out new stamps for
    a task was deleting taint files as well. This resulted in tasks that
    were forcibly re-executed using the -f or -C command line options to
    have their previous output restored from shared state when called upon a
    second time, because the taint value was no longer incorporated into the
    task signature and thus it was reverting to its previous value. This
    also affected the kernel menuconfig command in OE-Core.
    
    Note that the taint file *is* still deleted when doing -c clean, which
    is the desired behaviour.
    
    Fixes [YOCTO #3919].
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

4	1	lib/bb/build.py

commit f91b784be733c8a64da924be7cba3af7d20b1039
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2013-02-19 23:05:11 -0800

    Revert "fetch2: Adapt encode/decode url to use URI class"
    
    This reverts commit 21fe2683aefde10e847e66c11c26d4f4c1e07cfd
    since bitbake-selftest doesn't pass when this is applied and
    we're seeing multiple build failures from this change.

49	17	lib/bb/fetch2/__init__.py

commit 617511c9f86cc4ef52457653c8adff582d94bce3
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2013-02-19 14:31:52 -0800

    utils: Improve remove funciton to handle whitespace
    
    Improve the remove function to better handle cases where path contains
    special shell chars like whitespaces, '$', ';' or'\'.
    
    Thanks to Enrico Scholz for the fix.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	2	lib/bb/utils.py

commit 7e479dc6a574a8f3bd9f24d2ed1c3ceef91f3828
Author: Matthew McClintock <msm@freescale.com>
Date:   2013-02-19 14:20:01 -0600

    bitbake/fetch2: workaround urlparse in older python not support git
    
    Signed-off-by: Matthew McClintock <msm@freescale.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	0	lib/bb/fetch2/__init__.py

commit 58bfd8d88495d4cae808e23b7af40e65ad05450f
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2013-02-19 13:52:38 -0800

    wget: Improve mkdir handling
    
    If there there isn't a subdirectory to the downloadfilename, this was
    failing. This patch avoids that issue.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	2	lib/bb/fetch2/wget.py

commit 8af519a49a3374bd9004864ef31ca8aa328e9f34
Author: Christopher Larson <chris_larson@mentor.com>
Date:   2013-02-12 12:28:47 -0500

    cooker: parse using bb.compat.Pool
    
    Signed-off-by: Christopher Larson <chris_larson@mentor.com>

27	134	lib/bb/cooker.py

commit d240baeb7a4107d2eba3f08c411c0f086674d8e2
Author: Olof Johansson <olof.johansson@axis.com>
Date:   2013-01-29 08:50:11 +0100

    fetch2: Add SFTP fetcher
    
    This fetcher differs from the SSH fetcher in that it adheres more
    strictly to the SECSH URI internet draft --- it uses the sftp://
    instead of the ssh:// scheme, and it uses sftp instead of scp.
    
    Signed-off-by: Olof Johansson <olof.johansson@axis.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	0	lib/bb/fetch2/__init__.py
129	0	lib/bb/fetch2/sftp.py

commit 230e00948ba093958e8e89e9ee380444b3dad307
Author: Olof Johansson <olof.johansson@axis.com>
Date:   2013-01-29 08:50:10 +0100

    fetch2: Add editor modelines for bb.tests.*
    
    Signed-off-by: Olof Johansson <olof.johansson@axis.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	0	lib/bb/tests/codeparser.py
2	0	lib/bb/tests/cow.py
2	0	lib/bb/tests/data.py
2	0	lib/bb/tests/fetch.py
2	0	lib/bb/tests/utils.py

commit 21fe2683aefde10e847e66c11c26d4f4c1e07cfd
Author: Olof Johansson <olof.johansson@axis.com>
Date:   2013-01-29 08:50:09 +0100

    fetch2: Adapt encode/decode url to use URI class
    
    Signed-off-by: Olof Johansson <olof.johansson@axis.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

17	49	lib/bb/fetch2/__init__.py

commit a71e7d4137d2c5268b406f69992d09c00772a040
Author: Olof Johansson <olof.johansson@axis.com>
Date:   2013-01-29 08:50:08 +0100

    fetch2: unittests for bb.fetch2.URI class
    
    Signed-off-by: Olof Johansson <olof.johansson@axis.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

226	0	lib/bb/tests/fetch.py

commit bd824da8a7eafe27310e410807319628378caeca
Author: Olof Johansson <olof.johansson@axis.com>
Date:   2013-01-29 08:50:07 +0100

    fetch2: Add a class representing a generic URI
    
    A class representing a generic URI, with methods for accessing the URI
    components, and stringifies to the URI. This class should be a bit more
    flexible than the existing {encode,decode}_url functions in that it
    supports more components (e.g. port) and that it does not rely on a
    specific order on the return values. This makes it easy to add new
    properties without affecting the API.
    
    Signed-off-by: Olof Johansson <olof.johansson@axis.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

194	0	lib/bb/fetch2/__init__.py

commit 6d88fcee16ced3a8c1ab1daf8e88d36f70f13346
Author: Olof Johansson <olof.johansson@axis.com>
Date:   2013-01-29 08:50:06 +0100

    fetch2: Remove unused code in wget fetcher
    
    Signed-off-by: Olof Johansson <olof.johansson@axis.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

0	5	lib/bb/fetch2/wget.py

commit cf510e3da36e53f98ca86501747364bf4699ecc1
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2013-02-15 16:17:30 +0000

    fetch2: Ensure directory for stampfile exists before trying to create it
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	0	lib/bb/fetch2/__init__.py

commit 96088ebdec08e49ba9e8dbcac437bfcdc21f5983
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2013-02-03 16:51:34 +0000

    utils: Use rm -rf in remove()
    
    Whilst shutils.rmtree() is pythonic, its also slow. Its faster to
    use rm -rf which makes optimial use of the right syscalls.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

7	4	lib/bb/utils.py

commit 4eb3b6bb9f936808ddf085624078f6479c522c48
Author: Cristiana Voicu <cristiana.voicu@intel.com>
Date:   2013-01-31 14:43:08 +0200

    hob: remove save/load template functionality
    
    The Hob templates functionality, in its current incarnation,
    is confusing and has no clear utility.
    
    [YOCTO #3696]
    Signed-off-by: Cristiana Voicu <cristiana.voicu@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

0	33	lib/bb/ui/crumbs/builder.py
0	2	lib/bb/ui/crumbs/hobwidget.py
0	13	lib/bb/ui/crumbs/imageconfigurationpage.py
1	41	lib/bb/ui/crumbs/imagedetailspage.py

commit 0fa874dbe0532bbe88ade405f514a237e6cd2488
Author: Robert Yang <liezhi.yang@windriver.com>
Date:   2013-02-01 16:56:45 +0800

    knotty.py: fix unknown event bb.event.DiskFull
    
    There is an error:
    
    ERROR: No new tasks can be excuted since the disk space monitor action
    is "STOPTASKS"!
    ERROR: Unknown event: <bb.event.DiskFull object at 0x2ab6310>
    
    This is because we don't handle the event bb.event.DiskFull in
    knotty.py, we don't want the knotty to do anything here since we have
    done everything in monitordisk.py, so just ignore this event would fix
    the problem.
    
    [YOCTO #3523]
    
    Signed-off-by: Robert Yang <liezhi.yang@windriver.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	1	lib/bb/ui/knotty.py

commit df217701318d60559be0b10214b883b8ce4f5d2a
Author: Robert Yang <liezhi.yang@windriver.com>
Date:   2013-02-06 17:28:16 +0800

    bitbake-layers: make show-cross-depends avoid long path
    
    The "bitbake-layers show-cross-depends" print the absolute path in the
    past, now it will print the relative path (relative to the layer dir) by
    default, and add the "-f" option to make it print the absolute path.
    
    For example:
    
    $ bitbake-layers show-cross-depends
    [snip]
    meta-intel/meta-jasperforest/conf/machine/jasperforest.conf requires meta/conf/machine/include/ia32-base.inc
    [snip]
    
    $ bitbake-layers show-cross-depends -f
    [snip]
    /path/to/poky/meta-intel/meta-jasperforest/conf/machine/jasperforest.conf requires /path/to/poky/meta/conf/machine/include/ia32-base.inc
    [snip]
    
    [YOCTO #3824]
    
    Signed-off-by: Robert Yang <liezhi.yang@windriver.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

48	8	bin/bitbake-layers

commit 8e43da7798a98988f7da3f7c424e8f9e5eac2010
Author: Cristiana Voicu <cristiana.voicu@intel.com>
Date:   2013-02-04 16:56:00 +0200

    hob: remove parsing warnings when machine is changed
    
    When the machine is changed, the warnings list is emptied and the warnings
    bar is hidden.
    
    [YOCTO #3830]
    Signed-off-by: Cristiana Voicu <cristiana.voicu@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

7	0	lib/bb/ui/crumbs/imageconfigurationpage.py

commit f7ff550f53cf3e5b166940db83f27ec733f3ef72
Author: Cristiana Voicu <cristiana.voicu@intel.com>
Date:   2013-02-05 16:52:02 +0200

    hob: no sanity checks re-run
    
    Hob was hanging when the user tried a rebuild a new image, because
    of sanity checks. It should not re-run sanity checks.
    
    [YOCTO #3829]
    Signed-off-by: Cristiana Voicu <cristiana.voicu@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

0	1	lib/bb/ui/crumbs/builder.py

commit b2ada3ad5f7aefff107f013e0c9decea481c7ef6
Author: Robert Yang <liezhi.yang@windriver.com>
Date:   2013-02-04 18:03:35 +0800

    monitordisk.py: disable the inode checking for some fs
    
    There is an error when use disk monitor on btrfs:
    WARNING: The free inode of rootfs is running low (0.000K left)
    ERROR: Immediately abort since the disk space monitor action is "ABORT"!
    
    This is beucase some fs formats' statvfs.f_files (inodes) is zero, thus
    the statvfs.f_favail (free inodes) is zero, too, this a feature of the
    fs, we disable the inode checking for such a fs.
    
    [YOCTO #3609]
    
    Signed-off-by: Robert Yang <liezhi.yang@windriver.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

8	1	lib/bb/monitordisk.py

commit 59921ce3ed7a4c0b7f8ef1a101ad9127469bf1fd
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2013-02-14 21:38:17 +0000

    fetch2: Improve lock/done stamp file paths for local files
    
    Currently stamps end up at the top level of DL_DIR even if the files
    themselves are in a directory structure. This patch preserves path
    components allowing the top level directory to be less populated
    which is an advantage for large sstate caches.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

9	2	lib/bb/fetch2/__init__.py

commit 966e3e59ceb1c8b33b5881f291c148ea6513eda0
Author: Cristiana Voicu <cristiana.voicu@intel.com>
Date:   2013-02-12 15:27:22 +0200

    bitbake & hob: reparse config files, when sanity check updates bblayers.conf
    
    I've sent a patch to poky, with some changes in sanity.bbclass. When bblayers.conf
    is updated, it updates also a variable to know when to reparse configuration files.
    This patch contains the changes to reparse conf files, after a sanity check which
    changes bblayers.conf.
    
    [YOCTO #3213]
    Signed-off-by: Cristiana Voicu <cristiana.voicu@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

10	4	lib/bb/cooker.py
4	0	lib/bb/ui/crumbs/hobeventhandler.py

commit 7850a1364b6b37c58664d84f9c14806b4479b45c
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2013-02-14 21:36:30 +0000

    fetch2: Ensure expansions happen in URL parameters in uri_replace
    
    For example, this allows us to specify downloadfilename=PATH in sstate
    mirror urls to improve directory structures in DL_DIR when using sstate.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	0	lib/bb/fetch2/__init__.py

commit 54dce9e14ab0657d76f0d0ae22eef7fab8e8950d
Author: Olof Johansson <olof.johansson@axis.com>
Date:   2013-02-14 12:28:32 +0100

    ConfHandler: Use re.X to make long regexp more readable
    
    The __config_regexp__ in ConfHandler is quite long, and using re.X to
    break the expression onto several lines make it a bit easier to read.
    
    Signed-off-by: Olof Johansson <olof.johansson@axis.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

24	1	lib/bb/parse/parse_py/ConfHandler.py

commit a206ae0d7769a41ff3666d0f53ff9cf422dfa518
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2013-02-14 21:35:25 +0000

    tests/codeparser: Hack around circular inclusion problem
    
    There is a circular dependency issue where bb.data can't directly depend on
    bb.parse. The tests were failing due to this issue which is misleading. This
    patch hacks around it for now. I'd rather that than not running tests at all.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	0	lib/bb/tests/codeparser.py

commit d5f78e98d5aba36c95288fbaac267c2d54537b02
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2013-02-14 21:33:04 +0000

    wget: Only use -O option when not spidering
    
    If we pass the -O option whilst spidering, empty files are created which is not
    desired. We also need to ensure any subdirectories are created when using the
    downloadfilename parameter.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	1	lib/bb/fetch2/wget.py

commit 0b9d117631ce909312d53b93289e61defc6be01c
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2013-02-14 21:59:21 +0000

    codeparser: Track bb.utils.contains usage
    
    The bb.utils.contains function usage is getting increasingly used in the metadata
    but isn't handled automatically by the python dependency tracking code. This patch
    changes that and also adds the "OE" names for the functions.
    
    Whilst there are reasons this is a bad idea, its likely outweighed by the
    shear number of these references and the current holes in dependency information
    which we're now relying heavily upon.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	2	lib/bb/codeparser.py

commit 767b4751232f4ee3979deb4d3f733fcf9ee2bd44
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2013-02-14 21:57:36 +0000

    codeparser: Track appendVar and prependVar calls as we do for getVar
    
    We need to track appendVar and prependVar calls just as we do for getVar in order
    to ensure we're not missing variable dependencies.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/codeparser.py

commit dac12560ac8431ee24609f8de25cb1645572d350
Author: Christopher Larson <chris_larson@mentor.com>
Date:   2012-04-03 18:23:49 -0500

    Remove whitelisted vars from non-task deps
    
    Though the value of variables in the BB_BASEHASH_WHITELIST is kept out of the
    checksums, dependency on them is not, at least for variables and non-task
    functions. In the code, the whitelist is removed from the overall task dep
    list, but not the individual variable deps. The result of this is that
    functions like sysroot_stage_all and oe_runmake end up with whitelisted
    variables like TERM listed in their dependencies, which means that doing
    a 'unset TERM' before building will result in all checksums for tasks that
    depend on those changing, and shared state reuse not behaving correctly.
    
    This is only really a potential issue for variables from the environment, as
    it's the existance/removal of the variable that's an issue, not its value, and
    the other whitelisted variables are set in our metadata. This which means in
    practical terms the only cases where this is likely to be an issue are in
    environments where one of the following are unset: TERM, LOGNAME, HOME, USER,
    PWD, SHELL. This may seem like an unlikely circumstance, but is in fact a real
    issue for those of us using autobuilders. Jenkins does not set TERM when
    executing shell, which means shared state archives produced by your jenkins
    server would not be fully reused by an actual user.
    
    Fixed by removing the whitelisted elements from the individual variable deps,
    not just the accumulated result.
    
    Signed-off-by: Christopher Larson <chris_larson@mentor.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

5	4	lib/bb/siggen.py

commit 2cd8d7fd12a646e6516e2c985e6a54121d19eb59
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2013-02-14 10:31:12 +0000

    ConfHandler: Improve regexp to fix mis-parsing of += and no whitespace
    
    If you have:
    
    FOO = "a"
    FOO += "b"
    FOO+= "c"
    
    The expected result is "a b c" however we were seeing "a b" with the FOO+
    variable being assigned the value "c". This isn't the expected result.
    
    We need to make the name part of the variale non-greedy so that any + character
    becomes part of the operator. This patch does that. I compared the configuration
    in OE-Core before and after the change and only the test case changed.
    
    [YOCTO #3834]
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/parse/parse_py/ConfHandler.py

commit fc330d810099c57fefd4e706159a73ad8401d97c
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2013-02-11 11:00:45 +0000

    bitbake/utils: Improve environment handling to allow UIs access to original environment
    
    We need to empty out the environment whilst we build the cooker but
    we need the environment for the UIs since hob uses DISPLAY and other
    session variables.
    
    This patch adapts the utils functions to return removed environment
    components so we can reinject them for use by the UI, allowing hob
    to work again.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

6	4	bin/bitbake
6	4	lib/bb/utils.py

commit bb53b47710ca4579e20284668cb354f734c3d502
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2013-02-06 23:18:19 +0000

    prserv/serv.py: Fix logging in daemon mode
    
    In deamon mode we need to ensure the logging module is sending log data to the
    log file. These changes ensure this happens correctly.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

16	4	lib/prserv/serv.py

commit 2d0bbd9398ab839bd2d1e29e50b25d52efb1ce2a
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2013-02-06 15:59:07 +0000

    bitbake: Always use separate process for PR Service
    
    Using the threading module interacts badly with multiprocessing used elsewhere
    in bitbake under certain machine loads. This was leading to bitbake hanging on
    Ctrl+C when the PR Server was being used.
    
    This patch converts it to always use the daemonize code which
    then means the threading code isn't required.
    
    [YOCTO #3742]
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/server/process.py
7	22	lib/prserv/serv.py

commit d96ef9398356b2a61f7cff765821616bf1e55492
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2013-02-06 13:07:35 +0000

    Update version to 1.17.0
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	bin/bitbake
1	1	lib/bb/__init__.py

commit e60270bdce6b8c2f8da1a4838aa374da9db3c86a
Author: Darren Hart <dvhart@linux.intel.com>
Date:   2013-02-05 14:52:45 -0800

    fetch2: Remove broken git variables from the environment
    
    The following variables perform no function outside of bitbake:
    
        GIT_CONFIG
        GIT_PROXY_HOST
        GIT_PROXY_PORT
        GIT_PROXY_IGNORE
    
    GIT_CONFIG only affects the git-config command which is not relevant to
    the fetcher. This was previously used with the OE GIT_CORE_CONFIG
    variable which would provide a basic git config to use instead of the
    user's config. This usage was deprecated by git for over a year now:
    
    http://git.661346.n2.nabble.com/Overriding-gitconfig-using-GIT-CONFIG-td6680977.html
    
    GIT_PROXY_HOST and GIT_PROXY_PORT are not used by git.
    
    GIT_PROXY_IGNORE was an OE construct used to create the custom git
    config and had no meaning outside of the OE environment. It is not used
    by git.
    
    Remove these variables from the fetcher environment.
    
    Users wishing to configure git to work with a proxy should define the
    GIT_PROXY_COMMAND environment variable to use an external script.
    NO_PROXY can be used within this script to skip the proxy for certain
    hosts.
    
    Signed-off-by: Darren Hart <dvhart@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

4	4	lib/bb/fetch2/__init__.py

commit c3e6b2c5ec81d5ad7dcf606fff16fd5552bd267c
Author: Darren Hart <dvhart@linux.intel.com>
Date:   2013-02-05 14:52:44 -0800

    fetch2: Export upper and lower case environment variables
    
    Applications are inconsistent in their use of upper and lower case proxy
    variables. Curl, for example, specifies NO_PROXY (not no_proxy) in the
    man page (changed in 2009 [1]). Avoid proxy issues by ensuring both the
    upper and lower case versions of each proxy variable is available in the
    environment for the fetcher commands.
    
    Add FTPS_PROXY and ftps_proxy to the list as well.
    
    1. http://curl.haxx.se/mail/tracker-2009-04/0012.html
    
    Signed-off-by: Darren Hart <dvhart@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

7	2	lib/bb/fetch2/__init__.py

commit 0a99563a4ea270594fd9a61da46f9387fb79dc66
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2013-02-05 16:02:03 +0000

    cooker/utils: Drop custom 'interactive' variables list and store environment in BB_ORIGENV instead
    
    Maintining hardcoded lists of user environmental variables is hacky,
    replace these with the savedenv datastore. Allow access to that
    through the BB_ORIGENV variable.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	0	lib/bb/cooker.py
1	26	lib/bb/utils.py

commit c9eb742637131e8dbd526d2ad9b458abea0a2d87
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2013-02-06 00:28:08 +0000

    compat/utils: Add copy of python multiprocessing pool for pre 2.7.3 issues
    
    python 2.7 shows hangs with issues in its pool implmenetation. Rather than
    try and hack around these, add a copy of the working pool implementation
    to the compat module from 2.7.3.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

687	0	lib/bb/compat.py
8	0	lib/bb/utils.py

commit 63774f5b4edb999300bddd891233f6050f4af877
Author: Darren Hart <dvhart@linux.intel.com>
Date:   2013-02-05 02:31:37 -0800

    bitbake: fetch2: Print the complete SRCREV variable name when INVALID
    
    If a particular SRCREV (say for a particular branch) is missing, the
    fetcher will currently just report an obtuse error about the "SRCREV"
    being invalid. If there is more information is to be had (say from name,
    i.e. branch, and pn) then display that as well.
    
    The new error looks something like this:
    
    ERROR: ExpansionError during parsing /home/dvhart/source/poky/meta/recipes-kernel/linux/linux-yocto_3.4.bb: Failure expanding variable do_patch: ExpansionError: Failure expanding variable SRCPV, expression was ${@bb.fetch2.get_srcrev(d)} which triggered exception FetchError: Fetcher failure for URL: 'git://otcgit.jf.intel.com/dvhart/linux-yocto-minnow-3.4.git;protocol=git;nocheckout=1;branch=standard/minnow,meta,emgd-1.14;name=machine,meta,emgd'. Please set SRCREV_emgd_pn-linux-yocto to a valid value
    
    Note the variable listed as invalid is
    "SRCREV_emgd_pn-linux-yocto", making it explicit what is wrong.
    
    Signed-off-by: Darren Hart <dvhart@linux.intel.com>
    Cc: bitbake-devel@lists.openembedded.org
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

5	2	lib/bb/fetch2/__init__.py

commit ff3ee4c97c89052eb1d650fcbaacbd7fa03130af
Author: Bill Traynor <wmat@alphatroop.com>
Date:   2013-01-31 12:01:32 -0500

    setup.py: Set the 'url' in setup.py to the OE BitBake page.
    
    Removed the old berlios BitBake project page and inserted
    the BitBake page from the OE project:
    http://www.openembedded.org/wiki/BitBake
    
    Signed-off-by: Bill Traynor <wmat@alphatroop.com>

1	1	setup.py

commit 100502ef722bf19b6c125a5e017f31686ad18421
Author: Robert Yang <liezhi.yang@windriver.com>
Date:   2013-01-25 16:35:10 +0800

    bitbake-layers: print the recipe's depends that crosses a layer boundary
    
    Figure out the dependency between recipes that crosses a layer boundary
    
    * Introduction:
      - For the .bb file, we need check the following depends:
        > Check the DEPENDS, RDEPENDS and inherits according to the
          cooker_data.
        > The cooker_data doesn't have the info about "require/include xxx",
          so we need check them manually.
    
      - For the .bbclass, .inc and .conf file, we can't get their file
        depends from the cooker_data, we need check them manually.
    
    * Usage:
      $ bitbake-layer show-cross-depends
    
      I don't like the name "show-cross-depends", figure-out-cross-depends
      might be better, but most of the commands are "show-xxx" for bitbake-layers.
    
    * Output: (snipped)
    /work/poky/meta/recipes-support/libusb/libusb-compat_0.1.4.bb inherits /work/poky/meta-yocto/classes/poky-sanity.bbclass
    /work/poky/meta-intel/meta-cedartrail/recipes-cdv-media/images/core-image-cdv-media.bb requires /work/poky/meta/recipes-sato/images/core-image-sato.bb
    /work/poky/meta-yocto/recipes-core/tiny-init/tiny-init.bb RDEPENDS /work/poky/meta/recipes-core/busybox/busybox_1.20.2.bb
    /work/poky/meta-intel/common/recipes-bsp/amt/lms_7.1.20.bb DEPENDS /work/poky/meta/recipes-devtools/autoconf/autoconf_2.69.bb
    /work/poky/meta/classes/distrodata.bbclass includes /work/poky/meta-yocto/conf/distro/include/package_regex.inc
    /work/poky/meta-intel/meta-sys940x/conf/machine/sys940x.conf requires /work/poky/meta/conf/machine/include/tune-atom.inc
    
    [YOCTO #3387]
    
    Signed-off-by: Robert Yang <liezhi.yang@windriver.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

133	0	bin/bitbake-layers

commit f838af8e7afebf279ffb00a3afa6592f061b703f
Author: Martin Jansa <martin.jansa@gmail.com>
Date:   2013-01-28 16:56:42 +0100

    ssh.py: add example SRC_URI
    
    Signed-off-by: Martin Jansa <Martin.Jansa@gmail.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

6	0	lib/bb/fetch2/ssh.py

commit 88e565855b52e905156d85c3f45b341cddfe2f55
Author: Martin Jansa <martin.jansa@gmail.com>
Date:   2013-01-28 16:56:41 +0100

    ssh.py: throw ParameterError when someone tries ssh://foo; protocol=git
    
    * taken from SFTP fetcher:
      http://patchwork.openembedded.org/patch/43027/
    
    Signed-off-by: Martin Jansa <Martin.Jansa@gmail.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

5	0	lib/bb/fetch2/ssh.py

commit 41208760d70a657297f9ecfb48b74e2c3b594e70
Author: Martin Jansa <martin.jansa@gmail.com>
Date:   2013-01-28 16:56:40 +0100

    ssh: fix fetcher
    
    * set localpath in urldata_init
      otherwise localpath and basename were None, when fetcher was trying to
      define .lock and .done paths
      basepath = d.expand("${DL_DIR}/%s" % os.path.basename(self.localpath or self.basename))
    * remove "host" from localpath
      .done and .lock files are always using just basename, so if someone
      has 2 recipes with:
      SRC_URI = "ssh://foo/file.txt"
      SRC_URI = "ssh://bar/file.txt"
      then there will be only one file.txt.done in downloads anyway (and
      only first file.txt from first server will be returned on do_fetch
    
    Signed-off-by: Martin Jansa <Martin.Jansa@gmail.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

7	14	lib/bb/fetch2/ssh.py

commit 311e7ba8b2c88fbf6f16b6ffb1400226b155ddd4
Author: Cristiana Voicu <cristiana.voicu@intel.com>
Date:   2013-01-31 13:50:16 +0200

    hob: eliminate the "by recipe" grouping in the packages table
    
    We have agreed to change how we show the packages. Now they are not grouped by
    recipe. Until now, it was implemented using  TreeStore and I've changed it to
    extend a ListStore. I have modified all the function in according to this.
    
    [YOCTO #2180]
    Signed-off-by: Cristiana Voicu <cristiana.voicu@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

97	175	lib/bb/ui/crumbs/hoblistmodel.py
15	7	lib/bb/ui/crumbs/packageselectionpage.py

commit 2ff636910b9cf3099e8d961f4bbe71512c015ecc
Author: Cristiana Voicu <cristiana.voicu@intel.com>
Date:   2013-01-28 15:33:39 +0200

    hob: Use a GtkTreeView to present and configure the sstate mirrors
    
    After some discussions about the design of the Shared State Settings tab in Hob,
    we have decided that using a GtkTreeView to present and configure the sstate
    mirrors is probably the best solution.
    
    [YOCTO #3569]
    Signed-off-by: Cristiana Voicu <cristiana.voicu@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

0	94	lib/bb/ui/crumbs/hig/settingsuihelper.py
204	27	lib/bb/ui/crumbs/hig/simplesettingsdialog.py

commit c46db4be4cc4dc53376ed3f574b2f1c868730f2a
Author: Christopher Larson <chris_larson@mentor.com>
Date:   2013-01-25 17:56:30 -0700

    tinfoil: support other fds, enable color support
    
    Rather than only handling sys.stdout, also support any arbitrary file object,
    and enable color for the formatter if that file is a tty.
    
    Signed-off-by: Christopher Larson <chris_larson@mentor.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

5	3	lib/bb/tinfoil.py

commit a4463d7b51828c32e55dea3c0dd51966d387abac
Author: Cristiana Voicu <cristiana.voicu@intel.com>
Date:   2013-01-25 17:05:26 +0200

    hob: small fixes to parsing warnings dialog
    
    Set the labels selectable; reset the warnings list when another machine is selected;
    changed a label name
    
    [YOCTO #3215]
    Signed-off-by: Cristiana Voicu <cristiana.voicu@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

4	2	lib/bb/ui/crumbs/hig/parsingwarningsdialog.py
1	0	lib/bb/ui/crumbs/imageconfigurationpage.py

commit 55b814ccfa413d461d12956896364ab63eed70a8
Author: Cristiana Voicu <cristiana.voicu@intel.com>
Date:   2013-01-25 16:10:12 +0200

    bitbake & hob: implement functions to assure consistency for configuration files
    
    Added a new command in bitbake to save a variable in a file; added a function
    in cooker which is called by this command.
    
    Added new command in bitbake to enable/disable data tracking.
    
    The function saveConfigurationVar from cooker.py saves a variable in the file that
    is received by argument. It checks all the operations made on that variable, using the history.
    If it's the first time when it does some changes on a variable,it comments the lines where
    an operation is made on it, and it sets it in a line to the end of file. If it's not
    the first time(it has a comment before), it replaces the line.
    
    Made some changes in hob to save the variables from bblayers.conf and local.conf
    using the bitbake command.
    
    [YOCTO #2934]
    Signed-off-by: Cristiana Voicu <cristiana.voicu@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

18	0	lib/bb/command.py
89	0	lib/bb/cooker.py
22	0	lib/bb/data_smart.py
19	13	lib/bb/ui/crumbs/builder.py
5	0	lib/bb/ui/crumbs/hobeventhandler.py
0	24	lib/bb/ui/crumbs/template.py

commit 8f4dcf794545273417d78ba18f51aa2b81606ae4
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2013-01-28 14:48:09 +0000

    cache.py: Drop support for BROKEN variable
    
    All it now does is function in a similar way to EXCLUDE_FROM_WORLD and
    since we have a better named variable for this, lets just drop the
    usage of BROKEN at the bitbake level.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	2	lib/bb/cache.py

commit 32aa49519e4f015e3c21466a7e5dc939f6369851
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2011-06-10 16:22:54 +0000

    build.py: Dump out performance data of individual tasks
    
    Signed-off-by: Richard  Purdie <richard.purdie@linuxfoundation.org>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

16	2	lib/bb/build.py
2	1	lib/bb/runqueue.py

commit 0df64810e8d40e7761cfd5059c0617dda31a6641
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2013-01-28 14:40:04 +0000

    utils.py: Add function for processing profile output
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	19	lib/bb/cooker.py
20	0	lib/bb/utils.py

commit 20222f2f16130e91eed5e68286188ee0e8f8f3bf
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2013-01-25 12:54:49 +0000

    bitbake-diffigs: Don't pull in tinfoil unless we really need/plan to use it
    
    This means we can run in parallel with other bitbake processed we're not in
    task mode.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	bin/bitbake-diffsigs

commit 7a31b9eac4d894c302f0e052a132c31b17d13d1f
Author: Robert Yang <liezhi.yang@windriver.com>
Date:   2013-01-25 16:35:09 +0800

    bitbake-layers: fix get_file_layer
    
    The get_file_layer can't handle the nested layer correctly, e.g.:
    
    meta-intel/conf/layer.conf
    meta-intel/meta-cedartrail/conf/layer.conf
    
    They are two layers, the file:
    meta-intel/common/recipes-bsp/amt/lms_7.1.20.bb
    belongs to meta-intel's layer, but the get_file_layer() may return
    meta-cedartrail accordig to BBLAYERS' order, since it uses:
    
    for layerdir in self.bblayers:
        if regex.match(os.path.join(layerdir, 'test')):
            return self.get_layer_name(layerdir)
    
    which doesn't care the filename, re-match the filename would fix the
    problem.
    
    [YOCTO #3387]
    
    Signed-off-by: Robert Yang <liezhi.yang@windriver.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	1	bin/bitbake-layers

commit 409a4aa0e166c25a8cfcd91e54f1b61cced74e87
Author: Robert Yang <liezhi.yang@windriver.com>
Date:   2013-01-25 16:34:13 +0800

    cache.py: remove the duplicated self.file_depends
    
    There are two "self.file_depends =" lines in cache.py::CoreRecipeInfo:
    
    class CoreRecipeInfo(RecipeInfoCommon):
        __slots__ = ()
    
        cachefile = "bb_cache.dat"
    
        def __init__(self, filename, metadata):
            self.file_depends = metadata.getVar('__depends', False)
        [snip]
            self.file_depends = metadata.getVar('__depends', False)
    
    They are duplicated, remove the last one.
    
    [YOCTO #3795]
    
    Signed-off-by: Robert Yang <liezhi.yang@windriver.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

0	1	lib/bb/cache.py

commit 00533e83038e3d5e3cd5d1be73c45afece92ec0c
Author: Cristiana Voicu <cristiana.voicu@intel.com>
Date:   2013-01-23 14:13:44 +0200

    hob: hob do not use .hob dir for variables from local.conf and bblayers.conf
    
    If .hob exists, hob takes the variable from there. Change to not override anymore
    the variables which comes from bblayers.conf and local.conf
    
    [YOCTO #2934]
    Signed-off-by: Cristiana Voicu <cristiana.voicu@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

4	23	lib/bb/ui/crumbs/builder.py
6	5	lib/bb/ui/crumbs/hig/simplesettingsdialog.py

commit ad62eed9e1f0867a406e9fbfa44916a0f1ad1282
Author: Constantin Musca <constantinx.musca@intel.com>
Date:   2013-01-23 16:54:03 +0200

    prserv: use only PRSERV_HOST
    
    - remove PRSERV_PORT variable
    - use 'hostname:port' as PRSERV_HOST format
    - use 'localhost:0' for enabling the local PRServer
    
    [YOCTO #3744]
    
    Signed-off-by: Constantin Musca <constantinx.musca@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

11	4	lib/prserv/serv.py

commit 90aabeb87d6c1f00d6333cc9930626d36b6d9709
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2013-01-22 15:37:56 +0000

    crumbs: Add file lost from previous commit
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

161	0	lib/bb/ui/crumbs/hig/parsingwarningsdialog.py

commit 27f2247b4c227c3b5adb1ca33d0cd7f7b492e170
Author: Cristiana Voicu <cristiana.voicu@intel.com>
Date:   2013-01-15 16:50:39 +0200

    hob: combo box updated correctly
    
    The 'select a base image' option is no longer displayed once
    an image is selected
    
    [YOCTO #3671]
    Signed-off-by: Cristiana Voicu <cristiana.voicu@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

5	2	lib/bb/ui/crumbs/imageconfigurationpage.py

commit 6ee1f58698e2d782c54ce5aec271bcec26107eac
Author: Constantin Musca <constantinx.musca@intel.com>
Date:   2013-01-22 11:37:57 +0200

    persist_data: add get_by_pattern method to API
    
    - one can use get_by_pattern to get a list of values associated
    with keys that match the specified pattern
    
    Signed-off-by: Constantin Musca <constantinx.musca@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

5	0	lib/bb/persist_data.py

commit 7c15ff1d50d7b601414f1d55c90e3c59981a0876
Author: Constantin Musca <constantinx.musca@intel.com>
Date:   2013-01-22 11:37:27 +0200

    parse_py: add ~ to config_regexp
    
    - enable the '~' character in bitbake variables
    
    Signed-off-by: Constantin Musca <constantinx.musca@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/parse/parse_py/ConfHandler.py

commit d7b5311d35b3974398fecabfb5ecf1effa85c27e
Author: Cristiana Voicu <cristiana.voicu@intel.com>
Date:   2013-01-21 16:40:07 +0200

    hob: Hob should display warnings generated during parsing
    
    -now Hob catches the warnings generated during parsing, and after the parsing
    is completed, if there are any warnings, it shows a bar that contains a message
    with how many warnings has encountered, and a button "View warnings"
    -when "View warnings" button is clicked, Hob shows a dialog with the warnings;
    if there more than 1 warning, you can use "Previous" and "Next" button to see them
    
    [YOCTO #3215]
    Signed-off-by: Cristiana Voicu <cristiana.voicu@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

17	0	lib/bb/ui/crumbs/builder.py
1	0	lib/bb/ui/crumbs/hobcolor.py
13	0	lib/bb/ui/crumbs/hobeventhandler.py
48	6	lib/bb/ui/crumbs/imageconfigurationpage.py
1	0	lib/bb/ui/crumbs/packageselectionpage.py

commit 09d1c4c2db124104b9da460547b20a2c2ff07bb3
Author: Cristiana Voicu <cristiana.voicu@intel.com>
Date:   2013-01-21 16:50:40 +0200

    hob: progress bar changed to busy cursor when you open log file
    
    -the first implementation for this bug used a progress bar, that is shown
    during open file process; it revelead that the progress bar stops earlier
    -now I have implemented using gtk.show_uri() method, that shows itself a
    busy cursor when it opens a file;
    -deleted the code for the first implementation
    
    [YOCTO #2997]
    Signed-off-by: Cristiana Voicu <cristiana.voicu@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	14	lib/bb/ui/crumbs/builddetailspage.py
0	68	lib/bb/ui/crumbs/hig/openinglogdialog.py
0	51	lib/bb/ui/crumbs/hobthreads.py
2	14	lib/bb/ui/crumbs/imagedetailspage.py
2	14	lib/bb/ui/crumbs/packageselectionpage.py

commit 7e7d692e244fe8dca533f842ca143b9c821e317c
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2013-01-21 11:00:52 +0000

    BBHandler/ConfHandler: Merge fix for multiline comments
    
    This was meant to be squashed into the previous commit for multiline comment
    handling. It fixes the case the commented multiline is followed by an empty
    line which was resulting in a traceback instead of a sane error message.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/parse/parse_py/BBHandler.py
1	1	lib/bb/parse/parse_py/ConfHandler.py

commit 79c00fabe08b4c210a3bd81cfaffbc47ffdc2e2b
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2012-12-14 13:53:32 +0000

    bitbake: BBHandler/ConfHandler: Improve multiline comment handling
    
    Faced with an expression like:
    
     # Some comment \
     FOO = "bar"
    
    what should bitbake do? Technically, the \ character means its multiline and
    currently the code treats this as a continuation of the comment. This can
    surprise some people and is not intuitive.
    
    This patch makes bitbake simply error and asks the user to be clearer
    about what they mean.
    
    (Bitbake rev: 589d31ce41e019ee6a7cb6527d67bc76c0b6382a)
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

4	1	lib/bb/parse/parse_py/BBHandler.py
10	3	lib/bb/parse/parse_py/ConfHandler.py

commit 7e3a99949358f4362876df5a82f8aeaae72c3c97
Author: Jessica Zhang <jessica.zhang@intel.com>
Date:   2013-01-03 15:32:05 -0800

    hob: Fix GTK+ and PyGtk version check error message to be more clear
    
    Improve the error message the user sees if the versions are incorrect.
    
    [YOCTO #3637]
    
    Signed-off-by: Jessica Zhang <jessica.zhang@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/ui/hob.py

commit f0a6261d3a8ede9ebdb6383e02cb2c2de1690640
Author: Jon Szymaniak <jon.szymaniak@gmail.com>
Date:   2012-12-17 09:22:51 -0500

    hg.py: Fixed fetch failure that occurs when SRCREV is a tag.
    
    Removed "-r REV" from hg clone invocation to fetch the entire repo,
    rather than just the subset at the specified revision. This will ensure
    that the specified tag exists for successive commands (e.g., the update
    built on line 149.)
    
    Signed-off-by: Jon Szymaniak <jon.szymaniak@gmail.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

6	1	lib/bb/fetch2/hg.py

commit 22bd19d208f0251f5a1f9b98f3cac66181f3fc07
Author: Tyler Hall <tylerwhall@gmail.com>
Date:   2012-12-19 18:26:50 -0500

    fetch2: Sort file checksums by value, not path
    
    Changing the path to a file could change the task hash even if the file
    still has the same checksum. This occurs when the task depends on
    multiple files and the sort order of their paths changes. Usually the
    sorting is consistent because layers tend to have the same relative
    paths, but this should take care of other configuations.
    
    The problem arose when using a .bbappend to add files to a recipe in
    another layer. If the layer is located alongside the other layers and
    their parent directory is moved, the hash does not change. However,
    moving the .bbappend layer outside of the common directory can change
    the path sort order and the task hash.
    
    Signed-off-by: Tyler Hall <tylerwhall@gmail.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	1	lib/bb/fetch2/__init__.py

commit 0c99df2af1d35dbc9f51cd68b4908029cef288fa
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2013-01-18 12:39:28 +0000

    base.bbclass: Fix bitbake example class usage
    
    Patch from Andrew Stubbs <ams@codesourcery.com> to fix listtasks and showdata
    functions to output data correctly.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	2	classes/base.bbclass

commit f00524a3729000cbcb3317fee933ac448fae5e2d
Author: Peter Seebach <peter.seebach@windriver.com>
Date:   2013-01-18 11:47:34 +0000

    bitbake: data_smart.py and friends: Track variable history
    
    This patch adds tracking of the history of variable assignments.
    The changes are predominantly localized to data_smart.py and
    parse/ast.py. cooker.py and data.py are altered to display the
    recorded data, and turn tracking on for the bitbake -e case.
    The data.py update_data() function warns DataSmart.finalize()
    to report the caller one further back up the tree.
    
    In general, d.setVar() does what it used to do. Optionally,
    arguments describing an operation may be appended; if none
    are present, the operation is implicitly ignored. If it's
    not ignored, it will attempt to infer missing information
    (name of variable, value assigned, file and line) by examining
    the traceback. This slightly elaborate process eliminates a
    category of problems in which the 'var' member of the keyword
    arguments dict is set, and a positional argument corresponding
    to 'var' is also set. It also makes calling much simpler for
    the common cases.
    
    The resulting output gives you a pretty good picture of what
    values got set, and how they got set.
    
    RP Modifications:
    
    a) Split from IncludeHistory to separate VariableHistory
    b) Add dedicated copy function instead of deepcopy
    c) Use COW for variables dict
    d) Remove 'value' loginfo value and just use 'details'
    e) Desensitise code for calling order (set 'op' before/after
       infer_caller_details was error prone)
    f) Fix bug where ?= "" wasn't shown correctly
    g) Log more set operations as some variables mysteriously acquired
       values previously
    h) Standardise infer_caller_details to be triggered from .record()
       where at all possible to reduce overhead in non-enabled cases
    i) Rename variable parameter names to match inference code
    j) Add VariableHistory emit() function to match IncludeHistory
    k) Fix handling of appendVar, prependVar and matching flag ops
    l) Use ignored=True to stop logging further events where appropriate
    
    Signed-off-by: Peter Seebach <peter.seebach@windriver.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	7	lib/bb/cooker.py
4	5	lib/bb/data.py
219	37	lib/bb/data_smart.py
25	5	lib/bb/parse/ast.py

commit b2dda721262da8abb7dc32d019e18fbc32ed8860
Author: Peter Seebach <peter.seebach@windriver.com>
Date:   2013-01-18 11:45:22 +0000

    bitbake: data_smart.py and friends: Track file inclusions for bitbake -e
    
    This code adds inclusion history to bitbake -e output, showing
    which files were included, in what order. This doesn't completely
    resolve timing questions, because it doesn't show you which lines
    of a file were processed before or after a given include, but it
    does let you figure out what the path was by which a particular
    file ended up in your build at all.
    
    How it works: data_smart acquires a .history member, which is an
    IncludeHistory; this represents the inclusion of a file and all its
    inclusions, recursively. It provides methods for including files,
    for finishing inclusion (done as an __exit__), and for
    dumping the whole tree.
    
    The parser is modified to run includes inside a with() to push
    and pop the include filename.
    
    RP Modifications:
    
    a) Split Include and Variable tracking
    b) Replace deepcopy usage with dedicated copy function
    c) Simplify some variable and usage
    
    Signed-off-by: Peter Seebach <peter.seebach@windriver.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

5	0	lib/bb/cooker.py
46	0	lib/bb/data_smart.py
2	1	lib/bb/parse/__init__.py

commit e12c1a485f96a4701144ac81179ae1af348e5bf3
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2013-01-18 11:46:30 +0000

    BBHandler/data: Standardise some setVar access formats
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	3	lib/bb/data.py
3	3	lib/bb/parse/parse_py/BBHandler.py

commit a7a2b730f915cafe7aa30539622dd1ca64ae41f5
Author: Bogdan Marinescu <bogdan.a.marinescu@intel.com>
Date:   2013-01-10 13:08:02 +0200

    hig.py: refactor into individual components
    
    Since hig.py was becoming too large (which impacted maintenance and
    operations like git merges) it was split into individual files for
    the classes that were implemented in hig.py. hig is now a Python
    package (lib/bb/ui/crumbs/hig/). The patch was tested by
    building core-image-basic/qemux86 in Hob and accessing the various
    UI elements implemented in hig. Note that the patch does not change
    the functionality of Hob in any way, it's just a code refactoring
    that should make life a bit easier for Hob developers.
    
    [YOCTO #3200]
    
    Signed-off-by: Bogdan Marinescu <bogdan.a.marinescu@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	1	bin/image-writer
1	1	lib/bb/ui/crumbs/builddetailspage.py
7	4	lib/bb/ui/crumbs/builder.py
0	1978	lib/bb/ui/crumbs/hig.py
0	0	lib/bb/ui/crumbs/hig/__init__.py
336	0	lib/bb/ui/crumbs/hig/advancedsettingsdialog.py
44	0	lib/bb/ui/crumbs/hig/crumbsdialog.py
95	0	lib/bb/ui/crumbs/hig/crumbsmessagedialog.py
215	0	lib/bb/ui/crumbs/hig/deployimagedialog.py
172	0	lib/bb/ui/crumbs/hig/imageselectiondialog.py
296	0	lib/bb/ui/crumbs/hig/layerselectiondialog.py
68	0	lib/bb/ui/crumbs/hig/openinglogdialog.py
90	0	lib/bb/ui/crumbs/hig/proxydetailsdialog.py
216	0	lib/bb/ui/crumbs/hig/settingsuihelper.py
722	0	lib/bb/ui/crumbs/hig/simplesettingsdialog.py
2	2	lib/bb/ui/crumbs/imagedetailspage.py
1	1	lib/bb/ui/crumbs/packageselectionpage.py

commit dee7decf87dfa8cb966fe40846d27f3e6ab1846b
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2013-01-07 17:35:39 +0000

    build.py: Fix traceback when there are no dependencies
    
    A recipe with no dependencies results in a traceback (e.g. all in
    ASSUME_PROVIDED). This shouldn't happen and this patch fixes it.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

4	3	lib/bb/build.py

commit 61cf01c5c236b4218f40cfae7c059c2b86765dbd
Author: Constantin Musca <constantinx.musca@intel.com>
Date:   2012-12-05 10:58:26 +0200

    fetch2: remove localcount and use AUTOINC instead
    
    - do not use the BB_URI_LOCALCOUNT database for computing revision
    incremental numbers anymore
    - sortable_revision now generates "AUTOINC+${latest_rev}"
    - use one incrementing value rather than several
    - PV becomes 0.1+gitAUTOINC+deadbeefdecafbad_decafbaddeadbeef
    - remove all localcount code and simplify the fetcher
    - this patch addresses the following proposal:
    http://lists.linuxtogo.org/pipermail/bitbake-devel/2012-November/003878.html
    
    Signed-off-by: Constantin Musca <constantinx.musca@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

9	46	lib/bb/fetch2/__init__.py
2	37	lib/bb/fetch2/git.py

commit a906c94328b040d5076571bd593b57be7ee403a5
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2012-12-14 16:25:52 +0000

    data: Ensure emit_func honours vardeps flag
    
    Currently, calling a shell function using exec_func may result in
    dependent functions being missing, if the shell parser can't detect
    the dependency, even if it was specified with the vardeps flag.
    
    This patch ensures the function looks at the flag and considers it
    when deciding which other functions need to be output.
    
    [YOCTO #3561]
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	0	lib/bb/data.py

commit 42d9db0cc80ed45d769f843ccb51e0c194ec557b
Author: Cristiana Voicu <cristiana.voicu@intel.com>
Date:   2012-12-14 17:35:47 +0200

    hob: use base image only if it was set
    
    As it is, when you create a new image from scratch, hob gives an error.
    This is because of the patch for #2601.
    
    Signed-off-by: Cristiana Voicu <cristiana.voicu@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

5	4	lib/bb/ui/crumbs/hobeventhandler.py

commit 22007cf71a00fbb03b40f97201a6eb06c9aebd16
Author: Cristiana Voicu <cristiana.voicu@intel.com>
Date:   2012-12-12 13:51:51 +0200

    hob/bitbake: custom image is now using the base image
    
    Till now, a custom image made in Hob was using only the packages from
    the base image. Now it is using everything declared in the base image.
    Also next to hob-image.bb, it creates another .bb file which is used
    in building process. Those images are ignored by git.
    
    [YOCTO #2601]
    Signed-off-by: Cristiana Voicu <cristiana.voicu@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

10	0	lib/bb/command.py
19	0	lib/bb/cooker.py
5	1	lib/bb/ui/crumbs/builder.py
9	1	lib/bb/ui/crumbs/hobeventhandler.py
6	0	lib/bb/ui/crumbs/hoblistmodel.py

commit 4a36a1af71530afc8fa896271fa94362ead176bd
Author: Mihai Lindner <mihaix.lindner@linux.intel.com>
Date:   2012-12-13 12:55:25 +0200

    knotty: use bb.error instead of print
    
    Change to use bb.error instead of print, or maybe that was desired (?)
    Also remove a tab, while in the neighborhood.
    
    Signed-off-by: Mihai Lindner <mihaix.lindner@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	2	lib/bb/ui/knotty.py

commit 5161a84f5dcfe748382a5073349bf10ed21641f9
Author: Robert P. J. Day <rpjday@crashcourse.ca>
Date:   2012-12-13 11:06:29 -0500

    git.py: A bit of tidying up regarding grammar and supported protocols.
    
    Doc cleanup, no functional change.
    
    Signed-off-by: Robert P. J. Day <rpjday@crashcourse.ca>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

5	5	lib/bb/fetch2/git.py

commit 0668a0ea968baf930f05806a5452c8dbe4ec35ce
Author: Eren Türkay <eren@hambedded.org>
Date:   2012-12-12 22:35:50 +0200

    bitbake.vim: detect *.bbappend files in ftdetect automatically
    
    Currently, *.bb and *.bbclass files are automatically highlighted and
    detected as a bitbake file. Since *.bbappend files are also bitbake
    files, vim plugin should automatically detect and highlight it as well.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	2	contrib/vim/ftdetect/bitbake.vim

commit 7467d7d66b24cc8f43ab168e65895e7c4aee6092
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2012-12-14 12:33:01 +0000

    data_smart/BBHandler: Fix SkipParse exception handling
    
    If SkipParse is raised from something which isn't anonymous python, it wasn't
    being handled correctly. This improves the handling for example from within inline
    python.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	0	lib/bb/data_smart.py
6	1	lib/bb/parse/parse_py/BBHandler.py

commit 3a1b75037fe1e5282ffd40b037e93353405faa45
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2012-12-14 12:30:27 +0000

    bin/bitbake, bb/__init__: Move BBDEBUG handling to bin/bitbake
    
    The method this older code was accessing doesn't exist. A library shouldn't
    be changing behaviour based on the environment anyway when sepcific function
    calls exist to correctly setup the logging. Fix the crash if BBDEBUG was used
    by moving the code to bin/bitbake.
    
    [YOCTO #3319]
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

5	0	bin/bitbake
0	5	lib/bb/__init__.py

commit c6211291ae07410832031a5274690437cc2b09a6
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2012-12-14 12:27:33 +0000

    command: Fix getCmdLineAction bugs
    
    Executing "bitbake" doesn't get a sane message since the None return value
    wasn't being handled correctly. Also fix msg -> cmd_action['msg'] as
    otherwise an invalid variable is accessed which then crashes the server
    due to the previous bug.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

4	2	lib/bb/command.py

commit e637a635bf7b5a9a2e9dc20afc18aceec98d578f
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2012-12-14 12:26:19 +0000

    command: Add missing import traceback
    
    Without this, if an exception occurs the server will silently crash
    with no feedback to the user about why (since traceback isn't imported).
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	0	lib/bb/command.py

commit f3a71e509af196391ec126d079cf1bd178e62ad5
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2012-12-11 00:02:50 +0000

    BBhandler/data: Fix __inherit_cache duplication
    
    The inherits cache contains duplicate entries, some with the full patch, some
    just starting classes/xxx. This is a waste of parse time and potentially
    error prone. This patch fixes various pieces of code so the absolute paths are
    always preferred and work correctly. The inherits_class function did not work
    with full paths so the patch fixes this.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

4	2	lib/bb/data.py
7	0	lib/bb/parse/parse_py/BBHandler.py

commit 9fc98f96f0e0320beda0ce9546275a99336732c1
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2012-12-11 00:01:56 +0000

    BBHandler/ast: Simplify/fix EXPORT_FUNCTIONS usage
    
    The current usage of EXPORT_FUNCTIONS is rather problematic since a class
    list (classes) is passed into the ast statement and cached as it was
    when first parsed. This class list may be different in other cases but
    is locked once in the cache.
    
    Worse, the construction of classes can be broken by exceptions during parsing
    at the wrong moments since the state of the parser is not always reset
    correctly. This can lead to leakage of other classes into the classes list.
    
    The current EXPORT_FUNCTIONS implementation looks at the last two currently
    inherited classes and sets up an indirect function call view the second last
    class inherited, e.g.:
    
     do_configure calls gnomebase_do_configure
     gnomebase_do_configure calls autotools_do_configure
    
    This intermediary doesn't seem to serve a useful purpose.
    
    This patch therefore makes builds deterministic and fixes various cache problems
    and indirection by removing the intermediaries and simply performing
    directly mapping for the cases where its needed.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

27	36	lib/bb/parse/ast.py
5	10	lib/bb/parse/parse_py/BBHandler.py

commit 5b1b959b43c5ca90a46769381cf18d82cd76ea60
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2012-12-07 18:08:42 +0000

    Revert "BBHandler: Ensure parser state engine is correctly reset for new parsing"
    
    This reverts commit 3dc5e896a97154914cee6c47900e3bb2a2627cdb.

2	3	lib/bb/parse/parse_py/BBHandler.py

commit 3dc5e896a97154914cee6c47900e3bb2a2627cdb
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2012-12-07 13:10:51 +0000

    BBHandler: Ensure parser state engine is correctly reset for new parsing
    
    The classes variable in particular could be in an odd state if parsing of a
    previous recipe had abruptly ended.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	2	lib/bb/parse/parse_py/BBHandler.py

commit d338a1ad14680af41d218772decd03e98eb2cad5
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2012-12-04 17:02:37 +0000

    xmlrpc: Unbreak the transport by adding a missing logfile name
    
    I appreciate a fixed value is suboptimal but this is better than not
    working at all!
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/server/xmlrpc.py

commit 14cdd3b351d1ab23cb3ea5f853e403a53e67ac1c
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2012-12-04 16:58:08 +0000

    uievent: Fix an init race
    
    There is a race where the registerEventHandler() server call may happen in
    a different thread to the main UI, causing the main UI to see
    httplib.CannotSendRequest exceptions.
    
    This moves the call into the main thread, removing the init race and fixing
    errors I was seeing with the xmlrpc backend.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

14	13	lib/bb/ui/uievent.py

commit 4214ffff2c8a2a1fe66cbade03d2fd9e22a682d2
Author: Cristiana Voicu <cristiana.voicu@intel.com>
Date:   2012-12-03 11:01:19 +0200

    hob: modified how the existence of a variable is checked
    
    Signed-off-by: Cristiana Voicu <cristiana.voicu@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	3	lib/bb/ui/crumbs/builddetailspage.py

commit 86bf1f5603e8f98019544e45f51bd0db9a48112a
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2012-11-29 10:29:06 +0000

    data_smart: Improve get_hash to account for overrides and key expansion
    
    An issue was uncovered where changing:
    
    IMAGE_INSTALL_append = "X"
    
    to
    
    IMAGE_INSTALL_append = "X Y"
    
    in local.conf would not get noticed by bitbake. The issue is that
    the configuration hash doesn't account for overrides or key expansion.
    
    This patch improves get_hash to account for these. This means the hash
    does account for changes like the above.
    
    [YOCTO #3503]
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

7	3	lib/bb/data_smart.py

commit 1f500149ecd533a6edbeea902c3f1e009c755154
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2012-11-28 19:39:23 +0000

    build.py: Preserve sigdata files in the stamps directory
    
    Leaving the sigdata files around can aid debugging and doesn't harm
    anything. This is the easiest way to allow this to happen.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

7	2	lib/bb/build.py

commit c14d831ea3f625e9a47266a0c4e6deefc924ca5a
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2012-11-28 13:34:33 +0000

    build/siggen.py: Avoid removing too many stamps when cleaning
    
    The "*" part of the mask is to ensure we clean both any stamp, and any
    setscene varient. It turns out we would also trample other tasks,
    e.g. do_package_write could trample do_package_write_rpm. do_package also
    tramples do_package_write_* but this is less of an issue since the other
    tasks depend on it.
    
    Rather than use the wildcard, we can just use a list instead.
    
    [YOCTO #3484]
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

6	4	lib/bb/build.py
1	2	lib/bb/siggen.py

commit a40ceda3b349c4461f4b7bc0e18cd966fff5e3cf
Author: Cristiana Voicu <cristiana.voicu@intel.com>
Date:   2012-11-27 16:41:31 +0200

    hob: when BBLAYERS_NON_REMOVABLE is not set hob shows an error
    
    Signed-off-by: Cristiana Voicu <cristiana.voicu@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/ui/crumbs/hobeventhandler.py

commit d7a5185cae975eaca50a9785c6605e895dc7bb51
Author: Cristian Iorga <cristian.iorga@intel.com>
Date:   2012-11-26 19:54:22 +0200

    fetch2/wget: Fix for mixed-up wget commands
    
    wget commands for check and resume were
    mixed-up, leading to the following issues:
    
    1. long running "NOTE: Preparing runqueue"
    reason: objects were downloaded, not spidered on the mirror
    2. Failing network test in Build Appliance, because wget 1.14
    (in use in BA) will fail if a file already exists.
    During the network connectivity test, index.php file was
    actually downloaded, not spidered (checked for existence on
    yoctoproject.org website), leading to wget failure.
    
    Signed-off-by: Cristian Iorga <cristian.iorga@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	2	lib/bb/fetch2/wget.py

commit 87aea65bd5d553bd0495b0f1efe6d41d0bb2810f
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2012-11-26 20:54:30 +0000

    fetch2/local: Fix bug introduced by expression ambiguity
    
    The last changes introduced an error in some of the logic. Add brackets
    to clarify the meaning of the expression and fix certain build failures.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/fetch2/local.py

commit 05da1621eed4c6201cd65372d229f63ea8a44b6e
Author: Cristiana Voicu <cristiana.voicu@intel.com>
Date:   2012-11-26 09:42:36 +0200

    hob: make some layers non removable
    
    - there are some layers which cannot be removed; so ,I have used
    a new variable called BBLAYERS_NON_REMOVABLE located in bblayers.conf,
    which contains those layers which cannot be deleted
    - "meta-hob" layer is added to this variable in hob code, like it's
    added to BBLAYERS var
    
    [YOCTO #3176]
    Signed-off-by: Cristiana Voicu <cristiana.voicu@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	0	lib/bb/ui/crumbs/builder.py
5	10	lib/bb/ui/crumbs/hig.py
3	0	lib/bb/ui/crumbs/hobeventhandler.py

commit cc7fdbdc607df530f5539b162831bf9998eb48d8
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2012-11-26 09:55:32 +0000

    Update version to 1.17.0
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	bin/bitbake
1	1	lib/bb/__init__.py

commit 1cccb3bd01ed82e4978acfef0fda1bd797eef72a
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2012-11-22 21:41:21 +0000

    fetch2: Avoid using FILESDIR in unpack
    
    Currently there is code which uses FILESDIR in unpack to ensure
    parent directories are created, leading to differing behaviour depending on
    which search path is used to locate the directory.
    
    This change standardises the code and takes the data from the fetcher in
    question meaning we can standardise the code and deprecate FILESDIR.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

10	7	lib/bb/fetch2/__init__.py
1	0	lib/bb/fetch2/local.py

commit 07b5f84133ac79aac4e939ea5f24390ad7f940a5
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2012-11-22 21:40:18 +0000

    fetch2/local: Improve handling of wildcard matches
    
    Currently wildcard matches end up working by FILESDIR being defined
    in the metadata to a default of "." in FILESPATH which is hacky at best.
    
    This patch adds the behaviour into the fetcher so its at least slightly
    more explicit.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

6	1	lib/bb/fetch2/local.py

commit 4548a8f037eaf8d47a77052acc3e9ec264ac41e0
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2012-11-25 21:17:41 +0000

    knotty/msg: Avoid usage of curses initscr/endwin to avoid terminal corruption
    
    Using curses initscr/endwin causes screen corruption if for example you
    suspend bitbake and resume it. This changes the code to use a less
    invasive approach to determining colour availability on the terminal.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	11	lib/bb/msg.py
4	4	lib/bb/ui/knotty.py

commit 0db80d57d4d2b1bb97375444c439827450ff33d1
Author: Constantin Musca <constantinx.musca@intel.com>
Date:   2012-11-20 10:09:18 +0200

    hob/builder: Don't rerun sanity checks
    
    Run the sanity check only once
    
    [YOCTO #3377]
    
    Signed-off-by: Constantin Musca <constantinx.musca@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

8	2	lib/bb/ui/crumbs/builder.py

commit 964ac25d153ff4da144963289a32066db0e28b89
Author: Cristiana Voicu <cristiana.voicu@intel.com>
Date:   2012-11-20 14:37:46 +0200

    hob: showing when build fails because out of disk space
    
    -to enable this in hob, first you have to enable this in bitbake using
    BB_DISKMON_DIRS and/or BB_DISKMON_WARNINTERVAL vars
    -created "restart the build" action on the build_fail_top_bar
    
    [YOCTO #3357]
    Signed-off-by: Cristiana Voicu <cristiana.voicu@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

32	6	lib/bb/ui/crumbs/builddetailspage.py
4	0	lib/bb/ui/crumbs/builder.py
2	1	lib/bb/ui/crumbs/hobwidget.py
5	0	lib/bb/ui/crumbs/runningbuild.py

commit 410c11dd10736873f2dc587fbe9119c38831e693
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2012-11-21 09:15:34 +0000

    server/process.py: Change timeout error handling
    
    In normal usage, we never hit the timeout issue. If we do, it becomes obvious
    that the current error handling is not good enough. The request may have made it
    to the server and the answer will get queued. This means the next command may get
    the return value from the previous command with suitably puzzling results.
    
    Without rewriting large sections of code, its not possible to avoid this problem.
    It is better to increase the timeout to several seconds giving the server a chance
    to respond and if it does timeout, hard exit since recovery is not possible with the
    code base today.
    
    I'd be happy to see the structure of this code improved but this quick fix at least
    stops corrupted builds from happening which has to be a good thing.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	2	lib/bb/server/process.py

commit 2734240da2cc150f811129a6adf6eb4b2161b204
Author: Seth Bollinger <seth.boll@gmail.com>
Date:   2012-11-15 19:29:40 -0600

    knotty: Colorize knotty interactive console output
    
    Add bold color output to log level name and standard color output to log msg
    when bitbake is run from an iteractive console.  Color output is only
    enabled
    if the terminal supports color.
    
    Used Jason Wessel's recommendation for transparency on verbose, note and
    plain.
    
    Signed-off-by: Seth Bollinger <seth.boll@gmail.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

43	0	lib/bb/msg.py
5	1	lib/bb/ui/knotty.py

commit 64c662ab7f09c2e867445e8ba21ea63ae014d45b
Author: Cristiana Voicu <cristiana.voicu@intel.com>
Date:   2012-11-13 16:48:46 +0200

    hob: warnings during the build should be displayed in the Issues tab
    
    Any issues encountered during the build (fatal or not) is displayed
    in the Issues tab, and the total number of issues is changed.
    
    [YOCTO #3376]
    Signed-off-by: Cristiana Voicu <cristiana.voicu@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	0	lib/bb/ui/crumbs/builder.py
6	2	lib/bb/ui/crumbs/runningbuild.py

commit 2a937cd6a6c3110030b40bc4d85e349b85cb4db7
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2012-11-16 15:30:52 +0000

    runqueue: Allow partial setscene task coverage
    
    When the setscene code was originally written it was thought that we'd
    allow "partial" coverage. For example, if we just want to build the target
    "bash:do_populate_sysroot" and its available from sstate, it makes no sense
    to install gcc-cross's sstate package as its simply not needed.
    
    Due to various other issues in the codebase, this functionality was
    disabled/removed to allow the setscene code and sstate to stabilise and allow
    us to concentrate on other problems.
    
    The time has now come to enable "partial" coverage. There are two major changes
    in this patch:
    
    a) Creation of an unskippable list. This lists direct dependencies of
       build targets and hence things that cannot be skipped.
    
    b) Addition of a handler which looks at a given setscene target and what depends
       on it and then decides whether its necessary.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

72	11	lib/bb/runqueue.py

commit a44285fc4109236ab89f7aad0a1fc9220eec19b6
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2012-11-19 15:01:20 +0000

    parse/cache/cooker: Preserve order in the file inclusion list
    
    The data returned by get_file_depends() may me used in contexts like
    checksums where order is important. The current usage of sets means
    that some of the checksums can change in circumstances they should not.
    
    This patch changes to use lists, thereby removing the problem.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	2	lib/bb/cache.py
2	2	lib/bb/cooker.py
3	4	lib/bb/parse/__init__.py

commit a098cebd5c33ebd704efd35d9e655262283cbe1f
Author: Christopher Larson <chris_larson@mentor.com>
Date:   2012-11-13 12:12:50 -0700

    knotty: kill duplicated import of 'time'
    
    The duplicated import could result in an UnboundLocalError.
    
    Signed-off-by: Christopher Larson <chris_larson@mentor.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

0	1	lib/bb/ui/knotty.py

commit f31447dac92454c822d4ebb7dd48e96c6c69dde4
Author: Robert Yang <liezhi.yang@windriver.com>
Date:   2012-11-06 20:18:42 +0800

    print clear message for "bitbake -e ASSUME_PROVIDED"
    
    "bitbake -e ASSUME_PROVIDED" should fail, but the error message wasn't
    clear enough in the past:
    
    $ bitbake -e bzip2-native
    [snip]
    ERROR: Command execution failed: Traceback (most recent call last):
      File "/buildarea/lyang1/poky/bitbake/lib/bb/command.py", line 94, in
    runAsyncCommand
        commandmethod(self.cmds_async, self, options)
      File "/buildarea/lyang1/poky/bitbake/lib/bb/command.py", line 323, in
    showEnvironmentTarget
        command.cooker.showEnvironment(None, pkg)
      File "/buildarea/lyang1/poky/bitbake/lib/bb/cooker.py", line 325, in
    showEnvironment
        fnid = taskdata.build_targets[targetid][0]
    KeyError: 0
    [snip]
    
    With this patch, the massage will be:
    [snip]
    ERROR: bzip2-native is in ASSUME_PROVIDED
    ERROR: Command execution failed: Exited with 1
    
    Summary: There were 2 ERROR messages shown, returning a non-zero exit code.
    
    [YOCTO #3392]
    
    Signed-off-by: Robert Yang <liezhi.yang@windriver.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

4	0	lib/bb/cooker.py

commit e3619e34d43c3f7725fc83c362d8cbd07e153ebe
Author: Cristiana Voicu <cristiana.voicu@intel.com>
Date:   2012-11-08 15:03:42 +0200

    hob: hob was freezing because it doesn't receives well the log file
    
    -after pressing "build image" button, hob was freezing because it didn't
    receive well the log file
    
    [YOCTO #3398]
    Signed-off-by: Cristiana Voicu <cristiana.voicu@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/ui/crumbs/hobeventhandler.py

commit 717831b8315cb3904d9b590e633000bc897e8fb6
Author: Christopher Larson <chris_larson@mentor.com>
Date:   2012-10-29 13:01:23 -0700

    command: add error to return of runCommand
    
    Currently, command.py can return an error message from runCommand, due to
    being unable to run the command, yet few of our UIs (just hob) can handle it
    today. This can result in seeing a TypeError with traceback in certain rare
    circumstances.
    
    To resolve this, we need a clean way to get errors back from runCommand,
    without having to isinstance() the return value. This implements such a thing
    by making runCommand also return an error (or None if no error occurred).
    
    As runCommand now has a method of returning errors, we can also alter the
    getCmdLineAction bits such that the returned value is just the action, not an
    additional message. If a sync command wants to return an error, it raises
    CommandError(message), and the message will be passed to the caller
    appropriately.
    
    Example Usage:
    
        result, error = server.runCommand(...)
        if error:
            log.error('Unable to run command: %s' % error)
            return 1
    
    Signed-off-by: Christopher Larson <chris_larson@mentor.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

27	16	lib/bb/command.py
1	1	lib/bb/server/process.py
3	7	lib/bb/ui/crumbs/hobeventhandler.py
25	13	lib/bb/ui/depexp.py
10	7	lib/bb/ui/goggle.py
32	14	lib/bb/ui/knotty.py
14	7	lib/bb/ui/ncurses.py

commit 90c0dfc39c3ce13e53c7c91168dc3401f7df476b
Author: Cristiana Voicu <cristiana.voicu@intel.com>
Date:   2012-10-31 15:31:07 +0200

    hob: providing details about process state through porgress bar
    
    -small changes to the text of the progress bar when parsing recipes
    
    [YOCTO #3282]
    Signed-off-by: Cristiana Voicu <cristiana.voicu@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

5	10	lib/bb/ui/crumbs/builder.py
3	3	lib/bb/ui/crumbs/hobeventhandler.py
1	1	lib/bb/ui/crumbs/imageconfigurationpage.py

commit 8d45739f49618757a5d7d79782deda355e3981ec
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2012-10-30 17:20:55 +0000

    bitbake/server: Remove dead console log code
    
    This code is dead and doesn't do anything so lets remove it.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	5	bin/bitbake
2	2	lib/bb/server/none.py
1	1	lib/bb/server/process.py
2	2	lib/bb/server/xmlrpc.py

commit 5d825b31d1133e41d3982db1b94f6a30a6fb99f7
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2012-10-30 17:18:32 +0000

    cooker.py: Don't dump the environment into the console log file
    
    Dumping the environment data into the console log files directory is
    invariably not what the user wants or expects and leads to confusion
    when looking at the log directory.
    
    This change forces the logs to be disabled by default when using
    the -e option.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	0	lib/bb/cooker.py

commit 96683ed68e11672ff22fb4a291d2628676c136f0
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2012-10-30 16:42:27 +0000

    uihelper: Set update flag when start event encountered
    
    Its a minor correctness detail but the update flag should be set
    when Start events are encountered.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	0	lib/bb/ui/uihelper.py

commit d787e4efc106589811651bc18ca48d5223443b95
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2012-10-30 16:39:47 +0000

    knotty: Ensure last tasks are disaplyed correctly in the footer
    
    There was an issue where the last tasks run by bitbake would not
    correctly get displayed in the knotty footer. This was due to the
    total count including active tasks. This change ensures the footer
    is displayed if the are any running tasks.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/ui/knotty.py

commit 2bd9a00facb90f7d76a9bdaa86ca765fb2159e71
Author: Cristiana Voicu <cristiana.voicu@intel.com>
Date:   2012-10-26 16:54:47 +0300

    hob: reordering the layers in the Hob Layers dialog
    
    -since the order of the layers can potentially impact
    the build outcome, users should be able to reorder
    the layers within the layers dialog;
    -used TreeView Drag and Drop
    
    [YOCTO #3270]
    Signed-off-by: Cristiana Voicu <cristiana.voicu@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

41	1	lib/bb/ui/crumbs/hig.py

commit aa64b2e472f8a9713e3dc25647aa2cae474e2622
Author: Cristian Iorga <cristian.iorga@intel.com>
Date:   2012-10-26 12:24:19 +0300

    hob/hig: Hob doesn't save properly proxy settings
    
    User introduced proxy settings were not saved
    when a proxy details input dialog was opened.
    The proxy settings were lost upon return, and
    restored from the previously stored one.
    
    Also:
    Code cleanup:
    details_cb() function duplicate definition
    removed
    
    Fixes [YOCTO #3240]
    
    Signed-off-by: Cristian Iorga <cristian.iorga@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	16	lib/bb/ui/crumbs/hig.py

commit d964d04ff1f59a590bd3ab5430517d79e92536d0
Author: Cristiana Voicu <cristiana.voicu@intel.com>
Date:   2012-10-25 16:43:44 +0300

    hob: during recipe parsing, progress bar text provides details about the process state
    
    - indicating on progress bar that hob has gone from parsing
    recipes to "Generating dependency tree"; this will provide
    some visibility of what has caused the "stop" button state
    to change
    
    [YOCTO #3282]
    Signed-off-by: Cristiana Voicu <cristiana.voicu@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

8	2	lib/bb/ui/crumbs/builder.py

commit 165362a63f085991b6bab63ab90a0c7b9bf6b784
Author: Cristiana Voicu <cristiana.voicu@intel.com>
Date:   2012-10-25 13:36:23 +0300

    hob: add a progress indicator when you select 'view log'
    
    - created a new file named "hobthreads.py", defining a thread
    for opening the log file in a subprocess using subprocess module;
    in the future I think we will add some other threads here, to
    implement some other performance issues
    - on "builddetailspage", "packageselectionpage" and "imagedetailspage"
    I have changed the manner for opening the log file; it uses the thread
    to open the file, and on main thread it creates a dialog to show a
    progress bar, which pulses till the file is open
    - this was added because when the log file is big, it takes time to
    be opened; on the dialog you can use "Cancel" button to terminate the
    process initiated to open the file
    
    [YOCTO #2997]
    Signed-off-by: Cristiana Voicu <cristiana.voicu@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

14	1	lib/bb/ui/crumbs/builddetailspage.py
42	0	lib/bb/ui/crumbs/hig.py
51	0	lib/bb/ui/crumbs/hobthreads.py
15	1	lib/bb/ui/crumbs/imagedetailspage.py
14	1	lib/bb/ui/crumbs/packageselectionpage.py

commit 1c540541c5397c38dca880a79df9ebfcda576d4c
Author: Cristian Iorga <cristian.iorga@intel.com>
Date:   2012-10-25 18:37:30 +0300

    bitbake: hob/builder: Hob crashes because of bad init
    
    Image selection is not properly initialized to none,
    and it used before having a chance to have a value.
    Due to dynamic nature of Python, variable is used before
    it exists, in this case. This causes a crash.
    Bug introduced during the fix of [YOCTO #3228]
    
    Fixes [YOCTO #3334]
    
    Signed-off-by: Cristian Iorga <cristian.iorga@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	0	lib/bb/ui/crumbs/builder.py

commit 00afd6a25c0cc0a4fcddd9f7c26a17ef6c47cbd2
Author: Cristiana Voicu <cristiana.voicu@intel.com>
Date:   2012-10-18 12:09:51 +0300

    hob/settings: add a scroll bar for the box with mirrors
    
    - added a scroll bar in the shared state tab from settings
    - added a signal on it, so when you add a new mirror, it will
    auto-scroll to the end of the list
    
    [YOCTO #3229]
    Signed-off-by: Cristiana Voicu <cristiana.voicu@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

10	3	lib/bb/ui/crumbs/hig.py

commit 93fb0a2c56100b2bbc8769af9ae2343c05e72193
Author: Cristian Iorga <cristian.iorga@intel.com>
Date:   2012-10-17 17:24:06 +0300

    bitbake: hob/builder: Image selection is remembered while changing adv settings
    
    Image selection is remembered correctly even after
    advanced settings have been changed.
    Selected image was reset even when it was not the case.
    
    Fixes [YOCTO #3228]
    
    Signed-off-by: Cristian Iorga <cristian.iorga@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

0	1	lib/bb/ui/crumbs/builder.py

commit 431cb80d4d5222f832f6141b8578291f2f14a131
Author: Cristiana Voicu <cristiana.voicu@intel.com>
Date:   2012-10-17 11:25:47 +0300

    hob/builddetailspage: set "Log" page as default
    
    - when you do a build you should see "Log" page, not
    "Build configuration" page
    
    [YOCTO #2569]
    
    Signed-off-by: Cristiana Voicu <cristiana.voicu@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	0	lib/bb/ui/crumbs/builddetailspage.py

commit d20626bd717bb8f5cfd73b91337af880198db247
Author: Cristiana Voicu <cristiana.voicu@intel.com>
Date:   2012-10-16 14:23:27 +0300

    hob/imageconfigurationpage: progress bar shows when recipe parsing is stopped
    
    -when the recipe parsing process is stopped, the progress bar shows
    "Stopping recipe parsing"
    
    [YOCTO #3259]
    Signed-off-by: Cristiana Voicu <cristiana.voicu@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

9	3	lib/bb/ui/crumbs/imageconfigurationpage.py

commit 4d1d3e5a54eb718e2eee02f734d929f15ccf99ce
Author: Cristian Iorga <cristian.iorga@intel.com>
Date:   2012-10-16 11:52:38 +0300

    bitbake: hob/hobwidget: "Brought in by" column is now displayed correctly
    
    In "Edit Recipes" and "Edit packages" pages, the "Brought in by"
    column is displayed correctly, with the right number of additional
    packages and a proper title.
    
    Fixes [YOCTO #2195].
    
    Signed-off-by: Cristian Iorga <cristian.iorga@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

8	2	lib/bb/ui/crumbs/hobwidget.py
1	1	lib/bb/ui/crumbs/packageselectionpage.py
1	1	lib/bb/ui/crumbs/recipeselectionpage.py

commit 7ab5775fceda1055b86bdc3313fc4bf928bf5155
Author: Andrei Dinu <andrei.adrianx.dinu@intel.com>
Date:   2012-10-12 17:51:30 +0300

    hob: stop build without percentage shown
    
    added a method in progressbar.py that doesn't update the
    percentage in the progress bar shown in hob.
    
    the call of the method is done in builder.py.
    
    Signed-off-by: Andrei Dinu <andrei.adrianx.dinu@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/ui/crumbs/builder.py
5	0	lib/bb/ui/crumbs/progressbar.py

commit 0a755026661a18ae386eb64b807e9e9e8f0dfe4c
Author: Cristiana Voicu <cristiana.voicu@intel.com>
Date:   2012-10-12 15:29:46 +0300

    hob: change behavior for "cancel" button from the Recipe selection page
    
    -when returned to the Image configuration page, after canceling on the
    Recipe selection page, the image selected previously is now shown corectly
    
    [YOCTO #3205}
    Signed-off-by: Cristiana Voicu <cristiana.voicu@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	0	lib/bb/ui/crumbs/builder.py
1	0	lib/bb/ui/crumbs/imageconfigurationpage.py
3	0	lib/bb/ui/crumbs/recipeselectionpage.py

commit 7dcea3884a45973ae332695dc8a53814b701151f
Author: Andrei Dinu <andrei.adrianx.dinu@intel.com>
Date:   2012-10-12 12:06:23 +0300

    hob: image size displayed wrong size in edit packages screen
    
        size_str = '%.1f' % (size*1.0/(1024*1024)) + ' MB'
        from /bitbake/lib/bb/ui/crumbs/hobpages.py file transformed
        the size in MB. In our file it was again multiplied by 1024
        instead of doing a division by 1024, which brought a faulty size on
        the edit packages screen.
    
    Signed-off-by: Andrei Dinu <andrei.adrianx.dinu@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	2	lib/bb/ui/crumbs/packageselectionpage.py

commit cb1354d29c0be27aee57b9783c724457ef6725fb
Author: Bogdan Marinescu <bogdan.a.marinescu@intel.com>
Date:   2012-10-11 14:45:07 +0300

    event/hob: Add a button for network tests in the proxy settings
    
    This patch allows the user to check the network connectivity in
    the "Proxy" page ("Settings" dialog) by adding a button which provides
    this functionality. It also disables retrigerring sanity checks if the
    proxy values are changed, since now the proxy checks are explicit.
    Note that this patch depends on a patch in oe-core
    ("sanity.bbclass: trigger network tests explicitly"). It will
    not work properly if the patch in oe-core is not merged.
    
    [YOCTO #3026]
    
    Signed-off-by: Bogdan Marinescu <bogdan.a.marinescu@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

16	0	lib/bb/event.py
29	18	lib/bb/ui/crumbs/builder.py
207	51	lib/bb/ui/crumbs/hig.py
21	2	lib/bb/ui/crumbs/hobeventhandler.py

commit 4cd0200e96fb282980a945b80af641a6e022e0b4
Author: Andrei Dinu <andrei.adrianx.dinu@intel.com>
Date:   2012-10-09 16:23:26 +0300

    hob-toolchain: task-core-standalone-sdk-target renamed to packagegroup-core-standalone-sdk-target
    
    This change also applies to task-core-standalone-sdk-target-dbg and resolves
    build failures caused by the missing packages.
    
    Signed-off-by: Andrei Dinu <andrei.adrianx.dinu@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/ui/crumbs/hoblistmodel.py

commit 90fd57ee3cb2856c10bda1f5af4879d2b7cf2668
Author: Cristiana Voicu <cristiana.voicu@intel.com>
Date:   2012-10-08 13:05:06 +0300

    hob/imageconfigurationpage: a 'hob-image' appears listed in the base image combo box
    
    -remove this image from image combo box
    
    [YOCTO #3230]
    
    Signed-off-by: Cristiana Voicu <cristiana.voicu@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	0	lib/bb/ui/crumbs/imageconfigurationpage.py

commit 17f28f09452f70dfb67fce9a397a99deec84dfe5
Author: Constantin Musca <constantinx.musca@intel.com>
Date:   2012-10-05 15:31:59 +0300

    hob/hobeventhandler: Describe the runCommand failure exception
    
    [YOCTO #1245]
    
    Signed-off-by: Constantin Musca <constantinx.musca@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	1	lib/bb/ui/crumbs/hobeventhandler.py

commit 5a8e3baa66f845599a616f080a7efce81ecda631
Author: Constantin Musca <constantinx.musca@intel.com>
Date:   2012-10-04 08:15:52 +0300

    hob/hobeventhandler: Throw an exception if runCommand fails
    
    - throw a Hob exception if runCommand returns 'Busy' or
    'No such command'
    
    [YOCTO #1245]
    
    Signed-off-by: Constantin Musca <constantinx.musca@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

6	1	lib/bb/ui/crumbs/hobeventhandler.py

commit 001b1c439ffa450cb8728b0fa9469fed63ae9bed
Author: Constantin Musca <constantinx.musca@intel.com>
Date:   2012-10-03 12:04:17 +0300

    hob/imagedetailspage: disable the deploy tool for qemu machines
    
    - qemu images cannot be deployed to hardware, even if live
    images (hddimg and iso) files are created
    
    [YOCTO #3196]
    
    Signed-off-by: Constantin Musca <constantinx.musca@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	0	lib/bb/ui/crumbs/imagedetailspage.py

commit a84c466eae7c2616c041faf930163f23834f0685
Author: Cristiana Voicu <cristiana.voicu@intel.com>
Date:   2012-10-03 13:06:22 +0300

    hob/settings: alignment and spacing fixes on "Shared state" tab
    
    -alignment and separation on vertical and horizontal axis
    -change controls width
    [YOCTO #3188]
    
    Signed-off-by: Cristiana Voicu <cristiana.voicu@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

43	29	lib/bb/ui/crumbs/hig.py

commit 334125a98ecb8a938aee4bc530205ad75099361c
Author: Ioana Grigoropol <ioanax.grigoropol@intel.com>
Date:   2012-10-03 14:13:18 +0300

    hob/image_details/run_image: Kernel must be set
    
    - when displaying image details, even if the kernel information is not shown, the kernel value must be set (if dealing with qemu) otherwise running the image will throw an error
    Signed-off-by: Ioana Grigoropol <ioanax.grigoropol@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	2	lib/bb/ui/crumbs/imagedetailspage.py

commit 5bc4930c1638db16bcd5f9c8cfc4081f9ffc192b
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2012-10-03 13:27:57 +0100

    fetch2: raise an exception if user specifies protocol=git with http://
    
    It is a common mistake to use http:// and protocol=git when attempting
    to fetch from a git repository using the http protocol; if this is
    detected then throw an error explaining that you need to use git:// with
    protocol=http instead.
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	0	lib/bb/fetch2/wget.py

commit 117b47553970fc5307374cbf500744b7c302efb4
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2012-10-03 13:29:59 +0100

    providers.py: Fix PREFERRED_VERSION containing epochs
    
    For some reason the code calls int() on the epoch component of any
    PREFERRED_VERSION. Since this is compared against strings, the comparison
    would always fail. This removes the stray cast and allows epochs
    in preferred_version to work correctly.
    
    [YOCTO #3187]
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/providers.py

commit d6d991c08f66cf9ab27c53075109212ea9129380
Author: Constantin Musca <constantinx.musca@intel.com>
Date:   2012-10-02 17:59:45 +0300

    hob/hobpages: Generate the title label every time
    
    - the title label is destroyed at page switching (that's why we need
    to generate it every time)
    
    [YOCTO #3195]
    
    Signed-off-by: Constantin Musca <constantinx.musca@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	0	lib/bb/ui/crumbs/hobpages.py

commit 0c0a25672498520fb2c46164f08959dda83c61e0
Author: Cristian Iorga <cristian.iorga@intel.com>
Date:   2012-10-02 17:44:55 +0300

    hob: Improved behavior for error reporting window
    
    Scrollbars have now an automatic behavior, depending on
    the error's text size and error window size.
    
    Fixes [YOCTO #2983]
    
    Signed-off-by: Cristian Iorga <cristian.iorga@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	0	lib/bb/ui/crumbs/hig.py

commit a579754a04bdcf450e6957dde614a15c11df39e2
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2012-10-02 11:27:13 +0100

    Update version to 1.16.0
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	bin/bitbake
1	1	lib/bb/__init__.py

commit db7d98569117b7a75262eb555e1c7ae9a421bdf8
Author: Bogdan Marinescu <bogdan.a.marinescu@intel.com>
Date:   2012-10-01 16:45:25 +0300

    hob: Further improvements to hob dialogs
    
    1. Replace some labels in the "Build environment" tab
    2. 'defaultsetup' changed to 'Default' in the "Image types" tab
    3. Fixed the moving icon in the "Output" tab
    
    For more details: https://bugzilla.yoctoproject.org/show_bug.cgi?id=2162
    
    [Yocto #2162]
    
    Signed-off-by: Bogdan Marinescu <bogdan.a.marinescu@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

23	6	lib/bb/ui/crumbs/hig.py

commit 2391e9ba7034d4f90bafa5732d8efa8166f69950
Author: Constantin Musca <constantinx.musca@intel.com>
Date:   2012-10-01 14:03:22 +0300

    hob: Fix 'User selected' tag functionality
    
    - the 'User selected' tag is only used when the user
    selects a package
    - fix hob to remember which packages are 'User selected'
    - if the package is already brought in by some other package,
    it should not appear as 'User selected'
    
    [YOCTO #3108]
    
    Signed-off-by: Constantin Musca <constantinx.musca@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

9	2	lib/bb/ui/crumbs/builder.py
4	4	lib/bb/ui/crumbs/hoblistmodel.py

commit d6472608112b8af2e98f247e6f89a7f948b2d020
Author: Cristiana Voicu <cristiana.voicu@intel.com>
Date:   2012-10-01 12:11:29 +0300

    hob/settings: Change the 'Delete' button behaviour in the shared state settings tab
    
    -the tab shows an empty mirror row when no mirror is configured
    -able to delete the mirror row even if it's not empty(if it's not
    the first mirror)
    
    [YOCTO #3189]
    Signed-off-by: Cristiana Voicu <cristiana.voicu@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

21	16	lib/bb/ui/crumbs/hig.py

commit 7fc33f0a8a38d9b8984bf884e47e505791536d16
Author: Ioana Grigoropol <ioanax.grigoropol@intel.com>
Date:   2012-09-28 19:06:57 +0300

    hob/image_details: Remove kernel info from details
    
    - removed kernel information from image details
    
    [Yocto #3002]
    
    Signed-off-by: Ioana Grigoropol <ioanax.grigoropol@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

12	12	lib/bb/ui/crumbs/imagedetailspage.py

commit b1b0aabfab3c94c3b515070d0fb4d7819e2548bc
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2012-10-01 22:06:57 +0000

    tests/utils: Add test for explode_dep_versions2
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

15	0	lib/bb/tests/utils.py

commit babeeded21827d8d3e7c7b785a62332ee9d45d4f
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2012-10-01 22:03:43 +0000

    utils: Add explode_dep_versions2 to replace explode_dep_versions
    
    The API for explode_dep_versions is flawed since there can only be one version
    constraint against any given dependency. This adds a new function with an API
    without this limitation. explode_dep_versions() is maintained with a warning
    printed when its used in a situation where information is lost.
    
    This should allow a simple transition to the new API to fix the lost dependency
    information.
    
    join_deps() is updated to deal with data in either format.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

21	6	lib/bb/utils.py

commit 39c1c12c58fadd854098cf14ebe92f4d307a36dd
Author: Mark Hatle <mark.hatle@windriver.com>
Date:   2012-09-30 00:01:45 +0000

    utils.py: Allow explode_dep_versions comparisons to have arbitrary whitespace
    
    Refactor the explode_dep_versions to be more lenient on whitespace values.
    
    The required format is:
       foo (= 1.10)
       foo (=1.10)
       foo ( = 1.10)
       foo ( =1.10)
       foo ( = 1.10 )
       foo ( =1.10 )
    
    Signed-off-by: Mark Hatle <mark.hatle@windriver.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

47	15	lib/bb/utils.py

commit d40448f0483a2959e9dcaac9b6dd35839f396a6e
Author: Mark Hatle <mark.hatle@windriver.com>
Date:   2012-09-30 00:01:44 +0000

    utils.py: Check for duplicate dependency entries
    
    explode_dep_versions is not able to have duplicate entries.  Previously
    duplicate entries ended up with the last item being the one returned to
    the caller.
    
    We now detect a collision.  We do allow an empty item to have a comparison
    added to it, or a duplicate with the same comparison without error.
    
    When a collision is detected a ValueError exception is thrown.
    
    Allowed:
       foo foo (= 1.12) foo
    
    Invalid:
       foo (= 1.12) foo (= 1.13)
    
    Signed-off-by: Mark Hatle <mark.hatle@windriver.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

4	1	lib/bb/utils.py

commit 5b84d88f2a47063197f9a20f8ebf0a7ccf22c2eb
Author: Bogdan Marinescu <bogdan.a.marinescu@intel.com>
Date:   2012-09-28 18:06:06 +0300

    Fix bad merge of #2162
    
    This patch fixes the bad merge of #2162 fixes on master.
    
    Signed-off-by: Bogdan Marinescu <bogdan.a.marinescu@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

4	19	lib/bb/ui/crumbs/hig.py

commit be8bf02f2b347edf5514cafc6cb6a44f71118736
Author: Cristian Iorga <cristian.iorga@intel.com>
Date:   2012-09-28 18:05:53 +0300

    hob: Error reports are done in a clearer way
    
    For long errors (bigger than 200 letters),
    the text box is scrollable and resizable
    and text is selectable.
    
    Additionaly, all message dialogs are modal.
    Otherwise, a user could still interact with hob
    even in an error case, leading to potential problems.
    
    See design details in related bugs.
    
    Fixes [YOCTO #2960], [YOCTO #2983]
    
    Signed-off-by: Cristian Iorga <cristian.iorga@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	3	lib/bb/ui/crumbs/builder.py
44	15	lib/bb/ui/crumbs/hig.py

commit 660a449bdfd154fed556024f166e69c6931ff634
Author: Constantin Musca <constantinx.musca@intel.com>
Date:   2012-09-28 15:37:48 +0300

    hob/builddetailspage: fix failure_primary_action_button_clicked_cb
    
    [YOCTO #3194]
    
    Signed-off-by: Constantin Musca <constantinx.musca@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/ui/crumbs/builddetailspage.py

commit 03f978d21c7bfbf5f1afc741a43766030f2882a8
Author: Cristiana Voicu <cristiana.voicu@intel.com>
Date:   2012-09-28 15:50:12 +0300

    hob/builddetailspage: remove "back" button
    
    When a build fails, there should not be a back button on the screen.
    All available actions are provided within the failure notification,
    so no back button is needed.
    
    [YOCTO #3104]
    Signed-off-by: Cristiana Voicu <cristiana.voicu@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

0	2	lib/bb/ui/crumbs/builddetailspage.py

commit 0a950ee14fce3a0cb938c22d7c717dc93ce6e25f
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2012-09-27 21:56:02 +0000

    knotty: Allow displaying of status when no tasks are active
    
    The console can appear to hang when no tasks are executing even if bitbake
    is iterating through a large number of tasks behind the scenes.
    
    This patch tweaks the footer code to display a status even when no tasks
    are active to give the user better feedback about what is happening.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

5	2	lib/bb/ui/knotty.py

commit 5f892d9b083550e20e37576070ec7d1a94cc88fe
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2012-09-27 23:07:28 +0100

    parse/ConfHandler: Add negative lookahead to spot some quoting problems
    
    Syntax like:
    
    FOO = "bar" # eek"
    
    would result in FOO taking the value 'bar" #eek' which is clearly
    not the intention. Whilst our metadata is riddled with mixtures of even
    quotes like:
    
    FOO = "d.getVar("X")"
    
    odd numbers of quotes seem rare. This patch adds detection of one odd
    quote which we don't have any of in OE-Core so it seems a valid sanity
    improvement.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/parse/parse_py/ConfHandler.py

commit 9a19fe8e8c65b75dbbb4ae5401df6d6838495bdd
Author: Ross Burton <ross.burton@intel.com>
Date:   2012-09-27 16:46:09 +0100

    hob: set modal flag on progress dialog
    
    The entire interface isn't usable whilst the progress dialog is up so we might
    as well set the modal flag so that some WMs (such as GNOME 3) can do nice things
    with the dialog (such as pin it to the titlebar).
    
    Signed-off-by: Ross Burton <ross.burton@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	1	lib/bb/ui/depexp.py

commit ae27a7cf4d31a1b99840a761a27fd6256cb1dd9b
Author: Cristiana Voicu <cristiana.voicu@intel.com>
Date:   2012-09-26 13:44:08 +0300

    hob/settings: implement a new tab in settings dialog to show SSTATE_MIRRORS
    
    Add a new tab to show correctly SSTATE_MIRRORS variable. Now you can add new
    mirrors or delete mirror. "info" image was also changed( it is smaller, so it
    can be next to labels).
    >From "Build environment" tab, SSTATE_DIR and SSTATE_MIRRORS vars were removed.
    
    [YOCTO #2893]
    
    Signed-off-by: Cristiana Voicu <cristiana.voicu@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

-	-	lib/bb/ui/icons/info/info_display.png
-	-	lib/bb/ui/icons/info/info_hover.png

commit 5bc0f0e70f7272ff84aaeca43dcf4bb4bc0f5c3f
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2012-09-28 09:55:57 +0100

    Add missing file from previous commit
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

85	0	lib/bb/ui/crumbs/sanitycheckpage.py

commit 6f59db920ca4f527606670969c79afbf34eaff81
Author: Constantin Musca <constantinx.musca@intel.com>
Date:   2012-09-26 11:08:15 +0300

    hob/builder: When you stop a build, Hob should tell you stopping is happening
    
    - use the progress bar text to indicate the stopping status
    - the text should say: 'Stopping the build...'
    
    [YOCTO #3152]
    
    Signed-off-by: Constantin Musca <constantinx.musca@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	0	lib/bb/ui/crumbs/builder.py

commit ce5c7a95a359cdaecab7c4a519ad4f9df029da82
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2012-09-25 15:17:17 +0100

    lib/bb/data.py: improve output for expansion errors
    
    Instead of logging the function/variable separately as a NOTE when
    failing to expand, re-raise ExpansionError with more contextual
    information. This means that the full details are reported in Hob as
    well as actually reporting the original error message in any UI where
    we previously did not. For example, we used to get this with tab/space
    indentation issues in a python function:
    
    NOTE: Error expanding variable populate_packages
    ERROR: Unable to parse /path/to/recipename.bb
    
    Now, we will get this:
    
    ERROR: ExpansionError during parsing /path/to/recipename.bb: Failure
     expanding variable populate_packages: IndentationError: unindent does
     not match any outer indentation level (<string>, line 4)
    
    Fixes [YOCTO #3162].
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	3	lib/bb/data.py
4	1	lib/bb/data_smart.py

commit 84ab874c8818484d37ee438aab27486fff497705
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2012-09-25 16:25:28 +0100

    cooker: adjust layer dependency error messages
    
    Make these a little easier to understand.
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	3	lib/bb/cooker.py

commit 2cc5f517224cee8e2dd2b045a277423ce66ec886
Author: Cristiana Voicu <cristiana.voicu@intel.com>
Date:   2012-09-27 17:12:59 +0300

    hob/recipeselectionpage: recipes should not be shown brought in by themselves
    
    [YOCTO #3107]
    Signed-off-by: Cristiana Voicu <cristiana.voicu@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

4	0	lib/bb/ui/crumbs/hoblistmodel.py

commit a78f9ded7896432b107f34c0bb608b389fdb676a
Author: Robert Yang <liezhi.yang@windriver.com>
Date:   2012-09-26 17:07:57 +0800

    fetch2: add "-d" option to cpio
    
    Add "-d" option to cpio since it is useful:
      -d
      --make-directories
      Create leading directories where needed.
    
    [YOCTO #3137]
    
    Signed-off-by: Robert Yang <liezhi.yang@windriver.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	2	lib/bb/fetch2/__init__.py

commit b45438555ecf2e25ebb99324a18d31c812a2738a
Author: Bogdan Marinescu <bogdan.a.marinescu@intel.com>
Date:   2012-09-27 17:13:45 +0300

    Multiple user interface fixes in settings
    
    1. Move the "Others" tab from advanced settings to simple settings
    2. Organize content of tabs into headings
    3. Match various labels in the settings with the design
    4. Clean up config_md5 in both simple and advanced settings
    
    This patch implements a part of the changes requested by Belen in the settings dialogs.
    The second version of the patch addresses all the UI changes requested by Belen (more
    details are in the bug description): alphabetical ordering of the image types and
    warnings if no image type is selected.
    
    [YOCTO #2162]
    
    Signed-off-by: Bogdan Marinescu <bogdan.a.marinescu@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	0	lib/bb/ui/crumbs/builder.py
149	54	lib/bb/ui/crumbs/hig.py

commit d11fe38a38adc10eedec3b4c251c575b95339774
Author: Constantin Musca <constantinx.musca@intel.com>
Date:   2012-09-27 13:49:12 +0300

    hob/runningbuild: Add missing logging level argument
    
    [YOCTO #3170]
    
    Signed-off-by: Constantin Musca <constantinx.musca@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/ui/crumbs/runningbuild.py

commit b48f1351271cc066ffe919db112b14834a6d8f8f
Author: Bogdan Marinescu <bogdan.a.marinescu@intel.com>
Date:   2012-09-26 16:59:57 +0300

    Add sanity check progress screen
    
    This patch adds a sanity check progress screen to hob. The screen
    is displayed when Hob executes the sanity check procedure. The screen
    is displayed for at least 5 seconds. If a network error is detected,
    a special dialog is displayed which lets the user open the proxy
    configuration page directly.
    Note that currently bitbake triggers the network tests only when
    the value of its TMPDIR variable changes, which happens fairly rare
    on my system. This is the subject of another bug (#3026).
    Version 2 of the patch splits the changes in two parts (sanity.bbclass
    belongs to oe-core).
    
    [YOCTO #3025]
    
    Signed-off-by: Bogdan Marinescu <bogdan.a.marinescu@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	1	lib/bb/event.py
111	13	lib/bb/ui/crumbs/builder.py
5	0	lib/bb/ui/crumbs/hig.py
2	3	lib/bb/ui/crumbs/hobeventhandler.py

commit 53d5d542cd0197ca67c5f90a57808af2f19ff56d
Author: Cristiana Voicu <cristiana.voicu@intel.com>
Date:   2012-09-26 16:11:41 +0300

    hob/builddetailspage: change branch field
    
    When a user makes a build from a tarball, it shows fatal error in branch field.
    Now it not complains as a fatal error. It is a normal message.
    
    [YOCTO #3114]
    
    Signed-off-by: Cristiana Voicu <cristiana.voicu@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	0	lib/bb/ui/crumbs/builddetailspage.py

commit 9cdfaa17309d368c3bbae0f1cce0ad875d340e83
Author: Ioana Grigoropol <ioanax.grigoropol@intel.com>
Date:   2012-09-26 15:13:42 +0300

    hob: Buttons width and height are taken for host
    
    - removed all set_size_request calls for buttons in order to:
            - force autosizing of buttons with regard to the text length
            - use host theme default height for buttons
    - modified buttons on image details page to have the same height (default host one) and the width of the button with the largest text
    - modified Stop button on build details page to have the default height by directly attaching it to the containing table instead of hbox
    
    Signed-off-by: Ioana Grigoropol <ioanax.grigoropol@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

4	4	lib/bb/ui/crumbs/builddetailspage.py
1	1	lib/bb/ui/crumbs/hig.py
8	7	lib/bb/ui/crumbs/imageconfigurationpage.py
85	16	lib/bb/ui/crumbs/imagedetailspage.py
1	1	lib/bb/ui/crumbs/packageselectionpage.py
1	1	lib/bb/ui/crumbs/recipeselectionpage.py

commit 1a81e27365d969e4ad4b4f0aec290aa967a8a35f
Author: Cristiana Voicu <cristiana.voicu@intel.com>
Date:   2012-09-26 13:44:08 +0300

    hob/settings: implement a new tab in settings dialog to show SSTATE_MIRRORS
    
    Add a new tab to show correctly SSTATE_MIRRORS variable. Now you can add new
    mirrors or delete mirror. "info" image was also changed( it is smaller, so it
    can be next to labels).
    >From "Build environment" tab, SSTATE_DIR and SSTATE_MIRRORS vars were removed.
    
    [YOCTO #2893]
    
    Signed-off-by: Cristiana Voicu <cristiana.voicu@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

4	4	lib/bb/ui/crumbs/builder.py
167	13	lib/bb/ui/crumbs/hig.py
3	3	lib/bb/ui/crumbs/hobeventhandler.py
1	1	lib/bb/ui/crumbs/template.py

commit 8e650b3307b60cfe8e7439ea6891c3a85f785af9
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2012-09-25 15:55:27 +0100

    fetch2/git: Don't use deprecated API
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/fetch2/git.py

commit 88cd9586f0f6a413c1a6800b3e57444f453afb73
Author: Cristiana Voicu <cristiana.voicu@intel.com>
Date:   2012-09-24 16:30:59 +0300

    hob/packageselectionpage:cancel button should redirect to Image conf screen
    
    Cancel button brings you to Image configuration page.
    
    [YOCTO #3105]
    Signed-off-by: Cristiana Voicu <cristiana.voicu@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	3	lib/bb/ui/crumbs/packageselectionpage.py

commit f5a21da2faf7ede56cf211b96dffd8aaa4b485b8
Author: Cristiana Voicu <cristiana.voicu@intel.com>
Date:   2012-09-24 15:17:58 +0300

    hob/builddetailspage: change tooltips and remove a dialog from "Build stopped" message
    
    When you stop a build, a "Build stopped" message appears. I have changed 2 tooltips and
    also eliminate the alert that comes up when you click 'Edit packages'.
    
    [YOCTO #3160]
    Signed-off-by: Cristiana Voicu <cristiana.voicu@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

7	2	lib/bb/ui/crumbs/builddetailspage.py

commit c6a367bc3224adafca698a4ffc5414ad83842c16
Author: Jason Wessel <jason.wessel@windriver.com>
Date:   2012-09-17 17:43:31 -0500

    bitbake: Unbuffer stdout for log files
    
    It is possible to lose critical log data when python exits in an
    unorderly fashion via segmentation fault or certain types of crashes.
    This is because the buffer characteristics are inherited from the top
    level stdout, which should be set to unbuffered, for the purpose of
    all the forked children.
    
    This pushes the buffering to the OS, instead of having python managing
    the buffers in its stream handler class.
    
    This change is also to provide the ability to tail logs written from
    processes in "real time" because they would be written in an orderly
    fashion depending upon the OS characteristics for the file I/O.
    
    Signed-off-by: Jason Wessel <jason.wessel@windriver.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

8	0	bin/bitbake

commit cffe80d82a46aaf52ff4a7b6409435754043553f
Author: Jason Wessel <jason.wessel@windriver.com>
Date:   2012-09-17 17:43:49 -0500

    event.py, knotty.py, ncurses.py, runningbuild.py: Add support for LogExecTTY event
    
    The LogExecTTY even is intended to provide the ability to spawn a task
    on a the controlling tty, if a tty is availble.  When a controlling
    tty is not availble the previous behavior is preserved where a warning
    is issued about the action an end user must execute.
    
    All the available UI's were tested against the new event type.
    
    This feature is primarily intended for hooking up a screen client
    session automatically on the controlling tty to allow for a more
    streamlined end user experience when using a pure command line driven
    environment.  The changes that send the LogExecTTY event are in the
    oe-core side.
    
    Signed-off-by: Jason Wessel <jason.wessel@windriver.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

9	0	lib/bb/event.py
15	0	lib/bb/ui/crumbs/runningbuild.py
19	0	lib/bb/ui/knotty.py
2	0	lib/bb/ui/ncurses.py

commit a6cc53cdb3c34fc8fd01bbc5ce0008429dc6785c
Author: Jason Wessel <jason.wessel@windriver.com>
Date:   2012-09-17 17:43:48 -0500

    progress.py: Fix traceback when running goggle ui
    
    The following traceback appears when running the following command after the
    devshell is exited.
    
    bitbake -u goggle -c devshell busybox
    
    -- traceback --
    Traceback (most recent call last):
      File "/work/bitbake/lib/bb/ui/goggle.py", line 35, in event_handle_idle_func
        build.handle_event (event, pbar)
      File "/work/bitbake/lib/bb/ui/crumbs/runningbuild.py", line 299, in handle_event
        pbar.set_text(event.msg)
    AttributeError: 'ProgressBar' object has no attribute 'set_text'
    
    Signed-off-by: Jason Wessel <jason.wessel@windriver.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	0	lib/bb/ui/crumbs/progress.py

commit 440e479f3e248482c38c149643403c6907ac7034
Author: Jason Wessel <jason.wessel@windriver.com>
Date:   2012-09-17 17:43:17 -0500

    runqueue: Add --no-setscene to skip all setscene tasks
    
    Mainly intended for the purpose of debugging or forcing builds
    from source, the --no-setscene will prevent any setscene
    tasks from running.
    
    Signed-off-by: Jason Wessel <jason.wessel@windriver.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	0	bin/bitbake
7	6	lib/bb/runqueue.py

commit 1270a07713e2a6c6e6fadcc61b785aebc99ae17b
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2012-09-24 08:37:09 +0000

    fetch2/git: Add missing mkdir
    
    bitbake-selftest is failing due to directories not being created. This adds in an
    appropriate mkdir so the tests can complete. Presumably in general OE use, something
    else is ensuring the parent directory is created.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	0	lib/bb/fetch2/git.py

commit 2793413106c925b06783beb7413aa87cbcf246c3
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2012-09-23 18:05:36 +0100

    fetch2: improve error output for checksum failures
    
    * Don't print the full exception in the initial warning - if we later
      succeed in fetching the file from a mirror, we won't usually need the
      details (which are in the fetch log if they are needed); otherwise the
      full error will be printed when the fetch operation fails. Also adjust
      the conditional block so that we don't print another warning just
      mentioning we're going to try mirrors.
    * Call logger.error() so that with knotty the full log is not printed
    * Provide an explanation around the lines we print for easily updating
      the checksums in the recipe. We don't want users to be just blindly
      updating the recipe in case of a transient failure or deliberately
      altered remote file.
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

6	3	lib/bb/fetch2/__init__.py

commit a75505a52e4da918222100221f79e8a658f90446
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2012-09-23 18:05:35 +0100

    fetch2: make fetch failure errors more readable
    
    Most of the time we don't need to see the fetch command; the fetch log
    includes the command as a debug message in any case, so omit it. Also
    adjust the way command output is printed (we don't need stderr/stdout
    labelled, and print "no output" instead of "output:\nNone" when there is
    no output.
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

7	1	lib/bb/fetch2/__init__.py

commit 70eebc184eb1ab3678be87bed019b5beadecdc89
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2012-09-23 14:14:24 +0100

    lib/bb/runqueue.py: fix exceptions with -k and failed targets
    
    If a target dependency is marked as failed and yet we are continuing on
    because -k has been specified, don't try to access the dependency's data
    in taskData.build_targets since it will have been removed. This fixes
    "IndexError: list index out of range" errors in this situation.
    
    Also, do not print the "unhandled exception" message when SystemExit is
    raised since we will have reported the actual error already in this
    case (e.g. when -k has been specified and some targets failed).
    
    Fixes [YOCTO #3133].
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	1	lib/bb/runqueue.py

commit 54a16ac999d4a2c4c3f8a4531e8c6fabc39a4147
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2012-09-21 15:47:26 +0100

    hob: fix Gtk-WARNINGs due to invalid markup on Back button
    
    You can't use markup characters (e.g '<' or '>') in the labels for many
    widgets - you must use the appropriate entities instead.
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/ui/crumbs/builddetailspage.py

commit a79eb5d918239db1dade8134743e6142a4854930
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2012-09-21 15:47:25 +0100

    hob: remove confirmation dialog on close
    
    This is not necessary for modern applications - instead we just need to
    check if we're in the middle of a build and if so, do the same thing as
    pressing the "Stop" button.
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

4	13	lib/bb/ui/crumbs/builder.py

commit c3b623dc7d546a1ededdb532dcbcba4a6230bc65
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2012-09-21 15:47:24 +0100

    hob: allow configuring default machine using HOB_MACHINE
    
    Allow specifying HOB_MACHINE in local.conf to set the initially
    selected machine. With this set, Hob will select the specified machine
    and then jump straight into parsing recipes. If you do wish to change
    the selected machine with HOB_MACHINE set you still can - you just need
    to stop the parsing process first.
    
    Fixes [YOCTO #3148].
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	0	lib/bb/ui/crumbs/builder.py

commit cf0a67d62f631aa48d1afc3fbdd0f73995b1c401
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2012-09-21 15:47:23 +0100

    hob: don't show error dialog for errors during building
    
    During building we already report errors in a special tab and
    indicate when the build has failed; bringing up a dialog was a
    regression introduced in bitbake revision
    5bab81b124087d63d6eb62a861e1241714fcd483.
    
    Fixes [YOCTO #3151].
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

5	4	lib/bb/ui/crumbs/hobeventhandler.py

commit c366f4314c29b873a486daa9a0a4e29bb4225dd6
Author: Constantin Musca <constantinx.musca@intel.com>
Date:   2012-09-21 13:28:43 +0300

    hob: The title of the packages screen depends on the screen you arrive from
    
    - If you arrive to the packages screen from the recipes screen, the title
    should say: 'Step 2 of 2: Edit packages'
    - If you arrive to the packages screen from the image details screen, the
    title should say: 'Edit packages'
    - The title of the recipes screen should say 'Step 1 of 2: Edit recipes'
    
    [YOCTO #2982]
    
    Signed-off-by: Constantin Musca <constantinx.musca@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	0	lib/bb/ui/crumbs/builder.py
6	3	lib/bb/ui/crumbs/hobpages.py
1	1	lib/bb/ui/crumbs/recipeselectionpage.py

commit 5ef9d98b343b9ed05167e5471eb9f7f12e97b045
Author: Ross Burton <ross.burton@intel.com>
Date:   2012-09-18 15:55:24 +0100

    hob: Don't set busy cursor on the root window, just our window
    
    [ YOCTO #3127 ]
    
    Signed-off-by: Ross Burton <ross.burton@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	2	lib/bb/ui/crumbs/builder.py

commit a6afd15b7a40919313e26777b514ae44b587a0f6
Author: Cristiana Voicu <cristiana.voicu@intel.com>
Date:   2012-09-18 18:15:55 +0300

    hob: add a top bar when building process is stopped
    
    When a build was stopped, it wasn't obvious what to do next.
    Now, on the page it appers a top bar with 3 buttons: "edit image",
    "open log", "build new image"
    
    [YOCTO #2537]
    Signed-off-by: Cristiana Voicu <cristiana.voicu@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

72	4	lib/bb/ui/crumbs/builddetailspage.py
20	8	lib/bb/ui/crumbs/builder.py

commit d1c3a9de875fb488a56ab5cb1d2f8e2f24f31d69
Author: Trevor Woerner <twoerner@gmail.com>
Date:   2012-09-18 23:00:33 -0400

    cooker: Clarify package/recipe wording
    
    When the '-s' option is run, change the heading above the list of recipes
    to say "Recipe Name" instead of "Package Name".
    
    Signed-off-by: Trevor Woerner <twoerner@gmail.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	2	lib/bb/cooker.py

commit c5fd1824c9794923576ec1e747536c0430542fd1
Author: Cristiana Voicu <cristiana.voicu@intel.com>
Date:   2012-09-19 10:36:57 +0300

    hob/packageselectionpage: "Cancel" button returns to "Image configuration" screen
    
    Once package building completes, you can customise the list of
    packages that will go into the ﬁnal image. Once you have made
    the changes you need, you can either build your image, or you
    can exit the process and go back to the 'Image conﬁguration'
    screen by selecting 'Cancel'.
    
    [YOCTO #3105]
    Signed-off-by: Cristiana Voicu <cristiana.voicu@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/ui/crumbs/packageselectionpage.py

commit 5bab81b124087d63d6eb62a861e1241714fcd483
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2012-09-19 11:25:42 +0100

    hob: report event handler failures
    
    If an event handler failed we were not recieving an error message -
    parsing just "froze" at 99%. This is because we were expecting a
    CommandFailure event and this never happened in the case of
    RequestPackageInfo which is where the failure was occurring.
    
    This also required tweaking the error formatting slightly, taking the
    return value of the format function rather than the message property
    since the latter only seems to contain the first line without the
    traceback in the case of event handler failure. Other error cases were
    tested and their message formatting is unaffected by this change.
    
    Final part of the fix for [YOCTO #2651].
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

13	7	lib/bb/ui/crumbs/hobeventhandler.py

commit 6d56bec4464da14d7fde0e60946be43293ad6e52
Author: Bogdan Marinescu <bogdan.a.marinescu@intel.com>
Date:   2012-09-20 13:27:56 +0300

    hob/settings: Remove stray "distro" combobox from simple settings
    
    The "distro" combobox was moved to advanced settings, but it
    was also present in simple settings. This patch removed it
    from simple settings.
    
    Signed-off-by: Bogdan Marinescu <bogdan.a.marinescu@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

0	10	lib/bb/ui/crumbs/hig.py

commit e026469b307522e5b6a680e0ae5587749d33dcae
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2012-09-18 11:32:04 +0100

    build/siggen: Add support for stamp 'clean' masks
    
    Currently when we execute a task, we don't remove other potentially stale
    stamps. This can mean if you switch between two different versions of a
    recipe without a clean, the build can get very confused.
    
    This patch adds in functionality to allow a wildcard expression of stamp
    files to be removed when creating a new stamp file. This patch adds in
    the core of the code to enable this but it also requires metadata support
    to enable it.
    
    When writing this improvement I went through several different options but
    this was the only way I could find to allow things like noexec tasks to
    function correctly (where stamps need to be created without the data store).
    
    [YOCTO #2961]
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

29	0	lib/bb/build.py
7	1	lib/bb/cache.py
11	2	lib/bb/siggen.py

commit 55382f0aac84b8f81cad0b82053c0b8295c33e54
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2012-09-20 11:34:18 +0100

    fetch2/cvs: Fix parameter spacing
    
    Add in misssing space between the parameters. Reported by
    Jate Sujjavanich <Jate.Sujjavanich@myfuelmaster.com>.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	2	lib/bb/fetch2/cvs.py

commit 78eee8c70a80997293df99475153aed0b2ad0a17
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2012-09-20 11:32:02 +0100

    fetch2/cvs: Clean up various data store references
    
    The code in the CVS fetcher is elderly and there are simpler ways of
    using the data store. This updates to use the modern APIs.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

8	12	lib/bb/fetch2/cvs.py

commit 02ccc1396005ce0b7a2150a5ce12b723df21d464
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2012-09-20 11:25:19 +0100

    fetch2/cvs: Fix localdata variable reference
    
    The localdata variable was removed, fix up a lost reference to this.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/fetch2/cvs.py

commit a363f59579e01cb7bd39be2ce73f22c875c62ce7
Author: Bogdan Marinescu <bogdan.a.marinescu@intel.com>
Date:   2012-09-14 17:17:13 +0300

    hob: Fix settings dialog issues
    
    Fix some issues with the settings dialog that were introduced as
    a result of merging the fix for #2162.
    
    [YOCTO #3117]
    
    Signed-off-by: Bogdan Marinescu <bogdan.a.marinescu@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

117	117	lib/bb/ui/crumbs/hig.py
1	1	lib/bb/ui/crumbs/imagedetailspage.py

commit 7bc9b0c1c2544b494959b13ac79ac3e52edb4fe3
Author: Constantin Musca <constantinx.musca@intel.com>
Date:   2012-09-14 12:58:53 +0300

    hob: rename 'View log' to 'Open log'
    
    Rename all the 'View log' buttons to 'Open log' for
    consistency.
    
    [YOCTO #3045]
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

6	6	lib/bb/ui/crumbs/imagedetailspage.py
6	6	lib/bb/ui/crumbs/packageselectionpage.py

commit 44aa0b0537d3fbd1272015e7677948f84d8c0607
Author: Christopher Larson <chris_larson@mentor.com>
Date:   2012-09-10 22:23:19 +0000

    compat, event: use OrderedDict from py2.7 for the event handlers
    
    This ensures that our event handlers get run in registration order, making the
    behavior more deterministic. I pulled in the python2.7 OrderedDict to avoid
    essentially reimplementing a version of it ourselves, figuring we can drop it
    when we bump our required python version next.
    
    Signed-off-by: Christopher Larson <chris_larson@mentor.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

213	0	lib/bb/compat.py
2	1	lib/bb/event.py

commit ac75b06744e73399ca1fbda322ef851ae5754b0a
Author: Valentin Popa <valentin.popa@intel.com>
Date:   2012-09-06 10:58:32 +0300

    Implement 'settings' dialog as designed
    
    [YOCTO #2162]
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

29	3	lib/bb/ui/crumbs/builder.py
244	132	lib/bb/ui/crumbs/hig.py
20	3	lib/bb/ui/crumbs/imageconfigurationpage.py

commit 055b72a230e6b0b1cababd65372c62d9ddce385e
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2012-09-13 15:25:51 +0100

    cooker: Fix priority for virtual recipes
    
    When making filename comparisons for recipes for priority calculations,
    we need to split off any virtual prefix. Without this, BBCLASSEXTEND
    version of recipes don't follow the priority settings they should.
    
    [YOCTO #2933]
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	1	lib/bb/cooker.py

commit 69ad4ebd1379e804d0753bd4ee704b602b5efcc4
Author: Constantin Musca <constantinx.musca@intel.com>
Date:   2012-09-13 14:33:34 +0300

    hob/builddetailspage: Add tooltips to the build failed notification
    
    [YOCTO #3046]
    
    Signed-off-by: Constantin Musca <constantinx.musca@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	0	lib/bb/ui/crumbs/builddetailspage.py

commit 8668a94cb1841798636b68fe123400d6b81f6574
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2012-09-11 10:37:22 +0100

    lib/bb/event: improve handling of event queue on exit
    
    If BitBake exits before a UI handler (server) has been registered, we
    print the event queue; if there are any errors or other non-debug
    messages just print these and suppress the rest of the message queue.
    
    This improves the output when sanity check failures occur with OE-Core
    by avoiding printing a long stream of uninformative debug messages.
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

12	0	lib/bb/event.py

commit 6783538884adecd914909a9ab4ca73c27575f3ad
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2012-09-11 12:00:05 +0100

    hob: format error messages properly
    
    Error messages that use arguments need to be formatted properly, or we
    don't get the full message. Use a formatter to do this when an error
    occurs.
    
    Partial fix for [YOCTO #2983].
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	1	lib/bb/ui/crumbs/hobeventhandler.py

commit ca2464561d54d59d1146359e41eb08201954fc21
Author: Cristiana Voicu <cristiana.voicu@intel.com>
Date:   2012-09-11 10:40:06 +0300

    hob/imagedetailspage: change "FileCreated" label to "Files created"
    
    [YOCTO #2998]
    
    Signed-off-by: Cristiana Voicu <cristiana.voicu@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/ui/crumbs/imagedetailspage.py

commit 485e69d41e220ed4e8efc89a357a8d395e44da9f
Author: Jessica Zhang <jessica.zhang@intel.com>
Date:   2012-09-11 16:55:52 -0700

    Fixed hob proxy tab tooltip text per review suggestions [YOCTO #2499]
    
    Signed-off-by: Jessica Zhang <jessica.zhang@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

5	5	lib/bb/ui/crumbs/hig.py

commit db16f575a774de7d9d44b4bc727b252de5d0f34d
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2012-09-11 17:52:01 +0100

    hob: sort base image drop-down list
    
    Sort the list of base images to make it easier to find a specific image
    in the list. Note that "Create your own image" still remains the last
    item in the list.
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	0	lib/bb/ui/crumbs/imageconfigurationpage.py

commit 855b71d8a8e468bfeff9e1a6699d79d68ab27aa1
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2012-09-11 17:52:00 +0100

    lib/bb/command.py: ensure setVariable only sets values as strings
    
    This is the interface Hob uses to set variable values in many instances,
    and at the moment it is possible that some of the values it passes are
    not strings. If a non-string value gets into the datastore it can
    trigger exceptions during parsing when we attempt to expand the variable
    and substitute in the non-string value.
    
    This fixes using the meta-ti layer within Hob - it currently has a
    reference to BB_NUMBER_THREADS within a shell function and since this
    is a variable that Hob was setting from its configuration as an integer,
    due to the above this was triggering an ExpansionError.
    
    Fixes [YOCTO #2875].
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/command.py

commit eca0352195d2d8ae8ef15baab9737884ec674a46
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2012-09-11 17:51:59 +0100

    hob: don't reorder layers list
    
    We cannot reorder this list - it must stay in the order shown in the
    dialog (which may in future be configurable by the user).
    
    Fixes [YOCTO #2649].
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	11	lib/bb/ui/crumbs/hig.py

commit 81b0c0cd15cbd61285e6525f482412051371ea4c
Author: Cristiana Voicu <cristiana.voicu@intel.com>
Date:   2012-09-10 15:49:57 +0300

    hob/packageselectionpage: restore selected packages
    
    After "Cancel" action, selected packages are restored to default.
    
    [YOCTO #2984]
    Signed-off-by: Cristiana Voicu <cristiana.voicu@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/ui/crumbs/builder.py
2	3	lib/bb/ui/crumbs/packageselectionpage.py

commit a3bf87a90198bf6127663c27d8be086dab04aaf9
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2012-09-10 18:26:46 +0100

    hob: rename task -> packagegroup in recipe selection
    
    This changes the filtering to use the inheritance of
    packagegroup.bbclass to determine if a recipe is a package group.
    
    Also makes the tab tooltip text generic; these recipes could come from
    any enabled layer, not just the default ones.
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	2	lib/bb/ui/crumbs/hoblistmodel.py
7	7	lib/bb/ui/crumbs/recipeselectionpage.py

commit 563ea5233a5ab1629c51e802d04280692f96c596
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2012-09-10 18:11:17 +0100

    hob: ensure error message text is properly escaped
    
    Our poor implementation of markup escaping was causing invalid
    markup, leading to the error dialog being blank. Use the glib markup
    escaping function provided by PyGTK+ to do this properly and avoid the
    blank error dialogs.
    
    Partial fix for [YOCTO #2983].
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	11	lib/bb/ui/crumbs/builder.py

commit 56cee6a958843b03c5389d4a45245a04d1e03327
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2012-09-10 15:36:29 +0100

    hob: use correct semantics for dealing with pkgdata
    
    Some of these values may or may not be overridden on a per-package
    basis, so handle them accordingly.
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

20	15	lib/bb/ui/crumbs/hoblistmodel.py

commit 44a3fb49e817be641090d5d1bce7b586af407d71
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2012-09-10 21:50:34 +0100

    tinfoil: Add file inadvertently not committed
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

98	0	lib/bb/tinfoil.py

commit 675b237a284dff84e972546774b69e2f89afb360
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2012-09-07 16:22:54 +0100

    cooker: fix handling of exceptions during exception handling
    
    If an exception occurs during handling another exception we were
    getting a useless traceback such as the following, after which
    BitBake froze:
    
    ERROR: Command execution failed: Traceback (most recent call last):
      File "/home/user/poky/poky/bitbake/lib/bb/command.py", line 84, in runAsyncCommand
        self.cooker.updateCache()
      File "/home/user/poky/poky/bitbake/lib/bb/cooker.py", line 1207, in updateCache
        if not self.parser.parse_next():
      File "/home/user/poky/poky/bitbake/lib/bb/cooker.py", line 1694, in parse_next
        logger.error('Unable to parse %s', value.recipe,
    AttributeError: 'exceptions.TypeError' object has no attribute 'recipe'
    
    Fix this to print an actual traceback of the exception and exit
    gracefully (well, as gracefully as possible under the circumstances).
    
    The general fix for [YOCTO #2977].
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

7	2	lib/bb/cooker.py

commit 9d4150d99051d24ff218e8a43664ceaf524b19c7
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2012-09-07 16:22:53 +0100

    fetch2: fix malformed URL causing a useless traceback
    
    The implementation of NoMethodError and MalformedUrl was broken - if you
    just set self.args in an exception class to a string it treats it as a
    list and then fails later on with a TypeError due to the number of
    arguments not matching up.
    
    This nasty exception during exception handling was breaking the normal
    exception flow (fixed separately), which meant that if you had a
    malformed URL or invalid protocol in SRC_URI you would get the
    following:
    
    ERROR: Command execution failed: Traceback (most recent call last):
      File "/home/user/poky/poky/bitbake/lib/bb/command.py", line 84, in runAsyncCommand
        self.cooker.updateCache()
      File "/home/user/poky/poky/bitbake/lib/bb/cooker.py", line 1207, in updateCache
        if not self.parser.parse_next():
      File "/home/user/poky/poky/bitbake/lib/bb/cooker.py", line 1694, in parse_next
        logger.error('Unable to parse %s', value.recipe,
    AttributeError: 'exceptions.TypeError' object has no attribute 'recipe'
    
    A specific fix for [YOCTO #2977].
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	2	lib/bb/fetch2/__init__.py

commit 4d208aaedd60f79a4277f501fdbf8c2afc32c250
Author: Cristiana Voicu <cristiana.voicu@intel.com>
Date:   2012-09-10 11:49:27 +0300

    hob/imageconfigurationpage: remove or_label reference
    
    When or_label was removed, I forgot to remove also the references to it.
    
    [YOCTO #3010]
    
    Signed-off-by: Cristiana Voicu <cristiana.voicu@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

0	2	lib/bb/ui/crumbs/imageconfigurationpage.py

commit 57055d337a2c9997a6e5d5bdabaec396e3e128e9
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2012-09-07 14:34:35 +0100

    fetch2: replace double slashes in paths in encodeurl()
    
    This ensures that if all a MIRRORS entry does is add a slash, this does
    not result in a circular loop.
    
    Fixes [YOCTO #3073].
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	0	lib/bb/fetch2/__init__.py

commit a41098a2dacbd903422ccdcd1885b0f351c7ddf3
Author: Cristiana Voicu <cristiana.voicu@intel.com>
Date:   2012-09-07 15:00:11 +0300

    hob: print message when DISPLAY is not set
    
    If DISPLAY wasn't set, launching hob has printed a traceback
    difficult to understand. Now, the exception is caught and it
    shows a human message.
    
    [YOCTO #2596]
    
    Signed-off-by: Cristiana Voicu <cristiana.voicu@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

9	2	lib/bb/ui/crumbs/builder.py

commit 6dc3263d60a6d35f9eebfcdbc2665201ee40b953
Author: Liming An <limingx.l.an@intel.com>
Date:   2012-09-05 19:13:48 +0800

    Hob: change view of 'recipes' and 'packages' tables as ui design
    
    changed the order of task tables,
    cancel the 'description' column,
    add the binb total number indicator, and so on
    
    [YOCTO 2195]
    
    Signed-off-by: Liming An <limingx.l.an@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

8	1	lib/bb/ui/crumbs/hoblistmodel.py
6	1	lib/bb/ui/crumbs/hobwidget.py
12	36	lib/bb/ui/crumbs/packageselectionpage.py
15	22	lib/bb/ui/crumbs/recipeselectionpage.py

commit cc70181659c07e04c205e17832846acf1ff31d28
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2012-08-27 21:44:35 +0100

    bitbake-diffsigs: allow specifying task & follow deps recursively
    
    Add the ability to compare the two most recent runs of a specified task,
    and follow dependent hash changes recursively. This enables you to trace
    back and find exactly why a task was re-run after the fact.
    
    Note that this relies on the metadata providing a function, hooked in
    as bb.siggen.find_siginfo, which allows searching in the appropriate
    places to find signature data files.
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

92	5	bin/bitbake-diffsigs
10	7	lib/bb/siggen.py

commit a0ad2a947b71abcc0a1244cf139b9e9dfd8ee049
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2012-08-27 21:44:34 +0100

    lib/bb/siggen.py: make signature dump/compare functions return a list
    
    These functions become a little bit more reusable if they return a list
    containing the output rather than just printing it.
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

5	2	bin/bitbake-diffsigs
3	1	bin/bitbake-dumpsig
38	30	lib/bb/siggen.py

commit 5b96c32dad256090e9bda5af0f80c7dbcc90bde8
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2012-08-27 21:44:33 +0100

    lib/bb/siggen.py: insert a colon between class and recipe name
    
    before:
      virtual:nativeautomake_1.12.1.bb.do_compile
    after:
      virtual:native:automake_1.12.1.bb.do_compile
    
    This separation ensures that the key is readable, and if necessary,
    parsable.
    
    Unfortunately this invalidates previous native sstate signatures with
    OE-Core - not much that can be done about that; however that occurs
    frequently during the development cycle so it's par for the course.
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/siggen.py

commit 8eaa093b179e03a6003a47220540b1bc73afca17
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2012-08-27 21:44:32 +0100

    lib/bb/siggen: replace tabs with spaces
    
    We had one section of the code mixing tabs with spaces, which is
    particularly undesirable with python code.
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

17	17	lib/bb/siggen.py

commit e5707e3938ace47c4a8d1fa2e81583fd4dc6b95d
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2012-08-27 21:44:31 +0100

    tinfoil: create simple interface for bitbake-based utilities
    
    The code to initialise BitBake within bitbake-layers should be useful
    for other utilities that need to query configuration or recipe
    information, so refactor it out into its own class, "Tinfoil" (to
    continue with our cooking metaphor).
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

47	99	bin/bitbake-layers

commit f8924b75d6ff7f093d73f4e3c0953e349960d5ff
Author: Bogdan Marinescu <bogdan.a.marinescu@intel.com>
Date:   2012-09-05 13:11:25 +0300

    crumbs/hig: Save toolchain in settings
    
    Toolchain was not saved in the settings dialog ("Output" tab).
    
    [YOCTO #2695]
    
    Signed-off-by: Bogdan Marinescu <bogdan.a.marinescu@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	0	lib/bb/ui/crumbs/hig.py

commit b193db13472908b8ec6c670da96ff3b0004e635b
Author: Cristiana Voicu <cristiana.voicu@intel.com>
Date:   2012-09-05 10:50:33 +0300

    hob: The 'run image' and 'deploy image' dialogs text and alignment corrections
    
    -changed the text shown by both dialogs text
    -make small tweaks to alignment
    
    [YOCTO #2999]
    
    Signed-off-by: Cristiana Voicu <cristiana.voicu@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

10	4	lib/bb/ui/crumbs/imagedetailspage.py

commit de29bfc163471e4959483493a5e5b26f8a2cf8a0
Author: Cristiana Voicu <cristiana.voicu@intel.com>
Date:   2012-09-03 14:22:04 +0300

    hob/imagedetailspage: "Image ready" icon appers only after the image was generated
    
    Now, "Your image is ready" icon doesn't appear when you come back on Imagedetails
    page. It appears only after the image was generated.
    
    [YOCTO #2984]
    
    Signed-off-by: Cristiana Voicu <cristiana.voicu@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/ui/crumbs/imagedetailspage.py

commit 1a8356b57f906cf575612eb52fc8d3a9824ff9a7
Author: Ioana Grigoropol <ioanax.grigoropol@intel.com>
Date:   2012-09-03 12:51:06 +0300

    hobwidget: Button theme is taken from host, fix
    
    - All buttons in the interface inherit a BaseHobButton that
      use the gtk settings for buttons from the host;
    - Removed 'or' label between actions on image details page
    
    [Yocto #3011]
    
    Signed-off-by: Ioana Grigoropol <ioanax.grigoropol@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

19	17	lib/bb/ui/crumbs/hobwidget.py
4	4	lib/bb/ui/crumbs/imagedetailspage.py

commit de7ceb9459574f33920ccc06255b533434f0ec25
Author: Robert Yang <liezhi.yang@windriver.com>
Date:   2012-09-02 12:08:51 +0800

    fetch2: unpack rpm, ipk and deb binary package
    
    * Unpack the ".rpm" binary package (only .src.rpm in the past)
    
    * Unpack the .deb and .ipk binary package, their unpack commands are the same.
    
    * This is useful for binary package recipe.
    
    [YOCTO #1592]
    
    Signed-off-by: Robert Yang <liezhi.yang@windriver.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	1	lib/bb/fetch2/__init__.py

commit 1785b49a1b0b9698851d6e8aea94d1d2aa22c445
Author: Cristiana Voicu <cristiana.voicu@intel.com>
Date:   2012-08-31 17:10:11 +0300

    hob/recipe&packageselectionpage: Change "Back" button to "Cancel" button
    
    "Back" button placed on RecipeSelectionPage and PackageSelectionPage
    was changed to "Cancel" button to avoid any confusion.
    Also, it was placed next to the other buttons on the page.
    
    [YOCTO #3012]
    
    Signed-off-by: Cristiana Voicu <cristiana.voicu@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	4	lib/bb/ui/crumbs/packageselectionpage.py
2	2	lib/bb/ui/crumbs/recipeselectionpage.py

commit f54191dac18b4e1100944cc6da86705c1e9c1683
Author: Cristiana Voicu <cristiana.voicu@intel.com>
Date:   2012-08-31 14:37:58 +0300

    hob/imageconfigurationpage: Set secondary action for "Edit image" button
    
    The image configuration screen should have only one primary action.
    "Edit image" button has now secondary action, and also I have removed
    "or" label.
    
    [YOCTO #3010]
    
    Signed-off-by: Cristiana Voicu <cristiana.voicu@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	5	lib/bb/ui/crumbs/imageconfigurationpage.py

commit 0828f352419127fb30dc4eb5f91feba84ea59202
Author: Cristiana Voicu <cristiana.voicu@intel.com>
Date:   2012-08-31 11:48:23 +0300

    hob/packageselectionpage: Add tooltips to 'Included' and 'All packages' tab and 'Search' field
    
    For the 'Included' tab: "The packages currently included for your image"
    For the 'All packages' tab: "All packages that have been built"
    For the 'Search' field: "Enter a package name to find it"
    
    [YOCTO #2322]
    
    Signed-off-by: Cristiana Voicu <cristiana.voicu@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

6	1	lib/bb/ui/crumbs/packageselectionpage.py

commit 1ad03d6a327eb3389f7b4d0d74d2e8ae8b50c3b6
Author: Cristiana Voicu <cristiana.voicu@intel.com>
Date:   2012-08-31 10:00:47 +0300

    hob/packageselectionpage: Correctly restore previously selected packages
    
    "Back" button from "Packageselection" page now restores correctly previously
    selected packages list. Till now "Back" button was implemented just to switch
    pages, not to cancel changes you have made to packages list.
    
    [YOCTO #2984]
    
    Signed-off-by: Cristiana Voicu <cristiana.voicu@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

8	0	lib/bb/ui/crumbs/builder.py
3	0	lib/bb/ui/crumbs/packageselectionpage.py

commit 08d4a0f76542e05755c298b3875ea373e5512e13
Author: Kang Kai <kai.kang@windriver.com>
Date:   2012-08-28 10:47:20 +0800

    hob2: remove class hcc
    
    Because class hcc is useless, remove it.
    
    Signed-off-by: Kang Kai <kai.kang@windriver.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/ui/crumbs/builder.py
1	1	lib/bb/ui/crumbs/hig.py
0	1	lib/bb/ui/crumbs/hobeventhandler.py
0	29	lib/bb/ui/crumbs/hobwidget.py

commit e7c84f056af9c613920d5adcd078a011e0387193
Author: Kang Kai <kai.kang@windriver.com>
Date:   2012-08-28 10:47:19 +0800

    hob2: remove the hard-coded images map
    
    [Yocto #2795]
    
    When a new image type added, the hob will crash because the new type is
    not in the hard-coded image dictionary.
    
    For most of the image types, they are same with the image file's
    extension name. So use variable "IMAGE_EXTENSION_difftype" to map the
    image type which is diff with the image file extension name, such as
    type "live". And the variable(s) will be set in image_types.bbclass.
    
    Signed-off-by: Kang Kai <kai.kang@windriver.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

19	3	lib/bb/ui/crumbs/builder.py
7	2	lib/bb/ui/crumbs/hig.py

commit 843d3d6b0a7eb2e2f7b50c555767f5385df16ede
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2012-08-28 08:11:34 -0700

    taskdata: Don't add dependencies on tasks that don't exist
    
    "bitbake meta-toolchain" with qemu image testing enabled causes problems
    since it adds a task after do_rootfs which doesn't exist in this case.
    
    We should simply ignore these extra dependencies rather than adding
    them in which is what this patch does (adding a debug message when this
    happens).
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	0	lib/bb/taskdata.py

commit 0cac6d647c58ae449323959220775fc1afd5bfb0
Author: Trevor Woerner <twoerner@gmail.com>
Date:   2012-08-25 19:26:45 -0400

    bin/bitbake: Clarify wording in help output for -s
    
    The '-s' option shows (input) recipes, not (built/output) packages. Clarify
    the help wording for this option so it is consistent with how bitbake defines
    recipes and packages.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	bin/bitbake

commit 80a0c1b06a30a6ba9977c29fac0437a208d8cbbc
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2012-08-22 20:01:55 +0100

    ast: Store anonymous python function contents in the datstore
    
    This is useful if we need to disable part of one during a backtrace
    for debugging purposes.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	0	lib/bb/parse/ast.py

commit 2e98f740b4a57a3467b1a00b1ebc1aaee33a8ff0
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2012-08-22 13:54:47 +0100

    ast: Extract text variable in PythonMethodNode
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	2	lib/bb/parse/ast.py

commit 79f9f46319de85f85613ebe248c327f5852225ba
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2012-08-22 13:54:01 +0100

    ast: Rename PythonMethodNode define variable to modulename
    
    It was hard for me to understand what the define variable was, modulename
    is hopefully a bit better.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

6	6	lib/bb/parse/ast.py

commit f1e943aebfb84e98253f3f21646d6765c4fa1d66
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2012-08-22 13:53:11 +0100

    methodpool: Clean up the parsed module list handling to be slightly less insane
    
    This removes some dubious functions and replaces them with a simpler, cleaner
    API which better describes what the code is doing. Unused code/variables are
    removed and comments tweaked.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

9	8	lib/bb/methodpool.py
0	1	lib/bb/parse/ast.py
1	1	lib/bb/parse/parse_py/BBHandler.py

commit 4664333e55ffc9d618f2c2f074200923209fd6c4
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2012-08-22 13:52:24 +0100

    methodpool: Remove unused check_insert_method function
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

0	14	lib/bb/methodpool.py

commit db0ff7b4d47fce8322dd2350a2b1a6f60ef61d25
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2012-08-22 22:40:14 +0100

    cooker: Add explict handling of BBHandledException for parsing failures
    
    This removes some unnecessary tracebacks
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

5	0	lib/bb/cooker.py

commit 22756e9c0f1da33ba2c6e881b214577a610b7986
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2012-08-22 20:33:39 +0100

    cooker: Ensure parsing failures stop the build
    
    Currently parsing failures still allow bitbake to continue on and try
    and execute a build. This is clearly a bad idea and this patch adds in
    more correct error handling and stops the build.
    
    The use of sys.exit is nasty but this patches other usage in this function
    so is at least consisent and its better than the current situation of
    trying to execure a half parsed set of recipes. There are probably better
    ways this could be improved to use to stop the build.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

9	3	lib/bb/cooker.py

commit b3d97130e1e70fe969399277dcd7cccd888103d6
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2012-08-22 20:02:39 +0100

    utils.py: Once we've printed errors messages, suppress the backtrace
    
    Adding a generic backtrace to better_compile and better_exec is pointless,
    therefore reraise the exception as a bb.BBHandledException so the
    generic code doesn't confuse the user even more.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

5	3	lib/bb/utils.py

commit 0edf8431f9ff52581afe0d3ef525c59909af02ba
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2012-08-22 20:01:12 +0100

    utils.py: Try harder to extract good traceback information by querying the datastore
    
    Currently as soon as execution passes outside the code fragment being
    executed by better_exec, we don't get any good traceback information,
    just a likely obscure reference to some function name which may
    or may not be identifiable.
    
    This patch adds code to query the datastore if present, allowing a more
    meaningful back trace to be displayed in many cases.
    
    [YOCTO #2981]
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

13	4	lib/bb/utils.py

commit a324df40243fa55ccc89fd5970d46f25330d0a0d
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2012-08-22 16:14:38 +0100

    cooker: fix traceback when using -b with skipped recipe
    
    If a recipe is skipped during parsing for whatever reason, check and
    report this as an error rather than trying to use the data that is sent
    back and failing.
    
    Fixes [YOCTO #2976].
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

4	0	lib/bb/cooker.py

commit 7e8205929ae953731a6854ea80b197847cff5771
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2012-08-21 16:25:07 +0000

    event/ast: Use better_exec instead of simple_exec
    
    This improves the stacktraces dumped by bitbake when for example anonymous
    python functions fail.
    
    Also default to passing code strings to better_exec to match the behaviour of
    simple_exec to aid the transition.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/event.py
1	1	lib/bb/parse/ast.py
3	1	lib/bb/utils.py

commit 65a5845ac942d0aa6838c295e41b656f9d2a98bb
Author: Konrad Scherer <Konrad.Scherer@windriver.com>
Date:   2012-08-21 16:05:58 -0500

    ui: Improve error message if bitbake cannot import python curses module
    
    On some SuSE systems, the curses python module is not installed by default.
    Instead of a python failure, we want a nicer error message.
    
    (On SuSE systems the package is typically python-curses.)
    
    Signed-off-by: Konrad Scherer <Konrad.Scherer@windriver.com>
    Signed-off-by: Jeff Polk <jeff.polk@windriver.com>
    
    Reword commit message, rebase to latest bitbake.
    
    Signed-off-by: Mark Hatle <mark.hatle@windriver.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

5	1	lib/bb/ui/knotty.py
7	1	lib/bb/ui/ncurses.py

commit ba15ba16a5d863886bcfd5b3f0bdfff2a6de11a0
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2012-08-21 18:11:47 +0100

    bitbake-layers: use parsable title for show-appends
    
    Print title text surrounded by === as we do with other subcommands so
    that you can filter it out in scripts. (You will also want to filter out
    lines starting with "WARNING:" if you just want the list).
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	bin/bitbake-layers

commit 406477cbae066b6379873e266cb79801e545a61c
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2012-08-21 18:11:46 +0100

    bitbake-layers: avoid full parse for show-layers subcommand
    
    We don't actually need to parse all recipes just to show the configured
    layers, so just parse the configuration instead.
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

7	4	bin/bitbake-layers

commit 3c2322d8a6ce15e20adb07a61aa321d884a9bcca
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2012-08-21 18:11:45 +0100

    bitbake/cooker: minor refactor of parseConfiguration()
    
    All calls to parseConfiguration set self.status and call
    self.handleCollections() afterwards, so just do this inside
    parseConfiguration() itself.
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

6	10	lib/bb/cooker.py

commit 9f631e29a2eebb96a8291839dd8b39aa9126a10e
Author: Ross Burton <ross.burton@intel.com>
Date:   2012-08-21 17:16:26 +0100

    data_smart: skip all interal (underscored) flags in getVarFlags
    
    Signed-off-by: Ross Burton <ross.burton@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/data_smart.py

commit 684cf09aed09ec82c8afb99895f92d73cd0519df
Author: Ross Burton <ross.burton@intel.com>
Date:   2012-08-21 17:16:25 +0100

    data-smart: rename the 'content' internal variable to '_content'
    
    Signed-off-by: Ross Burton <ross.burton@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

8	8	lib/bb/data_smart.py

commit b48cd7dcf57b1abc8c5b46ced11d4f57bf06e557
Author: Cristian Iorga <cristian.iorga@intel.com>
Date:   2012-08-21 18:21:23 +0300

    Hob wizard-like reorganization
    
    Hob is now more context-sensitive regarding
    user changes/options. Also, the workflow have been
    streamlined and resembles more of a wizard.
    Beautified some hardcoded values.
    Fixed typo.
    New streamlined Image Configuration page.
    Build and/or Edit image buttons presence
    is context sensitive.
    Recipes and packages tabs selected automatically
    based on custom image or pre-defined target image
    (included or all).
    Context sensitive Back button.
    
    Fixes [YOCTO 2165]
    
    Signed-off-by: Cristian Iorga <cristian.iorga@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/ui/crumbs/builddetailspage.py
18	5	lib/bb/ui/crumbs/builder.py
2	3	lib/bb/ui/crumbs/hoblistmodel.py
25	43	lib/bb/ui/crumbs/imageconfigurationpage.py
12	4	lib/bb/ui/crumbs/packageselectionpage.py
11	4	lib/bb/ui/crumbs/recipeselectionpage.py

commit 660821769b9dfb89086291ffc835e9b5444509be
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2012-08-21 16:07:37 +0100

    bitbake: hob: create console log directory before writing
    
    The default value of BB_CONSOLELOG in OE-Core now points to a directory
    that might not exist prior to the first build, so ensure it is created
    first.
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	0	lib/bb/ui/crumbs/builder.py

commit e5045429bce15b66c4355be214db3982ac7761f3
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2012-08-17 14:53:16 +0100

    build.py: Correct package to recipe in TaskBase events to use consistent terminology
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/build.py
1	1	lib/bb/ui/knotty.py

commit bbf1f6fe594c721a296ca09ee7c583d4a205c591
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2012-08-18 15:15:18 +0000

    fetch2/git: Work around git confusion between foo.git and foo repositories
    
    If you have foo and foo.git in GITDIR, the two can end up being confused
    by git with some horrible union of the two being cloned. This adds
    a workaround to avoid this happening until git 1.7.9.2 onwards is
    common enough for this to be removed. We use a symlink to hide
    the directories we don't want git to know about.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

16	1	lib/bb/fetch2/git.py

commit 587ce3bd76b5338c538dc9a5b9f06d42cb5ae3eb
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2012-08-17 14:52:40 +0100

    really remove knotty2
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

0	0	lib/bb/ui/knotty2.py

commit e0f91faf195be63803d39fb42fcd115ad558c79f
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2012-08-16 15:15:49 +0100

    bin/bitbake: Remove knotty2 from the list of valid interfaces
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	bin/bitbake

commit e69103c4f7e45c24f1fbe9df0383f39e877abcb4
Author: Andrei Gherzan <andrei.gherzan@windriver.com>
Date:   2012-08-16 14:21:33 +0300

    bitbake: build.py: Add stampdir argument to cached_mtime_noerror
    
    After commit 2718537b4b04eb3d80ab4d74171b58e7b8dd68b8 (bitbake:
    build.py: Only execute mkdirhier if stampdir doesn't exist) build
    failes as cached_mtime_noerror needs an argument - stamp dir. This
    argument was forgotten.
    
    Signed-off-by: Andrei Gherzan <andrei.gherzan@windriver.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/build.py

commit b97d50618b2187bcfd7d25f64d1444482ca62ef7
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2012-08-15 17:50:22 +0100

    knotty: Fold knotty2 into knotty and make it the default
    
    There is no good reason knotty2 shouldn't be the default now. If you need
    the old behaviour, just pipe the output through cat as non-interactive
    terminals get the old output.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

101	13	lib/bb/ui/knotty.py
0	149	lib/bb/ui/knotty2.py

commit 9afc9e4d14abec5ac326851d4bb689c1e8d45a43
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2012-08-15 17:00:40 +0100

    knotty2: Handle long lines of text and terminal window size changes
    
    Long lines of text which wrapped on the terminal corrupted the output shown by
    knotty2. This patch catches such errors by becomming aware of the terminal size.
    
    It also catches terminal window size change events and adapting to those
    changes using a signal handler.
    
    Based on a patch from Jason Wessel with several tweaks and enhancements
    such as use of chained signal handlers and covering all output messages.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

46	6	lib/bb/ui/knotty2.py

commit 769b694eeb617bb793bd79d0d7b29c43d2646ece
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2012-08-15 16:57:47 +0100

    build.py: Only execute mkdirhier if stampdir doesn't exist
    
    I noticed this was showing up on profile logs as a sigificant time user
    in "bitbake bash" when bash was already built. It reduces the time from
    5.2 to 4.5 seconds in my test environment.
    
    We make use of the parser's mtime cache as once a directory exists,
    we can assume it continues to exist and this avoids syscalls.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	1	lib/bb/build.py

commit 53efa01720a61da2cb344cbb7e977baa28deba3b
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2012-08-15 16:59:57 +0100

    bb/ui/uihelper.py: Ensure task current and total numbers are updated for setscene events too
    
    This avoids task (0 of 0) type messages being displayed during setscene by knotty2.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/ui/uihelper.py

commit 7753e075dbeee471b9ceb34f1e3165aa656932ed
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2012-08-15 16:58:46 +0100

    knotty: Chain the WINCH signal handler in progressbar so any other handler is preserved and called
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

14	0	lib/bb/ui/knotty.py

commit 23bd5300b4a99218a15f4f6b0ab4091d63a602a5
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2012-08-03 10:24:32 +0100

    data_smart: Fix unanchored regexp causing strange parsing issue
    
    If this regular expression is unanchored, it would accept strings like:
    
    do_install_append1
    do_install_appendsomelongstring
    
    and treat them like they were do_install_append. Clearly this isn't desirable.
    Only one instance of this type of issue was found in OE-Core and has been fixed
    so correcting the regexp should be safe to do.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/data_smart.py

commit 0f3293c2196a30bc52bf1eebfae87d8477880572
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2012-08-03 09:04:07 +0100

    Fix script location after mishandled merge
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

0	0	{bitbake/contrib => contrib}/dump_cache.py

commit 19efc6081c15a59bb8f5aaf8478650a2732cafe8
Author: Martin Jansa <martin.jansa@gmail.com>
Date:   2012-08-02 18:52:15 +0200

    cooker: fix OVERRIDES in BB_SIGNATURE_HANDLER (to override value from DISTRO.conf from local.conf)
    
    We really need to pass the finalised data store into the parser init function
    (and hence the siggen init function). This ensures any value changes get
    passed into the correct code.
    
    Signed-off-by: Martin Jansa <Martin.Jansa@gmail.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	0	lib/bb/cooker.py

commit 2054c7d99933c1523d4b5c7f65d37c69b8472e47
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2012-08-02 20:48:31 +0000

    fetch2/local: Add search paths to the debug log to improve log usefullness
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	0	lib/bb/fetch2/local.py

commit a461adbc5f09b41c771a7603370f6f2d1299ae8e
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2012-08-02 20:41:02 +0000

    fetch2/local.py: Provide better debug output when fetch of a local file fails
    
    When a fetch failure occurs for a local file, this patch ensures we print the
    locations searched making it easier for the user to debug the problem.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

19	6	lib/bb/fetch2/local.py

commit a0bc58031d4eb31f8587171e870ecad059af5098
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2012-08-02 20:40:36 +0000

    runqueue.py: Clean up runqueue exception catching in the normal task failure case
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	0	lib/bb/runqueue.py

commit 75a7caf6f2d9f4399c95b9249db1b3bc5a48dc61
Author: Robert Yang <liezhi.yang@windriver.com>
Date:   2012-08-01 15:18:18 +0800

    contrib/dump_cache.py: dump recipe -> packages mapping from bb_cache.dat
    
    Add the dump_cache.py to dump the "recipe -> packages" mapping for
    target recipes form bb_cache.dat:
    
    * Usage:
      dump_cache.py bb_cache.dat
    
    * The format is:
        recipe_path pn pv packages
      For example:
        /path/to/gzip_1.5.bb gzip 1.5 gzip-dbg gzip-staticdev gzip-dev gzip-doc gzip-locale gzip
    
    * Only save the mapping for the target recipe
    
    * We can extend this to dump other informations when needed.
    
    * Put this script to bitbake/contrib/ (not to oe-core) is because it
      needs the bb.cache.
    
    [YOCTO #2741]
    
    Signed-off-by: Robert Yang <liezhi.yang@windriver.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

68	0	bitbake/contrib/dump_cache.py

commit 17217ff707e41780cb473b9cdd2621dd18b982c2
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2012-07-24 12:41:24 +0100

    bitbake-layers: fix help for show-overlayed to match behaviour
    
    show-overlayed actually lists the same recipe in multiple layers
    regardless of priority, so change the help description to match.
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	bin/bitbake-layers

commit f9b81e44b2e71b4de6729bd2c69b25fd619b5fed
Author: Liming An <limingx.l.an@intel.com>
Date:   2012-08-02 19:06:02 +0800

    Hob: change the Build failure scenario as ui design
    
    As ui design 'build-fail-spec.pdf' to change the GUI
    
    [YOCTO #2183]
    
    Signed-off-by: Liming An <limingx.l.an@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

33	50	lib/bb/ui/crumbs/builddetailspage.py

commit 291289787bb042b99f0599babc2d67c220aadb87
Author: Liming An <limingx.l.an@intel.com>
Date:   2012-08-02 19:06:01 +0800

    Hob: log for Hob and allow users to show logs after successful build
    
    If users build images in Hob, record logs and allow users to retrieve the lo
    after successful build.
    
    The logs are generated if and only if:
          - users do "just bake"
          - users do "build image" after "build packages"
          - users do "build packages" only
    
    [YOCTO #1991]
    
    Signed-off-by: Shane Wang <shane.wang@intel.com>
    Signed-off-by: Liming An <limingx.l.an@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

42	10	lib/bb/ui/crumbs/builder.py
3	0	lib/bb/ui/crumbs/hobeventhandler.py
20	4	lib/bb/ui/crumbs/imagedetailspage.py
23	4	lib/bb/ui/crumbs/packageselectionpage.py
41	0	lib/bb/ui/crumbs/runningbuild.py

commit 9eb34fc866775fd8310759a0111f232a9dc98981
Author: Martin Jansa <martin.jansa@gmail.com>
Date:   2012-08-01 01:33:41 +0200

    fetch2: print checksums when they are different then expected
    
    * in form which can be copied into a recipe without modification
    * like oe-classic did since:
      http://git.openembedded.org/openembedded/commit/?id=68abc465559a68e9201c9525be3c4acc6297eaed
    * it shows them in right form when they are missing completely, but in
      more verbose form when different
    * it needs to print that only when checksums were requested, e.g.
      fetching from sstate mirror sets both md5mismatch and sha256mismatch,
      but your checksums shouldn't be shown
    
    Signed-off-by: Martin Jansa <Martin.Jansa@gmail.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

6	0	lib/bb/fetch2/__init__.py

commit 229ed3857e826e3e215e843cb51f729c1e13ed37
Author: Christopher Larson <chris_larson@mentor.com>
Date:   2012-07-31 15:20:14 -0700

    fetch2: handle broken symlinks in local mirror handling
    
    If a file:// mirror is being used, the fetcher will create a symlink to the
    local file. However, if the local file gets removed, that link will be dead,
    and os.path.exists() returns False in that case, so it tries and fails to
    recreate the link. Now we unlink such a dead link if it exists.
    
    Signed-off-by: Christopher Larson <chris_larson@mentor.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

5	1	lib/bb/fetch2/__init__.py

commit 1e06d8012868ba5a31503dc99cbf18570be629d9
Author: Martin Jansa <martin.jansa@gmail.com>
Date:   2012-07-30 13:11:46 +0200

    knotty: ensure that directory for BB_CONSOLELOG exists before using it
    
    Signed-off-by: Martin Jansa <Martin.Jansa@gmail.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	0	lib/bb/ui/knotty.py

commit cb10e9c03a3f96d94e27e18330009616dde5e2b3
Author: Mark Hatle <mark.hatle@windriver.com>
Date:   2012-07-27 20:26:38 -0500

    fetch2/__init__.py: Add NoChecksumError exception
    
    Without the new exception, when the system is configured to use premirrors,
    but not allow network access (via BB_NO_NETWORK), when a recipe was lacking a
    checksum the wrong error message(s) were being generated.
    
    Instead of complaining about trying to perform network access, if the system
    was able to find the item in the premirror, it should inform the user of the
    lack of checksums, and the two SRC_URI fields they should use to update their
    recipe.
    
    Signed-off-by: Mark Hatle <mark.hatle@windriver.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

13	1	lib/bb/fetch2/__init__.py

commit a691de10d8b8de552628b277e78d47c607ee3a46
Author: Kang Kai <kai.kang@windriver.com>
Date:   2012-07-27 16:38:03 +0800

    hob: deal event DiskFull
    
    Part of [Yocto #2168]
    
    When bitbake runqueue is teminated by disk monitor, it will send event
    DiskFull. Update to handle it.
    
    Signed-off-by: Kang Kai <kai.kang@windriver.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

4	0	lib/bb/ui/crumbs/builder.py
10	1	lib/bb/ui/crumbs/runningbuild.py

commit 0a0fca3d94a1db6458ae21501a66461a334410ed
Author: Kang Kai <kai.kang@windriver.com>
Date:   2012-07-27 16:38:02 +0800

    monitordisk: fire event DISKFULL when terminate build
    
    Part of [Yocto #2168]
    
    Add a event DiskFull to descript the termination by disk monitor.
    
    Update check() to fire the event DiskFull when terminates the build.
    This could help UIs to deal this scenario and show more information to
    end user.
    
    Signed-off-by: Kang Kai <kai.kang@windriver.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

8	0	lib/bb/event.py
5	0	lib/bb/monitordisk.py

commit e49a656a499355a5c6e7eb00bf5b8f1795e8dddb
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2012-07-25 19:04:45 +0000

    fetch/local: Allow preservation of path components in relative file:// urls
    
    This enhances the fetcher to allow preservation of the path component in urls
    like: file://xxx/yyy/somefile.patch.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

4	3	lib/bb/fetch2/local.py

commit 5ec12f586a50fce675b268965b3dc487aaa96c43
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2012-07-25 19:03:44 +0000

    runqueue.py: Wipe out the stamp cache between setscene and main task execution
    
    The stamp files can change during setscene and the cache should be cleared to
    account for this.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	0	lib/bb/runqueue.py

commit 1423aafff97f17169e95ec3ba973eb002ff98c1c
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2012-07-25 18:58:06 +0000

    runqueue.py: Allow the setsceneverify function to have a list of tasks that are invalid and need to run
    
    There was some odd behaviour if some task was run from setcene whilst there were
    existing valid stamps for a depepdency. For example, do_populate_sysroot might
    be installed at setscene time but if there were other tasks not installed from
    setscene such as do_populate_lic which depend on do_configure, the setsceneverify
    function would think that do_configure needed to be rerun and would hence void the
    do_populate_sysroot and force that to rerun too.
    
    The setsceneverify function needs to know which tasks are going to be rerun, not just
    what the overall task list is and what setscene functions have run. This patch adds
    that information and maintains backwards compatibility in a slightly ugly but effective
    way. The metadata needs updating to take advantage of this change.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

24	3	lib/bb/runqueue.py

commit 95b31127d8ba12ccb061d67481ece134c18c39f2
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2012-07-25 18:56:00 +0000

    runqueue.py: Ensure one setscene function doesn't mask out another which needs to run
    
    The scenequeue code could result in one setscene function masking out another
    which had been marked as notcovered. This change ensures the notcovered list
    is taken into account when deciding which tasks need to be run, ensuring
    that tasks that should be run do get run.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

5	2	lib/bb/runqueue.py

commit 2e71a65bd910e8be894b8284eb0a50de7270c081
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2012-07-25 18:48:41 +0000

    runqueue.py: Optimise the hashvalidate call to only process tasks we may actually want
    
    Currently we call the hashvalidate for anything without a valid setscene stamp.
    This improves the code to account for existing stamp files so that we only process
    setscene hashes for things we might actually end up using. This avoids hash processing
    and makes things slightly more efficient and the logs less confusing.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

6	0	lib/bb/runqueue.py

commit 99467c7e387f6e71358b40b8afae450d72cd68e0
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2012-07-25 18:43:53 +0000

    runqueue.py: Gracefully exit if an exception occurs in the runqueue execution code
    
    There was a bug where an exception in the runqueue code would cause an infinite loop
    of debug messages. The exception would get reported but would loop since runqueue was
    still registered as an idle handler.
    
    This patch adds an exception handler to ensure in the case of errors, the system
    more gracefully shuts down and doesn't loop.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

9	1	lib/bb/runqueue.py

commit 7a5f776d325c0e37f58003424beda7cae2695325
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2012-07-25 18:40:38 +0000

    runqueue.py: Fix a stamp comparision bug
    
    We check the stamp cache before comparing t2 and t3 which means that we can miss
    a level in the stamp file chains. The result of this is that a stamp can be accepted
    as valid when in fact it isn't. Some weird behaviour alerted me to this in a local
    build.
    
    This patch also fixes to only uses the cache in recurse mode, there was a corner
    case where stamps not in recurse mode could get added to the cache which could cause
    an issue potentially.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

9	6	lib/bb/runqueue.py

commit ceb5871007f221c4d86a7bee421d4dd8d9100aaf
Author: Nitin A Kamble <nitin.a.kamble@intel.com>
Date:   2012-07-18 17:39:18 -0700

    bitbake wget fetcher: add parameter: downloadfilename
    
    this allows wget fetcher to store the downloaded file in a specified custom filename in ${DL_DIR}
    
    Exmaple:
    SRC_URI = "https://edc.intel.com/Download.aspx?id=6190;downloadfilename=LIN_IEMGD_1_14_GOLD_2443.tgz"
    
    This fixes bug:
    [YOCTO #2570]
    
    Signed-off-by: Nitin A Kamble <nitin.a.kamble@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

8	1	lib/bb/fetch2/wget.py

commit 877a04d0b3cea9d5dbdf3c54fe0feb54cb997dda
Author: Martin Ertsaas <mertsas@cisco.com>
Date:   2012-07-19 13:26:25 +0200

    Change bzr fetcher to use branch instead of co. Fixes: bzr: ERROR: No pull location known or specified.
    
    This problem occurs when fetching a different revision of the same source. Which mean every time you update a bzr package.
    Using branch sets the pull location, and are the preferred way of cloning/branching a repository in bzr.
    
    Signed-off-by: Martin Ertsaas <mertsas@cisco.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/fetch2/bzr.py

commit 358952f0d874b869d361bbd72a5ea317bf939cd3
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2012-07-23 16:26:06 +0000

    cooker.py: Ensure we track parser errors and only show bbappend issues on complete parse
    
    Currently if any parsing failure occurs, there can be a long list of
    bbappends that are "dangling" based on the fact that recipes were not
    parsed. This change firstly ensures the error counter is incremented
    and secondly that the bbappends list is only shown on a completed
    parse list.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

9	2	lib/bb/cooker.py

commit befbb5c9428eaf98b2ff9c4b36b0b3f2dce7fe07
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2012-07-19 09:54:13 +0100

    Update version to 1.15.3
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	bin/bitbake
1	1	lib/bb/__init__.py

commit c51cfaf48d3b12a19b01e824b6ba4230376bcad4
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2012-07-18 11:35:11 +0000

    bitbake: Warn upon finding tab indentation in python functions
    
    Mixed spacing in python functions can cause subtle issues and
    generally confuses users. We've standardised on 4 space indentation,
    adding this warning helps ensure consistency and avoid bugs. It
    also makes _prepend and _append operations on python functions slightly
    less risky.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	0	lib/bb/data.py
2	2	lib/bb/parse/ast.py

commit b2017f493ab730d804ae44ec5a168d464626d046
Author: Martin Jansa <martin.jansa@gmail.com>
Date:   2012-07-18 00:38:19 +0200

    fetch2/svn.py: Use protocol parameter to get the protocol
    
    * it was send in v1 of proto -> protocol changes but then wasn't in V2
      http://patchwork.openembedded.org/patch/31617/
      where warning about proto= was moved to shared __init__
    
    Signed-off-by: Martin Jansa <Martin.Jansa@gmail.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/fetch2/svn.py

commit a93a58b7cea2ddb9596cb4d718c0801db5d1a295
Author: Kang Kai <kai.kang@windriver.com>
Date:   2012-07-17 14:58:52 +0800

    hob2: add elf to hcc supported image types
    
    [Yocto #2709]
    
    OE Core Commit c9b01af84b64edba056f959c349895e0698324e6 add elf image
    type. This will cause hob build image failed.
    Add elf to hcc supoorted image types to fix this issue.
    
    Signed-off-by: Kang Kai <kai.kang@windriver.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	0	lib/bb/ui/crumbs/hobwidget.py

commit ff11e9ac5eba2d957917664a7b91b1277d8ad548
Author: Jeffrey C Honig <jeffrey.honig@windriver.com>
Date:   2012-07-16 20:48:57 -0400

    siggen.py: Insure .siginfo files writes into shared sstate cache are atomic
    
       Use tempfile.mkstemp to create a temporary file in the sstate dir and move it
       into place after closing.  The previous code would fail in the chmod() if two
       users were running jobs that touched the same signature file.
    
    Signed-off-by: Jeffrey C Honig <jeffrey.honig@windriver.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

15	4	lib/bb/siggen.py

commit 9be584272a63f48d8dc7c9f05b017d11250aa247
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2012-07-16 15:57:22 +0100

    runqueue.py: Improve error output to be more useful when non-existent tasks are found
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/runqueue.py

commit 53e6b630f0463d2d07cdaa9c9eb36794dc9b6b69
Author: Andrei Gherzan <andrei@gherzan.ro>
Date:   2012-07-11 00:34:17 +0300

    fetch2/__init__.py: Warn user if SRC_URI is using "proto" and not "protocol"
    
    As well, if "proto" is used, get the associated value as "protocol"
    
    Signed-off-by: Andrei Gherzan <andrei@gherzan.ro>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

4	0	lib/bb/fetch2/__init__.py

commit 630876b40ed181312e84f902c4cfb97361afbe81
Author: Andrei Gherzan <andrei@gherzan.ro>
Date:   2012-07-11 00:34:16 +0300

    fetch2/bzr.py: Use "protocol" parameter to get the protocol
    
    Signed-off-by: Andrei Gherzan <andrei@gherzan.ro>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/fetch2/bzr.py

commit f4a780a7f50fdd8f2bd75888dad790bcfe95b873
Author: Andrei Gherzan <andrei@gherzan.ro>
Date:   2012-07-11 00:34:15 +0300

    fetch2/hg.py: Use "protocol" parameter to get the protocol
    
    Signed-off-by: Andrei Gherzan <andrei@gherzan.ro>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/fetch2/hg.py

commit 01040efce82cfbaa76f46d9f95c984be8f9ea810
Author: Andrei Gherzan <andrei@gherzan.ro>
Date:   2012-07-11 00:34:14 +0300

    fetch2/osc.py: Use "protocol" parameter to get the protocol
    
    Signed-off-by: Andrei Gherzan <andrei@gherzan.ro>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/fetch2/osc.py

commit 5f81a714f4fca785780bef555b419f0250e5ec1c
Author: Wenzong Fan <wenzong.fan@windriver.com>
Date:   2012-07-11 11:28:11 +0800

    bitbake: Abort build if runtime dependency conflict
    
    Currently if there are multiple preferred providers available for
    a runtime dependency, bitbake will print an Error message and let
    the build go on. Anyways the build should abort while any Errors
    occured.
    
    [YOCTO #2734]
    
    Signed-off-by: Wenzong Fan <wenzong.fan@windriver.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	0	lib/bb/providers.py
2	1	lib/bb/taskdata.py

commit bf0e5dddf0f63cdb0648fb6d872af5ceef6fbfb0
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2012-07-09 16:44:08 +0000

    fetch2/wget: Use FETCHCMD_wget to provide the commandline and options
    
    This also changes to use  -t 2 -T 30 as the defaults which are more sane for
    a modern fetcher and already specified in OpenEmbedded metadata.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

5	3	lib/bb/fetch2/wget.py

commit 390ad59739356422852e976fa246375abc6aba08
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2012-07-09 16:43:27 +0000

    fetch2/cvs.py: Switch to use FETCHCMD_cvs and handle parameters in the fetcher itself
    
    This brings the cvs fetcher more into line with the others and allows consistent usage
    of the FETCHCMD variable and option handling.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	9	lib/bb/fetch2/cvs.py

commit 18aff925aece774d0172894e25584353519ca03f
Author: Robert Yang <liezhi.yang@windriver.com>
Date:   2012-06-21 10:28:54 +0800

    bitbake/cooker: Print which pkgs would be built in -g output
    
    This is for giving the user a clear list to show which pkg would be
    built, we have the "bitbake -g", but it is not easy to read for people,
    it is for "dot". Improve the "bitbake -g" to also save a pn-buildlist:
    
    $ bitbake -g core-image-sato
    ...
    NOTE: PN build list saved to 'pn-buildlist'
    [snip]
    
    The contents of pn-buildlist:
    
    busybox
    shadow-native
    pth
    sysfsutils
    qemu-helper-native
    curl-native
    ncurses-native
    gdbm
    xserver-xorg
    linux-libc-headers
    [snip]
    
    [YOCTO #2404]
    
    Signed-off-by: Robert Yang <liezhi.yang@windriver.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	bin/bitbake
4	0	lib/bb/cooker.py

commit 68af2b09315ba35eae24933a599014a662789c2c
Author: Robert P. J. Day <rpjday@crashcourse.ca>
Date:   2012-07-05 19:58:52 -0400

    usermanual: Fix missing markup
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	doc/manual/usermanual.xml

commit dc35a2e506e15fb7ddbf74c3b3280e9e83ab33bb
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2012-07-04 15:47:52 +0000

    data_smart: Fix multiple override interaction with append and prepend operators
    
    Variables which used multiple overrides and the append/prepend operators were
    not functioning correctly. This change fixes that.
    
    This fixes the testcase:
    
    OVERRIDES = "linux:x86"
    TESTVAR = "original"
    TESTVAR_append_x86 = " x86"
    TESTVAR_append_x86_linux = " x86+linux"
    TESTVAR_append_linux_x86 = " linux+x86"
    
    [YOCTO #2672]
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

6	1	lib/bb/data_smart.py

commit 4962a59793504b26b06cf058dda600a07fbbd951
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2012-07-04 16:39:11 +0000

    runqueue.py: Fix recursive task pruning to only prune self referencing tasks
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

4	2	lib/bb/runqueue.py

commit ebd3ecdb5f3c6d3fe1fad27cbed4d80f4277e92e
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2012-07-02 21:23:04 +0100

    fetch2/svn: Enhance to cope with subversion 1.7 upgrade
    
    svn changed working checkout formats between 1.6 and 1.7. Its convoluted to
    detect what format a given working copy is in so the simplest solution is simply
    to run "svn upgrade" within the working copy.
    
    The base svn command variable is relocated slightly to enable this new code to
    work effectively.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

10	5	lib/bb/fetch2/svn.py

commit f67c0606fc681359fb0c68be55cfc9f11d410f17
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2012-07-02 16:36:08 +0100

    usermanual: Improve task dependency documentation to match reality
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

10	12	doc/manual/usermanual.xml

commit a5324da9b8a0c9307a6c511ea9009f34be70c92b
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2012-07-02 13:29:53 +0100

    runqueue.py: Allow recrdeptasks that have self references
    
    In some cases we want to pull in DEPENDS and RDEPENDS of recrdeptask
    dependencies but we need a way to trigger or avoid this behaviour
    depending on context. The logical syntax to trigger such behaviour
    would be a self referencing recrdeptask:
    
    do_a[recrdeptask] = "do_a do_b"
    
    The dependency chains already recurse this kind of expression correctly, the
    missing piece is to avoid any circular reference errors. Since the dependencies
    have already been recursively resolved, simply removing any recrdeptask
    references is enough to break the circular references.
    
    This patch therefore removes any circular references using the set
    difference_update() operator. There will be metadata tweaks required to
    add any references needed to the extra taskname.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

7	2	lib/bb/runqueue.py

commit 73801f571e040dcdfeb15a15b9a484cbefaae70c
Author: Liming An <limingx.l.an@intel.com>
Date:   2012-07-03 19:15:55 +0800

    Hob: fixed some variables not clean bug in detail page
    
    [YOCTO #2679]
    
    Signed-off-by: Liming An <limingx.l.an@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	11	lib/bb/ui/crumbs/imagedetailspage.py

commit 2ba23df5fad4b94d38a6aed97f7822226d72eb89
Author: Enrico Scholz <enrico.scholz@sigma-chemnitz.de>
Date:   2012-06-30 21:34:56 +0200

    git: do not execute 'git remote prune'
    
    'git remote prune' at this location does not make much sense because
    the following 'git remote rm' will prune stale and non-stale branches.
    
    The 'prune' can cause trouble because it will access the network
    bypassing the no-network code in bitbake. When this operation fails and
    throws an exception, the next command (--> 'git remote rm') will be
    skipped.  This in turn, will make all the following operations fail,
    because they assume that the remote does not exist yet.
    
    Signed-off-by: Enrico Scholz <enrico.scholz@sigma-chemnitz.de>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

0	1	lib/bb/fetch2/git.py

commit 0d24b1e85a11b68c8464cf15b49d3fc78f216818
Author: Liming An <limingx.l.an@intel.com>
Date:   2012-06-28 19:55:31 +0800

    Hob: change 'run image' and 'deploy' Gui and work flow for building detail page
    
    In build detail page, the response action of clicked the 'run image'
    or 'deploy' button will accroding to below as ui design:
    1)if there has one file in building result, it will responsed the
    'run image'(now, we only support the qemu) or 'deploy' directly
    2)if there has more than one file, it will popup a dialog with listed
    created files type, they are has same action attributes 'deploy'
    or 'runnable'.
    Note: because the qemu image (runnable file) can't be deployed and
    we can't generated a image that has the two attributes now, can be run
    or can be deployed,  so the code will not deal with this case.
    
    [YOCTO #2155]
    
    Signed-off-by: Liming An <limingx.l.an@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

98	114	lib/bb/ui/crumbs/imagedetailspage.py

commit 19c84fe8854639768c874cc1449963a9867ad397
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2012-06-27 21:01:29 +0000

    runqueue.py: Handle multiple rdeptask entries
    
    I'm not sure why we don't currently allow multiple entries in rdeptask when
    we do in deptask. This makes the handling match between the two since
    its trivial to fix.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	2	lib/bb/runqueue.py

commit ce0579dc256251e523c6330641f98b9f5a0e5761
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2012-06-28 11:34:20 +0000

    fetch2: Revert the regexp removal for the type field and instead anchor regexp
    
    People are using regexps in the url type field so we need to preserve
    this bitbake behaviour. To address the issues with https:// urls mapping
    badly to file:// urls we anchor the regexp if its not already anchored.
    There should be no expressions in the wild which would break with this
    change.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

8	9	lib/bb/fetch2/__init__.py

commit 2b1311e21172847b6a86cfb21a84fd00e4ab1ac5
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2012-06-28 11:33:05 +0000

    test/fetch: Switch the comparision order to make test failures slightly clearer
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/tests/fetch.py

commit 60b1a9f52dfec98e55a879a637f7142b0175b452
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2012-06-28 11:32:37 +0000

    test/fetch: Ensure cwd is valud for the git clone
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	0	lib/bb/tests/fetch.py

commit 82d73423c57569b984ee0ae3d93e3c3bd5dc5216
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2012-06-26 18:00:58 +0000

    runqueue: Reimplement recrdepends so it works more correctly
    
    Currently, recrdepends is extremely greedy. For example:
    
    do_foo[rdepends] = "somedep:sometask"
    addtask foo
    
    which adds foo with *no* dependencies, will suddenly start appearing
    as a dependency in every task which uses recrdepends. So far this has
    been mildy annoying but we now have use cases where this makes no sense
    at all.
    
    This reworks the recrdepends code to avoid this problem. To do this we
    can no longer collapse things into lists just based on file ID. The problem
    is this code is extremely performance sensitive. The "preparing runqueue"
    phase spends a lot of time in these recursive dependency calculations so any
    change here could negatively impact the user experience.
    
    As such, this code has been carefully tested on convoluted dependency trees
    with operations like "time bitbake world -g". The net result of this change
    and the preceeding changes combined is a net speed up of these operations in
    all cases measured.
    
    Tests were made comparing "bitbake world -g" task-depends.dot before and after
    this patch. There *are* differences for example -nativesdk do_build dependencies
    on -native recipes are no longer present. All removed dependencies appear to
    be sensible improvements to the system. The "rdepends" cross contamination
    issue above is also fixed.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

42	58	lib/bb/runqueue.py

commit 6fd723479e8d49227fd58040b3485c1d5afc4bc5
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2012-06-27 11:04:48 +0100

    runqueue.py: Convert depends variable to use sets
    
    This gives some small performance gains and sets the scene for other
    improvements by removing the need for duplicate detection code.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

8	12	lib/bb/runqueue.py

commit 3190cb83e2af195a464f669c5aa8aedbf795160e
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2012-06-27 11:04:06 +0100

    taskdata: Add gettask_id_fromfnid helper function
    
    This is like gettask_id but doesn't require translation of fnid -> fn
    first which the function then translates back. This gives a sizeable
    performance improvement since a significant number of lookups are avoided.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

4	8	lib/bb/runqueue.py
10	0	lib/bb/taskdata.py

commit e6ff1d4bab43fdcd8af1230f1d54615f53c1978e
Author: Cristian Iorga <cristian.iorga@intel.com>
Date:   2012-06-22 19:08:24 +0300

    Fix for Hob bug #2323
    
    Removed unnecessary button from Recipes screen and
    replaced the button that diplayed packages size and total image size
    from Packages screen with a label.
    
    Signed-off-by: Cristian Iorga <cristian.iorga@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	5	lib/bb/ui/crumbs/packageselectionpage.py
2	7	lib/bb/ui/crumbs/recipeselectionpage.py

commit fe514a130579302312f68821536d108c8ceb4363
Author: Kang Kai <kai.kang@windriver.com>
Date:   2012-06-25 16:47:36 +0800

    hig.py: use module tempfile to create temp file
    
    I am sorry that use os.tmpname which casue a security warning.
    Follow Darren's suggestion to use tempfile.NamedTemporaryFile instead.
    
    Signed-off-by: Kang Kai <kai.kang@windriver.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

8	12	lib/bb/ui/crumbs/hig.py

commit 1369bec2404d942acc3618a8d005ec6868dcfd41
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2012-06-22 12:53:56 +0100

    fetch2: Ensure star character doesn't end up in mirror tarball names
    
    If '*' does end up in mirror urls accidently, some strange things
    can break since supports_checksum() looks for this, ud.localpath can
    then get ignored and this can lead to empty directories being downloaded
    "successfully". '*' is a special case for file urls only at this point
    so remove any entries that accidentlly make it in through url mapping.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/fetch2/__init__.py
1	1	lib/bb/fetch2/git.py

commit 1c531dff2fb055ecab2d462027eecec3fabc2a44
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2012-06-21 15:43:02 +0100

    lib/bb/utils.py: remove unnecessary preserved variables
    
    _ and LANG no longer need to be preserved from the external environment.
    The value of _ changes between non-pseudo-wrapped and pseudo-wrapped
    invocations (e.g. between "bitbake -p" and "bitbake target") and this
    will currently trigger a full reparse in the absence of a whitelist
    entry in BB_HASHCONFIG_WHITELIST, which is not ideal.
    
    LANG used to be preserved in order to ensure the C locale was being
    used for tools invoked by bitbake, however we now set LC_ALL in
    bitbake.conf to take care of this.
    
    Second part of the fix for [YOCTO #2600].
    
    Acked-by: Jason Wessel <jason.wessel@windriver.com>
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

0	2	lib/bb/utils.py

commit c6b1acbad7b3d2698530eb8b5249adb4ab95da21
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2012-06-21 15:34:57 +0100

    fetch2: Add new mirror syntax to simplify mirror specifications
    
    When writing mirror specifications, the current regexp syntax can be awkward
    and hard to get it to do what you want. For example, extracting the 'basename'
    of a repository:
    
    PREMIRRORS = "git://.*/([^/]+/)*([^/]*) git://somewhere.org/somedir/\\2;protocol=file"
    
    can now become:
    
    PREMIRRORS = "git://.*/.* git://somewhere.org/somedir/BASENAME;protocol=file"
    
    which is much clearer. A MIRRORNAME substitution is also added which contains
    an encoded form of both host and path. One of the problems with the existing
    regexp syntax is you couldn't access HOST information from PATH and vice-versa
    which is an issue this patch also addresses.
    
    Tests for the new syntax are also added.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

11	2	lib/bb/fetch2/__init__.py
11	3	lib/bb/tests/fetch.py

commit c35cbd1a1403865cf4f59ec88e1881669868103c
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2012-06-22 12:54:42 +0100

    fetch2: Handle errors orruring when building mirror urls
    
    When we build the mirror urls, its possible an error will occur. If it
    does, it should just mean we don't attempt this mirror url. The current
    code actually aborts *all* the mirrors, not just the failed url.
    
    This patch catches and logs the exception allowing things to continue.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

11	2	lib/bb/fetch2/__init__.py

commit 361fb71e907aa84c28ecec79fefc6ca39c39172f
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2012-06-22 12:55:55 +0100

    process: Improve _logged_communicate buffering
    
    There are two problems with the _logged_communicate that are both
    caused as a result of buffering I/O issues:
    
    1) log truncation when python fails
    
    2) While a bitbake task is running it is impossible to see what is
       going on if it is only writing a small incremental log that is
       smaller than the buffer, or you get only a partial log, up until
       the task exists.  It is worse in the case that stderr and stdout
       are separate file handles, because previous code blocks on the read
       of stdout and then stderr, serially.
    
    The right approach is simply to use select() to determine if there is
    data available and also flush the log before exiting.
    
    This is based on a patch from Jason Wessel <jason.wessel@windriver.com>
    with some changes to flush upon exit, abstract the non blocking file
    descriptor setup and drop the buffer size parameter.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	1	lib/bb/build.py
33	13	lib/bb/process.py

commit db65080a6199baecc5c422294a4c4a9fd12dc29e
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2012-06-22 12:51:29 +0100

    taskdata.py: Add support for rdepends task flag
    
    Currently its not possible to add arbitrary RDEPENDS to a specific task.
    This can be useful and this patch adds functionality equivalent to the
    'depends' task flag.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	0	lib/bb/build.py
13	1	lib/bb/runqueue.py
16	0	lib/bb/taskdata.py

commit ab6d71ebfcfb7bedc064b25f84647c8815096e5a
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2012-06-22 12:53:16 +0100

    utils.py: Add function to set nonblocking operation on a file descriptor
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/runqueue.py
5	0	lib/bb/utils.py

commit 3aeb268b2aaab4bb8b1cfff1450e0b76aa8ce855
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2012-06-22 12:52:30 +0100

    git.py: Remove -l option, its not necessary
    
    If -l is specified and the source and destination are not on a common
    filesystem an error occurs. The -l option is however the default for
    git for local paths which the fetcher already now ensures in the
    file:// case.
    
    We can therefore safely drop the -l option.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	1	lib/bb/fetch2/git.py

commit 0fd960fdea83874eedb541cbc2920257e0f3fb81
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2012-06-21 18:28:47 +0100

    lib/bb/siggen.py: log when tainting the signature of a task
    
    Log a note when applying a taint to a task signature (e.g. when using
    the -f or -C command line options) so that the user knows this has been
    done.
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	0	lib/bb/siggen.py

commit 9ab269410ef5cd4753fe11ec74759f421685bb7b
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2012-06-21 18:28:46 +0100

    bitbake: tweak help text for -C slightly
    
    What is specified is a command (or "cmd" as in the help text for -f)
    rather than a task - i.e. you specify compile, not do_compile, so change
    the sentence to reflect that and reorder it slightly so it makes sense.
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	bin/bitbake

commit 2bab2cc3ffe67ee2a308074a6e4c2c7be5636d2f
Author: Jason Wessel <jason.wessel@windriver.com>
Date:   2012-06-14 16:44:02 -0500

    fetch2/git.py: Optimize clone fall back when it is local
    
    A file:// url should use "clone -l" to greatly speed
    up the clone in the case of a kernel when it is local.
    
    Signed-off-by: Jason Wessel <jason.wessel@windriver.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	1	lib/bb/fetch2/git.py

commit 6c0da26adbdcaa0c56737bacddb61678a9095e32
Author: Kang Kai <kai.kang@windriver.com>
Date:   2012-06-19 17:39:18 +0800

    ui/depexp.py: use the new progressbar in Hob
    
    [Yocto 2149]
    
    Use the new progressbar in Hob, so that we can reduce the maintenance
    burden of the multiple GUIs.
    
    Signed-off-by: Kang Kai <kai.kang@windriver.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

18	11	lib/bb/ui/depexp.py

commit 604df1b25cf114e083f52917df2df64e01279c25
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2012-06-20 16:37:22 +0000

    fetch2: Update replace_uri to handle uri types explicitly
    
    For mirror mapping, we never use regexps for the type component of
    the url. Doing so causes various slightly bizarre behaviour such as
    https:// urls being translated to files:// urls which we have no handler
    for. This patch forces the type matches to be direct, not regexp based
    and gives the expected bahvriour.
    
    (From Poky rev: 695d8aca0999d2d61970b990e83c3132ba6f12cb)
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

6	0	lib/bb/fetch2/__init__.py

commit 0d0a12fa0e4dabf01c1c24370aff54d26690a6dc
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2012-06-20 15:10:20 +0000

    test/fetch: Add a couple of extra test cases
    
    (From Poky rev: 01d8220ef8580ca980a14c05d500765ca2d37e2c)
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

29	1	lib/bb/tests/fetch.py

commit f91b4c2e3a2b3029d653a18de7ae2b0ecd7e2536
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2012-06-20 13:02:08 +0000

    test/fetch: Add in unit tests for uri_replace() and git premirrors
    
    (From Poky rev: 4be81b5cadb7813d37152411c23764501f5869d3)
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

52	3	lib/bb/tests/fetch.py

commit dcd79ae20ab2c72c3312b2251c2b6dc4cabe988e
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2012-06-20 12:59:31 +0000

    fetch2: uri_replace() only consider ud.localpath where its a file
    
    Using ud.localpath as a basename when it points at a directory causes
    problems. The supports_checksum() method gives a good indication of whether
    ud.localpath can be used in the way we need.
    
    (From Poky rev: 933ec8a44634e33f92f6f76de3a34094c3d63aa6)
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/fetch2/__init__.py

commit 7619dcad29a6c2405b15a8fbadfa11e81b399ae1
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2012-06-20 12:58:04 +0000

    fetch2: uri_replace() improve mirrortarball handling
    
    We only consider mirror tarballs when the source and target urls are of
    differing types. We also should clear all url paramters when handling
    mirror tarballs.
    
    (From Poky rev: da140b8b0b3dda5429f9eee68829ef5247cdfe12)
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

4	1	lib/bb/fetch2/__init__.py

commit e67af4d12f390ce6083965509ca9ea85a76dc351
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2012-06-20 12:57:15 +0000

    fetch2: uri_replace() remove what amounts to a null operation and add some comments
    
    (From Poky rev: 6d67200d052ba72258f5a0a178542ef99500a9cc)
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	2	lib/bb/fetch2/__init__.py

commit 3c468ac3ed6d045561afce19b85ae9dd18d87cea
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2012-06-20 12:55:11 +0000

    fetch2: Add parameter handling to uri_replace()
    
    This means that parameters in the source expression are used as part of the
    match. Parameters in the destination are used explicitly in the final
    url.
    
    (From Poky rev: c465cb0c5c927dd41d96ad6d6fa1566349574bb7)
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

9	1	lib/bb/fetch2/__init__.py

commit 84ffc261f376429b3a6b5d7bf2f6217cd10ca12a
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2012-06-20 12:54:46 +0000

    fetch2: Remove basestring test and simplify uri_replace
    
    (From Poky rev: d5657883d34bfef6beec594ac8d799f617b6b3ad)
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

18	17	lib/bb/fetch2/__init__.py

commit 075296f3e5e5e3662290a888a6ba11229a36b95a
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2012-06-20 12:52:53 +0000

    fetch2: Simplify some looping constructs in uri_replace()
    
    (From Poky rev: c6bd25150a842a530f958d7233b15ae50d42c6c8)
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	3	lib/bb/fetch2/__init__.py

commit e585730e931e6abdb15ba8a3849c5fd22845b891
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2012-06-20 12:49:39 +0000

    fetch2: Improve mirror looping to consider more cases
    
    Currently we only consider one pass through the mirror list. This doesn't
    catch cases where for example you might want to setup a mirror of a mirror
    and allow multiple redirection. There is no reason we can't support this
    and the patch loops through the list recursively now.
    
    As a safeguard, it will stop if any duplicate urls are found, hence
    avoiding circular dependency looping.
    
    (From Poky rev: 0ec0a4412865e54495c07beea1ced8355da58073)
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

29	12	lib/bb/fetch2/__init__.py

commit a2459f5ca2f517964287f9a7c666a6856434e631
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2012-06-20 12:47:42 +0000

    fetch2: Explicitly check for mirror tarballs in mirror handling code
    
    With support for things like git:// -> git:// urls, we need to be
    more explicity about the mirrortarball check since we need to fall
    through to the following code in other cases.
    
    (From Poky rev: 28e858cd6f7509468ef3e527a86820b9e06044db)
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	1	lib/bb/fetch2/__init__.py

commit db62e109cc36380ff8b8918628c9dea14ac9afbc
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2012-06-20 12:46:32 +0000

    fetch2: Split try_mirrors into two parts
    
    There are no functionality changes in this change
    
    (From Poky rev: d222ebb7c75d74fde4fd04ea6feb27e10a862bae)
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

59	52	lib/bb/fetch2/__init__.py

commit b886c6c15a58643e06ca5ad7a3ff1f7766e4f48c
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2012-06-20 12:40:02 +0000

    fetch2: Ensure when downloading we are consistently in the same directory
    
    This assists with build reproducuility. It also avoids errors if cwd
    happens not to exist when we call into the fetcher. That situation
    would be unusual but I hit it with the unit tests.
    
    (From Poky rev: 86517af9e066c2da1d580fa66b7c7f0340f3403e)
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

5	1	lib/bb/fetch2/__init__.py

commit f4b59cc6e1c3ddc168a1678ce39ff402ea1ff4cc
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2012-06-20 12:38:53 +0000

    fetch2: Only cache data if fn is set, its pointless caching it against a None value
    
    (From Poky rev: c2df30bf6d1f8c263a38c45866936c1bf496ece5)
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	2	lib/bb/fetch2/__init__.py

commit aa7467a764ddcbc7d65af99e88cf093b6ec6d24e
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2012-06-20 12:37:36 +0000

    fetch2: Fix error handling in uri_replace()
    
    (From Poky rev: 1bfba28a583cb167f60e05ecdf34d0786dc1eec5)
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	1	lib/bb/fetch2/__init__.py

commit eb96609864dec95a516e6e687dd6a2f31d523acf
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2012-06-14 13:40:28 +0000

    fetch2/__init__: Make it clearer when uri_replace doesn't return a match
    
    (From Poky rev: dc9976331c5cbb0983adb54f6deb97b9203bacbc)
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

4	2	lib/bb/fetch2/__init__.py

commit 2530e0faada5775897cfd1b93aba6925826dca73
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2012-06-18 16:45:36 +0100

    bitbake: add -C option to invalidate a task and rebuild the target
    
    This new command line option forces the specified task and all dependent
    tasks up to the default task to re-run. This means that the following
    single step:
    
    bitbake -C compile somerecipe
    
    is equivalent to the following two steps (with the recent change to -f):
    
    bitbake -c compile -f somerecipe
    bitbake somerecipe
    
    Note that to work this option needs full hashing enabled (i.e.
    BB_SIGNATURE_HANDLER must be set to a signature handler that inherits
    from BasicHash). If this is not the case, -C effectively does nothing.
    
    Based on a previous implementation of this option by Jason Wessel
    <jason.wessel@windriver.com>.
    
    Implements [YOCTO #2615].
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	0	bin/bitbake
18	2	lib/bb/runqueue.py

commit f7b55a94226f9acd985f87946e26d01bd86a35bb
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2012-06-18 16:45:35 +0100

    bitbake: ensure -f causes dependent tasks to be re-run
    
    If -f is specified, force dependent tasks to be re-run next time. This
    works by changing the force behaviour so that instead of deleting the
    task's stamp, we write a "taint" file into the stamps directory, which
    will alter the taskhash randomly and thus trigger the task to re-run
    next time we evaluate whether or not that should be done as well as
    influencing the taskhashes of any dependent tasks so that they are
    similarly re-triggered. As a bonus because we write this file as
    <stamp file name>.taskname.taint, the existing code which deletes the
    stamp files in OE's do_clean will already handle removing it.
    
    This means you can now do the following:
    
    bitbake somepackage
    [ change the source code in the package's WORKDIR ]
    bitbake -c compile -f somepackage
    bitbake somepackage
    
    and the result will be that all of the tasks that depend on do_compile
    (do_install, do_package, etc.) will be re-run in the last step.
    
    Note that to operate in the manner described above you need full hashing
    enabled (i.e. BB_SIGNATURE_HANDLER must be set to a signature handler
    that inherits from BasicHash). If this is not the case, -f will just
    delete the stamp for the specified task as it did before.
    
    This fix is required for [YOCTO #2615] and [YOCTO #2256].
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

18	0	lib/bb/build.py
3	3	lib/bb/cooker.py
6	6	lib/bb/runqueue.py
35	0	lib/bb/siggen.py

commit d316f28ed725ff40daa8771c1aa224ac46d5b224
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2012-06-14 14:19:45 +0100

    methodpool: Improve method already seen error message
    
    The current error message is confusing, this improves it to explain the problem
    and the possible ways to resolve it.
    
    [YOCTO #2530]
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/methodpool.py

commit 95c0595d66b3f8a5f0716662ba2a878600f312ea
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2012-06-14 13:57:53 +0100

    fetch2/local: Ensure quoting is handled correctly from the url
    
    The commit 420eb112a4f (fetch2: quote/unquote url paths) caused a regression
    since local file urls containing quoted characters are no longer being handled
    correctly. This fixes things so the url is dequoted correctly, fixing various
    fetcher failures with recipes like "gtk+".
    
    [YOCTO #2558]
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	1	lib/bb/fetch2/local.py

commit af2133a04e1f4b22b181adf9c71f89c439bb88cf
Author: Jason Wessel <jason.wessel@windriver.com>
Date:   2012-06-13 22:09:38 -0500

    fetch2: Fix missing output from stderr in fetcher logs
    
    There are actually two problems to fix
    
    1) The exception for bb.process.ExecutionError must be processed first
       because it is a derived from the bb.process.CmdError class and
       we never reach the ExecutionError otherwise.
    
    2) The stderr needs to be printed as well as stdout to determine
       the root cause of a fetch failure.
    
    The example I have is that I got a log that looked like:
    
    --
    ERROR: Function failed: Network access disabled through
      BB_NO_NETWORK but access requested with command
       /usr/bin/env wget -t 5 -nv --passive-ftp --no-check-certificate -P
       /localds 'http://downloads.yoctoproject.org/[...CLIPPED...] url None)
    --
    
    That really didn't tell me much, but with this patch I get error above
    plus the following:
    
    --
    STDERR: /net/[...CLIPPED...]kernel-tools.git: Read-only file system
    --
    
    Signed-off-by: Jason Wessel <jason.wessel@windriver.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	3	lib/bb/fetch2/__init__.py

commit debcea9c063f7bddcba1d4ed47edbe173ef1d9cf
Author: Liming An <limingx.l.an@intel.com>
Date:   2012-06-14 20:22:26 +0800

    Hob: fixed issue about 'select a base image' combo not sensitive
    
    The combo view is not sensitive, after select recipes come back.
    so fixed this issue.
    
    [YOCTO #2500]
    
    Signed-off-by: Liming An <limingx.l.an@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	0	lib/bb/ui/crumbs/builder.py

commit b046f4316ee7f2afaa0bb723e4216714d9cb87a0
Author: Liming An <limingx.l.an@intel.com>
Date:   2012-06-14 20:22:25 +0800

    Hob: fixed an issue about no 'set_page' function in hob failed page show
    
    Due in mistake deletion in previous patches, if building failed, will report
    the error of no 'set_page', so add that function.
    
    Signed-off-by: Liming An <limingx.l.an@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

6	0	lib/bb/ui/crumbs/hobwidget.py

commit d2d65335e8fc2417ebd3910f645cc00a4abfbeaa
Author: Kang Kai <kai.kang@windriver.com>
Date:   2012-06-14 18:10:58 +0800

    image-writer: tweak some strings
    
    Tweak some strings in accord with the script name 'image writer', and
    remove extra noun 'button'.
    
    Signed-off-by: Kang Kai <kai.kang@windriver.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

5	5	bin/image-writer

commit 3dea9d5a5af82d99d337238981807a4cb1bd5b93
Author: Kang Kai <kai.kang@windriver.com>
Date:   2012-06-14 18:10:57 +0800

    ui/crumbs/hig.py: simplify subprocess call
    
    According to Darren's suggestion, subprocess.call() will wait until the
    subprocess complete. So simplify the code, use subprocess.call() to wait
    command complete.
    
    Signed-off-by: Kang Kai <kai.kang@windriver.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	2	lib/bb/ui/crumbs/hig.py

commit b0e604d3d6dbfcaeac0a2e0e4399aeb4327f8cbc
Author: Kang Kai <kai.kang@windriver.com>
Date:   2012-06-14 18:10:56 +0800

    ui/crumbs/hig.py: tweak strings
    
    Add comments for DeployImageDialog 'standalone' part of codes to make it
    easy to read.
    And tweak some strings.
    
    Signed-off-by: Kang Kai <kai.kang@windriver.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

9	4	lib/bb/ui/crumbs/hig.py

commit 4be3e0876a35e7b5a95800bbf8834629dbd25906
Author: Kang Kai <kai.kang@windriver.com>
Date:   2012-06-06 17:52:28 +0800

    hob2: create a standalone deploy image tool
    
    [Yocto 2388]
    
    Create a deploy image tool using the existing dialog including
    DeployImageDialog and ImageSelectionDialog.
    
    This tool writes bootable images to USB devices, and it can be run
    directly without hob.
    
    Signed-off-by: Kang Kai <kai.kang@windriver.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

120	0	bin/image-writer
1	1	setup.py

commit 399cfbaf36ccd4b934e25f915e64b87f32a3eb82
Author: Kang Kai <kai.kang@windriver.com>
Date:   2012-06-06 17:52:27 +0800

    hob2: update DeployImageDialog for seperated tool
    
    Part of [Yocto 2388]
    
    Update class DeployImageDialog to get ready for a standalone deploy
    image tool. The standalone tool can be run directly without hob, and
    add a button to select image file. So adjust the layout of
    DeployImageDialog.
    
    Signed-off-by: Kang Kai <kai.kang@windriver.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

37	6	lib/bb/ui/crumbs/hig.py

commit f78f6d43a68e0f1dc4d3e4164eed453fcb9c22a8
Author: Kang Kai <kai.kang@windriver.com>
Date:   2012-06-06 17:52:26 +0800

    ui/crumbs/hig.py: check deploy process return value
    
    Update function response_cb of DeployImageDialog to get deploy process
    return value. According the return value tell user that deploy image
    successfully or not.
    
    Signed-off-by: Kang Kai <kai.kang@windriver.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

29	3	lib/bb/ui/crumbs/hig.py

commit 70b75a05a806fecf8be15b9ba66fec2eb87dcce4
Author: Kang Kai <kai.kang@windriver.com>
Date:   2012-06-06 17:52:25 +0800

    ui/crumbs/hig.py: remove extra spaces
    
    Remove extra spaces at the end of line or blank line.
    
    Signed-off-by: Kang Kai <kai.kang@windriver.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

4	4	lib/bb/ui/crumbs/hig.py

commit 0c43fe72e3c6a12ac19173d8cbbad81af21c2d85
Author: Kang Kai <kai.kang@windriver.com>
Date:   2012-06-06 17:52:24 +0800

    ui/crumbs/hig.py: fix run time error
    
    Commit 094742bed2fc01d55f572da946fcfa7a48521401 re-implement the
    function popen_read(). If there is no USB device, it crashes with
    "ExecutionError: Execution of 'ls /dev/disk/by-id/usb*' failed with exit
    code 2:"
    
    Replace popen_read() way with glob module to get the USB devices.
    
    Signed-off-by: Kang Kai <kai.kang@windriver.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	1	lib/bb/ui/crumbs/hig.py

commit 9e370d9b1022112be2ac8f73feb182b1bba179b0
Author: Kang Kai <kai.kang@windriver.com>
Date:   2012-06-06 17:52:23 +0800

    ui/crumbs/utils.py: import module bb
    
    When I try to call function which_terminal() of utils.py directly,
    it complains NameError: global name 'bb' is not defined
    
    So import module bb
    
    Signed-off-by: Kang Kai <kai.kang@windriver.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	0	lib/bb/ui/crumbs/utils.py

commit 59e19634a84fcb4c34b92cdcf7a9ea807c9abb63
Author: Liming An <limingx.l.an@intel.com>
Date:   2012-06-04 18:52:14 +0800

    Hob: fixed the index issue when set actived item for base image combo
    
    The combo item index dosn't be increased as the insert a dummy item, when
    execute the upadate base image combo operation.
    
    [YOCTO #2500]
    
    Signed-off-by: Liming An <limingx.l.an@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	2	lib/bb/ui/crumbs/imageconfigurationpage.py

commit d548eb8a03cfba5c64c018898972bc0a0bdb280c
Author: Liming An <limingx.l.an@intel.com>
Date:   2012-06-04 18:52:13 +0800

    Hob: Change 'run image' work flow and image detail screen as ui design
    
    Added the qemu_image_kernel selection view box to image detail screen GUI, and
    changed the 'run image' button clicked work flow.
    
    [YOCTO #2155]
    
    Signed-off-by: Liming An <limingx.l.an@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

51	67	lib/bb/ui/crumbs/builder.py
1	1	lib/bb/ui/crumbs/hig.py
2	1	lib/bb/ui/crumbs/hobeventhandler.py
157	44	lib/bb/ui/crumbs/imagedetailspage.py

commit fb82f6eb5405274f702bd6d64cbe995fd4b74145
Author: Shane Wang <shane.wang@intel.com>
Date:   2012-06-02 12:54:38 +0800

    Hob: Interpret some special characters for label markup
    
    Interpret some special characters for label markup, such as &, <, >, etc.
    Otherwise, the message dialog can't show them, and worsely, it makes the
    whole message blank.
    
    [Yocto #2492]
    
    Signed-off-by: Shane Wang <shane.wang@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

11	2	lib/bb/ui/crumbs/builder.py

commit d5dd9a7af9d35c588528f9937430d1ef5de216c6
Author: Shane Wang <shane.wang@intel.com>
Date:   2012-06-02 12:54:37 +0800

    Hob: add versions for compatibility check between Hob and templates
    
    If a user uses a very old version of Hob and does some work,
    later on he/she upgrade to the latest version of Hob, because
    Hob may change the settings (add more config option into the Adv.
    Settings dialog or remove some), then the old templates are not
    loadable and workable for the new Hob.
    
    Even though the user hasn't save any template before, the Hob could
    remember the settings between Hob sessions as a default template,
    (Remember we have a bug to ask Hob remember between sessions?),
    the new Hob will also load the default template.
    
    By adding versions, we can easily to fix the issue. If the versions
    don't match, Hob will remove the old default template first and
    initiate a new build, which has very very little impact on the user.
    (Just can't remember from the previous session after the user upgrades
    to a new and incompatible Hob)
    
    [Yocto #2492]
    
    Signed-off-by: Shane Wang <shane.wang@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

12	2	lib/bb/ui/crumbs/builder.py
16	1	lib/bb/ui/crumbs/template.py

commit d44af0185985cc46ba07a82875bbb4cd4a6d3dec
Author: Shane Wang <shane.wang@intel.com>
Date:   2012-06-02 12:54:36 +0800

    Hob: lower the limitation for PyGTK
    
    Signed-off-by: Shane Wang <shane.wang@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/ui/hob.py

commit 3c285d386a4ca0a86798feb0c506673a2a312727
Author: Liming An <limingx.l.an@intel.com>
Date:   2012-06-01 18:40:59 +0800

    Hob: fixed a definition not match issue when click choose directflb in package page
    
    [YOCTO #2526]
    
    Signed-off-by: Liming An <limingx.l.an@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/ui/crumbs/packageselectionpage.py

commit d2e2c917e4a93ec7fd344a2c703d526ce7b690cf
Author: Liming An <limingx.l.an@intel.com>
Date:   2012-06-01 18:40:58 +0800

    Hob: fix entry of recipe page can't be edited in case after clicked clear button
    
    cancel some inviable code and fixed this issue
    
    Signed-off-by: Liming An <limingx.l.an@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	8	lib/bb/ui/crumbs/hobwidget.py

commit 4bada20cd244a2dd6d72acd38f0cadc90453e60b
Author: Liming An <limingx.l.an@intel.com>
Date:   2012-06-01 18:40:57 +0800

    Hob: clear the repeated function get_kernel_file_name
    
    there are a repeated function in builder.py and imagedetailspage.py,
    so combine them to one.
    
    Signed-off-by: Liming An <limingx.l.an@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	2	lib/bb/ui/crumbs/builder.py
1	18	lib/bb/ui/crumbs/imagedetailspage.py

commit 56c1ab18fcaf4ac245dcb412ed55e8e0af07883b
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2012-05-30 17:17:18 +0100

    bitbake: include varflags in checksums
    
    Add a dependency to each variable on a filtered list of its varflags.
    This is intended to catch things such as SRC_URI checksums, varflags
    controlling extra functionality from classes (e.g. the recently updated
    update-alternatives class in OE-Core), etc. and ensure their values
    influence the sstate checksums.
    
    There is an exclusion list which needs to be set via bitbake.conf
    (BB_SIGNATURE_EXCLUDE_FLAGS), if this is not set then the functionality
    is disabled. The existing vardepsexclude mechanism can also be used to
    exclude undesired varflags, but they must be fully specified, e.g.:
    
    do_patch[vardepsexclude] += "do_patch[someflag]"
    
    Implements [YOCTO #2517].
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

19	1	lib/bb/data.py
4	0	lib/bb/siggen.py

commit 99feb77c2de707f2d825566cf48371c48f450e3e
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2012-05-30 17:17:17 +0100

    lib/bb/fetch2: ignore remote URIs when doing file checksums
    
    Skip evaluating remote URIs when doing local file checksums, because we
    don't need to process them and doing so will trigger a parse failure if
    SRCREV is not fully specified. Whilst this is just delaying a check
    until runtime (when do_fetch runs for the recipe) we're only validating
    this here accidentally and if we did wish to check it during parsing it
    ought to be done explicitly.
    
    Fixes [YOCTO #2512]
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

20	6	lib/bb/fetch2/__init__.py

commit a2a8e8c9f5a1a30aacab696fd2b434939ee2c4e2
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2012-05-30 17:17:16 +0100

    cooker: report recipe being parsed when ExpansionError occurs
    
    When an ExpansionError occurs during parsing it is useful to know which
    recipe was being parsed when it occurred.
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

5	1	lib/bb/cooker.py

commit 1ae0181ba49ccfcb2d889de5dd1d8912b9e49157
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2012-05-30 17:17:15 +0100

    cooker: fix UnboundLocalError when exception occurs during parsing
    
    Fix a recent regression where we see the following additional error
    after an error occurs during parsing:
    
    ERROR: Command execution failed: Traceback (most recent call last):
      File "/home/paul/poky/poky/bitbake/lib/bb/command.py", line 84, in runAsyncCommand
        self.cooker.updateCache()
      File "/home/paul/poky/poky/bitbake/lib/bb/cooker.py", line 1202, in updateCache
        if not self.parser.parse_next():
      File "/home/paul/poky/poky/bitbake/lib/bb/cooker.py", line 1672, in parse_next
        self.virtuals += len(result)
    UnboundLocalError: local variable 'result' referenced before assignment
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	0	lib/bb/cooker.py

commit 9cb16f3c73751e7cf6d495586a6193f06eb97b1f
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2012-05-30 17:17:14 +0100

    lib/bb/data_smart.py: don't report variable in ExpansionError if not set
    
    If the variable name is not specified then don't confuse the error message
    by starting off with "Failure expanding variable None...".
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

4	1	lib/bb/data_smart.py

commit 24b631acdaa143a4de39c6e1328849660c66f219
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2012-05-28 18:10:39 +0100

    hob: handle sanity check failures as a separate event
    
    In order to show a friendlier error message that does not bury the
    actual sanity error in our typical preamble about disabling sanity
    checks, use a separate event to indicate that sanity checks failed.
    
    This change is intended to work together with the related change to
    sanity.bbclass in OE-Core.
    
    Fixes [YOCTO #2336].
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

8	0	lib/bb/event.py
6	1	lib/bb/ui/crumbs/builder.py
6	0	lib/bb/ui/crumbs/hobeventhandler.py

commit d848af637e9a14b627533bee65bf16f680dff854
Author: Liming An <limingx.l.an@intel.com>
Date:   2012-05-30 20:01:11 +0800

    Hob: add the 'build new' be as the primary action for 'Image detail' page
    
    As ui design, we should set at least one primary action for 'My Image' and
    'Image detail' screen as the differnt selected image. if no 'run image' or
    no 'save as template' or no 'deploy image' we should set 'build new image'
    
    [YOCTO #2326]
    
    Signed-off-by: Liming An <limingx.l.an@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

8	11	lib/bb/ui/crumbs/imagedetailspage.py

commit e58ba1ad944ea1ba95a5ada80d4c88f0165bd1ca
Author: Liming An <limingx.l.an@intel.com>
Date:   2012-05-30 20:01:10 +0800

    Hob: Fixed a compatible issue for indicator icon view
    
    Because some screen not support the alpha visual channel, so the function
    'screen.get_rgba_colormap()' will return None, it's a compatible issue, so
    change it by another way.
    
    Signed-off-by: Liming An <limingx.l.an@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

8	43	lib/bb/ui/crumbs/hobwidget.py

commit ab10f3da1976581c371c43cdb88f405cf6fbcd95
Author: Robert Yang <liezhi.yang@windriver.com>
Date:   2012-05-30 18:19:08 +0800

    HOB: 'str' object has no attribute 'close'
    
    For builddetailspage.py:
      The "f" was a stream in the past, it is a string now, so it doesn't
      need f.close(), and change its name to "branch".
    
      And we don't need the "2>&1" since bb.process.run() can handle it, it
      will raise exception when error occurs, we should handle the exception
      ourselves if we want to ignore the error.
    
    For hig.py:
      Use bb.process.Popen() since it doesn't need the return value. If we
      use bb.process.run(), the parent process will wait for the child process
      to terminate to get the result.
    
    [YOCTO #2511]
    
    Signed-off-by: Robert Yang <liezhi.yang@windriver.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	4	lib/bb/ui/crumbs/builddetailspage.py
1	1	lib/bb/ui/crumbs/hig.py

commit 047ad35c0c869883509557aeb982e0b784ad2e71
Author: Kang Kai <kai.kang@windriver.com>
Date:   2012-05-30 16:13:47 +0800

    hob2: set beginning folders for FileChooserDialog
    
    Set begining folders FileChooserDialog for the select images and
    some local directory configurations. That may make user feel more
    convenient.
    
    Signed-off-by: Kang Kai <kai.kang@windriver.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

4	0	lib/bb/ui/crumbs/hig.py

commit bebef58b21bdff7a3ee1fa2449b7df19144f26fd
Author: Kang Kai <kai.kang@windriver.com>
Date:   2012-05-23 17:40:19 +0800

    cooker.py: terminate the Parser processes
    
    [Yocto 2142]
    
    Force to exit HOB when hob is parsing recipes, the bitbake doesn't stop.
    It hangs on function BitBakeServerConnection::terminate in file
    server/process.py:
        else:
            self.procserver.join()
    It is waiting for the children process quit.
    
    In stage of parse recipes BBCooker spawns Parser processes as many as
    cpu numbers. When quit the Parser processes they make their internal
    Queue to call cancel_join_thread() to avoid block but don't work at
    this time.
    So force to terminate the Parser processes.
    
    Signed-off-by: Kang Kai <kai.kang@windriver.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

6	3	lib/bb/cooker.py

commit 8b61b9584a8b00378f9fd8f165dbd65dcfd3c14e
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2012-05-24 16:47:55 +0100

    lib/bb/fetch2: fix comments for verify_checksum
    
    This function no longer returns a value, it raises errors instead, so
    update the comments to reflect this.
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	6	lib/bb/fetch2/__init__.py

commit 9ec0429271e68527a55fc123dea5a1b959c6ec3b
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2012-05-24 14:23:44 +0100

    bitbake/exceptions: Handle reports from the field of exception code failures
    
    Despite using python 2.6, there have been reports of issues where
    bitbake is printing tracebacks with errors in the exception handling
    code. This was masking the real error.
    
    Since we need to do whatever we can to give the user good feedback about
    errors, detect the tuple instead of namedtuple case and don't fault
    in the exception handler but just give up trying to traceback any further.
    
    In the reported cases, this gives a message the user can then understand.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

8	1	lib/bb/exceptions.py

commit 4de24ccc10e40cc088b8515095df59f69b12715d
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2012-05-24 13:57:16 +0100

    bitbake/utils.py: Ensure utils.which() returns full paths
    
    If the path passed to which contains empty elements, it will search
    the current working directory for the file which is correct baheviour.
    
    Various pieces of code assume the path returned is a full path though.
    This commit ensures we don't return relative paths.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	0	lib/bb/utils.py

commit 72fc62ca124a24e2dbe404a3c83a49608a7c7931
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2012-05-24 13:56:34 +0100

    bitbake/cooker: Ensure matchFile returns full pathnames
    
    We should always be passing full pathnames around within bitbake. If
    a file was referenced as a relative path to the current working
    directory, it might not get passed through the abspath call and
    hence the cwd would not get added as a prefix.
    
    This change adds a second pass at ensuring we only return absolute paths.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/cooker.py

commit 884a0b2d927404991b7e23d5bbfab096a5b7e849
Author: Liming An <limingx.l.an@intel.com>
Date:   2012-05-24 19:07:10 +0800

    Hob:fixed the issue of primary button is not an 'orange hob button'
    
    In image detail page, the primary button should be an 'orange hob
    button', there has a primary button is not, so change it.
    
    [YOCTO #2326]
    
    Signed-off-by: Liming An <limingx.l.an@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

16	11	lib/bb/ui/crumbs/imagedetailspage.py

commit d7ec0f90354e60c415a01429bf26746c1d63b7ad
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2012-05-24 11:03:33 +0100

    BBHandler: Tweak some data store access methods to the preferred syntax
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

4	4	lib/bb/parse/parse_py/BBHandler.py

commit 2c4a21dc8a588c8cf05549ddd9734731a46bea10
Author: Shane Wang <shane.wang@intel.com>
Date:   2012-05-23 23:19:44 +0800

    Hob: Adjust the progress bar and set 100% only when all is done.
    
    After parsing recipes, Hob will populate recipes and packages, which is probably
    time exhaused. So, this patch is to adjust the progress bar and ensure 100% is
    set if and only if all populations are done.
    
    The patch also fixes "weird 18 second delay when parsing recipes" on build appliance.
    Because Hob is doing something, but the progress bar shows 100% and wait there.
    
    [Yocto #2341]
    
    Signed-off-by: Shane Wang <shane.wang@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

10	2	lib/bb/ui/crumbs/builder.py
8	0	lib/bb/ui/crumbs/hobeventhandler.py

commit 588da606eb81c52cb92d29041e1c67897427bfdf
Author: Mark Hatle <mark.hatle@windriver.com>
Date:   2012-05-23 10:45:12 -0500

    build.py: Add support for log and run filename changes
    
    The format of the log file and run file are now selectable
    using BB_LOGFMT and BB_RUNFMT, respectively.
    
    The following values may be used:
    
    {task} - task name
    {taskfunc} - task.func or func, if task==func
    {func} - function name, only available in BB_RUNFMT
    {pid} - pid
    
    The log/run files may be placed into a subdirectory that
    is relative to T.
    
    Default BB_LOGFMT is: log.{task}.{pid}
    Default BB_RUNFMT is: run.{func}.{pid}
    
    Signed-off-by: Mark Hatle <mark.hatle@windriver.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

17	3	lib/bb/build.py

commit a0f554d0e722b6705844c6031fdcafa5d1a1c8a7
Author: Mark Hatle <mark.hatle@windriver.com>
Date:   2012-05-23 10:45:11 -0500

    build.py: Add additional debug messages
    
    We now add a debug message when entering and exiting a python or
    shell function.  This makes it easier to inspect a log and figure
    out the run order from the logs.
    
    Signed-off-by: Mark Hatle <mark.hatle@windriver.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

8	0	lib/bb/build.py

commit ccfe1a3a2419172799957676107f240badf3f062
Author: Mark Hatle <mark.hatle@windriver.com>
Date:   2012-05-23 10:45:10 -0500

    build.py: Cleanup exec_func_shell
    
    exec_func_python and exec_func_shell are similar, but variable
    usage has diverged sync the two up.  Since exec_func_python is first
    use that as the guide for the later exec_func_shell variable naming.
    
    Signed-off-by: Mark Hatle <mark.hatle@windriver.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

5	5	lib/bb/build.py

commit 8662b43dcbd6e38a5b2ab9d6529af1fb08c146bf
Author: Mark Hatle <mark.hatle@windriver.com>
Date:   2012-05-23 10:45:09 -0500

    build.py: Add a log to capture task execution order
    
    The new log.task_order contains an ordered list of the tasks as they
    were executed in any given recipe.  The format of the lines is
    <task> <pid>: <log file>
    
    Signed-off-by: Mark Hatle <mark.hatle@windriver.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

15	1	lib/bb/build.py

commit 8d6700255a6d4dda403c89b171a6d4a1883e5aae
Author: Robert Yang <liezhi.yang@windriver.com>
Date:   2012-05-20 20:36:06 +0800

    replace os.popen with subprocess.Popen
    
    Replace os.popen with subprocess.Popen since the older function would
    fail (more or less) silently if the executed program cannot be found
    
    There is a bb.process.run() which will invoke the Popen to run command,
    use it for simplify the code.
    
    For the:
    p4file = os.popen("%s%s files %s" % (p4cmd, p4opt, depot))
    ...
    for file in p4file:
        list = file.split()
    
    in bitbake/lib/bb/fetch2/perforce.py, it should be an error in the past,
    since it didn't use readline() to read the pipe, but directly used the
    split() for the pipe. Use the bb.process.run would fix the problem since
    bb.process.run will return strings.
    
    More info:
    http://docs.python.org/library/subprocess.html#subprocess-replacements
    
    [YOCTO #2075]
    
    Signed-off-by: Robert Yang <liezhi.yang@windriver.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

6	5	lib/bb/fetch2/perforce.py
2	2	lib/bb/fetch2/svk.py
3	2	lib/bb/ui/crumbs/builddetailspage.py
4	3	lib/bb/ui/crumbs/hig.py

commit f5b3bf115dc1ffbfb241a49cec0fc3654cb71021
Author: Robert Yang <liezhi.yang@windriver.com>
Date:   2012-05-20 20:36:05 +0800

    replace os.system with subprocess.call
    
    Replace os.system with subprocess.call since the older function would
    fail (more or less) silently if the executed program cannot be found
    
    More info:
    http://docs.python.org/library/subprocess.html#subprocess-replacements
    
    [YOCTO #2075]
    
    Signed-off-by: Robert Yang <liezhi.yang@windriver.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	1	lib/bb/fetch2/perforce.py
2	1	lib/bb/ui/crumbs/imagedetailspage.py
2	2	lib/bb/ui/ncurses.py

commit e3c213015953d1a0afb5ef4be59e1264990e5cee
Author: Enrico Scholz <enrico.scholz@sigma-chemnitz.de>
Date:   2012-05-20 17:19:11 +0200

    bitbake: support $BITBAKE_UI environment
    
    Patch adds support for a $BITBAKE_UI environment variable which allows
    to configure the preferred user interface. Although an '-u' option
    (which will override the environment variable) exists already, it was
    required to specify this option on every invocation of bitbake.
    
    Because user interface is instanciated very early in the program it is
    not possible to use bitbake.conf for setting up a default.  An
    environment variable (which acts in a similar category like $PAGER or
    $EDITOR) is a simple way for configuring the default.
    
    Signed-off-by: Enrico Scholz <enrico.scholz@sigma-chemnitz.de>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

5	4	bin/bitbake
6	0	doc/bitbake.1

commit c993b7c457f8b7776e8a5dff253bfa0724bc2cae
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2012-05-23 00:23:32 +0100

    bitbake: implement checksums for local files in SRC_URI
    
    Gathers a list of paths to have checksums calculated at parse time, and
    processes these when calculating task hashes. Checksums are cached with
    the file's current mtime. Thus, changing any local file in SRC_URI will
    now cause the do_fetch taskhash to change, thus forcing a rebuild.
    
    This change adds very roughly about an 8% increase in parse time (a few
    seconds) and maybe a few seconds during runqueue generation, so a fairly
    moderate performance hit.
    
    Note that since paths are resolved at parse time, this will not force
    a rebuild when files are introduced which would cause that resolved path
    to be different - for example, where a machine-specific version of a file
    was added without otherwise changing the recipe. This will need to be
    handled in a future update.
    
    Code to hook this into the signature generator was courtesy of
    Richard Purdie <richard.purdie@linuxfoundation.org>.
    
    Implements [YOCTO #2044].
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

10	3	lib/bb/cache.py
90	0	lib/bb/checksum.py
2	0	lib/bb/cooker.py
85	0	lib/bb/fetch2/__init__.py
24	0	lib/bb/siggen.py

commit 0fe3cb1438d297f90dd0fc6b26362ecbff75c76d
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2012-05-23 00:23:31 +0100

    bitbake: refactor out codeparser cache into a separate class
    
    We want to be able to reuse most this functionality for the file
    checksum cache.
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

114	2	lib/bb/cache.py
57	134	lib/bb/codeparser.py

commit e9516c7e14d782b943cc6e6a2e5e2111edf03d8c
Author: Liming An <limingx.l.an@intel.com>
Date:   2012-05-21 22:41:24 +0800

    Hob: fixed the issue about the 'run image' page should have the primary bug
    
    issues: when build a image for atom-pc, the output does not include live
    image, and 'Save as template' should become the primary action on the screen
    
    [YOCTO 2326]
    
    Signed-off-by: Liming An <limingx.l.an@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

8	6	lib/bb/ui/crumbs/imagedetailspage.py

commit 8bce98b23bc9cbc4da4464bfbaeb4e1a1aaca5c5
Author: Liming An <limingx.l.an@intel.com>
Date:   2012-05-21 22:41:23 +0800

    Hob: fixed the line width of base image description view
    
    As ui design, adjusted the line width for each base image description
    
    [YOCTO 2310]
    
    Signed-off-by: Liming An <limingx.l.an@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/ui/crumbs/imageconfigurationpage.py

commit 5e14cb41e8ba26a3114ea2c8b8f83b271bc44b54
Author: Liming An <limingx.l.an@intel.com>
Date:   2012-05-21 22:41:22 +0800

    Hob: fixed the issue about bug 'running image' workflow and related view
    
    [YOCTO #2155]
    
    Signed-off-by: Liming An <limingx.l.an@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

53	22	lib/bb/ui/crumbs/imagedetailspage.py

commit 0705d3db1ce6d0f29301e2428c990ab0d9b2860e
Author: Liming An <limingx.l.an@intel.com>
Date:   2012-05-21 22:41:21 +0800

    Hob: change the build failure scenario as ui design
    
    change the top bar display in build 'issue' page
    
    [YOCTO #2183]
    
    Signed-off-by: Liming An <limingx.l.an@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

98	1	lib/bb/ui/crumbs/builddetailspage.py
8	0	lib/bb/ui/crumbs/builder.py
7	0	lib/bb/ui/crumbs/hobwidget.py

commit 2729729012f035043fedc5098be2ec12b761166d
Author: Liming An <limingx.l.an@intel.com>
Date:   2012-05-21 22:41:20 +0800

    Hob: add '--select a machine--' and '--select a base image--' to GUI
    
    [YOCTO #2175]
    
    Signed-off-by: Liming An <limingx.l.an@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	3	lib/bb/ui/crumbs/builder.py
3	3	lib/bb/ui/crumbs/hoblistmodel.py
32	11	lib/bb/ui/crumbs/imageconfigurationpage.py
1	1	lib/bb/ui/crumbs/recipeselectionpage.py

commit b1dbc24ebcc4e5100c32568c2c41fd982fb4bcce
Author: Christopher Larson <kergoth@gmail.com>
Date:   2012-05-21 16:34:49 -0700

    fetch2: quote/unquote url paths
    
    This ensures we can handle things like %-encoded characters in the path
    portion of urls.
    
    Signed-off-by: Christopher Larson <kergoth@gmail.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

4	3	lib/bb/fetch2/__init__.py

commit 6635cd7bc2a448d1324e9344100f97613f4272b5
Author: Dongxiao Xu <dongxiao.xu@intel.com>
Date:   2012-05-22 11:08:35 +0800

    Hob: Get image name internally when updating the image description
    
    The image name shouldn't be passed from outside caller, since the image
    name may not in the combobox list. Getting the name from
    update_image_desc() internally.
    
    Signed-off-by: Dongxiao Xu <dongxiao.xu@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/ui/crumbs/builder.py
3	2	lib/bb/ui/crumbs/imageconfigurationpage.py

commit 960461bc12945675af3081eb469f932f4a6eb1cd
Author: Dongxiao Xu <dongxiao.xu@intel.com>
Date:   2012-05-22 11:08:34 +0800

    Hob: Add filter for images listed in image combo
    
    Define BBUI_IMAGE_WHITE_PATTERN variable to indicate which image is
    allowed to be displayed in image combobox.
    
    Define BBUI_IMAGE_BLACK_PATTERN variable to indicate which image is NOT
    allowed to be displayed in image combobox.
    
    This fixes [YOCTO #1581]
    
    Signed-off-by: Dongxiao Xu <dongxiao.xu@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

4	0	lib/bb/ui/crumbs/builder.py
2	0	lib/bb/ui/crumbs/hobeventhandler.py
33	4	lib/bb/ui/crumbs/imageconfigurationpage.py

commit 911a60c09c1539a3f10c2bcdb26d40e458c31303
Author: Shane Wang <shane.wang@intel.com>
Date:   2012-05-22 19:33:23 +0800

    Hob: reimplement the proxy page
    
    This patch is to reimplement the proxy page in the "Advanced Settings" dialog
    per the new design in https://bugzilla.yoctoproject.org/attachment.cgi?id=442
    and https://bugzilla.yoctoproject.org/attachment.cgi?id=443.
    
    [Yocto #2247]
    
    Signed-off-by: Shane Wang <shane.wang@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

106	37	lib/bb/ui/crumbs/builder.py
203	70	lib/bb/ui/crumbs/hig.py
0	4	lib/bb/ui/crumbs/hobeventhandler.py

commit ac53b88be58b0bed21730c0b61a8fc8e801a2f1b
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2012-05-22 12:18:11 +0100

    fetch2: Also exclude urls containing wildcards from checksumming for now
    
    Without this change, bitbake will try and checksum a wildcard which
    will lead to fetch failures.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	0	lib/bb/fetch2/__init__.py

commit 39adb5741d9eee0879d3181be505400dffc60804
Author: Andrei Gherzan <andrei@gherzan.ro>
Date:   2012-05-20 20:16:35 +0300

    bb/fetch2/__init__.py: Don't try to compute checksums for directories
    
    In this way we avoid failing the build while trying to fetch local
    directories.
    
    [YOCTO #2475]
    
    Signed-off-by: Andrei Gherzan <andrei@gherzan.ro>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

5	0	lib/bb/fetch2/__init__.py

commit e67ccbbeaecd2d9f3267995c590052c6a3c5b9ce
Author: Joshua Lock <josh@linux.intel.com>
Date:   2012-04-13 16:24:10 -0700

    hob: update required pygtk to 2.22.0 and gtk+ to 2.20.0
    
    Signed-off-by: Joshua Lock <josh@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/ui/hob.py

commit 494534cae6211d9055098562df1f35b56858f3ec
Author: Joshua Lock <josh@linux.intel.com>
Date:   2012-04-13 17:48:11 +0000

    lib/bb/ui/crumbs/[package|recipe]selectionpage: include button
    
    The indication of the included packages/recipes in the top right of the
    GUI, per design, is a button which switches the Notebook to the included
    tab.
    
    Signed-off-by: Joshua Lock <josh@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

8	2	lib/bb/ui/crumbs/packageselectionpage.py
8	2	lib/bb/ui/crumbs/recipeselectionpage.py

commit 93e66f494730d0840dd1d4f3ed924d91e6489995
Author: Joshua Lock <josh@linux.intel.com>
Date:   2012-04-12 19:58:11 +0000

    lib/bb/ui/crumbs/imageconfiguration: fix combo boxes drop-down width
    
    The width of the combo boxes drop down should match the combo box
    itself.
    
    Signed-off-by: Joshua Lock <josh@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

0	2	lib/bb/ui/crumbs/imageconfigurationpage.py

commit a84304ccf06a012817a5e6495d53147efcbed960
Author: Joshua Lock <josh@linux.intel.com>
Date:   2012-04-12 19:45:29 +0000

    lib/bb/ui/crumbs/hobwidget: use light text in HobIndicator
    
    Dark text on a dark background is difficult to read. Further the design
    document uses white text.
    
    Signed-off-by: Joshua Lock <josh@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/ui/crumbs/hobwidget.py

commit e683caa9863bbb52480346669806f22173629a5e
Author: Joshua Lock <josh@linux.intel.com>
Date:   2012-04-12 19:43:12 +0000

    lib/bb/ui/crumbs/: replace custom HobNotebook
    
    The custom HobNotebook widget was implemented to address perceived
    deficiencies in the gtk.Notebook API.
    
    Recent inspection reveals that the API is capable of all that Hob
    requires of it and therefore maintaining a custom class to provide
    similar functionality does not make sense.
    
    Addresses [YOCTO #2276]
    
    Signed-off-by: Joshua Lock <josh@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	3	lib/bb/ui/crumbs/builddetailspage.py
114	385	lib/bb/ui/crumbs/hobwidget.py
1	2	lib/bb/ui/crumbs/packageselectionpage.py
1	4	lib/bb/ui/crumbs/recipeselectionpage.py

commit b72ee3cf29a5badca3f8c1342356164270615aad
Author: Liming An <limingx.l.an@intel.com>
Date:   2012-05-14 20:51:50 +0800

    Hob:add function about clicked a row to load image file for 'my images' page
    
    [YOCTO #2238]
    
    Signed-off-by: Liming An <limingx.l.an@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

16	2	lib/bb/ui/crumbs/hig.py

commit e9d65e06aaf20bd9f5ca02544c1bf976c6bff9be
Author: Liming An <limingx.l.an@intel.com>
Date:   2012-05-14 20:51:48 +0800

    Hob: Apply a line length to consistantly display image descriptions
    
    [YOCTO #2310]
    
    Signed-off-by: Liming An <limingx.l.an@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	0	lib/bb/ui/crumbs/imageconfigurationpage.py

commit 243e4ba405b88fd466bec7b4aa042d20aa6121ff
Author: Enrico Scholz <enrico.scholz@informatik.tu-chemnitz.de>
Date:   2012-05-19 11:59:53 +0200

    knotty2: return exit code
    
    'bitbake -u knotty2' never failed which was caused by main() not
    propagating the exit code.
    
    Signed-off-by: Enrico Scholz <enrico.scholz@sigma-chemnitz.de>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/ui/knotty2.py

commit ef6d268f7b8527541a7fb044cf95a973be4097f4
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2012-05-15 19:49:36 +0000

    bitbake/fetch: Spell out which fetcher backends support and recommend checksums
    
    There were some hardcoded behaviours in the system for which backends
    support checksums verses which backends recommend them verses which
    don't recommend them.
    
    This moves the functionality into specific fetchers and then makes the
    general code generic. This cleans up the codebase and fixes some corner
    cases such as trying to checksum directories returned by the git fetcher.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

21	1	lib/bb/fetch2/__init__.py
3	0	lib/bb/fetch2/git.py
3	0	lib/bb/fetch2/ssh.py
3	0	lib/bb/fetch2/wget.py

commit 80411b3acf2173a4a7d415102d16676eb98363e3
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2012-05-13 12:31:01 +0000

    bitbake/fetch: If checksums are available, check them for any file, local or remote
    
    Currently, checksums are only checked for remote files. This changes
    the check to apply to any file we have checksum data for. A mismatch
    against a file is fatal but in the local case, no warnings are shown
    about missing checksums.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

19	21	lib/bb/fetch2/__init__.py

commit d43fafd7f01b5534499b45213197d8ccececdbc4
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2012-05-13 12:00:45 +0000

    bitbake/fetch2: Improve visibility of checksum warnings when fetching from mirrors
    
    When fetching from mirrors, checksum errors would get buried in the
    logs. This raises their profile so a warning is logged on the console
    when fetcher checksum issues are encountered, even if other attempts
    are made to get the file (which may or may not have the same issue).
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

15	5	lib/bb/fetch2/__init__.py

commit 2592a43e422c06a6f6174ada562e9c8ba25e1ec1
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2012-05-13 07:40:42 +0000

    bitbake/fetch2: Improve stamp creation in mirror code
    
    Under certain contitions such as local file:// mirrors of all files,
    bitbake might not check checksums. This is not desirable and we should
    always check the checksum where possible.
    
    This only exception to this is the git mirror tarball case where the
    checksum is unknown but we need to create the .done stamp for other
    reasons. This patch preserves thta functionality but in a more specific
    section of code where this doesn't interfere in normal checksums.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

4	4	lib/bb/fetch2/__init__.py

commit 9ad1cebe2220b41da2141cdb3f0a403abb46d77c
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2012-05-13 07:38:13 +0000

    bitbake/fetch2: Remove hardcoded file removal and use clean method
    
    Under certain circumstances, bitbake could remove files which were
    outside its control since it unconditionally removes ud.localpath.
    In the file:// case this can point at external paths.
    
    This patch converts it to use the clean() method which will remove
    files when its safe to do so but not in the file:// case since the
    file:// handler has an empty clean method. This means bitbake no
    longer removes files outside its control and is generally much safer.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	4	lib/bb/fetch2/__init__.py

commit f8bf4499549f978ce7c93bc088a66f74cd751e2c
Author: Martin Jansa <martin.jansa@gmail.com>
Date:   2012-05-12 08:57:47 +0200

    setup.py: fix path for bitbake-selftest
    
    * currently fails with:
      running build_scripts
      creating build/scripts-2.7
      copying and adjusting bin/bitbake -> build/scripts-2.7
      copying and adjusting bin/bitbake-layers -> build/scripts-2.7
      copying and adjusting bin/bitbake-diffsigs -> build/scripts-2.7
      copying and adjusting bin/bitbake-prserv -> build/scripts-2.7
      error: file '/tmp/tmpfs/portage/dev-embedded/bitbake-9999/work/bitbake-9999/bitbake-selftest' does not exist
    
    Signed-off-by: Martin Jansa <Martin.Jansa@gmail.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	setup.py

commit e4716f316152cafabebcefec7b387edeb02ad3eb
Author: Joshua Lock <josh@linux.intel.com>
Date:   2012-05-11 18:21:51 -0700

    lib/bb/siggen.py: ensure dumped signatures have group R/W
    
    We anticipate signatures being shared amongst peers in a group so ensure
    they have rw-rw-r-- permissions to facilitate this.
    
    Signed-off-by: Joshua Lock <josh@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

4	2	lib/bb/siggen.py

commit 759f953e29a7131614e5b1f0312edf2b17523675
Author: Joshua Lock <josh@linux.intel.com>
Date:   2012-05-11 17:58:57 -0700

    lib/bb/siggen: use open() rather than the file constructor
    
    The Python documentation states:
     "When opening a file, it’s preferable to use open() instead of invoking
    the file constructor directly." [1]
    
    Further in Python 3 direct use of the file constructor is no longer
    possible.
    
    1. http://docs.python.org/library/functions.html#open
    
    Signed-off-by: Joshua Lock <josh@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

4	4	lib/bb/siggen.py

commit 4dd2655caef1003b51c0600397a91f1c9526a67f
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2012-05-11 18:16:01 +0100

    bitbake/tests: Add test of the git fetcher
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

21	0	lib/bb/tests/fetch.py

commit 1a0cdc65812f1f12bf4bbea6540a3aaf0f81b4f7
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2012-05-11 18:15:16 +0100

    bitbake/fetch2/git: Set a default for the GITDIR variable
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	2	lib/bb/fetch2/git.py

commit 740c58d43cfb1445dd126e4827bb70ce988ca107
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2012-05-11 18:14:40 +0100

    bitbake/fetch2/git: Don't set the branch name to None, that makes no sense
    
    With floating revisions and no specified branch, the fetcher could fail
    with some obtuse errors. This was due to the branch name being set to None
    which makes no sense. This patch reworks some conditions to avoid this.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	1	lib/bb/fetch2/git.py

commit 2995b8d551e0532eca20f8862730acd062c608ad
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2012-05-10 09:23:11 +0100

    bitbake/runqueue: Drop check_stamp_fn, it's obsolete and should not be used
    
    This function was used by old code such as packaged staging but is thankfully
    obsolete now and replaced with better mechanisms. Its time to remove it and
    the horrible internal only variables associated with it.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

0	11	lib/bb/runqueue.py

commit 728ffde1bd69b880d48fe8523b1616956d13616e
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2012-05-10 09:22:22 +0100

    bitbake/runqueue: Drop check_stamps function, it is obsolete and unused
    
    This was originally used to check the consistency of the stamps in one function
    call. This turns out to be inefficient, unnecessary and if it were necessary,
    check_stamp_task() could be called in a loop. The function has been unmodified
    for a while and likely contains bugs. Its best simply removed.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

0	94	lib/bb/runqueue.py

commit e95755c4931b26d9f8102ed3652dff969145cfc9
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2012-05-10 09:21:41 +0100

    bitbake/runqueue: Fix 'full' stamp checking to be more efficient and cache results
    
    This should fix issues where bitbake would seemingly lock up when checking
    certain configurations of stampfiles.
    
    The cache is kept within the runqueue since that feels like the right
    place to associate this cache data.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

16	6	lib/bb/runqueue.py

commit d03dc07dea2f4e594fdbe4abe618670fe628a7c9
Author: Christopher Larson <chris_larson@mentor.com>
Date:   2012-05-09 18:35:48 -0500

    runqueue: drop unnecessary keys() in runqueue_process_waitpid
    
    Signed-off-by: Christopher Larson <chris_larson@mentor.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/runqueue.py

commit 84ea614bc56d35a414eb5bf5658891b340bfc569
Author: Christopher Larson <chris_larson@mentor.com>
Date:   2012-05-09 18:32:20 -0500

    runqueue: handle task exit due to signal/stop
    
    - for a normal exit, use WEXITSTATUS, rather than manually shifting
    - for exit via signal, set the exit code to 128+N, per shell convention
    - if a process was stopped, return and don't handle it, as the process can yet
      be continued
    
    This should fix the case where bitbake says a task failed with an exit code of
    0 (we assumed failure based on the overall status, but didn't pass all the
    information along to task_fail).
    
    Signed-off-by: Christopher Larson <chris_larson@mentor.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

22	11	lib/bb/runqueue.py

commit d8a1fc4613ce1d6c1d0e3dad53d7af15b2011fd5
Author: Liming An <limingx.l.an@intel.com>
Date:   2012-05-08 19:48:08 +0800

    Hob: change the workflow about click 'Run Image' to run directly after builded a qemu image
    
    [YOCTO #2155]
    
    Signed-off-by: Liming An <limingx.l.an@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

37	15	lib/bb/ui/crumbs/builder.py
72	67	lib/bb/ui/crumbs/imagedetailspage.py

commit 5812176a679a39a4d096134c871c3d24a7e505ea
Author: Liming An <limingx.l.an@intel.com>
Date:   2012-05-08 19:48:07 +0800

    Hob: add group number show and 'bold' visible effect for Package view
    
    as ui design, add number of packages for each group, and make the
    text font to 'bold' when row be selected
    
    [YOCTO #2195]
    
    Signed-off-by: Liming An <limingx.l.an@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

4	3	lib/bb/ui/crumbs/hoblistmodel.py
35	4	lib/bb/ui/crumbs/hobwidget.py
26	0	lib/bb/ui/crumbs/packageselectionpage.py

commit 02cc701869bceb2d0e11fe3cf51fb0582cda01b0
Author: Liming An <limingx.l.an@intel.com>
Date:   2012-05-08 19:48:06 +0800

    Hob: add original url show function with the tooltip hyperlink for user
    
    When case about No browser, such as running in 'Build Appliance', user can't open
    the hyper link, so add this work around for user. (Checking the browser is avaiable
    or not is hard by different system and browser type)
    
    [YOCTO #2340]
    
    Signed-off-by: Liming An <limingx.l.an@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

19	0	lib/bb/ui/crumbs/persistenttooltip.py

commit ac4a8885fafdc0d1e79831334ead9a8ddb6e2472
Author: Liming An <limingx.l.an@intel.com>
Date:   2012-05-08 19:48:05 +0800

    Hob: change the refresh icon speed to make it view clear
    
    Because the arrow icon refresh so fast as the go backward by illusion, so adjust it slow.
    
    [YOCTO #2335]
    
    Signed-off-by: Liming An <limingx.l.an@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/ui/crumbs/hobwidget.py

commit 283dbbbf5d34adb4c9e3aa87e3925fdebe21ff42
Author: Dongxiao Xu <dongxiao.xu@intel.com>
Date:   2012-05-07 14:08:35 +0800

    Hob: Clear the building status if command failed
    
    We may meet certain command failure during build time, for example,
    out of memory. In this case, we need to clear the "building" status.
    
    This fixes [YOCTO #2371]
    
    Signed-off-by: Dongxiao Xu <dongxiao.xu@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	0	lib/bb/ui/crumbs/hobeventhandler.py

commit 27b89561781f19fd95308433bec06fa8b7b354e8
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2012-05-04 18:28:21 +0100

    bitbake/tests/fetch: Add simple http fetcher tests
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

42	0	lib/bb/tests/fetch.py

commit 9586808572d06de4127f6a524e87e9ad75232423
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2012-05-04 18:27:31 +0100

    bitbake/fetch2/wget: Add fallback/default wget commands
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

4	4	lib/bb/fetch2/wget.py

commit 769b92b14a1dfbbf697b8f4bf9a5a828807fd885
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2012-05-04 18:26:40 +0100

    bitbake/fetch2/wget: Remove unneeded function indirection and reindent
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

23	26	lib/bb/fetch2/wget.py

commit 5999dc9985ad087c036611bfaa59b090a08781a6
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2012-05-04 18:26:00 +0100

    bitbake/fetch2/wget: Remove unnecessary use of OVERRIDES
    
    This allows some simplifications of the function and is slightly faster.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	7	lib/bb/fetch2/wget.py

commit ffec38675c0d78ee9fcd1d8f5a746d162145554e
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2012-05-04 18:25:13 +0100

    bitbake/fetch2: When unpacking, only use PATH variable if its set
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	1	lib/bb/fetch2/__init__.py

commit 9384dfaf644365c731be26572443287ce8f190b2
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2012-05-04 18:24:32 +0100

    bitbake/fetch2: Remove WORKDIR reference, should use passed parameter
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/fetch2/__init__.py

commit ac9f8536bdae2f6bf6ef1c4b8e98c590842be40b
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2012-05-04 17:42:28 +0100

    bitbake/tests: Add missing __init__.py file
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

0	0	bin/bitbake-selftest
0	0	lib/bb/tests/__init__.py

commit ae4a95780e3e08cf73c854efa8cd93379e00c4e5
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2012-05-04 16:18:55 +0100

    bitbake: Add start of bitbake regression/self testing
    
    This adds some basic unit testing for the codeparser and data store code. Many of
    the actual test cases were taken from work by Chris Larson's OE-Signatures work but with
    changes to adapt to the current bitbake APIs we need to test.
    
    I also imported CoW tests written by Holger Freyther from the original bitbake-test
    codebase: http://svn.berlios.de/wsvn/bitbake/trunk/bitbake-tests/tests/ and
    some tests from the doctests that were removed in commit:
    http://git.openembedded.org/bitbake/commit?id=3a11c2807972bbbddffde2fa67fc380d159da467
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

38	0	bin/bitbake-selftest
369	0	lib/bb/tests/codeparser.py
134	0	lib/bb/tests/cow.py
252	0	lib/bb/tests/data.py
42	0	lib/bb/tests/fetch.py
36	0	lib/bb/tests/utils.py
2	2	setup.py

commit a569c816e016447d60624c59a750709d59a0f455
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2012-05-04 15:03:33 +0100

    bitbake/utils: Convert vercmp_string() to use vercmp internally
    
    Having two different version comparision algorithms in bitbake has never seemed
    like a sensible idea. Worryingly, they also return different results to each other.
    
    The vercmp_string API is relatively unused with no users in OE-Core or BitBake
    itself for example. This patch converts it to use vercmp internalls, bringing
    consitency to the comparisions which is easy now we have other recently added
    functions. Yes, this changes behaviour but in this case I'd prefer we were
    consistent than having two different comparisions.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

4	124	lib/bb/utils.py

commit b766630ed7e099fffe817928a2811272677a1b26
Author: Jeff Polk <jeff.polk@windriver.com>
Date:   2012-05-04 08:05:15 -0600

    bitbake/fetch2: Fix spelling error in network access error message
    
    Signed-off-by: Jeff Polk <jeff.polk@windriver.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/fetch2/__init__.py

commit d5847bc5254b9d2f28a6b574f6157d1286add27c
Author: Jeff Polk <jeff.polk@windriver.com>
Date:   2012-05-04 08:05:14 -0600

    fetch2/git: Allow file:// URLs without checking for network access
    
    Don't check for network access before grabbing the the current head,
    cloning, or updating a clone when the protocol is 'file'.
    
    Signed-off-by: Jeff Polk <jeff.polk@windriver.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

6	3	lib/bb/fetch2/git.py

commit 270a05b0b4ba0959fe0624d2a4885d7b70426da5
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2012-05-01 16:07:50 +0100

    Update version to 1.15.2 (correspdoning to Yocto 1.2 release)
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	bin/bitbake
1	1	lib/bb/__init__.py

commit 36968815dcc91759eeacb308bf4b294af416eee5
Author: Dongxiao Xu <dongxiao.xu@intel.com>
Date:   2012-04-24 16:16:12 +0800

    Hob: Issue sanity check after parse is completed
    
    In original scheme, sanity check is part of the parsing process. If a
    sanity check fails, it means the parsing is failed and values in Hob
    GUI may not correct.
    
    With this commit, Hob will actively issue sanity_check() after the
    parsing is completed.
    
    This fixes [YOCTO #2361]
    
    Signed-off-by: Dongxiao Xu <dongxiao.xu@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

5	2	lib/bb/ui/crumbs/builder.py
11	5	lib/bb/ui/crumbs/hobeventhandler.py

commit 0be54917cd88ea8f110027a7840ac69a411fd589
Author: Dongxiao Xu <dongxiao.xu@intel.com>
Date:   2012-04-24 16:16:11 +0800

    Hob: Add proxy setting into setting's md5
    
    If user changed the proxy setting, we will reparse configuration because
    it may need sanity check.
    
    Signed-off-by: Dongxiao Xu <dongxiao.xu@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

9	0	lib/bb/ui/crumbs/hig.py

commit 4d7bf9d813229b78b1cd87d06f7042e7923b7db4
Author: Dongxiao Xu <dongxiao.xu@intel.com>
Date:   2012-04-24 16:16:10 +0800

    event.py: Add SanityCheck and SanityCheckPassed events
    
    Signed-off-by: Dongxiao Xu <dongxiao.xu@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

10	0	lib/bb/event.py

commit 244ce2b900ae6cecbeeccfe2056e61c132476261
Author: Joshua Lock <josh@linux.intel.com>
Date:   2012-04-23 14:35:44 -0700

    hob: enable sanity checks after launch
    
    To ensure the users configuration is sanity tested enable the sanity
    checks after the GUI has started but before any parsing is done.
    
    Signed-off-by: Joshua Lock <josh@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	0	lib/bb/ui/crumbs/builder.py
3	0	lib/bb/ui/crumbs/hobeventhandler.py

commit 1a39698ab8498410d159c665c015f9297f153797
Author: Joshua Lock <josh@linux.intel.com>
Date:   2012-04-17 08:19:05 -0700

    lib/bb/ui/crumbs/recipeselectionpage: fix type availabel->available
    
    Signed-off-by: Joshua Lock <josh@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/ui/crumbs/recipeselectionpage.py

commit 0a2378237f07eb1c812e2308e64b7d70781e2b39
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2012-04-16 23:31:58 +0100

    bitbake-layers: hide deprecation warnings
    
    There are a number of DeprecationWarnings within BitBake code which
    bitbake itself filters out; bitbake-layers was not doing this, resulting
    in a stream of warnings printed out when used with Python < 2.7 (these
    warnings default to disabled on version 2.7 and above.)
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	0	bin/bitbake-layers

commit 68a65e5eeeb01d78444f1e5b5d1bb7b21c9d0b2c
Author: Beth Flanagan <elizabeth.flanagan@intel.com>
Date:   2012-04-16 16:13:08 -0700

    hoblistmodel.py: description for selfcreated image
    
    The current description is empty. This adds a default
    description for hob's dummy_image.
    
    Signed-off-by: Beth Flanagan <elizabeth.flanagan@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	1	lib/bb/ui/crumbs/hoblistmodel.py

commit ea37272ccc28d6e24b48286e5c4c3edbad1d57cd
Author: Dongxiao Xu <dongxiao.xu@intel.com>
Date:   2012-04-17 16:21:39 +0800

    Hob: Set the "stop" button insensitive before hide it
    
    If user stops a build, we need to firstly set the button insensitive and
    then hide it. This ensures the button's init status is "insensitive" in
    next build.
    
    Signed-off-by: Dongxiao Xu <dongxiao.xu@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	0	lib/bb/ui/crumbs/builddetailspage.py

commit 99f01305b4c2253567a1a13a33339b1755a86e6d
Author: Dongxiao Xu <dongxiao.xu@intel.com>
Date:   2012-04-17 16:21:38 +0800

    Hob: Enlarge the upper value of image size
    
    Originally the upper value for image size and extra size is 1024M, which
    is relatively small. Enlarge it to 64GB.
    
    Besides, fix tooltip for toolchain build.
    
    Signed-off-by: Dongxiao Xu <dongxiao.xu@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

4	4	lib/bb/ui/crumbs/hig.py

commit 0f1b142a3f6b8125bf023c2e5ec269618869abf7
Author: Dongxiao Xu <dongxiao.xu@intel.com>
Date:   2012-04-17 16:21:37 +0800

    data_smart: Improve the calculation of config hash
    
    For config hash, we put the keys in structure of "set()", which is not
    order sensitive. Therefore when calculating the md5 value for config
    hash, we need to identify the order of the keys.
    
    Signed-off-by: Dongxiao Xu <dongxiao.xu@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

4	3	lib/bb/data_smart.py

commit 98694c1dbc276cc151f393db67bfd43442da28ba
Author: Liming An <limingx.l.an@intel.com>
Date:   2012-04-16 18:09:48 +0800

    Hob: fixed a little view issue about package selection page
    
    In package selection page, treeview cell data callback function not cover the 'else' case, so parent item will render the pervious value.
    
    Signed-off-by: Liming An <limingx.l.an@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	1	lib/bb/ui/crumbs/hobwidget.py

commit a6f45b23851e22c7793d9a534fd197316bb5b9b8
Author: Liming An <limingx.l.an@intel.com>
Date:   2012-04-16 16:53:28 +0800

    Hob: add the parent window to 'binb' popup window for managing it
    
    The 'binb' popup window should be "set transient for" the main application
    window which they were spawned from.
    
    Signed-off-by: Liming An <limingx.l.an@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/ui/crumbs/builder.py
5	1	lib/bb/ui/crumbs/persistenttooltip.py

commit f6be78d8a45dc501c2bbe1e1a399a342dabe11d5
Author: Liming An <limingx.l.an@intel.com>
Date:   2012-04-16 16:53:27 +0800

    Hob: fixed the issue that the notebook overlay-scrollbar is overlapped
    
    In those systems which had use gtk overlay-scrollbar feature,such as
    Ubuntu 11.10, we have the issue with the multiple overlaped scrollbar in
    'Recipe View' notebook or 'Package View' notebook, this patch is going to
    fix it.
    
    Signed-off-by: Liming An <limingx.l.an@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

0	1	lib/bb/ui/crumbs/hobwidget.py

commit 4505097f4f7834857a6086d5dabeedb24b49cf4c
Author: Dongxiao Xu <dongxiao.xu@intel.com>
Date:   2012-04-16 15:51:43 +0800

    Hob: Fix contents in imagedetailsscreen
    
    This commit fixes the contents in imagedetailsscreen, which lacks some
    kind of image types, e.x., iso and hddimg.
    
    Signed-off-by: Dongxiao Xu <dongxiao.xu@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

5	4	lib/bb/ui/crumbs/builder.py
1	1	lib/bb/ui/crumbs/hig.py

commit cb07a027d3366ed30b0f7e5e85d08c6fda4eb5b9
Author: Shane Wang <shane.wang@intel.com>
Date:   2012-04-16 00:09:25 +0800

    Hob: add exception handling
    
    Create a wrapper with exception handling to call self.server.runCommand() safely.
    Again, add exception handling to load_template() and save_template()
    
    Signed-off-by: Shane Wang <shane.wang@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

36	20	lib/bb/ui/crumbs/builder.py
92	83	lib/bb/ui/crumbs/hobeventhandler.py

commit e5a6eb4f007bf270f2fddc814eb856da46e20eee
Author: Dongxiao Xu <dongxiao.xu@intel.com>
Date:   2012-04-15 15:26:38 +0800

    Hob: Simplify the init process
    
    This commit merges some functionalities together and avoid unnecessary
    signal handling. This can help to speed up the Hob startup.
    
    Signed-off-by: Dongxiao Xu <dongxiao.xu@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	10	lib/bb/ui/crumbs/builder.py
2	9	lib/bb/ui/crumbs/hobeventhandler.py

commit 067bc46a0fbc542fef1fcaa406ad3737a4c5a55a
Author: Dongxiao Xu <dongxiao.xu@intel.com>
Date:   2012-04-15 15:26:37 +0800

    Hob: Handle NoProvider event in runningbuild module
    
    If NoProvider event is received, we will handle it in runningbuild
    module and send notification to Hob instance, avoiding stepping into the
    final page with no image built out.
    
    This fixes [YOCTO #2249]
    
    Signed-off-by: Dongxiao Xu <dongxiao.xu@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

14	4	lib/bb/ui/crumbs/builder.py
0	21	lib/bb/ui/crumbs/hobeventhandler.py
17	0	lib/bb/ui/crumbs/runningbuild.py

commit 95f4e9dc351f67442844ff52f90fc154fa95ba95
Author: Shane Wang <shane.wang@intel.com>
Date:   2012-04-15 02:58:59 +0800

    Hob: reset user recipe selection and package selection after settings are changed
    
    Reset user recipe list and package list after the user changes the settings and
    triggers recipe reparsing.
    
    This is to continue to fix the bug [Yocto #2255]
    
    [Yocto #2255]
    
    Signed-off-by: Shane Wang <shane.wang@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

8	4	lib/bb/ui/crumbs/builder.py
1	3	lib/bb/ui/crumbs/imageconfigurationpage.py

commit f7c874ab930b9e7f95e79d0e84e62eb9b967f566
Author: Shane Wang <shane.wang@intel.com>
Date:   2012-04-15 02:58:58 +0800

    Hob: remember layers and settings between Hob sessions
    
    This patch is to remember layers and settings between Hob sessions, which
    includes:
     - Put some variables for the build details screen from Configuration to
       Parameters because they are not actually for build but for show
     - We create a dummy Configuration instance and a dummy Parameters instance
       in __init__ of builder
     - The two instances will be assigned the real values by
       update_configuration_parameters() after parsing (in the event callback)
     - When it is the first time to launch Hob in a build directory, nothing is
       remembered since everything is fresh.
     - The feature is implemented with templates, and based on the hook for Hob.
     - When the user changes the layers or the settings, a default template file
       is saved into ".hob/".
     - Later on, the layers and the settings are remembered by loading the default
       template automatically.
    
    Signed-off-by: Shane Wang <shane.wang@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

8	8	lib/bb/ui/crumbs/builddetailspage.py
99	59	lib/bb/ui/crumbs/builder.py
0	1	lib/bb/ui/crumbs/hobeventhandler.py
20	4	lib/bb/ui/crumbs/template.py

commit 7540f8d446345559ea9b47f4ff71d203ffdfaf8d
Author: Dongxiao Xu <dongxiao.xu@intel.com>
Date:   2012-04-13 01:14:14 +0800

    Hob: Use BB_DEFAULT_TASK as build task instead of hardcoded "build"
    
    Originally we use hardcoded "build" as the default task. This commit
    fixes it by using BB_DEFAULT_TASK.
    
    This fixes [YOCTO #2283]
    
    Signed-off-by: Dongxiao Xu <dongxiao.xu@intel.com>

7	3	lib/bb/ui/crumbs/builder.py
8	4	lib/bb/ui/crumbs/hobeventhandler.py

commit a74a6a033e66a0ae7b47c84d842bdd54066c69a1
Author: Dongxiao Xu <dongxiao.xu@intel.com>
Date:   2012-04-13 01:04:50 +0800

    Hob: Build selected image if not customized
    
    If user selected a base image and didn't customize it, Hob will still
    build the selected image instead of hob-image.
    
    This fixes [YOCTO #2253]
    
    Signed-off-by: Dongxiao Xu <dongxiao.xu@intel.com>

14	5	lib/bb/ui/crumbs/builder.py
9	8	lib/bb/ui/crumbs/hobeventhandler.py

commit 14a9da66fe08d181f45853c52e0c9f14773070a8
Author: Dongxiao Xu <dongxiao.xu@intel.com>
Date:   2012-04-13 21:51:36 +0800

    Hob: Save the original image name into template
    
    Previously we use the template file name as the image name. This commit
    changes to use the original selected image into template file.
    
    Signed-off-by: Dongxiao Xu <dongxiao.xu@intel.com>

2	7	lib/bb/ui/crumbs/builder.py
0	16	lib/bb/ui/crumbs/hoblistmodel.py

commit b1449ce6ccf4e33eb2fd34829d2c435a464ae88b
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2012-04-12 17:30:27 +0800

    Hob: A minor fix on tooltip
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>
    Signed-off-by: Dongxiao Xu <dongxiao.xu@intel.com>

4	1	lib/bb/ui/crumbs/hig.py

commit 434fdb3913cc78e2e9cdeede4c4fa7f1c8ef8892
Author: Lianhao Lu <lianhao.lu@intel.com>
Date:   2012-04-13 16:37:18 +0800

    Hob: Added required packages for toolchain.
    
    Added the requried packages task-core-standalone-sdk-target(-dbg) for
    building toolchain.
    
    Fixed bug [YOCTO #2274]
    
    Signed-off-by: Lianhao Lu <lianhao.lu@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	1	lib/bb/ui/crumbs/hoblistmodel.py

commit 97b610c54c60b5a40fa7f6a09fa23ce17b38f93a
Author: Lianhao Lu <lianhao.lu@intel.com>
Date:   2012-04-12 17:28:01 +0800

    bb.utils: Modifed vercmp() to meet Debian rules.
    
    The version compare function vercmp() was not exatcly conforming to
    Debian rules, e.g. it reported 'r1' > 'r1.1' but the Debian rules says
    'r1' < 'r1.1'; it didn't support the "~" either.
    
    Modified the vercmp() to meet Debian rules, so that it's compatible to
    the rules used in opkg.
    
    This part of the buf fixing of [YOCTO #2233].
    
    Signed-off-by: Lianhao Lu <lianhao.lu@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

16	24	lib/bb/utils.py

commit ad7f6bf3c7c4c15d546781aaefdaf03f00193f7c
Author: Shane Wang <shane.wang@intel.com>
Date:   2012-04-12 22:22:44 +0800

    Hob: forbid users to exit Hob directly when Hob is busy
    
    When Hob is busy with generating data, exiting Hob is not allowed.
    That should be reasonable because at that time the mouse cursor is not a pointer.
    If users want to exit, they can click "Stop" first and then do exit.
    
    That is also a walkaround for [Yocto #2142]
    
    Signed-off-by: Shane Wang <shane.wang@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

6	0	lib/bb/ui/crumbs/builder.py

commit 0ec7d1bbfd2e09ae60f99e6134b20ffd1d9145b1
Author: Dongxiao Xu <dongxiao.xu@intel.com>
Date:   2012-04-12 23:46:26 +0800

    Hob: Implement Hob config parse hook
    
    To make Hob's specific variable settings take effect, we add a Hob
    config hook at the end of parsing for each configuration file, and in
    the hook function, Hob will set its own variables to the data store.
    
    This fixes:
    [YOCTO #2210]
    [YOCTO #2254]
    
    Signed-off-by: Dongxiao Xu <dongxiao.xu@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

26	0	lib/bb/ui/crumbs/builder.py
14	12	lib/bb/ui/crumbs/hobeventhandler.py

commit f54e733c7863110896f43900d9e4e791602f9d65
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2012-04-13 11:51:17 +0100

    ConfHandler.py: Add a hook for config parsing
    
    To make the UI settings take effect, we need to hook at the end of each
    config file parsing and set UI specific values.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>
    Signed-off-by: Dongxiao Xu <dongxiao.xu@intel.com>

7	0	lib/bb/command.py
11	0	lib/bb/parse/parse_py/ConfHandler.py

commit 3c2808b67384e92601cbd66877c36ca40df7c7ba
Author: Shane Wang <shane.wang@intel.com>
Date:   2012-04-12 22:22:43 +0800

    Hob: fix the missing functions
    
    The patch is to correct 7e5d41ab223b73c1c7b2cf7e4dd13289a2dc2e8b
    (Bitbake rev: b6e68019494044305ab28492a517d1eafea851c3) to fix the
    missing functions.
    
    [Yocto #2281]
    
    Signed-off-by: Shane Wang <shane.wang@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

6	2	lib/bb/ui/crumbs/packageselectionpage.py

commit b6e68019494044305ab28492a517d1eafea851c3
Author: Joshua Lock <josh@linux.intel.com>
Date:   2012-04-11 18:54:17 -0700

    packageselectionpage: add missing method
    
    This is just a copy of the same method from the recipeselectionpage so
    that we can actually run hob again.
    
    Fixes [YOCTO #2281]
    
    Signed-off-by: Joshua Lock <josh@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

4	0	lib/bb/ui/crumbs/packageselectionpage.py

commit f44f12b812d246da994519bc39789bf2dcfbac4b
Author: Saul Wold <sgw@linux.intel.com>
Date:   2012-04-11 19:02:15 -0700

    builder: fix missing \ for if continuation
    
    Signed-off-by: Saul Wold <sgw@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/ui/crumbs/builder.py

commit 4219e2ea033232d95117211947b751bdb5efafd4
Author: Saul Wold <sgw@linux.intel.com>
Date:   2012-04-10 17:57:15 -0700

    hig/builder: use the new which_terminal() function
    
    Also adjusted the cmdline ordering to work correctly
    with both xterm and vte.
    
    Signed-off-by: Saul Wold <sgw@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

7	4	lib/bb/ui/crumbs/builder.py
5	3	lib/bb/ui/crumbs/hig.py

commit 359a9ea4c8d61247064db3eaefb816ef116d332a
Author: Saul Wold <sgw@linux.intel.com>
Date:   2012-04-10 17:57:08 -0700

    ui/crumbs/utils.py: new file for choosing terminals
    
    Adding this simple version of a terminal selector for use
    hob since it's needed. Moving forward in the 1.3 release
    the existing code in meta/lib/oe/termnial.py will be migrated
    to core bitbake code and this will use that code.
    
    Signed-off-by: Saul Wold <sgw@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

33	0	lib/bb/ui/crumbs/utils.py

commit 06ce753fd4680a204ccc63949ace637dc1c115e2
Author: Liming An <limingx.l.an@intel.com>
Date:   2012-04-09 22:13:51 +0800

    Hob:Fixed some incorrect values of Build configuration tab
    
    Because some variables not be updated when building started, so add them
    to the updating function of configuration class, and add reset function of
    configurate treeview of building detail page
    
    [YOCTO #2244]
    
    Signed-off-by: Liming An <limingx.l.an@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

12	8	lib/bb/ui/crumbs/builddetailspage.py
7	7	lib/bb/ui/crumbs/builder.py

commit df1564d78d081ceab51d628d227e57b7a197259b
Author: Shane Wang <shane.wang@intel.com>
Date:   2012-04-09 22:13:50 +0800

    Hob: show those appliable buttons on the image details page only
    
    We don't use "grayed out" but use "show/hide" for those appliable buttons
    in the image details page.
    
    [Yocto #2143]
    
    Signed-off-by: Shane Wang <shane.wang@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

84	38	lib/bb/ui/crumbs/imagedetailspage.py

commit e549b11f4f31863393f62a253ee96bead4594523
Author: Shane Wang <shane.wang@intel.com>
Date:   2012-04-09 22:13:49 +0800

    Hob: forget selected_recipes and selected_packages after users change the machine
    
    The patch is to fix [Yocto #2255]. Now the logic is:
    
    - If users change the machine, the image combo is empty for users to select.
    - If users load the template, the image combo should set the value of
      selected_image specified in the template.
    - After loading a template, if users change the machine, the selected_image
      specified in the template should be removed from the image combo because
      it is probably invalid for a new machine.
    - If users customize the recipe/package list, and change the settings which
      causes reparsing, selected_recipes and selected_packages should be remembered.
    - If users add more layers, selected_recipes and selected_packages should be
      remembered.
    
    Signed-off-by: Shane Wang <shane.wang@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	0	lib/bb/ui/crumbs/builder.py
23	3	lib/bb/ui/crumbs/imageconfigurationpage.py

commit 543e81b87b48de9c5285b81c856376c9f52d7902
Author: Shane Wang <shane.wang@intel.com>
Date:   2012-04-09 22:13:48 +0800

    Hob: add tooltips into image details screen
    
    [Yocto #2243]
    
    Signed-off-by: Shane Wang <shane.wang@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

11	5	lib/bb/ui/crumbs/imagedetailspage.py

commit a36bd8ddf62397c554dadb97841532e260b01b91
Author: Shane Wang <shane.wang@intel.com>
Date:   2012-04-09 22:13:47 +0800

    Hob: tooltip change for "Build image" button
    
    [Yocto #2242]
    
    Signed-off-by: Shane Wang <shane.wang@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/ui/crumbs/packageselectionpage.py

commit f6e0d93c96d1626e7da298e296b1be9e425173b2
Author: Shane Wang <shane.wang@intel.com>
Date:   2012-04-09 22:13:46 +0800

    Hob: clean up and reword stop_parse()
    
    Signed-off-by: Shane Wang <shane.wang@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	3	lib/bb/ui/crumbs/builder.py
1	1	lib/bb/ui/crumbs/imageconfigurationpage.py

commit 569d5ac3a3e89c7a8d69ec611b69edbae414b5fe
Author: Shane Wang <shane.wang@intel.com>
Date:   2012-04-09 22:13:45 +0800

    Hob: clean up generate_configuration()
    
    Signed-off-by: Shane Wang <shane.wang@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

4	1	lib/bb/ui/crumbs/builder.py

commit ef441d51700f73577e72c106ee2a0ecd4eceda08
Author: Shane Wang <shane.wang@intel.com>
Date:   2012-04-09 22:13:44 +0800

    Hob: clean up cancel_build()
    
    Signed-off-by: Shane Wang <shane.wang@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

5	2	lib/bb/ui/crumbs/builder.py

commit e95b52820f26a7a35865e8978ea752053dccd4b1
Author: Shane Wang <shane.wang@intel.com>
Date:   2012-04-09 22:13:43 +0800

    Hob: clean up request_package_info_async()
    
    Signed-off-by: Shane Wang <shane.wang@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

4	1	lib/bb/ui/crumbs/builder.py
1	1	lib/bb/ui/crumbs/hobeventhandler.py

commit 16fecd0d0f95285bf774030cd24006206185faee
Author: Shane Wang <shane.wang@intel.com>
Date:   2012-04-09 22:13:42 +0800

    Hob: clean up and unify get_parameters() to be get_parameters_sync()
    
    Signed-off-by: Shane Wang <shane.wang@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

6	3	lib/bb/ui/crumbs/builder.py

commit 7b6414e2b82666c3cfa5432ce8fe8c348b227441
Author: Shane Wang <shane.wang@intel.com>
Date:   2012-04-09 22:13:41 +0800

    Hob: clean up to call clear_busy() in hobeventhandler.py
    
    Signed-off-by: Shane Wang <shane.wang@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

0	1	lib/bb/ui/crumbs/builder.py
1	0	lib/bb/ui/crumbs/hobeventhandler.py

commit d4f2335e40d4d667847d3faed79bcee74baeea37
Author: Shane Wang <shane.wang@intel.com>
Date:   2012-04-09 22:13:40 +0800

    Hob: clean up and unify the steps for IMAGE_GENERATING to call generate_image_async()
    
    For the steps in IMAGE_GENERATING, the patch consolidates them into
    generate_image_async() to call.
    
    Signed-off-by: Shane Wang <shane.wang@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

16	16	lib/bb/ui/crumbs/builder.py

commit 1ec53d41774528ab01e835d1cf4166f0202a7c38
Author: Shane Wang <shane.wang@intel.com>
Date:   2012-04-09 22:13:39 +0800

    Hob: clean up and unify the steps for PACKAGE_GENERATING and FAST_IMAGE_GENERATING to call generate_packages_async() and fast_generate_image_async()
    
    For the steps in PACKAGE_GENERATING, the patch consolidates them into
    generate_packages_async() to call.
    
    For the steps in FAST_IMAGE_GENERATING, the patch also consolidates them
    into fast_generate_image_async() to call.
    
    Signed-off-by: Shane Wang <shane.wang@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

19	11	lib/bb/ui/crumbs/builder.py

commit ed2aa6f235e1b789af8a33729302a4269674c6b4
Author: Shane Wang <shane.wang@intel.com>
Date:   2012-04-09 22:13:38 +0800

    Hob: clean up and unify the steps for RCPPKGINFO_POPULATING to call populate_recipe_package_info_async()
    
    For the steps in RCPPKGINFO_POPULATING, This patch consolidates them into
    populate_recipe_package_info_async() to call.
    
    Signed-off-by: Shane Wang <shane.wang@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

7	7	lib/bb/ui/crumbs/builder.py
1	1	lib/bb/ui/crumbs/imageconfigurationpage.py

commit f583d43e87c049bdee88890e289f14520c7c31a1
Author: Shane Wang <shane.wang@intel.com>
Date:   2012-04-09 22:13:37 +0800

    Hob: clean up and unify the steps for CONFIG_UPDATE to call update_config_async()
    
    For the steps in CONFIG_UPDATE, the patch consolidates them into
    update_config_async() to call.
    consequently remove CONFIG_UPDATE since MACHINE_SELECTION covers it.
    
    Signed-off-by: Shane Wang <shane.wang@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

9	12	lib/bb/ui/crumbs/builder.py

commit ec42be626a5d6362a09f12f4f4025ad92d70c89b
Author: Shane Wang <shane.wang@intel.com>
Date:   2012-04-09 22:13:36 +0800

    Hob: clean up and unify the steps for new build to call initiate_new_build_async()
    
    initiate_new_build() (changed the function name into initiate_new_build_async()
    to indicate it is an async function) or the similar sub-functions are called at
    different places.
    
    This patch is unify to call initiate_new_build_async().
    
    Signed-off-by: Shane Wang <shane.wang@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

7	12	lib/bb/ui/crumbs/builder.py
1	1	lib/bb/ui/crumbs/imagedetailspage.py

commit 684e0eddfbbb4618a1adcf179296f3f1066ae1c0
Author: Shane Wang <shane.wang@intel.com>
Date:   2012-04-09 22:13:35 +0800

    Hob: correct indent
    
    Signed-off-by: Shane Wang <shane.wang@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	2	lib/bb/ui/crumbs/hobeventhandler.py

commit 37c969164a6ef9adcaa743a3909102b005a55163
Author: Liming An <limingx.l.an@intel.com>
Date:   2012-04-09 22:13:34 +0800

    Hob: Add the tooltips for recipe view page as request
    
    [YOCTO #2229]
    
    Signed-off-by: Liming An <limingx.l.an@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

20	2	lib/bb/ui/crumbs/hobwidget.py
8	0	lib/bb/ui/crumbs/recipeselectionpage.py

commit c0c81647dc5e72fe3abb1fb3b65a978aa4b226a5
Author: Liming An <limingx.l.an@intel.com>
Date:   2012-04-09 22:13:33 +0800

    Hob: add fadeout display effection for package view include page
    
    [YOCTO #2100]
    
    Signed-off-by: Liming An <limingx.l.an@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

15	2	lib/bb/ui/crumbs/hoblistmodel.py
5	1	lib/bb/ui/crumbs/hobwidget.py
38	6	lib/bb/ui/crumbs/packageselectionpage.py
1	1	lib/bb/ui/crumbs/recipeselectionpage.py

commit c9eed04c6275ef2c694f89e047f85c7de76f89b6
Author: Liming An <limingx.l.an@intel.com>
Date:   2012-04-09 22:13:32 +0800

    Hob: add fadeout display effection for recipe view include page
    
    As UI request, in recipes selection page, if user exclude a item,
    the related depends recipes will be excluded together,so the view
    clearly to add it.
    
    [YOCTO #2100]
    
    Signed-off-by: Liming An <limingx.l.an@intel.com>
    Signed-off-by: Shane Wang <shane.wang@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

4	3	lib/bb/fetch2/__init__.py
16	6	lib/bb/ui/crumbs/hoblistmodel.py
106	23	lib/bb/ui/crumbs/hobwidget.py
44	6	lib/bb/ui/crumbs/recipeselectionpage.py

commit 22344f13d5e201be0d6381c6542d05c6fde7eec3
Author: Dongxiao Xu <dongxiao.xu@intel.com>
Date:   2012-04-09 16:42:02 +0800

    Hob: Add an extra 50M space if zypper is selected
    
    If zypper is selected, RPM packaging will add extra 50M free space to
    the final image. We need to reflect it in package selection page.
    
    Signed-off-by: Dongxiao Xu <dongxiao.xu@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	0	lib/bb/ui/crumbs/packageselectionpage.py

commit 0f57e1d1d85a2c86d68e604e294ea4b0ceff03ca
Author: Dongxiao Xu <dongxiao.xu@intel.com>
Date:   2012-04-09 16:42:01 +0800

    Hob: Fix tooltips in Settings dialog
    
    This fixes [YOCTO #2229]
    
    Signed-off-by: Dongxiao Xu <dongxiao.xu@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

20	18	lib/bb/ui/crumbs/hig.py
1	1	lib/bb/ui/crumbs/recipeselectionpage.py

commit f99e90726716bc89bdd980a3db027f1c3a66f2fa
Author: Dongxiao Xu <dongxiao.xu@intel.com>
Date:   2012-04-09 16:42:00 +0800

    Hob: Fix tooltips in image configuration page
    
    This fixes [YOCTO #2228]
    
    Signed-off-by: Dongxiao Xu <dongxiao.xu@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

9	8	lib/bb/ui/crumbs/imageconfigurationpage.py

commit 7b81389566cb27451557ca11ec8ed40ef2630543
Author: Dongxiao Xu <dongxiao.xu@intel.com>
Date:   2012-04-09 16:41:59 +0800

    Hob: Fix the pattern patch for image name
    
    Sometimes, users may open an image that is not built by Hob, therefore
    its image name is not started with "hob-image-". This commit sets a
    looser rule for runnable image matching.
    
    This fixes [YOCTO #2240]
    
    Signed-off-by: Dongxiao Xu <dongxiao.xu@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	2	lib/bb/ui/crumbs/imagedetailspage.py

commit 8edad8d282b69896237e956a00c66cd4d10ef494
Author: Dongxiao Xu <dongxiao.xu@intel.com>
Date:   2012-04-09 16:41:57 +0800

    Hob: Change base image to "Create your own image" if customized
    
    Once user did customization to his base image, we change the base image
    to be "Create your own image" to avoid some issues caused by the
    relationship between base image and its default recipes and packages.
    
    This fixes [YOCTO #2211]
    
    Signed-off-by: Dongxiao Xu <dongxiao.xu@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	0	lib/bb/ui/crumbs/builder.py
2	0	lib/bb/ui/crumbs/imageconfigurationpage.py
6	0	lib/bb/ui/crumbs/packageselectionpage.py
5	0	lib/bb/ui/crumbs/recipeselectionpage.py

commit 80af7e72a9404044910fca7f9265e66354f747a6
Author: Joshua Lock <josh@linux.intel.com>
Date:   2012-04-05 15:32:28 -0700

    selectionpage: show persistent tooltips on click
    
    Requiring a double click to show the tooltips isn't very intuitive, add
    a callback to show the persistent tooltips on button release.
    
    Signed-off-by: Joshua Lock <josh@linux.intel.com>

8	5	lib/bb/ui/crumbs/packageselectionpage.py
8	5	lib/bb/ui/crumbs/recipeselectionpage.py

commit e1406d75c0643a2e65bb61649958e05e730fb332
Author: Joshua Lock <josh@linux.intel.com>
Date:   2012-04-06 16:02:22 -0700

    lib/bb/ui/crumbs/[recipe|package]selectionpage: fixed width Included col
    
    Set the expand property on all columns other than the 'Included' column
    so that the included column remains at the max size set.
    
    Signed-off-by: Joshua Lock <josh@linux.intel.com>

2	0	lib/bb/ui/crumbs/hobwidget.py
14	9	lib/bb/ui/crumbs/packageselectionpage.py
22	14	lib/bb/ui/crumbs/recipeselectionpage.py

commit 4f45d791644e383b11cbcfd4fb02866518cb9c04
Author: Joshua Lock <josh@linux.intel.com>
Date:   2012-04-05 16:37:23 -0700

    lib/bb/ui/crumbs/recipeselectionpage: include 'Group' in 'Included' view
    
    The 'Included' tab of the notebook should show the 'Group' a recipe
    belongs to, per the design.
    
    Signed-off-by: Joshua Lock <josh@linux.intel.com>

6	0	lib/bb/ui/crumbs/recipeselectionpage.py

commit 6866271da738237d3a119e291ac8f9d2c517e124
Author: Joshua Lock <josh@linux.intel.com>
Date:   2012-04-05 14:39:50 -0700

    lib/bb/ui/crumbs: only display one 'Brought in by' item in Hob trees
    
    The design calls for a single 'Brought in by' item to be shown in the
    tree views with any extra items to be shown in the tooltip.
    
    Signed-off-by: Joshua Lock <josh@linux.intel.com>

13	0	lib/bb/ui/crumbs/hobwidget.py
1	1	lib/bb/ui/crumbs/packageselectionpage.py
1	1	lib/bb/ui/crumbs/recipeselectionpage.py

commit 5ccbcdf8c47f2f20655a3ea0f60e5870cdba6f83
Author: Joshua Lock <josh@linux.intel.com>
Date:   2012-04-05 10:56:43 -0700

    hob: update required versions of (py)gtk et al
    
    With the previous two changes we now work on Gtk+ 2.18 and PyGtk 2.16
    
    Signed-off-by: Joshua Lock <josh@linux.intel.com>

7	4	lib/bb/ui/hob.py

commit 82ea0619e9ecf9107b75692385bcf1434ea8a307
Author: Joshua Lock <josh@linux.intel.com>
Date:   2012-04-05 10:17:57 -0700

    lib/bb/ui/crumbs/hobwidget: replace new API
    
    The gtk.Widget.get_sensitive() convenience method is only available
    in Gtk+ 2.22 or later, instead use the sensitive property of the
    gobject to determine whether the widget is sensitive or not.
    
    Signed-off-by: Joshua Lock <josh@linux.intel.com>

1	1	lib/bb/ui/crumbs/hobwidget.py

commit 2b6ce54cdc23c5fc1325e42634287134f55aacbf
Author: Joshua Lock <josh@linux.intel.com>
Date:   2012-04-04 16:07:45 -0700

    lib/bb/ui/crumbs/persistenttooltip: replace 2.22 API
    
    CentOS 6.x doesn't ship with new enough pygtk for this API.
    
    Signed-off-by: Joshua Lock <josh@linux.intel.com>

1	1	lib/bb/ui/crumbs/persistenttooltip.py

commit 09592c119550550edcc59c871f754536d5b7bf65
Author: Robert Yang <liezhi.yang@windriver.com>
Date:   2012-04-05 20:58:57 +0800

    diskspace monitor: assign a default value when only of the interval is set
    
    Assign a default value to the other one when either disk space interval
    or amount of inodes interval value is set for example:
    
    BB_DISKMON_WARNINTERVAL = "50M,"
    or
    BB_DISKMON_WARNINTERVAL = ",5K"
    
    The diskspace monitor would not enable in the past, that seemed
    unreasonable, assign a default value to the other one currently, so the
    monitor will be enabled, and will warn both of diskspace and free
    amount of inode if they have been set in BB_DISKMON_DIRS.
    
    Signed-off-by: Robert Yang <liezhi.yang@windriver.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

9	2	lib/bb/monitordisk.py

commit dd15a92a0932d3e177c0ca7b2923da1d72046e51
Author: Robert P. J. Day <rpjday@crashcourse.ca>
Date:   2012-04-01 13:42:14 -0400

    Fix typo in user manual: "incarantion" -> "incarnation"
    
    Signed-off-by: Robert P. J. Day <rpjday@crashcourse.ca>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	doc/manual/usermanual.xml

commit d49db15badb77855cef855ee73430fcbc16b6916
Author: Shane Wang <shane.wang@intel.com>
Date:   2012-04-02 16:29:20 +0800

    Hob: a minor fix on pmake
    
    params["pmake"] should be in the format "-j int".
    When loading/saving "PARALLEL_MAKE" into templates, configuration.pmake will be
    converted into "-j int", as "PACKAGE_CLASSES" and "BBLAYERS" do.
    
    For "PACKAGE_CLASSES" and "BBLAYERS", params["pclass"] and params["layer"] are
    also strings rather than the types of configuration.curr_package_format and
    configuration.layers.
    
    Signed-off-by: Shane Wang <shane.wang@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	2	lib/bb/ui/crumbs/builder.py
1	1	lib/bb/ui/crumbs/hobeventhandler.py

commit 59dd7e91c11e0348f967578f32e13f5984c6a452
Author: Shane Wang <shane.wang@intel.com>
Date:   2012-04-02 16:29:19 +0800

    Hob: a minor fix on image_fstypes
    
    image_fstypes in the configuration has been changed into a string rather than
    a list. Here we correct it in __init__() of class Configuration. At other places,
    image_fstypes are all strings.
    
    Signed-off-by: Shane Wang <shane.wang@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/ui/crumbs/builder.py

commit 9d30ad56803c67d2dc7ebddd7c339038438f02ba
Author: Shane Wang <shane.wang@intel.com>
Date:   2012-04-02 16:29:18 +0800

    Hob: avoid the empty white space appearing on top of the gtk.ComboBox
    
    Avoid the empty white space appearing on top of the machine selection combo
    box and the image selection combo box in the "Image configuration" screen
    
    [Yocto #2166]
    
    Signed-off-by: Shane Wang <shane.wang@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	0	lib/bb/ui/crumbs/imageconfigurationpage.py

commit 578ce86a9ac2110f5b128aae582c6e0b3e739cec
Author: Shane Wang <shane.wang@intel.com>
Date:   2012-04-02 16:29:17 +0800

    Hob: unify _size_to_string() and _string_to_size()
    
    We call intsize_to_string (and string_to_intsize) in 3 different places.
    We unify the implementations into one place.
    
    Signed-off-by: Shane Wang <shane.wang@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

6	12	lib/bb/ui/crumbs/hoblistmodel.py
39	0	lib/bb/ui/crumbs/hobpages.py
1	10	lib/bb/ui/crumbs/imagedetailspage.py
5	16	lib/bb/ui/crumbs/packageselectionpage.py

commit bb3a4e2d40486a347c13563d73e4df6d015a3c6c
Author: Shane Wang <shane.wang@intel.com>
Date:   2012-04-02 16:29:16 +0800

    Hob: handle exceptions when loading templates
    
    Handle exceptions during type conversion to integers.
    
    Signed-off-by: Shane Wang <shane.wang@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

16	4	lib/bb/ui/crumbs/builder.py

commit e03da8876045af545303db2b8044a17657337140
Author: Shane Wang <shane.wang@intel.com>
Date:   2012-04-02 16:29:15 +0800

    Hob: handle exceptions in get_parameters() from the bitbake
    
    Handle exceptions during type conversion into integers.
    
    Signed-off-by: Shane Wang <shane.wang@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

26	7	lib/bb/ui/crumbs/hobeventhandler.py

commit 54ae7ddac450b4717e5ccae3bfe9acb479449451
Author: Dongxiao Xu <dongxiao.xu@intel.com>
Date:   2012-04-01 20:14:16 +0800

    Hob: Check "dummy" image while update_image_combo
    
    We also need to check if the selected image is "Create your own image"
    and set it as active.
    
    Besides, to avoid the impact of set_active(), we need to move the
    connect signal in the end of the update_image_combo() function.
    
    Signed-off-by: Dongxiao Xu <dongxiao.xu@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

7	1	lib/bb/ui/crumbs/imageconfigurationpage.py

commit da69e665196714b0f2039c11f9f232db7b58bce3
Author: Dongxiao Xu <dongxiao.xu@intel.com>
Date:   2012-04-01 20:14:14 +0800

    Hob: Remove the recipe/task type for multilib
    
    We will not display multilib recipes and tasks in separate tabs,
    therefore remove the specific types.
    
    Signed-off-by: Dongxiao Xu <dongxiao.xu@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	8	lib/bb/ui/crumbs/hoblistmodel.py

commit 192d5fdf9ea27cdc8b043204857ae5b21173a011
Author: Joshua Lock <josh@linux.intel.com>
Date:   2012-04-03 17:35:41 -0700

    lib/bb/ui/hob: exit cleanly if the required pygtk version isn't available
    
    Hob uses API from pygtk 2.22, therefore check to see whether this
    version is available and exit cleanly if not.
    
    Signed-off-by: Joshua Lock <josh@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

11	2	lib/bb/ui/hob.py

commit 5fed953105fd58f09e42dce233aab2c6eced7c37
Author: Shane Wang <shane.wang@intel.com>
Date:   2012-04-02 23:22:40 +0800

    Hob: reset issue indication and build status before build starts on build details screen
    
    Signed-off-by: Shane Wang <shane.wang@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	0	lib/bb/ui/crumbs/builddetailspage.py
0	2	lib/bb/ui/crumbs/builder.py

commit 51a9a5557bb798b559874a4e6dc9924380b5d9a4
Author: Shane Wang <shane.wang@intel.com>
Date:   2012-04-02 23:22:39 +0800

    Hob: remove grab_default() for deploy button
    
    When the deploy button is disabled since there is no deployable image,
    the console will show the warning message:
    
    WARNING: /home/yocto-build5/poky-contrib/bitbake/lib/bb/ui/crumbs/imagedetailspage.py:333:
    GtkWarning: /build/buildd/gtk+2.0-2.22.0/gtk/gtkwidget.c:5684: widget not within a GtkWindow
      self.deploy_button.grab_default()
    
    This patch is to remove the warning message.
    
    Signed-off-by: Shane Wang <shane.wang@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

0	1	lib/bb/ui/crumbs/imagedetailspage.py

commit 87282847f1ba56420b0c6dbf04bea6e518962398
Author: Shane Wang <shane.wang@intel.com>
Date:   2012-04-02 23:22:37 +0800

    Hob: add the "info" indication icon for "information" in the dialogs.
    
    Previously we reused the info display file which is for indication of tooltips.
    But it is too small, when it is shown on the dialog as the dialog indication icon,
    it becomes unclear after being stretched out. So, we replace it with a larger
    icon.
    
    Signed-off-by: Shane Wang <shane.wang@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	1	lib/bb/ui/crumbs/hobwidget.py
-	-	lib/bb/ui/icons/indicators/info.png

commit 6c970d07422bb9a8fcf339315587cfc9b207a44e
Author: Dongxiao Xu <dongxiao.xu@intel.com>
Date:   2012-04-01 20:14:18 +0800

    Hob: fix IMAGE_INSTALL setting while save template
    
    If save every selected package into IMAGE_INSTALL field, and then build
    the saved bb file by bitbake command line, it will report errors since
    some packages could not be found since they are dynamically generated.
    With this commit, Hob will only save those packages into the
    IMAGE_INSTALL variable which are brought in by user.
    
    Signed-off-by: Dongxiao Xu <dongxiao.xu@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	1	lib/bb/ui/crumbs/builder.py
17	0	lib/bb/ui/crumbs/hoblistmodel.py
1	0	lib/bb/ui/crumbs/packageselectionpage.py

commit f99c66071bce63780301e1639d74316503ca934c
Author: Dongxiao Xu <dongxiao.xu@intel.com>
Date:   2012-04-01 20:14:15 +0800

    Hob: Fix toolchain build
    
    Originally we added -dev and -dbg postfixes to our selected packages as
    toolchain packages. However, some package names are modified in recipes,
    so we could not rely on its base name. The new approach is to detect if
    a package is selected, then include those packages under the same recipe
    endswith "-dev" and "-dbg".
    
    This fixes [YOCTO #2185]
    
    Signed-off-by: Dongxiao Xu <dongxiao.xu@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

6	3	lib/bb/ui/crumbs/builder.py
4	5	lib/bb/ui/crumbs/hobeventhandler.py
16	0	lib/bb/ui/crumbs/hoblistmodel.py

commit e62a5cfbf21d22ab9f88dcd954132c1c52802360
Author: Dongxiao Xu <dongxiao.xu@intel.com>
Date:   2012-04-01 20:14:13 +0800

    Hob: Set stop button sensitive after task started
    
    Signed-off-by: Dongxiao Xu <dongxiao.xu@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	0	lib/bb/ui/crumbs/builddetailspage.py

commit 98849cf9201239b23bbbe9247db4d6901f0ed905
Author: Dongxiao Xu <dongxiao.xu@intel.com>
Date:   2012-04-01 20:14:12 +0800

    Hob: Remove duplication for certain bitbake variables
    
    Sometimes, certain variables have duplicated values inside, for example,
    IMAGE_FSTYPES = "tar.bz2 ext3 tar.bz2 ext3"
    
    We need to remove the redundancy for those values.
    
    Signed-off-by: Dongxiao Xu <dongxiao.xu@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

13	6	lib/bb/ui/crumbs/hobeventhandler.py

commit c184cefe90115623e2312ad2bbe34ea95788c129
Author: Dongxiao Xu <dongxiao.xu@intel.com>
Date:   2012-04-01 20:14:11 +0800

    Hob: Remove some calling of initiate_new_build()
    
    initiate_new_build() function is in async mode and could not be called
    before another async function.
    
    Also we could not initialize the build if user simply change a setting,
    therefore remove this function.
    
    Signed-off-by: Dongxiao Xu <dongxiao.xu@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

0	2	lib/bb/ui/crumbs/imagedetailspage.py

commit 7b2f6744201511060f26cd2761e9556efec4b9a2
Author: Dongxiao Xu <dongxiao.xu@intel.com>
Date:   2012-04-01 20:14:10 +0800

    Hob: Update the cache when setting changed
    
    If values in advanced is changed, we also need to reparse the cache to
    get the latest value.
    
    Signed-off-by: Dongxiao Xu <dongxiao.xu@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/ui/crumbs/builder.py

commit 662fa1b126d5b9b3a80193205c22b2fe29305185
Author: Dongxiao Xu <dongxiao.xu@intel.com>
Date:   2012-04-01 20:14:09 +0800

    Hob: Fix MACHINE setting
    
    Define the empty curr_mach to be "" instead of None.
    Fix the judgement for ' if self.curr_mach == "" ' to be
    ' if self.curr_mach '.
    Also set machine to bitbake server when "MACHINE" is not empty.
    
    Signed-off-by: Dongxiao Xu <dongxiao.xu@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	2	lib/bb/ui/crumbs/builder.py
2	1	lib/bb/ui/crumbs/hobeventhandler.py

commit 035e146ff92236a3eda71ad71e8389737f91753b
Author: Liming An <limingx.l.an@intel.com>
Date:   2012-03-30 17:12:42 +0800

    Hob: In building log page, fixed the issue about 'endpath' not clear when next to start build
    
    Fixed the issue about the building log scrollbar can not auto scroll to page end sometimes
    
    [YOCTO #2098]
    
    Signed-off-by: Liming An <limingx.l.an@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	1	lib/bb/ui/crumbs/builddetailspage.py

commit e9f4ca467e795bbc520d12b0e7a5985b6ff0a20e
Author: Shane Wang <shane.wang@intel.com>
Date:   2012-03-30 17:12:41 +0800

    runqueue: wait and deal with those <defunct> sub-processes as soon as they are os.killed() when "Force stop"
    
    When "Force stop" is performed during the build stage, after os.kill() kills the build sub-processes, there are many <defunct> python processes in the system. In Hob, when the user initiates a new build, os.waitpid() in runqueue_process_waitpid() will be called, and the pids of those <defunct> processes will be returned as result[0], then self.build_pids[result[0]] will throw KeyError exception because now for the new build self.build_pids is empty.
    
    This patch is to address the above issue to collect the results and handle the sub-processes as soon as they are killed.
    
    [Yocto #2186]
    
    Signed-off-by: Shane Wang <shane.wang@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	0	lib/bb/runqueue.py

commit c6ab6c7caf16c04e2a0c0f2aefd3377f781206c7
Author: Joshua Lock <josh@linux.intel.com>
Date:   2012-03-29 14:31:30 -0700

    lib/bb/ui/crumbs/hoblistmodel: fix sorting of RecipeListModel
    
    Sort in ascending order on the recipe name (A-Z) and unset the default sort
    function so that there's no third (unsorted) state.
    
    Signed-off-by: Joshua Lock <josh@linux.intel.com>

2	6	lib/bb/ui/crumbs/hoblistmodel.py

commit 2ecbd68abbf564be15707f330f80e811d92ef87d
Author: Joshua Lock <josh@linux.intel.com>
Date:   2012-03-28 16:32:59 -0700

    lib/bb/ui/crumbs/hobpages: change title from HOB to Hob
    
    Signed-off-by: Joshua Lock <josh@linux.intel.com>

1	1	lib/bb/ui/crumbs/hobpages.py

commit 356f190bb3f0ee9a15df900714edcb85593d6989
Author: Joshua Lock <josh@linux.intel.com>
Date:   2012-03-28 16:32:28 -0700

    Hob: tweak font sizes and layout
    
    Switch to proportional font sizes and tweak padding and layout based on
    feedback from design team.
    
    Signed-off-by: Joshua Lock <josh@linux.intel.com>

3	3	lib/bb/ui/crumbs/hobpages.py
4	4	lib/bb/ui/crumbs/hobwidget.py
18	18	lib/bb/ui/crumbs/imageconfigurationpage.py

commit 8fed4fdf4bbbc9ef036ff96755c0bfe15c3a9dd0
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2012-03-29 21:38:25 +0100

    knotty: Add back getTasks() call to ensure we don't repeat messges
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	0	lib/bb/ui/knotty.py

commit 8c3401bc11c6f3708b8ee9c0175f389399fdff5a
Author: Liming An <limingx.l.an@intel.com>
Date:   2012-03-29 20:54:57 +0800

    Hob: in build details page, change error icon to denied icon
    
    For make icongraphy consistently to change the original gtk-icon to hob-icon
    
    [YOCTO #2108]
    
    Signed-off-by: Liming An <limingx.l.an@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/ui/crumbs/runningbuild.py

commit ce680f10037b42831179a4598a69fb39688fb238
Author: Liming An <limingx.l.an@intel.com>
Date:   2012-03-29 20:54:56 +0800

    Hob: fixed the 'error' icon source picture and adjusted corresponding showed icon size
    
    The error source picture is not right, so fixed it and adjusted its size.
    
    [YOCTO #2097]
    
    Signed-off-by: Liming An <limingx.l.an@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

11	2	lib/bb/ui/crumbs/hobwidget.py

commit 95acecbf50cee906dca4abd5ce758701e5761668
Author: Shane Wang <shane.wang@intel.com>
Date:   2012-03-29 20:54:55 +0800

    Hob: some color style changes to make HobTabBar more close to visual design
    
    The change includes:
     - remove the colors which are not used
     - change the background of indicators to deep red
     - change the color style of the texts on HobTabBar, i.e., the tab text and the indicator background are gray when the tab is the current tab; the tab text is white and the indicator background is deep red when the tab is not the current tab.
    
    Signed-off-by: Shane Wang <shane.wang@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	3	lib/bb/ui/crumbs/hobcolor.py
9	3	lib/bb/ui/crumbs/hobwidget.py

commit a50d884ebe1af2b9b2a5a54289181bccb751ddab
Author: Shane Wang <shane.wang@intel.com>
Date:   2012-03-29 20:54:53 +0800

    Hob: make ORANGE to be the same as the color on the dialog
    
    Signed-off-by: Shane Wang <shane.wang@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/ui/crumbs/hobcolor.py

commit 4ed5b8b862027755d5e9e480fd8a1d0250f7a3b7
Author: Shane Wang <shane.wang@intel.com>
Date:   2012-03-29 20:54:52 +0800

    Hob: Change "Just bake" to "Build image" as required
    
    [Yocto #2160]
    
    Signed-off-by: Shane Wang <shane.wang@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	3	lib/bb/ui/crumbs/imageconfigurationpage.py

commit 66fcc8cdf8fb3365cd4a056b94fe3aa3e1aedc86
Author: Shane Wang <shane.wang@intel.com>
Date:   2012-03-29 20:54:51 +0800

    Hob: Change icon to error because parsing error is an error
    
    Signed-off-by: Shane Wang <shane.wang@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/ui/crumbs/builder.py

commit afd51c524006e8e6db1542cc2ebc5decab3faa1b
Author: Shane Wang <shane.wang@intel.com>
Date:   2012-03-29 20:54:50 +0800

    Hob: clear the building state after a successful build, as a failed build does
    
    Signed-off-by: Shane Wang <shane.wang@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	0	lib/bb/ui/crumbs/builder.py
3	0	lib/bb/ui/crumbs/hobeventhandler.py

commit c8dac1eefab79b12243468986c37f391c3421134
Author: Dongxiao Xu <dongxiao.xu@intel.com>
Date:   2012-03-29 20:01:20 +0800

    Hob: Replace "local.conf" in error message
    
    Signed-off-by: Dongxiao Xu <dongxiao.xu@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	0	lib/bb/ui/crumbs/builder.py

commit 1fe0996f89952af72cbdc46ca7c6495868d27a56
Author: Dongxiao Xu <dongxiao.xu@intel.com>
Date:   2012-03-29 20:01:19 +0800

    Hob: Fix the setting hash calculation
    
    Sometimes even setting are not changed, the hash values differs due to
    variable order issue. This commit fixes the issue.
    
    Signed-off-by: Dongxiao Xu <dongxiao.xu@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

19	14	lib/bb/ui/crumbs/hig.py

commit c91fe7f9d21939fd437dbd79a923499f90fc95c6
Author: Dongxiao Xu <dongxiao.xu@intel.com>
Date:   2012-03-29 20:01:18 +0800

    Hob: Change the format to store image_fstype variable
    
    Use string format to store image_fstype instead of a list.
    
    Signed-off-by: Dongxiao Xu <dongxiao.xu@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	3	lib/bb/ui/crumbs/builder.py
4	3	lib/bb/ui/crumbs/hig.py
1	1	lib/bb/ui/crumbs/hobeventhandler.py

commit 8a1f6953a082d8002585bfd9e8a67d2a7f69d6aa
Author: Dongxiao Xu <dongxiao.xu@intel.com>
Date:   2012-03-29 20:01:16 +0800

    Hob: Remember user settings when reparse config
    
    When config reparse is issued (e.x, adding a layer), we will firstly
    remember the past user settings by setting them to bitbake server,
    and then do the reparse.
    
    Signed-off-by: Dongxiao Xu <dongxiao.xu@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

7	6	lib/bb/ui/crumbs/builder.py
3	5	lib/bb/ui/crumbs/hobeventhandler.py

commit 9560e4ccef497e878f2cb8624136ab8f193c061a
Author: Dongxiao Xu <dongxiao.xu@intel.com>
Date:   2012-03-29 20:01:15 +0800

    Hob: Update configuration after parsing
    
    We need to update the parameters stored in Hob side after
    configuration is parsed.
    
    Signed-off-by: Dongxiao Xu <dongxiao.xu@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

23	0	lib/bb/ui/crumbs/builder.py

commit f34cb901bd9b3598f4da528cc54f6faa57c9d389
Author: Dongxiao Xu <dongxiao.xu@intel.com>
Date:   2012-03-29 20:01:14 +0800

    Hob: Inherit image_types.bbclass in set_user_config()
    
    Signed-off-by: Dongxiao Xu <dongxiao.xu@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	0	lib/bb/ui/crumbs/builder.py

commit df63e15c41d129fe0cff6b8ab3c97434c4809c83
Author: Dongxiao Xu <dongxiao.xu@intel.com>
Date:   2012-03-29 20:01:12 +0800

    Hob: Improve for init a new build
    
    After a successful build, user can initiate a new build by clicking
    "Build a new image" button. The previous solution is simply switch to
    the first screen and unset MACHINE. This commit will try to re-init
    everything for the new build.
    
    Signed-off-by: Dongxiao Xu <dongxiao.xu@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	1	lib/bb/ui/crumbs/builder.py

commit 3b5909ebc86a12dedfb30e5446aa81eb58921760
Author: Dongxiao Xu <dongxiao.xu@intel.com>
Date:   2012-03-29 20:01:11 +0800

    command.py: Move triggerEvent to command async class
    
    The parameters in triggerEvent function is an event object, and it may
    cost some time to pass this object through pipe, causing the pipe's
    poll() function timeout. Change it to async mode.
    
    Signed-off-by: Dongxiao Xu <dongxiao.xu@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

10	7	lib/bb/command.py

commit 1b14488bcfb345a3258b15ebfdaa2e1235a5fe87
Author: Dongxiao Xu <dongxiao.xu@intel.com>
Date:   2012-03-29 20:01:10 +0800

    Hob: Improve the matching for runnable machine type
    
    Signed-off-by: Dongxiao Xu <dongxiao.xu@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	1	lib/bb/ui/crumbs/imagedetailspage.py

commit d0b64d901b33c9e5247dbb2b05c89a1d65abbf8b
Author: Dongxiao Xu <dongxiao.xu@intel.com>
Date:   2012-03-29 20:01:09 +0800

    Hob: Define a variable to store the image name and toolchain
    
    Signed-off-by: Dongxiao Xu <dongxiao.xu@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

7	2	lib/bb/ui/crumbs/builder.py
5	3	lib/bb/ui/crumbs/hobeventhandler.py

commit b195823d19bcb71bd5eef19acfe22b2dd670d90a
Author: Dongxiao Xu <dongxiao.xu@intel.com>
Date:   2012-03-29 20:01:08 +0800

    Hob: Fix adding duplicated meta-hob layer
    
    While adding meta-hob layer, we need to detect whether it already
    exists in current layers.
    
    Signed-off-by: Dongxiao Xu <dongxiao.xu@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	1	lib/bb/ui/crumbs/hobeventhandler.py

commit 9c632467eddc267ed54b78a40d5b1413287e3032
Author: Dongxiao Xu <dongxiao.xu@intel.com>
Date:   2012-03-29 20:01:07 +0800

    Hob: Remove un-used signal and functions
    
    Signed-off-by: Dongxiao Xu <dongxiao.xu@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

0	4	lib/bb/ui/crumbs/builder.py
1	8	lib/bb/ui/crumbs/hobeventhandler.py

commit ae86cd8b4ef1e43b79230326ccba69e2900d074f
Author: Joshua Lock <josh@linux.intel.com>
Date:   2012-03-28 12:15:02 -0700

    lib/bb/ui/crumbs/hig: fix layers_changed test
    
    Because we sort the treeview to list specific layers at the top, and
    therefore implicitly change the sorting of the underlying model, we can't
    be certain that the original layer list will equal the new layer list
    despite the included layers being the same.
    
    To ensure we can do a simple equality test to determine whether the layers
    have been modified first sort the lists to ensure we're comparing based on
    contents alone.
    
    Signed-off-by: Joshua Lock <josh@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

4	1	lib/bb/ui/crumbs/hig.py

commit 722f4f0e31f9debf5ad20a91da759a8c25151567
Author: Joshua Lock <josh@linux.intel.com>
Date:   2012-03-27 17:02:27 -0700

    lib/bb/ui/crumbs: hob progress bar should not be red when user stops build
    
    If the user explicitly stops the build telling them the build failed is a
    misnomer.
    
    Signed-off-by: Joshua Lock <josh@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/ui/crumbs/builddetailspage.py
14	7	lib/bb/ui/crumbs/builder.py
1	1	lib/bb/ui/crumbs/hig.py
1	1	lib/bb/ui/crumbs/imageconfigurationpage.py
5	3	lib/bb/ui/crumbs/progressbar.py

commit a2d1c035a5dd3d112a887e4386dfaf9b0c37c104
Author: Joshua Lock <josh@linux.intel.com>
Date:   2012-03-27 14:45:33 -0700

    lib/bb/ui/crumbs/builder: allow user to cancel Layer selection dialogue
    
    Because layer changes may take some time allow the user to cancel out of
    the dialogue and prevent Hob from applying any of the changes made.
    
    Signed-off-by: Joshua Lock <josh@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	1	lib/bb/ui/crumbs/builder.py

commit 4301cc1e859a68d93eba3122be099bfaa90fbdfb
Author: Joshua Lock <josh@linux.intel.com>
Date:   2012-03-27 13:59:13 -0700

    lib/bb/ui/crumbs/hobwidget: change text sizes in HobImageButton
    
    Signed-off-by: Joshua Lock <josh@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/ui/crumbs/hobwidget.py

commit bdd50d92e90f96bf7ff433bb539cdde4b0d21cdb
Author: Joshua Lock <josh@linux.intel.com>
Date:   2012-03-27 13:58:44 -0700

    lib/bb/ui/crumbs/imageconfigurationpage: add extra space between widgets
    
    Add space between the target machine combo and the 'Layers' button.
    
    Signed-off-by: Joshua Lock <josh@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/ui/crumbs/imageconfigurationpage.py

commit a81f6a33cf1fa9fe869ac617f2d14d66e07009ff
Author: Joshua Lock <josh@linux.intel.com>
Date:   2012-03-27 13:57:01 -0700

    lib/bb/ui/crumbs/hobwidget: add padding to HobImageButton
    
    Add more padding between the icon and the text
    
    Signed-off-by: Joshua Lock <josh@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	2	lib/bb/ui/crumbs/hobwidget.py

commit 1def8d4d8e725bd9fc4330179557604dda27b917
Author: Shane Wang <shane.wang@intel.com>
Date:   2012-03-29 00:34:05 +0800

    Hob: change some words in settings dialog to make them consistent
    
    Signed-off-by: Shane Wang <shane.wang@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

11	11	lib/bb/ui/crumbs/hig.py

commit 63bfa397059823bea6fa453703cf0653fc123f0b
Author: Shane Wang <shane.wang@intel.com>
Date:   2012-03-29 00:29:13 +0800

    Hob: change some words on recipes screen and package screen to make them consistent
    
    Signed-off-by: Shane Wang <shane.wang@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	2	lib/bb/ui/crumbs/packageselectionpage.py
3	3	lib/bb/ui/crumbs/recipeselectionpage.py

commit 6d5bcf80afbd081d41572985b724c615bd3a16b6
Author: Shane Wang <shane.wang@intel.com>
Date:   2012-03-29 00:22:18 +0800

    Hob: change some words on image configuration screen to make them consistent
    
    Signed-off-by: Shane Wang <shane.wang@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	3	lib/bb/ui/crumbs/imageconfigurationpage.py

commit 4af7ab24ff3b170dfa74159c057e7110a615a8d3
Author: Shane Wang <shane.wang@intel.com>
Date:   2012-03-29 00:17:10 +0800

    Hob: change some words for build configurations on build details screen
    
    This patch is to change some words of variables to make them consistent with the GUI.
    
    Signed-off-by: Shane Wang <shane.wang@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

11	11	lib/bb/ui/crumbs/builddetailspage.py

commit 29bea7b7076a7b74d36237da86a4eff6605d17ec
Author: Shane Wang <shane.wang@intel.com>
Date:   2012-03-29 00:10:30 +0800

    Hob: add Templates and Settings on image details screen
    
    This patch is to add Templates and Settings tool buttons on the image
    details screen, which makes things easier and simplier.
    
    In order to fulfill that, the code splits the functions
    show_load_template_dialog() and show_adv_settings_dialog() in builder.py
    because they will possibly be called from different screens later.
    
    [Yocto #2163]
    
    Signed-off-by: Shane Wang <shane.wang@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

12	7	lib/bb/ui/crumbs/builder.py
10	2	lib/bb/ui/crumbs/imageconfigurationpage.py
29	0	lib/bb/ui/crumbs/imagedetailspage.py

commit 4568dfbd5e693cce0e6e947f323eaf08a3176744
Author: Shane Wang <shane.wang@intel.com>
Date:   2012-03-26 19:29:15 +0800

    Hob: Set one of deployable images or runnable images as the default toggled item
    
    With this patch, even though there are a lot of images built out, a default image
    which is either deployable or runnable is toggled by default. So, for users, one
    more action to select an image before running qemu or deploying is not needed any more.
    
    Note: If there are more than one runnable or deployable images (such as ext2, ext3,
    jffs2 and btrfs), only the first image is toggled by default for run-qemu or
    deployment. If the user wants to run or deploy others, he/she needs to toggle them
    manually.
    
    [Yocto #2155]
    
    Signed-off-by: Shane Wang <shane.wang@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

46	26	lib/bb/ui/crumbs/imagedetailspage.py

commit 156189c799d2bb1f69bdaa04b5cd718fe7881425
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2011-11-26 13:37:52 +0000

    ui/knotty: Add a footer to the build output for interactive terminals as knotty2 UI
    
    On terminals which support it, add summary information to the end of the
    build output about the number of tasks currently running and how many tasks
    we've run so far.
    
    This provides a summary at a glace of what the current state of the build is
    and what the build is currently doing which is lacking in the current UI.
    
    Also disable echo of characters on stdin since this corrupts the disable,
    particularly Crtl+C.
    
    The "waiting for X tasks" code can be merged into this code too since
    that is only useful on interactive terminals and this improves the
    readability of that output too.
    
    Improvements since v0:
    
    * The tasks are ordered in execution order.
    * The display is only updated when the list of tasks changes or there
      is output above the footer.
    * Running task x oy y and package messages are supressed from the console
    
    This UI can be accessed with "bitbake -u knotty2".
    
    (From Poky rev: e38b4569648f2916c4370871c79e6a6090eb8bc1)
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	bin/bitbake
52	18	lib/bb/ui/knotty.py
109	0	lib/bb/ui/knotty2.py

commit cec2f3eaa45a6fd8d3c53c09aaf010ac6101e7ba
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2012-03-29 19:38:47 +0100

    uihelper: Keep track of pids in execution order
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

6	0	lib/bb/ui/uihelper.py

commit f9cf2671c0ecad153db11bca1aebe151213bfb42
Author: Christopher Larson <chris_larson@mentor.com>
Date:   2012-03-27 14:07:23 -0500

    bb.build: use relative log links, not absolute
    
    Using symlinks to absolute paths isn't gaining us anything, and can cause
    problems in situations such as automated build systems when they try to
    resolve the link, depending on the mechanism used to pull the build artifacts
    (e.g. nfs).
    
    Signed-off-by: Christopher Larson <chris_larson@mentor.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	2	lib/bb/build.py

commit 66c63167cd139706100bfa35eb4ca66c98407615
Author: Shane Wang <shane.wang@intel.com>
Date:   2012-03-22 14:20:03 +0800

    Hob: allow users to setup the proxies
    
    This patch is to read the proxy variables such as all_proxy, http_proxy, https_proxy, ftp_proxy, GIT_PROXY_HOST, GIT_PROXY_PORT, CVS_PROXY_HOST, and CVS_PROXY_PORT from the bitbake server, show them on the Settings dialog for users to change and set proxies for the build.
    
    (From Poky rev: bbef66e4005def54d70d3720ec131fa7edc22e2a)
    
    Signed-off-by: Shane Wang <shane.wang@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

39	0	lib/bb/ui/crumbs/builder.py
100	11	lib/bb/ui/crumbs/hig.py
32	0	lib/bb/ui/crumbs/hobeventhandler.py

commit 23c13560fa76442c798058700863bd91491ca826
Author: Liming An <limingx.l.an@intel.com>
Date:   2012-03-27 23:15:45 +0800

    Hob: fixed some not compatible places for make runningbuild.py can be reused by another application
    
    The runningbuild.py has been shared by different applications, not only hob, so fixed the some not compatibled codes
    
    (From Poky rev: 99fa7388500fa97fe4629456daa50bb5637e51e6)
    
    Signed-off-by: Liming An <limingx.l.an@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/ui/crumbs/builddetailspage.py
5	5	lib/bb/ui/crumbs/hobwidget.py
14	6	lib/bb/ui/crumbs/runningbuild.py

commit 983f8848da0be02dadb1bb6530ff736325d014ba
Author: Liming An <limingx.l.an@intel.com>
Date:   2012-03-26 14:04:20 +0800

    Hob: change the implementation way about get config info for building log
    
    Make the building log config information to get from the bitbake parameters directly, and then cancel the old way of filting the building log on running
    
    [YOCTO #2144]
    
    (From Poky rev: b52025a0fe2ca65e4d8549b1b90f5813b0c2e39f)
    
    Signed-off-by: Liming An <limingx.l.an@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

82	4	lib/bb/ui/crumbs/builddetailspage.py
7	0	lib/bb/ui/crumbs/builder.py
6	0	lib/bb/ui/crumbs/hobeventhandler.py
0	33	lib/bb/ui/crumbs/runningbuild.py

commit 65bbc07a3557ac760c6b900880ea6ae2937afde3
Author: Liming An <limingx.l.an@intel.com>
Date:   2012-03-24 00:04:52 +0800

    Hob: use hob icon checker to check the gtk icon for make the icon constaintly
    
    Because we have hob icon, so need to make some gtk icon to transfer to hob icon. so use hob icon checker to fixed the gtk icon
    
    [YOCTO #2108]
    
    (From Poky rev: d1d84e5529e0d0752fdcd8d3458ed7595d373115)
    
    Signed-off-by: Liming An <limingx.l.an@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	5	lib/bb/ui/crumbs/hig.py

commit 840a566ce4c18a1c63ee82257de06c3ed910fe88
Author: Liming An <limingx.l.an@intel.com>
Date:   2012-03-23 23:58:00 +0800

    Hob: change the recipe pasing error dialog icon from 'dialog-info' to 'dialog-error'
    
    [YOCTO #2109]
    
    (From Poky rev: 1fbd6eefc68ec38875968b8513739b732da412b8)
    
    Signed-off-by: Liming An <limingx.l.an@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/ui/crumbs/builder.py

commit 3807a95cd48a01486b3ecd5360a59ddfc3a3b6d6
Author: Liming An <limingx.l.an@intel.com>
Date:   2012-03-23 23:32:17 +0800

    Hob: fixed visually differentiate warnings and errors icon in building log
    
    fixed the bug of 'error' and 'warning' icon is not constaintly with hob ui design
    
    [YOCTO #2097]
    
    (From Poky rev: 5b4f379b5341222e2678043f078b3d33c0556a86)
    
    Signed-off-by: Liming An <limingx.l.an@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

47	20	lib/bb/ui/crumbs/hobwidget.py

commit d5923a484f80bc1577f78035152c2d0728e4a1f3
Author: Liming An <limingx.l.an@intel.com>
Date:   2012-03-23 22:29:46 +0800

    Hob: add refresh icon as ui request in building log
    
    add a refresh icon to indicator the running task, for avoid add more heavy to bitbake building process, increased the timer interval counter, and decreased the refresh icon render size.
    
    (From Poky rev: cf76d2cef0905a442e61769560173b2e6a58fb62)
    
    Signed-off-by: Liming An <limingx.l.an@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

169	0	lib/bb/ui/crumbs/hobwidget.py
16	4	lib/bb/ui/crumbs/runningbuild.py

commit 9647c188c0d06ec045c15281eae785e935c25d2b
Author: Joshua Lock <josh@linux.intel.com>
Date:   2012-03-26 20:17:17 -0700

    lib/bb/ui/crumbs/imagedetails: use secondary button style for 'View files'
    
    Use HobAltButton, rather than gtk.LinkButton, for the 'View files'
    button.
    
    Use xdg-open to display the folders contents.
    
    (From Poky rev: 22955b47ac485e0d069ddd8301a11658d76bcfee)
    
    Signed-off-by: Joshua Lock <josh@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

5	1	lib/bb/ui/crumbs/imagedetailspage.py

commit c09f71414d459eb926aa567d90a63407407d173e
Author: Joshua Lock <josh@linux.intel.com>
Date:   2012-03-26 14:32:12 -0700

    lib/bb/ui/crumbs/imageconfigurationpage: ensure widgets stay positioned
    
    Tweak the table layout and insert some dummy widgets when the buttons
    aren't drawn such that when the buttons do get drawn the existing widgets
    don't all jump up.
    
    (From Poky rev: 9edd833e7e36aea6a7350a36a5aad0ef300959c4)
    
    Signed-off-by: Joshua Lock <josh@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

14	6	lib/bb/ui/crumbs/imageconfigurationpage.py

commit ab508907308e8b1bc1b097df1f583dffd7ef25af
Author: Joshua Lock <josh@linux.intel.com>
Date:   2012-03-26 13:13:18 -0700

    lib/bb/ui/crumbs: tweak build status display
    
    Use two lines to display the active task and recipe, per visual design.
    
    (From Poky rev: ea61503fc439e033b341bb7a50bac77c5e88834e)
    
    Signed-off-by: Joshua Lock <josh@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

6	3	lib/bb/ui/crumbs/builddetailspage.py
1	2	lib/bb/ui/crumbs/builder.py

commit 723ad434d427398b202b70f27762878315ffb22c
Author: Joshua Lock <josh@linux.intel.com>
Date:   2012-03-26 13:11:02 -0700

    lib/bb/ui/crumbs: apply primary/secondary dialogue button styling
    
    The design calls for primary buttons which are orange and large and
    secondary buttons which are subtle with pale blue text. This is so that the
    user is drawn towards the primary action and their use of the application
    is more guided.
    
    This patch uses HobButton and HobAltButton classes to style all dialogue
    buttons accordingly.
    
    Fixes [YOCTO #2125]
    
    (From Poky rev: 1a52fe9f9e79f33686bd92613fc93eb97daacab8)
    
    Signed-off-by: Joshua Lock <josh@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

69	39	lib/bb/ui/crumbs/builder.py
20	14	lib/bb/ui/crumbs/hig.py

commit 02d3451b2e0744204a1280f9effe9fd862bb4faf
Author: Shane Wang <shane.wang@intel.com>
Date:   2012-03-24 00:05:13 +0800

    Hob: add build status labels in the build details screen to make it more close to the visual design
    
    This patch is to add build status (incl. "Running task XX of XX: XXXXXX") in the build details screen,
    in order to provide clear information about task in progress and make the GUI close to the visual design.
    
    [Yocto #2098]
    
    Signed-off-by: Shane Wang <shane.wang@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

14	3	lib/bb/ui/crumbs/builddetailspage.py
3	0	lib/bb/ui/crumbs/builder.py
17	16	lib/bb/ui/crumbs/runningbuild.py

commit c57a45c64a17f1b9dd89743692c3da130ffd38f4
Author: Joshua Lock <josh@linux.intel.com>
Date:   2012-03-23 17:23:06 -0700

    lib/bb/ui/crumbs: use a PersistentTooltip for the Brought in by information
    
    Signed-off-by: Joshua Lock <josh@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

7	5	lib/bb/ui/crumbs/builder.py
0	23	lib/bb/ui/crumbs/hig.py

commit 637ea3671dda9c5a1065f992fd9ee87d63043cf4
Author: Joshua Lock <josh@linux.intel.com>
Date:   2012-03-23 17:23:05 -0700

    lib/bb/ui/crumbs/persistenttooltip: ensure a reasonable minimum size
    
    The persistent tooltip looks a little weird when it's too small, request
    that the toolkit and WM give it a reasonable minimum size.
    
    Signed-off-by: Joshua Lock <josh@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	0	lib/bb/ui/crumbs/persistenttooltip.py

commit 4f8c36226867291c7b6c413ee2570d61a326ec47
Author: Joshua Lock <josh@linux.intel.com>
Date:   2012-03-23 17:23:04 -0700

    lib/bb/ui/crumbs/persistenttooltip: layout tweaks
    
    The design documents have the close button vertically aligned with the
    tooltip contents - reorganise the interal widget layout to achieve this.
    
    Signed-off-by: Joshua Lock <josh@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

12	12	lib/bb/ui/crumbs/persistenttooltip.py

commit ccb8f5cd52ee7833129583b9201c65d93cb87d56
Author: Joshua Lock <josh@linux.intel.com>
Date:   2012-03-23 17:23:03 -0700

    lib/bb/ui/crumbs/hobwidget: convert button styling logic to static methods
    
    The design calls for all buttons to match the style of either the HobButton
    or HobAltButton classes, therefore implement the styling logic as static
    methods of the implementing classes so that we can more easily set styles
    for the buttons created by a gtk.Dialog (or subclass) without having to
    modify too much of the dialog instantiation code.
    
    Signed-off-by: Joshua Lock <josh@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

33	20	lib/bb/ui/crumbs/hobwidget.py

commit e0d598b454c01303a0ea9503feef3ce6f1ed1d69
Author: Joshua Lock <josh@linux.intel.com>
Date:   2012-03-23 17:23:02 -0700

    lib/bb/ui/crumbs/builddetailspage: fix label on 'Back' button
    
    The buttons taking the user back to image configuration should be prefixed
    with '<<'.
    
    Signed-off-by: Joshua Lock <josh@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/ui/crumbs/builddetailspage.py

commit 53af6a962aa2f6b4d68d59792be9c7f33cf887b4
Author: Joshua Lock <josh@linux.intel.com>
Date:   2012-03-23 17:23:00 -0700

    lib/bb/ui/crumbs/hobwidget: HobAltButton different visual when insensitive
    
    Use an alternative, grey, colour when the button is insensitive so that
    the insensitivity is easily noticed.
    
    Signed-off-by: Joshua Lock <josh@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

25	2	lib/bb/ui/crumbs/hobwidget.py

commit 6e51643325611f6cfc9090dcbbff20755d09c92d
Author: Joshua Lock <josh@linux.intel.com>
Date:   2012-03-23 17:22:59 -0700

    lib/bb/ui/crumbs/hig: sort layers in Layer Selection dialogue
    
    The two layers which cannot be removed, meta and meta-hob, should be the
    first two items in the tree view.
    
    Signed-off-by: Joshua Lock <josh@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

7	1	lib/bb/ui/crumbs/hig.py

commit 175e55db8f0762a2f2f0aaf3ca48169016b9ef6b
Author: Robert P. J. Day <rpjday@crashcourse.ca>
Date:   2012-03-22 15:54:37 -0400

    Fix typo: BB_NUMBER_THREAD -> BB_NUMBER_THREADS
    
    Correct some apparent misspellings of BB_NUMBER_THREADS.
    
    Signed-off-by: Robert P. J. Day <rpjday@crashcourse.ca>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	2	lib/bb/ui/crumbs/builder.py
1	1	lib/bb/ui/crumbs/template.py

commit 91bdd43468448385e07a57ac54ce25db9a8edf03
Author: Dongxiao Xu <dongxiao.xu@intel.com>
Date:   2012-03-24 19:44:11 +0800

    Hob: Avoid getting TMPDIR in hardcode
    
    We should get TMPDIR from bitbake server instead of hardcode.
    
    Signed-off-by: Dongxiao Xu <dongxiao.xu@intel.com>

2	1	lib/bb/ui/crumbs/builder.py
1	0	lib/bb/ui/crumbs/hobeventhandler.py

commit 863b14ebf2c7443ce6df362f24af6395e520edbc
Author: Dongxiao Xu <dongxiao.xu@intel.com>
Date:   2012-03-24 13:36:18 +0800

    Hob: Set empty DISTRO if "defaultsetup" is selected
    
    In Hob advanced setting, if "defaultsetup" is selected, we need to
    leave DISTRO variable not set in bitbake server.
    
    Otherwise, defaultsetup.conf will be parsed twice, causing TMPDIR and
    its related variables mess up.
    
    Signed-off-by: Dongxiao Xu <dongxiao.xu@intel.com>

2	1	lib/bb/ui/crumbs/hobeventhandler.py

commit de4d09a8d100b81622300db5f46627c649812abd
Author: Dongxiao Xu <dongxiao.xu@intel.com>
Date:   2012-03-24 01:12:09 +0800

    Hob: runqemu and deployment functionality filter
    
    Implement the filter for runqemu and deployment functionality.
    
    runqemu
    1) suffix should be in the list of RUNNABLE_IMAGE_TYPES.
    2) machine should match the pattern of RUNNABLE_MACHINE_PATTERNS.
    
    deployment:
    1) suffix should be in the list of DEPLOYMENT_IMAGE_TYPES.
    
    Signed-off-by: Dongxiao Xu <dongxiao.xu@intel.com>

3	0	lib/bb/ui/crumbs/builder.py
4	0	lib/bb/ui/crumbs/hobeventhandler.py
33	11	lib/bb/ui/crumbs/imagedetailspage.py

commit 1ebc1f68c90890bbc79c801baf0de349eb56e7cb
Author: Dongxiao Xu <dongxiao.xu@intel.com>
Date:   2012-03-24 01:11:40 +0800

    Hob: Add a supported image type "vmdk"
    
    Signed-off-by: Dongxiao Xu <dongxiao.xu@intel.com>

1	0	lib/bb/ui/crumbs/hobwidget.py

commit c8d985ec971c3a18508f9c698cb2df2c1bf96e3a
Author: Dongxiao Xu <dongxiao.xu@intel.com>
Date:   2012-03-23 15:45:34 +0800

    Hob: Fix the workaround to get image types
    
    Signed-off-by: Dongxiao Xu <dongxiao.xu@intel.com>

1	2	lib/bb/ui/crumbs/hobeventhandler.py

commit eb993c0bad03718f9d3e133667cd0fefca23611a
Author: Dongxiao Xu <dongxiao.xu@intel.com>
Date:   2012-03-23 15:38:42 +0800

    Hob: Change the Hob initialization process
    
    This change allows adding extra inherits before getting all the
    parameters.
    
    Signed-off-by: Dongxiao Xu <dongxiao.xu@intel.com>

11	6	lib/bb/ui/crumbs/builder.py
5	1	lib/bb/ui/crumbs/hobeventhandler.py
0	2	lib/bb/ui/hob.py

commit e4f22f6242f489afcadac67cc8dd282936b78586
Author: Dongxiao Xu <dongxiao.xu@intel.com>
Date:   2012-03-23 15:37:09 +0800

    Hob: Initial an empty label in recipeselectionpage.py
    
    When creating label in recipeselectionpage.py, the builder's
    configuration may not be ready yet, so create an empty label in
    initialization.
    
    Signed-off-by: Dongxiao Xu <dongxiao.xu@intel.com>

1	1	lib/bb/ui/crumbs/recipeselectionpage.py

commit 8bd6d8bb5e5ca0ca0ea2e2d31ffdc6df1aca16a2
Author: Dongxiao Xu <dongxiao.xu@intel.com>
Date:   2012-03-23 14:30:43 +0800

    Hob: Cleanup for hobeventhandler.py
    
    Signed-off-by: Dongxiao Xu <dongxiao.xu@intel.com>

1	1	lib/bb/ui/crumbs/builder.py
31	44	lib/bb/ui/crumbs/hobeventhandler.py
2	2	lib/bb/ui/hob.py

commit 73692cb55d7d5aaedfbcf6b8a24ab435a1d25a9e
Author: Dongxiao Xu <dongxiao.xu@intel.com>
Date:   2012-03-23 13:55:10 +0800

    Hob: Remove unnecessary PARSE_BBFILES command
    
    The ASYNC commands can automatically detect if BB file parsing is needed.
    Therefore remove this explicit parsing command.
    
    Signed-off-by: Dongxiao Xu <dongxiao.xu@intel.com>

1	5	lib/bb/ui/crumbs/hobeventhandler.py

commit 0348ef08db9ac425d83126d2e6eb465adc28b110
Author: Shane Wang <shane.wang@intel.com>
Date:   2012-03-23 19:21:25 +0800

    Hob: Change the descriptions for view_recipe_button and view_package_button
    
    Change the text of view_recipe_button to 'Add/remove recipes and tasks'
    Change the text of view_packages_button to 'Add/remove previously built packages'
    
    [Yocto #2146]
    
    Signed-off-by: Shane Wang <shane.wang@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	2	lib/bb/ui/crumbs/imageconfigurationpage.py

commit cf43be6685d45c66e6508bbce653f8a67db66a9b
Author: Liming An <limingx.l.an@intel.com>
Date:   2012-03-22 19:08:40 +0800

    Hob: add auto scroll to rows which be new appended in hob building log page
    
    For make the building screen to provide clear information about task in progress by request, so add this function.
    
    At the beginning of building, the vertical scroll bar will go to the active area automatically.
    Once the user moves the scroll bar in the middle, the automatic move of the bar is disabled.
    However, once the user moves it to the bottom again, it will be kept to the bottom even though more logs come.
    
    [Yocto #2098]
    
    Signed-off-by: Liming An <limingx.l.an@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

10	1	lib/bb/ui/crumbs/builddetailspage.py

commit 7c5e1297c1af2edd46315e3dec4516f850d5e222
Author: Liming An <limingx.l.an@intel.com>
Date:   2012-03-22 19:03:35 +0800

    Hob: reset the policy to forbid the horizontal scrolling for building log
    
    This patch is not to show the horizontal scroll bar for building log, and add CellRendererText class to wrap the text.
    
    [Yocto #2091]
    
    Signed-off-by: Liming An <limingx.l.an@intel.com>
    Signed-off-by: Shane Wang <shane.wang@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	3	lib/bb/ui/crumbs/builddetailspage.py
24	0	lib/bb/ui/crumbs/hobwidget.py
4	3	lib/bb/ui/crumbs/runningbuild.py

commit 03e645cda56e9f8cf1fa94775534369b77518767
Author: Joshua Lock <josh@linux.intel.com>
Date:   2012-03-22 16:13:08 -0700

    lib/bb/ui/crumbs/builder: change dialogue title to Layers
    
    Signed-off-by: Joshua Lock <josh@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/ui/crumbs/builder.py

commit f4dfdc23a6498fdaa164a1bfccf616ff8fcbd251
Author: Joshua Lock <josh@linux.intel.com>
Date:   2012-03-22 16:06:42 -0700

    lib/bb/ui/crumbs: make use of HobButton for existing primary action buttons
    
    Replace all gtk.Button instances that have the orange style applied with
    HobButton.
    
    Signed-off-by: Joshua Lock <josh@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	11	lib/bb/ui/crumbs/imageconfigurationpage.py
2	9	lib/bb/ui/crumbs/imagedetailspage.py
2	9	lib/bb/ui/crumbs/packageselectionpage.py
2	9	lib/bb/ui/crumbs/recipeselectionpage.py

commit 9aa477f7bd16d3e360bf9b51c1f9d5032a6c5288
Author: Joshua Lock <josh@linux.intel.com>
Date:   2012-03-22 16:05:42 -0700

    lib/bb/ui/crumbs/hobwidget: add HobButton widget for the primary action
    
    The design uses a big, bold labelled, orange button for the primary action
    on each dialogue. The HobButton implements this design as a reusable widget.
    
    HobButton makes use of Pango Markup to use a relative size, x-large, for
    the button text to ensure it's relative to the system configured font
    sizes.
    
    Signed-off-by: Joshua Lock <josh@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

20	0	lib/bb/ui/crumbs/hobwidget.py

commit 08cc5ec196a51c29f936eccba1644607be2ed759
Author: Joshua Lock <josh@linux.intel.com>
Date:   2012-03-22 16:02:56 -0700

    lib/bb/ui/crumbs: fix 'Back to image configuration' alt button text
    
    Design calls for these buttons to include << at the beginning of the label
    
    Signed-off-by: Joshua Lock <josh@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/ui/crumbs/packageselectionpage.py
1	1	lib/bb/ui/crumbs/recipeselectionpage.py

commit c9f61765216a013c7ebc02157ea47c3478252e7c
Author: Joshua Lock <josh@linux.intel.com>
Date:   2012-03-22 16:02:00 -0700

    lib/bb/ui/crumbs: add colour for HobAltButton per visual design
    
    The visual design calls for the alternative button to have a pale blue
    colour.
    
    Signed-off-by: Joshua Lock <josh@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	0	lib/bb/ui/crumbs/hobcolor.py
3	2	lib/bb/ui/crumbs/hobwidget.py

commit 535d23921dfb7310022099d39b1092edfee51c1a
Author: Joshua Lock <josh@linux.intel.com>
Date:   2012-03-22 16:00:29 -0700

    lib/bb/ui/crumbs/hig: tweak 'Add Layer' button per visual design
    
    Use a separate, pre-lit, icon when the button has the cursor over it.
    
    Signed-off-by: Joshua Lock <josh@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

16	11	lib/bb/ui/crumbs/hig.py

commit 65d92efe2786f21b8a2790ef0383f87b6dc15b57
Author: Joshua Lock <josh@linux.intel.com>
Date:   2012-03-22 15:56:30 -0700

    lib/bb/ui/crumbs/builder: only show a close button on the Layer Selector
    
    Per discussion with the design team the LayerSelectionDialog should only
    have a close button.
    
    See: https://bugzilla.yoctoproject.org/show_bug.cgi?id=2083#c10
    
    Signed-off-by: Joshua Lock <josh@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	2	lib/bb/ui/crumbs/builder.py

commit b91cc96c4ff4195ac26fdfd1fb0c2ff8db06aff8
Author: Joshua Lock <josh@linux.intel.com>
Date:   2012-03-22 15:54:37 -0700

    lib/bb/ui/crumbs: replace HobXpmLabelButtonBox with HobImageButton
    
    HobImageButton is an gtk.Button subclass, and therefore behaves like a
    button with prelight and focus states, with an icon and two lines of text -
    primary and secondary. The secondary text is displayed in a lighter colour
    using a new module method, soften_color(), per the design.
    
    Signed-off-by: Joshua Lock <josh@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

64	59	lib/bb/ui/crumbs/hobwidget.py
21	19	lib/bb/ui/crumbs/imageconfigurationpage.py

commit e1037e438d6fd04e3841d821afa811e8392a7183
Author: Joshua Lock <josh@linux.intel.com>
Date:   2012-03-22 13:21:50 -0700

    lib/bb/ui/icons: add new icons for use in Hob, autocrop some existing ones
    
    Add add-hover and remove-hover icons for the Layer Selection Dialogue.
    Autocrop layers_hover, packages_hover and recipe_hover images.
    
    Signed-off-by: Joshua Lock <josh@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

-	-	lib/bb/ui/icons/indicators/add-hover.png
-	-	lib/bb/ui/icons/indicators/remove-hover.png
-	-	lib/bb/ui/icons/layers/layers_hover.png
-	-	lib/bb/ui/icons/packages/packages_hover.png
-	-	lib/bb/ui/icons/recipe/recipe_hover.png

commit 521d6b14151d3bf934b9597557f7ae46e50a3d7a
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2012-03-23 14:52:23 +0000

    bitbake/fetch2: Ensure mirror tarballs have .done stamps so we don't redownload and corrupt them
    
    [YOCTO #2154]
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	0	lib/bb/fetch2/__init__.py
1	0	lib/bb/fetch2/git.py

commit 96e235a151fa04f5a15cd8b46f50a5852e2ba739
Author: Shane Wang <shane.wang@intel.com>
Date:   2012-03-22 21:46:02 +0800

    Hob: Revert interfaces of callbacks for layer_button, view_recipes_button, and view_packages_button.
    
    (From Poky rev: 35942a7dd973796673ab0215f68b4a25356ec053)
    
    Signed-off-by: Shane Wang <shane.wang@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	3	lib/bb/ui/crumbs/imageconfigurationpage.py

commit 431624678025b3d3fe04f1c6e8fc50820b3129fb
Author: Joshua Lock <josh@linux.intel.com>
Date:   2012-03-21 18:55:33 -0700

    lib/bb/ui/crumbs/hig: disable removal of meta-hob layer
    
    The Hob GUI requires the meta-hob layer to function so prevent its removal
    as we do with the core meta layer.
    
    (From Poky rev: a64d71e1e4475236e286cb20dde29c4d099d3693)
    
    Signed-off-by: Joshua Lock <josh@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	1	lib/bb/ui/crumbs/hig.py

commit b2d8f28c0059992200457a15aef8be09e015a5dd
Author: Joshua Lock <josh@linux.intel.com>
Date:   2012-03-20 09:39:45 -0700

    ui/crumbs/hig: make the layer selection dialogue more closely match design
    
    The layer dialogue design includes in-line remove/delete widgets next to
    the layer path in the tree view for all layers other than the meta layer as
    well as an in-line notice that the meta layer cannot be removed.
    
    This is achieved  in this patch through the use of custom cell_data_func's
    for the treeview to render the meta layer differently and a custom
    CellRenderer implementation, CellRendererPixbufActivatable, which renders a
    pixbuf and emits a clicked signal when the user clicks on it.
    
    Fixes [YOCTO #2083]
    
    (From Poky rev: 83c96b7a0ec4412716090098385a665045909a9a)
    
    Signed-off-by: Joshua Lock <josh@linux.intel.com>
    Signed-off-by: Shane Wang <shane.wang@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

93	29	lib/bb/ui/crumbs/hig.py

commit e68c37cee0c9fb1b88479888656eae43bfd144d7
Author: Joshua Lock <josh@linux.intel.com>
Date:   2012-03-21 18:53:35 -0700

    lib/bb/ui/crumbs: add icons for use in the layer dialogue
    
    (From Poky rev: 5e5b488952ef2a0dd886fd67993411760855fcee)
    
    Signed-off-by: Joshua Lock <josh@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	0	lib/bb/ui/crumbs/hobwidget.py
-	-	lib/bb/ui/icons/indicators/add.png
-	-	lib/bb/ui/icons/indicators/remove.png

commit e439de09eb073a50e12021b196f10fc87e33b858
Author: Joshua Lock <josh@linux.intel.com>
Date:   2012-03-21 18:44:01 -0700

    lib/ui/icons: autocrop images
    
    Remove transparent border from the edge of the layers_display,
    packages_display and recipe_display images.
    
    (From Poky rev: d240f17687f34a0c5733a7744e8689420f45381c)
    
    Signed-off-by: Joshua Lock <josh@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

-	-	lib/bb/ui/icons/layers/layers_display.png
-	-	lib/bb/ui/icons/packages/packages_display.png
-	-	lib/bb/ui/icons/recipe/recipe_display.png

commit 601521c2d7f5568d94529a77b2cbe19fef7cbf48
Author: Joshua Lock <josh@linux.intel.com>
Date:   2012-03-21 18:42:35 -0700

    lib/bb/ui/crumbs: Add HobAltButton and use it
    
    This adds a gtk.Button subclass for secondary actions which unsets the
    relief so that the user is aware that the button is clickable and yet it is
    more subtle than the primary action (such that the primary action is the
    most obvious one) - this is per the interaction design.
    
    Further we replace all uses of gtk.LinkButton with the new HobAltButton
    
    Partially addresses [YOCTO #2105], a follow on patch will theme the button
    so that it matches the visual design.
    
    (From Poky rev: c3f17fed243180678264168968333463b203bfa0)
    
    Signed-off-by: Joshua Lock <josh@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	3	lib/bb/ui/crumbs/builddetailspage.py
1	1	lib/bb/ui/crumbs/hig.py
8	1	lib/bb/ui/crumbs/hobwidget.py
6	7	lib/bb/ui/crumbs/imageconfigurationpage.py
6	6	lib/bb/ui/crumbs/imagedetailspage.py
2	2	lib/bb/ui/crumbs/packageselectionpage.py
2	2	lib/bb/ui/crumbs/recipeselectionpage.py

commit 7658cd6d8e0e558f60df72b294019a40c27bc703
Author: Joshua Lock <josh@linux.intel.com>
Date:   2012-03-20 17:05:03 -0700

    ui/crumbs/persistenttooltip: fix whitespace
    
    We use 4 spaces, not a tab, in BitBake
    
    (From Poky rev: 7d9c9fd7c267d69bab51590074d66a2d68e98ca6)
    
    Signed-off-by: Joshua Lock <josh@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

132	132	lib/bb/ui/crumbs/persistenttooltip.py

commit ab15ef585e51e4c85a4a55aa6b35fbf3b53f3805
Author: Joshua Lock <josh@linux.intel.com>
Date:   2012-03-20 15:45:33 -0700

    ui/crumbs/persistenttooltip: fix colours on darker themes
    
    Darker gtk+ themes, such as the one used in Ubuntu Unity, revealed that the
    PersistentTooltip styling wasn't setting the label colour correctly.
    
    Set the label foreground colour to the tooltip_fg_colour value as read from
    gtk-color-scheme property of the system settings.
    
    (From Poky rev: 0934cfcea5986dbdc50e7159ee907c70b0b3e587)
    
    Signed-off-by: Joshua Lock <josh@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

21	5	lib/bb/ui/crumbs/persistenttooltip.py

commit f652d9d28d69a04bc9361599d173625378ac8d33
Author: Joshua Lock <josh@linux.intel.com>
Date:   2012-03-20 15:38:27 -0700

    ui/crumbs/persistenttooltip: tweak borders
    
    Change the layout and borders so that the close button is flush with the
    edge of the tooltip window yet leave the contents with a small border such
    that text isn't flush with the window edge.
    
    (From Poky rev: 5a0891d144de5d3f73c51adef5a30492a679c66a)
    
    Signed-off-by: Joshua Lock <josh@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

6	2	lib/bb/ui/crumbs/persistenttooltip.py

commit f55372d542995fd0797b11f42dcfdbe57858449a
Author: Joshua Lock <josh@linux.intel.com>
Date:   2012-03-20 09:50:15 -0700

    ui/crumbs/hobwidget: add clear icon to search entries in HobNotebook
    
    It's a common pattern on Gtk+ desktops to be able to clear a search/filter
    entry using an icon in that entry.
    
    (From Poky rev: 6394283522ef2f259397d8bd294291fb20354c8b)
    
    Signed-off-by: Joshua Lock <josh@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

14	5	lib/bb/ui/crumbs/hobwidget.py

commit bdbee0c899e115ad08b9a77d3e58d6767766da75
Author: Dongxiao Xu <dongxiao.xu@intel.com>
Date:   2012-03-21 16:27:25 +0800

    Hob: Use inherit information to judge if a recipe is image type
    
    Previously we use pattern "-image-" to match recipe name to judge if
    it is image type. This will ignore some images whose name doesn't
    match the pattern. The new method is to use the inherit information,
    that is, if a recipe inherits image.bbclass, we treat it as an image.
    
    (From Poky rev: 981b81bd39529d2ba9af0d4e2a25bda3d32bd8fc)
    
    Signed-off-by: Dongxiao Xu <dongxiao.xu@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

5	3	lib/bb/ui/crumbs/hoblistmodel.py

commit fe52af99918f61abec8f779efb02926b713f2aac
Author: Dongxiao Xu <dongxiao.xu@intel.com>
Date:   2012-03-21 16:27:10 +0800

    cooker: add inherit information when generating package tree
    
    Inherit information could be used to judge if a recipe is image type
    or not.
    
    (From Poky rev: 203f112a84b3971dc71da3dc455fd054d1c16a12)
    
    Signed-off-by: Dongxiao Xu <dongxiao.xu@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	0	lib/bb/cooker.py

commit 98dd4f20f2e6f50c1cad2c480eebde14eeadc41a
Author: Shane Wang <shane.wang@intel.com>
Date:   2012-03-21 11:34:26 +0800

    Hob: Change the titles for recipe view and package view
    
    (From Poky rev: cccbf0cc8a3d8c93a141d96bed4763beb7b85786)
    
    Signed-off-by: Shane Wang <shane.wang@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/ui/crumbs/packageselectionpage.py
1	1	lib/bb/ui/crumbs/recipeselectionpage.py

commit 594f5936c2450d596967f062c14434f5357cb5aa
Author: Shane Wang <shane.wang@intel.com>
Date:   2012-03-21 11:15:23 +0800

    Hob: Change "View Packages" description
    
    Change 'View Packages' button description from 'Add/remove packages' to 'Add/remove previously built packages to/from your image'.
    And we adjust the size to make "View Packages" button fit into the window.
    
    [Yocto #2146]
    
    (From Poky rev: 279dbff3ef9f8e8bc58b86f8c4f5ffe70d4a2e8b)
    
    Signed-off-by: Shane Wang <shane.wang@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	3	lib/bb/ui/crumbs/imageconfigurationpage.py

commit 6d9dc83e566b7d3a4903fdba30053233d97e8381
Author: Shane Wang <shane.wang@intel.com>
Date:   2012-03-21 11:04:33 +0800

    Hob: Change window title from HOB to Hob
    
    [Yocto #2147]
    
    (From Poky rev: 9291e6b751171a49fcd8cd0d13c6b22479e542bd)
    
    Signed-off-by: Shane Wang <shane.wang@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/ui/crumbs/builder.py

commit 7e00723a6508023ffbefed2c2de1bc9c55564faa
Author: Dongxiao Xu <dongxiao.xu@intel.com>
Date:   2012-03-21 11:19:51 +0800

    Hob: Move "Create your own image" to the bottom of image list
    
    Move "Create your own image" item to the bottom of base image list.
    Besides, remove an un-used hob list entry.
    
    This fixes [YOCTO #2104]
    
    (From Poky rev: f215ce518ad644ca4747ae17279db4b82d0c715d)
    
    Signed-off-by: Dongxiao Xu <dongxiao.xu@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	2	lib/bb/ui/crumbs/hoblistmodel.py
4	1	lib/bb/ui/crumbs/imageconfigurationpage.py

commit e12a5e478635a0de87060ac20aff8c9b1858596e
Author: Dongxiao Xu <dongxiao.xu@intel.com>
Date:   2012-03-21 10:14:09 +0800

    Hob: Change package selection tab order
    
    In the package screen, change the tab order to be:
    "Included" and "All packages".
    
    Also change some descriptions in tab.
    
    This fixes [YOCTO #2111]
    
    (From Poky rev: 25628f43d16bcc35874bdac3e1ce1b552c049633)
    
    Signed-off-by: Dongxiao Xu <dongxiao.xu@intel.com>
    Signed-off-by: Shane Wang <shane.wang@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

20	20	lib/bb/ui/crumbs/packageselectionpage.py

commit f7168e891ce4af5234d53896a7f51489a7c84a6f
Author: Dongxiao Xu <dongxiao.xu@intel.com>
Date:   2012-03-21 10:09:16 +0800

    Hob: Change recipe selection tab order
    
    In the recipe screen, change the tab order to be:
    "Included", "All recipes", and "Tasks".
    
    Also change some description name in tab.
    
    This fixes [YOCTO #2110]
    
    (From Poky rev: 400b1092f1bad578b26d1e41aeb87dcb852aa4e3)
    
    Signed-off-by: Dongxiao Xu <dongxiao.xu@intel.com>
    Signed-off-by: Shane Wang <shane.wang@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

24	24	lib/bb/ui/crumbs/recipeselectionpage.py

commit f75dde11f2d73119702026d4dd531c0b242303c7
Author: Dongxiao Xu <dongxiao.xu@intel.com>
Date:   2012-03-20 15:58:16 +0800

    Hob: Change template button name from "Template" to "Templates"
    
    Change the button name according to UI team's design.
    
    This fixes [YOCTO #2126]
    
    (From Poky rev: 1e4477f9b121b2523685cc6440050c47d3ae1cde)
    
    Signed-off-by: Dongxiao Xu <dongxiao.xu@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/ui/crumbs/imageconfigurationpage.py

commit 4ebce01dde18e67e01ff7c4736c229a3364c04b0
Author: Dongxiao Xu <dongxiao.xu@intel.com>
Date:   2012-03-20 15:49:44 +0800

    Hob: change package classes selection GUI
    
    This commit change the GUI for package classes selection in advanced
    setting dialog, which conforms with UI team's design.
    
    (From Poky rev: 7bbcabdb71d76cdb2ec1de15618d1e47f1149a21)
    
    Signed-off-by: Dongxiao Xu <dongxiao.xu@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

45	136	lib/bb/ui/crumbs/hig.py

commit 8c129e05a94d457860d883c9b2934a5559de8d9b
Author: Dongxiao Xu <dongxiao.xu@intel.com>
Date:   2012-03-19 11:08:45 +0800

    Hob: Remove split model in GTK Hob
    
    Since the GTK Hob will not use the server/client split model, thus
    remove it from current Hob code. But we still keep the core mechanism
    in bitbake server.
    
    (From Poky rev: 983ea0265a53e0725dcbf9085ea767ebbc155ae5)
    
    Signed-off-by: Dongxiao Xu <dongxiao.xu@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	11	lib/bb/ui/crumbs/builder.py
35	68	lib/bb/ui/crumbs/hig.py
3	18	lib/bb/ui/crumbs/hobeventhandler.py
1	10	lib/bb/ui/hob.py

commit ee55ca82c94080ef825d6de094e38ba40ee62e8b
Author: Dongxiao Xu <dongxiao.xu@intel.com>
Date:   2012-03-21 10:58:14 +0800

    Hob: Still use initcmd != None as the if judgement
    
    This commit reverts part of change in 491c87d1, since initcmd has a
    possible value of 0, therefore we must explicitly compare the initcmd
    with None in if judgement.
    
    (From Poky rev: 5736972974a769ea7ce6c92fdf6842db044f770d)
    
    Signed-off-by: Dongxiao Xu <dongxiao.xu@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	2	lib/bb/ui/crumbs/hobeventhandler.py

commit c5fdc6c02fe4712d3114caccfd759a626bd9677b
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2012-03-21 17:08:04 +0000

    Add bitbake-dumpsig to make it more obvious how to dump a signatures file
    
    [YOCTO #2057]
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

9	0	bin/bitbake-dumpsig

commit d595960fea0988df9004d927bc2ec3439540dd9c
Author: Dongxiao Xu <dongxiao.xu@intel.com>
Date:   2012-03-16 16:48:13 +0800

    Hob: save CONF_VERSION and LCONF_VERSION into template
    
    To pass the sanity check, we need to define CONF_VERSION and
    LCONF_VERSION in local.conf and bblayers.conf.
    
    [YOCTO #2119]
    
    Signed-off-by: Dongxiao Xu <dongxiao.xu@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

6	0	lib/bb/ui/crumbs/builder.py
3	0	lib/bb/ui/crumbs/hobeventhandler.py
5	5	lib/bb/ui/crumbs/template.py

commit db4b78798e2280736ddce9f54d25cbcdcb779d0a
Author: Dongxiao Xu <dongxiao.xu@intel.com>
Date:   2012-03-16 16:48:12 +0800

    Hob: Fix advanced setting reparse mechanism
    
    When judging if reparse is needed when change values in advanced
    setting, we need also include user's own defined variable pairs.
    
    [YOCTO #2121]
    
    Signed-off-by: Dongxiao Xu <dongxiao.xu@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	0	lib/bb/ui/crumbs/hig.py

commit 947f1a3cb7ca81608fd04b7a5d7ced5f4da47d05
Author: Dongxiao Xu <dongxiao.xu@intel.com>
Date:   2012-03-16 16:48:11 +0800

    Hob: reset the selection if switch to a new base image
    
    Signed-off-by: Dongxiao Xu <dongxiao.xu@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	0	lib/bb/ui/crumbs/hoblistmodel.py

commit b7b7c768761d205bc5a60922ff709c9c184d4158
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2012-03-20 14:37:16 +0000

    utils: Add split_version function for splitting a version into its components
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

14	0	lib/bb/utils.py

commit 09147098a63c33dc05dc39b7fe4da4df8e2dbd4c
Author: Joshua Lock <josh@linux.intel.com>
Date:   2012-03-13 13:06:45 -0700

    ui/crumbs/persistenttooltip: try to reflect WM close button position
    
    When the user is running a desktop where the close button is on the left we
    try to detect that and position the tooltip close button appropriately.
    Where we can't easily determine this we default to placing the close button
    on the right.
    
    Tested on Ubuntu/Unity and Fedora/Gnome Shell.
    
    Signed-off-by: Joshua Lock <josh@linux.intel.com>

23	1	lib/bb/ui/crumbs/persistenttooltip.py

commit 6491b5fd877d6006ebc91e0c73d443a6e7626f3f
Author: Joshua Lock <josh@linux.intel.com>
Date:   2012-03-13 13:11:16 -0700

    ui/crumbs/hobpage: no need to force a Toolbar button type
    
    This uses a more concise API that will be more flexible whent he Toolbar
    style is updated to match the visual design.
    
    Signed-off-by: Joshua Lock <josh@linux.intel.com>

1	3	lib/bb/ui/crumbs/hobpages.py

commit 77ed4bb3468d5d256f08329fd307df5a219ae242
Author: Joshua Lock <josh@linux.intel.com>
Date:   2012-03-13 13:09:18 -0700

    ui/crumbs: remove unused return value from append_toolbar_button
    
    No caller of the method uses the returned toolbar variable
    
    Signed-off-by: Joshua Lock <josh@linux.intel.com>

1	1	lib/bb/ui/crumbs/hobpages.py
3	3	lib/bb/ui/crumbs/imageconfigurationpage.py
1	1	lib/bb/ui/crumbs/imagedetailspage.py

commit 7b28ed7dfa59d9e7cec662159113a03633f8bb36
Author: Joshua Lock <josh@linux.intel.com>
Date:   2012-03-05 17:02:13 -0800

    ui/crumbs/hig: use close rather than OK for dismis button
    
    Dialogue buttons should have descriptive names
    
    Signed-off-by: Joshua Lock <josh@linux.intel.com>

1	1	lib/bb/ui/crumbs/hig.py

commit 0531730b255f41b2804bcd322e10c52cbf13537a
Author: Liming An <limingx.l.an@intel.com>
Date:   2012-03-20 18:51:54 +0800

    Hob: fixed the tabbar search entry retaining focus when user has clicked off it issue
    
    Add reset focus code to fixed the search entry retaining focus issue
    
    (From Poky rev: 75969f92af4b0aae25dcaa3321f835dd729f4bf9)
    
    Signed-off-by: Liming An <limingx.l.an@intel.com>
    Signed-off-by: Shane Wang <shane.wang@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	0	lib/bb/ui/crumbs/hobwidget.py

commit 76f63e70c7b2d6291f8b11bc5baebda510a276d7
Author: Liming An <limingx.l.an@intel.com>
Date:   2012-03-16 22:28:13 +0800

    Hob: fix static variable "self.search" to parameter "search" in signal callback function
    
    To fix the signal callback function code, and make the temp parameter to replaced the static global variable, as required.
    
    (From Poky rev: a95b61d48bf92948ff5a21896e71ed3cb323ab38)
    
    Signed-off-by: Liming An <limingx.l.an@intel.com>
    Signed-off-by: Shane Wang <shane.wang@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

14	17	lib/bb/ui/crumbs/hobwidget.py

commit 8e4e868e6183fbd52fa455937bb824a52ef15ab5
Author: Liming An <limingx.l.an@intel.com>
Date:   2012-03-20 18:50:06 +0800

    Hob: change HobNoteBook tab edge color from green to gray
    
    To change the notebook tab pressed edge color from green to gray.
    
    (From Poky rev: 8e454749e7f535cf43544eeb167c90632e89cfb0)
    
    Signed-off-by: Liming An <limingx.l.an@intel.com>
    Signed-off-by: Shane Wang <shane.wang@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	0	lib/bb/ui/crumbs/hobcolor.py
8	5	lib/bb/ui/crumbs/hobwidget.py

commit f406b0a11b021f8492ed0b083d9ff89de4a14653
Author: Liming An <limingx.l.an@intel.com>
Date:   2012-03-20 18:06:13 +0800

    Hob: add auto adjust background area function for long issue text
    
    To add auto expand the background area function for long issue text input.
    
    (From Poky rev: f1822f0961bd719de0827e361f7e6fa3bf872746)
    
    Signed-off-by: Liming An <limingx.l.an@intel.com>
    Signed-off-by: Shane Wang <shane.wang@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

21	9	lib/bb/ui/crumbs/hobwidget.py

commit 3dc443663b97515a54b70c9047a9b22c6b8a0c14
Author: Liming An <limingx.l.an@intel.com>
Date:   2012-03-20 17:38:02 +0800

    Hob: Fixed the hobwidget code and make it like a pythonista
    
    fixed the 'for..in..' range dance code, and use the 'iterator' approach to replaced the index for quote the 'children' list
    
    (From Poky rev: 74e7286a4e875eda5e8abeb5db1015031d21c35f)
    
    Signed-off-by: Liming An <limingx.l.an@intel.com>
    Signed-off-by: Shane Wang <shane.wang@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

34	29	lib/bb/ui/crumbs/hobwidget.py

commit 27e77f6c196e313b5b941238e54b74fc746a0230
Author: Liming An <limingx.l.an@intel.com>
Date:   2012-03-16 22:22:09 +0800

    Hob: remove the invalid code in hobwidget.py
    
    To delete some code which is not used
    
    (From Poky rev: a8f5a72d36e9a55ec7a2296e1c9623e177a95a74)
    
    Signed-off-by: Liming An <limingx.l.an@intel.com>
    Signed-off-by: Shane Wang <shane.wang@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

0	2	lib/bb/ui/crumbs/hobwidget.py

commit 23c140a4d00293d922cbd34b6b837493cac2e93a
Author: Shane Wang <shane.wang@intel.com>
Date:   2012-03-16 15:17:37 +0800

    Hob: fix '!= None' and '== None' in the code
    
    This patch is to fix the following:
    
    if foo != None -----> if foo
    if foo == None -----> if not foo
    
    (From Poky rev: d771343b1726f166ed8d75543ba68bd2a20aee7b)
    
    Signed-off-by: Shane Wang <shane.wang@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	2	lib/bb/ui/crumbs/hobeventhandler.py
1	1	lib/bb/ui/crumbs/hoblistmodel.py
2	2	lib/bb/ui/crumbs/hobpages.py
3	3	lib/bb/ui/crumbs/hobwidget.py
6	6	lib/bb/ui/crumbs/imagedetailspage.py
2	2	lib/bb/ui/crumbs/runningbuild.py

commit 9b168239a5d9693573438eb6514938b81de85af3
Author: Shane Wang <shane.wang@intel.com>
Date:   2012-03-16 13:40:41 +0800

    Hob: change the code style to enumerate a list in a for-loop
    
    We use the more common style to enumerate a list in a for-loop
    (http://docs.python.org/library/functions.html#enumerate), that is:
    
    try to use
    for item in mylist,
    
    and try to use
    for i, item in enumerate(list)
    rather than
    for i in range(len(mylist))
    
    (From Poky rev: 33c21bc60bd1542f81d33c328f116dec424728cd)
    
    Signed-off-by: Shane Wang <shane.wang@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

15	15	lib/bb/ui/crumbs/hobwidget.py
5	5	lib/bb/ui/crumbs/packageselectionpage.py
5	5	lib/bb/ui/crumbs/recipeselectionpage.py

commit f2eead1bc20c48b2f36e880a879a5a50e6e6567b
Author: Shane Wang <shane.wang@intel.com>
Date:   2012-03-12 20:55:44 +0800

    Hob: show indicators on the tabs of the Hob notebook
    
    This patch is to show the indicators (e.g., the number of the issues) in the build details page to highlight.
    
    (From Poky rev: 2e08a8e6818b8f1df7eaac499ebc3a5854efe7be)
    
    Signed-off-by: Liming An <limingx.l.an@intel.com>
    Signed-off-by: Shane Wang <shane.wang@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

10	0	lib/bb/ui/crumbs/builddetailspage.py
5	0	lib/bb/ui/crumbs/builder.py
14	0	lib/bb/ui/crumbs/hobwidget.py
4	0	lib/bb/ui/crumbs/runningbuild.py

commit d51ad20aa00f2af6c7174910b31523fff0e5a639
Author: Shane Wang <shane.wang@intel.com>
Date:   2012-03-12 20:47:06 +0800

    Hob: use HobNotebook to implement a notebook in build details page
    
    This patch is to use HobNotebook we defined to implement the notebook in the build details page.
    
    (From Poky rev: 792c5eb29cf44d9ef559ae59802327fb1bb2cb3c)
    
    Signed-off-by: Liming An <limingx.l.an@intel.com>
    Signed-off-by: Shane Wang <shane.wang@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

25	5	lib/bb/ui/crumbs/builddetailspage.py
65	0	lib/bb/ui/crumbs/runningbuild.py

commit b0c2ca3f600694c6d37924006de3f9474b2a9a8e
Author: Shane Wang <shane.wang@intel.com>
Date:   2012-02-27 13:28:26 +0800

    Hob: implement a self-defined notebook visual component for Hob
    
    In recipe selection page, package selection page, and build details page, etc, there is a notebook component which is not gtk.Notebook in the design video.
    We implement the visual component with a drawing area, and use it to replace the old notebook in recipe selection page and package selection page. The reasons why we do it are:
    
    1) General speaking, gtk.Notebook doesn't look like the designer worked out. (see https://wiki.yoctoproject.org/wiki/File:Hob1.2-screencast2.mov)
    2) And the designer version looks better, for example, there is an indicator to show how many recipes or packages are included, and how many issues happened when building? Very straightforward.
    But technically, gtk.Notebook can't implement that, as far as we know.
    3) Moreover, there is an entry for "search recipes", and "search packages". How to make it horizontal to the tabs is a problem to us.
    
    Regarding those, we give up gtk.Notebook and use our own.
    
    (From Poky rev: e4ebac226cc5e4589bcecd8bada9fde462e925cc)
    
    Signed-off-by: Liming An <limingx.l.an@intel.com>
    Signed-off-by: Shane Wang <shane.wang@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	0	lib/bb/ui/crumbs/hobcolor.py
383	85	lib/bb/ui/crumbs/hobwidget.py
5	12	lib/bb/ui/crumbs/packageselectionpage.py
5	14	lib/bb/ui/crumbs/recipeselectionpage.py

commit c4c8df0e1e77f99f3ee0b07e1748116fc362819f
Author: Robert P. J. Day <rpjday@crashcourse.ca>
Date:   2012-03-19 09:58:14 -0400

    Typo: "nonexistant" -> "non-existent"
    
    Signed-off-by: Robert P. J. Day <rpjday@crashcourse.ca>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	2	lib/bb/runqueue.py

commit 815c113120b73331ecf32d6f57bc034f379bed43
Author: Eric Bénard <eric@eukrea.com>
Date:   2012-03-19 12:56:19 +0100

    runningbuild.py: fix goggle ui
    
    * goggle ui actually fails with :
    Traceback (most recent call last):
      File ".../bitbake/lib/bb/ui/goggle.py", line 35, in event_handle_idle_func
        build.handle_event (event, pbar)
      File ".../bitbake/lib/bb/ui/crumbs/runningbuild.py", line 234, in handle_event
        pbar.update(0, None, bb.event.getName(event))
    TypeError: update() takes exactly 3 arguments (4 given)
    
    Signed-off-by: Eric Bénard <eric@eukrea.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	2	lib/bb/ui/crumbs/runningbuild.py

commit c4f7fd708c48d4323db4bbeb3074f576f5be7aa2
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2012-03-19 11:18:58 +0000

    bitbake-layers: fix traceback in show-overlayed with nothing overlayed
    
    There is no logger.note, use logger.plain instead (which is what we
    really want here anyway.)
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	bin/bitbake-layers

commit 5a1e62a8cdd4f0253b0dc59046b3b4c3186af461
Author: Gary Thomas <gary@mlbassoc.com>
Date:   2012-03-16 13:30:34 -0600

    bitbake/fetch2: Fix typo which broke use of tarballs
    
    Signed-off-by: Gary Thomas <gary@mlbassoc.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/fetch2/__init__.py

commit e68814cb2e8da523d4ddf05e8ceddfaa19244851
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2012-03-16 10:46:05 +0000

    runqueue.py: When checking whether stamps are valid for setscene, recurse
    
    Currently the code checking whether stamps are valid only traverses one step
    of the dependency graph. This works fine in the normal cases where we've already
    validated dependencies but for the setscene code, it doesn't work well. A typical
    problem usecase is something like:
    
    bitbake gcc-cross -c unpack -f
    bitbake gcc-cross
    
    which will ignore any sstate files already cached which could be used to speed
    up the gcc-cross build. This becomes particularly problematic with multiple gcc
    builds where only one should rebuild yet they all do.
    
    This patch teaches the stamp code to be able to recurse within a given fn
    which gives the behaviour people would expect from the code and allows
    bitbake to make better use of prebuild sstate objects.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

4	3	lib/bb/runqueue.py

commit a17473d51f54a9dfb4eeaa5ad516c4851d5ac142
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2011-12-06 22:20:11 +0000

    bitbake/fetch: Fix uri_replace
    
    We were seeing duplicate endings to urls:
    
    DEBUG: For url ['http', 'www.apache.org', '/dist/subversion/subversion-1.7.1.tar.bz2', '', '', {}] comparing ['http', 'www.apache.org', '/dist', '', '', {}] to ['http', 'archive.apache.org', '/dist', '', '', {}]
    DEBUG: For url http://www.apache.org/dist/subversion/subversion-1.7.1.tar.bz2 returning http://archive.apache.org/dist/subversion/subversion-1.7.1.tar.bz2/subversion-1.7.1.tar.bz2
    
    This patch addresses this by only performing substitutions when really needed.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

7	6	lib/bb/fetch2/__init__.py

commit 2568e9ace6e6f483e1bf2a9ef2f4d8318d6c85b7
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2012-03-03 09:45:58 +0000

    parse/ast: Expand inherit statements before splitting them
    
    This means that statements that expand to more then one entry
    such as:
    
    CLASSES = "a b"
    inherit ${CLASSES}
    
    work correctly instead of trying to inherit a class called "a b".
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/cooker.py
2	2	lib/bb/parse/ast.py
1	1	lib/bb/parse/parse_py/BBHandler.py

commit 17e68cfc6018b93d19738a6a874dfdea23fbab11
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2011-11-26 13:36:22 +0000

    ui/uihelper: Keep track of task numbers
    
    Add code so the uihelper keeps track of how may tasks we've run and
    how many tasks there are in total so UIs don't have to track
    this information themselves.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

5	0	lib/bb/ui/uihelper.py

commit 0347e99ca5c232832f2b490584d76872c6d77311
Author: Dongxiao Xu <dongxiao.xu@intel.com>
Date:   2012-03-15 14:56:45 +0800

    Hob: Change Box's padding value
    
    For Box type of widget, change the padding value to be HIG consistent,
    that is an increments of 6 pixels.
    
    Signed-off-by: Dongxiao Xu <dongxiao.xu@intel.com>

3	3	lib/bb/ui/crumbs/builddetailspage.py
7	7	lib/bb/ui/crumbs/hig.py
1	1	lib/bb/ui/crumbs/hobpages.py
1	1	lib/bb/ui/crumbs/imageconfigurationpage.py
1	1	lib/bb/ui/crumbs/imagedetailspage.py
1	1	lib/bb/ui/crumbs/packageselectionpage.py
1	1	lib/bb/ui/crumbs/recipeselectionpage.py

commit 5ad7c54f4b8739b9ae097c68978093a53f950ed7
Author: Dongxiao Xu <dongxiao.xu@intel.com>
Date:   2012-03-14 10:53:42 +0800

    Hob: improve recipe/package selection performance
    
    Originally we will send selection chagned notification in each
    include_item and exclude_item, which is time cost since these are
    recursive functions and we may select hundreds of recipes/packages.
    
    The improvement is to move the notification from include_item and
    exclude_item to the place where the two functions are called.
    This could greatly improve the selection/deselection speed for recipe
    and package lists.
    
    Signed-off-by: Dongxiao Xu <dongxiao.xu@intel.com>

3	7	lib/bb/ui/crumbs/hoblistmodel.py
1	0	lib/bb/ui/crumbs/packageselectionpage.py
1	0	lib/bb/ui/crumbs/recipeselectionpage.py

commit a1936ff544f21cde0765f24dc9b0af126ca98752
Author: Dongxiao Xu <dongxiao.xu@intel.com>
Date:   2012-03-13 17:10:26 +0800

    Hob: Add stop button for parsing progress
    
    Add a Stop button to allow user to quit the parsing process.
    
    Signed-off-by: Dongxiao Xu <dongxiao.xu@intel.com>

21	1	lib/bb/ui/crumbs/builder.py
3	0	lib/bb/ui/crumbs/hobeventhandler.py
13	1	lib/bb/ui/crumbs/imageconfigurationpage.py

commit f4b5a9f243fcfb48cf01fa6f8bce35897debbd20
Author: Dongxiao Xu <dongxiao.xu@intel.com>
Date:   2012-03-13 17:12:22 +0800

    Hob: Emit command-failed signal even if error msg is None
    
    Signed-off-by: Dongxiao Xu <dongxiao.xu@intel.com>

7	6	lib/bb/ui/crumbs/builder.py
2	3	lib/bb/ui/crumbs/hobeventhandler.py

commit 5290d99f4d0f36076c59ec0b59e3f69b04d69ebf
Author: Dongxiao Xu <dongxiao.xu@intel.com>
Date:   2012-03-13 15:06:25 +0800

    Hob: Show recipe/package editing button after base image is selected
    
    Only show recipe and package editing button after base image is selected.
    
    Signed-off-by: Dongxiao Xu <dongxiao.xu@intel.com>

7	2	lib/bb/ui/crumbs/builder.py
13	1	lib/bb/ui/crumbs/imageconfigurationpage.py

commit 0c766a8c69782b2dd35a363dc9573b78f9d41995
Author: Dongxiao Xu <dongxiao.xu@intel.com>
Date:   2012-03-14 09:06:47 +0800

    Hob: Remove the recipe/package populated signal
    
    Handle the recipe and package list update in
    handler_command_succeeded_cb(), which could avoid potential race
    condition when doing recipe/package list updating and page switching.
    
    Signed-off-by: Dongxiao Xu <dongxiao.xu@intel.com>

8	10	lib/bb/ui/crumbs/builder.py
0	14	lib/bb/ui/crumbs/hoblistmodel.py

commit ac36d218ed6793d6fbf3edfadaf193629ea1e46d
Author: Dongxiao Xu <dongxiao.xu@intel.com>
Date:   2012-03-13 14:32:30 +0800

    Hob: Remove the indication in machine/base image combobox
    
    Remove the "--select a machine--" prompt in machine selection.
    Also change "--select a base image--" to "Start from scratch" for
    base image selection.
    
    Signed-off-by: Dongxiao Xu <dongxiao.xu@intel.com>

1	1	lib/bb/ui/crumbs/hoblistmodel.py
7	13	lib/bb/ui/crumbs/imageconfigurationpage.py

commit f576355686804631fd797e2a5d383a70f6fc42cd
Author: Dongxiao Xu <dongxiao.xu@intel.com>
Date:   2012-03-13 14:16:02 +0800

    Hob: Remove the reset button in recipe/package selection page
    
    Signed-off-by: Dongxiao Xu <dongxiao.xu@intel.com>

0	6	lib/bb/ui/crumbs/builder.py
0	11	lib/bb/ui/crumbs/packageselectionpage.py
0	9	lib/bb/ui/crumbs/recipeselectionpage.py

commit a16b2245d7f5ef8509df0c543f9432c98367c79c
Author: Dongxiao Xu <dongxiao.xu@intel.com>
Date:   2012-03-13 13:47:29 +0800

    Hob: Fix the image installation dependency
    
    Get the image installation content from rdepends and rrecommends
    variables.
    
    Signed-off-by: Dongxiao Xu <dongxiao.xu@intel.com>

2	4	lib/bb/ui/crumbs/hoblistmodel.py

commit 5eab31ad9e9431e27725dcefa38cbd7f2e37d394
Author: Dongxiao Xu <dongxiao.xu@intel.com>
Date:   2012-03-13 13:45:58 +0800

    cooker: add package rdepends and rrecommends info
    
    When calculating the image installation dependency, we need the
    rdepends and rrecommends information of certain packages.
    
    Signed-off-by: Dongxiao Xu <dongxiao.xu@intel.com>

3	1	lib/bb/cooker.py

commit e3c5eed2244d7885418c59a62c9584f6397ee623
Author: Dongxiao Xu <dongxiao.xu@intel.com>
Date:   2012-02-29 16:36:25 +0800

    Hob: Disable the handling of "NoProvider" event
    
    Currently for non-x86 architecture, there are un-resolved dependency
    issue when generate universe dependency tree. Therefore disable the
    handling of "NoProvider" event in Hob to enable the build for non-x86
    architectures. After we resolved the dependency for universe, we still
    need to handle this event in Hob.
    
    Signed-off-by: Dongxiao Xu <dongxiao.xu@intel.com>

20	17	lib/bb/ui/crumbs/hobeventhandler.py

commit 5d33c355001bec91f4e4c3860db8d7ac2b449782
Author: Dongxiao Xu <dongxiao.xu@intel.com>
Date:   2012-02-29 12:39:22 +0800

    Hob: add "Close" button to "BinbDialog"
    
    For certain distributions, like FC16, it doesn't have close button in
    sub-windows or dialogs. Therefore we need to add an "Close" button to
    "BinbDialog" to close the dialog.
    
    Besides, let BinbDialog inherits the CrumbsDialog instead of gtk.Dialog
    
    Signed-off-by: Dongxiao Xu <dongxiao.xu@intel.com>

2	2	lib/bb/ui/crumbs/hig.py

commit 2d56dc7b1f0d186e14c4c8a949b280b6b3fc31de
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2012-03-11 14:30:31 +0000

    codeparser: Call intern over the set contents for better cache performance
    
    See the comment in the code in the commit for more information.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

21	0	lib/bb/codeparser.py

commit cdd5d0dee6ab12326b252b6b505a316a52638cac
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2012-03-11 14:18:02 +0000

    codeparser: Compute extra cache components on the fly rather than later
    
    In the initial implementation there was a relcutance on my part to
    generate incremental cache components on the fly since it would lead
    to some duplicate code.
    
    We are now seeing problems where each thread reading in the saved cache
    file causes significant overhead and can make the process appear to hang
    on a many core build, particularly when the cache file is large.
    
    This patch changes the code to maintain the delta in a separate dict
    right from the start. The code duplication isn't too bad and could be
    mitigated in other ways if it becomes an issue.
    
    [YOCTO #2039 partial]
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

20	21	lib/bb/codeparser.py

commit 7614c5bdcaf9d70614b4fad2ca02c7e6eaa92f1b
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2012-03-11 14:13:05 +0000

    cooker.py: Allow parsing shutdown to be called more than once
    
    The parsing shutdown call can occur more than once. Currently
    if this happens the code will hang. Add some code to prevent this.
    
    [YOCTO #2039 partial]
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

4	0	lib/bb/cooker.py

commit b36f2e3803dfc494d5b171759f55faf33708e6f1
Author: Robert Yang <liezhi.yang@windriver.com>
Date:   2012-03-06 14:04:36 +0800

    siggen.py: Use basehash if no taskhash
    
    The bitbake-runtask doesn't work since there is no taskhash (it worked
    in the past, but seems recent changes made it doesn't work again), use
    the basehash when there is no taskhash, just like what dump_sigtask
    does.
    
    [YOCTO #1229]
    
    Signed-off-by: Robert Yang <liezhi.yang@windriver.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

5	1	lib/bb/siggen.py

commit 56f9f8ffd92b00b916dbc2386150c83689d5beed
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2012-03-06 23:37:35 +0000

    bitbake/siggen: output filename on error in finalise
    
    If an error occurs during finalise() (when for example we might get an
    expansion error in SRCPV), log a note which mentions which recipe was
    being finalised.
    
    Fixes [YOCTO #1782]
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

5	1	lib/bb/siggen.py

commit 41f1b70206b709b5a896da57ad5bd95191450fcf
Author: Martin Jansa <martin.jansa@gmail.com>
Date:   2012-03-08 00:41:27 +0100

    setup.py: remove bb.fetch package, code was dropped in 292e3430e5140b602cad86f55b5453e8cebb28a1
    
    Signed-off-by: Martin Jansa <Martin.Jansa@gmail.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	setup.py

commit 37ed1589a19ffc82e8638b5375c99158988b38fc
Author: Joshua Lock <josh@linux.intel.com>
Date:   2012-03-02 15:48:02 -0800

    ui/crumbs/hig: special case stock info icons in CrumbsMesssageDialog
    
    The Hob visual design includes an info icon which should be used
    consistently throught the GUI. This change detects use of the stock info
    icon in CrumbsMessageDialog and uses the Hob info icon instead.
    
    Signed-off-by: Joshua Lock <josh@linux.intel.com>

5	1	lib/bb/ui/crumbs/hig.py

commit cead9a2e32f0196536c51d3a0713c1f28a35bf3d
Author: Joshua Lock <josh@linux.intel.com>
Date:   2012-03-02 15:46:40 -0800

    ui/crumbs/hig: use HobInfoButton in place of gtk.Image with tooltip
    
    Replace all instances of the stock info icon with an attached tooltip with
    the new HobInfoButton with associated PersistentTooltip.
    
    Signed-off-by: Joshua Lock <josh@linux.intel.com>

15	31	lib/bb/ui/crumbs/hig.py

commit 10b4a6770640db49f2f55b8ad7ce55aebb250598
Author: Joshua Lock <josh@linux.intel.com>
Date:   2012-03-02 15:43:37 -0800

    ui/crumbs/imageconfigurationpage: make use of the HobInfoButton
    
    Use the new HobInfoButton widget in place of the existing gtk.Image with
    tooltip.
    
    Modify the markup of the tooltip so that the link to the reference manual
    is a clickable hyperlink.
    
    Signed-off-by: Joshua Lock <josh@linux.intel.com>

4	8	lib/bb/ui/crumbs/imageconfigurationpage.py

commit 43f33dcd6b7d1a08651cdf0715c2c2a9d488b103
Author: Joshua Lock <josh@linux.intel.com>
Date:   2012-03-02 15:41:21 -0800

    ui/crumbs/hobwidget: implement HobInfoButton per Hob interaction design
    
    This button-like widget will display a persistent tooltip with the
    supplied Pango Markup when it is clicked by the user. This widget features
    prominently in the interaction design to offer help in a more prominent
    manner.
    
    Signed-off-by: Joshua Lock <josh@linux.intel.com>

49	0	lib/bb/ui/crumbs/hobwidget.py

commit de5fbbd343081147e6b7a118daee7f678d49d0fa
Author: Joshua Lock <josh@linux.intel.com>
Date:   2012-03-02 15:38:04 -0800

    ui/icons: crop the info icons
    
    The info icons include large, transparent borders. Crop this out so that
    we can use the icon without using too much space in the GUI.
    
    Signed-off-by: Joshua Lock <josh@linux.intel.com>

-	-	lib/bb/ui/icons/info/info_display.png
-	-	lib/bb/ui/icons/info/info_hover.png

commit b310fd429150d3a96ecde477934fffad4b4031da
Author: Joshua Lock <josh@linux.intel.com>
Date:   2012-03-02 15:36:45 -0800

    crumbs/persistenttooltip: a new Gtk+ widget for use in Hob
    
    The Hob interaction design calls for a top level widget which shows a
    persistent tooltip. This tooltip will not disappear until the user
    explicitly closes it.
    
    This allows us to provide clickable hyperlinks, longer instructions and
    deeper information in the tooltips.
    
    Note: by design the tooltip should dismiss when the user clicks off it,
    this implementation does include that functionality. It's a to do item.
    
    Signed-off-by: Joshua Lock <josh@linux.intel.com>

118	0	lib/bb/ui/crumbs/persistenttooltip.py

commit 292e3430e5140b602cad86f55b5453e8cebb28a1
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2012-03-03 11:25:19 +0000

    bitbake: Drop fetch v1, v2 provides a much better codebase to build from
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	3	lib/bb/__init__.py
0	832	lib/bb/fetch/__init__.py
0	148	lib/bb/fetch/bzr.py
0	172	lib/bb/fetch/cvs.py
0	339	lib/bb/fetch/git.py
0	180	lib/bb/fetch/hg.py
0	73	lib/bb/fetch/local.py
0	143	lib/bb/fetch/osc.py
0	206	lib/bb/fetch/perforce.py
0	98	lib/bb/fetch/repo.py
0	118	lib/bb/fetch/ssh.py
0	104	lib/bb/fetch/svk.py
0	204	lib/bb/fetch/svn.py
0	93	lib/bb/fetch/wget.py

commit ba871e0118d5ecd7379ad6495baa8416bbfbba44
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2012-03-03 11:07:51 +0000

    bitbake: Convert getVar/getVarFlag(xxx, 1) -> (xxx, True)
    
    Using "1" with getVar is bad coding style and "True" is preferred.
    
    This patch is a sed over bitbake directory of the form:
    
    sed \
     -e 's:\(\.getVar([^,()]*, \)1 *):\1True):g' \
     -e 's:\(\.getVarFlag([^,()]*, [^,()]*, \)1 *):\1True):g' \
     -i `grep -ril getVar *`
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	classes/base.bbclass
1	1	conf/bitbake.conf
2	2	lib/bb/build.py
9	9	lib/bb/cooker.py
1	1	lib/bb/data_smart.py
5	5	lib/bb/fetch/__init__.py
2	2	lib/bb/monitordisk.py
1	1	lib/bb/parse/parse_py/ConfHandler.py
2	2	lib/bb/providers.py
4	4	lib/bb/runqueue.py

commit 9c3fbc7b2964f001f2dd49b6efd98ba9a42528ad
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2012-03-03 11:06:04 +0000

    conf/classes: Catch up with bb.data -> direct object access conversion
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	3	classes/base.bbclass
5	5	conf/bitbake.conf
1	1	lib/bb/cooker.py

commit 4a480a052f450c4ee061ab0e60a495a45f140cf9
Author: Adrien Bustany <adrien.bustany@nokia.com>
Date:   2012-03-02 16:17:43 +0000

    stderr would previously be appended to stdout, corrupting the result
    when something was outputed to stderr but exit code was still 0
    (non-fatal warning messages). This commit makes the code parse only
    stdout, but output stderr if an error happened.
    
    Signed-off-by: Adrien Bustany <adrien.bustany@nokia.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

17	23	lib/bb/fetch2/__init__.py

commit 224bc74d4e901b7886b845fbb3b5fe7564a2f6cb
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2012-03-01 14:57:37 +0000

    bitbake/build: report TaskFailedSilent events as "Failed"
    
    The change for setscene events to fire a TaskFailedSilent event instead
    of TaskFailed resulted in "FailedSilent" being reported in the task
    finish note log entry, which is not really desirable, so change it back
    to reporting "Failed" again.
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

8	1	lib/bb/build.py

commit cc74cad0742ea0d4e09e843883cdc55bad39b22e
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2012-03-01 14:57:36 +0000

    bitbake/uihelper: restore line to record failed normal tasks
    
    Save failed real (non-setscene) tasks to uihelper's failed task list.
    as before commit e8a3499c95a6d4f2b8fed002fb9504733c5be3c6. Currently
    this list is only used by the ncurses UI.
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

6	1	lib/bb/ui/uihelper.py

commit 8b846a92a58b5c20d7cfd2efd32b763e95c3c2fd
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2012-03-01 14:57:35 +0000

    bitbake/runqueue: fix python error on scenequeue task failure
    
    Fixes a regression introduced in commit
    e8a3499c95a6d4f2b8fed002fb9504733c5be3c6 which resulted in a
    backtrace on setscene task failure due to trying to dereference
    the setscene task ID twice.
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	2	lib/bb/runqueue.py

commit 59f817723172092a87738c79f555e605f55ea375
Author: Dongxiao Xu <dongxiao.xu@intel.com>
Date:   2012-02-29 22:15:28 +0800

    runqueue.py: initialize rqexe at RunQueue's init function
    
    Sometimes user stops the build before runqueue is established,
    for example, at the stage of running add_unresolved() function. This
    will cause RunQueue to use rqexe field in finish_runqeue() before
    initialized. This will cause endless print of "Running idle function"
    if use process server.
    
    This commit initialize rqexe variable in RunQueue's init function,
    and add a judgement in finish_runqueue().
    
    Signed-off-by: Dongxiao Xu <dongxiao.xu@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

5	0	lib/bb/runqueue.py

commit 80291865fa15012a3734e8724eb73c62b4ddc62f
Author: Dongxiao Xu <dongxiao.xu@intel.com>
Date:   2012-02-29 22:15:27 +0800

    Hob: Fix pressing "stop" build
    
    This commit fixes the behavior of clicking stop build button, it will
    stay in the build detail screen and show build is failed.
    
    Signed-off-by: Dongxiao Xu <dongxiao.xu@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

13	5	lib/bb/ui/crumbs/builder.py

commit 1afa500cb1cb5c10fc0a3ea0f65c7ecc8887efa8
Author: Shane Wang <shane.wang@intel.com>
Date:   2012-02-29 22:15:26 +0800

    Hob(crumbs/builder.py): adjust the main window's position and ignore the case lower than 1024x768.
    
    * don't set the position of the main window to the center always
    * don't show the message to users if their screen dimensions are lower than 1024x768
    
    Signed-off-by: Shane Wang <shane.wang@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

0	8	lib/bb/ui/crumbs/builder.py

commit 01c18a24252b35959a4cc01088678f93cb2f95e5
Author: Shane Wang <shane.wang@intel.com>
Date:   2012-02-29 22:15:23 +0800

    Hob: fix a bug that the image size is shown incorrectly in the image details page.
    
    Originally, the image size shows the last item in the image tree view in the image details page.
    That is not correct. We need to show the size of the image which the user chooses.
    
    Signed-off-by: Shane Wang <shane.wang@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/ui/crumbs/hig.py
24	8	lib/bb/ui/crumbs/imagedetailspage.py

commit 44562593556e67d7976a124d5a420938aff95e0c
Author: Dongxiao Xu <dongxiao.xu@intel.com>
Date:   2012-02-29 22:15:21 +0800

    Hob(crumbs/hoblistmodel.py): Add mapping for rprovides and pkg
    
    When checking the package's RDEPENDS information, we will see some case like
    A RDEPENDS virtual-b, and B RPROVIDES virtual-b, we need to reflect this relationship
    in packaging selection.
    
    Signed-off-by: Dongxiao Xu <dongxiao.xu@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

12	3	lib/bb/ui/crumbs/hoblistmodel.py

commit da64e59f2e738d6103605139ba2d3e2cdaa35b11
Author: Dongxiao Xu <dongxiao.xu@intel.com>
Date:   2012-02-29 22:15:20 +0800

    Hob(crumbs/hoblistmodel.py): Fix recipe's populate() function
    
    According to the cooker's change, this commit fixes the way to getting
    recipe's build dependency.
    
    Signed-off-by: Dongxiao Xu <dongxiao.xu@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

5	37	lib/bb/ui/crumbs/hoblistmodel.py

commit d668eb1300b3b3115964e98127b1bef554caae17
Author: Dongxiao Xu <dongxiao.xu@intel.com>
Date:   2012-02-29 22:15:19 +0800

    cooker: fix calculating of depends and rdepends
    
    Remove part of the original logic that stores pkg dependency and pkg
    recomends, which will not be used in Hob.
    
    Add the judgement for preferred fn provider of a certain package,
    which maps package name to its providing recipe name.
    
    The above approaches correct the build dependency calculation,
    and they also reduced the total depend_tree size, which speed up the
    tree data generation time.
    
    Signed-off-by: Dongxiao Xu <dongxiao.xu@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

10	35	lib/bb/cooker.py

commit c6dc8d6310af22c95adb06c64339e7ec9eaeb315
Author: Dongxiao Xu <dongxiao.xu@intel.com>
Date:   2012-02-29 22:15:18 +0800

    cooker.py: Fix a bug due to variable name
    
    fnid is an outer variable and shouldn't be overrided, change the inner variable
    name from 'fnid' to 'id'.
    
    Signed-off-by: Dongxiao Xu <dongxiao.xu@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	2	lib/bb/cooker.py

commit dadce609149cfb09ecdc53bfe1f416a3f57a5033
Author: Dongxiao Xu <dongxiao.xu@intel.com>
Date:   2012-02-29 22:15:17 +0800

    command.py: remove the resolve parameter in generateTargetsTree
    
    Remove the "resolve" parameter since the original resolve=False
    option is no longer be used.
    
    Signed-off-by: Dongxiao Xu <dongxiao.xu@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	12	lib/bb/command.py
14	19	lib/bb/cooker.py
1	1	lib/bb/ui/crumbs/hobeventhandler.py

commit 7af747778121aa399f69aff58425ede523b2495c
Author: Shane Wang <shane.wang@intel.com>
Date:   2012-02-29 22:15:16 +0800

    Hob(crumbs/builder.py): remove the code commented out in the builder.py
    
    Signed-off-by: Shane Wang <shane.wang@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

0	1	lib/bb/ui/crumbs/builder.py

commit 53c5807c38e97d2e44a6f5c48449178b8b6e6261
Author: Shane Wang <shane.wang@intel.com>
Date:   2012-02-29 22:15:15 +0800

    crumbs/hig: tweak UI and layout of LayerSelectionDialog
    
    Several minor tweaks for appearance:
    * Try to rework the labels so that the English flows better
    * Fix spacing
    * Remove the separator - it's not needed
    
    Signed-off-by: Joshua Lock <josh@linux.intel.com>
    Signed-off-by: Shane Wang <shane.wang@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

5	14	lib/bb/ui/crumbs/hig.py

commit 2469784b38f21716c09df89323c78cd20d3a4c14
Author: Shane Wang <shane.wang@intel.com>
Date:   2012-02-29 22:15:14 +0800

    hig: try to avoid setting explicit dialogue sizes
    
    Gtk+ does a good job of creating dialogues which fit all of the packed
    widgets and respect the spacing. Let it do its job.
    
    Signed-off-by: Joshua Lock <josh@linux.intel.com>
    Signed-off-by: Shane Wang <shane.wang@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	5	lib/bb/ui/crumbs/hig.py

commit e90828680e3bc655db54ed2797cad4587e8796d0
Author: Shane Wang <shane.wang@intel.com>
Date:   2012-02-29 22:15:13 +0800

    crumbs: fix button order in several dialogues
    
    GNOME HIG and Gtk+ convention is for the buttons to be ordered
    <secondary action> <primary action> so that the primary action can be
    selected easily by navigating to the bottom right of the dialogue.
    
    We should try and match the convention and the HIG standard so that we
    aren't contrasting the rest of the users applications.
    
    Signed-off-by: Joshua Lock <josh@linux.intel.com>
    Signed-off-by: Shane Wang <shane.wang@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

19	20	lib/bb/ui/crumbs/builder.py
6	6	lib/bb/ui/crumbs/hig.py

commit bf938987a007c94fc4bbacb2b4741b7c18cb62ec
Author: Shane Wang <shane.wang@intel.com>
Date:   2012-02-29 22:15:12 +0800

    crumbs: move towards more standard dialogue spacing
    
    Inherit from the base CrumbsDialog class which implements standard border and spacing.
    
    Switch all explicitly set dialogue spacings to 6 to converge towards GNOME HIG.
    
    Signed-off-by: Joshua Lock <josh@linux.intel.com>
    Signed-off-by: Shane Wang <shane.wang@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

29	37	lib/bb/ui/crumbs/hig.py

commit 06adabbb36472625c1e47991e418346ef7438577
Author: Shane Wang <shane.wang@intel.com>
Date:   2012-02-29 22:15:11 +0800

    crumbs/builder: use the name Hob consistently
    
    We have mentions of HOB and Hob, the approved name is Hob.
    
    "the name's Hob, BitBake Hob"
       - Surly BitBake GUI
    
    Signed-off-by: Joshua Lock <josh@linux.intel.com>
    Signed-off-by: Shane Wang <shane.wang@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	2	lib/bb/ui/crumbs/builder.py

commit d8c62f54d9f2421cfe7f1083b9d0acfe0373d38a
Author: Shane Wang <shane.wang@intel.com>
Date:   2012-02-29 22:15:10 +0800

    crumbs: Factor common dialogue configuration out
    
    Factor out the base dialogue configuration into CrumbsDialog and create a new CrumbsMessageDialog which acts as the CrumbsDialog did to handle dialogues with buttons.
    
    Adopt CrumbsMessageDialog wherever CrumbsDialog was used.
    
    Signed-off-by: Joshua Lock <josh@linux.intel.com>
    Signed-off-by: Shane Wang <shane.wang@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

14	14	lib/bb/ui/crumbs/builder.py
17	4	lib/bb/ui/crumbs/hig.py

commit 504d480b208cacad7a5595312890f49fe19b80be
Author: Shane Wang <shane.wang@intel.com>
Date:   2012-02-29 22:15:09 +0800

    Hob: enable indicators on the "Included" tab in the recipe selection page and the package selection page
    
    Signed-off-by: Shane Wang <shane.wang@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	0	lib/bb/ui/crumbs/packageselectionpage.py
1	0	lib/bb/ui/crumbs/recipeselectionpage.py

commit ef472710589580b9bfc64d2c02fa42f3ecbdfeb1
Author: Shane Wang <shane.wang@intel.com>
Date:   2012-02-29 22:15:08 +0800

    Hob: make the image configuration page not to flash the progress bar
    
    Sometimes the image configuration page flashes the progress bar, that is because we show_all() and then hide() the progress bar. For this case, the patch doesn't add the progress bar onto the gtable. Then, it will not be flashed any more.
    
    Signed-off-by: Shane Wang <shane.wang@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

14	16	lib/bb/ui/crumbs/imageconfigurationpage.py

commit d5c7c9471b8e101ebcb91d707415b9c820b1419f
Author: Shane Wang <shane.wang@intel.com>
Date:   2012-02-29 22:15:06 +0800

    Hob: fix a bug in builder.configuration.curr_mach
    
    When the user changes the machine to be "--select a machine--", the builder.configuration.curr_mach should be set to empty.
    Otherwise, if the user adds more layers after the above, the action will trigger recipe parsing, which is not correct.
    
    Signed-off-by: Shane Wang <shane.wang@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	0	lib/bb/ui/crumbs/imageconfigurationpage.py

commit 804f35e6864aeae2bb02550d9eb34120bbb60fa0
Author: Shane Wang <shane.wang@intel.com>
Date:   2012-02-29 22:15:05 +0800

    Hob: image configuration page doesn't need dialogs any more
    
    The dialog references are all in builder.py. We remove the useless "import" in image configuration page.
    
    Signed-off-by: Shane Wang <shane.wang@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

0	3	lib/bb/ui/crumbs/imageconfigurationpage.py

commit d565507940be73fb5ea3ae7048d8d143c44c2a95
Author: Shane Wang <shane.wang@intel.com>
Date:   2012-02-29 22:15:02 +0800

    Hob: include hddimg and iso into image types.
    
    For image types, so far we don't include hddimg and iso. Then those files can not be deployed because they are filtered out in the image selection dialog.
    This patch is to include hddimg and iso (which are "live" in image types).
    
    Again, we have a TODO in the code for the future, that is to retrieve image types from the bitbake server instead of to use the walkaround.
    
    Signed-off-by: Shane Wang <shane.wang@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	2	lib/bb/ui/crumbs/builder.py
5	4	lib/bb/ui/crumbs/hig.py
4	5	lib/bb/ui/crumbs/hobeventhandler.py
27	0	lib/bb/ui/crumbs/hobwidget.py

commit f9cccea4d1c52ae2173fd94d5b07ceba7e5c0851
Author: Shane Wang <shane.wang@intel.com>
Date:   2012-02-24 07:57:13 +0000

    Hob: cleanup those class methods in HobWidget
    
    Some dialogs like advanced settings dialog, and layer selection dialog are using the class methods in HobWidget to create widgets for themselves, which is not a good design for OO.
    
    Clean up the code, and split the functions into the separate classes which use them actually.
    Finally, remove the class HobWidget.
    
    Signed-off-by: Shane Wang <shane.wang@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

459	27	lib/bb/ui/crumbs/hig.py
0	465	lib/bb/ui/crumbs/hobwidget.py
1	1	lib/bb/ui/crumbs/recipeselectionpage.py

commit ea56ae787153460166697bbcae92f51a77ca1571
Author: Shane Wang <shane.wang@intel.com>
Date:   2012-02-29 22:15:01 +0800

    Hob: fixed the issue in the brought-in-by dialog.
    
    When typing any thing in the search entry, the brough-in-by dialog will be shown. That is because we call back "selection-changed" signal to pop up the dialog, which is not correct.
    This patch is to fix the problem by using "row-activated" signal.
    
    Signed-off-by: Liming An <limingx.l.an@intel.com>
    Signed-off-by: Shane Wang <shane.wang@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	4	lib/bb/ui/crumbs/hig.py
17	13	lib/bb/ui/crumbs/hobwidget.py
3	9	lib/bb/ui/crumbs/packageselectionpage.py
3	10	lib/bb/ui/crumbs/recipeselectionpage.py

commit 536fa633b442ff37d43f45cf346ba281d69de496
Author: Shane Wang <shane.wang@intel.com>
Date:   2012-02-29 22:14:59 +0800

    Hob: avoid the image selection dialog to walk through all directories and its sub-directories, when users click "My images".
    
    The current implementation of the image selection dialog walks through all directories and its sub-directories, when users click "My images" to choose a directory. If the directory is /, the system becomes slow. This patch is to avoid walking through all directories but the child directories only, given a directory.
    
    Signed-off-by: Shane Wang <shane.wang@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

8	4	lib/bb/ui/crumbs/hig.py

commit 3c900211e8bc0311542873480d79b347d7449f59
Author: Shane Wang <shane.wang@intel.com>
Date:   2012-02-29 22:14:58 +0800

    Hob: make HobViewTable more general in hob and make the image selection dialog and the image details page reuse it.
    
    This patch is to make the class HobViewTable more general as a tree view in Hob.
    Now the recipe selection page and the package selection page are using it.
    And we have tree views in the image selection dialog and the image details page, which used the class methods in HobWidget to create the tree views. That is not good in OO.
    
    So, make them reuse HobViewTable to create its instances.
    
    Signed-off-by: Shane Wang <shane.wang@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

33	4	lib/bb/ui/crumbs/hig.py
55	113	lib/bb/ui/crumbs/hobwidget.py
53	12	lib/bb/ui/crumbs/imagedetailspage.py
17	11	lib/bb/ui/crumbs/packageselectionpage.py
18	12	lib/bb/ui/crumbs/recipeselectionpage.py

commit 6d1765c2eac8c1958ceb9c81d55d04a9bc961cb1
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2012-02-29 13:09:15 +0000

    parse/ConfHandler: Fix enthusiatic export regexp matching
    
    The export regexp was only meant to catch values like:
    
    export VARIABLENAME
    
    however after the stricter quoting patch was applied, it was also matching
    variables like:
    
    export BAR=foo
    
    and setting the export flag on a variable called "BAR=foo". The = character
    is an invalid variable name character. This patch tightens up the regexp
    match so it only matches the intended character set and only matches variable
    names.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/parse/parse_py/ConfHandler.py

commit 659411b6bb30e1a8355afc1c29b8170a8f2b55ac
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2012-02-28 13:37:41 +0000

    bitbake: implement BB_VERBOSE_LOGS
    
    Enable configuring whether "set +x" is added to all shell tasks rather
    than forcing it; this is enabled by setting BB_VERBOSE_LOGS to 1.
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	1	lib/bb/build.py
4	0	lib/bb/cooker.py
3	0	lib/bb/msg.py

commit a8ae80741fea5e0ec0fb9a52a963a4baa38d2564
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2012-02-26 12:58:05 +0000

    bitbake/ConfHandler: Be more strict about variable quoting
    
    Currently, bitbake will accept variables in the forms:
    
    X = 1
    X = '1 \
    
    X = "1"
    X = '1'
    
    which will all set X=1. This patch removes the first two possibilities
    and makes quoting mandatory. There is little metadata out there which
    doesn't quote properly and bitbake will exit with an error about the
    exact line number and file with any problem so users can easily identify
    and fix issues. OE-Core has already been checked/fixed.
    
    The motivation for this is being able to give sane errors if a user
    does something like:
    
    IMAGE_INSTALL += # tslib mtd-utils"
    
    which currently gives a really nasty failure.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	2	lib/bb/parse/parse_py/ConfHandler.py

commit e8a3499c95a6d4f2b8fed002fb9504733c5be3c6
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2012-02-27 18:54:11 +0000

    bitbake: fix setscene task start/failure handling
    
    * When a setscene task starts, print out that it's starting in the UI
      (ensuring we get the correct task name)
    * When a setscene task fails, ensure we remove it from the list of
      running tasks so that if you break out any time afterwards it
      is not still listed.
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

9	1	lib/bb/build.py
13	5	lib/bb/runqueue.py
9	0	lib/bb/ui/knotty.py
1	2	lib/bb/ui/uihelper.py

commit bf1d7739618dabf3872a868230c0112b9ad2a2c0
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2012-02-27 18:54:12 +0000

    bitbake/runqueue: make dry-run do everything except execute
    
    Make dry-run do everything except executing the task, instead of
    cutting it off earlier. This fully tests the code path for running the
    child task (parsing and fakeroot), as well as enabling future
    functionality such as using dry-run to produce signature files.
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	7	lib/bb/runqueue.py

commit af524a656fce32d01687481b86c31bef00eb9fc3
Author: Lianhao Lu <lianhao.lu@intel.com>
Date:   2012-02-28 11:22:40 +0800

    bitbake: Added BBINCLUDED variable.
    
    Added new variable BBINCLUDED indicating the file dependency
    information. It exposes the internal variable '__base_depends' and
    '__depends'.
    
    Signed-off-by: Lianhao Lu <lianhao.lu@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	0	lib/bb/cooker.py
9	0	lib/bb/parse/__init__.py
2	0	lib/bb/parse/ast.py

commit ae8cf138b5eb8f1f28a7143b8d67ad06cbe43061
Author: Dongxiao Xu <dongxiao.xu@intel.com>
Date:   2012-02-27 22:37:32 +0800

    data_smart.py: Uses BB_HASHCONFIG_WHITELIST to filter unnecessary variables
    
    Adopt the BB_HASHCONFIG_WHITELIST as a exclusion list for variables that are
    not needed in cache hash calculation.
    
    Signed-off-by: Dongxiao Xu <dongxiao.xu@intel.com>
    CC: Christopher Larson <kergoth@gmail.com>
    CC: Martin Jansa <martin.jansa@gmail.com>
    CC: Andreas Oberritter <obi@opendreambox.org>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

4	12	lib/bb/data_smart.py

commit 4d173d441d2beb8e6492b6b1842682f8cf32e6cc
Author: Robert Yang <liezhi.yang@windriver.com>
Date:   2012-02-26 16:48:15 +0800

    V5 Disk space monitoring
    
    Monitor disk availability and take action when the free disk space or
    amount of free inode is running low, it is enabled when BB_DISKMON_DIRS
    is set.
    
    * Variable meanings(from meta-yocto/conf/local.conf.sample):
    
      # Set the directories to monitor for disk usage, if more than one
      # directories are mounted in the same device, then only one directory
      # would be monitored since the monitor is based on the device.
      # The format is:
      # "action,directory,minimum_space,minimum_free_inode"
      #
      # The "action" must be set and should be one of:
      # ABORT: Immediately abort
      # STOPTASKS: The new tasks can't be executed any more, will stop the build
      #           when the running tasks have been done.
      # WARN: show warnings (see BB_DISKMON_WARNINTERVAL for more information)
      #
      # The "directory" must be set, any directory is OK.
      #
      # Either "minimum_space" or "minimum_free_inode" (or both of them)
      # should be set, otherwise the monitor would not be enabled,
      # the unit can be G, M, K or none, but do NOT use GB, MB or KB
      # (B is not needed).
      #BB_DISKMON_DIRS = "STOPTASKS,${TMPDIR},1G,100K WARN,${SSTATE_DIR},1G,100K"
      #
      # Set disk space and inode interval (only works when the action is "WARN",
      # the unit can be G, M, or K, but do NOT use the GB, MB or KB
      # (B is not needed), the format is:
      # "disk_space_interval, disk_inode_interval",  the default value is
      # "50M,5K" which means that it would warn when the free space is
      # lower than the minimum space(or inode), and would repeat the action
      # when the disk space reduces 50M (or the amount of inode reduces 5k)
      # again.
      #BB_DISKMON_WARNINTERVAL = "50M,5K"
    
    [YOCTO #1589]
    Signed-off-by: Robert Yang <liezhi.yang@windriver.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

237	0	lib/bb/monitordisk.py
7	0	lib/bb/runqueue.py

commit 9079ae0ab74f9232b7e9853b2013b051d4fcf623
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2012-02-25 16:02:29 +0000

    bitbake/runqueue: Ensure finish_now() sets the runqueue state consistently
    
    If we call finish_now(True), rq.state is not updated to match. This
    makes the behaviour of finish_now(False) and finish_now(True) consistent
    so both leave rq.state consistently.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

7	0	lib/bb/runqueue.py

commit d54dbe54cde8e0086bf1fb4926468e212660db53
Author: Joshua Lock <josh@linux.intel.com>
Date:   2012-02-24 21:52:58 -0800

    crumbs: add back progress implementation for depexp
    
    The commit which introduced the new hob UI also deleted this class
    which is used by depexp.
    
    Signed-off-by: Joshua Lock <josh@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

20	0	lib/bb/ui/crumbs/progress.py

commit c7486a09310fe63b1aa1b7b0bb9450f306b6093b
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2012-02-24 18:36:42 +0000

    bitbake/cooker: terminate when errors found in layer configuration
    
    If we find an error in the layer configuration (such as an unsatisfied
    item in LAYERDEPENDS) then exit by raising an exception at the end of
    handleCollections() (without producing a backtrace).
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

17	0	lib/bb/cooker.py

commit 3db41d9eae21b7338321f1f1a70ccce34eaf1f03
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2012-02-24 18:02:28 +0000

    Move new files to the correct location
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

0	0	{bitbake/lib => lib}/bb/ui/crumbs/builddetailspage.py
0	0	{bitbake/lib => lib}/bb/ui/crumbs/builder.py
0	0	{bitbake/lib => lib}/bb/ui/crumbs/hobcolor.py
0	0	{bitbake/lib => lib}/bb/ui/crumbs/hoblistmodel.py
0	0	{bitbake/lib => lib}/bb/ui/crumbs/hobpages.py
0	0	{bitbake/lib => lib}/bb/ui/crumbs/hobwidget.py
0	0	{bitbake/lib => lib}/bb/ui/crumbs/imageconfigurationpage.py
0	0	{bitbake/lib => lib}/bb/ui/crumbs/imagedetailspage.py
0	0	{bitbake/lib => lib}/bb/ui/crumbs/packageselectionpage.py
0	0	{bitbake/lib => lib}/bb/ui/crumbs/progressbar.py
0	0	{bitbake/lib => lib}/bb/ui/crumbs/recipeselectionpage.py
0	0	{bitbake/lib => lib}/bb/ui/crumbs/template.py
-	-	{bitbake/lib => lib}/bb/ui/icons/images/images_display.png
-	-	{bitbake/lib => lib}/bb/ui/icons/images/images_hover.png
-	-	{bitbake/lib => lib}/bb/ui/icons/indicators/alert.png
-	-	{bitbake/lib => lib}/bb/ui/icons/indicators/confirmation.png
-	-	{bitbake/lib => lib}/bb/ui/icons/indicators/denied.png
-	-	{bitbake/lib => lib}/bb/ui/icons/indicators/error.png
-	-	{bitbake/lib => lib}/bb/ui/icons/indicators/issues.png
-	-	{bitbake/lib => lib}/bb/ui/icons/indicators/refresh.png
-	-	{bitbake/lib => lib}/bb/ui/icons/indicators/tick.png
-	-	{bitbake/lib => lib}/bb/ui/icons/info/info_display.png
-	-	{bitbake/lib => lib}/bb/ui/icons/info/info_hover.png
-	-	{bitbake/lib => lib}/bb/ui/icons/layers/layers_display.png
-	-	{bitbake/lib => lib}/bb/ui/icons/layers/layers_hover.png
-	-	{bitbake/lib => lib}/bb/ui/icons/packages/packages_display.png
-	-	{bitbake/lib => lib}/bb/ui/icons/packages/packages_hover.png
-	-	{bitbake/lib => lib}/bb/ui/icons/recipe/recipe_display.png
-	-	{bitbake/lib => lib}/bb/ui/icons/recipe/recipe_hover.png
-	-	{bitbake/lib => lib}/bb/ui/icons/settings/settings_display.png
-	-	{bitbake/lib => lib}/bb/ui/icons/settings/settings_hover.png
-	-	{bitbake/lib => lib}/bb/ui/icons/templates/templates_display.png
-	-	{bitbake/lib => lib}/bb/ui/icons/templates/templates_hover.png

commit 4dacd29f9c957d20f4583330b51e5420f9c3338d
Author: Dongxiao Xu <dongxiao.xu@intel.com>
Date:   2011-11-28 14:32:40 +0800

    Hob: A new implemetation (v2)
    
    This commit implements a new design for hob
    Some of the new features:
     - Friendly new designed GUI. Quick response to user actions.
     - Two step builds support package generation and image generation.
     - Support running GUI seprarately from bitbake server.
     - Recipe/package selection and deselection.
     - Accurate customization for image contents and size.
     - Progress bars showing the parsing and build status.
     - Load/save user configurations from/into templates.
    
    Signed-off-by: Dongxiao Xu <dongxiao.xu@intel.com>
    Signed-off-by: Shane Wang <shane.wang@intel.com>
    Signed-off-by: Liming An <limingx.l.an@intel.com>
    Signed-off-by: Fengxia Hua <fengxia.hua@intel.com>
    Designed-by: Belen Barros Pena <belen.barros.pena@intel.com>

110	0	bitbake/lib/bb/ui/crumbs/builddetailspage.py
873	0	bitbake/lib/bb/ui/crumbs/builder.py
35	0	bitbake/lib/bb/ui/crumbs/hobcolor.py
765	0	bitbake/lib/bb/ui/crumbs/hoblistmodel.py
87	0	bitbake/lib/bb/ui/crumbs/hobpages.py
805	0	bitbake/lib/bb/ui/crumbs/hobwidget.py
358	0	bitbake/lib/bb/ui/crumbs/imageconfigurationpage.py
294	0	bitbake/lib/bb/ui/crumbs/imagedetailspage.py
226	0	bitbake/lib/bb/ui/crumbs/packageselectionpage.py
52	0	bitbake/lib/bb/ui/crumbs/progressbar.py
221	0	bitbake/lib/bb/ui/crumbs/recipeselectionpage.py
180	0	bitbake/lib/bb/ui/crumbs/template.py
-	-	bitbake/lib/bb/ui/icons/images/images_display.png
-	-	bitbake/lib/bb/ui/icons/images/images_hover.png
-	-	bitbake/lib/bb/ui/icons/indicators/alert.png
-	-	bitbake/lib/bb/ui/icons/indicators/confirmation.png
-	-	bitbake/lib/bb/ui/icons/indicators/denied.png
-	-	bitbake/lib/bb/ui/icons/indicators/error.png
-	-	bitbake/lib/bb/ui/icons/indicators/issues.png
-	-	bitbake/lib/bb/ui/icons/indicators/refresh.png
-	-	bitbake/lib/bb/ui/icons/indicators/tick.png
-	-	bitbake/lib/bb/ui/icons/info/info_display.png
-	-	bitbake/lib/bb/ui/icons/info/info_hover.png
-	-	bitbake/lib/bb/ui/icons/layers/layers_display.png
-	-	bitbake/lib/bb/ui/icons/layers/layers_hover.png
-	-	bitbake/lib/bb/ui/icons/packages/packages_display.png
-	-	bitbake/lib/bb/ui/icons/packages/packages_hover.png
-	-	bitbake/lib/bb/ui/icons/recipe/recipe_display.png
-	-	bitbake/lib/bb/ui/icons/recipe/recipe_hover.png
-	-	bitbake/lib/bb/ui/icons/settings/settings_display.png
-	-	bitbake/lib/bb/ui/icons/settings/settings_hover.png
-	-	bitbake/lib/bb/ui/icons/templates/templates_display.png
-	-	bitbake/lib/bb/ui/icons/templates/templates_hover.png
0	346	lib/bb/ui/crumbs/configurator.py
586	3	lib/bb/ui/crumbs/hig.py
351	235	lib/bb/ui/crumbs/hobeventhandler.py
0	335	lib/bb/ui/crumbs/hobprefs.py
0	153	lib/bb/ui/crumbs/layereditor.py
0	20	lib/bb/ui/crumbs/progress.py
32	23	lib/bb/ui/crumbs/runningbuild.py
0	620	lib/bb/ui/crumbs/tasklistmodel.py
48	1067	lib/bb/ui/hob.py
42	0	lib/bb/ui/uihelper.py

commit 82482aae6f311c994275fb0b6b32d954bbfc78c3
Author: Bruce Ashfield <bruce.ashfield@windriver.com>
Date:   2012-02-23 16:08:42 -0500

    fetch2/git: create bareclone option
    
    For similar reasons as the nocheckout option, packages that need
    enhanced control over the checkout and branch creation on a repository
    may want a complete mirror/bareclone created of the repository when
    performing the unpack.
    
    This is useful/required when a local respository is being used, but
    local tracking branches have not been created for all branches that
    a given recipe needs to manipulate. The standard git clone operations
    will create remote branches for the branches that are local to the
    source repository, but branches that are remote do not translate to
    the destination repository. Doing a mirror/bare clone of the source,
    makes all branches available to the repository.
    
    This is a particular use case, but the ability to do a bare clone
    creates great flexibility in recipe space, with no impact to recipes
    that don't need this functionality.
    
    To implement this, a new option 'bareclone' is craeted which creates
    a mirror copy of the repository and leaves it bare in the unpacking
    phase. A recipe that uses this option must both checkout and debare
    the repository itself.
    
    Signed-off-by: Bruce Ashfield <bruce.ashfield@windriver.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

16	1	lib/bb/fetch2/git.py

commit 7c07cc93d6558d7d9c3144b13493901b7ebae050
Author: Dongxiao Xu <dongxiao.xu@intel.com>
Date:   2012-02-24 09:31:30 +0800

    runqueue: fire sceneQueueTaskStarted event when a setscene queue starts
    
    The current code prints a log when a setscene task starts, therefore
    the progressbar in hob will not receive it. Use a sceneQueueTaskStarted
    event instead.
    
    Besides, change the sceneQueueTaskFailed event to inherit runQueueEvent
    directly to avoid confusion to event receiver.
    
    Signed-off-by: Shane Wang <shane.wang@intel.com>
    Signed-off-by: Dongxiao Xu <dongxiao.xu@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

14	2	lib/bb/runqueue.py

commit 9ede881620c501574f014e600cea6947ea908ac2
Author: Shane Wang <shane.wang@intel.com>
Date:   2012-02-23 21:47:16 +0800

    bitbake: change for adding progress bar in Hob2.
    
    The changes include:
    - Clean some events in event.py
    - Fire essential events for Hob2 to handle with more information.
    - knotty changes
    
    Signed-off-by: Shane Wang <shane.wang@intel.com>
    Signed-off-by: Dongxiao Xu <dongxiao.xu@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/cache.py
8	4	lib/bb/cooker.py
60	23	lib/bb/event.py
4	1	lib/bb/ui/knotty.py

commit 28501612efdfc6ee47576cc90deb6e897883e7f5
Author: Dongxiao Xu <dongxiao.xu@intel.com>
Date:   2012-02-23 21:47:14 +0800

    command.py: add resolve option for generateTargetsTree API
    
    Currently we have generateTargetsTree API, which is used to get
    dependency information. However in that tree, there will be
    "virtual/xxx" in depends fields. Therefore we add the resolve option
    to replace it with its real providers.
    
    Besides, for packages that provided by multiple recipes, we will find
    their preverred provider.
    
    Signed-off-by: Dongxiao Xu <dongxiao.xu@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

9	2	lib/bb/command.py
47	11	lib/bb/cooker.py

commit 45da6d709a69697158fae92e1c0c0a6ac8f30831
Author: Dongxiao Xu <dongxiao.xu@intel.com>
Date:   2012-02-23 21:47:20 +0800

    command.py: Add a new API triggerEvent()
    
    This functions enables the client to request triggering specific event
    from bitbake server.
    
    Signed-off-by: Dongxiao Xu <dongxiao.xu@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

6	0	lib/bb/command.py

commit 335047b2e440e65713e88fabb24b47a9c82f939b
Author: Shane Wang <shane.wang@intel.com>
Date:   2012-02-23 21:47:19 +0800

    command.py: add new API to get the cpu count on the server
    
    Add a new API in command.py to get the cpu count in order to set the appropriate default BB_NUMBER_THREADS and PARALLEL_MAKE variables.
    
    Signed-off-by: Shane Wang <shane.wang@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

6	0	lib/bb/command.py
4	0	lib/bb/utils.py

commit c8e19c5c389efc06696084c6f9439ba75472c5b7
Author: Dongxiao Xu <dongxiao.xu@intel.com>
Date:   2012-02-23 21:47:18 +0800

    bitbake: Add client socket info for BitBakeServerConnection
    
    In server/client split model, the client will bind to a specific address
    and port. We need to pass the values to BitBakeServerConnection().
    
    Signed-off-by: Dongxiao Xu <dongxiao.xu@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	2	lib/bb/server/xmlrpc.py
4	3	lib/bb/ui/uievent.py

commit 95b97d2dc6466ea3d99371f5b5bd68f6f3c99074
Author: Dongxiao Xu <dongxiao.xu@intel.com>
Date:   2012-02-23 21:47:17 +0800

    bitbake: add -B option to bind with interface
    
    When start bitbake as a server only process, we need to assign certain
    interface to it.
    
    Signed-off-by: Dongxiao Xu <dongxiao.xu@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

14	3	bin/bitbake
3	3	lib/bb/server/xmlrpc.py

commit 9020c2d4476766f63ff7e024bbd99043d06feefc
Author: Dongxiao Xu <dongxiao.xu@intel.com>
Date:   2012-02-23 21:47:15 +0800

    event.py: Add new events RequestPackageInfo and PackageInfo
    
    RequestPackageInfo is triggered by GUI client to request the available
    package information.
    
    PackageInfo event is to pass package information back to GUI.
    
    Signed-off-by: Dongxiao Xu <dongxiao.xu@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

13	0	lib/bb/event.py

commit 1c1df03a6c4717bfd5faab144c4f8bbfcbae0b57
Author: Dongxiao Xu <dongxiao.xu@intel.com>
Date:   2012-02-23 21:47:13 +0800

    cache: Use configuration's hash value to validate cache
    
    Previously we use the file time stamp to judge if a cache is valid.
    Here this commit introduce a new method, which calculates the total
    hash value for a certain configuration's key/value paris, and tag
    it into cache filename, for example, bb_cache.dat.xxxyyyzzz.
    
    This mechanism also ensures the cache's correctness if user
    dynamically setting variables from some frontend GUI, like HOB.
    
    Signed-off-by: Dongxiao Xu <dongxiao.xu@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

12	20	lib/bb/cache.py
3	1	lib/bb/cooker.py
21	0	lib/bb/data_smart.py

commit f588ba69622a2df35417ced184e56c79ac1b40d5
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2012-02-23 17:38:08 +0000

    bitbake: add file and line number to ParseError
    
    Ensure that a file and line number are reported for ParseError where
    possible. This helps particularly in the case of inherit and require
    which previously did not report either of these upon failure.
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/cooker.py
13	2	lib/bb/parse/__init__.py
4	4	lib/bb/parse/ast.py
2	4	lib/bb/parse/parse_py/BBHandler.py
6	5	lib/bb/parse/parse_py/ConfHandler.py

commit 356c42ed00541dea2c382c57f768a4f431d22db0
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2012-02-23 17:38:07 +0000

    bitbake: fix parse errors not being reported
    
    Fixes a regression introduced in BitBake rev
    c9f58ef6b897d3fa5b0d23734b5f2cb3dabb057a which prevents errors during
    parsing from being fully reported because BitBake shuts down before it
    can print them. Move the error printing to before the shutdown in order
    to fix it.
    
    Also remove a couple of superfluous calls to sys.exit() since these
    will never be called (as self.shutdown(clean=False) does this itself).
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

4	6	lib/bb/cooker.py

commit 4ebc25155d5f96a7f63de22b52b18d045eb4dec7
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2012-02-22 22:50:02 +0000

    siggen.py: Pass the datacache to signature generator classes
    
    The dataCache exposes much useful information to the singature generation code
    for example its possible to figure out whether kernel dependencies are
    important or not based on the RRECOMMENDS values.
    
    We therefore pass this information to the handler and trust it to handle
    any API changes in the dataCache structure.
    
    For backwards compatibility, OE-Core is already updated to handle
    the extra argument when it appears.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	2	lib/bb/siggen.py

commit 95a599067650902727ecb4a39d6dd003c5cfedf3
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2012-02-22 21:24:41 +0000

    bitbake/ui/knotty: fix incorrect exit code
    
    The recent Ctrl+C patch was not fully tested; the variable it was
    relying upon is set to non-zero under other circumstances and thus
    bitbake was reporting that it was interrupted and returning a non-zero
    exit code when it was not. Track this status in a separate variable
    in order to fix the issue.
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	1	lib/bb/ui/knotty.py

commit ca52bf32b479811bd7fed41648bedcc06b00430b
Author: Martin Jansa <martin.jansa@gmail.com>
Date:   2012-02-22 16:01:59 +0100

    siggen: compare runtaskdeps dictionary even when they have the same size
    
    * otherwise it reports lots of changed checksums just because it compares different tasks
    
      notice linux-libc-headers_3.1.bb.do_package_write:
      Task dependency hash changed from 42acced29debf54d598802474c5e9cbb to f438a54f995df77620d0727d6f4b4ce5 (for linux-libc-headers_3.1.bb.do_package_write and linux-gta04_git.bb.do_deploy)
      Task dependency hash changed from 61f8babe1d10c6e7fb1423112bb04e1e to 1b3e21ff106ecfcb7ddf76a1e29537bb (for linux-nokia900-meego_git.bb.do_deploy and linux-gta04_git.bb.do_package_write)
      Task dependency hash changed from 512f9d6686d760b318d8b11c8b589226 to 42acced29debf54d598802474c5e9cbb (for linux-nokia900-meego_git.bb.do_package_write and linux-libc-headers_3.1.bb.do_package_write)
      Task dependency hash changed from 153e91dfd1d2053fda7b98cc08d4b802 to 92a293bdd8ed234932b87a66025038c5 (for systemd-serialgetty.bb.do_package_write and systemd-serialgetty.bb.do_package_write)
      Task dependency hash changed from 730abebf9954794bb440c2f3239f79fe to 413eaebaff27a2fd16f5cf68c1f4ff17 (for systemd_git.bb.do_package_write and systemd_git.bb.do_package_write)
    
      with this patch:
      Dependency on task linux-nokia900-meego_git.bb.do_package_write was added
      Dependency on task linux-nokia900-meego_git.bb.do_deploy was added
      Dependency on task linux-gta04_git.bb.do_deploy was removed
      Dependency on task linux-gta04_git.bb.do_package_write was removed
      Hash for dependent task systemd_git.bb.do_package_write changed from 730abebf9954794bb440c2f3239f79fe to 413eaebaff27a2fd16f5cf68c1f4ff17
      Hash for dependent task systemd-serialgetty.bb.do_package_write changed from 153e91dfd1d2053fda7b98cc08d4b802 to 92a293bdd8ed234932b87a66025038c5
    
    * added test if there is different task with same hash then we don't
      show it as added/removed dependency, because bitbake doesn't care
    
    Signed-off-by: Martin Jansa <Martin.Jansa@gmail.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

26	21	lib/bb/siggen.py

commit aeb71c3ca65dc42015c29c0e4cac050bfbcb51a5
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2012-02-13 11:41:33 +0000

    bitbake/knotty: ensure CommandFailed increases error count
    
    CommandFailed already sets the return code, so we print out the error
    summary message, however we don't increase the error count so it is
    usually zero in this case. As we are actually showing an ERROR message,
    increment the error count so that the summary makes sense.
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	0	lib/bb/ui/knotty.py

commit c11eab7fa230f1fd5cc33589f3555b94e95f202d
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2012-02-13 11:41:32 +0000

    bitbake/knotty: ensure we return non-zero exit code on Ctrl+C
    
    If the user uses Ctrl+C to exit out of the build, then ensure we return
    a non-zero exit code since the entire build was not completed
    successfully.
    
    If nothing else, this is useful to avoid continuing in the bitbake
    wrapper script in OE-Core if the initial pseudo build is interrupted.
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

5	0	lib/bb/ui/knotty.py

commit 293c796e8a3d1f74ca1e51017b6dede261612281
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2012-02-13 11:41:31 +0000

    bitbake: show appropriate warnings for universe target
    
    When building the universe target:
    * Show a warning about universe likely producing errors
    * Multiprovider errors are now shown as warnings
    
    Also remove an unused "error" variable in runqueue.py.
    
    Fixes [YOCTO #1936]
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

4	0	lib/bb/cooker.py
7	3	lib/bb/runqueue.py

commit 8e0744d6d4ab306809618adf63463a04d6664e48
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2012-02-10 16:53:45 +0000

    siggen.py: Handle cases where the input to symmetric_difference() may be None
    
    [YOCTO #1967]
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

6	3	lib/bb/siggen.py

commit adc041fd9e3def29cdf9c1ae4849c5383bac46e5
Author: Caleb Crome <caleb@signalessence.com>
Date:   2012-02-17 12:21:59 -0800

    Fix parser hang at 0% with single-core machines
    
    The number of threads is self.num_processes - 1 due to the range(1,
    self.num_processes). Fixed by changing to range(0, self.num_processes).
    
    Signed-off-by: Caleb Crome <caleb@signalessence.com>
    Signed-off-by: Christopher Larson <kergoth@gmail.com>

1	1	lib/bb/cooker.py

commit e870fd57bb84a17a871a5b5de3bf5202fe9b135f
Author: Christopher Larson <kergoth@gmail.com>
Date:   2012-02-16 16:46:20 -0700

    persist_data: survive if sqlite3 couldn't enable the shared cache
    
    Signed-off-by: Christopher Larson <kergoth@gmail.com>

4	1	lib/bb/persist_data.py

commit 6bf6213ca43438220239085f7441c85d3f60e308
Merge: db689a99 ce9e0946
Author: Christopher Larson <kergoth@gmail.com>
Date:   2012-02-13 11:44:52 -0700

    Merge remote-tracking branch 'kergoth/hang-issue-fix'
    
    * kergoth/hang-issue-fix:
      knotty: shut down more cleanly
      cooker: roll our own process pool

commit ce9e0946b8a412616074809c76fba54f8bff36c4
Author: Christopher Larson <chris_larson@mentor.com>
Date:   2012-02-07 12:07:40 -0600

    knotty: shut down more cleanly
    
    This ensures that when we are shutting down, we drain the queue of events from
    the server. This ensures that the server never gets hung up on the join of the
    feeder thread associated with the event queue, thereby avoiding a bitbake hang
    issue.
    
    Also, since the third keyboard interrupt now behaves the same as the second,
    removed that message.
    
    Signed-off-by: Christopher Larson <chris_larson@mentor.com>

7	8	lib/bb/ui/knotty.py

commit 7c39cfd8e060cca8753ac4114775447b18e13067
Author: Christopher Larson <chris_larson@mentor.com>
Date:   2012-01-09 12:31:32 -0600

    cooker: roll our own process pool
    
    This fixes the hang issue encountered with parse errors. The underlying issue
    seems to have been the pool.terminate(). This sends SIGTERM to each of the
    multiprocessing pool's processes, however, a python process terminating in
    this fashion can corrupt any queues it's interacting with, causing a number of
    problems for us (e.g. the queue that sends events to the UI).
    
    So instead of using multiprocessing's pool, we roll our own, with the ability
    to cancel the work. In the very long term, the python concurrent.futures
    module introduced in python 3.2 could be used to resolve this as well.
    
    Signed-off-by: Christopher Larson <chris_larson@mentor.com>

132	29	lib/bb/cooker.py

commit db689a99beffea1a285cdfc74a58fe73f1666987
Author: Christopher Larson <kergoth@gmail.com>
Date:   2012-02-03 08:12:55 -0700

    Revert the switch to futures for now
    
    Without it, we get random hangs on parse failure. With it, some folks have
    seen hangs even on successful cases. The former is clearly less problematic.
    This is temporary, until I can finish investigating the root causes of both
    issues.
    
    Signed-off-by: Christopher Larson <kergoth@gmail.com>

11	18	lib/bb/cooker.py
0	3	lib/concurrent/__init__.py
0	18	lib/concurrent/futures/__init__.py
0	575	lib/concurrent/futures/_base.py
0	101	lib/concurrent/futures/_compat.py
0	345	lib/concurrent/futures/process.py
0	144	lib/concurrent/futures/thread.py
2	3	setup.py

commit 74994e1f45c776a02e7e228e1204ab54d677da0a
Author: Shane Wang <shane.wang@intel.com>
Date:   2012-02-02 14:05:27 +0800

    bitbake: Add description into the cache and clean up cache duplication
    
    With the addition of new cache domains, the summary, license and section
    information is no longer requred in the core cache since its only used by
    the hob UI. This patch removes the duplicated entries.
    
    It also adds the DESCRIPTION field to the cache for the benefit of hob2.
    
    Signed-off-by: Shane Wang <shane.wang@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

0	9	lib/bb/cache.py
3	0	lib/bb/cache_extra.py
2	0	lib/bb/cooker.py

commit 9d06f6cd534fe1814a3f027709b5d2b6c5f68ff2
Author: Bernhard Reutner-Fischer <rep.dot.nop@gmail.com>
Date:   2012-02-02 09:01:47 +0100

    setup.py: Install concurrent too
    
    I was getting:
    Traceback (most recent call last):
      File "/scratch/src/oe/bitbake/build/scripts-2.7/bitbake", line 39, in <module>
        from bb import cooker
      File "/scratch/src/oe/bitbake/build/lib/bb/cooker.py", line 35, in <module>
        from concurrent import futures
    ImportError: No module named concurrent
    Command exited with non-zero status 1
    
    Signed-off-by: Bernhard Reutner-Fischer <rep.dot.nop@gmail.com>

2	1	setup.py

commit 20f24de0bdafac21f5d8a58701f977efa7041288
Author: Lianhao Lu <lianhao.lu@intel.com>
Date:   2012-01-31 14:18:04 +0800

    prserv: Do not ping PRService if not required
    
    [YOCTO #1942]
    Ping the PRService only if PRSERV_HOST and PRSERV_PORT are set.
    
    Signed-off-by: Lianhao Lu <lianhao.lu@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/prserv/serv.py

commit f6493e4bad005a82580380d800ebf4c438292f5b
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2012-01-30 16:25:54 +0000

    bitbake-layers: list overlayed classes in show-overlayed
    
    Classes (.bbclass files) can be overlayed in a layer although they are
    currently located by BitBake in a different way (via BBPATH instead of
    using layer priority) and thus it is useful to be able to see when this
    is in effect and which layer's class is actually being used.
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

47	0	bin/bitbake-layers

commit 05e86ba966f5a26721891c82b21afa48768a67cc
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2012-01-30 16:25:53 +0000

    bitbake-layers: add show-recipes subcommand
    
    Add a show-recipes subcommand which lists all available recipes, with
    the layer they are provided by. You can optionally filter the output by
    recipe name (PN).
    
    (This is a generalised version of the show-overlayed subcommand.)
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

52	5	bin/bitbake-layers

commit 43b473275d3cb2e60a14e4a52cdc4654b3f4e5e7
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2012-01-30 16:25:52 +0000

    bitbake-layers: improve show-overlayed output
    
    Make the following improvements to the show-overlayed subcommand:
    
    * Show recipes that are overlayed when the version is higher or lower,
      not just when it is the same. This gives a much better picture of the
      influence each layer is having over the metadata used for building.
      This can be disabled with the -s option if you just want to see
      recipes with the same version as before.
    * Default to showing name (PN), layer and version rather than the full
      path and filename. The old style formatting can be used by specifying
      the -f option.
    * Mark skipped recipes as such in the output, and print them in the
      correct sorted place in the list rather than at the end
    * Prefix/suffix title line with === so it can be filtered out easily in
      shell scripts if desired
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

105	11	bin/bitbake-layers
1	13	lib/bb/cooker.py
36	0	lib/bb/providers.py

commit 35d2c1c618826e961dbf4b9889b829f469346d74
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2012-01-30 16:25:51 +0000

    bitbake-layers: use directory name as layer name
    
    It turns out that using the collection name as specified within
    layer.conf (i.e. what gets added to BBFILE_COLLECTIONS) as a name to
    refer to the layer is not particularly useful, since layer creators
    aren't necessarily setting these to a meaningful value - e.g. OE-Core
    uses "normal", meta-oe uses "openembedded-layer", etc. In any case,
    BitBake uses the directory name in its list of configured layers in the
    system information presented upon starting a build, so let's just do the
    same here and avoid confusion.
    
    Also rename the get_append_layer function to get_file_layer since it is
    in no way specific to bbappends.
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

20	19	bin/bitbake-layers

commit 6d311ddc1be04ae5bd0a1ebee94b44968e8a3f27
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2012-01-30 16:25:50 +0000

    bitbake-layers: use dashes in subcommands
    
    Rather than the slightly awkward underscores, use dashes in subcommands
    e.g. show-layers instead of show_layers. (The old underscored forms
    continue to be accepted however.)
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

7	5	bin/bitbake-layers

commit 69ed02b645bdc28c1bf24e436beeed37d226b56b
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2012-01-30 16:25:49 +0000

    bitbake-layers: add copyright notice
    
    This ought to have been added earlier. (I consulted with Chris Larson on
    the notice covering his work.)
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	0	bin/bitbake-layers

commit d978e7b35550e3785c7c567ffe4c40a3c3947450
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2012-01-31 14:09:24 +0000

    fetch2/git: Add workaround for clone using alternates problem
    
    To quote my report of this to the git mailing list:
    """
    
    I have a problem with git clone commands using alternates failing by
    mixing up different repositories. I have a situation where I could end
    up with both:
    
    /srv/mirrors/repo
    /srv/mirrors/repo.git
    
    as bare clones.
    
    I then try cloning "repo" with alternates with the command:
    
    $ git clone -s -n /srv/mirrors/repo /tmp/foo
    Cloning into /tmp/foo...
    done.
    
    $ cat /tmp/foo/.git/objects/info/alternates
    /srv/mirrors/repo.git/objects
    
    Note how I'm now referencing repo.git, not repo. This doesn't work as
    expected giving some very bizarre results when actually using the
    repository.
    
    I appreciate this is a rather bizarre corner case but its one that is
    breaking the build system I work with. Ideally people would use a
    consistent URL for the same repository but we have an example where they
    haven't and this really shouldn't break like this.
    
    Looking at the code, the cause seems to be
    
    clone.c:get_repo_path():
            static char *suffix[] = { "/.git", ".git", "" };
    
    since its looking in order for:
     repo/.git (fails)
     repo.git (suceeds, incorrect)
     repo (never looked at)
    
    I'm not sure what would break if that order were to change, swapping the
    last two options.
    
    I can "force" the issue by running:
    
    git clone -s -n /srv/mirrors/repo/ /tmp/foo
    
    but this results in the slightly odd looking:
    
    $ cat /tmp/foo/.git/objects/info/alternates
    
    /srv/mirrors/repo//objects
    
    which does at least work.
    """
    
    This patch adds the trailing slash to ensure the correct repository is
    referenced at the expense of some ugliness in the alternates file.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/fetch2/git.py

commit c9f58ef6b897d3fa5b0d23734b5f2cb3dabb057a
Author: Christopher Larson <chris_larson@mentor.com>
Date:   2012-01-31 11:47:07 -0600

    cooker: add missing shutdowns to the exception handling
    
    Signed-off-by: Christopher Larson <chris_larson@mentor.com>

2	0	lib/bb/cooker.py

commit e1b157d26374a70e6274edcb4c0b9f3bc48f765c
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2012-01-26 20:09:08 +0000

    runqueue.py: Add inter setscene task dependency handling
    
    This is being added to resolve setscene race issues where we do have
    particular dependencies required between setscene tasks. This allows
    specific dependencies to be specified. This allows us to fix the races
    in sstate with the useradd class in OE-Core.
    
    Any tasks being depended upon have their reverse dependencies cleared to
    ensure we don't have circular references.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

22	0	lib/bb/runqueue.py

commit b9b5b5129d066e1ff7d3effda116afc3c6657beb
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2012-01-26 12:53:21 +0000

    runqueue.py: Fix missing setscene dependencies
    
    When constructing the setscene inter-dependencies, we need to account for all task,
    not just the last one found. This patch corrects this oversight and ensures all
    dependencies are added, not just the first one found.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

5	3	lib/bb/runqueue.py

commit 175c5c8a5e51365aa127562e8598e84f5cd36495
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2012-01-26 12:52:04 +0000

    data/runqueue.py: Fix commented out test code after variable name changes
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/data.py
1	1	lib/bb/runqueue.py

commit 65c2eb1c095fe7ba3259060aefd4ba0e20cae319
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2012-01-20 18:26:36 +0000

    Bump the version to 1.15.1
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	bin/bitbake
1	1	lib/bb/__init__.py

commit 9a57ec705cf5c932d8c2a35852db7a4627c57937
Author: Martin Jansa <martin.jansa@gmail.com>
Date:   2012-01-15 22:03:53 +0100

    prserv: fix import of sqlite3
    
    * this is used in all other bitbake parts where sqlite3 is used, don't
      know why it wasn't used here, but it fails e.g. on Gentoo
      Traceback (most recent call last):
        File "bin/bitbake", line 39, in <module>
          from bb import cooker
        File "lib/bb/cooker.py", line 39, in <module>
          import prserv.serv
        File "lib/prserv/serv.py", line 4, in <module>
          import xmlrpclib,sqlite3
      ImportError: No module named sqlite3
    
    Signed-off-by: Martin Jansa <Martin.Jansa@gmail.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

6	1	lib/prserv/serv.py

commit b4a40c2139e0a8c089ef9aba0796b40470b38e6c
Author: Martin Jansa <martin.jansa@gmail.com>
Date:   2012-01-15 22:03:52 +0100

    setup.py: install prserv too
    
    * otherwise cooker fails:
      Traceback (most recent call last):
        File /usr/bin/bitbake, line 39, in <module>
          from bb import cooker
        File /usr/lib64/python2.7/site-packages/bb/cooker.py, line 39, in <module>
          import prserv.serv
      ImportError: No module named prserv.serv
    
    Signed-off-by: Martin Jansa <Martin.Jansa@gmail.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	2	setup.py

commit 164195c068a656733cfe7aa07369c5ed6ea62ca5
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2012-01-20 16:16:08 +0000

    siggen.py: Abstract the runtime task dependency handling code in the generators
    
    This means that custom signature handlers can override specific parts
    of the code without having to reimplement whole functions allowing them
    more flexibility.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

18	7	lib/bb/siggen.py

commit 69fd5ad4a8402fab5eb8348260966b337c5648ff
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2012-01-20 16:15:18 +0000

    cooker.py: Allow siggen classes to be added by the metadata
    
    By calling init_parser which sets up the siggen code after the ConfigParsed
    event is fired, we can allow the metadata to add siggen classes which
    was always what the code intended.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/cooker.py

commit 721e986624529aedef96dd06c9fe6243f2897b10
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2012-01-16 15:01:08 +0000

    bitbake/fetch2: allow resuming interrupted fetch
    
    A lot of our checks in the fetcher code assume that if the downloaded
    file exists, the download finished successfully; this meant that if
    BitBake was interrupted in the middle of a fetch then it would not
    resume the fetch the next time, but instead attempt to use the
    half-fetched file and usually fail as a result.
    
    Since we're already writing a ".done" stamp file when a fetch completes,
    just check for its existence and assume the download didn't complete
    successfully if it isn't present.
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	3	lib/bb/fetch2/__init__.py

commit e44d5be98fc5d2589cd929ce143638395936b936
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2012-01-19 14:36:03 +0000

    bitbake/runqueue: always log tasks summary
    
    It's unclear from the history but at some point we stopped logging the
    "Tasks Summary" NOTE when tasks failed. Reinstate this for failure, and
    also make the count of attempted tasks include the failed task.
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

7	5	lib/bb/runqueue.py

commit 7da7dff83ed765c9cde1d7f91ee1b65e49520481
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2012-01-19 19:37:29 +0000

    siggen: Ensure correct runtask dependency output is shown for diffsigs
    
    The actual task names are discounted for comparison of dependent tasks, only
    the actual hashes are used. This updates the comparison code to account for
    this change, attempting heuristic matching for more user friendly output but
    falling back to showing the changed hashes directly. This avoids some confusing
    output to users where it looked like tasks had changed when they had not and
    actually had the same hash but a different taskname.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

21	15	lib/bb/siggen.py

commit 8b713708541f85a4252c0f7b683aff4407c7d3e0
Author: Darren Hart <dvhart@linux.intel.com>
Date:   2012-01-19 13:46:38 -0800

    usermanual: Correct "inherit" search to bbclass from oeclass
    
    Bitbake looks for bbclass now, not oeclass. Update the docs accordingly.
    
    Signed-off-by: Darren Hart <dvhart@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	doc/manual/usermanual.xml

commit d104f29871c04a5a36600a35b2568b49e5b21ca0
Author: Christopher Larson <chris_larson@mentor.com>
Date:   2012-01-08 23:21:27 -0600

    cooker: use futures rather than a multiprocessing pool
    
    This avoids some silent parser hangs we were seeing which were
    near impossible to debug as no user feedback was given.
    
    [RP: Tweak commit message]
    Signed-off-by: Christopher Larson <chris_larson@mentor.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

18	11	lib/bb/cooker.py

commit 774f59f06e65a35df597aa77c0fa06ab66c46906
Author: Christopher Larson <chris_larson@mentor.com>
Date:   2012-01-08 17:17:23 -0600

    Add dependency on the backported python 3.2 concurrent.futures
    
    Signed-off-by: Christopher Larson <chris_larson@mentor.com>

3	0	lib/concurrent/__init__.py
18	0	lib/concurrent/futures/__init__.py
575	0	lib/concurrent/futures/_base.py
101	0	lib/concurrent/futures/_compat.py
345	0	lib/concurrent/futures/process.py
144	0	lib/concurrent/futures/thread.py
1	1	setup.py

commit b310382764367b573c84f33d847c6eb821266f9e
Author: Lianhao Lu <lianhao.lu@intel.com>
Date:   2012-01-16 12:07:44 +0800

    bitbake/persist_data: Reconnect when DB is locked
    
    [YOCTO #1761]
    Reconnect to the backend Sqlite DB in 'database is locked' exception so
    the timeout can be leveraged in each time retry.
    
    Signed-off-by: Lianhao Lu <lianhao.lu@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

7	5	lib/bb/persist_data.py

commit cdf69913f99d28bc7f51067a60257701f952c6cb
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2012-01-13 17:01:52 +0000

    bitbake/knotty: print task failure summary
    
    Remove the error logged within cooker summarising the list of failed
    tasks, and instead print this in the UI (knotty) where it belongs. This
    also adds the actual name of the task that failed as well as the
    corresponding recipe file that was being shown previously.
    
    In addition, reformat the summary messages more tidily - no extra breaks
    between lines and use correct English singular/plurals, with some
    allowance for future translation.
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

0	4	lib/bb/cooker.py
22	2	lib/bb/ui/knotty.py

commit 803550a5098ec878164245e71344c3d687310b72
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2012-01-13 17:01:51 +0000

    bitbake/cooker: avoid printing stack trace for -b match error
    
    Improves error output for matching problems when the -b / --buildfile
    command line option is used.
    
    Rename MultipleMatches exception to NoSpecificMatch (as it is also
    raised when there are no matching recipes) and make it inherit from
    BBHandledException so that it doesn't print a stack trace (we always log
    an ERROR prior to raising it.)
    
    In addition, improve the formatting of the error message - only call the
    log function once rather than once for every match, and use a more
    appropriate message if there are no matches.
    
    Fixes [YOCTO #1141]
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

11	6	lib/bb/cooker.py

commit 6bbdc7d259c0cc041b62dbdb26cfc3ec6edcb6f3
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2012-01-13 17:01:50 +0000

    bitbake/fetch2: reduce output for fetch failures
    
    Make the warning for the initial fetch failure a single line - we don't
    need the full command and output here yet, but write it into the log in
    full as a debug message. However, if fetching from mirrors fails as well
    then print out the full details for the first error that occurred as an
    ERROR rather than a WARNING.
    
    Since this is logged as an ERROR, combined with an earlier patch it
    suppresses the full log which does make the output much more readable
    for any fetch error.
    
    Fixes [YOCTO #1832].
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

6	1	lib/bb/fetch2/__init__.py

commit b9746b7e4d7aa5c34eba15a61427bfc6949af123
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2012-01-13 17:01:49 +0000

    bitbake/knotty: avoid printing full task log when error already printed
    
    If a task has logged an ERROR then don't print the contents of the
    task's log file in knotty (the default terminal UI).
    
    As a side-effect we now also respect BBINCLUDELOGS in knotty; if it is
    false we never print the log (but the pointer to the log file is always
    printed).
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

15	3	lib/bb/build.py
1	1	lib/bb/ui/knotty.py

commit 50aea9a76e40cf71cc3f1462c88298e4846a031c
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2012-01-13 17:01:48 +0000

    bitbake/fetch2: correctly decode exit signal/status
    
    The termination signal and exit code of the fetch process were not being
    decoded correctly, resulting in bitbake reporting that the process
    terminated with a signal of the exit code (if it was under 255). There
    are functions in the Python os module to do this decoding correctly (for
    Unix at least), so let's use them.
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

7	4	lib/bb/fetch2/__init__.py

commit b6f067af12d4661758a78788f1db472684b9aba8
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2012-01-13 17:01:47 +0000

    bitbake/runqueue: avoid "failed" in task summary if nothing did
    
    Seeing the word "failed" alone without reading the whole context has
    occasionally triggered an automatic assumption on the part of some users
    (myself included) that something has gone wrong, even when this message
    is telling you that "0 [tasks] failed". To avoid this let's just say
    "all succeeded" in this case instead.
    
    As a bonus this means you can now search the output for "fail" and not
    find anything if all went well.
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

5	1	lib/bb/runqueue.py

commit 86811bd85e2e453ee92a05fe60160d9b49ac69e8
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2012-01-13 17:01:46 +0000

    bitbake/fetch2: improve error formatting for fetcher errors
    
    * The "name" argument to FuncFailed is rarely used as a name in actual
      usage within bitbake, so don't treat it as one in the output.
    * Don't print URL for FetchError if it was not specified (i.e. don't
      output "Fetcher failure for URL 'None'")
    * Don't include URL in "unable to fetch from any source" message since
      we supply it to FetchError and it will be printed anyway.
    * Don't include URL in "checksum failed" message for the same reason
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/build.py
7	4	lib/bb/fetch2/__init__.py

commit d242d6ca81dd83b2b13a3ac77ac4cd829a69cf83
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2012-01-13 17:01:45 +0000

    bitbake/knotty: don't count errors as warnings in summary
    
    The count of warnings being shown in the summary at the end was also
    including the number of errors.
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/ui/knotty.py

commit 9d8f45407c67ed0d3c4f820cf646de3c385067c7
Author: Lianhao Lu <lianhao.lu@intel.com>
Date:   2012-01-10 14:13:50 +0800

    bitbake: Automatically start local PR service.
    
    [YOCTO #1126]
    A local PR service will be started and stopped automatically along
    with the bitbake invocation/ternimation.
    
    This local PR service will be started only and if only when the
    PRSERV_HOST is set to 'localhost' and PRSERV_PORT is set to '0'.
    
    When started, the sqlite3 database is stored at
    "${PERSISTEN_DIR}/prserv.sqlite3" or "${CACHE}/prserv.sqlite3".
    
    Signed-off-by: Lianhao Lu <lianhao.lu@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

4	5	bin/bitbake-prserv
3	0	lib/bb/cooker.py
7	5	lib/prserv/db.py
109	35	lib/prserv/serv.py

commit 379567ee879dcdc09a51f7f1212bde1076147a6f
Author: Lianhao Lu <lianhao.lu@intel.com>
Date:   2012-01-10 14:13:49 +0800

    bitbake/PRservice: Added no_hist mode and export/import.
    
    [YOCTO #1556]
    1. Added the package_arch into the index to the DB table. Because the
    change in PACKAGE_ARCH will results in different checksum, and it is
    better to have seperate PR value domains for differnt PACKAGE_ARCH of
    the same pakcage.
    
    2. Changed the PR service to operate in no history mode. In this mode,
    the for a given query tuple (version, pkgarch, checksum), the returned
    value will be the largest among all the values of the same (version,
    pkgarch). This means the PR value returned can NOT be decremented.
    
    3. Added export function. For each (version, pkgarch) tuple, only the
    record with the maximum value will be exported.
    
    4. Added import function. The record will only be imported if the
    imported value is larger than the value stored in the DB with the same
    (version, pkgarch, checksum) tuple.
    
    Signed-off-by: Lianhao Lu <lianhao.lu@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

13	10	bin/bitbake-prserv
4	1	lib/prserv/__init__.py
177	32	lib/prserv/db.py
69	37	lib/prserv/serv.py

commit eac9249b40ae1e3aa21e016010c862664e59a8d4
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2012-01-09 17:01:51 +0000

    bitbake: Add BBHandledException exception class
    
    We have a problem knowing when to show the user debug information and
    when not to since the code has already shown the user suitable information
    about why a failure is occurring.
    
    This patch adds a bb.BBHandledException exception class which can be used
    to identify those exceptions which don't need further explanation to
    the user.
    
    This patch uses this class for the bb.providers exceptions and ensures the
    command handling code correctly filters the exceptions meaning that
    
    "bitbake invalid"
    
    now shows an simple error message and not a python traceback.
    
    [YOCTO #1141 partial]
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

12	0	lib/bb/__init__.py
5	2	lib/bb/command.py
2	2	lib/bb/providers.py

commit 9943bad611a974e4d37a00c7a4de1752250370c5
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2012-01-09 17:00:53 +0000

    bitbake/knotty: Show summary of warning/error messages shown
    
    Show a summary count of warning/errors messages shown to the user during the
    build and make it clear when an error exit code is being set.
    
    [YOCTO #1540]
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

11	2	lib/bb/ui/knotty.py

commit 470a160813ce6cf04f83258d46ded5c2ab8bc520
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2012-01-08 12:06:51 +0000

    bitbake-layers: close files in apply_append()
    
    It's recommended practice to close files when finished with them and the
    code in this function was not doing this.
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	0	bin/bitbake-layers

commit 8e4dc97614f2022855143b49d18795ca0352b237
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2012-01-08 12:06:50 +0000

    bitbake-layers: flatten: warn the user if output structure is incorrect
    
    If you flatten layers that have different directory structures you may
    not end up with a usable layer in the output directory - some files
    won't be picked up by BitBake.
    
    To try to avoid this problem, once flattening has completed, get the
    BBFILES entries that correspond to the layer from which the output
    layer's conf/layer.conf came from, and check through all of the
    .bb/.bbappend files in the output directory to see if any will not be
    referred to by BBFILES in the output layer. If any are found, show a
    warning to the user.
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

38	0	bin/bitbake-layers

commit 379b12107ec921b4458eda320078374a509164c1
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2012-01-08 12:06:49 +0000

    bitbake-layers: flatten: allow specifying layers to flatten
    
    You can now optionally specify two or more layers to flatten into the
    output, rather than flattening all of the layers in the current
    configuration (but this is still the default behaviour if no layers are
    specified). Note that this means the output layer may still contain
    bbappends where the corresponding recipes are not present in the list of
    layers to flatten. There is also a caveat when a layer not being
    flattened would be "inbetween" the flattened layers (see the command
    help for details.)
    
    Implements feature request in [YOCTO #1564].
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

67	8	bin/bitbake-layers

commit 96c307b9874131ad8c7d9caea6f6dfbd09aab9d4
Author: Dongxiao Xu <dongxiao.xu@intel.com>
Date:   2012-01-06 17:02:23 +0800

    command.py: add parseConfigurationFiles API
    
    The parseConfigurationFiles API calls the related function in
    cooker.py to parse config files.
    
    Signed-off-by: Dongxiao Xu <dongxiao.xu@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

10	0	lib/bb/command.py

commit 2677254cf9792cee083605267570d93b425cc2db
Author: Dongxiao Xu <dongxiao.xu@intel.com>
Date:   2012-01-06 17:02:29 +0800

    bitbake: add a new option "--server-only"
    
    Create a new option "--server-only" for bitbake command, which allows
    bitbake runs as a server, and let frontend connect the server itself.
    
    "--server-only" should work with "-t xmlrpc", or bitbake will exit.
    
    bitbake --server-only -t xmlrpc will print out the server address and
    port information.
    
    Signed-off-by: Dongxiao Xu <dongxiao.xu@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

16	7	bin/bitbake

commit c353316b2efcc7a893d6b4aa9a9647d51a6f69e3
Author: Dongxiao Xu <dongxiao.xu@intel.com>
Date:   2012-01-06 17:02:28 +0800

    cooker: remove command import in cooker.py
    
    There is no direct use of command in cooker.py, and it is using
    bb.command instead. Remove command in the import list.
    
    This fixes a problem of embedded import between command.py and
    cooker.py.
    
    Signed-off-by: Dongxiao Xu <dongxiao.xu@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

11	0	lib/bb/command.py
12	0	lib/bb/cooker.py
8	0	lib/bb/event.py

commit 92fec2788e33d301cc63848901bc6adc764a2ecf
Author: Dongxiao Xu <dongxiao.xu@intel.com>
Date:   2012-01-06 17:02:28 +0800

    cooker: remove command import in cooker.py
    
    There is no direct use of command in cooker.py, and it is using
    bb.command instead. Remove command in the import list.
    
    This fixes a problem of embedded import between command.py and
    cooker.py.
    
    Signed-off-by: Dongxiao Xu <dongxiao.xu@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	2	lib/bb/cooker.py

commit 5124351d6c287185723c98e6e4400c5402a5c8a8
Author: Dongxiao Xu <dongxiao.xu@intel.com>
Date:   2012-01-06 17:02:27 +0800

    xmlrpc: Change BitbakeServerInfo init function
    
    Pass host and port to BitbakeServerInfo class instead of the "server"
    instance. With this change, GUI can connect with server individually
    by host address and port.
    
    Signed-off-by: Dongxiao Xu <dongxiao.xu@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

4	4	lib/bb/server/xmlrpc.py

commit 8ee9c6cc47938604268242d90bd3007218f9a36e
Author: Dongxiao Xu <dongxiao.xu@intel.com>
Date:   2012-01-06 17:02:22 +0800

    command.py: add initCooker API
    
    initCooker is to set the cooker to the initial state with nothing
    parsed.
    
    Signed-off-by: Dongxiao Xu <dongxiao.xu@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

6	0	lib/bb/command.py
13	0	lib/bb/cooker.py

commit 487a124942fd5cd9de71413b79a4049a6d26f1e8
Author: Dongxiao Xu <dongxiao.xu@intel.com>
Date:   2012-01-06 17:02:21 +0800

    cooker: user bb.configuration.data to inject events
    
    For buildTargets function, we use bb.configuration.data as parameter
    to inject events, since in hob environment, some variables are
    modified dynamically and bb.configuration.event_data may out of date.
    
    Signed-off-by: Dongxiao Xu <dongxiao.xu@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	2	lib/bb/cooker.py

commit 3ef73dee8b08ccfd15a4901cce315a99b22e71d7
Author: Dongxiao Xu <dongxiao.xu@intel.com>
Date:   2012-01-06 17:02:19 +0800

    command.py: Modify needcache value for certain functions
    
    for findConfigFiels() and findFilesMatchingInDir() functions, they
    don't need to parse all the bb files, thus setting the needcache
    value to be False.
    
    Signed-off-by: Dongxiao Xu <dongxiao.xu@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	2	lib/bb/command.py

commit bc954f74620959703a0e921fcac3a6892675fe0d
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2012-01-05 13:01:36 +0000

    cooker.py: Add missing BB_WORKERCONTEXT conditionals
    
    Its desireable to run be able to execute bitbake tasks directly, only
    loading as much of the cooker is as necessary to do this. This use case
    can be identified by the BB_WORKERCONTEXT variable. There were a couple
    of places cooker code needed to be conditional on this but wasn't. This
    brings in the missing conditionals from poky where those code paths
    are used more heavily completing the support in master.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

5	1	lib/bb/cooker.py

commit cff2c258b77fde01d530a5923e553e6111b15eb5
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2011-11-21 14:40:37 +0000

    bitbake/runqueue: Improve the setscene logging
    
    When debugging setscene problems it was found that some extra debug messages were useful.
    This patch adds them.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

4	0	lib/bb/runqueue.py

commit 4483dc4bc4711cd8e144078090727348beb24879
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2012-01-05 12:57:12 +0000

    cooker.py: Convert a bb.data.expand refernce to the updated syntax
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/cooker.py

commit 1f2867b79f1cd2bfbdc849ba5677a39db6fa3396
Author: Juraj Hercek <juraj.hercek@jhksoftware.com>
Date:   2011-12-22 15:21:12 +0100

    fetch2/git: change colon to dot in ud.host
    
    Local cloning of git repositories from DL_DIR into WORKDIR fails when
    using ssh URL with port specification e.g.
    "ssh://user@host:port/path/to/repo.git". Git fetcher clones such remote
    repository into "${DL_DIR}/git2/host:port.path.to.repo.git". However,
    when clonging from ${DL_DIR}/git2/host:port.path.to.repo.git into
    ${WORKDIR}, git fetcher fails with "ssh: Could not resolve hostname
    ${DLDIR}/git2/host: Name or service not known".
    
    A solution is to replace ":" by "." in host component, similarly as it
    is done when replacing "/" with "." in path component, so that local
    clone directory in DL_DIR looks like this: "host.port.path.to.repo.git".
    
    Signed-off-by: Juraj Hercek <juraj.hercek@jhksoftware.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/fetch2/git.py

commit a228f0a32c2c14d62effbbba5f4fada4cd3817f6
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2011-12-29 14:34:12 +0000

    bitbake-layers: fix Python error during parse
    
    If "bitbake-layers show_layers" was run when the cache was dirty forcing
    a parse, it failed with the following error:
    
    ERROR: Failure expanding variable SRCPV, expression was
    ${@bb.fetch2.get_srcrev(d)} which triggered exception AttributeError:
    'module' object has no attribute 'fetch2'
    
    A simple import of bb.fetch2 in bitbake-layers fixes this.
    
    Fixes [YOCTO #1855].
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	0	bin/bitbake-layers

commit 6c0babf08909307ab69a66ed06e77e8818b2a8c5
Author: Joshua Lock <josh@linux.intel.com>
Date:   2011-12-13 14:45:42 -0800

    ui/crumbs/hobprefs: trigger a reparse after changing IMAGE_FSTYPES
    
    As reported on the mailing list[1] when changing IMAGE_FSTYPES through the
    hob preferences a reparse is required before the changes will be picked up
    by the system. This patch sets the reload_required property of the class to
    true when the image types have been modified to ensure the reparse is
    triggered.
    
    1. https://lists.yoctoproject.org/pipermail/yocto/2011-December/006002.html
    
    Signed-off-by: Joshua Lock <josh@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	0	lib/bb/ui/crumbs/hobprefs.py

commit 540ba78075bd525776aa23bf38bee66350c66534
Author: Joshua Lock <josh@linux.intel.com>
Date:   2011-12-13 14:45:41 -0800

    ui/crumbs/runningbuild: handle InvalidTask events
    
    The knotty UI just ignores these and so should RunningBuild, if these events
    aren't handled the UI appears to hang.
    
    Fixes [YOCTO #1665]
    
    Signed-off-by: Joshua Lock <josh@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

4	0	lib/bb/ui/crumbs/runningbuild.py

commit 5337ed86820ab0a2cbb3fd82eb11edb807c47f54
Author: Khem Raj <raj.khem@gmail.com>
Date:   2011-12-10 10:25:57 -0800

    vim/syntax: Recognize ?? operator
    
    Signed-off-by: Khem Raj <raj.khem@gmail.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	2	contrib/vim/syntax/bitbake.vim

commit 71b53a3f0766ca464560a1f6a449f9424fbdf7ae
Author: Matthew McClintock <msm@freescale.com>
Date:   2011-11-30 11:24:55 -0600

    siggen.py: If both sigs have a variable in it's whitelist then don't say it's changed
    
    Some BB_HASHBASE_WHITELIST variables are in the lists of variable
    dependencies for signatures. Ignore those differences in lists
    since this difference does not matter
    
    Signed-off-by: Matthew McClintock <msm@freescale.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	3	lib/bb/siggen.py

commit 24e99460800856035bb54a84c7aa33b3517436e9
Author: Robert Yang <liezhi.yang@windriver.com>
Date:   2011-11-30 17:23:51 +0800

    Remove the async_cmds and sync_cmds from command.py
    
    In bitbake/lib/bb/command.py::Command::__init__, we have the following
    lines:
    
    for attr in CommandsSync.__dict__:
        command = attr[:].lower()
        method = getattr(CommandsSync, attr)
        sync_cmds[command] = (method)
    
    for attr in CommandsAsync.__dict__:
        command = attr[:].lower()
        method = getattr(CommandsAsync, attr)
        async_cmds[command] = (method)
    
    The sync_cmds and async_cmds are defined as global dictionaries, but it
    seems that we've never used them (I did a "grep -r async_cmds bitbake/",
    , there is no result except the ones that I have removed), and I can't
    find the history of it from "git log -p", I guess that they have been
    replaced by the self.cmds_sync and self.cmds_async.
    
    [YOCTO #1791]
    
    Signed-off-by: Robert Yang <liezhi.yang@windriver.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

0	14	lib/bb/command.py

commit b8b2f4287c9125542b18a294c0a94ed89a7e73a8
Author: Joshua Lock <josh@linux.intel.com>
Date:   2011-12-02 10:58:35 -0800

    fetch2: fix Exception parameters when BB_STRICT_CHECKSUM enabled
    
    BB_STRICT_CHECKSUM caused a backtrace as the FetchError parameters are
    incorrectly specified such that FetchError is being passed 8 params
    when it's expecting 3. This fixes the parameters so we're passing a
    formatted string and the url.
    
    Signed-off-by: Joshua Lock <josh@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	3	lib/bb/fetch2/__init__.py

commit bd5a727c8447bcb747c1d2463b7de2ab6d21a7de
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2011-12-01 23:11:24 +0000

    cooker.py: Allow the -e option to work with virtual classes and -b
    
    Using bitbake -e -b virtual:xxxx:/path/to/the.bb would result in
    zero matches since the virtual:xxxx piece wasn't being processed.
    
    This adds in the necessary functionality to handle it correctly.
    
    [YOCTO #1793]
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	1	lib/bb/cooker.py

commit ef0888f83fa4408eb768257d7e03700202faad18
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2011-12-01 11:58:41 +0000

    build.py: Be determistic about a function's cwd
    
    There is a subtle but nasty problem that a function's cwd can vary
    depending on whether ${B} (often ${S}) exists before the funciton is
    called or not. Most functions in the system can cope with this but
    its bad practise and I've just witnessed build failures resulting
    from this during image generation from bootimg.bbclass. I also
    suspect this could explain some odd fetcher behaviour witnessed in
    the past.
    
    This change ensures we always call funcitons with a specific build
    directory making things deterministic.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	2	lib/bb/build.py

commit 9f7978ca4d59b92721de508113dbac30721014d9
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2011-11-25 14:57:53 +0000

    Update users of getVar/setVar to use the data store functions directly
    
    (From Poky rev: affd0907253387cee0ba0c7e9f92bcc109895446)
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	bin/bitdoc
1	1	doc/manual/usermanual.xml
2	2	lib/bb/build.py
2	3	lib/bb/cache.py
2	2	lib/bb/codeparser.py
2	3	lib/bb/command.py
28	28	lib/bb/cooker.py
2	2	lib/bb/data.py
1	1	lib/bb/data_smart.py
16	16	lib/bb/fetch/__init__.py
3	3	lib/bb/fetch/git.py
39	39	lib/bb/fetch2/__init__.py
2	2	lib/bb/fetch2/git.py
3	3	lib/bb/parse/__init__.py
50	50	lib/bb/parse/ast.py
1	1	lib/bb/parse/parse_py/BBHandler.py
9	9	lib/bb/parse/parse_py/ConfHandler.py
3	3	lib/bb/persist_data.py
4	4	lib/bb/providers.py
13	13	lib/bb/runqueue.py
1	1	lib/bb/siggen.py
2	2	lib/bb/ui/crumbs/configurator.py
3	3	lib/bb/utils.py

commit 5ace320ccc01f4e326f90b7ba060dcbff3380dca
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2011-11-25 11:20:33 +0000

    bitbake/siggen.py: Don't backtrace if the taskhash data isn't present
    
    This allows the code to safely fall back to dumping the basehash data
    if the taskhash data isn't present for some reason. We could effecitvely
    obsolete the runtime option and use this approach instead exclusively.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	2	lib/bb/siggen.py

commit d7f9edda65dae2e046871afa275c5a51dff48fc4
Author: Matthew McClintock <msm@freescale.com>
Date:   2011-11-23 19:11:27 -0600

    Nothing uses USERNAME, remove it - can cause sstate-cache conflicts
    
    USER is the correct variable to use, also this can affect sstate
    cache as well.
    
    Signed-off-by: Matthew McClintock <msm@freescale.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

0	1	lib/bb/utils.py

commit 6c879b44ccf42dc73fe4467076e114700d7ba81b
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2011-11-24 17:41:02 +0000

    data/siggen: Add vardepvalue mechanism to allow the variable dependency code to be forced to specific values
    
    We have a problem if we want to inject specific information into the variable
    dependency code. There are cases for example where we want a dependency
    on the value of X but it doesn't matter how X was constructed or what
    dependencies it might have had, we only care about the absolute value.
    With the current code, its near enough impossible to do this.
    
    This patch adds such a mechanism so the user can trigger this with code like:
    
    baselib[vardepvalue] = "${baselib}"
    
    It also refactors some of the code so we do variable lookups once
    instead of doing this in two different functions.
    
    [YOCTO #1583]
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

14	9	lib/bb/data.py
1	2	lib/bb/siggen.py

commit a0246bf09c93bb657eaf6ba61d090b247ed33640
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2011-11-24 16:11:26 +0000

    fetch2: Improve uri_replace to handle paths with no trailing '/'
    
    Currently if you specify a mirror like:
    
    file://.* http://linux.freescale.net/yocto/sstate-cache
    
    it won't work as you expect whilst:
    
    file://.* http://linux.freescale.net/yocto/sstate-cache/
    
    will since it has the trailing slash.
    
    This patch handles both cases correctly. It also adds some debug to
    the uri_replace function since its near impossible to debug it without
    some kind of output.
    
    [YOCTO #1578]
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

10	3	lib/bb/fetch2/__init__.py

commit a34ff490a46577a64345365fa1ac39c48d0861cd
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2011-11-24 14:45:37 +0000

    knotty: Add support for logging the console to logfile
    
    The BB_CONSOLELOG variable is used to specify the console log file
    to use. This means people can look up things that happened during a
    build by may have scrolled off the screen.
    
    [YOCTO #1771]
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

6	0	lib/bb/ui/knotty.py

commit 035c673c463ca450245acf824e7b7e8f889bdc89
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2011-11-24 14:14:55 +0000

    runqueue.py: Fix debug message to reference the correct task
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	1	lib/bb/runqueue.py

commit 5597a68fac0954c682b67471722c2643e2415f99
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2011-11-24 13:56:52 +0000

    fetch2/local: Don't default to files in DL_DIR for file:// urls
    
    Defaulting to any file in DL_DIR as the first match for a file:// url
    doesn't make much sense and can lead to unexpected results.
    
    This patch changes the logic so this is the last fallback location
    instead. Whether it should be using DL_DIR at all for this is a
    good question but something for another patch.
    
    [YOCTO #1710]
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	3	lib/bb/fetch2/local.py

commit 9a2029899c946ce9aa8adbc85f2cfe7a85b92182
Author: Matthew McClintock <msm@freescale.com>
Date:   2011-11-23 02:04:00 -0600

    siggen.py: sort task hash depedencies with basepath
    
    Without this patch the tash hash dependencies can be in a order
    that is dependent upon directory/filesystem layout. With this
    change the data is sorted the same regardless.
    
    Without this the dependent hashes could be in different orders
    on different systems and consequently final md5 hash would differ
    as well even though nothing else changed.
    
    Signed-off-by: Matthew McClintock <msm@freescale.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

14	11	lib/bb/siggen.py

commit f1eb6d3dcc10c42bb09383a87bde3afa69bc6ed9
Author: Matthew McClintock <msm@freescale.com>
Date:   2011-11-23 02:08:50 -0600

    bitbake: print out symmetric difference when comparing sigs
    
    This is useful for really longs lists to pinpoint what has
    actually changed
    
    Signed-off-by: Matthew McClintock <msm@freescale.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

4	0	lib/bb/siggen.py

commit 61017fc5d30b7a13308d038872ec92efc1a84cef
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2011-11-21 14:02:00 +0000

    runqueue.py: Ensure we fully process the covered list
    
    The existing looping code can mask an existing "found = True"
    by forcing it to False each time. This can lead to dependency
    lists not being fully searched and results in dependency errors.
    
    An exmaple of this was the autobuilder building linux-yocto from
    sstate but then rebuilding some of the recipe's tasks for no
    apparent reason. Separating the logic into two variables solves this
    problem since any "found = True" value is now always preserved.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

4	3	lib/bb/runqueue.py

commit b7114d8e5d9b0720339bd5d24d243c0f2a7c1f3b
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2011-11-23 12:38:44 +0000

    runqueue.py: Ensure setscene tasks don't break dependency order
    
    If A depends upon B which depends upon C and the setscene for B
    succeeds but C is going to get rebuilt, we should wait for C to
    try and build A but currently we don't.
    
    This is due to the timing of when we run the task_skip() as this
    triggers other tasks to become buildable. This patch moves the timing
    of that call to a more appropriate place allowing dependencies to
    behave as expected.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

7	4	lib/bb/runqueue.py

commit 2f6d987d9957a5d713ce119c24c2e87540611f53
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2011-11-21 14:34:23 +0000

    bitbake/runqueue.py: Add BB_SETSCENE_VERIFY_FUNCTION hook
    
    The OE metadata has cases where it needs to prevent some setscene
    functions from running. An example of this is where we know a task
    is going to run do_configure (which would clean out do_populate_sysroot)
    and hence we don't want do_populate_sysroot_setscene to run.
    
    This change adds in a hook so that the metadata can allow any
    such policy decision to filter back up to bitbake.
    
    It removes the existing code which attempted to do this in a generic
    way but failed.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

9	11	lib/bb/runqueue.py

commit 78c02276c7d445403af285f8870a7a2d5a8f4a4b
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2011-11-21 14:40:21 +0000

    bitbake/runqueue.py: Sort the list of skipped tasks as it makes searching the list easier when debugging
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/runqueue.py

commit 94c97534adef000559fd97aa51da6a7f35840bbd
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2011-11-21 14:39:29 +0000

    bitbake/runqueue.py: Fix incorrect task number reference in debug message
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/runqueue.py

commit 658d7daa70e46c2b20973b90ee53f0bbadc8bf5d
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2011-11-18 14:21:15 +0000

    parse_py: Use absolute paths for FILE
    
    Its possible for relative paths to creep into FILE. These confuse the
    build system no end as its not clear where they might be releative to.
    
    This patch ensures we always use resolved absolute paths for FILE
    so that things behave in a deterministic way.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/parse/parse_py/BBHandler.py
1	1	lib/bb/parse/parse_py/ConfHandler.py

commit 727ca945177ce9bd44515cf611e3e95a09466d98
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2011-11-17 14:01:06 +0000

    siggen.py: Include list of variables in hashes
    
    Ensure that the list of dependencies is included in the hash
    as well as their contents
    
    Prior to this, adding or removing dependencies with values
    of "None" would not change the hash, despite diffsigs reporting
    this difference.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	0	lib/bb/siggen.py

commit 165a22ddcc647b945707fb5c483146bb336d5f66
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2011-11-17 14:02:06 +0000

    siggen.py: Fix diffsigs output for filename comparisions
    
    When comparing sig files, if the recipe locations had changed, the
    dependent tasks list would show as changed even if the actual hash
    had not changed. This updates the code to only compare the base part
    of the pathnames.
    
    It also tweaks some of the output to add newlines to aid comparing
    two lists of variables as it makes the location of the difference
    clearer.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

15	3	lib/bb/siggen.py

commit e492eb4dc9016cd0bed194377c6f2b85cf0ad113
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2011-11-11 18:38:15 +0000

    lib/bb/runqueue: avoid marking runtime dependencies as covered
    
    The code which populates setscene_covered list was adding a task to the
    covered list if all of the tasks that depend upon it were also covered;
    however, this means that tasks that would have installed "runtime"
    dependencies were being marked as covered also, e.g. gmp-native and
    mpfr-native are needed by gcc-cross at runtime since they are shared
    libraries that gcc links to, but their do_populate_sysroot tasks were
    being marked as covered, resulting in failures later on if gcc-cross was
    available from sstate but mpfr-native and gmp-native weren't.
    
    Since we currently have no real way to handle runtime dependencies for
    native packages, add a workaround which avoids marking tasks as covered
    if one or more of their revdeps are from a different recipe.
    
    Fixes [YOCTO #1536].
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

6	1	lib/bb/runqueue.py

commit 4a4046268f84b85559eea2c4b6a6004ad8cccb77
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2011-11-08 18:02:15 +0000

    data_smart: Add appendVar/prependVar functions
    
    This patch adds appendVar and prependVar functions to the data store
    meaning python code would no longer have to do the getVar, append and
    the setVar dance that much of the current python code does.
    
    It also adds corresponding variants for flags.
    
    Currently there is no spacing added by these functions. That could be
    added as a parameter if desired.
    
    If these functions turn out to be hotspots in the code, there are tricks
    that could potentially be used to increase the speed of these specific
    operations within the datastore.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

16	0	lib/bb/data_smart.py

commit 05c29ab0b2ad3c521414cabb6a92bca15c6e919c
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2011-11-08 22:19:38 +0000

    Add FAKEROOTNOENV variable
    
    Add a FAKEROOTNOENV which does the opposite of the FAKEROOTENV variable
    and is data loaded into the environment for tasks without the fakeroot
    flag.
    
    The intent here is to provide a way to control the environment when we
    aren't needing fakeroot context which allows us to unload the preload
    from memory entirely and gain a valuable speedup.
    
    I'm not 100% happy with needing this at the bitbake level, particularly
    with the cache hit but it does give a valuable speedup.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	0	lib/bb/cache.py
6	0	lib/bb/runqueue.py

commit 6004cbf36c980c2574c1c9153df81a7c55317e17
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2011-11-08 17:52:44 +0000

    cooker.py: Ensure only one copy of bitbake executes at once
    
    The bitbake codebase makes assumptions that only one copy is active
    against a given build directory at a given time. This patch adds a
    lockfile in TOPDIR to ensure that is the case.
    
    Note that no unlock is needed, that is automatically dropped when
    execution terminates.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

7	0	lib/bb/cooker.py

commit f421ef819f00ac659504d9af41bcc8323422ff8c
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2011-11-08 17:49:32 +0000

    utils.py: Fix lockfile retry handling
    
    The lockfile retry parameter is expected to return immediately after
    attempting to take the lock. There was a bug in the logic which this
    patch fixed to ensure it does that.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/utils.py

commit e724b9f417d1baf898f5afc6376c73c1a2ad8db9
Author: Christopher Larson <chris_larson@mentor.com>
Date:   2011-11-04 14:59:46 -0400

    codeparser: silence non-literal warnings for vardeps
    
    If the vardeps flag is not None, we now silence the warnings about
    non-literal usage for that variable.
    
    Signed-off-by: Christopher Larson <chris_larson@mentor.com>

23	5	lib/bb/codeparser.py
9	5	lib/bb/data.py
7	1	lib/bb/data_smart.py

commit 405dfe69e6a608826e599ebf2f83ef8cf5083b96
Author: Christopher Larson <chris_larson@mentor.com>
Date:   2011-10-28 23:06:18 -0400

    codeparser: drop expand tracking
    
    There are two usual cases involving bb.data.expand:
    
    - Calling it with a string literal -- "bb.data.expand('${FOO}/${BAZ}/bleh', d)".
    - Calling it on getVar results (legacy) -- "bb.data.expand(bb.data.getVar('FOO', d), d)"
    
    Nothing in any of the usual layers uses it in any other way, and I'm
    having trouble coming up with any real use cases beyond this. The first
    of the above cases is already tracked, via the expandWithRefs called
    on the python code string. The second didn't emit a warning anyway,
    since the getVar was already handled.
    
    Given this, I see no reason for us to maintain explicit expansion
    tracking. Further, we weren't using its results anyway (the var_expands
    member).
    
    Signed-off-by: Christopher Larson <chris_larson@mentor.com>

0	11	lib/bb/codeparser.py

commit 1060193ae4d54e667735dbff5d1d2be49a3f95c9
Author: Christopher Larson <chris_larson@mentor.com>
Date:   2011-10-28 21:32:26 -0400

    codeparser: accept a name for better messages
    
    - If a name is passed to the parser, prepend the messages with "while
      parsing <name>:". This gives a bit more context.
    - Tweak the warning messages slightly (they had to be altered anyway to
      inject the variable being parsed).
    
    Before:
      DEBUG: Warning: in call to 'bb.data.getVar': argument ''%s' % var' is \
             not a literal
    
    After:
      DEBUG: while parsing emit_pkgdata, in call of bb.data.getVar, argument \
             ''%s' % var' is not a string literal
    
    Signed-off-by: Christopher Larson <chris_larson@mentor.com>

10	8	lib/bb/codeparser.py
4	4	lib/bb/data.py
1	1	lib/bb/data_smart.py

commit 84e535b5165c7e936c5b1486bdf4626ed3649f5f
Author: Christopher Larson <kergoth@gmail.com>
Date:   2011-10-27 22:37:11 -0700

    codeparser: simplify how we compare the called node names
    
    With the previous method, using the compare_name methods, we split the
    requested match name by '.', reversed it, then compared them piecemeal
    during the node traversal. The new method walks the nodes and hands back
    the name of what's being called, and then we check that. This also
    consolidates the two different implementations of traversal of the
    attribute/name nodes (one in compare_name, one for the execs).
    
    Signed-off-by: Christopher Larson <kergoth@gmail.com>

20	52	lib/bb/codeparser.py

commit d6c44fac184abae8395bfa7078f06675218aa534
Author: Christopher Larson <kergoth@gmail.com>
Date:   2011-10-27 22:23:05 -0700

    codeparser: merge the nested python parsing classes
    
    The split is even less necessary now that we use ast.walk rather than an
    actual NodeVisitor subclass.
    
    Signed-off-by: Christopher Larson <kergoth@gmail.com>

87	102	lib/bb/codeparser.py

commit 9c097704b4309dbe67fc360c8377edbedc354d00
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2011-11-03 17:13:34 +0000

    Increment version post release
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	bin/bitbake
1	1	lib/bb/__init__.py

commit 8df3f86bbc0edc40349362aa4a72672142ce6dbd
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2011-11-03 17:12:36 +0000

    Release 1.14.0

1	1	bin/bitbake
1	1	lib/bb/__init__.py

commit 8e4e75383e43d6da2c16ec5286186a0d0569b0f8
Author: Christopher Larson <kergoth@gmail.com>
Date:   2011-10-27 22:45:04 -0700

    codeparser: make var_expands actually hold useful information
    
    Previously, it was calling var_expands.update() rather than add(), with
    a string argument, resulting in adding each character of that string to
    the var_expands set, rather than the string itself.
    
    Signed-off-by: Christopher Larson <kergoth@gmail.com>

1	1	lib/bb/codeparser.py

commit 6cae2d11f8e254a1d01bf294eef916ac43a1881b
Merge: 0a6443f9 69634847
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2011-10-27 08:03:24 +0100

    Merge branch 'master' of git.openembedded.org:bitbake

commit 69634847f41916220aaa74e57929a36c6802e7e0
Author: Cliff Brake <cbrake@bec-systems.com>
Date:   2011-10-26 07:48:53 -0400

    Linefeed to test commits

1	0	TODO

commit 0a6443f9e1d07865c9fd1dfc0b4622eb1c4c3f3a
Author: Joshua Lock <josh@linux.intel.com>
Date:   2011-10-11 13:15:15 -0700

    doc: update manual for checksum changes
    
    Document the ability to use SRC_URI parameters for checksums
    
    Signed-off-by: Joshua Lock <josh@linux.intel.com>

1	1	doc/manual/usermanual.xml

commit 5f8f923b76722c9b6c7ffbe19e94df50f900155f
Author: Joshua Lock <josh@linux.intel.com>
Date:   2011-10-11 09:42:13 -0700

    fetch2: enable checksum definition as SRC_URI parameter
    
    URI parameters should be able to be defined as a parameter of the SRC_URI,
    this patch enables thus for checksums.
    
    An example;
    
    SRC_URI = "http://pkgconfig.freedesktop.org/releases/pkg-config-${PV}.tar.gz;md5sum=a3270bab3f4b69b7dc6dbdacbcae9745;sha256sum=3ba691ee2431f32ccb8efa131e59bf23e37f122dc66791309023ca6dcefcd10e"
    
    Addresses the remainder of [YOCTO #1399]
    
    Signed-off-by: Joshua Lock <josh@linux.intel.com>

8	2	lib/bb/fetch2/__init__.py

commit 30ca41e596955fcbbe1ae6f4436ecf14cef96f8d
Author: Joshua Lock <josh@linux.intel.com>
Date:   2011-10-10 17:24:41 -0700

    fetch2: improve usability of checksums
    
    This patch improves the usability of checksums by only requiring one checksum
    be defined.
    
    Further, checksum verification will provide as much information as possible
    at, rather than a bit at a time. No longer will you need to run fetch, see an
    md5sum mismatch, fix it, run fetch, seen an sha256sum mismatch, fix it and
    fetch again. If neither checksum is defined we now report both missing sums
    at once - rather than one after the other.
    Finally, if both sums are incorrect, we'll report both incorrect sums at the
    same time.
    
    Fixes part of [YOCTO #1399]
    
    Signed-off-by: Joshua Lock <josh@linux.intel.com>

38	34	lib/bb/fetch2/__init__.py

commit db59297aa1861614ffaea4295b9b054baa8a12b9
Author: Joshua Lock <josh@linux.intel.com>
Date:   2011-10-11 10:16:02 -0700

    hob: fix backtrace when dismissing open dialog
    
    Clearly a logic/indentation error - we should only try and load the recipe
    should the file-chooser return OK.
    
    Fixes [YOCTO #1668]
    
    Signed-off-by: Joshua Lock <josh@linux.intel.com>

2	2	lib/bb/ui/hob.py

commit dca46cc2e1c75b6add2c4801e2994a4812745f5b
Author: Matthew McClintock <msm@freescale.com>
Date:   2011-10-04 14:08:37 -0500

    fetch2: Export additional variables to the fetchers
    
    git could need these environment variables when working behind
    a proxy
    
    Signed-off-by: Matthew McClintock <msm@freescale.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	1	lib/bb/fetch2/__init__.py

commit a7b75e4db52445b30ec0fc0053dcf454f5f7d2db
Author: Matthew McClintock <msm@freescale.com>
Date:   2011-09-27 16:41:39 -0500

    fetch2/git: Make git fetch run with -f so rebased branches don't fail
    
    git fetches can fail (or at least return failed) when trying to
    fetch and prune rebased branches. This patch simply adds a -f
    to the git fetch command so these failure are ignore
    
    Generally, if some SHA was rebased away it's not coming back so
    there is no point in not doing this force
    
    Signed-off-by: Matthew McClintock <msm@freescale.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/fetch2/git.py

commit c6e88b7c0e61f9586a275df53f48b90687c5f92f
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2011-09-23 17:05:00 +0100

    bitbake/lib/bb/msg.py: fix setting debug and verbosity levels
    
    The debug and verbosity levels (as set by the -D and -v command line
    options respectively)  were not being passed through within msg.py since
    bitbake revision 45aad2f9647df14bcfa5e755b57e1ddab377939a due to
    incorrect variable names.
    
    Fixes [YOCTO #1513].
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>

1	1	lib/bb/build.py
2	2	lib/bb/msg.py

commit 00fc1d7249b5e217cc7c36ac71b63ddad1c5b769
Author: Joshua Lock <josh@linux.intel.com>
Date:   2011-09-23 16:32:52 -0700

    hob: store recipe path at load time
    
    This fixes the internal dirtiness tracking such that if the Save menu item
    is selected after loading a recipe the existing file is updated rather than
    the user being prompted for the path to create a recipe at.
    
    Signed-off-by: Joshua Lock <josh@linux.intel.com>

3	1	lib/bb/ui/hob.py

commit 656eafe0f2c9ec7730d33e15705b8c720f787c49
Author: Joshua Lock <josh@linux.intel.com>
Date:   2011-09-23 13:19:16 -0700

    hob: fix building with current selections after reparse
    
    After the reparse we were setting the model to reflect the values before
    the reparse was triggered but clearing the internal variables used to test
    whether these values are set, leading to the UI erroneously reporting that
    selections had not been made.
    
    Signed-off-by: Joshua Lock <josh@linux.intel.com>

0	2	lib/bb/ui/hob.py

commit f7d0560307707fe10bf80820f1e6ae300864f915
Author: Joshua Lock <josh@linux.intel.com>
Date:   2011-09-23 13:14:02 -0700

    ui/crumbs/hobeventhandler: fix variable name typo
    
    Signed-off-by: Joshua Lock <josh@linux.intel.com>

1	1	lib/bb/ui/crumbs/hobeventhandler.py

commit 109e1597671dfb7222672e268190aabc727960ca
Author: Joshua Lock <josh@linux.intel.com>
Date:   2011-09-23 13:13:17 -0700

    ui/crumbs/hobeventhandler: move remaining getVariable calls to init
    
    Instead of calling getVariable commands each time the BBPATH and BBFILES
    entries need testing cache the results as a member variable at object
    instantiation.
    
    Fixes [YOCTO #1521]
    
    Signed-off-by: Joshua Lock <josh@linux.intel.com>

5	4	lib/bb/ui/crumbs/hobeventhandler.py

commit 623e9c7f7a9cf12b8c81c26cc608990682a601dd
Author: Julian Pidancet <julian.pidancet@gmail.com>
Date:   2011-09-21 02:14:54 +0100

    Fix mercurial fetcher in fetch2
    
    The _build_revision method in Hg class gets called with the wrong number
    of arguments. This tiny patch adds a 5th argument to the method
    declaration to prevent python from throwing an exception.
    
    Signed-off-by: Julian Pidancet <julian.pidancet@gmail.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/fetch2/hg.py

commit 043914a8b478fd4a7799acd1b44bdb3b0af2165a
Author: Joshua Lock <josh@linux.intel.com>
Date:   2011-09-20 18:08:28 -0700

    hob: fix opening of image output dir on image build completion
    
    Firstly, rather than polling the DEPLOY_DIR_IMAGE directory each time an
    image is built store the variable as a member of the hobeventhandler.
    Secondly emit the generic "build-complete" signal *after* the specialised
    "build-failed" or "build-succeeded" signals such that the appropriate
    state variables are set before we try and use them.
    
    Signed-off-by: Joshua Lock <josh@linux.intel.com>

4	1	lib/bb/ui/crumbs/hobeventhandler.py
3	3	lib/bb/ui/crumbs/runningbuild.py

commit d2b9167a7b0eb3fcb31d64f915beef41aac659a5
Author: Joshua Lock <josh@linux.intel.com>
Date:   2011-09-20 17:12:09 -0700

    ui/crumbs/runningbuild: fix log messages right-click menu
    
    Pass the correct callback name to the connect method.
    
    Signed-off-by: Joshua Lock <josh@linux.intel.com>

1	1	lib/bb/ui/crumbs/runningbuild.py

commit 705156e2812afb288632f01416fcbbf9add26bee
Author: Joshua Lock <josh@linux.intel.com>
Date:   2011-09-19 15:28:09 -0700

    hob: enable package only builds even if an image has been built
    
    Once an image build has been performed the selected_image variable would
    prevent the package only build choice being triggered - by setting the
    variable to None on reset we are able to perform package only builds after
    an image build.
    
    Signed-off-by: Joshua Lock <josh@linux.intel.com>

1	0	lib/bb/ui/hob.py

commit ab6c63f35739c30df0e8a9d0f1ae982b96e538ed
Author: Joshua Lock <josh@linux.intel.com>
Date:   2011-09-19 15:25:45 -0700

    hob: fix build again when building packages only
    
    The different code paths for package vs image builds have lead to some bit
    rot in the package only build and an incompatability between package only
    builds and the build again mechanism.
    
    This patch unifies the code paths and fixes build again for package only
    builds.
    
    Fixes [YOCTO #1480]
    
    Signed-off-by: Joshua Lock <josh@linux.intel.com>

5	8	lib/bb/ui/crumbs/hobeventhandler.py
7	4	lib/bb/ui/hob.py

commit bdbd724e806c9ca69cc1508bac7ec0a2dce95543
Author: Joshua Lock <josh@linux.intel.com>
Date:   2011-09-14 16:27:28 -0700

    ui/crumbs/hobprefs: re-enable reloading of data after prefs changes
    
    When disabling the toolchain w/ headers checkbox in an early commit I
    accidentally disabled too much code. This re-enables adding the custom
    response handler to the Preferences dialog which triggeres a reparse of
    the metadata when appropriate preference changes are made.
    
    Fixes [YOCTO #1479]
    
    Signed-off-by: Joshua Lock <josh@linux.intel.com>

1	1	lib/bb/ui/crumbs/hobprefs.py

commit 3e7f8afeacf7c8c8de3e87778a3907e33d4a06b3
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2011-09-17 12:03:47 +0100

    fetch2/git: fix subpath destination directory
    
    Make the git fetcher's subpath (path within the git repo to fetch)
    option set the destsuffix (destination directory) option by default.
    This reverts the behaviour of subpath to the same as when it was
    introduced.
    
    Based on a patch by Dmitry Eremin-Solenikov <dbaryshkov@gmail.com>
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	1	lib/bb/fetch2/git.py

commit 3a54dcc09a12406ec6cf22b4b1a2cc4fc203822c
Author: Martin Jansa <martin.jansa@gmail.com>
Date:   2011-09-16 09:38:22 +0200

    fetch2/git: be more carefull in _contains_ref when checking git log output
    
    * in some cases there could be output like this
      ERROR: ld.so: object 'libpseudo.so' from LD_PRELOAD cannot be preloaded: ignored.
      before wc -l output and returned 'output.split()[0] != 0' is always True
    
    Signed-off-by: Martin Jansa <Martin.Jansa@gmail.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

4	1	lib/bb/fetch2/git.py

commit 9de432fe2348cdbc93037bb49abb508d1fd38336
Author: Martin Jansa <martin.jansa@gmail.com>
Date:   2011-09-19 09:58:41 +0200

    fetch2/git: fix logger.debug
    
    * logging/logger typo was fixed in 38a598731b49c8a0ba0ede570adc33eb1e848235
      but debug level is still missing
    
    Signed-off-by: Martin Jansa <Martin.Jansa@gmail.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/fetch2/git.py

commit 5896d8ff7bcf85b3bab20fc27c4c15e87f86b4d9
Author: Joshua Lock <josh@linux.intel.com>
Date:   2011-09-14 15:40:58 -0700

    fetch2/wget: make checkstatus() quieter
    
    Change the wget fetcher to not emit the commands output when calling checkstatus, this
    matches the behaviour of the git fetchers checkstatus() method.
    
    Signed-off-by: Joshua Lock <josh@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

4	3	lib/bb/fetch2/wget.py

commit 6ee69ab42580c09f6c3c43bce1ad9669a010a3ca
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2011-09-19 05:53:07 +0100

    cooker.py: Fix key expansion issues in showVersions
    
    bitbake -s was not displaying correct version information when the
    PREFERRED_VERSION string contains other variables. The actual built
    versions would differ since the providers.py functions were called
    with expanded keys at this point.
    
    This patch expands keys for showVersions bringing everything into
    sync correctly.
    
    [YOCTO #1493]
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

6	1	lib/bb/cooker.py

commit 38a598731b49c8a0ba0ede570adc33eb1e848235
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2011-09-17 12:11:04 +0100

    git.py: Fix logging vs logger typo
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/fetch2/git.py

commit 224db31c46f5e91ced0e509c5fc564baaffa7b27
Author: Christopher Larson <kergoth@gmail.com>
Date:   2011-09-14 10:43:48 -0700

    taskdata: fix string formatting of an error message
    
    Signed-off-by: Christopher Larson <kergoth@gmail.com>

1	1	lib/bb/taskdata.py

commit f4be83aae77a713e2b5a2d094651639b6e641031
Author: Joshua Lock <josh@linux.intel.com>
Date:   2011-09-08 18:10:29 -0700

    hob: correctly set the selected image when loading a recipe
    
    When the user saves their recipe based on an existing image type, loads it
    in a newly run hob instance and clicks bake they should not be asked about
    building packages vs an empty image up.
    
    Partially addresses [YOCTO #1468]
    
    Signed-off-by: Joshua Lock <josh@linux.intel.com>

1	0	lib/bb/ui/hob.py

commit 4394e38b038e1bc9845adf01d73363157d98c96d
Author: Joshua Lock <josh@linux.intel.com>
Date:   2011-09-08 18:00:13 -0700

    hob: correctly handle an exception
    
    It doesn't matter if we can't remove the temprorary file, for some reason,
    so catch the exception and ignore it.
    
    Partially addresses [YOCTO #1468]
    
    Signed-off-by: Joshua Lock <josh@linux.intel.com>

5	1	lib/bb/ui/hob.py

commit 39ed18e70e9f3a13b522b4ea02bf6f4bdb7de89c
Author: Joshua Lock <josh@linux.intel.com>
Date:   2011-09-08 17:59:20 -0700

    ui/crumbs/hobeventhandler: don't check BBPATH and BBFILES each build
    
    There's no need to check the BBPATH and BBFILES are set correctly each
    build when running multiple builds for one launch of the UI.
    
    Partially addresses [YOCTO #1468]
    
    Signed-off-by: Joshua Lock <josh@linux.intel.com>

20	19	lib/bb/ui/crumbs/hobeventhandler.py

commit 09f5aed2edb0b8f4a6570e1041b5db66cf2d17cc
Author: Joshua Lock <josh@linux.intel.com>
Date:   2011-09-08 14:50:01 -0700

    ui/crumbs/hobeventhandler: fix test for BBFILES
    
    It seems we have a race whereby the image_dir variable may not be set
    before it's tested for, since the variable is always the same set it in the
    initialiser.
    
    Partially addresses [YOCTO #1468]
    
    Signed-off-by: Joshua Lock <josh@linux.intel.com>

1	2	lib/bb/ui/crumbs/hobeventhandler.py

commit 459addf13721a6847406f215650fa1882fb83ea9
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2011-09-09 19:07:40 +0100

    runqueue.py: Ensure fakeroot variables are reflected in the datastore
    
    Without this, variables can be set to one thing in one part of the environment and something
    different in another part. This change ensures the datastore and the environment
    are consistent.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	0	lib/bb/runqueue.py

commit 67e5e23034c5ec2b9efcca935242830306c0048d
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2011-09-09 17:25:41 +0000

    runqueue: Ensure task environment is correct
    
    This fixes two problems:
    
    a) Variables which were in the parent environment but not set as "export"
       variables in the datastore could end up in the task environment
    
    b) oe.environ.update() can't cope with the generator returned by
       bb.data.exported_vars()
    
    Whilst the updated code isn't as neat, it does do the expected thing,
    sets the environment correctly and stops unwanted values leaking into
    the task environment.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

10	1	lib/bb/runqueue.py

commit 24272dae15ccf641ece11ef5a6e2bfa3ebb6f5f9
Author: Dmitry Eremin-Solenikov <dbaryshkov@gmail.com>
Date:   2011-08-21 11:57:40 +0400

    lib/bb/siggen.py: return a string from noop get_taskhash
    
    OpenEmbedded is expecting to get a string from get_taskhash, but noop siggen
    returns just 0 (number), so OE classes/sstate.bbclass barfs badly. Fix that.
    
    Signed-off-by: Dmitry Eremin-Solenikov <dbaryshkov@gmail.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/siggen.py

commit 71ac7fda51ed80e9ef6d1a3bca653683893e4770
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2011-09-05 13:30:11 +0100

    hob: fix segfault on second build
    
    Some internal lists were not being cleared, resulting in incorrect
    program flow on the second build, causing a structure to be accessed
    incorrectly which resulted in a segfault.
    
    Fixes [YOCTO #1332]
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Joshua Lock <josh@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

5	0	lib/bb/ui/crumbs/runningbuild.py
1	1	lib/bb/ui/hob.py

commit 069d85cde01d14f8da31ad5cbd843a4d99628d42
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2011-09-05 13:30:10 +0100

    hob: clear out temporary file list after deleting
    
    If you don't clear out files_to_clean after the files get deleted and
    then you run a second build, it will try to delete the files from the
    first build and you will get a "No such file or directory" error.
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Joshua Lock <josh@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	0	lib/bb/ui/hob.py

commit 73b6ff4654d10baae59d83e8568d58d989e99dd7
Author: Joshua Lock <josh@linux.intel.com>
Date:   2011-09-02 16:53:32 -0700

    hob: disable removal of packages
    
    It's felt that the stability of package deselection is not sufficient for
    the upcoming release and thus package removal should be disabled.
    
    I'd actually like to see this patch, or its effects, reverted as soon as
    the release bits have been frozen so that this issue can continue to be
    worked on.
    
    Signed-off-by: Joshua Lock <josh@linux.intel.com>

24	18	lib/bb/ui/hob.py

commit b0cce5b52a20c0dad5ec0c4053f437cae89b6137
Author: Joshua Lock <josh@linux.intel.com>
Date:   2011-09-02 16:39:23 -0700

    ui/crumbs/runningbuild: mask run_buildstats failure
    
    The buildstats handler causes an exception with: "'NoneType' object has no
    attribute 'startswith'" early a build via hob, leaving a glaring red row
    which means nothing to the user.
    Mask this error until such a time as we have opportunity to correctly
    diagnose and fix the root problem.
    
    Workaround fix for [YOCTO #1433]
    
    Signed-off-by: Joshua Lock <josh@linux.intel.com>

6	0	lib/bb/ui/crumbs/runningbuild.py

commit 3157967d08266b8d1ac563ba609ac3027b60d040
Author: Joshua Lock <josh@linux.intel.com>
Date:   2011-09-02 16:02:50 -0700

    ui/crumbs/hobprefs: disable 'build toolchain with headers'
    
    The generic meta-toolchain-sdk we are currently building when this option
    is enabled is likely unsuitable for the majority of images built with hob.
    Remove this option from the Preferences UI until such a time as we can
    correctly implement this feature to include the library headers for the
    selected packages.
    
    Addresses [YOCTO #1302]
    
    Signed-off-by: Joshua Lock <josh@linux.intel.com>

6	6	lib/bb/ui/crumbs/hobprefs.py

commit bb3e9113074ea1254aa03a247a1a1070682df9c8
Author: Joshua Lock <josh@linux.intel.com>
Date:   2011-09-02 14:29:38 -0700

    hob: add a test to ensure hob is run with the required pre and post files
    
    hob requires pre and post configuration files to store configuration values
    in, whilst this should (and will) be fixed long-term for so long as we
    require these files we should alert the user should they run without them.
    
    Fixes [YOCTO #1383]
    
    Signed-off-by: Joshua Lock <josh@linux.intel.com>

21	0	lib/bb/ui/hob.py

commit 126267c545ede65042959d134ea75c0345577747
Author: Joshua Lock <josh@linux.intel.com>
Date:   2011-09-02 10:17:52 -0700

    hob: reflect defaultsetup being default distro
    
    If no value is set for DISTRO the defaultsetup policy is used, reflect this
    in the UI by having defaultsetup selected in the Distribution combo when no
    other DISTRO is set.
    
    Signed-off-by: Joshua Lock <josh@linux.intel.com>

2	0	lib/bb/ui/hob.py

commit 02ab0e11d8dd42f5ca440b3d8d2073e23f55113a
Author: Joshua Lock <josh@linux.intel.com>
Date:   2011-09-01 20:38:10 -0700

    hob: use both pre and post files for hob configuration
    
    We need to set various variables *before* parse begins, the simplest way
    to ensure this is to use a pre configuration file for the relevant
    configuration entries.
    
    This series adapts hob to use both pre and post files to store its
    configuration. Any variables which affect initial parse are set in the pre
    file and all others in the post file.
    
    Unfortunately this requires hob related code to have even more hard-coded
    data as to what is relevant but this is the simplest way to solve issues
    with variables and parse order at this time.
    
    Addresses [YOCTO #1281]
    
    Signed-off-by: Joshua Lock <josh@linux.intel.com>

63	31	lib/bb/ui/crumbs/configurator.py
7	4	lib/bb/ui/crumbs/hobeventhandler.py
11	11	lib/bb/ui/crumbs/hobprefs.py
2	2	lib/bb/ui/hob.py

commit 2a7c92bdadf9a86d9ea2ea0c128108e38e0e97e5
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2011-09-02 13:58:54 +0100

    bitbake/event: Allow event handlers to quietly raise SkipPackage events
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	0	lib/bb/event.py

commit 639db8c766cada7180f9447f51303f9b30d7e817
Author: Holger Hans Peter Freyther <zecke@selfish.org>
Date:   2011-06-23 04:50:13 +0800

    fetch2/git: Allow to specify the name of the checkout directory
    
    Signed-off-by: Holger Hans Peter Freyther <holger@moiji-mobile.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	1	lib/bb/fetch2/git.py

commit 8540c09d4e509e3277940464c71174d8a0aca6ab
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2011-08-30 20:39:58 +0000

    bitbake/fetch2/git: Ensure .gitconfig file is ignored
    
    If a user has a ~/.gitconfig file, git fetch --all will reference it. To avoid
    this we should run git fetch with an explicit url telling it to fetch all
    references (which includes tags).
    
    I'm assured this means git won't reference the file, see the discussion on the
    git mailing list (subject Overriding ~/.gitconfig using GIT_CONFIG).
    
    [YOCTO #1134]
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

6	5	lib/bb/fetch2/git.py

commit 30eaef7f50fff855cf8830772a7088dd83a4240e
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2011-08-30 16:46:46 +0000

    bitbake: Correctly handle multiline comments including whitespace
    
    If metadata contains:
    
    """
    
    FOO = "bar"
    """
    
    The variable FOO should get set to "bar" but doesn't due to the empty lines
    be swallowed by the parser and FOO becomming part of the multiline comment.
    This patch corrects that behaviour so FOO is set as expected.
    
    [YOCTO #1377]
    
    This patch fixes parsing of multiline comments so lines ending with \
    behave consistently and we warn users where there is something happening
    they likely don't expect.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

12	4	lib/bb/parse/parse_py/BBHandler.py

commit 85c5b8b3b9c805883537900a46eddb2301ee93f9
Author: Joshua Lock <josh@linux.intel.com>
Date:   2011-08-30 10:55:14 -0700

    ui/crumbs/tasklistmodel: don't add empty entries to COL_BINB
    
    Signed-off-by: Joshua Lock <josh@linux.intel.com>

1	1	lib/bb/ui/crumbs/tasklistmodel.py

commit 82845569c37591f6b097b9db071484f8171a39ea
Author: Joshua Lock <josh@linux.intel.com>
Date:   2011-08-30 09:32:48 -0700

    ui/crumbs/tasklistmodel: loop optimisation in include_item()
    
    Rather than trying to iterate the model to find whether the item is already
    included and then iterate the model again to find the items path attempt to
    find the path first and if the path is found test whether the COL_INC of
    the row is set.
    
    Signed-off-by: Joshua Lock <josh@linux.intel.com>

7	13	lib/bb/ui/crumbs/tasklistmodel.py

commit 12c6f98ba7a68baeeaee00594d910e1be8d55d87
Author: Joshua Lock <josh@linux.intel.com>
Date:   2011-08-30 09:31:05 -0700

    ui/crumbs/tasklistmodel: remove unnecessary check
    
    Cheaper to set COL_INC to True regardless of whether it's already set.
    
    Signed-off-by: Joshua Lock <josh@linux.intel.com>

2	3	lib/bb/ui/crumbs/tasklistmodel.py

commit d2450536269996147a22d6eafbdf72aa62afa4f6
Author: Joshua Lock <josh@linux.intel.com>
Date:   2011-08-30 09:15:35 -0700

    ui/crumbs/tasklistmodel: optimise find_path_for_item()
    
    Rather than calling get_path() for each iterated value use the get_value()
    method to lookup the COL_NAME value and only call get_path() for a match.
    
    This should save some time by potentially removing N-1 calls to get_path()
    from the loop.
    
    Signed-off-by: Joshua Lock <josh@linux.intel.com>

2	4	lib/bb/ui/crumbs/tasklistmodel.py

commit 01ef2ab0d201f3cb3666462558c9cf485592e04f
Author: Joshua Lock <josh@linux.intel.com>
Date:   2011-08-29 17:02:39 -0700

    ui/crumbs/tasklistmodel: prevent packages depending on each other
    
    Don't add y to x's COL_BINB if x is in y's COL_BINB - prevent circular
    dependencies.
    
    Further this patch improves the variable naming to make this code easier to
    follow.
    
    Fixes [YOCTO #1423]
    
    Signed-off-by: Joshua Lock <josh@linux.intel.com>

22	20	lib/bb/ui/crumbs/tasklistmodel.py

commit 6ad1103b5fd592afa9ea03ef5a0d706604cc0e0f
Author: Joshua Lock <josh@linux.intel.com>
Date:   2011-08-29 16:29:06 -0700

    ui/crumbs/tasklistmodel: don't add same item to binb column more than once
    
    In the same vein as a similar, earlier, patch where I missed the second
    loop which modifies the binb column.
    
    Fixes [YOCTO #1420]
    
    Signed-off-by: Joshua Lock <josh@linux.intel.com>

3	2	lib/bb/ui/crumbs/tasklistmodel.py

commit 6555a77c199f41bf35460138764e03e30c56d29f
Author: Dongxiao Xu <dongxiao.xu@intel.com>
Date:   2011-08-29 15:33:58 +0800

    data_smart.py: make use of expand cache in getVar()
    
    Currently if passing expand=True to getVar() function, it will pass the
    handling to getVarFlag(), which doesn't get any benefit from the expand
    cache.
    
    Call the expand() function separately in getVar() to make use of the
    expand cache, which can decrease the parsing time by 40%.
    (from current 49s to 27s)
    
    Signed-off-by: Dongxiao Xu <dongxiao.xu@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

6	1	lib/bb/data_smart.py

commit 419b52e832f506504778d4d5957d1e77477bb513
Author: Joshua Lock <josh@linux.intel.com>
Date:   2011-08-26 17:19:58 -0700

    ui/crumbs/runningbuild: add a 'Copy' item to the messages right-click menu
    
    Add another item to the right-click menu enabled for log messages to copy
    the message to the clipboard.
    
    Signed-off-by: Joshua Lock <josh@linux.intel.com>

27	9	lib/bb/ui/crumbs/runningbuild.py

commit 5e95098be1c1f92c2d72fb371c94bab31c46cf83
Author: Joshua Lock <josh@linux.intel.com>
Date:   2011-08-26 15:13:33 -0700

    ui/crumbs/tasklistmodel: don't add same item to binb column more than once
    
    Signed-off-by: Joshua Lock <josh@linux.intel.com>

3	2	lib/bb/ui/crumbs/tasklistmodel.py

commit 0423587db09f6f28cf9d801f5657a84157f42dbe
Author: Joshua Lock <josh@linux.intel.com>
Date:   2011-08-23 16:35:05 -0700

    hob: disable some menu entries whilst build is in progress
    
    It doesn't make sense to be able to modify the preferences and add/remove
    layers whilst a build is in progress - disable the relevant menu items once
    the build has started and re-enable them once the user has returned to the
    creation view.
    
    Signed-off-by: Joshua Lock <josh@linux.intel.com>

24	6	lib/bb/ui/hob.py

commit a17334e85869bf78d63df1b2336d68980a0b359f
Author: Joshua Lock <josh@linux.intel.com>
Date:   2011-08-23 16:34:50 -0700

    bb/ui/crumbs/tasklistmodel: fix find_reverse_depends method
    
    This fixes an embarassing typo which meant the method actually returned a
    list of packages which didn't depend on the passed pn.
    
    Signed-off-by: Joshua Lock <josh@linux.intel.com>

1	1	lib/bb/ui/crumbs/tasklistmodel.py

commit 27dcf245abf3805be47894773406392fdf055e48
Author: Joshua Lock <josh@linux.intel.com>
Date:   2011-08-23 16:11:47 -0700

    hob: don't set PARALLEL_MAKE and BB_NUMBER_THREADS based on cpu count
    
    This was actually broken with recent changes as the values were never
    persisted to a file (meaning they were unset on the server at reparse
    despite the UI indicating they were set).
    
    However, I've chosen to remove the 'feature' as pegging a users CPU without
    them asking to use high thread counts seems a little offensive.
    
    Signed-off-by: Joshua Lock <josh@linux.intel.com>

1	3	lib/bb/ui/crumbs/hobprefs.py
3	8	lib/bb/ui/hob.py

commit 0ed281feb6d244d3700da484f4e83394ae394f93
Author: Joshua Lock <josh@linux.intel.com>
Date:   2011-08-24 13:04:23 -0700

    bb/fetch2/git: add checkstatus command
    
    Use git ls-remote to implement checkstatus command for the git fetcher.
    
    Signed-off-by: Joshua Lock <josh@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

8	0	lib/bb/fetch2/git.py

commit 692c2fcead5c82249359ad54d2c7941d087a2eb3
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2011-08-21 10:39:41 -0700

    usermanual: The git fetcher defaults to the git protocol (or file)
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	doc/manual/usermanual.xml

commit 4cc4e318fd6907a4742f327177f321d140385c9e
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2011-08-21 10:38:59 -0700

    fetch2/git: Add rsync as a valid git protocol
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/fetch2/git.py

commit 023edbe6d04f25c7e0e7b615eb06cd3727c665cb
Author: Joshua Lock <josh@linux.intel.com>
Date:   2011-08-18 17:50:22 -0700

    bb/ui/hob: warn and prevent image build if no IMAGE_FSTYPE is set
    
    If IMAGE_FSTYPE is empty and the user has opted to build an image warn
    them and prevent the build.
    
    Fixes [YOCTO #1267]
    
    Signed-off-by: Joshua Lock <josh@linux.intel.com>

16	1	lib/bb/ui/hob.py

commit fc3bb3a4f04f64c6d47c7bf040b7522e9204a458
Author: Joshua Lock <josh@linux.intel.com>
Date:   2011-08-18 17:46:10 -0700

    bb/ui/crumbs/hobprefs: fix setting IMAGE_FSYTPES
    
    We were setting the value as a list when a string is expected
    
    Signed-off-by: Joshua Lock <josh@linux.intel.com>

1	1	lib/bb/ui/crumbs/hobprefs.py

commit 4e101de9034c20dfda0bb851e84f4315335620f6
Author: Joshua Lock <josh@linux.intel.com>
Date:   2011-08-18 17:45:16 -0700

    bb/ui/crumbs/hobeventhandler: fix return values of *_image_output_type
    
    These methods are expected to return lists.
    
    Signed-off-by: Joshua Lock <josh@linux.intel.com>

4	4	lib/bb/ui/crumbs/hobeventhandler.py

commit c969857c7f5963098e6584803eafb4e2be0eea46
Author: Joshua Lock <josh@linux.intel.com>
Date:   2011-08-18 14:45:18 -0700

    bb/ui/hob: fix package only build
    
    Use the models new get_selected_pn method to return a list of PN's for the
    selected items and pass that for a package only build, rather than passing
    a list of package names (which buildTargets can't handle).
    
    Fixes [YOCTO #1385]
    
    Signed-off-by: Joshua Lock <josh@linux.intel.com>

2	1	lib/bb/ui/hob.py

commit cf79424592a81378de5edad11cf6c4f427c94bcc
Author: Joshua Lock <josh@linux.intel.com>
Date:   2011-08-18 14:43:49 -0700

    bb/ui/crumbs/tasklistmodel: track the PN for each entry in the model
    
    Now that we've switched to packages in the model, rather than PN, it makes
    sense to add an extra field to store the PN of the package.
    
    This patch includes a convenience method to retrieve a list of selected PN's.
    
    Signed-off-by: Joshua Lock <josh@linux.intel.com>

18	2	lib/bb/ui/crumbs/tasklistmodel.py

commit e176dcf637da2d0105a4361a46d5df5238e3b8ce
Author: Joshua Lock <josh@linux.intel.com>
Date:   2011-08-18 14:18:46 -0700

    hob: don't try and build if user selects Bake with no selections made
    
    If the user hasn't made any selections inform them that they need to do so
    before clicking Bake.
    
    Fixes [YOCTO #1384]
    
    Signed-off-by: Joshua Lock <josh@linux.intel.com>

13	1	lib/bb/ui/hob.py

commit 91d1f5f5a44c80e6702221509e2e9aadbe05bcc0
Author: Joshua Lock <josh@linux.intel.com>
Date:   2011-08-17 21:39:30 -0700

    bb/ui/crumbs/tasklistmodel: store all binb, not just the first
    
    This makes it easier for the user to determine what the effects of a
    removal may be, further it means we no longer need the find_alt_dependency
    method which could be a fairly time-consuming method depending on the size
    of the contents table.
    
    Partially addresses [YOCTO #1365]
    
    Signed-off-by: Joshua Lock <josh@linux.intel.com>

17	33	lib/bb/ui/crumbs/tasklistmodel.py

commit 70aebebc3867d52e460355667e711c7c6dcd50ce
Author: Joshua Lock <josh@linux.intel.com>
Date:   2011-08-17 20:25:12 -0700

    bb/ui/crumbs/tasklistmodel: remove useless items from dependency list
    
    Ensure the dependency list is uniquified, doesn't include self references
    and further doesn't include -dev references.
    
    Signed-off-by: Joshua Lock <josh@linux.intel.com>

10	2	lib/bb/ui/crumbs/tasklistmodel.py

commit d7768cefcddd59a5102d7e9b67e4416bf8603f55
Author: Joshua Lock <josh@linux.intel.com>
Date:   2011-08-17 20:17:42 -0700

    bb/ui/crumbs/tasklistmodel: more robust checking for substrings
    
    Relying on the count() method of Str to determine whether the string
    contains a substring is error prone purely because the return value doesn't
    strictly convert to a Boolean value.
    To that end take the more pythonic approach of using the in operator (foo
    in bar) to check for the substring.
    Further, add a helper method for the common case of testing whether a pn
    is -native, -cross or virtual/
    
    Signed-off-by: Joshua Lock <josh@linux.intel.com>

17	9	lib/bb/ui/crumbs/tasklistmodel.py

commit 64dfc574c12d882761e4958c8b1881cd47a87e0d
Author: Joshua Lock <josh@linux.intel.com>
Date:   2011-08-16 13:58:24 -0700

    bb/ui/crumbs/runningbuild: hide the progress bar on cache load complete
    
    When we receive the CacheLoadComplete command we need to ensure the
    progress bar is hidden as we can't expect the ParseComplete event, where
    this would usually be done.
    
    This patch makes the Goggle UI usable again.
    
    Signed-off-by: Joshua Lock <josh@linux.intel.com>

1	1	lib/bb/ui/crumbs/runningbuild.py

commit a12da000a8e4138fbdfd77f9c49b11fc69a315e1
Author: Joshua Lock <josh@linux.intel.com>
Date:   2011-08-16 13:56:37 -0700

    bb/ui/crumbs/runningbuild: reduce number of messages after recent msg change
    
    The recent change to the message module to remove custom logging domains
    resulted in an increased number of messages being displayed in the
    running build view, ignore all messages lower than log level INFO.
    
    Signed-off-by: Joshua Lock <josh@linux.intel.com>

2	1	lib/bb/ui/crumbs/runningbuild.py

commit d5abdacaf9ac604ef8d8c1bafb9b30617827cb4f
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2011-08-15 17:29:09 +0100

    Fixup remaining bb.msg.domain users
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/msg.py
10	10	lib/bb/runqueue.py
2	2	lib/bb/taskdata.py
2	2	lib/bb/ui/ncurses.py

commit a1980fc89e45be6fbd4a193aaa8142e8bebcf3f4
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2011-08-15 12:39:38 +0100

    build.py: Fix cut and paste error
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/build.py

commit cb6c07054e8baf94614713ec257c643b22266d75
Author: Joshua Lock <josh@linux.intel.com>
Date:   2011-08-12 17:58:11 -0700

    Ensure only the filtered environment variables are inherited from the OS
    
    The recent change which modified inheritFromOS to use the intial
    environment, rather than the current environment, introduced a bug such
    that variables which had been cleaned from the environment where still set
    in the data store.
    
    This patch changes things such that a list of approved environment
    variables is saved after the environment is cleaned and only the variables
    in this list are inherited in inheritFromOS.
    
    CC: James Limbouris <james.limbouris@gmail.com>
    CC: Chris Larson <clarson@kergoth.com>
    Signed-off-by: Joshua Lock <josh@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	3	bin/bitbake-layers
2	1	lib/bb/cooker.py
8	7	lib/bb/data.py
16	7	lib/bb/utils.py

commit 7627b561cbcb1482b464d69db70f38ea663180f3
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2011-08-12 15:25:58 +0100

    bitbake/msg.py: Drop manually created domain lists
    
    This patch removes the majority of the domain related code from bb.msg
    on the grounds that we now support dynamic creation of logging domains
    so having this hardcoded is just error prone and less flexible. It also
    makes the msg code overly and needlessly complex.
    
    It also removes the bb.msg.debug/note/warn/plain/error functions since
    we might as well remove them rather than try and fix them at this point.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

4	81	lib/bb/msg.py

commit 29afbf10c00b5ccdd8d2c063dda3f3e2b6aa1624
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2011-08-12 15:38:22 +0100

    bitbake-layers: extend show_layers
    
    Make show_layers print layer name, path, and priority in a simple table
    rather than just the value of BBLAYERS.
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

14	1	bin/bitbake-layers

commit 79751524cb1f0388975c6228f8c112e6af80f154
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2011-08-12 12:09:44 +0100

    bitbake-layers: use logger.plain instead of info
    
    The INFO: prefix makes sense in bitbake itself but in bitbake-layers is
    just noise. Changing this exposed the fact that the logger was not being
    set up correctly (which should be done anyway to correctly support
    logging from BitBake), so this has also been fixed.
    
    [RP: Sync with logging changes]
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

20	14	bin/bitbake-layers

commit 62a2e0aa1ac8a459928d1f72783b6ca9c1756350
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2011-08-12 11:40:18 +0100

    bitbake-layers: show help with no command specified
    
    Instead of running show_appends when no command is specified, show the
    default help text. Running show_appends by default made sense previously
    when that was the only real command provided, but now we have several
    useful commands implemented.
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	5	bin/bitbake-layers

commit 84f20eb874e7e0ae59bc76883ba9698b0cfcdb6b
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2011-08-12 11:35:25 +0100

    bitbake-layers: improve default command help
    
    Improve default help output and make unrecognised commands print it out
    rather than just an error.
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

28	8	bin/bitbake-layers

commit 6f624e399ebfa8661b5a39fd8178106c0d73b88e
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2011-08-12 23:24:43 +0100

    bitbake/logging: Overhaul internal logging process
    
    At the moment it bugs me a lot that we only have one effective logging
    level for bitbake, despite the logging module having provision to do
    more advanced things. This patch:
    
    * Changes the core log level to the lowest level we have messages of
      (DEBUG-2) so messages always flow through the core logger
    * Allows build.py's task logging code to log all the output regardless
      of what output is on the console and sets this so log files now
      always contain debug level messages even if these don't appear
      on the console
    * Moves the verbose/debug/debug-domains code to be a UI side setting
    * Adds a filter to the UI to only print the user requested output.
    
    The result is more complete logfiles on disk but the usual output to the
    console.
    
    There are some behaviour changes intentionally made by this patch:
    
    a) the -v option now controls whether output is tee'd to the console.
    
    Ultimately, we likely want to output a message to the user about where the
    log file is and avoid placing output directly onto the console for every
    executing task.
    
    b) The functions get_debug_levels, the debug_levels variable, the
    set_debug_levels, the set_verbosity and set_debug_domains functions are
    removed from bb.msg.
    
    c) The "logging" init function changes format.
    
    d) All messages get fired to all handlers all the time leading to an
    increase in inter-process traffic. This could likely be hacked around
    short term with a function for a UI to only request events greater than
    level X. Longer term, having masks for event handlers would be better.
    
    e) logger.getEffectiveLevel() is no longer a reliable guide to what
    will/won't get logged so for now we look at the default log levels instead.
    
    [YOCTO #304]
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	1	bin/bitbake
2	3	bin/bitdoc
1	1	lib/bb/__init__.py
3	1	lib/bb/build.py
45	29	lib/bb/msg.py
3	2	lib/bb/ui/knotty.py
0	15	lib/bb/utils.py

commit 0175fb834e3564eda226ac291fdd583671b463d1
Author: Denys Dmytriyenko <denys@ti.com>
Date:   2011-08-12 15:57:14 -0400

    lib/bb/providers: make "checking PREFERRED_PROVIDER_%s" a debug message
    
    In verbose mode there are hundreds of these "checking PREFERRED_PROVIDER_%s"
    messages, cluttering the output and obscuring the more important resulting
    "selecting %s to satisfy runtime %s due to %s" messages. Individual "checking"
    lines are more suited for debug mode, similar to "sorted providers for %s
    are: %s", hence convert logger.verbose() to logger.debug().
    
    Signed-off-by: Denys Dmytriyenko <denys@ti.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/providers.py

commit bca739cdf55ba2a1c5e372e512d4f088345f245f
Author: Joshua Lock <josh@linux.intel.com>
Date:   2011-08-12 17:00:16 -0700

    bb/ui/crumbs/tasklistmodel: simplify conditional in include_item
    
    No need to check if the name ends with -native or -cross as path will be
    None in this instance.
    
    Signed-off-by: Joshua Lock <josh@linux.intel.com>

2	5	lib/bb/ui/crumbs/tasklistmodel.py

commit 06abfc9caf7f237a6bb762fb3ae9f3dec99688ca
Author: Joshua Lock <josh@linux.intel.com>
Date:   2011-08-12 16:57:46 -0700

    bb/ui/crumbs/tasklistmodel: make package_model_filter a little safer
    
    Ignore names that include '-cross', rather than just 'cross'
    
    Signed-off-by: Joshua Lock <josh@linux.intel.com>

1	1	lib/bb/ui/crumbs/tasklistmodel.py

commit aeef5a4b3999bd924e89e7738efe24f80ae94fd0
Author: Joshua Lock <josh@linux.intel.com>
Date:   2011-08-12 15:06:06 -0700

    bb/ui/crumbs/tasklistmodel: optimise find_path_for_item
    
    If the item_name contains virtual/, -native or -cross it won't be present
    in the model. Return None early in this circumstance rather than iterating
    the entire model and still returning None.
    
    Signed-off-by: Joshua Lock <josh@linux.intel.com>

5	0	lib/bb/ui/crumbs/tasklistmodel.py

commit 049927e99c8d1db7273fbd179b2614bd2ea9403b
Author: Joshua Lock <josh@linux.intel.com>
Date:   2011-08-12 15:03:51 -0700

    bb/ui/crumbs/tasklistmodel: include package level information
    
    Until now the hob UI has only contained recipe (pn) level targets in the
    data store, this patch switches to including package level information.
    
    This is slightly slower in all model related cases (more entries) but gives
    much more flexibility for image customisation.
    
    Signed-off-by: Joshua Lock <josh@linux.intel.com>

19	21	lib/bb/ui/crumbs/tasklistmodel.py

commit 0c62bbc5fb149c8baccffebd5f17e25d3e7dbf69
Author: Joshua Lock <josh@linux.intel.com>
Date:   2011-08-12 15:01:11 -0700

    bb/crumbs/tasklistmodel: filter nativesdk packages out of views
    
    Signed-off-by: Joshua Lock <josh@linux.intel.com>

1	1	lib/bb/ui/crumbs/tasklistmodel.py

commit b3ad7acebfad3063c3364f4492f53b25bf53cf81
Author: Joshua Lock <josh@linux.intel.com>
Date:   2011-08-11 15:41:47 -0700

    lib/bb/ui/crumbs/hobprefs: fix erroneous save/reparse
    
    We need to unset the reload_required variable once we've triggered a reload
    so that we don't cause a reload each time the preferences dialog is shown and
    dismissed, regardless of whether anything has changed.
    
    Signed-off-by: Joshua Lock <josh@linux.intel.com>

1	0	lib/bb/ui/crumbs/hobprefs.py

commit 2843645755abb736220d7404dc6e853929093ff9
Author: Joshua Lock <josh@linux.intel.com>
Date:   2011-08-10 18:07:23 -0700

    bb/ui/crumbs/configurator: introduce writeConfFile method for all writes
    
    Configuration files are written in several places, this refactors the code
    to use a common method.
    
    Signed-off-by: Joshua Lock <josh@linux.intel.com>

19	27	lib/bb/ui/crumbs/configurator.py

commit c828ba571c3cf27d1bbd65184e287c45ef64de89
Author: Joshua Lock <josh@linux.intel.com>
Date:   2011-08-10 18:09:22 -0700

    bb/ui/crumbs/hobeventhandler: adapt to reset -> reparse change
    
    The API has changed from just a reparse call to a reset call followed by
    a reparse call.
    
    Signed-off-by: Joshua Lock <josh@linux.intel.com>

1	0	lib/bb/ui/crumbs/hobeventhandler.py

commit a98f698fe9f38310024013e58475e6d1447ee154
Author: Joshua Lock <josh@linux.intel.com>
Date:   2011-08-09 18:27:51 -0700

    bb/command|cooker: refactor the reparseFiles logic
    
    Turn the reparseFiles logic into a command to reset the cooker's state
    machine and a noop which triggers a cache rebuild.
    
    The resetCooker command resets the cookers state machine such that a cache
    update will be triggered by any async command which requires the cache.
    The reparseFiles command remains as a noop async command that has the
    needcache property set to True so that when called it ensures the cache is
    built.
    
    Patch from Richard with the addition of removing the force parameter from
    the updateCache method.
    
    CC: Richard Purdie <richard.purdie@linuxfoundation.org>
    Signed-off-by: Joshua Lock <josh@linux.intel.com>

7	0	lib/bb/command.py
6	3	lib/bb/cooker.py

commit 6c382c2ee7740a5e78b4135648870e5c181ec23f
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2011-08-10 15:07:45 +0000

    bitbake/usermanual: Update to be more in sync with bitbake codebase
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

108	28	doc/manual/usermanual.xml

commit e7ade6dcd646b478df79f968934a0edcb63254f7
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2011-08-10 13:15:38 +0000

    bitbake: Fix -e when used with -b option
    
    When using the -e and -b options together an expection was occuring.
    This was due to incorrect initialisation and this patch adds in the
    correct initialisation calls.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

6	0	lib/bb/cooker.py

commit cc4158db215493ac270e27f92d977bcbe337f3db
Author: Joshua Lock <josh@linux.intel.com>
Date:   2011-08-10 17:57:29 -0700

    bb/cache: rename confusing variable
    
    The bNeedUpdate variable doesn't reflect its purpose, and doesn't match
    coding style (type encoded in variable name, camel case) - rename to
    cache_ok.
    
    Signed-off-by: Joshua Lock <josh@linux.intel.com>

3	3	lib/bb/cache.py

commit 396bbc220604c19ced4add30dd17f7f22d5e0022
Author: Joshua Lock <josh@linux.intel.com>
Date:   2011-08-09 17:21:44 -0700

    bb/ui/crumbs/tasklistmodel: don't include an item in its own depends
    
    This causes the simple removal algorithm to perform needless circular logic
    
    Signed-off-by: Joshua Lock <josh@linux.intel.com>

3	0	lib/bb/ui/crumbs/tasklistmodel.py

commit 93bae8f223cdeb7b7e31c309b5d785b97ae1c2ac
Author: Joshua Lock <josh@linux.intel.com>
Date:   2011-08-09 17:19:33 -0700

    bb/ui/crumbs/tasklistmodel: correctly uniquify dependency list
    
    Fix thinko - the squish method returns a uniquified list, it doesn't modify
    the list in place. Therefore the call to squish() was useless as its return
    value was never assigned.
    
    Signed-off-by: Joshua Lock <josh@linux.intel.com>

2	1	lib/bb/ui/crumbs/tasklistmodel.py

commit ba9f2fe496eec0a221b563ffc9bb76eca592192f
Author: Joshua Lock <josh@linux.intel.com>
Date:   2011-08-09 11:09:38 -0700

    bb/ui/crumbs/tasklistmodel: fix some typos and add comments to mark()
    
    Two similarly named variables in the mark() method resulted in the wrong
    variable being used in a couple of places. This patch adresses this in
    several ways:
    1) Renames the variables to be less similar
    2) Uses the correct variables
    3) Adds some coments to document the methods intent
    
    Partially addresses [YOCTO #1355]
    
    Signed-off-by: Joshua Lock <josh@linux.intel.com>

15	7	lib/bb/ui/crumbs/tasklistmodel.py

commit 705d14d1e1108e0544c7eab827f1242f0839add9
Author: Joshua Lock <josh@linux.intel.com>
Date:   2011-08-09 09:23:36 -0700

    bb/cooker: only emit ConfigFilePathFound for files which were parsed
    
    When the requested configuration file is found on disk check the
    against the configuration files in __depends/__base_depends to ensure the
    file was parsed before emitting the ConfigFilePathFound event.
    If the requested file wasn't parsed just return (and don't emit).
    
    Fixes [YOCTO #1246]
    
    Signed-off-by: Joshua Lock <josh@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

26	2	lib/bb/cooker.py

commit b3e924297d670963714343d02f7898798fec84fd
Author: Yu Ke <ke.yu@intel.com>
Date:   2011-08-09 17:17:00 +0800

    fetcher2: show warning message when checksum is mismatch
    
    Currently, if checksum mismatch, fetcher will try mirror,
    and if mirror fetching fail, it will show error "Unable
    to fetch URL xxx from from any source" which actually
    hide the real reason and make user confuse.
    
    so showing warning message will make it more clear.
    
    Fix [YOCTO #1256]
    
    Signed-off-by: Yu Ke <ke.yu@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/fetch2/__init__.py

commit 3ad3a53545b37ee8b26b22f4a0e00b19615b449a
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2011-08-09 12:34:11 +0100

    bitbake/ui/knotty: Ensure previous failures aren't masked by a final successful command
    
    When running bitbake in -k mode, the last command might succeed but we
    still need to preserve any previous failure codes.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	1	lib/bb/ui/knotty.py

commit 4d4e01aa3e38d809617e8c1bbaa081182a2308a0
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2011-08-09 12:29:17 +0100

    bitbake/ui/knotty: Ensure 'No Provider' errors set an exit code
    
    If a No Provider error is shown we need to set the exit code to
    show an error occured too.
    
    [YOCTO #1322]
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	0	lib/bb/ui/knotty.py

commit c3827690b9ba3625d1df32d9517efbe13d7d9a1e
Author: Jessica Zhang <jessica.zhang@intel.com>
Date:   2011-08-08 14:13:57 -0700

    bb/ui/hob: Restore toolchain relevant preference settings for build
    
    Fixes [#YOCTO 1354]
    
    Signed-off-by: Jessica Zhang <jessica.zhang@intel.com>
    Signed-off-by: Joshua Lock <josh@linux.intel.com>

2	0	lib/bb/ui/hob.py

commit 46953d3b4595667935d43fe7b20264ae0efd1bdf
Author: Joshua Lock <josh@linux.intel.com>
Date:   2011-08-05 17:13:21 -0700

    bb/ui/hob: move some code around to avert a race
    
    The data-generated and model-updated signals are different, the model
    should only be accessed *after* the model-updated signal. Move code
    setting the image combo's backing model to the model-updated callback to
    ensure the combo is accurately set when changing the machine with an
    image selected.
    
    Signed-off-by: Joshua Lock <josh@linux.intel.com>

8	7	lib/bb/ui/hob.py

commit 0ed58f28e869cceeefa930a3f1f46c5f3e9ffe21
Author: Joshua Lock <josh@linux.intel.com>
Date:   2011-08-05 16:12:12 -0700

    bb/ui/crumbs/tasklistmodel: prevent hang when removing item
    
    It's possible to trigger an infinite recursion when removing a package
    where many of the dependencies share their dependencies. Prevent this by
    keeping a list of removed item names and only removing the item when it's
    not in the list.
    
    Addresses [YOCTO #1319]
    
    Signed-off-by: Joshua Lock <josh@linux.intel.com>

3	1	lib/bb/ui/crumbs/tasklistmodel.py

commit 5cacdc4f1641eda1b5707c96f7c40924a9db6174
Author: Joshua Lock <josh@linux.intel.com>
Date:   2011-08-04 15:40:51 -0700

    bb/cooker: mark parsed conf files as potential cache invalidators
    
    The include parameter to _parse() tells the parser whether to include the
    file in __base_depends, the contents of which have their mtime tested to
    invalidate the cache when they have changed.
    
    As I understand it we would want all of the configuration files that are
    currently handled with the _parse() method to invalidate the cache to set the
    default value of the include parameter to True.
    
    Signed-off-by: Joshua Lock <josh@linux.intel.com>

1	1	lib/bb/cooker.py

commit 3d66d4e64a6352c01662a24ee957eddcd3fde7fc
Author: Joshua Lock <josh@linux.intel.com>
Date:   2011-08-04 15:38:19 -0700

    bb/ui/hob: reset event handler once build complete
    
    The HobEventHandler passes events on to RunningBuild when a build is in
    progress. This patch resets the HobEventHandler to handle events when the
    build is complete.
    
    Signed-off-by: Joshua Lock <josh@linux.intel.com>

2	0	lib/bb/ui/hob.py

commit 5f079f11ca626a4a11ad728c56bde21009ddd7c8
Author: Joshua Lock <josh@linux.intel.com>
Date:   2011-08-03 18:12:32 -0700

    bb/ui/hob: be clear that the image contents are an estimate
    
    Partially addresses [YOCTO #1263]
    
    Signed-off-by: Joshua Lock <josh@linux.intel.com>

19	3	lib/bb/ui/hob.py

commit bb2609ba00db11b445e0af1921744b725fe96065
Author: Joshua Lock <josh@linux.intel.com>
Date:   2011-08-03 12:38:41 -0700

    bb/ui/hob: only connect to the changed signal of image_combo once
    
    Signed-off-by: Joshua Lock <josh@linux.intel.com>

7	4	lib/bb/ui/hob.py

commit 110d507c69c756657393809f57443b88841ad091
Author: Joshua Lock <josh@linux.intel.com>
Date:   2011-08-03 12:15:42 -0700

    bb/ui/crumbs/hobeventhandler: use generic loading message once cache loaded
    
    Signed-off-by: Joshua Lock <josh@linux.intel.com>

2	1	lib/bb/ui/crumbs/hobeventhandler.py

commit 2cb561de9b34d0c23939a492c475230f21d87d99
Author: Joshua Lock <josh@linux.intel.com>
Date:   2011-08-03 12:14:30 -0700

    bb/ui/hob: prevent label on progress bar from changing rapidly when loading
    
    Fixes [YOCTO #1240]
    
    Signed-off-by: Joshua Lock <josh@linux.intel.com>

2	2	lib/bb/ui/hob.py

commit a0fb6583222f2d981a69f0dae81b40db6caaa0d5
Author: Joshua Lock <josh@linux.intel.com>
Date:   2011-08-03 11:35:57 -0700

    bb/ui/crumbs/tasklistmodel: fix regex used for loading image recipes
    
    Fixes [YOCTO #1321]
    
    Signed-off-by: Joshua Lock <josh@linux.intel.com>

1	1	lib/bb/ui/crumbs/tasklistmodel.py

commit 28c71e63355ca94402a9049b8a07046e7b460026
Author: Joshua Lock <josh@linux.intel.com>
Date:   2011-08-03 10:39:00 -0700

    bb/ui/hob: fix detection of whether GPLv3 is disabled
    
    Find returns -1 if the substring isn't found, so checking for the
    Truthiness of the return value is insufficient. An INCOMPATIBLE_LICENSE
    value which only includes GPLv3 will cause find to return 0, for example.
    
    Fixes [YOCTO #1320]
    
    Signed-off-by: Joshua Lock <josh@linux.intel.com>

1	1	lib/bb/ui/hob.py

commit 25ec13075855f7e321a9763682a8cd4ca09203cd
Author: Joshua Lock <josh@linux.intel.com>
Date:   2011-08-02 18:12:33 -0700

    bb/ui/crumbs/runningbuild: emit signal when command fails with exit signal
    
    Emit the generic build-complete signal when a command fails with an exit
    signal enabling the UI to update itself accordingly.
    
    Addresses [YOCTO #1265]
    
    Signed-off-by: Joshua Lock <josh@linux.intel.com>

6	0	lib/bb/ui/crumbs/runningbuild.py

commit d790386112b0beb444713a12d766bd4bd3441f56
Author: Joshua Lock <josh@linux.intel.com>
Date:   2011-08-02 17:25:38 -0700

    bb/ui/hob: disable editing in the build messages tree view
    
    Addresses the second part of [YOCTO #1311]
    
    Signed-off-by: Joshua Lock <josh@linux.intel.com>

1	1	lib/bb/ui/hob.py

commit d1d6bfab1789d8c0a4faa109bcc06b3cefe62620
Author: Joshua Lock <josh@linux.intel.com>
Date:   2011-08-02 17:24:35 -0700

    ui/crumbs/runningbuild: add optional readonly mode, default off
    
    In b947e7aa405966262c0614cae02e7978ec637095 Bob started to introduce code
    for a right-click menu, whilst most of the code is non-invasive it does
    enable the editable property of the gtk.TreeView which can be confusing.
    
    This change adds a readonly parameter, defaulting to False, to the
    RunningBuildTreeView which if True will prevent the editable property from
    being set.
    
    CC: Bob Foerster <robert@erafx.com>
    Signed-off-by: Joshua Lock <josh@linux.intel.com>

3	2	lib/bb/ui/crumbs/runningbuild.py

commit 972769e6362ea3cf35c8fb7cdfbb147758d0a2f2
Author: Joshua Lock <josh@linux.intel.com>
Date:   2011-08-02 17:00:19 -0700

    bb/ui/hob: show build messages are displayed in the order they're received
    
    Use the new sequential option of RunningBuild to ensure this.
    
    Fixes the first part of [YOCTO #1311]
    
    Signed-off-by: Joshua Lock <josh@linux.intel.com>

1	1	lib/bb/ui/hob.py

commit b16663e1919fddbf63d0ca7f9ad3ffdc7d1121fd
Author: Joshua Lock <josh@linux.intel.com>
Date:   2011-08-02 16:59:01 -0700

    bb/ui/crumbs/runningbuild: optionally create list entries sequentially
    
    In b947e7aa405966262c0614cae02e7978ec637095 Bob changed the behaviour of
    the RunningBuildModel such that the items are added to the model in a
    non-sequential order.
    
    The messages in the view being listed out of order from how they are
    received is undesirable for users of the hob UI, therefore this patch adds
    an optional sequential parameter to the RunningBuild initialiser which,
    when set to True, will always append new messages so that the order shown
    in the view is that the messages are received in. The parameter defaults to
    to False such that the behaviour added by Bob is preserved.
    
    Partially addresses [YOCTO #1311]
    
    CC: Bob Foerster <robert@erafx.com>
    Signed-off-by: Joshua Lock <josh@linux.intel.com>

21	16	lib/bb/ui/crumbs/runningbuild.py

commit d1f1ebbe504f5567783461946c0eb45b1e923dd8
Author: Joshua Lock <josh@linux.intel.com>
Date:   2011-08-02 14:15:18 -0700

    bb/ui/hob: save changes to bblayers.conf when using Add Layer menu item
    
    Fixes [YOCTO #1283]
    
    Signed-off-by: Joshua Lock <josh@linux.intel.com>

1	0	lib/bb/ui/hob.py

commit 1009ca570a750a00b0e60afcc30ead070c7b310a
Author: Joshua Lock <josh@linux.intel.com>
Date:   2011-07-30 12:19:15 -0700

    hob: remove temporary directory on program shutdown
    
    Move temp directory handling into the HobEventHandler and clean up the
    temporary files on program close.
    
    Fixes [YOCTO #1307]
    
    Signed-off-by: Joshua Lock <josh@linux.intel.com>

21	5	lib/bb/ui/crumbs/hobeventhandler.py
7	8	lib/bb/ui/hob.py

commit 2f7eadfdd710f84a299d6fc7be67ddb089f03ecc
Author: Joshua Lock <josh@linux.intel.com>
Date:   2011-07-28 17:28:00 -0700

    ui/crumbs/layereditor: if layer adding fails show an explanatory dialog
    
    When adding a layer fails try to explain why to the user.
    
    Signed-off-by: Joshua Lock <josh@linux.intel.com>

18	2	lib/bb/ui/crumbs/layereditor.py

commit 906854d75a12c8752efb1e4065eaf1a10b191612
Author: Joshua Lock <josh@linux.intel.com>
Date:   2011-07-28 17:27:03 -0700

    ui/crumbs/configurator: tweak addLayerConf return values
    
    Use different return types when adding failed versus when the layer is
    already enabled.
    
    Signed-off-by: Joshua Lock <josh@linux.intel.com>

5	2	lib/bb/ui/crumbs/configurator.py

commit 15cc4fe5051dcb6ac5915e10228b5f3d3ed845bd
Author: Joshua Lock <josh@linux.intel.com>
Date:   2011-07-28 15:25:10 -0700

    ui/crumbs/hobeventhandler: emit a signal when a command fails
    
    If a CommandFailed event is seen emit a signal with the error message.
    
    Signed-off-by: Joshua Lock <josh@linux.intel.com>

4	1	lib/bb/ui/crumbs/hobeventhandler.py

commit 04dbd80bbc9ffe2a566b8cc488f0feebadcdde60
Author: Joshua Lock <josh@linux.intel.com>
Date:   2011-07-28 15:24:03 -0700

    ui/hob: show error and exit if we receive the fatal-error signal
    
    If we receive the fatal-error signal from the handler display a dialog
    informing the user of an error and displaying the error message. Dismissing
    the dialog quits the application.
    
    Fixes [YOCTO #1279]
    
    Signed-off-by: Joshua Lock <josh@linux.intel.com>

16	0	lib/bb/ui/hob.py

commit b6f6edd5090e933ac97a65f93ea9d1b255fca811
Author: Joshua Lock <josh@linux.intel.com>
Date:   2011-07-28 15:21:14 -0700

    ui/crumbs/hobeventhandler: emit a signal when there's a fatal-error
    
    If the cooker encounters an error we're unable to proceed so emit a signal
    so that UI's can notify the user and exit.
    
    Signed-off-by: Joshua Lock <josh@linux.intel.com>

21	2	lib/bb/ui/crumbs/hobeventhandler.py

commit 7b977ff222d4a318efabd0ca5f37fa03b9acb996
Author: Joshua Lock <josh@linux.intel.com>
Date:   2011-07-28 14:15:35 -0700

    hob: unset busy cursor on exit
    
    Prevent the busy cursor being shown after hob exits if quit is called
    whilst the busy cursor is set.
    
    Signed-off-by: Joshua Lock <josh@linux.intel.com>

5	0	lib/bb/ui/hob.py

commit b1b02d523c6281615b72255774ed455b4cae4847
Author: Joshua Lock <josh@linux.intel.com>
Date:   2011-07-27 16:08:52 -0700

    ui/crumbs/hobeventhandler: remove unused code
    
    Remove some unused variables and methods.
    
    Signed-off-by: Joshua Lock <josh@linux.intel.com>

0	18	lib/bb/ui/crumbs/hobeventhandler.py

commit c9dd2592434338bdddb3cc6f42e760c86fa9e6bb
Author: Joshua Lock <josh@linux.intel.com>
Date:   2011-07-27 17:08:12 -0700

    hob: fix save/restore of toolchain preferences
    
    Add some (namespaced) custom variables to the configuration file for sake
    of this UI.
    
    Signed-off-by: Joshua Lock <josh@linux.intel.com>

8	0	lib/bb/ui/crumbs/configurator.py
13	1	lib/bb/ui/crumbs/hobprefs.py
4	1	lib/bb/ui/hob.py

commit 68b992922bc7148d657a1c706c6acc67812a87c0
Author: Joshua Lock <josh@linux.intel.com>
Date:   2011-07-27 16:10:39 -0700

    hob: more reliable disabling of GPLv3 packages
    
    1. reflect GPLv3's presence in INCOMPATIBLE_LICENSE value in the UI
    
    The hob UI currently only supports GPLv3 as a value for
    INCOMPATIBLE_LICENSE but doesn't properly reflect whether the value is
    already set. This patch rectifies this.
    
    2. don't stomp over other INCOMPATIBLE_LICENSE values when disabling GPLv3
    
    In case the user has other values set for INCOMPATIBLE_LICENSE we don't
    want to overwrite the value, we want to modify it.
    
    Fixes [#1286]
    
    Signed-off-by: Joshua Lock <josh@linux.intel.com>

14	3	lib/bb/ui/crumbs/configurator.py
2	8	lib/bb/ui/crumbs/hobeventhandler.py
18	6	lib/bb/ui/crumbs/hobprefs.py
7	1	lib/bb/ui/hob.py

commit eea5ff9f34bb9b2e29f5fa43deb80d4aa6ef7ddc
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2011-07-25 14:54:43 +0100

    bitbake/providers: list PREFERRED_VERSION candidates when unavailable
    
    If the specified PREFERRED_VERSION is not available then list the
    available versions in the output. (PR is omitted.)
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

12	0	lib/bb/providers.py

commit bb688635c2050da3cbbaa5aa5b00e882887695de
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2011-07-25 14:54:42 +0100

    bitbake/taskdata: fix incorrect usage of rdependees instead of dependees
    
    This looked like a copy-paste error - the code around is dealing with
    depends and not rdepends.
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/taskdata.py

commit 6765218430e31c165888f26fbc75023c89a6eab2
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2011-07-25 14:54:41 +0100

    bitbake: show more information for NoProvider errors
    
    "Nothing PROVIDES" errors often come up when a recipe has been skipped
    for some reason, and therefore it is useful to print out that reason
    information when showing the error so that the user understands why the
    error has occurred.
    
    Given that we already feed the reason information into the skiplist for
    various situations (COMMERCIAL_LICENSE, COMPATIBLE_MACHINE etc.) this
    should now output a useful error message for skipped recipes.
    
    Fixes [YOCTO #846], [YOCTO #1127]
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	1	lib/bb/cache.py
4	2	lib/bb/cooker.py
2	1	lib/bb/event.py
23	5	lib/bb/taskdata.py
3	0	lib/bb/ui/knotty.py

commit fb47c7452455f3f8d943b21dd61300ec55eea141
Author: Jessica Zhang <jessica.zhang@intel.com>
Date:   2011-07-26 17:18:20 -0700

    ui/crumbs/hobprefs: trigger reparse when package format changed
    
    reload_data after package format change to make the change take effects in
    next build.
    
    Fixes [YOCTO #1287].
    
    Signed-off-by: Jessica Zhang <jessica.zhang@intel.com>
    Signed-off-by: Joshua Lock <josh@linux.intel.com>

1	0	lib/bb/ui/crumbs/hobprefs.py

commit 4f9a6f6f43cf2ef38115285897fbbde01964e892
Author: Joshua Lock <josh@linux.intel.com>
Date:   2011-07-26 17:50:45 -0700

    cooker: populate rdepends-pkg in generatePkgDepTreeData
    
    The rdepends-pkg field of the generated depend_tree model was not populated
    in the original implementation of this method, this series adds in the
    loop to populate the rdepends-pkg column of the model.
    
    Signed-off-by: Joshua Lock <josh@linux.intel.com>

3	0	lib/bb/cooker.py

commit 58036a79cb79d1dff307e2cfed0e684493178507
Author: Joshua Lock <josh@linux.intel.com>
Date:   2011-07-26 17:44:34 -0700

    hob: fix loading customised image recipe
    
    The signal handler of the 'Base image' combo was still connected during load
    such that updating the UI to reflect the loaded base image triggered a change
    of the model. Fix this by disconnecting the signal handler when updating the
    displayed 'Base image'.
    
    Fixes [YOCTO #1282]
    
    Signed-off-by: Joshua Lock <josh@linux.intel.com>

1	1	lib/bb/ui/crumbs/tasklistmodel.py
6	0	lib/bb/ui/hob.py

commit 1e1055262450de994202fc3e5943b8b19f628681
Author: Joshua Lock <josh@linux.intel.com>
Date:   2011-07-25 20:32:53 -0700

    ui/crumbs/tasklistmodel: work around overly aggressive package removal
    
    The mark() method, which removes dependent and rdependent items, is overly
    aggressive removing items which are actually required by user selected
    items and then causing a removal of those items. Because the data
    structures used are not fine grained enough to do more intelligent
    dependency tracking the simplest "fix" is to track removals which are
    marked as "User Selected" and re-add those (and therefore their
    dependencies) once the aggressive removal is completed.
    
    Because the aggressive removal already ignores images and tasks this should
    make the removal behave as expected though certainly leaves area for
    improvement in future.
    
    Fixes [YOCTO #1280].
    
    Signed-off-by: Joshua Lock <josh@linux.intel.com>

22	3	lib/bb/ui/crumbs/tasklistmodel.py

commit 2650be190afc05f9472aca8b11af99205a342838
Author: Jessica Zhang <jessica.zhang@intel.com>
Date:   2011-07-25 11:17:02 -0700

    ui/crumbs/tasklistmodel: fix loading a saved recipe
    
    use the correct variable userpkgs instead of packages during reload saved
    bb file that contains user customization.
    
    Fixes [YOCTO #1289]
    
    Signed-off-by: Jessica Zhang <jessica.zhang@intel.com>
    Signed-off-by: Joshua Lock <josh@linux.intel.com>

1	1	lib/bb/ui/crumbs/tasklistmodel.py

commit 79bdd501075ff5164a8ee673a6a2a0e402978ae5
Author: Joshua Lock <josh@linux.intel.com>
Date:   2011-07-25 19:44:57 -0700

    ui/crumbs/tasklistmodel: don't iterate whole model in find_alt_dependency()
    
    The method needs to find an included item anyway so rather than iterating
    the entire model and checking the included status of each entry iterate
    over the contents gtk.TreeFilter.
    
    Signed-off-by: Joshua Lock <josh@linux.intel.com>

9	10	lib/bb/ui/crumbs/tasklistmodel.py

commit 812ead4900714545850698d8ce29194f4ee8db0e
Author: Joshua Lock <josh@linux.intel.com>
Date:   2011-07-20 16:51:21 -0700

    ui/crumbs/tasklistmodel: handle items added in by base image being removed
    
    When building an image based on an existing image we need to correctly
    handle removals from that images package set. Do so by testing if any of
    the items brought in by the base image are removed and, if so, building
    an image from scratch with all of the selected packages included.
    
    Fixes [YOCTO #1232]
    
    Signed-off-by: Joshua Lock <josh@linux.intel.com>

15	1	lib/bb/ui/crumbs/tasklistmodel.py

commit 05c82da31a69c910e72b58b07afcd9fca8c55479
Author: Joshua Lock <josh@linux.intel.com>
Date:   2011-07-20 15:35:29 -0700

    ui/hob: enable building an image with minimal contents
    
    This patch enables a user to build a rootfs containing only the selected
    packages without having to have first selected a 'Base image'.
    
    Fixes [YOCTO #1239]
    
    Signed-off-by: Joshua Lock <josh@linux.intel.com>

12	2	lib/bb/ui/crumbs/tasklistmodel.py
18	5	lib/bb/ui/hob.py

commit 65819447ccc96ae2af8d42cf3a31769ef3d2d26e
Author: Joshua Lock <josh@linux.intel.com>
Date:   2011-07-19 16:06:32 -0700

    ui/hob: Force the 'Base image combo' to be drawn correctly
    
    As the combo is created before its backing model it's common for the combo to
    be drawn at its minimum size and then grow the first time the user activates
    it. This slight ugly patch forces the combo to be resized as soon as the
    model is associated so that by the time the user interacts with the widget it
    is less likely to change size.
    
    Signed-off-by: Joshua Lock <josh@linux.intel.com>

4	0	lib/bb/ui/hob.py

commit 105bfe3562235fb586be4b4179bb34b2e94ef234
Author: Joshua Lock <josh@linux.intel.com>
Date:   2011-07-18 16:23:35 -0700

    ui/hob: change wording in build complete dialog
    
    The 'View Log' button is potentially confusing to existing users of the
    system who may be expecting to be shown the on disk logs of the build.
    Instead use 'View Messages'.
    
    Addresses [YOCTO #1222]
    
    Signed-off-by: Joshua Lock <josh@linux.intel.com>

2	2	lib/bb/ui/hob.py

commit d947f9880c2205be66fbd61cf7d3728275979a56
Author: Joshua Lock <josh@linux.intel.com>
Date:   2011-07-18 16:22:18 -0700

    ui/hob: don't offer to show built output if build fails
    
    The link to open the deploy directory should only be shown if the build
    completed succesfully.
    
    Signed-off-by: Joshua Lock <josh@linux.intel.com>

7	3	lib/bb/ui/hob.py

commit 5840d59098141e773c12bea8ed8d9f4f1a706132
Author: Joshua Lock <josh@linux.intel.com>
Date:   2011-07-15 10:30:48 -0700

    ui/hob: switch from buildFile to buildTargets for custom image builds
    
    We need to use the buildTargets command to ensure dependencies, such as
    native tools to build the rootfs, are correctly included. This patch
    achieves this by modifying BBPATH and BBFILES to include matches for the
    location of the generated recipe file and reparsing the metadata before
    calling buildTargets.
    
    Fixes [YOCTO #1228]
    
    Signed-off-by: Joshua Lock <josh@linux.intel.com>

18	0	lib/bb/ui/crumbs/configurator.py
49	18	lib/bb/ui/crumbs/hobeventhandler.py
10	14	lib/bb/ui/hob.py

commit 20f7218992cfe18f1d3dcea53f2e5a7bf96346db
Author: Joshua Lock <josh@linux.intel.com>
Date:   2011-07-14 15:43:27 -0700

    ui/crumbs/hobeventhandler: reparse files before running other commands
    
    Integrate reparseFiles into the run_next_command() method rather than calling
    reparseFiles on the server and immediately calling other methods.
    
    Signed-off-by: Joshua Lock <josh@linux.intel.com>

5	3	lib/bb/ui/crumbs/hobeventhandler.py

commit 8b11c68ffcda355d0ba49cfc27790d245192ae24
Author: Joshua Lock <josh@linux.intel.com>
Date:   2011-07-13 16:01:43 -0700

    ui/hob: replace the ugly static command map
    
    The command_map was never a good idea, what's implemented here is a
    fraction less ugly but a significant factor more readable and therefore
    easy to maintain.
    The method implemented in this patch also has the advantage of not being
    static meaning we can determine the desired runCommand arguments
    dynamically at call time.
    
    Signed-off-by: Joshua Lock <josh@linux.intel.com>

34	26	lib/bb/ui/crumbs/hobeventhandler.py
1	1	lib/bb/ui/hob.py

commit d11f9dd33cdcc97a4a937e8bf7e97558d813cadd
Author: Joshua Lock <josh@linux.intel.com>
Date:   2011-07-25 11:48:58 -0700

    cooker: only append files once
    
    A list can contain the same value twice, therefore only append to the
    appendlist for a recipe if the append file is not already in the list.
    
    Signed-off-by: Joshua Lock <josh@linux.intel.com>

2	1	lib/bb/cooker.py

commit de035ad99feb7644f99ad54804bf9f98cc776877
Author: Joshua Lock <josh@linux.intel.com>
Date:   2011-07-14 15:25:59 -0700

    command|cooker: Add reparseFiles command
    
    Add command reparseFiles to reparse bb files in a running cooker instance.
    
    Fixes [YOCTO #1249]
    
    Signed-off-by: Joshua Lock <josh@linux.intel.com>

8	0	lib/bb/command.py
29	19	lib/bb/cooker.py

commit f5653e557b68a27e99a2a6a5c5a31d0ba0b56bcb
Author: Joshua Lock <josh@linux.intel.com>
Date:   2011-07-25 11:29:53 -0700

    bitbake-layers: adapt to cooker change for saved environment
    
    The Cooker requires a copy of the environment mapping, modify
    bitbake-layers to take one and pass it to the cooker.
    
    Signed-off-by: Joshua Lock <josh@linux.intel.com>

4	3	bin/bitbake-layers

commit 21c21fcc5871e81d8d497b6baed605cdd74c4571
Author: Joshua Lock <josh@linux.intel.com>
Date:   2011-07-25 11:27:55 -0700

    data|cooker: use saved environment variables when calling inheritFromOS
    
    Now that we have a pristine copy of the variables available at launch time
    we can use them when looking to inherit the OS's environment.
    
    Signed-off-by: Joshua Lock <josh@linux.intel.com>

1	1	lib/bb/cooker.py
4	4	lib/bb/data.py

commit 3d8647b68a8e66c7b240ed5fed7406e1b78fabf6
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2011-07-25 19:02:48 +0100

    bitbake/utils: 'Fix' bb.utils.contains() behaviour
    
    Currently bb.utils.contains(X, "A", true, false) will return true for substring matches,
    e.g. if X = "ABC". This is not what most users expect from the function.
    
    In the common OE use of this function there is the case of "touchscreen" and "screen" being
    used as independent variables. Whilst it could be argued there isn't a problem in that
    specific case (touchscreens are usually on screens), there is no substring usage of this
    function is OE-Core so this patch changes the behaviour to match only full strings.
    
    It also fixes a bug where duplicate entries would confuse multiple matches, e.g.
    contains(X, ["A", "B"], ...) would match X = "A A" which is clearly wrong.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

6	7	lib/bb/utils.py

commit f0b5d16426b983a67c51c47f3542162108bd4156
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2011-07-25 13:50:38 +0100

    Update version to 1.13.3
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	bin/bitbake
1	1	lib/bb/__init__.py

commit 54c7206165c0e7cfe5f7b243c80461baf5e7dfb1
Author: Joshua Lock <josh@linux.intel.com>
Date:   2011-07-22 10:21:00 -0700

    bitbake|cooker: save a copy of the environment when BitBake is started
    
    Create a data store in the cooker containing the values of the environment
    from when BitBake is launched such that child processes can replicate
    (and/or use values from) the host environment, rather than the cleaned up
    environment that the main BitBake process uses.
    
    Signed-off-by: Joshua Lock <josh@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

4	1	bin/bitbake
9	1	lib/bb/cooker.py

commit 0cbf5dcaf9f67522bd58d868aa01f28e846dfc19
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2011-07-22 18:18:50 +0100

    bitbake-layers: remove unneeded do_EOF
    
    do_EOF is only needed when using the Python cmd class in line-oriented
    mode - we are just sending single commands to it.
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

0	3	bin/bitbake-layers

commit 1548edcd18a78bab74cde39167169f11ba3c4d58
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2011-07-22 18:17:39 +0100

    bitbake-layers: add command help
    
    If you run "bitbake-layers help commandname" it now provides some useful
    help text.
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

31	1	bin/bitbake-layers

commit 86adaca6ce959ad5e908c394625bc9880f3c0216
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2011-07-22 17:03:55 +0100

    bitbake-layers: check for errors before parsing
    
    Don't always parse on initialisation - instead check for errors and then
    parse when we know we need to. Avoids keeping the user waiting.
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

9	1	bin/bitbake-layers

commit 8ba4d0e98401cdb808f727703913ad8ba87f8e71
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2011-07-22 16:26:18 +0100

    adjust comments/messages for default server change
    
    Default server is process, adjust comments and messages accordingly.
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	3	bin/bitbake

commit c470f3f36aef24c46d9722593422286340be296b
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2011-07-22 16:38:50 +0100

    bitbake/cooker: show a warning when -b is specified
    
    Too many people are using -b because they think it is the normal way of
    specifying a target to be built, and then get confused when the build
    fails due to a missing dependency; so show a warning about dependencies
    not being handled when this option is used.
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

4	0	lib/bb/cooker.py

commit b133b2e2dd5bcde705397eb38fa20a5c4da6e3b3
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2011-07-22 16:22:54 +0100

    add note to -b option indicating no dependency handling
    
    The -b option doesn't handle dependencies so note this in the help.
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	bin/bitbake

commit f7f68847dd165f2ad0f39011db4ebfef3ae73f42
Author: Joshua Lock <josh@linux.intel.com>
Date:   2011-07-22 21:47:00 -0700

    hob: rework image output type setting
    
    The preferences UI to set the image output type only supported setting a
    single value whereas it's common practice, particularly for those making
    use of the ADT, to set multiple values. This is also the default in Poky.
    
    This reworked preferences UI dynamically generates check boxes for each
    available image type and sets an appropriate string representing all image
    types when checkboxes are toggled.
    
    Includes fixes for [YOCTO #1273]
    
    Signed-off-by: Joshua Lock <josh@linux.intel.com>

4	2	lib/bb/ui/crumbs/configurator.py
19	2	lib/bb/ui/crumbs/hobeventhandler.py
30	20	lib/bb/ui/crumbs/hobprefs.py
3	2	lib/bb/ui/hob.py

commit 5f774ef02743c09d181395f15fc9262e7a67ef5c
Author: Joshua Lock <josh@linux.intel.com>
Date:   2011-07-22 17:07:37 -0700

    ui/crumbs/hobprefs: tweak the package format tooltip
    
    Signed-off-by: Joshua Lock <josh@linux.intel.com>

2	1	lib/bb/ui/crumbs/hobprefs.py

commit 31274e78eab502f5eb9f6079897644b535d31dd1
Author: Joshua Lock <josh@linux.intel.com>
Date:   2011-07-22 11:40:15 -0700

    ui/crumbs/hobprefs: set higher arbitrary limit on threads & parallelism
    
    We don't have a good handle on a sane cap value so just set it to an
    arbitrary, but reasonably high, number. Once we have some more numbers on
    values for number of threads and make parallelism we can integrate the
    algorithm into the GUI.
    
    Addresses [YOCTO #1266]
    
    Signed-off-by: Joshua Lock <josh@linux.intel.com>

6	1	lib/bb/ui/crumbs/hobprefs.py

commit 9c59baa4da3c863ebc412a56ffd8dbd7a8ffeb60
Author: Joshua Lock <josh@linux.intel.com>
Date:   2011-07-22 11:32:27 -0700

    hob: only add new layer's to the UI
    
    If a user added the same layer more than once the underlying bblayers.conf
    file would not have multiple entries but the UI would show an entry for
    the layer for each time it was added. This patch changes the Configurator
    to return None values if the layer wasn't added to bblayers.conf and the
    LayerEditor to only update the UI if non-None values are returned.
    
    Fixes [YOCTO #1275]
    
    Signed-off-by: Joshua Lock <josh@linux.intel.com>

3	1	lib/bb/ui/crumbs/configurator.py
3	2	lib/bb/ui/crumbs/layereditor.py

commit 117fb14b93086660ce3f853964536920f916e060
Author: Joshua Lock <josh@linux.intel.com>
Date:   2011-07-19 16:04:38 -0700

    ui/hob: if the user clicks Stop a second time only offer 'Force Stop'
    
    Fixes [YOCTO #1264]
    
    Signed-off-by: Joshua Lock <josh@linux.intel.com>

26	12	lib/bb/ui/hob.py

commit 4f86f5763ecf7f3a9673a9b18e96042e9387699b
Author: Joshua Lock <josh@linux.intel.com>
Date:   2011-07-08 11:55:59 -0700

    ui/hob: clear the search entry when resetting
    
    When resetting and clearing all selections the searched for term is no
    longer the selected row in the packages list, clear the search entry to
    prevent cognitive disconnect.
    
    Signed-off-by: Joshua Lock <josh@linux.intel.com>

7	6	lib/bb/ui/hob.py

commit 80f8d796392cbf3c54149c06347c35f871fc2d79
Author: Joshua Lock <josh@linux.intel.com>
Date:   2011-07-07 15:06:05 -0700

    ui/crumbs/tasklistmodel: don't show native and cross recipes
    
    Addresses [YOCTO #1224]
    
    Signed-off-by: Joshua Lock <josh@linux.intel.com>

3	0	lib/bb/ui/crumbs/tasklistmodel.py

commit 453d65df6675f38b57f92d8a1b65aa3f78abe4f0
Author: Joshua Lock <josh@linux.intel.com>
Date:   2011-07-22 10:36:11 -0700

    hob: refer to tasks as Package Collections
    
    Signed-off-by: Joshua Lock <josh@linux.intel.com>

1	1	lib/bb/ui/hob.py

commit 0b9dee799cfe2229ec62c257dda36bd6c15d34a9
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2011-07-22 15:41:07 +0100

    bitbake/cache: allow class names with arguments to be specified
    
    This ensures we understand e.g. "virtual:multilib:lib64:pn" for multilib.
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	2	lib/bb/cache.py

commit de7a2b91512bb3ab058f5eb5cd188acd2b8a2220
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2011-07-22 15:37:44 +0100

    bitbake/ast: include class name when arguments given in variant
    
    For multilib this produces variants of e.g. "multilib:lib64" instead of
    just "lib64"; however we set BBEXTENDVARIANT to "lib64" and the latter
    will be used when composing filenames for multilib.
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

8	6	lib/bb/parse/ast.py

commit abc67ed6921c98ed581f101ec1acc589fd9ce7e9
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2011-07-11 14:38:50 +0100

    bitbake/utils: Add contains helper function from lib.oe.utils
    
    This function is needed by some of the early .conf setup we need
    to improve the machine/tune files in Openembedded. We need to add
    it here since the location in oe.utils can't be accessed until after
    base.bbclass parses which is too late for our needs.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

14	0	lib/bb/utils.py

commit df55199209ef042e5b1ca04c4df75c7d639b51eb
Author: Liping Ke <liping.ke@intel.com>
Date:   2011-07-21 12:08:58 -0700

    Remove unused target tree data for Hob
    
    Since Hob only needes package dependency information, we can
    create a new version of package information retrieving methods,
    remove task dependency information, so that we can greatly
    reduce data loading time for Hob
    
    Signed-off-by: Liping Ke <liping.ke@intel.com>
    Signed-off-by: Joshua Lock <josh@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

68	21	lib/bb/cooker.py

commit 7d10bd13563ed592c4953fa9c38370a13f18fb3f
Merge: 205b52bf b838e0f3
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2011-07-21 22:36:01 +0100

    Merge remote-tracking branch 'origin/master'

commit b838e0f3a1b481c295f66f5c9f561fa4d51de673
Author: Chris Larson <chris_larson@mentor.com>
Date:   2011-07-21 13:23:19 -0700

    event: fix the event display order when exiting early
    
    It was displaying the log messages in LIFO order, which isn't what we
    expect to see. Thankfully this only occurred during an early abort (e.g.
    config file parsing error), but those are the cases where it's very
    important to see accurate messages, to diagnose.
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

1	2	lib/bb/event.py

commit 205b52bfc7f28af0c50fef1f741fae6af16fb0dc
Author: Joshua Lock <josh@linux.intel.com>
Date:   2011-07-20 16:44:06 -0700

    ui/crumbs/tasklistmodel: ignore tasks and images when marking dependencies
    
    When calculating what dependencies are affected by the removal of an item
    we should ignore images and tasks as they are not constructs which make
    sense in the GUI.
    E.g: if we don't ignore tasks and remove opkg from an image based on
    core-image-minimal the fact that opkg was brought in by task-core results
    in task-core and all of the packages it brought in being removed and,
    eventually, an empty image.
    
    Signed-off-by: Joshua Lock <josh@linux.intel.com>

17	4	lib/bb/ui/crumbs/tasklistmodel.py

commit 03baee9e0a7fc15fc6c226c07c0f50df136ac5b0
Author: Joshua Lock <josh@linux.intel.com>
Date:   2011-07-19 16:21:24 -0700

    ui/hob: don't crash if PARALLEL_MAKE doesn't include a space
    
    Use string.strip() as a much safer method of turning the -j value into an int
    
    Fixes [YOCTO #1244]
    
    Signed-off-by: Joshua Lock <josh@linux.intel.com>

1	1	lib/bb/ui/hob.py

commit bac689fc34ea55c062d60ef249b79faa35f546a1
Author: Joshua Lock <josh@linux.intel.com>
Date:   2011-07-18 16:21:01 -0700

    ui/crumbs/configurator: write new lines after new entries
    
    New entries written to a configuration file should be on separate lines,
    ensure this is the case by appending a newline to each written variable.
    
    Signed-off-by: Joshua Lock <josh@linux.intel.com>

1	1	lib/bb/ui/crumbs/configurator.py

commit afb87a809962b756f8282c9e9fdf9b15cdb9192b
Author: Joshua Lock <josh@linux.intel.com>
Date:   2011-07-15 18:06:41 -0700

    ui/hob: add more guidance to the stop dialog
    
    This patch adds explanation of the different options when asking the user
    to choose between Stop and Force Stop so they can make an informed choice.
    
    Fixes [YOCTO #1223]
    
    Signed-off-by: Joshua Lock <josh@linux.intel.com>

8	1	lib/bb/ui/hob.py

commit 2d05ce4f527daa905ed64485029ebeb2b349daa6
Author: Joshua Lock <josh@linux.intel.com>
Date:   2011-07-15 10:15:14 -0700

    ui/crumbs/tasklistmodel: fix saving recipes
    
    After switching to dynamically finding the relative path for the recipe
    file it's no longer to append .bb when inserting the require line into the
    saved recipe.
    
    Fixes [YOCTO #1247]
    
    Signed-off-by: Joshua Lock <josh@linux.intel.com>

1	2	lib/bb/ui/crumbs/tasklistmodel.py

commit 0ab099f6ff4cc4e92484282d2dee442e55471e0c
Author: Joshua Lock <josh@linux.intel.com>
Date:   2011-07-13 18:19:35 -0700

    ui/crumbs/hobprefs: add missing import
    
    glib.idle_add is used so the glib module must be imported
    
    Fixes [YOCTO #1248]
    
    Signed-off-by: Joshua Lock <josh@linux.intel.com>

1	0	lib/bb/ui/crumbs/hobprefs.py

commit 09a9146262d58dfe4a2ea4270026b90ae33f6c91
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2011-07-20 22:51:23 +0100

    parse/ConfHandler: Fix multiline variable corruption
    
    When parsing multiline variables in conf files, the last character can
    be accidentally removed. s2 contains new data read from the file which
    may or may not end with the continuation character. It makes sense to
    let the next loop iteration strip this if needed.
    
    We don't often use multiline expressions in .conf files which is why I'd
    imagine we haven't noticed this before. Most variables are quoted and
    its the closing quotation which often disappears.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/parse/parse_py/ConfHandler.py

commit 807fb0b3bbad5163fdab24d379c2deba8f0b4f13
Author: Christopher Larson <kergoth@gmail.com>
Date:   2011-07-19 13:05:53 -0700

    cache: fix remnant broken 'info' reference from recent cache changes
    
    Signed-off-by: Christopher Larson <kergoth@gmail.com>

1	1	lib/bb/cache.py

commit 5c8eeefc79455f058dda8f04cf4c12dc5418e00f
Author: Joshua Lock <josh@linux.intel.com>
Date:   2011-07-13 09:06:41 -0700

    cooker: only return *Found events if something was actually found
    
    The cooker methods which fire FooBarFound style events should only fire the
    event when an item was actually found, rather than each time the method
    is called.
    
    Fixes [YOCTO #1219]
    
    Signed-off-by: Joshua Lock <josh@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

8	4	lib/bb/cooker.py

commit 4803c6d3d1db31105d98a7f71596875333db0dc5
Author: Joshua Lock <josh@linux.intel.com>
Date:   2011-07-12 14:48:59 -0700

    ui/crumbs/tasklistmodel: fix automatic removal of orphaned items
    
    The sweep_up() method intends to remove all packages with an empty brought in
    by column, this patch changes the implementation to be more reliable.
    
    Each time a removal is triggered we begin interating the contents model again
    at the beginning, only once the contents model has been iterated from start
    to finish without any removals can we be certain that there will be no more
    orphaned items.
    
    Fixes [YOCTO #1218]
    
    Signed-off-by: Joshua Lock <josh@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

19	15	lib/bb/ui/crumbs/tasklistmodel.py

commit 570405f2f5a3976b308ef825ef477fb5cb6ee804
Author: Joshua Lock <josh@linux.intel.com>
Date:   2011-07-12 14:48:58 -0700

    ui/crumbs/tasklistmodel: update brought in by column when possible
    
    When a package is orphaned we were not correctly updating the brought-in-by
    column if a later package additon would have brought that package in as a
    dependency. This patch ensures that orphan packages are correctly re-parented
    when appropriate.
    
    Partially addresses [YOCTO #1218]
    
    Signed-off-by: Joshua Lock <josh@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

10	4	lib/bb/ui/crumbs/tasklistmodel.py

commit b631e922257de52bf2247c01152d9856c870e7d0
Author: Yu Ke <ke.yu@intel.com>
Date:   2011-07-13 17:08:39 +0800

    fetcher2: retry mirror if upstream checksum mismatch
    
    This patch is for [YOCTO #1085] fix.
    
    If the upstream fails a checksum, retry from the MIRROR before giving up.
    This will add more robust fetching if an upstream serves a bad file or webpage.
    
    fetching of distcc prior to the move from samba -> googlecode is a good example
    of this.
    
    Signed-off-by: Yu Ke <ke.yu@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

20	11	lib/bb/fetch2/__init__.py

commit 521909d1350a415d19516aa1710041e30950c7cc
Author: Lianhao Lu <lianhao.lu@intel.com>
Date:   2011-06-14 15:12:16 +0800

    bitbake cooker/ui: handle cmd line parsing result by individual UI.
    
    Changed the return result of "getCmdLineAction" to a dictionary
    {'action', 'msg'} to allow the individual UI decide how to handle the
    cmd line parsing result.
    
    Signed-off-by: Lianhao Lu <lianhao.lu@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

16	18	lib/bb/cooker.py
5	2	lib/bb/ui/depexp.py
5	1	lib/bb/ui/goggle.py
5	1	lib/bb/ui/knotty.py
5	1	lib/bb/ui/ncurses.py

commit 3725602ec53df116dc108b3197a426b86ca43d5f
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2011-07-08 00:30:41 +0100

    fetch2/git: Tweak git fetcher to handling repo updates correctly
    
    Currently the git fetcher can malfunction when branches change in remote
    repositories since whilst the update code updates the "origin" remote,
    this isn't linked to the local heads.
    
    By passing the --mirror option to 'git clone' and 'git remote add',
    linkage between the local heads and remote heads is created with a 1:1
    mapping, hence all the appropriate heads are then updated correctly.
    
    This fixes some issues which have been seen with the Yocto autobuilder
    mirrors.
    
    Signed-off-by: Richard Purdie <richard.purdie@linux-foundation.org>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	2	lib/bb/fetch2/git.py

commit 3412fbd6a16980e0fba7742c32675eea9d77d6c0
Author: Joshua Lock <josh@linux.intel.com>
Date:   2011-07-07 15:43:27 -0700

    lib/bb/ui/hob: don't error when dismissing save as dialog
    
    If the user decides to cancel the save as dialog we should not try and save
    regardless.
    
    Fixes [YOCTO #1220]
    
    Signed-off-by: Joshua Lock <josh@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

14	6	lib/bb/ui/hob.py

commit 737d1bc819b192b4c2caa0482bddb6921b5aac93
Author: Joshua Lock <josh@linux.intel.com>
Date:   2011-07-07 15:43:26 -0700

    lib/bb/hob: fix changing base image
    
    The path is not guaranteed to always point to the same value so do not rely
    on it to change the image contents. Further, when changing the base image
    we should maintain user selections.
    
    Addresses [YOCTO #1225] and fixes [YOCTO #1226]
    
    Signed-off-by: Joshua Lock <josh@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

5	5	lib/bb/ui/hob.py

commit f3fbc97471961042e5eb8224dc07dcc04293efcf
Author: Joshua Lock <josh@linux.intel.com>
Date:   2011-07-07 15:43:25 -0700

    ui/crumbs/tasklistmodel: fix reset method
    
    The reset() method only touched the contents sub-model, which does not
    include the selected image(s). This patch ensures that reset correctly unsets
    any image selection when called.
    
    Further we re-initialise the COL_IMG column when resetting packages.
    
    Signed-off-by: Joshua Lock <josh@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

16	4	lib/bb/ui/crumbs/tasklistmodel.py

commit c7a9ef70ba91d47d53074e8d78cbc52f396144a7
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2011-07-06 18:02:00 +0100

    bitbake/process.py: Ensure queued UI events are queued right before we add our own handler
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	3	lib/bb/server/process.py

commit 54fe91fe96aaae47c40077c5f441c79da71da777
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2011-07-06 17:54:49 +0100

    cache.py: Ensure additional .bbappend files are accounted for
    
    Currently if a user adds a new .bbappend file to the system, the cache still
    thinks the cached data is valid. This code fixes that to ensure additions and
    changed in append application order are accounted for.
    
    [YOCTO #1091]
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

12	5	lib/bb/cache.py
1	1	lib/bb/cooker.py

commit c8f46dfcc2f660a9cd52c64515624fad8d66461a
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2011-07-05 16:31:22 +0100

    ui/depexp: If we're parsing zero files we need to ensure the cache progress bar gets hidden
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	3	lib/bb/ui/depexp.py

commit 48e64acaae4a741b9f5630f426fb4e6142755c2c
Author: Joshua Lock <josh@linux.intel.com>
Date:   2011-07-01 15:58:50 -0700

    hob: re-designed interaction and implementation
    
    Highlights include:
    
    * Atempted GNOME HIG compliance
    * Simplified UI and interaction model
    * Sorting and type to find in tree views
    * Preferences dialog to modify local settings
    * Dialog to add and remove layers
    * Search in packages list
    * Save/Load image recipes
    
    The build model has been changed, hob will attempt to build all dependent
    packages of an image and then use the buildFile server method to build the
    created image.
    
    Signed-off-by: Joshua Lock <josh@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

278	0	lib/bb/ui/crumbs/configurator.py
61	0	lib/bb/ui/crumbs/hig.py
172	46	lib/bb/ui/crumbs/hobeventhandler.py
293	0	lib/bb/ui/crumbs/hobprefs.py
136	0	lib/bb/ui/crumbs/layereditor.py
11	1	lib/bb/ui/crumbs/runningbuild.py
248	78	lib/bb/ui/crumbs/tasklistmodel.py
625	299	lib/bb/ui/hob.py

commit 0f45fcab5c724aabb5b2933dfcdf88ebe256cba9
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2011-07-05 14:25:06 +0100

    bitbake-layers: fix error on startup caused by recent cooker change
    
    Fix bitbake-layers "TypeError: 'NoneType' object is not iterable" error on
    startup. Commit f3be8e9a7df13cc11ffc8fc667efaf2db96a7c38 changed to expect
    prefile and postfile to be populated and no longer expects file.
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	1	bin/bitbake-layers

commit 9c2a064ab7fd9b8bcca58dfeb1abfae2555f0088
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2011-07-05 14:25:05 +0100

    bitbake-layers: fix sorting by package name for cooker change
    
    Structure of cooker was changed since the patch for bitbake commit
    edacf98cceb2fe1275042595d3fce6822fa411ca was created - cooker.pkg_pn now
    has string keys, so sort it accordingly.
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	bin/bitbake-layers

commit f5ba7c795df7cbd58124e35970ddc5bd84cbfb8e
Author: Dexuan Cui <dexuan.cui@intel.com>
Date:   2011-07-02 23:15:30 +0800

    bitbake/cooker, bitbake-layers: show the .bbappend files that matches no existing .bb recipe
    
    This patch moves the logic of show_appends_with_no_recipes from bitbake-layers
    into bitbake. By default, a fatal message is printed; we can also define a variable
    BB_DANGLINGAPPENDS_WARNONLY to make the message only a warning(the variables
    could be defined in conf/local.conf with a value "yes", "true" or "1").
    
    Signed-off-by: Dexuan Cui <dexuan.cui@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	20	bin/bitbake-layers
22	0	lib/bb/cooker.py

commit edacf98cceb2fe1275042595d3fce6822fa411ca
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2011-06-29 19:37:41 +0100

    bitbake-layers: fix sorting of show_appends output
    
    Sort packages alphabetically but ensure appends are left in their
    original order (layer priority).
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

6	4	bin/bitbake-layers

commit 296c83cc22ce281223fe91ef84bc89034cd141e7
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2011-06-29 19:37:40 +0100

    bitbake-layers: add command to flatten layers into one
    
    Takes the current layer configuration and builds a "flattened" directory
    containing the contents of all layers, with any overlayed recipes removed
    and bbappends appended to the corresponding recipes. Note that some manual
    cleanup may still be necessary afterwards, in particular:
    
     * where non-recipe files (such as patches) are overwritten (the flatten
       command will show a warning for these)
     * where anything beyond the normal layer setup has been added to
       layer.conf (only the lowest priority layer's layer.conf is used)
     * Overridden/appended items from bbappends will need to be tidied up
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

59	0	bin/bitbake-layers

commit 115b89fa279b64e79da0f72caf7b30965a83fab1
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2011-06-29 19:37:39 +0100

    bitbake/cooker: implement layer dependencies, make priority optional
    
    Implement (optionally versioned) dependencies between layers, and if layer
    priorities are not specified using BBFILE_PRIORITY_layername (now
    optional) then work out the layer priority based on dependencies.
    
    Define LAYERDEPENDS_layername in layer.conf to specify the dependencies
    of a layer (list of layer names, split with spaces in the usual way);
    LAYERVERSION_layername can be defined for each layer allowing specific
    version dependencies to be specified via depname:version in the list of
    dependencies. An error will be produced if any dependency is missing or
    the version numbers do not match exactly (if specified).
    
    Note: default priority if unspecified for a layer with no dependencies is
    lowest defined priority + 1 (or 1 if no priorities are defined).
    
    Addresses [YOCTO #790].
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

70	9	lib/bb/cooker.py

commit f0c2175dc943160e45ebd72fc932dd16ee361bfb
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2011-06-29 19:37:38 +0100

    bitbake-layers: add show_overlayed action
    
    Add a show_overlayed action to list overlayed recipes.
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

10	0	bin/bitbake-layers

commit 370fc603d79f9c34cc23b4b520b685256c23df5d
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2011-06-29 19:37:37 +0100

    bitbake: track 'overlayed' recipes
    
    Recipes that have been 'overlayed' (where there is a recipe in another
    layer where that layer has a higher priority) are now listed within
    cooker.overlayedlist for use in bitbake-layers. This is a dict with
    keys of the topmost (highest priority) recipe file.
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

13	0	lib/bb/cooker.py

commit 32fee2e650dfdd3aa9a7572dad1251e0c24ca34b
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2011-07-05 11:02:04 +0100

    bitbake/ast: Fix ??= vs. ?= handling
    
    As the code stands, setting a variable with ??= could result in a ?=
    variable not overriding it. This patch fixes the issue by allowing
    the ast to make lookups that ignore any ??= set variables.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

4	8	lib/bb/data_smart.py
2	2	lib/bb/parse/ast.py

commit a8246ae5400c23df0d3ee29c36f4d9f257d1e6d1
Author: Joshua Lock <josh@linux.intel.com>
Date:   2011-06-30 23:02:53 -0700

    bitbake: add -R option for loading configuration files after bitbake.conf
    
    Useful if you want to load a configuration file that sets values which may
    also be set in bitbake.conf or one of the files it includes.
    
    Signed-off-by: Joshua Lock <josh@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

4	1	bin/bitbake
10	3	lib/bb/cooker.py

commit 26b0c538ad4f677e0d45a66484c2dca073459282
Author: Joshua Lock <josh@linux.intel.com>
Date:   2011-06-30 23:02:54 -0700

    cooker: switch to new universe target rather than world
    
    When the caller doesn't specify a pkgs list we want to generate the tree of
    all available packages. To do so use the new universe target list.
    
    Signed-off-by: Joshua Lock <josh@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	2	lib/bb/cooker.py

commit 3e38ea4e5748473740821b6e10c8477c08ab45e2
Author: Joshua Lock <josh@linux.intel.com>
Date:   2011-06-30 23:02:55 -0700

    cooker: remove code duplication in non trivial functions
    
    The generateTargetsTreeData() and generateDepTreeData() functions perform
    are essentially the same function only creating slightly different data
    structures. Instead of duplicating non-trivial code drop
    generateTargetsTreeData and instead have an optional boolean argument which
    defaults to False for generateDepTreeData() which has it include the extra
    fields required for the targets tree.
    
    Signed-off-by: Joshua Lock <josh@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

12	44	lib/bb/cooker.py

commit 2a599812a57cb0b964880a6a2b7548423497ea92
Author: Joshua Lock <josh@linux.intel.com>
Date:   2011-06-30 23:02:52 -0700

    cooker|command|event: add new command findFilesMatchingInDir
    
    This command can be used to search each BBPATH for files in the passed
    directory which have a filename matching the supplied pattern.
    
    This is implemented for use from the GUI (to determine the available
    PACKAGE_CLASSES) but has been written so as to be generically useful and
    reusable.
    
    Signed-off-by: Joshua Lock <josh@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

12	0	lib/bb/command.py
23	0	lib/bb/cooker.py
10	0	lib/bb/event.py

commit 22c8600b885faf841795b872d82f68dfb644a26e
Author: Joshua Lock <josh@linux.intel.com>
Date:   2011-06-30 23:02:51 -0700

    command|cooker|event: add findConfigFilePath command
    
    This takes the name of a .conf file and returns the full path to it
    
    Signed-off-by: Joshua Lock <josh@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

10	0	lib/bb/command.py
4	0	lib/bb/cooker.py
8	0	lib/bb/event.py

commit c515b76c3a27d57d5ae8dddf15cc836811b24ee1
Author: Joshua Lock <josh@linux.intel.com>
Date:   2011-06-30 23:02:50 -0700

    cooker: add generic method to locate configuration files
    
    Convert _findLayerConf(self) to _findConfigFile(self, configfile) so that
    the core functionality of the method can be used elsewhere.
    
    Signed-off-by: Joshua Lock <josh@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

7	4	lib/bb/cooker.py

commit d4e4f2ecae96e074b2ab3bb9882037af2e385fdd
Author: Joshua Lock <josh@linux.intel.com>
Date:   2011-06-30 23:02:49 -0700

    command|cooker: allow generating targets tree for specified pkgs
    
    Modify the generateTargetsTree command to allow a list of packages to be
    supplied by the caller, in this case we will only generate a target tree
    for user requested targets rather than building a tree for the world list.
    
    Signed-off-by: Joshua Lock <josh@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

10	2	lib/bb/command.py
4	2	lib/bb/cooker.py

commit 5591329948648927154024bcb882c45766defac2
Author: Liping Ke <liping.ke@intel.com>
Date:   2011-06-30 23:02:48 -0700

    bitbake: Make bitbake server type configurable.
    
    Add -t options in bitbake for configuring server type.
    
    Signed-off-by: Liping Ke <liping.ke@intel.com>
    Signed-off-by: Joshua Lock <josh@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

18	7	bin/bitbake

commit b9698d0e8d681f1fd6ab8d28530136b85411386f
Author: Lianhao Lu <lianhao.lu@intel.com>
Date:   2011-06-30 23:02:47 -0700

    ui/hob: Fixed the "build again" hang.
    
    Using gobject.threads_init() instead of gtk.gdk.threads_init(). These
    two modes are conflict to each other. Using gobject.threads_init()
    allows only the main thread to touch GUI(gtk) part.
    
    Signed-off-by: Lianhao Lu <lianhao.lu@intel.com>
    Signed-off-by: Joshua Lock <josh@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	2	lib/bb/ui/hob.py

commit 5d41720d1550c04aac76275614ca15110c1c7f52
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2011-06-28 15:26:29 +0100

    Update version to 1.13.2
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	bin/bitbake
1	1	lib/bb/__init__.py

commit 8d3c899e0a15840c54de26d2f1fc552430517778
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2011-06-07 17:16:52 +0800

    bitbake/ast: Add optional argument for BBCLASSEXTEND
    
    Add an optional argument to BBCLASSEXTEND entries which gets passed to
    the extention class as BBEXTENDVARIANT. Also add BBEXTENDCURR whic
    is set to the current extension class name.
    
    This mode functions slightly differently to the previous BBCLASSEXTEND
    code in that PN is not changed.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

21	3	lib/bb/parse/ast.py

commit 664b85742d1afc94b291a85fd245abebffacdf3d
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2011-06-17 17:37:20 +0100

    bitbake/ast: Call expandkeys after the RecipePreFinalise event
    
    This means the event handler can change variables such as PN and those
    changes will be reflected in the updated variable key names.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	2	lib/bb/parse/ast.py

commit d924ff9ede57c3dea6e1c738ba3633f18d460b14
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2011-06-17 17:34:52 +0100

    bitbake/data_smart: Don't track overrides in deleted variable names
    
    When we delete a variable we no longer expect it to override other
    variables.
    
    To do this we remove it from the list of active overrides at deletion
    time. It turns out we already had to do this at override expansion time
    so this cleans up the code to be more consistent as an added bonus.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

4	1	lib/bb/data_smart.py

commit 2b5548c591d4cfde9238d2cc0959c42cfc08f09c
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2011-06-17 17:32:21 +0100

    bitbake/data_smart: Don't export deleted/empty entries in the list of keys
    
    If you d.delVar(), you expect the variable to be gone. Even empty
    variables continue to exist in the datastore and are still user visible
    unfortunately. The COW siutation means you can't just remove it
    since it might unmask a variable from an inner copy.
    
    This patch therefore stops empty variables from appearing in key lists
    exposed to the external world making empty variables an internal
    implementation detail only.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	0	lib/bb/data_smart.py

commit 9d43e3279895639ee4899df635f2546c7ee13737
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2011-06-10 17:23:33 +0100

    bitbake/data_smart: Optimise the data store iterator
    
    Since we're going to creat the seen set() anyway, we might as well use
    it directly. If we don't do this, we see thousands of function calls
    with associated overhead on profiles.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

12	10	lib/bb/data_smart.py

commit 41bef02bef8379590ba012319aebe05068a8081e
Author: Robert Yang <liezhi.yang@windriver.com>
Date:   2011-06-28 17:05:19 +0800

    bitbake: Add task specific stamp file support
    
    This patch, based on proof of concept code from Richard adds code to
    bitbake to allow individual tasks to optionally specify their stamp
    file using the stamp-base flag. This takes the same form as the STAMP
    variable but can be specified on a per task basis.
    
    Code is also added to runqueue to ensure that if two tasks share the
    same stamp file, only one will be executed at once.
    
    A significant usecase for this code is to share source code (${S})
    between recipes where separate build directories (${B}) are used.
    
    Signed-off-by: Robert Yang <liezhi.yang@windriver.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	2	lib/bb/build.py
3	0	lib/bb/cache.py
10	0	lib/bb/runqueue.py

commit a10d40b113d8570db2576910540b16192a99e53e
Author: Chris Larson <chris_larson@mentor.com>
Date:   2011-06-27 07:08:06 -0700

    Revert the unintentionally pushed msg.py change
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

6	12	lib/bb/msg.py

commit dc6fef0280d5f6fb0b288e4fbb154bf445524903
Author: Christopher Larson <kergoth@gmail.com>
Date:   2011-06-26 17:29:18 -0700

    msg: fix domain enum use
    
    Signed-off-by: Christopher Larson <kergoth@gmail.com>

1	1	lib/bb/msg.py

commit a8840349119fe3c8b4dccc20a8d97937ce5fa901
Author: Christopher Larson <kergoth@gmail.com>
Date:   2011-06-26 17:17:00 -0700

    msg: use a simpler enumeration for the domains
    
    Rather than using a namedtuple, which is rather ugly in this particular use
    case, we simply subclass a 'set' and provide a __getattr__. There is also
    another benefit beyond readability -- when debugging, as in tracebacks, you see
    a string for the value rather than a number as is the case with a namedtuple.
    
    Signed-off-by: Christopher Larson <kergoth@gmail.com>

11	5	lib/bb/msg.py

commit a5caaaaba8f0db1af5d8f2e610021d6d4b56894e
Author: Mark Hatle <mark.hatle@windriver.com>
Date:   2011-06-22 15:10:58 +0000

    runqueue.py: Add umask task control
    
    The umask for a task can now be set as:
    
    task[umask] = 022
    task[umask] = '022'
    
    If specified as a text string, it must be octal.  (This is due to
    recipe parsing where it's always set to a string.)
    
    [RP tweaked to use None instead of -1]
    Signed-off-by: Mark Hatle <mark.hatle@windriver.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	0	lib/bb/build.py
11	0	lib/bb/runqueue.py

commit 5481cc90645e13c4e3cdea41e8e369528a0b1649
Author: Brandon Stafford <brandon@pingswept.org>
Date:   2011-06-22 16:30:26 +0100

    doc/usermanual.xml: Tweaks for the manual
    
    This patch contains what I hope are non-controversial improvements to
    the manual. Most of the changes are single characters, but the
    line-by-line diff makes the patch look large.
    
    Signed-off-by: Brandon Stafford <brandon@pingswept.org>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

66	67	doc/manual/usermanual.xml

commit a2a29b72275ab03a263f4479a590b92111a0d6a8
Author: Scott Garman <scott.a.garman@intel.com>
Date:   2011-06-19 16:15:25 -0700

    fetch2/git.py: improve error reporting when an invalid protocol is used
    
    When an invalid 'protocol' parameter is used in a git SRC_URI,
    the error reported was not helpful:
    
    ERROR: Function 'Fetcher failure for URL: 'None'.
    <environment dump>
    fatal: Could not make temporary directory: No such file or directory
    
    So instead check that ud.proto is set to something valid, and if not
    raise a meaningful ParameterError which explains that the protocol
    type is the source of the problem.
    
    This fixes bug [YOCTO #1142]
    
    Signed-off-by: Scott Garman <scott.a.garman@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	0	lib/bb/fetch2/git.py

commit d97f7d762e3d2f1b0da038d4d99f2531b2490670
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2011-06-15 16:01:37 +0100

    process.py: Fix issue where early errors weren't making it to the console
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/server/process.py

commit dbf5f42b06bef81749b13aa99945cc1292a6676d
Author: Scott Garman <scott.a.garman@intel.com>
Date:   2011-06-14 16:44:58 -0700

    make exception handling syntax consistent
    
    Update exception handling syntax to use the modern style:
    except ExcType as localvar
    
    Signed-off-by: Scott Garman <scott.a.garman@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	bin/bitbake
5	5	lib/bb/cooker.py
1	1	lib/bb/data.py
2	2	lib/bb/fetch2/__init__.py
1	1	lib/bb/process.py
5	5	lib/bb/pysh/builtin.py
7	7	lib/bb/pysh/interp.py
1	1	lib/bb/runqueue.py
2	2	lib/bb/server/process.py
3	3	lib/prserv/serv.py

commit 9bff182a4ba9571679985b45b309990a6eddad14
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2011-06-15 10:27:09 +0100

    codeparser: When loading the cache, ignore ValueError
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/codeparser.py

commit c1d978d7bd1ac8eb1e2d50029ab2384be9f72fb4
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2011-06-10 09:13:24 +0100

    bitbake/fetch2: When replacing URLs in mirror handling mask out empty entries
    
    The symptom of this problem is something like a cvs url which specifies
    a username where the username is then passed through to something like
    an http mirror.
    
    This patch fixes things by ensuring empty entries are preserved in the
    new URL.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

4	1	lib/bb/fetch2/__init__.py

commit 1430a36e81737bd92245042710eb9d6ad8b6f1a7
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2011-06-10 17:25:04 +0100

    bitbake/cooker: Fix -b option by ensuring the empty cache structure is present
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

0	1	lib/bb/cache.py
3	0	lib/bb/cooker.py

commit c3c2ad6f22e35b893a353d4c21d0e923e46ad07b
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2011-06-09 22:41:27 +0100

    Update version to 1.13.1
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	bin/bitbake
1	1	lib/bb/__init__.py

commit a981df3cc9bf410d24f39919959952bdc6c76d03
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2011-06-09 17:30:17 +0100

    bitbake/event/ast: Add RecipePreFinalise event
    
    One of the implications is we need to register the event handlers before
    executing the anonymous python functions. I can't find any issue with making
    that change in any existing metadata use cases.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

7	3	lib/bb/event.py
9	6	lib/bb/parse/ast.py
1	0	lib/bb/ui/knotty.py

commit f22ac9149cc9ab96510bb377deb82cd9bceb95c1
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2011-06-01 12:22:17 +0100

    bitbake/parse/ast: We always need to finalize the default data since otherwise overrides to BBCLASSEXTEND may not be applied
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	2	lib/bb/parse/ast.py

commit 899d45b90061eb3cf3e71029072eee42cd80930c
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2011-05-31 23:52:50 +0100

    bitbake/data_smart: Change overrides behaviour to remove expanded variables from the datastore
    
    Currently if you do:
    
    OVERRIDES = "z"
    DEPENDS_prepend = "a "
    DEPENDS = "b"
    DEPENDS_z = "c"
    
    d.update_data()
    d.getVar("DEPENDS")
    
    gives "a c"
    
    d.update_data()
    d.getVar("DEPENDS")
    
    then gives "c"
    
    This patch changes the behaviour such that at the time bitbake expands the DEPENDS_z
    override, it removes "DEPENDS_z" from the data store. In the above example this would
    mean that it wouldn't matter how often you call d.update_data(), you'd always get
    "a c" back.
    
    See the bitbake-devel mailing list for further discussion and analysis of the
    potential impact of this change.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	1	lib/bb/data_smart.py

commit d000493c09ac5c1dcbab22d3a91296a9cb194ac0
Author: Scott Garman <scott.a.garman@intel.com>
Date:   2011-06-09 11:13:06 -0700

    cache.py: fix bitbake -s command
    
    This uses the correct index of self.pn when setting up cachedata's
    pkg_pn, fixing the output of bitbake -s.
    
    This fixes bug [YOCTO #1149].
    
    Signed-off-by: Scott Garman <scott.a.garman@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/cache.py

commit a71183762e5d7d9f8153832efb9595e3a21d62f1
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2011-06-01 17:48:32 +0100

    bitbake-layers: handle skipped recipes
    
    Report bbappends correctly for skipped recipes instead of reporting the
    bbappends as not having any matching recipe.
    
    (From Poky rev: 39d72ecf6bc1da85aefb11e6481719185f0cb953)
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

19	5	bin/bitbake-layers

commit 7d2363f35350be27a33f568c23eb07fcd3d27e53
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2011-06-01 15:37:07 +0100

    track skipped packages
    
    Add skiplist to cooker that allows access to the list of packages skipped
    via SkipPackage (this includes COMPATIBLE_MACHINE, INCOMPATIBLE_LICENSE,
    etc.) This can be used to enhance error reporting.
    
    (From Poky rev: 6c12b7b1099c77b87d4431d55e949cf7c5f52ded)
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

6	3	lib/bb/cache.py
16	0	lib/bb/cooker.py
6	6	lib/bb/parse/ast.py

commit cd80d7f20164e6ce4ce7b0b99db56bb7297c116d
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2011-06-08 20:25:12 +0100

    persist_data: Add back code to retry in the case of locked database errors
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

10	1	lib/bb/persist_data.py

commit 3c3bd0c2fa80d747f25401c17b785c7c2f3787ca
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2011-06-09 10:33:56 +0100

    Drop psyco support
    
    At best it gave 1-2% improvement now, its 32 bit x86 only and isn't
    supported after python 2.6.
    
    PyPy is probably a better option now.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

0	3	bin/bitbake
0	3	doc/bitbake.1
0	2	doc/manual/usermanual.xml
0	13	lib/bb/cooker.py

commit ea0ca90dba5bbbd84d60b4462f2ca3ff5f880170
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2011-06-08 19:27:56 +0100

    cooker.py: Drop duplicate parseCommandLine call
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

0	2	lib/bb/cooker.py

commit 5b345d482f1d7d69d63e827310e9618a6cda91ef
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2011-06-08 20:21:42 +0100

    build/runqueue: Pass quieterrors flag around to supress errors at task execution time
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

14	8	lib/bb/build.py
4	0	lib/bb/runqueue.py

commit 70232a8abcc78cb239b6f9b1f42daf60d4f5b98b
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2011-06-08 17:26:10 +0100

    bitbake-layers: Add comment header
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

6	0	bin/bitbake-layers

commit 4d15aaabf36c22feddea579150236396ae01b131
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2011-06-08 19:49:05 +0100

    runqueue.py: Export further hash information into the task environment
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

5	0	lib/bb/runqueue.py

commit e92c694a5344e325a533b7a32e3a3aece4735c23
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2011-06-08 20:23:11 +0100

    data.py: Ensure vardeps flags get expanded
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	2	lib/bb/data.py

commit 517366b449a20097309875c611f3dc5a97e0d6ea
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2011-06-08 13:34:03 +0100

    knotty: If any error messages are seen, set our exit code accordingly
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/ui/knotty.py

commit 088344d9187af9a0556b69e0b37d8c2d63952b05
Author: Joshua Lock <josh@linux.intel.com>
Date:   2011-03-08 21:39:38 -0800

    bitbake/hob: fix cancel button
    
    An accidental logic inversion (aka thinko) had the cancel button only
    cancel a build when the user didn't confirm the cancellation (i.e. clicked
    no)...
    
    (From Poky rev: ff3e326269d27662c830b04e05b571d257b89346)
    
    Signed-off-by: Joshua Lock <josh@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/ui/hob.py

commit 8a56794cd1620573f28cc020d52d769498d4441d
Author: Joshua Lock <josh@linux.intel.com>
Date:   2011-01-10 14:37:03 +0000

    bitbake/goggle: closing the progress dialog kills the UI
    
    It's unlikely that someone wants to close the progress dialog
    yet leave the UI (and BitBake process) running, so hook up
    the progress dialogs delete-event to exit gtk.
    
    (From Poky rev: c9bb30b232396bbdd3c97c1059e972d6a4abf637)
    
    Signed-off-by: Joshua Lock <josh@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	0	lib/bb/ui/goggle.py

commit 558bbb4ef9ddec8a01b7c3c6c6a021909721c712
Author: Joshua Lock <josh@linux.intel.com>
Date:   2011-01-10 14:45:07 +0000

    bitbake/depexp: closing progress dialog kills gui
    
    It seems safe to assume a user hitting the close button
    on the dialog wants to kill the whole UI.
    
    (From Poky rev: e21150f2b18ff4ac85e64ed8814f0268007830c0)
    
    Signed-off-by: Joshua Lock <josh@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	0	lib/bb/ui/depexp.py

commit a33b34b27afc15ecbee3e9bf724db63e02dc6bc3
Author: Joshua Lock <josh@linux.intel.com>
Date:   2011-02-25 18:57:10 +0000

    bitbake/hob: only show one progress dialog when changing machine
    
    Remove a spurious signal emission which resulted in two progress dialogs
    being shown after changing the machine.
    
    (From Poky rev: 7738e86e8b4881056bd44d0f767d17b36159a7bb)
    
    Signed-off-by: Joshua Lock <josh@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

0	1	lib/bb/ui/crumbs/hobeventhandler.py

commit 15af83452c3b126f13b95d5d01a36ce2ecf0fbb2
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2011-06-08 13:30:53 +0100

    hob/crumbs/hobeventhandler: Remove server specific implementation details missed in the precious cleanup
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

4	8	lib/bb/ui/crumbs/hobeventhandler.py

commit 91611c8b88932c21d8cbb64c9d86472a6dab79b3
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2011-06-08 13:13:55 +0100

    xmlrpc/event: Add ability to send pickled events to UI if requested
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

4	1	lib/bb/event.py
1	1	lib/bb/ui/uievent.py

commit c30c1349db85c0cf777fc48915c6ecdfd5a8a7e4
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2011-06-08 13:11:11 +0100

    bitbake/server: Add the none server back for now
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

203	0	lib/bb/server/none.py

commit d21d5954d0c08b1c80b72c5f37becc2e58ec916a
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2011-06-08 13:08:52 +0100

    bitbake/server: Move server specific code into the server backend and create a server API
    
    Move the server implementation specific code into the server backend where
    it belongs and replace this with a set of object method calls which
    establish the server, detach it and then connect to it using appropriate
    IPC.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

27	38	bin/bitbake
62	4	lib/bb/server/process.py
36	14	lib/bb/server/xmlrpc.py

commit 93059e36200b61f87f61578d9774172212446644
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2011-06-08 13:01:34 +0100

    bitbake/server/process: Move implementation knowledge of event queue into the server
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	2	bin/bitbake
19	1	lib/bb/server/process.py
1	7	lib/bb/ui/depexp.py
4	6	lib/bb/ui/goggle.py
3	2	lib/bb/ui/knotty.py
3	1	lib/bb/ui/ncurses.py

commit b420e865f6dfb04b58c1dbc5f1b5332b137f49ff
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2011-06-08 12:56:21 +0100

    bitbake/cooker.py: Fix debug message arguments
    
    (From Poky rev: 06bb59d)
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/cooker.py

commit aa84a900e1df56c19d2b9d3ee047ace31a0c144d
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2011-02-15 23:18:39 +0000

    bitbake/cooker: Ensure delays are accurately transfered to the idle loops from runqueue
    
    (From Poky rev: 579ecccc2244da43b9bc03fb09bb71d8a0219a8b)
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	2	lib/bb/cooker.py

commit 7905257b3d61f473d18e37a55026afb5b9d689e2
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2011-02-15 23:20:20 +0000

    bitbake/runqueue: When we have successfully collected a pid value return True to ensure we don't sleep in the main loop
    
    (From Poky rev: 5a178b547bbf6d99c42cba6821b3f559e585a079)
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	0	lib/bb/runqueue.py

commit 088d7607e6ab06c7adbace0f36fe44b2dd4df483
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2011-02-15 23:20:54 +0000

    bitbake/runqueue: When we successfully fork off a task and there are more processes we can start do so immediately
    
    (From Poky rev: 974ea1a190167dcfd831ba1fc5f733e0dc9a6fda)
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	0	lib/bb/runqueue.py

commit 1dfeb84f7d6f758eb9eb8311fa1083c7d736d018
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2011-02-28 14:28:25 +0000

    bitbake/runqueue: show correct task name for setscene task failure
    
    If a setscene task failed previously it was showing an incorrect task
    name in the error line. This patch ensures we show the correct name, also
    including the "_setscene" suffix.
    
    (From Poky rev: 9d9c68e3536387150e3ce7261f4770576e724dd9)
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

11	3	lib/bb/runqueue.py

commit 32e190e5ccaaa75183dbc410f32b700d39874aca
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2011-03-25 13:22:01 +0000

    bitbake/runqueue: fix clash when setscene & real tasks done in same build
    
    If a build causes a real task to be run when the setscene task has already
    run then it was possible for dependent packages to be rebuilding at the same
    time as a rebuild of the packages they depended on, resulting in failures
    when files were missing. This change looks in the setscene covered list and
    removes anything where a dependency of the real task is going to be run (e.g.
    do_install is going to be run even though the setscene equivalent of
    do_populate_sysroot has already been run).
    
    As an additional safeguard we also delete the stamp file for the setscene
    task under these circumstances.
    
    Fixes [YOCTO #792]
    
    (From Poky rev: b4268c08c350a7928a0b1a041b04ffe5a44e77b4)
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

19	0	lib/bb/runqueue.py

commit 61080391726d3e4798faeb8d35df9f32a0653491
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2011-06-08 11:44:50 +0100

    cooker/process.py: Move profiling code to a place it can be reused by different server mechanisms
    
    The cooker profiling code isn't server specific so move it to a place
    where different server backends can use it.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

50	0	lib/bb/cooker.py
1	27	lib/bb/server/process.py

commit 077657e50ad032c0fa876bf54e9802af2686e0fb
Author: Liping Ke <liping.ke@intel.com>
Date:   2011-06-03 08:22:40 +0800

    cache: Implement multiple extra cache fields request support
    
    This patch is to support extra cache. If user needs to request
    extra cache fields besides CoreRecipeInfo fields, just add a new
    XXXRecipeInfo class definition as Hob Does.
    Currently supported Extra RecipeInfo name is an array. We can
    support multiple extra cache fields at the same time besides
    CoreRecipeInfo which is needed by all clients.
    
    Signed-off-by: Liping Ke <liping.ke@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

119	58	lib/bb/cache.py
8	8	lib/bb/cooker.py

commit d50389ae692377c957afec7c846fc2ce2c070a09
Author: Liping Ke <liping.ke@intel.com>
Date:   2011-06-03 08:21:44 +0800

    cache: Introduce new param caches_array into Cache impl.
    
    When using hob ui interface, we need extra cache fields.
    We will save ui required extra cache fields into a separate
    cache file. This patch introduce this caches_array parameter.
    It will be used in the extra cache implementation (following patch).
    Caches_array at least contains CoreRecipeInfo. If users need extra
    cache fields support, such as 'hob', caches_array will contain
    more relevant elements such as HobRecipeInfo.
    
    Signed-off-by: Liping Ke <liping.ke@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

10	5	lib/bb/cache.py
44	8	lib/bb/cooker.py
2	0	lib/bb/ui/hob.py

commit 75d9add923560af9fdd772a363c68337d2c9a97d
Author: Liping Ke <liping.ke@intel.com>
Date:   2011-06-03 08:20:15 +0800

    cache: Introduce extra cache class for image creator
    
    Extra RecipeInfo will be all defined in this file. Currently,
    Only Hob (Image Creator) Requests some extra fields. So
    HobRecipeInfo is defined. It's named HobRecipeInfo because it
    is introduced by 'hob'. Users could also introduce other
    RecipeInfo or simply use those already defined RecipeInfo.
    In the following patch, this newly defined new extra RecipeInfo
    will be dynamically loaded and used for loading/saving the extra
    cache fields.
    
    Signed-off-by: Liping Ke <liping.ke@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

54	0	lib/bb/cache_extra.py

commit f0f53506926a3f79181796dde177f11f0a396b75
Author: Liping Ke <liping.ke@intel.com>
Date:   2011-06-03 08:17:23 +0800

    cache.py: Refactory Current Cache implementation
    
    This patch is for refactorying current cache implementation, the
    main reason is for introducing extra cache fields requests for
    image creator as well as other users. The refactory parts include:
    Move cache data retrieve methods out of Cache Data Fields
    Definition. Since this retrieve methods will be shared for
    both CoreRecipeInfo as well as the new introduced extra RecipeInfo
    in the following patches.
    
    Signed-off-by: Liping Ke <liping.ke@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

165	193	lib/bb/cache.py

commit 314759a0470e96a6827f604d00dc8a8328e1010a
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2011-06-07 22:32:59 +0100

    cache.py: Sync what amounts to whitespace with bitbake in poky, pending merge of cache patches
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/cache.py

commit 15f051220a3b679293dc914b3ff3aec6455308fa
Author: Joshua Lock <josh@linux.intel.com>
Date:   2011-03-05 17:13:32 +0000

    bitbake/cooker: don't error in prepareTreeData for unbuildable targets
    
    Set abort to False in prepareTreeData so that unbuildable targets do not
    raise an exception.
    
    (From Poky rev: 3c113f355bce012d55dac873189a410657016a62)
    
    Signed-off-by: Joshua Lock <josh@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	1	lib/bb/cooker.py

commit 3afe85a6cf979a0197291c8486e33826fcf11a8c
Author: Saul Wold <sgw@linux.intel.com>
Date:   2011-04-21 11:44:45 -0700

    universe target: add a new target to collect all recipe targets
    
    This new universe target is not intended to be used for
    compiling or building everything, it use is for sanity checking
    and other tasks that need to find all targets. This does not
    exclude any broken or virtual targets.
    
    (From Poky rev: 28e7041a9c110be2ac5dea1eb1f55ca8f056111e)
    
    Signed-off-by: Saul Wold <sgw@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

6	0	lib/bb/cache.py
8	0	lib/bb/cooker.py

commit c9bb37e588ee7ee95eca798b0eae57bad68e8caf
Author: Chris Larson <chris_larson@mentor.com>
Date:   2011-06-03 14:29:44 -0400

    bb.exceptions: don't choke on frames without arguments
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

3	0	lib/bb/exceptions.py

commit ec8a5a495b72e061a1e8d7c7449afb26581872c0
Author: Chris Larson <chris_larson@mentor.com>
Date:   2011-06-02 14:46:13 -0700

    siggen: don't choke with traceback when data is None
    
    Given we use bb.error, not bb.fatal, here, it seems this was intended to be
    non-fatal, yet we'd end up trying to concatenate None. Fix this by setting an
    empty task to the empty string, for the purposes of hashing. Also str() the
    value we get from the datastore, just in case something other than a string
    was stored there.
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

5	3	lib/bb/siggen.py

commit 8e1be0ca414d9d26e013ae212abdd9c39fa8df26
Author: Chris Larson <chris_larson@mentor.com>
Date:   2011-06-02 14:45:37 -0700

    parse: pass a useful (if mangled) key to bb.data.expand for :=
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

1	1	lib/bb/parse/ast.py

commit 12aef37618bc77fb5ef085d24ad85471fb85c111
Author: Chris Larson <chris_larson@mentor.com>
Date:   2011-06-02 14:45:13 -0700

    cooker: handle ExpansionError the same way we do ParseError
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

2	2	lib/bb/cooker.py

commit d6a0ffdd583be3df734171d7e91d334f798a79ce
Author: Chris Larson <chris_larson@mentor.com>
Date:   2011-06-02 14:32:17 -0700

    event: don't catch systemexit from handler execution
    
    This means that anyone firing an event can get a systemexit and result in
    their process exiting, which isn't ideal, but behaves the way it used to (in
    particular, ensures that a sanity check failure will halt the build). This
    should be revisited in the future.
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

1	1	lib/bb/event.py

commit 610f649abdcdaaee282ed75a83eab838e4b4f0b0
Merge: 67434496 ee48d628
Author: Chris Larson <chris_larson@mentor.com>
Date:   2011-06-02 14:20:26 -0700

    Merge remote branch 'github/exceptions'
    
    * github/exceptions:
      Shift exception formatting into the UI
      cooker: don't show a traceback for ParseError
      cooker: don't show a useless traceback for SyntaxError
      cooker: use logger.exception for config file parse errors
      cooker: pass traceback back from parsing thread
      cooker: show a useful message for ParsingFailure
      bb.exceptions: don't show a repr of 'self'
      codeparser.py: fix syntax error in exception handling
      codeparser.py: Ignore incomplete cache files
      bb.exceptions: handle tb entries without context
      bb.exceptions: add to_string convenience function
      bb.exceptions: add code to create pickleable traceback entries
      bb.namedtuple_with_abc: add useful util from activestate

commit 67434496108efc3aba9cb1e3640bc712658b1408
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2011-06-01 14:01:32 +0100

    data_smart: Adding overrides of zero length is pointless so lets not
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

4	3	lib/bb/data_smart.py

commit a8ab0af776ba20c83832215054180fbd15c274c0
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2011-06-01 11:09:34 +0100

    bitbake: use layer priority when applying bbappends
    
    If the priority of a layer has been specified with BBFILE_PRIORITY_ then
    use that to sort the list of BBFILES entries, which will affect the order
    in which .bbappend files are applied.
    
    Fixes [YOCTO #1125]
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

14	10	lib/bb/cooker.py

commit 606f1acc6fb8ccec45d6a52ed6ae6dc128011402
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2011-05-31 23:02:01 +0100

    providers.py: Correct PREFERRED_VERSION handling
    
    Overrides on the right are the highest priority and in this case, pn-PN
    and PN should take priority over any other override so fix the code to
    do this.
    
    Also, since overrides will have been processed by bitbake, we shouldn't
    then be specifically looking up PREFERRED_VERSION_${PN} but just using
    PREFERRED_VERSION.
    
    This patch corrects the behaviours to match what the code is expected
    to do.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	2	lib/bb/providers.py

commit 6c412f009e33e77cbcb5d4881c110e6bdda05282
Author: Joshua Lock <josh@linux.intel.com>
Date:   2011-05-27 13:03:55 -0700

    server: add updated/fixed xmlrpc server from Poky
    
    Signed-off-by: Joshua Lock <josh@linux.intel.com>

273	0	lib/bb/server/xmlrpc.py

commit 0ac48f913ac18c41a309918f1e32ec72311d5399
Author: Joshua Lock <josh@linux.intel.com>
Date:   2011-05-27 13:04:44 -0700

    uievent: fix queueing of events for xmlrpc before UI has loaded
    
    The change to Queue up events before the UI is spawned broke the xmlrpc
    server because the uievent implementation of BBUIEventQueue expects pickled
    strings for its queue_event() method.
    This is because the RPC exposed event.send() method must accept pickled
    strings, but for xmlrpc event.send() is just mapped to queue_event(). Work
    around this by adding a send_event method which unpickles strings and hands
    them off to queue_event() which can then be used for the remapping.
    
    Signed-off-by: Joshua Lock <josh@linux.intel.com>

5	2	lib/bb/ui/uievent.py

commit 10f3ca52dc274cd8b240987cfd7cd003aeda7ab1
Author: Darren Hart <dvhart@linux.intel.com>
Date:   2011-05-20 16:06:12 -0700

    fetch2/git: ensure network check log matches actual command
    
    The git command string logged via check_network_access() does not match
    the actual command executed in a few places. Ensure that it does.
    
    Signed-off-by: Darren Hart <dvhart@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

10	6	lib/bb/fetch2/git.py

commit 9a28f7744e2f4224e7c097b8c4c1d49731b9a47e
Author: Darren Hart <dvhart@linux.intel.com>
Date:   2011-05-20 16:06:14 -0700

    fetch2/git: use logging.debug() and clarify messages
    
    Replace a call to print() with logging.debug() and flesh out the
    message to clarify the state being reported.
    
    Signed-off-by: Darren Hart <dvhart@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

5	2	lib/bb/fetch2/git.py

commit 9f27563d66523f5af1028f173d53ee75e0877d46
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2011-05-27 16:14:48 +0100

    bitbake/codeparser: Improve cache handling
    
    The current codeparser cache handling hurts performance badly even
    over a couple of cores and certainly on many core systems, it can
    spent huge amounts of time in the codeparser cache save functions.
    
    This patch reworks the cache handling so that each parsing thread
    saves out its own "differences" file compared to any existing core
    cache and then the main bitbake thread picks these up and merges
    things back together.
    
    This was tested on systems with small and large numbers of cores
    and was found to perform orders of magnitude better in all cases
    despite the more complex code.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

70	10	lib/bb/codeparser.py
1	2	lib/bb/cooker.py

commit 18b6482ad19352d47b2f8145d28f6329d94f2d53
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2011-05-27 17:16:11 +0100

    runqueue.py: Set BB_WORKERCONTEXT in task execution context
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	0	lib/bb/runqueue.py

commit 0a4d857aabc86b973170ba9ce32b6b449a4e2165
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2011-05-27 15:03:51 +0100

    bitbake/runqueue.py: Ensure existing setscene stamp files are taken into account
    
    JaMa reported issues where bitbake would rebuild things instead of using the
    existing built tasks. This was tracked to a case where:
    
    a) rm_work is uses
    b) A depends on B
    c) B has a version change (e.g. PR bump)
    
    and A *and* B would then rebuild.
    
    It turns out that rm_work was correctly turning stamp files into the correct
    _setscene varients but bitbake was then ignoring them during setscene processing.
    If the correct sstate checksumed files didn't exist, everything would seemingly
    rebuild.
    
    The fix is to check for existing *_setscene stamps and if present, honour them.
    If "basichash" is enabled, the hash is included with the stamps so everything
    should then function as intended.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

10	1	lib/bb/runqueue.py

commit 97e8adf03e5fab1fd40c3d53c48f7b333bc2e145
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2011-05-27 16:13:27 +0100

    bitbake/utils.py: Add option to lockfiles to return immediately rather than wait
    
    There are usecases where we don't want to block waiting for a lockfile
    so enhance the lockfile handling functions to support this.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

5	1	lib/bb/utils.py

commit c12dd868368bdc3a4f800e075a30c67edca28d47
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2011-05-27 15:13:54 +0100

    bitbake/cooker.py: Ensure BBFILES is processed in order
    
    The files found by collect_bbfiles should be processed in order but due
    to being processed using python's set(), the order was not being preserved.
    
    Use a list instead as whilst the code is slightly more ugly, order
    is preserved.
    
    Addresses [YOCTO #1100]
    
    Acked-by: Darren Hart <dvhart@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

8	3	lib/bb/cooker.py

commit 6e9119c42d3f4cb3dab3d25856eee8b4bf4ad94f
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2011-05-27 15:11:49 +0100

    bitbake/cooker.py: Fix -b option regexp handling
    
    bitbake -b core-image was showing no matches when it should list all targets
    containing the fragment "core-image". This patch only calls os.path.abspath()
    on things that look like paths and passed the path around more consistently to
    various functions to get this use case working again.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

6	7	lib/bb/cooker.py

commit c0eb89054aef4957966f98b44e7f3cce14fb337a
Author: Yu Ke <ke.yu@intel.com>
Date:   2011-05-26 15:37:56 +0800

    fetch2/git: enhance the unpack by using "git checkout"
    
    current git fetcher unpack method only checkout index and working tree,
    but did not did not update the git branch in ref/heads, so user may not
    get right info in ${S} by using git.
    
    this patch enhance the unpack by using git checkout to fix this issue.
    
    Fix bug [YOCTO #1089]
    
    Signed-off-by: Yu Ke <ke.yu@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

5	2	lib/bb/fetch2/git.py

commit d424ecd751f80a7aecec26e1a0cbd2a1b38e076b
Author: Yu Ke <ke.yu@intel.com>
Date:   2011-05-24 14:22:52 +0800

    fetch2/git: add document for git fetcher supported options
    
    Signed-off-by: Yu Ke <ke.yu@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

35	3	lib/bb/fetch2/git.py

commit bd51659f5ee521cb8e6631d5f26792ab573e6b30
Author: Yu Ke <ke.yu@intel.com>
Date:   2011-05-26 15:29:37 +0800

    fetch2/git: unify the nocheckout option format
    
    make the nocheckout option format to be: default is "0",
    use nocheckou=1 to set this option
    
    with this patch, the format will be consistant with other bitbake options
    like rebaseable
    
    Signed-off-by: Yu Ke <ke.yu@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	3	lib/bb/fetch2/git.py

commit e912122706b402f99848d50f721f179491644d0e
Author: Yu Ke <ke.yu@intel.com>
Date:   2011-05-24 15:41:14 +0800

    fetch2/git: change default protocol from rsync to git
    
    Signed-off-by: Yu Ke <ke.yu@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/fetch2/git.py

commit 4d0e79e5591ff58ce35c7fb96f6e9217ddc27466
Author: Lianhao Lu <lianhao.lu@intel.com>
Date:   2011-05-27 14:31:45 +0800

    Add PR service deamon to bitbake
    
    Added the initial implementation of the server side PR service.
    
    Signed-off-by: Lianhao Lu <lianhao.lu@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

53	0	bin/bitbake-prserv
11	0	lib/prserv/__init__.py
100	0	lib/prserv/db.py
198	0	lib/prserv/serv.py

commit ece05edd7c214679ec4b9c44e185ffc366d95584
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2011-05-25 23:45:31 +0100

    cooker.py: Don't show spurious warnings for collections of .bbappend files
    
    Seeing warnings like:
    
    WARNING: No bb files matched BBFILE_PATTERN_yocto '^/xxx/meta-yocto/'
    
    are not encouraging to users and we shouldn't show these if we found
    .bbappend files (but no .bb files). This change stops these warnings
    from appearing.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

18	1	lib/bb/cooker.py

commit 139b8a625818225c358a1b8363518d7ed6913188
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2011-05-25 23:19:41 +0100

    build/siggen: Ensure a task signature file is generated for each task that is executed
    
    Tracing down signature changes and dependencies is hard unless the complete task
    chain can be evaultated. Since we have the data available at task exeuction
    time, writing it to disk makes sense.
    
    This change is suboptimal internal knowledge stamp_internal() has leaks into
    make_stamp() and the concepts used by this code need revisiting but the change
    brings enough usability benefit to warrant its inclusion despite that.
    
    Addresses issue [YOCTO #1074]
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

6	0	lib/bb/build.py
3	0	lib/bb/siggen.py

commit 92701d4c5372db48847c70da4ebd0736d79fd54b
Author: Yu Ke <ke.yu@intel.com>
Date:   2011-05-15 22:33:30 +0800

    git fetcher: add support for rebaseable git repo
    
    Some upstream git repo may rebase in the future, which means current
    revision may disappear from the upstream repo after the rebase.
    
    current git fetcher can not handle this case, because the git mirror
    tar ball is per repo, and may also change in the rebase and lost the
    current revision info.
    
    To fix this issue, this patch
    - add rebaseable tag in the SRC_URI
    - for rebaseable repo, make git mirror tar ball per revision, in this
      case, even upstream rebase, the git mirror still has the current
      revision info.
    - for rebaseable repo, generate mirror tar ball by default, since the
      repo may change in the future.
    
    Signed-off-by: Yu Ke <ke.yu@intel.com>

20	8	lib/bb/fetch2/git.py

commit 2bc8f405ec552ae0f1a79790569b2d044a35d3ba
Author: Joshua Lock <josh@linux.intel.com>
Date:   2011-05-10 17:07:56 -0700

    bitbake/ui: Fix Gtk+ GUI's after recent cache changes
    
    Signed-off-by: Joshua Lock <josh@linux.intel.com>

2	0	lib/bb/ui/crumbs/hobeventhandler.py
3	1	lib/bb/ui/crumbs/runningbuild.py
2	0	lib/bb/ui/depexp.py

commit ee48d628ee038bd72e1cd94aa75f5ccbacbcee4c
Author: Chris Larson <chris_larson@mentor.com>
Date:   2011-05-05 17:43:38 -0700

    Shift exception formatting into the UI
    
    Now we use bb.exceptions to pass pickleable traceback entries to the UI, and
    the UI is free to do whatever it wants to do with this information. By
    default, the log formatter for the UIs formats it with bb.exceptions.  This
    also means that all exceptions should now show 3 lines of context and limit to
    5 entries.
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

4	6	lib/bb/cooker.py
4	2	lib/bb/event.py
8	2	lib/bb/msg.py

commit cae6bf031dc83ba0439d07584fdbbd4a962408a3
Author: Chris Larson <chris_larson@mentor.com>
Date:   2011-05-06 07:18:44 -0700

    cooker: don't show a traceback for ParseError
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

2	0	lib/bb/cooker.py

commit caf21e9fbf3c526c1d7c555d8c76dca8710f9def
Author: Chris Larson <chris_larson@mentor.com>
Date:   2011-05-06 07:15:34 -0700

    cooker: don't show a useless traceback for SyntaxError
    
    Note: we rely on the fact that better_compile has already output information
    about the exception, so don't do it ourselves.
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

4	1	lib/bb/cooker.py

commit 775590c154bc189df3f5704bddf9b684b734fde0
Author: Chris Larson <chris_larson@mentor.com>
Date:   2011-05-05 19:21:12 -0700

    cooker: use logger.exception for config file parse errors
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

7	1	lib/bb/cooker.py

commit 8c33f50eb68411c071c001331e0134aeb776953b
Author: Chris Larson <chris_larson@mentor.com>
Date:   2011-05-05 16:55:33 -0700

    cooker: pass traceback back from parsing thread
    
    Uses bb.exceptions to get a traceback back from the parsing thread to the main
    thread, where it is then formatted.  Also enables 3 lines of context for the
    formatted traceback, and limits the number of entries displayed to 5.
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

9	2	lib/bb/cooker.py

commit a41c217c6e9195f8b9ea2de6e1d335b10b904558
Author: Chris Larson <chris_larson@mentor.com>
Date:   2011-05-05 16:50:34 -0700

    cooker: show a useful message for ParsingFailure
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

6	3	lib/bb/cooker.py

commit dbf405f1f7fda41944093906c13044c6cf78f859
Author: Chris Larson <chris_larson@mentor.com>
Date:   2011-05-13 17:35:37 -0700

    bb.exceptions: don't show a repr of 'self'
    
    Rather than treating self like an ordinary argument, showing a repr of its
    value in the function spec when formatting the traceback entry, now we show
    the class name for the method as a part of the function name. Example:
    
    Old: bar(self=<some repr of Fooclass>, f=5)
    New: Fooclass.bar(f=5)
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

20	3	lib/bb/exceptions.py

commit 0db267b94850053d02469d51d840d60ef96b6a43
Author: Otavio Salvador <otavio@ossystems.com.br>
Date:   2011-05-13 16:46:32 +0000

    codeparser.py: fix syntax error in exception handling
    
    Commit 036cf3cd11b3a6836b77f5ffa760ceee6b71b1ef missed the needed
    brackets to handle more then a type of exception.
    
    Signed-off-by: Otavio Salvador <otavio@ossystems.com.br>

1	1	lib/bb/codeparser.py

commit 08f53145c5aff249e8251bcaae713bff13cf0b87
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2011-05-12 23:35:53 +0100

    codeparser.py: Ignore incomplete cache files
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/codeparser.py

commit b010c4d37cfff5f74747d7da8cc1bf6719e29357
Author: Chris Larson <chris_larson@mentor.com>
Date:   2011-05-05 19:07:21 -0700

    bb.exceptions: handle tb entries without context
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

5	2	lib/bb/exceptions.py

commit 17a64df7e91438ee3fe1f7095c319f700a5372f1
Author: Chris Larson <chris_larson@mentor.com>
Date:   2011-05-05 19:06:35 -0700

    bb.exceptions: add to_string convenience function
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

6	0	lib/bb/exceptions.py

commit ad8ad3fcae29eafbdc09286984495d693a4b73ef
Author: Chris Larson <chris_larson@mentor.com>
Date:   2011-05-05 16:53:52 -0700

    bb.exceptions: add code to create pickleable traceback entries
    
    This lets you get as much useful information as possible from traceback
    entries while staying pickleable.
    
    In addition, it has improved traceback formatting.  It shows the values of the
    arguments for the functions, lines of context from the file for the code, and
    has an optional formatter to do things like syntax highlighting for the code
    lines.
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

55	0	lib/bb/exceptions.py

commit bf9391c60d8dd9eeaca87783cb874c56fa7a4e91
Author: Chris Larson <chris_larson@mentor.com>
Date:   2011-05-05 16:53:44 -0700

    bb.namedtuple_with_abc: add useful util from activestate
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

255	0	lib/bb/namedtuple_with_abc.py

commit abecbb4c0af83c6b4ee248b0f03b779f84b13390
Author: Otavio Salvador <otavio@ossystems.com.br>
Date:   2011-05-13 16:46:32 +0000

    codeparser.py: fix syntax error in exception handling
    
    Commit 036cf3cd11b3a6836b77f5ffa760ceee6b71b1ef missed the needed
    brackets to handle more then a type of exception.
    
    Signed-off-by: Otavio Salvador <otavio@ossystems.com.br>

1	1	lib/bb/codeparser.py

commit 036cf3cd11b3a6836b77f5ffa760ceee6b71b1ef
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2011-05-12 23:35:53 +0100

    codeparser.py: Ignore incomplete cache files
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/codeparser.py

commit e4acd09735d4366b49e050a515f088a80345f626
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2011-02-25 17:22:00 +0000

    bitbake/utils.py: Only try and add read access to a file if we don't have it
    
    A file we're copying might be on a readonly filesystem so if we can already read
    it, don't try and add read permission.
    
    Fixes BUGID #771 in Yocto.
    
    (From Poky rev: 9166b9e32fd6f618f9597b07d88cef09a88916a1)
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

11	4	lib/bb/utils.py

commit d98bded97c7e5423ce674205236025ce8d1914b3
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2011-03-09 11:01:35 -0800

    bitbake/fetch2/local: Fix inverted update required logic
    
    (From Poky rev: 4f28cd2d1854df8e6f56544fe509fb2e3ddce9aa)
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/fetch2/local.py

commit 584df1efa04efbe51671e4911810dbdd0dee22d3
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2011-03-08 11:23:34 -0800

    bitbake/fetch2: Allow local file:// urls to be found on mirrors
    
    With the current implementation, file:// urls as used by sstate don't access the
    mirror code, breaking sstate mirror support. This change enables the usual
    mirror handling. To do this, we remove the localfile special case, using the basename
    paramemter instead. We also ensure the downloads directory is checked for files.
    
    The drawback of this change is that file urls containing "*" globing require special
    casing in the core.
    
    (From Poky rev: a778fb311540580476976e43f9c0576284f8dc38)
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

6	9	lib/bb/fetch2/__init__.py
13	0	lib/bb/fetch2/local.py

commit 12112102dd2808534505d4bfbb171904794428c2
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2011-04-20 02:13:23 +0100

    bitbake/fetch2: Fix the problems introduced by the git fetcher AUTOREV fix
    
    The ordering constrains on the urldata_init functions are not straight
    forward. To avoid further problems, create a helper function to setup
    the source revisions which the init functions can all at the appropriate
    point.
    
    (From Poky rev: c4371138f7444ecaa1fdd2b1ee4949fbc819f886)
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

9	12	lib/bb/fetch2/__init__.py
2	0	lib/bb/fetch2/bzr.py
2	1	lib/bb/fetch2/git.py
2	0	lib/bb/fetch2/hg.py
2	0	lib/bb/fetch2/svn.py

commit eb799b44adab4701825f3dda5d982256781d7f78
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2011-04-19 23:31:09 +0100

    bitbake/fetch2/git: Fix a bug where AUTOREV and the git fetcher interact badly
    
    Fix a bug where ud.branches were being referenced before it was set by
    the git fetcher when using AUTOREV. To do this some ordering needed
    to be changed. This fixes errors like:
    
    ERROR: Error parsing /recipes-kernel/linux/rt-tests_git.bb: Failure expanding variable
    SRCPV, expression was ${@bb.fetch2.get_srcrev(d)} which triggered exception
    AttributeError: 'FetchData' object has no attribute 'branches'
    
    (From Poky rev: 2d2d07275c8a2d652a221c1cd74d28c2f6f226d5)
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

5	2	lib/bb/fetch2/__init__.py
5	4	lib/bb/fetch2/git.py

commit 933350f801d95762cba3a1f260404fd25fd0a73c
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2011-05-06 15:46:35 +0100

    build.py: Fix ordering bug introduced in 7a29ab534388c0095f7f826b16c5cff343927d10
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/build.py

commit 2884ecb471c33db868f8df6c0c538e38531d2170
Author: Darren Hart <dvhart@linux.intel.com>
Date:   2011-03-09 12:55:20 -0800

    bitbake docs: use dblatex to build the pdf bitbake manual
    
    Fix [BUGID #593]
    
    The current manual build fails for printing formats which use latex as an
    intermediate format. This bug has been reported in multiple locations and I
    haven't found a solution posted to any of them.
    
    Using --with-dblatex uses dblatex to make the conversion and successfully
    generates the pdf. It adds a dependency on dblatex and its dependencies.
    
    (From Poky rev: b26640f30a4c80fcedda0d19bcf96ed412062a33)
    
    Signed-off-by: Darren Hart <dvhart@linux.intel.com>
    CC: Joshua Lock <josh@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	doc/manual/Makefile

commit e081b20c10f19058f4ddc4a491420ce25fea48d9
Author: Darren Hart <dvhart@linux.intel.com>
Date:   2011-04-12 17:11:52 -0700

    correct typo in ??= documentation
    
    ??= is a lazy version of ?=
    
    (From Poky rev: 2ee0be82d065aeee716a9c0289bf111ea121e6dc)
    
    Signed-off-by: Darren Hart <dvhart@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	doc/manual/usermanual.xml

commit 8e8ca00b35cf56c7911a6eb6273b8e8e31c5e8b8
Author: Yu Ke <ke.yu@intel.com>
Date:   2011-04-18 13:53:53 +0800

    git fetcher: make tag back to work, fix Yocto bug 972
    
    In current git fetcher, tag does not work due to commit http://git.pokylinux.org/cgit/cgit.cgi/poky/commit/?id=5920e85c561624e657c126df58f5c378a8950bbc. Tag is not in sha256 form, so it will be treated invalid, and silently replaced by latest revision.
    
    To fix it, this patch treat tag name as branches name, thus it will be handled correctly later. Thanks Richard for reviewing and proposing the better approach.
    
    Fix [YOCTO #972]
    
    CC: Richard Purdie <richard.purdie@linuxfoundation.org>
    
    (From Poky rev: a2030c8d1a58c79428cba80158982aea4d2d9f6d)
    
    Signed-off-by: Yu Ke <ke.yu@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	0	lib/bb/fetch2/git.py

commit 7d5642231f7379df02dfe5946ffc480bb2ed2f4c
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2011-05-05 19:27:46 +0100

    bitbake/codeparser: Correctly handle a missing/empty cache file
    
    (From Poky rev: 72875493b8bbb5d6793380ee71c6bca4f438ca04)
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

5	2	lib/bb/codeparser.py

commit d4574ad90638e58291bf6edfa19b74161b062b6e
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2011-04-10 10:55:48 -0700

    bitbake/cache.py: Ensure skipped recipes make it into the cache to avoid reparsing
    
    (From Poky rev: 001a555c2f755d4f8a69b113656d9307ca7ee597)
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

8	3	lib/bb/cache.py
1	2	lib/bb/cooker.py
5	0	lib/bb/ui/knotty.py

commit 2b0194b408d6d1835f04b20cf5cbd6b0d255869b
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2011-04-10 10:52:29 -0700

    bitbake/cooker/codeparser: Ensure the code parser cache is saved for each parsing process
    
    Before this change, the codeparser cache was only being saved for the main
    server process. This is suboptimal as it leaves code being re-evaluated at
    task execution time and increases parse time.
    
    We use the multiprocess Finalize() functionality to ensure each process
    saves out its cache. We need to update the cache save function to be multiprocess
    friendly with locking.
    
    (From Poky rev: c8928e93dd8a08d6768623f6491c9ba31d0aa06f)
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

14	0	lib/bb/codeparser.py
1	0	lib/bb/cooker.py

commit ddf498b487fae35a36c3cd095f110fa6da5ded40
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2011-04-10 10:50:16 -0700

    bitbake/ast.py: Only run finalise() for the specified variant
    
    Allows the heavy finalise function to only be run for the case we're
    interested in when running tasks, saving some processing time.
    
    (From Poky rev: 9211fd9c375489c73924fd43f1f8a0da2c4290bb)
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	0	lib/bb/cache.py
6	2	lib/bb/parse/ast.py

commit c3dd4fd5c9fe106f7fae8c088e75cfb70f20e107
Author: Bernhard Reutner-Fischer <rep.dot.nop@gmail.com>
Date:   2011-05-02 11:45:56 +0200

    manual: fix typo
    
    "is used signify" -> "is used to signify"
    
    Signed-off-by: Bernhard Reutner-Fischer <rep.dot.nop@gmail.com>

2	2	doc/manual/usermanual.xml

commit 00403c4d5a05b9188df303b08fa8e1e58efd27b0
Author: Chris Larson <chris_larson@mentor.com>
Date:   2011-04-08 07:10:40 -0700

    build: run fakeroot if FAKEROOT is set
    
    FAKEROOT contains the fakeroot command to be run.  This should not be set for
    those using pseudo + FAKEROOTENV, but should be set for people like upstream
    OE, and its value should be 'fakeroot' for them, for compatibility with the
    old mechanisms.
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

5	2	lib/bb/build.py

commit 7492233f5249d348024bc3daa113a96b765f94db
Author: Christopher Larson <kergoth@gmail.com>
Date:   2011-04-06 20:34:53 -0700

    fetch.git: fix a remnant wrt persist + keyerror
    
    Signed-off-by: Christopher Larson <kergoth@gmail.com>

4	4	lib/bb/fetch/git.py

commit 1190406c526c7bb7cf415867be83e0403812a7dd
Author: Chris Larson <chris_larson@mentor.com>
Date:   2011-04-04 09:36:45 -0700

    persist_data: implement comparison, same as dict
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

28	0	lib/bb/compat.py
10	1	lib/bb/persist_data.py

commit d6fba8bad6277eb2a19e94f93a7a4baf74b29ef3
Author: Chris Larson <chris_larson@mentor.com>
Date:   2011-02-09 17:57:03 -0700

    persist_data: make SQLTable a context manager
    
    This can be used for more control over the underlying transactions.  Unlike
    the context manager of, say, a file object, we can still use the object even
    after the end of a given with block, as the context manager exit only ensures
    we've committed to the database, not that we have closed the database.
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

7	0	lib/bb/persist_data.py

commit 28958cd55e592853c68f5f2ba79381d1b8dcfb8f
Author: Chris Larson <chris_larson@mentor.com>
Date:   2011-04-04 09:37:07 -0700

    persist_data: don't allow non-string keys/values
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

5	0	lib/bb/persist_data.py

commit 7942833ca0685cf4f3b243dde6203499ef97420c
Author: Chris Larson <chris_larson@mentor.com>
Date:   2011-04-04 09:36:22 -0700

    persist_data: add has_key
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

3	0	lib/bb/persist_data.py

commit a4f62433845c29f98c6a9746d5d2847bf9506ea5
Author: Chris Larson <chris_larson@mentor.com>
Date:   2011-04-04 09:36:10 -0700

    persist_data: raise KeyError on missing elements
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

7	8	lib/bb/fetch/__init__.py
10	8	lib/bb/fetch/git.py
7	8	lib/bb/fetch2/__init__.py
3	0	lib/bb/persist_data.py

commit f50a22ee1bbe53094b2db3f85e224bb80070f4c8
Author: Martin Jansa <martin.jansa@gmail.com>
Date:   2011-03-03 18:07:41 +0000

    setup.py: install fetch2 module
    
    Signed-off-by: Martin Jansa <Martin.Jansa@gmail.com>
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

1	1	setup.py

commit 2db367bc80b53f6fbb55e31cb8612dd1b382b89c
Author: Martin Jansa <martin.jansa@gmail.com>
Date:   2011-03-03 22:52:48 +0000

    setup.py: also install bitbake-{layers,diffsigs} scripts
    
    Signed-off-by: Martin Jansa <martin.jansa@gmail.com>
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

1	1	setup.py

commit 58bdaeb679d3c84cda827a33d09ce543547c45b4
Author: Chris Larson <chris_larson@mentor.com>
Date:   2011-04-04 14:37:59 -0700

    cooker: fix -b with BBCLASSEXTEND
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

10	7	lib/bb/cooker.py

commit 156ea134e82d873ca4b5343261da2291a2b32ef6
Author: Chris Larson <chris_larson@mentor.com>
Date:   2011-04-04 13:51:51 -0700

    event: improve output for syntax errors in handlers
    
    Note: this includes IndentationError, which is a subclass of SyntaxError.
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

9	3	lib/bb/event.py

commit faf682dfc23b7ef2ece04f7d50f9741224bb3bb0
Author: Chris Larson <chris_larson@mentor.com>
Date:   2011-04-04 11:31:39 -0700

    event: improve output when eventhandler exec fails
    
    - Name the event handler by its actual name, so the traceback shows it rather
      than 'tmpHandler'.
    - Rather than immediately aborting when encountering an event handler error,
      display an error message and try to continue.
    - Show a traceback for ordinary exceptions, skipping the first entry in the
      traceback, so it only shows the useful information.
    - Show an error, but no traceback, for SystemExit with a code other than 0.
    - For for SystemExit with a code of 0, simply continue silently.
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

31	11	lib/bb/event.py

commit be647dac9d458ee4b289ff5f66ed95b311d398d8
Author: Chris Larson <chris_larson@mentor.com>
Date:   2011-04-04 09:41:41 -0700

    event: register event handler functions, not code objects
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

10	12	lib/bb/event.py

commit ee39de6856b628df792c4a56966528796fbe2c8e
Author: Mark Hatle <mark.hatle@windriver.com>
Date:   2011-04-01 16:30:11 -0500

    build.py: Merge fakeroot changes from Poky
    
    Changes imported from poky repository, master branch as of commit:
    bcc817ee058bbab91d6e88a3e1e867a4ff09aeca
    
    In Poky fakeroot processing is handled exclusively by FAKEROOTENV.  The
    fakeroot binary itself is never invoked directly.  (This is due to Poky
    using pseudo, a fakeroot replacement that is more efficiently run by
    setting environment variables.)
    
    Signed-off-by: Mark Hatle <mark.hatle@windriver.com>
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

5	7	lib/bb/build.py

commit 278fb41793343eb7c4c801242e6a0dda5aebbbaf
Author: Chris Larson <chris_larson@mentor.com>
Date:   2011-03-25 09:11:34 -0700

    build: don't choke if olddir no longer exists
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

4	1	lib/bb/build.py

commit 7a29ab534388c0095f7f826b16c5cff343927d10
Author: Chris Larson <chris_larson@mentor.com>
Date:   2011-03-25 08:58:52 -0700

    build: fix dir removal traceback
    
    This one is to cover the case where the current directory vanishes out from
    under us, so os.getcwd() raises an OSError.
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

6	2	lib/bb/build.py

commit 416d24912fcef1d82ce2c02855accd86a29e76b2
Author: Chris Larson <chris_larson@mentor.com>
Date:   2011-03-25 07:55:26 -0700

    build: in exec_func, mkdirhier ${T}
    
    This should fix the -c clean traceback people are seeing.
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

2	1	lib/bb/build.py

commit 88f0d1db88bdba95e488fba34f40dc0b72a85c33
Author: Chris Larson <chris_larson@mentor.com>
Date:   2011-03-18 09:42:33 -0700

    runqueue: simplify fakeroot environment handling
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

13	16	lib/bb/runqueue.py

commit 9e9c75761e51c852e029ccd638d9df35d04129da
Author: Chris Larson <chris_larson@mentor.com>
Date:   2011-03-18 09:56:50 -0700

    build: add missing bit necessary for mhatle's fakeroot fix
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

1	0	lib/bb/build.py

commit e736fa456dee04cb0d177272c1e1c611b1e119d7
Author: Mark Hatle <Mark.Hatle@windriver.com>
Date:   2011-03-17 19:10:18 -0400

    runqueue.py: Enable PSEUDO (fakeroot) before the fork
    
    PSEUDO when used as the fakeroot program is usually preloaded into memory,
    but disabled by default.  The trigger for enabling it is a set of environment
    variables and a fork() or exec*() operation.
    
    We need to setup the environment, specifically PSEUDO_DISABLED=0, prior to
    the fork() so that python tasks can be run under PSEUDO control.
    
    This patch is based on the work in Poky primarily from Richard Purdie.
    
    See the following Poky commits for detailed history on this change:
    
    commit 1f3e313fd5cc5ae8ea838bf8fcdedace3cb72584
    Author: Richard Purdie <rpurdie@linux.intel.com>
    Date:   Wed Dec 8 00:08:04 2010 +0000
    
        bitbake Revert bitbake exec() and go back to fork() for performace wins (first draft)
    
        Signed-off-by: Richard Purdie <rpurdie@linux.intel.com>
    
    commit 52aada2eaf08d57d5f715f155f2d878831dbaab0
    Author: Richard Purdie <rpurdie@linux.intel.com>
    Date:   Tue Dec 21 00:51:24 2010 +0000
    
        bitbake/runqueue.py: Somehow the python environment mapping is failing so do it manually
    
        Signed-off-by: Richard Purdie <rpurdie@linux.intel.com>
    
    commit 1b08a7eb8b708f4d0fc119cf89deb450fa62fea1
    Author: Richard Purdie <richard.purdie@linuxfoundation.org>
    Date:   Mon Feb 28 15:31:20 2011 +0000
    
        bitbake/cache/runqueue.py: Move workload for recipe parsing to the child process
    
        Parsing the recipe in the parent before forking off the child worker
        can mean the parent doesn't hit the idle loop and becomes a bottleneck
        when lauching many short lived processes.
    
        The reason we need this in the parent is to figure out the fakeroot
        environmental options. To address this, add the fakeroot variables
        to the cache and move recipe loadData into the child task.
    
        For a poky-image-sato build this results in about a 2 minute speedup
        (1.8%).
    
        Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>
    
    Integrated and merged into bitbake upstream
    
    Signed-off-by: Mark Hatle <Mark.Hatle@windriver.com>
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

9	1	lib/bb/cache.py
29	0	lib/bb/runqueue.py

commit f229824dc9c453adf6067500e2bf6761536e4f2f
Author: Chris Larson <chris_larson@mentor.com>
Date:   2011-03-16 08:07:29 -0700

    Initial work on getting bitbake working under pypy
    
    - use os.chmod, not os.fchmod, as the latter is missing under pypy
    - rearrange our imports a bit
    - don't die if sqlite3 is missing shared cache support
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

2	1	lib/bb/build.py
19	21	lib/bb/fetch2/__init__.py
2	1	lib/bb/persist_data.py

commit 967cd1aa2c59f15d805862bd9935f507c635c762
Author: Chris Larson <chris_larson@mentor.com>
Date:   2011-03-16 08:07:37 -0700

    More 'is' fixups
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

2	2	lib/bb/data_smart.py

commit a26a2f548419af0e971ad21ec0a29e5245fe307f
Author: Chris Larson <chris_larson@mentor.com>
Date:   2011-03-08 12:07:24 -0700

    Fix more incorrect usages of 'is'
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

3	3	lib/bb/fetch/bzr.py
3	3	lib/bb/fetch2/bzr.py
4	4	lib/bb/fetch2/hg.py
2	2	lib/bb/fetch2/osc.py
3	3	lib/bb/fetch2/svn.py
2	2	lib/bb/runqueue.py

commit 8f5cf3a9975d8e6878e403be0e6edc22cc44f396
Author: Chris Larson <chris_larson@mentor.com>
Date:   2011-03-08 11:54:45 -0700

    codeparser: use ==, not 'is' to compare strings
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

2	2	lib/bb/codeparser.py

commit e0c364d9a5110b2b72361cfb5acc7daa21ac8420
Author: Chris Larson <chris_larson@mentor.com>
Date:   2011-03-16 07:38:18 -0700

    codeparser: fix ShellSyntaxError usage
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

2	2	lib/bb/codeparser.py

commit cd274f653c677daa69b2e15ffed803b7b1d25a43
Author: Chris Larson <chris_larson@mentor.com>
Date:   2011-03-08 16:29:22 -0700

    bb.siggen: import os
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

1	0	lib/bb/siggen.py

commit 53a10b6793c5bdb45854483abe5da791058dfd84
Author: Chris Larson <chris_larson@mentor.com>
Date:   2011-03-08 09:39:40 -0700

    utils: fix typo in lockfile
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

1	1	lib/bb/utils.py

commit 238151441c74db53d6e4d4753f4f96c32f6f13b6
Author: Chris Larson <chris_larson@mentor.com>
Date:   2011-03-08 09:33:40 -0700

    lockfile: ask for forgiveness, not permission
    
    Create the lockfile directory if it doesn't exist, rather than erroring out if
    it doesn't exist (was also racy).
    
    Also improve the wording of the error message shown when the lockfile's
    directory is not writable.
    
    Note for the future, this function should be improved, particularly with
    regard to its exception handling. It should be catching the *exact*
    exception(s) it will encounter when the file is locked, and continuing in that
    case only. If it did that, there'd be no need for the proactive directory
    writability check, as bb.utils.lockfile() would raise an appropriate IOError
    for that case.
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

6	7	lib/bb/utils.py

commit 43dddb2f9689d523588146df3eb86e11f554a8c0
Author: Chris Larson <chris_larson@mentor.com>
Date:   2011-03-07 16:01:21 -0700

    hob: adjust for master's eventHandler API
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

8	4	lib/bb/ui/crumbs/hobeventhandler.py

commit bdd10e9b357417774f30cc52e89e3fa83bbbbfc0
Author: Chris Larson <chris_larson@mentor.com>
Date:   2011-03-07 15:54:29 -0700

    goggle: exit quietly on ^C
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

2	0	lib/bb/ui/goggle.py

commit edd5075a50c435ef42ebe9d0003a1e9bbe85e25b
Author: Joshua Lock <josh@linux.intel.com>
Date:   2011-02-24 16:02:13 +0000

    bitbake/cache: bump cache version after recent changes
    
    (From Poky rev: 08c7a59b5a5d24cf8c03b9da8278d30c0c175f5e)
    
    Signed-off-by: Joshua Lock <josh@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/cache.py

commit 42cfa8e261d162f89b1de43f6db336fedd71c6b0
Author: Joshua Lock <josh@linux.intel.com>
Date:   2011-02-02 20:14:41 +0000

    bitbake/progress: make progress dialog modal for parent window
    
    (From Poky rev: f258cedfe8432d61eebd21a239381e9510be7109)
    
    Signed-off-by: Joshua Lock <josh@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	2	lib/bb/ui/crumbs/progress.py

commit c2ee2b71ecae73aa75636aee92755870f85b391a
Author: Joshua Lock <josh@linux.intel.com>
Date:   2011-02-02 13:02:43 +0000

    Add new UI hob, a prototype Gtk+ GUI for creating images
    
    Hob is a first stab at implementing an interactive GUI for BitBake.
    
    (From Poky rev: 6dbceb0be9a1b8d7d5124b4fbd74f18609bc6146)
    
    Signed-off-by: Joshua Lock <josh@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

138	0	lib/bb/ui/crumbs/hobeventhandler.py
596	0	lib/bb/ui/hob.py

commit f491f1fd607a3d3ed26b9281e8a5c19b93db3f70
Author: Joshua Lock <josh@linux.intel.com>
Date:   2011-02-02 12:48:10 +0000

    bitbake/cooker: don't drop possible_world ref count
    
    We need this if we want to run the buildWorldTargetList function more than
    once, for example in a UI where we can change the MACHINE and DISTRO as much
    as we like before triggering a build.
    
    (From Poky rev: c2814caa5d80d3a1097c83b82b7a3f8eeb8da548)
    
    Signed-off-by: Joshua Lock <josh@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

0	4	lib/bb/cooker.py

commit 97c405f0d7bdc765cbac3197890634c33d112f24
Author: Joshua Lock <josh@linux.intel.com>
Date:   2011-02-01 15:23:47 +0000

    bitbake/progress: add method to pulse the progress bar
    
    When we're running a long operation with indeterminate duration it's useful
    to use the gtk.ProgressBar's pulse method to show that something is happening
    but we don't know how long it will take.
    
    (From Poky rev: fb62c54e13e875dd81e0b5220c54a7753b4d5fa2)
    
    Signed-off-by: Joshua Lock <josh@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

4	0	lib/bb/ui/crumbs/progress.py

commit c72ad4fdeb76f8ff407fc11e0de3a78aac836572
Author: Joshua Lock <josh@linux.intel.com>
Date:   2011-01-19 17:20:46 +0000

    bitbake/crumbs: update documentation header
    
    (From Poky rev: 7f8aa691c52547ee5f1272a7931ca9cccd1a120a)
    
    Signed-off-by: Joshua Lock <josh@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/ui/crumbs/__init__.py

commit 4a2fb1b550508d0541a4973dffc69df61d2301ce
Author: Joshua Lock <josh@linux.intel.com>
Date:   2011-01-13 18:30:02 +0000

    bitbake/event: fix some whitespace issues
    
    (From Poky rev: b14cda62d075d1213fc4769aa6b3622a491b57d5)
    
    Signed-off-by: Joshua Lock <josh@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	3	lib/bb/event.py

commit 04df9b4ce6657af6f1c6e43a5f6ae80bfa51ae2e
Author: Joshua Lock <josh@linux.intel.com>
Date:   2011-01-12 12:24:04 +0000

    introduce crumbs.TaskListModel a gtk.ListStore subclass
    
    Provide a gtk.ListStore subclass which includes a function,
    populate(), which takes as input the data emitted by
    bb.event.TargetsTreeGenerated and fills the ListStore model
    appropriately.
    Furthermore convenience functions are provided by which the caller can
    get gtk.TreeModel subclasses which provide filtered views of the data.
    
    (From Poky rev: 9b43eaff99615d8bd58b2f3a54c280e5470d3a9c)
    
    Signed-off-by: Joshua Lock <josh@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

346	0	lib/bb/ui/crumbs/tasklistmodel.py

commit 93beb036705473f83cb2c98f22694f36a982ac6b
Author: Joshua Lock <josh@linux.intel.com>
Date:   2011-01-07 12:57:18 +0000

    bitbake/[cooker|cache]: cache summary, license and group. Add to targets tree
    
    Add summary, license and group metadata to RecipeInfo and the cache.
    Unfortunately this impacts parse speed but gives us a much richer set of
    metadata to expose through UI's which can be accessed via the
    generateTargetsTree command.
    
    (From Poky rev: a13304e1c6500db95823961a5a34849db46037e3)
    
    Signed-off-by: Joshua Lock <josh@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

12	0	lib/bb/cache.py
6	0	lib/bb/cooker.py

commit b8cfc85ddc8a0c420eaf78dc75d1261b7873ba15
Author: Joshua Lock <josh@linux.intel.com>
Date:   2011-01-07 12:00:09 +0000

    bitbake/cooker: reduce code duplication
    
    Move runqueua and taskdata initialisation into a new function,
    prepareTreeData(), so that generateDepTreeData() and
    generateTargetsTreeData() are not duplicating the same logic.
    
    (From Poky rev: 3c1a3b0724d5175e81ec81cce448d5b618d21958)
    
    Signed-off-by: Joshua Lock <josh@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

11	26	lib/bb/cooker.py

commit c4328e5c5e6c03791a6dd6706540243462595e4e
Author: Joshua Lock <josh@linux.intel.com>
Date:   2011-01-07 11:45:00 +0000

    bitbake/cooker: add generateTargetsTree method
    
    The generateTargetsTree() command needs to return a model which includes more
    metadata than the one generated by generateDepTree().
    
    This patch adds a new method generateTargetsTreeData() to the cooker, based
    on generateDepData(), and switches generateTargetsTree() to use it.
    
    (From Poky rev: dcfc5ae7b1f5925587b0675e1cba6c60f098267c)
    
    Signed-off-by: Joshua Lock <josh@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

64	3	lib/bb/cooker.py

commit f9111cc8960b7ecdf7451c275518d4c9cd32750e
Author: Joshua Lock <josh@linux.intel.com>
Date:   2011-01-04 20:28:20 +0000

    implement command to find configuration files for a config variable
    
    Some configuration variables (MACHINE, MACHINE-SDK and DISTRO) set which
    confguration files bitbake should use.
    The added command , findConfigFiles, enables a UI to query which files are
    suitable values for a specified parameter.
    
    (From Poky rev: 3939a216a53f58831e640e85ed95f7edff3ca76f)
    
    Signed-off-by: Joshua Lock <josh@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

11	0	lib/bb/command.py
24	0	lib/bb/cooker.py
10	0	lib/bb/event.py

commit ed9178cc40c7659fda96f628aca5bcd13fd0bc61
Author: Joshua Lock <josh@linux.intel.com>
Date:   2011-01-04 20:08:51 +0000

    implement command to get all possible targets and their dependencies
    
    Add a new command generateTargetsTree() which returns a dependency tree of
    possible targets (tasks and recipes) as well as their dependency information.
    
    Optional parameter 'klass' also ensures any recipes which inherit the
    specified class path (i.e. 'classes/image.bbclass') are included in the model
    
    (From Poky rev: 1b3eb0c35f504e8f652303a4b238034ecc5c5d02)
    
    Signed-off-by: Joshua Lock <josh@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

10	0	lib/bb/command.py
25	0	lib/bb/cooker.py
9	0	lib/bb/event.py

commit ef1ba917193412b8a437bb0f9164c1031a55def7
Author: Joshua Lock <josh@linux.intel.com>
Date:   2011-01-04 17:34:30 +0000

    bitbake/cache: store a list of inherited files in the cache
    
    (From Poky rev: 920c402342bd490cd94b365c3e151de735dec0d6)
    
    Signed-off-by: Joshua Lock <josh@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

5	0	lib/bb/cache.py

commit 0d732b3b546ee818350cd2d64b120decb76c36e9
Author: Chris Larson <chris_larson@mentor.com>
Date:   2011-02-27 15:11:18 -0700

    server: use local fixed _bootstrap when appropriate
    
    When running on python versions 2.6.0 through 2.6.2, we use a local copy
    of the python 2.6.6 _bootstrap method of Process, to ensure that we have
    the fix for http://bugs.python.org/issue5313. This avoids the "hang" of
    the bitbake process at 0% progress during the parsing on older distros
    like Fedora 12.
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

52	3	lib/bb/server/process.py

commit 898f557cbd443cdeff137fd926aac06f2aaee6c4
Author: Chris Larson <chris_larson@mentor.com>
Date:   2011-03-03 07:15:47 -0700

    bitbake-layers: drop 2.6 from #!, per Joshua Lock
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

1	1	bin/bitbake-layers

commit 36fe59ce314c295d239b76de34c8714def2c32d5
Author: Khem Raj <raj.khem@gmail.com>
Date:   2011-03-02 08:33:49 +0000

    fetch, fetch2: Get rid of DeprecationWarning notice
    
    * This patch fixes a cosmetic issue currently we get with master
    
    WARNING: /home/kraj/work/bitbake/lib/bb/fetch2/__init__.py:733:
    DeprecationWarning: Call to deprecated function bb.mkdirhier: Please use bb.utils.mkdirhier instead.  bb.mkdirhier("%s/%s" % (rootdir, destdir))
    
    Signed-off-by: Khem Raj <raj.khem@gmail.com>
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

1	1	bin/bitdoc
1	1	lib/bb/fetch/bzr.py
1	1	lib/bb/fetch/cvs.py
2	2	lib/bb/fetch/git.py
1	1	lib/bb/fetch/hg.py
1	1	lib/bb/fetch/osc.py
1	1	lib/bb/fetch/perforce.py
1	1	lib/bb/fetch/repo.py
1	1	lib/bb/fetch/svk.py
1	1	lib/bb/fetch/svn.py
2	2	lib/bb/fetch2/__init__.py
1	1	lib/bb/fetch2/bzr.py
1	1	lib/bb/fetch2/cvs.py
1	1	lib/bb/fetch2/git.py
1	1	lib/bb/fetch2/hg.py
1	1	lib/bb/fetch2/osc.py
1	1	lib/bb/fetch2/perforce.py
1	1	lib/bb/fetch2/repo.py
1	1	lib/bb/fetch2/svk.py
1	1	lib/bb/fetch2/svn.py

commit c6c31b5c58a502703879243ca37585e058e09c71
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2011-02-25 16:31:40 +0000

    bitbake/utils.py: Allow join_deps to return a list that isn't comman separated
    
    (From Poky rev: 2069a29a8256bc94e6c1137da78d7b129a8cd4e8)
    
    Signed-off-by: Richard  Purdie <richard.purdie@linuxfoundation.org>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

5	2	lib/bb/utils.py

commit a7aa0415bdaa458a941004bf8dd8bbfeddd6ef5a
Author: Chris Larson <chris_larson@mentor.com>
Date:   2011-02-25 17:05:56 -0700

    build: add missing newline
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

1	1	lib/bb/build.py

commit a600b79ecefc95eeb266c3f362c7160fa8c948c1
Author: Chris Larson <chris_larson@mentor.com>
Date:   2011-02-25 15:36:15 -0700

    build: switch to old cwd handling
    
    We want this to ensure the user can run the run. script from anywhere.
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

3	1	lib/bb/build.py

commit 057c3cddeb72584c6c3908bd702288cece9b66ea
Author: Chris Larson <chris_larson@mentor.com>
Date:   2011-02-24 13:16:43 -0700

    cooker: use BBHandler.inherit for INHERIT
    
    Ideally we'd avoid direct BBHandler usage, but honestly, to say the whole
    bb.parse abstraction is incredibly leaky is an understatement.  If we try to
    make handle() not reparse classes, things get ugly fairly quickly, as
    inherit() calls handle() itself after adding the class to the inherit cache.
    
    This change fixes it so we no longer risk reparsing a class if:
    
    - it's listed in INHERIT multiple times
    - it's listed in INHERIT and is 'inherit'ed from a class in INHERIT
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

24	10	lib/bb/cooker.py

commit 87112adee4e8add0a97ff8be8311d9afe202412d
Author: Chris Larson <chris_larson@mentor.com>
Date:   2011-02-23 10:17:53 -0700

    cooker: simplify self.configuration.data vs data usage
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

8	9	lib/bb/cooker.py

commit 90fc09ee050a24095a488d8ce98c7945bf282f6d
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2011-02-24 22:02:19 +0000

    build.py: Operate logfile handling at the task level
    
    Previously, not all task output could end up in the logfile and
    sub functions run using exec_func() calls would end up logging to
    /dev/null. This is extrememly confusing for users who want to find
    the output from a given task as there are several possible log files,
    or it might not be there at all.
    
    This patch changes exec_task() to redirect standard output/error
    to the logfile along with any python logging output. This change is
    applied for all python/shell tasks so it doesn't matter whether output
    comes from os.system() calls or wherever, the logs are always correct.
    
    This also removed the ton of log files previous code could generate
    in ${T}, again making this simpler for users.
    
    Based upon patches from Poky.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

54	16	lib/bb/build.py

commit 44dcec236f3b15c68c87e3fa3bfa2d265a910917
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2011-02-24 21:53:59 +0000

    build.py: Improve exec_task standalone usage
    
    This commit consolidates all the task execution code and exception
    handling into one place, the exec_task funciton where it should be.
    
    This function now returns an exit code value and handles all exceptions.
    
    This ensures the task success/failure/invalid events are always sent.
    
    TaskInvalid also becomes an event rather than being an exception.
    
    Based upon changes in Poky.
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

24	10	lib/bb/build.py
7	2	lib/bb/runqueue.py

commit 1265ce98d7a2ab024e639647ac6300c3cf808730
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2011-02-23 13:13:31 +0000

    bitbake/data_smart: Improve Variable expansion error handling
    
    If expanding a variable triggers an exception the caller currently has no
    way to supress the error message or otherwise handle the siutation. An
    example of where this is a problem is "bitbake -e" showing tracebacks and
    errors for variables like SRCPV in OE/Poky.
    
    Secondly in a chained expansion fails, log mesages are recorded for
    every step of the expansion, not just the innermost error which is
    where the real failure occured.
    
    To fix this we introduce a new exception ExpansionError which callers
    can handle as appropriate.
    
    (From Poky rev: 101b599110f7bc29f52a14a968f30323aeb797ca)
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

14	2	lib/bb/data_smart.py

commit 99c38e8e31adf02a1945f54fe47dd1ac7941cb21
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2011-02-23 11:48:01 +0000

    bitbake/data_smart: Improve the way lazyassignment works
    
    Currently, if a variable has been set with ??= and the code looks it up
    before the data finalisation phase, no value is found. This is causes
    serious problems for anonymous python functions which manipulate data, or
    for the fetcher revision handling code where revisions can be set with
    ??=.
    
    There is also a significant performance implication for processing lazy
    assignment in finalise.
    
    Moving the check for a default value into getVarFlag addresses both
    the timing issue and the performace. This change gives a 7% real time
    performance improvement to parsing the Poky metadata. The cost of the
    check at this point is minimal since we have all the data flags available.
    
    This should also fix Yocto bug 752.
    
    (From Poky rev: 6ea24f04cd635295d826f03d9c7d8a08cc1d5b31)
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	0	lib/bb/data_smart.py
0	8	lib/bb/parse/ast.py

commit 1faa0bd624f4f5399ea3fbcc87b109c97b821801
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2011-02-23 11:47:50 +0000

    bitbake/fetch2: Ensure SRCREV_pn-PN is checked for a revision when the SRC_URI is unnamed
    
    (From Poky rev: 707132c60a84cdcf50da056c68f2da7402d3b2e8)
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	1	lib/bb/fetch2/__init__.py

commit fc701f08717d1d066f1ceaa0743821e3c03589cd
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2011-02-23 11:09:07 +0000

    bitbake/cooker: Fix parsing failure zombie problem
    
    When parsing if a SystemExit event is triggered, it causes the parsing thread to
    exit and the main process hangs waiting for it to finish indefintely. Add code to
    catch BaseExceptions and raise these with the main process gracefully instead
    of just hanging indefinitely with zombie processes.
    
    (From Poky rev: 56a92105fe6b779c69bccd44c2cff8f21cafdfbd)
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

12	0	lib/bb/cooker.py

commit ff3ac7274fd1e07ab6ebf25e259572ffcd2da2e9
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2011-02-16 12:35:35 +0000

    bitbake/fecth2: Ensure BB_FETCH_PREMIRRORONLY being set as false is handled correctly
    
    (From Poky rev: 3ef2d39dbf8a573acfbf633c1d5d7cb3cee18788)
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	1	lib/bb/fetch2/__init__.py

commit 6348657c5b73200cda5949aa13a9bd5e147b2df1
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2011-02-13 00:05:06 +0000

    bitbake/fetch2: Revert part of the unpack change until the issues with it are resolved
    
    (From Poky rev: b9a97e07b48b20b00feff5b8c7196c3a3b7762b6)
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	2	lib/bb/fetch2/__init__.py

commit ab05499d1ca98fd20ea7f871313b58bf26236416
Author: Mark Hatle <mark.hatle@windriver.com>
Date:   2011-02-11 11:43:54 -0600

    fetch2: unpack revision
    
    Revise the unpack function to have a way to disable the unpack.  This is
    based on the work from "Andreas Oberritter <obi@opendreambox.org>", see
    http://cgit.openembedded.net/cgit.cgi/openembedded/commit/?id=2bdfe8519eda8067845019a699acdf19a21ba380
    
    In addition, the to_boolean function comes from the work of
    "Chris Larson <chris_larson@mentor.com>", see
    http://cgit.openembedded.net/cgit.cgi/openembedded/commit/?id=900cc29b603691eb3a077cb660545ead3715ed54
    
    (From Poky rev: 3faa635fd408695dd5b754fda3f6060dd670b81d)
    
    Signed-off-by: Mark Hatle <mark.hatle@windriver.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

53	39	lib/bb/fetch2/__init__.py
12	0	lib/bb/utils.py

commit 5d9eaa644d7a1832daef5a14cd708226be1c1bf6
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2011-02-11 22:08:21 +0000

    bitbake/fetch2: Add explict network access exception and handling to give users usable error messages
    
    (From Poky rev: 029f19bd3d4dc09fb48bf6e5322d48bb84c4eb34)
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

18	2	lib/bb/fetch2/__init__.py
3	3	lib/bb/fetch2/bzr.py
2	2	lib/bb/fetch2/cvs.py
1	1	lib/bb/fetch2/git.py
2	2	lib/bb/fetch2/hg.py
2	2	lib/bb/fetch2/osc.py
2	2	lib/bb/fetch2/repo.py
1	1	lib/bb/fetch2/ssh.py
2	2	lib/bb/fetch2/svn.py

commit c4f6794c5842f15b2d2e43be79c548ed29704b2a
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2011-02-11 16:24:26 +0000

    bitbake/fetch2: Fix patch merge error
    
    (From Poky rev: 132ec8d3b7e5916c64de85b248632021f51701d3)
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/fetch2/__init__.py

commit a564d470608aa57e2672efd7674345f4736810a5
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2011-02-11 16:16:51 +0000

    bitbake/fetch2: Add some debug output so its clear when PREMIRRORS, upstream and MIRRORS are being used
    
    (From Poky rev: a72d49478e57b05b99cb1b3beec62a9e79a24e7a)
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	0	lib/bb/fetch2/__init__.py

commit d27d30f190dd67de5944911c95b146b6c02a8961
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2011-02-11 16:15:36 +0000

    bitbake/fetch2: Ensure network access status is reset for each loop iteration in download()
    
    (From Poky rev: 20afb21a375b6a5f0d4ff6e269eeee121d6f087a)
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

4	0	lib/bb/fetch2/__init__.py

commit 841c5948deca8265391c8035eb62f40d3e77de81
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2011-02-11 12:16:44 +0000

    bitbake/fetch2/wget: Fix missing string parameter reference
    
    (From Poky rev: 05d8b6422dc3154b2890f8db3f919faec4457d6f)
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/fetch2/wget.py

commit 0c1bd6c6786b92303dfdd47265cb0f53163319c1
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2011-02-11 12:14:20 +0000

    bitbake/fetch2: Ensure failed fetch attempts are logged in the debug logs
    
    (From Poky rev: ea70c4362fdb81bc9467975c145c48196c45e3af)
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

4	2	lib/bb/fetch2/__init__.py

commit 3b72de69f1fb0d62203ad63e50c570a552132147
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2011-02-11 12:06:44 +0000

    bitbake/fetch2: Correctly handle git mirror tarball fetching
    
    (From Poky rev: 7f30131faaa5e3fdb1191c9da95c5683cefafeb5)
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

5	4	lib/bb/fetch2/__init__.py

commit 6f13c23f200d9261169fc25cde4911d639a7275e
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2011-02-11 12:04:59 +0000

    bitbake/fetch2: Pass over malformatted (empty) mirror url lines
    
    (From Poky rev: 20ab1cb0ca10b0c7724f2154fe5b54c939b8a887)
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

5	1	lib/bb/fetch2/__init__.py

commit 2cc4a1a8679610ea9dda99159691577019eed2c5
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2011-02-11 21:59:23 +0000

    bitbake/fetch2: Fix message about md5 checksums when sha256 is incorrect
    
    (From Poky rev: 4a226460d5e158e8adbf74a68717cb9a923e8009)
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

9	1	lib/bb/fetch2/__init__.py

commit 43188e8453aacb81688a7664cd7077fe60afbbe0
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2011-02-14 16:32:07 +0000

    process.py: Avoid deprecation warning
    
    bitbake/lib/bb/process.py:15: DeprecationWarning: BaseException.message has been deprecated as of Python 2.6
    
    (From Poky rev: 6cb8fd6def4912e4aa76330649ba42a9ed2694fd)
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

4	4	lib/bb/process.py

commit a6aa2957273b635416846c455eb53f79990b29a5
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2011-01-27 11:20:50 +0000

    bitbake/build.py: When looking up extra stamp info for setscene tasks, use the real taskname
    
    (Fixed based on a bug reported by Dongxiao Xu <dongxiao.xu@intel.com>)
    
    (From Poky rev: c34913ea5a4f20ce4bca3c68a65e9f64f1e3910c)
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

6	2	lib/bb/build.py

commit db7681df2054ebbd1eb45dd4e57966adeecb936a
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2011-01-26 12:20:14 +0000

    bitbake/unlockfile: Fix exception handling
    
    (From Poky rev: 5f866ac84f72699139be1d98f010017c7b71f0f7)
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/utils.py

commit 935b98818f67e13ecf4c4eb00f5e08661df19d40
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2011-01-24 14:26:50 +0000

    bitbake/utils: Ignore OSError in unlockfile
    
    (From Poky rev: 74783fec56d6ced1a793b36410233472e7daf445)
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/utils.py

commit 17c9d1caa09796dc46d22f38876454a5f1d567d8
Author: Kevin Tian <kevin.tian@intel.com>
Date:   2011-01-20 13:54:51 +0800

    siggen.py: better print for task hash comparison
    
    current bitbake-diffsigs simply print out the whole 'runtaskdeps' when there's mismatch, which
    is not very readable. On the other hand, 'runtaskhashes' comparison is broken which assumes
    same key existing in two sides. This commit provides better output by figuring out differences
    from addition, removal or hash change.
    
    (From Poky rev: bcb18738361ee2394bc266911e9e75d5bf1c10cd)
    
    Signed-off-by: Kevin Tian <kevin.tian@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

12	5	lib/bb/siggen.py

commit 54112fd193733b71598b23e2c481480d78d1d9e3
Author: Dongxiao Xu <dongxiao.xu@intel.com>
Date:   2011-01-20 21:02:11 +0800

    fix parameter order for flaglist()
    
    (From Poky rev: 5da9423217a5cd204d17a0f7bbe248082a1b257c)
    
    Signed-off-by: Dongxiao Xu <dongxiao.xu@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	2	lib/bb/cache.py

commit e9f7b8f9f830d3123a155ffef76e5a6684958982
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2011-01-20 22:44:33 +0000

    bitbake/providers.py: Fix runtime providers problems
    
    Take a real world testcase where you have two recipes, each of which
    contains PACKAGES_DYNAMIC = "gdk-pixbuf-loaders-*" and recipes which
    RDEPEND on some gdk-pixbuf-loaders-xxx package. To select between these
    you need to set a PREFERRED_PROVIDER.
    
    These are specified in the PN namespace so the locgical conclusion is
    that setting PREFERRED_PROVIDER_gdk-pixbuf = "gtk+" should work. It
    doesn't and instead checks crazy things.
    
    The code was correctly finding the two possible providers, gtk+ and
    gdk-pixbuf. It was however only accepting PREFERRED_PROVIDER_gtk+
    = "gdk-pixbuf" to resolve this problem which reads as the exact
    opposite to what was wanted.
    
    This patch changes the code to do something that makes sense. I suspect
    that before these changes it was pretty much a null operation rubber
    stamping the single provider case. For Poky at least it exposes a few
    cases where -nativesdk recipes were providing the same things as their
    normal counterparts but these are genuine bugs in the metadata.
    
    I've also attempted to make the multiple provider error message human
    readable as I counldn't understand it and I doubt anyone else could
    either.
    
    (From Poky rev: d4f537965b3a530ca7ed3bce206abbff810031e8)
    
    Signed-off-by: Richard  Purdie <richard.purdie@linuxfoundation.org>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

11	7	lib/bb/providers.py

commit f08da7b43513639915723953e957f69434e0cebc
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2011-01-19 13:30:14 +0000

    bitbake/utils.py: Teach unlockfile about shared mode lockfiles
    
    (From Poky rev: fd88588df029604689db9b0e30c55aad68392a5d)
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

7	1	lib/bb/utils.py

commit ebea0799d899f321d03eb8dd6217a715a3f03731
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2011-01-19 11:01:54 +0000

    bitbake/utils.py: Add option of holding shared lockfiles
    
    (From Poky rev: 7857834691868b7f48f732ee78d8770f5473ff68)
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

6	2	lib/bb/utils.py

commit 1a32c01490abf1e90e6733901cb08a1829e0ec59
Author: Dongxiao Xu <dongxiao.xu@intel.com>
Date:   2011-01-18 16:18:18 +0800

    Introduce stamp-extra-info task flag into stamp filenames
    
    For certain tasks, we need additional information in build stamp file
    other than the task name and file name. stamp-extra-info is introduced as
    a task flag which is appended to the stamp file name.
    
    [Code simplifcations/tweaks from Richard]
    
    (From Poky rev: 80cf3e405c923ed95dd09936739e816dbdd92299)
    
    Signed-off-by: Dongxiao Xu <dongxiao.xu@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

9	3	lib/bb/build.py
10	1	lib/bb/cache.py
6	6	lib/bb/runqueue.py
4	4	lib/bb/siggen.py

commit 3c6caab8bc1b104e7db680e2d8bfab51642cad32
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2011-01-17 15:52:06 +0000

    bitbake/build.py: Rename message field to avoid DeprecationWarning: BaseException.message warning
    
    (From Poky rev: 0388f0758f84c7a8ec975d9be7e384cb65d9af4c)
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

4	4	lib/bb/build.py

commit 850e194f8ce5beeb5226be62ddb7ff839815bd33
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2011-01-12 15:58:48 +0000

    bitbake/siggen.py: Fix whitelisted variable handling
    
    Even when a variable was whitelisted, any dependencies of that variable
    could still creep into the task hash due to the way the whitelisting
    code worked. This patch changes thing to ensure that when whitelisted,
    that whitelisting applies to the variable and any dependencies it has.
    
    (From Poky rev: 25b3d39612c0bea1d136e346d938abde56aa699f)
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	4	lib/bb/data.py
21	6	lib/bb/siggen.py

commit 92f111a0b2852a3fd5f6a12fe9a890695dece50a
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2011-02-18 17:06:45 +0000

    Increment version for development version

1	1	bin/bitbake
1	1	lib/bb/__init__.py

commit 2e667ba62e3eb06d503acbac71b4e4d1fad7d92b
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2011-02-18 17:03:42 +0000

    Release 1.12.0

1	1	bin/bitbake
1	1	lib/bb/__init__.py

commit 718448e96d714adf8aaecedac5cb77c7f36b9cdb
Author: Chris Larson <chris_larson@mentor.com>
Date:   2011-02-16 15:58:07 -0700

    uihelper: import bb.build, kill commented lines
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

2	10	lib/bb/ui/uihelper.py

commit e9e174e5781fc3de4dfd60d01228048a06a62b16
Author: Chris Larson <chris_larson@mentor.com>
Date:   2011-02-16 17:50:50 -0500

    cooker: don't choke if we have nothing to parse
    
    If all our recipes were cached, there's no reason to fire off any parsing
    progress events at all.
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

11	5	lib/bb/cooker.py

commit 8eafb12208fcd073f930c0c74f25831d02c02198
Author: Chris Larson <chris_larson@mentor.com>
Date:   2011-02-16 15:41:37 -0700

    siggen: add bb.data, bb.parse imports
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

2	0	lib/bb/siggen.py

commit 778571f155139fcf43d0e30e875c39d6592ae03f
Author: Chris Larson <chris_larson@mentor.com>
Date:   2011-02-16 15:24:24 -0700

    runqueue: simplify RunQueueStats.copy
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

1	4	lib/bb/runqueue.py

commit 1954f182687a0bd429175dda87f05d8a94bb403a
Author: Chris Larson <chris_larson@mentor.com>
Date:   2011-02-16 15:18:06 -0700

    runqueue: pass a copy of the RunQueueStats to events
    
    This avoids cases where the stats are modified after the event is fired but
    before it's dispatched to the UI.
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

9	1	lib/bb/runqueue.py

commit cd43144f0fe8487bb4dc8a7bd7be7a9ac071ecdd
Author: Chris Larson <chris_larson@mentor.com>
Date:   2011-02-15 17:07:00 -0700

    server: clean up call of write_profile_stats
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

4	5	lib/bb/server/process.py

commit dbc0cf970140cfb18c58d8110eef5cef10ea33cb
Author: Chris Larson <chris_larson@mentor.com>
Date:   2011-02-15 16:59:56 -0700

    server: add profiling support to ProcessServer
    
    Based on poky's support, particularly the format of the processed log file and
    the log message shown to the user regarding the files written.
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

34	0	lib/bb/server/process.py

commit 67a55a6b45fec300bea42c18be41cf0a2f931072
Author: Chris Larson <chris_larson@mentor.com>
Date:   2011-02-11 21:26:51 -0700

    Enable some DeprecationWarnings
    
    We'll be skipping the Pending Deprecation step given our release process.
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

3	3	lib/bb/__init__.py
10	12	lib/bb/msg.py
3	2	lib/bb/persist_data.py

commit 01d12f4f96447aeda48e504fb0708c2e0dc91e30
Author: Chris Larson <chris_larson@mentor.com>
Date:   2011-02-09 17:56:42 -0700

    persist_data: handle lock in sqlite and use the shared cache
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

3	11	lib/bb/persist_data.py

commit 34c7ff67d7f4c7dde2027e000def1a49f3286829
Author: Chris Larson <chris_larson@mentor.com>
Date:   2011-02-11 09:42:38 -0700

    persist_data: drop SQLData indirection
    
    The common case (if not the only case) is to only use a single domain.  The
    only reason SQLData exists is to make it easier to delete a domain.  Yet,
    there's no need for us to delete a domain if SQLTable knows how to clear
    itself out.  So, add clear() to the table and pass the domain to persist().
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

6	9	lib/bb/fetch/__init__.py
2	4	lib/bb/fetch/git.py
6	9	lib/bb/fetch2/__init__.py
9	30	lib/bb/persist_data.py

commit c197043717ce621c345800bde689b1231fe8b679
Author: Chris Larson <chris_larson@mentor.com>
Date:   2011-02-09 17:57:35 -0700

    persist_data: use better items/values methods for SQLTable
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

10	8	lib/bb/persist_data.py

commit db2abcd6416608054d66e11e17a9f2204999750e
Author: Saul Wold <sgw@linux.intel.com>
Date:   2011-02-09 14:30:29 -0800

    fetch2: Correct the clean() mechanism for the fetcher2 code
    
    This create a clean() method in each of the fetcher modules
    and correctly cleans the .done stamp file and lock files
    
    (From Poky rev: 14dea89521c0c648e8e543388096a6dcd6d4f2e0)
    
    Signed-off-by: Saul Wold <sgw@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

34	0	lib/bb/fetch2/__init__.py
12	0	lib/bb/fetch2/cvs.py
6	0	lib/bb/fetch2/git.py
4	0	lib/bb/fetch2/local.py
7	0	lib/bb/fetch2/svn.py

commit e7534cb70a9d4eee841d551fa5c1b104424add22
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2011-02-10 15:14:49 +0000

    bitbake/fetch2/git: Write mirror tarballs if enabled and they don't exist, also set a default value for mirror tarball generation
    
    (From Poky rev: 59a08262aba2d2b9b8b299a2818fb4cfe13b9909)
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

11	11	lib/bb/fetch2/git.py

commit 2bc5a251005a96e816d6a958094b292afa6d1efe
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2011-02-09 01:23:56 +0000

    bitbake/fetch2: Fix negated if check for BB_FETCH_PREMIRRORONLY
    
    (From Poky rev: 29ed2c6e9a0c3cc57c5bbaf3c53e1cff8586c51c)
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/fetch2/__init__.py

commit 3372d84fa90ba51e8b2cd4557ee5ce501d0c6bf7
Author: Mark Hatle <mark.hatle@windriver.com>
Date:   2011-02-07 18:18:18 -0600

    fetch2: Add SRPM knowledge
    
    Enable the fetcher to be able to unpack and SRPM.  By default the system will
    unpack the contents of the SRPM into the WORKDIR.
    
    A new syntax "unpack=file" was developed for the SRC_URI, to allow for a
    recipe to extract a specific file within an SRPM.  An unpack operation will
    then be executed on the extracted file.
    
    In order to apply extracted patches (or unpack files not specified with
    unpack), you must specify the path using WORKDIR, i.e.:
    
    file://${WORKDIR}/mypatch.patch
    
    (From Poky rev: 906285ff00d6ffd3fd7713af52250e7c6503edb7)
    
    Signed-off-by: Mark Hatle <mark.hatle@windriver.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

38	24	lib/bb/fetch2/__init__.py

commit 43b9d70bbad02495af54014a25611f8e0d78d6bf
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2011-02-08 17:30:45 +0000

    bitbake/fetch2: Ignore UnboundLocalError in exception handler in try_mirror
    
    (From Poky rev: aa45760702e874977454778659c205b29d1ff049)
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

5	2	lib/bb/fetch2/__init__.py

commit 25204a6a816a6c8c4cbe2debea5f669d09f82af3
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2011-02-08 12:46:25 +0000

    bitbake/fetch2: Move symlink handling into try_mirror where is belongs instead of the main download function
    
    (From Poky rev: ee1a9c0476cc4b2ce9dfb0faa29a1371a8517c40)
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

21	12	lib/bb/fetch2/__init__.py

commit 76e999c59875214e6eca4a57b5d34b983821aef8
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2011-02-08 12:44:06 +0000

    bitbake/fetch2: When using BB_FETCH_PREMIRRORONLY, set BB_NO_NETWORK after premirrors as there could be data processing needed by the real fetcher
    
    (From Poky rev: c4e66a7fe0c314b843aac6340995c584ec156529)
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

15	13	lib/bb/fetch2/__init__.py

commit 71fe2b3c196c63f866c832b97238af7525ced249
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2011-02-08 12:42:24 +0000

    bitbake/fetch2: Ensure we only remove files, not directories when fetch failures occur
    
    (From Poky rev: 91eeb9b0d334275ff2730e55e86fd351e1b652ef)
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

5	3	lib/bb/fetch2/__init__.py

commit aa75e1784c1a347e04c3036469f389ab735fb810
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2011-02-08 12:40:40 +0000

    bitbake/fetch2: Ensure original ud is preserved in try_mirror
    
    (From Poky rev: 0713fb6b99486cd08c6036dba7aeb15e3bfb8129)
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

4	4	lib/bb/fetch2/__init__.py

commit 319a9e9baf8a9e363c245990a241b3df49995808
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2011-02-08 09:33:52 +0000

    bitbake/fetch2/git: Fix broken variable reference
    
    (From Poky rev: a235c67479846590eb2c7236bec3360b23c3e9b6)
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/fetch2/git.py

commit 0a8e4172ffdfd9e93dd697059b82d683a48facae
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2011-02-08 09:27:59 +0000

    bitbake/fetch2/git: Ensure unresolved branches are translated into revisions
    
    (From Poky rev: 5920e85c561624e657c126df58f5c378a8950bbc)
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	1	lib/bb/fetch2/git.py

commit 5f0d6b75a0aa2ca5fc212d9fb34554fcf7486639
Author: Saul Wold <sgw@linux.intel.com>
Date:   2011-02-07 17:29:46 -0800

    fetch2: add try/finally to ensure lockfile is unlocked on failure
    
    (From Poky rev: 1544aa8ab4a80d529a001e27b473645f2caec87c)
    
    Signed-off-by: Saul Wold <sgw@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

44	42	lib/bb/fetch2/__init__.py

commit d1a37060cdbf30a2636b8647dfe296736a64da3b
Author: Saul Wold <sgw@linux.intel.com>
Date:   2011-02-07 15:42:45 -0800

    fetch2: add runfetchcmd to import for fetchers
    
    (From Poky rev: 232b6f3c92928c333ad1201aa8eb3706e7251cdf)
    
    Signed-off-by: Saul Wold <sgw@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

4	1	lib/bb/fetch2/bzr.py
1	0	lib/bb/fetch2/cvs.py
1	0	lib/bb/fetch2/perforce.py
2	0	lib/bb/fetch2/ssh.py
1	0	lib/bb/fetch2/svk.py
6	1	lib/bb/fetch2/wget.py

commit 40644b5f3370878000894b57ad8c7b27c55d6ff2
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2011-02-07 21:12:51 +0000

    bitbake/fetch2:Fetch Make using the fn based cache optional
    
    (From Poky rev: 500c66337c7cb5e3044a02ef761097713e47f523)
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

4	3	lib/bb/fetch2/__init__.py

commit 84e0ae4e97745e3baef8885ee6106895d0543c30
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2011-02-07 20:46:42 +0000

    bitbake/fetch2: Fix pickling issues with fetcher exceptions
    
    See the problems in http://bugs.python.org/issue1692335, need to set self.args
    correctly.
    
    (From Poky rev: d4b4b48addfa781d7b94965e0477974c3fb6dbb3)
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

21	14	lib/bb/fetch2/__init__.py

commit a9e70ef8ebe24e51ee0282a75b845e66bd6cb70f
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2011-02-07 15:28:05 +0000

    bitbake/fetch2: Update mirror processing to ensure we look for mirror tarballs
    
    (From Poky rev: 94faffdaf6c13ce59987aab28383d66a9a0bf100)
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

21	16	lib/bb/fetch2/__init__.py

commit 122d3609cdd83d28cc0770195e4aa30bb8737393
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2011-02-07 12:08:32 +0000

    bitbake/fetch2: Update forcefetch and mirror handling to clean up, simplfy and bug fix the code
    
    (From Poky rev: 37624b97450f2ba3d6fad3e1e51818486451447e)
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

47	72	lib/bb/fetch2/__init__.py
3	1	lib/bb/fetch2/cvs.py
5	6	lib/bb/fetch2/git.py
6	2	lib/bb/fetch2/hg.py
6	2	lib/bb/fetch2/svk.py

commit 97dbbae5fa366ce4fa51b62006c42d5e568c6390
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2011-02-07 14:46:53 +0000

    bitbake/fetch2: Match Fetcher log domain to that in bb.msg
    
    (From Poky rev: ded83ffc3bd86553c9b540795660985905c925ba)
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/fetch2/__init__.py

commit 2fd63c32aa2bb21a16a721aed0b5427a72c7c7fd
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2011-02-07 10:13:29 +0000

    bitbake/fetch2/git: use clonedir as ud.localfile too since the mirror tarball may not exist
    
    (From Poky rev: 681bcf4e6b606dde2029d143805023a927285917)
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/fetch2/git.py

commit 5ef9b378f5c15d1c90d443ba513703471ffd0649
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2011-02-07 09:34:24 +0000

    bitbake/fetch2/git.py: Ensure that forcefetch operates in the correct directory for calling _contains_ref()
    
    (From Poky rev: 330886826770ff6ec1449dc375cb4c3604b2736b)
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	0	lib/bb/fetch2/git.py

commit ac8982c2e004525e00785e64a6215b41c75546b3
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2011-02-07 09:13:44 +0000

    bitbake/fetch2/git: Fix localpath to point at the clone repo since we no longer always generate a mirror tarball and it isn't a good guide to fetcher success
    
    (From Poky rev: 917d3e9697acefe308e7139e86df37a072ee3500)
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	0	lib/bb/fetch2/git.py

commit b5dd674a96736c78f5fb3ad787e568eef07be23b
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2011-02-04 14:40:41 +0000

    bitbake/fetch2: Use True instead of integer values
    
    (From Poky rev: 7202a77134029cb37540c785ce0161a4dd574853)
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

15	15	lib/bb/fetch2/__init__.py
2	2	lib/bb/fetch2/cvs.py
2	2	lib/bb/fetch2/git.py
2	2	lib/bb/fetch2/local.py
5	5	lib/bb/fetch2/perforce.py
1	1	lib/bb/fetch2/ssh.py
1	1	lib/bb/fetch2/svk.py
3	3	lib/bb/fetch2/wget.py

commit a6ea08e7ab08772144abc65836dc272c4012afa3
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2011-02-04 14:37:09 +0000

    bitbake/fetch2: Drop name/override ordering backwards compatibility code
    
    (From Poky rev: 8f2abf4a9f000d42e98c4936e393bd5033a1af48)
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

0	2	lib/bb/fetch2/__init__.py

commit 9e6185fc17a8f7be8382bcd6d54dfe4aa5f0bed9
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2011-02-04 13:46:31 +0000

    bitbake/fetch2/svn: The concept of using dates with svn is totally insane, drop support
    
    (From Poky rev: ee6f34483a9bfeca5b5c3656fd62bb4849d5fbb8)
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	21	lib/bb/fetch2/svn.py

commit 74d58230f4fedd3783ca15e71c2990fa1c248986
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2011-02-04 13:14:03 +0000

    bitbake/fetch2: Define a new interface to the fetcher code though the 'Fetch' class
    
    (From Poky rev: ca7adf75295c2a6041b891bfa61e0b4bc2f7c860)
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

169	144	lib/bb/fetch2/__init__.py

commit bf2f5685ab96c88fc541f632623d09e2724a08f7
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2011-02-04 11:06:16 +0000

    bitbake/fetch2: Fix typo
    
    (From Poky rev: 08a9fef4fa0036708f29bd150d7ecf66354e5475)
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/fetch2/__init__.py

commit 1174b2955ed95b8e01ab751cf0487fe82dddef03
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2011-02-04 11:03:34 +0000

    bitbake/fetch2: Drop legacy CVSDATE support
    
    (From Poky rev: 806d1c25f8ca8ab5116652e6f82f7d9ee5774278)
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	3	lib/bb/fetch2/__init__.py

commit 8619538e7579f17ce95ae3243758c3f9ecdca0e6
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2011-02-04 11:02:15 +0000

    bitbake/fetch2: Move getSRCDate to FetchData class where is more appropriate
    
    (From Poky rev: f60d9d6bd4bb7691b62bf1f4b1fbeaa1faa53879)
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

16	18	lib/bb/fetch2/__init__.py

commit 7ffcda8bfacb85f7f11859f0c88f5a406172243a
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2011-02-04 10:59:42 +0000

    bitbake/fetch2: Make srcrev_internal_helper a normal function, doesn't belong in the FetchMethod class
    
    (From Poky rev: 831c6c1d3c23c50f9c55a6bbf8dc6311bca3881b)
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

31	34	lib/bb/fetch2/__init__.py
1	1	lib/bb/fetch2/osc.py

commit fa426b73b09d273a8eea3436dcf459c352a31212
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2011-02-04 10:49:27 +0000

    bitbake/fetch2: Rename Fetch class to FetchMethod
    
    (From Poky rev: ab0dd1397491478ee6149283e5ba8775dd8cdc3b)
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

4	4	lib/bb/fetch2/__init__.py
2	2	lib/bb/fetch2/bzr.py
2	2	lib/bb/fetch2/cvs.py
2	2	lib/bb/fetch2/git.py
2	2	lib/bb/fetch2/hg.py
2	2	lib/bb/fetch2/local.py
3	3	lib/bb/fetch2/osc.py
2	2	lib/bb/fetch2/perforce.py
2	2	lib/bb/fetch2/repo.py
2	2	lib/bb/fetch2/ssh.py
2	2	lib/bb/fetch2/svk.py
2	2	lib/bb/fetch2/svn.py
2	2	lib/bb/fetch2/wget.py

commit 04e260d5f2a79f8a8293a14006b38f2cffc4a27b
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2011-02-04 10:30:54 +0000

    bitbake/fetch2: Drop old md5 handling code
    
    Drop some old md5 functions since we have improved functionality now which includes
    sha256 checksum support. This stops each download being md5 checksumed twice.
    
    Also change ".md5" stamp extentions to ".done" to better describe its use as a
    download complete marker file and no longer write the md5 sum to the files.
    
    (From Poky rev: 74b71864fed79ce60e721945c8e239b3ebf49200)
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

8	30	lib/bb/fetch2/__init__.py

commit d0ffe023c4a642c8d1c188ec499870e7a7113d7d
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2011-02-04 10:26:21 +0000

    bitbake/fetch2: Rewrite and improve exception handling, reusing core functions for common operations where possible
    
    (From Poky rev: d08397ba4d1331993300eacbb2f78fcfef19c1cf)
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

78	38	lib/bb/fetch2/__init__.py
2	10	lib/bb/fetch2/bzr.py
12	18	lib/bb/fetch2/cvs.py
2	2	lib/bb/fetch2/git.py
3	11	lib/bb/fetch2/hg.py
3	11	lib/bb/fetch2/osc.py
6	14	lib/bb/fetch2/perforce.py
2	4	lib/bb/fetch2/ssh.py
6	17	lib/bb/fetch2/svk.py
3	11	lib/bb/fetch2/svn.py
4	9	lib/bb/fetch2/wget.py

commit e448fa0432d12cc54f0b540fe2cacff37135c9ed
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2011-02-03 23:23:11 +0000

    bitbake/fetch2: Have all fetcher exceptions derived from a common BBFetchException class
    
    (From Poky rev: f6eefb3ca3bb2a5ea0ec1364bdb0bc41ae58c815)
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

10	7	lib/bb/fetch2/__init__.py

commit 61983b9a8b607283e8662b9330c12d6b13039a78
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2011-02-03 22:02:09 +0000

    bitbake/fetch2: Drop unused parameter for localpath() and update comments
    
    (From Poky rev: 8daab5b95157dda6854fe6bf1929f911fe3cf25e)
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	3	lib/bb/fetch2/__init__.py

commit 7b9d1c9479e931321d127c40118a28c6102789e6
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2011-02-03 21:43:01 +0000

    bitbake/fetch2: Simplfy setup_srcrevs
    
    (From Poky rev: 7e4fbfc1c1887a1a0507b60244aa53b8b1994edd)
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

7	13	lib/bb/fetch2/__init__.py

commit bd4a7ec55cee73297c899d7d9b9990ae72b83a04
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2011-02-03 21:40:03 +0000

    bitbake/fetch2: Simplify localpath variable handling FetchData init
    
    (From Poky rev: 49a022d25d35115e7286e2ca2530566da2d71aa8)
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

40	34	lib/bb/fetch2/__init__.py

commit e793a2ded0f037390375328fda2aea3441f1efe8
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2011-02-03 21:20:39 +0000

    bitbake/fetch2: Define a sane localpath function and remove code duplication
    
    (From Poky rev: 5a52cb80d6d62c704692ad6cfa93426c4a17bc52)
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	1	lib/bb/fetch2/__init__.py
0	3	lib/bb/fetch2/bzr.py
0	3	lib/bb/fetch2/cvs.py
0	3	lib/bb/fetch2/git.py
0	3	lib/bb/fetch2/hg.py
0	3	lib/bb/fetch2/osc.py
0	3	lib/bb/fetch2/perforce.py
0	3	lib/bb/fetch2/repo.py
0	3	lib/bb/fetch2/svk.py
0	3	lib/bb/fetch2/svn.py
0	3	lib/bb/fetch2/wget.py

commit fdab13939be23227d49db7bd5b9c01cd10737a47
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2011-02-03 21:17:26 +0000

    bitbake/fetch2: Move ud.localfile setup into urldata_init
    
    (From Poky rev: 972eb5fababb33b5537fcfbbaf8e33ea820f0fee)
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	2	lib/bb/fetch2/bzr.py
2	1	lib/bb/fetch2/cvs.py
1	1	lib/bb/fetch2/git.py
6	6	lib/bb/fetch2/hg.py
4	1	lib/bb/fetch2/local.py
2	1	lib/bb/fetch2/osc.py
3	3	lib/bb/fetch2/perforce.py
2	1	lib/bb/fetch2/repo.py
1	1	lib/bb/fetch2/ssh.py
3	1	lib/bb/fetch2/svk.py
1	1	lib/bb/fetch2/svn.py
2	2	lib/bb/fetch2/wget.py

commit 2fc8ecca9b9ff373a48e3726daa3267d6def434f
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2011-02-03 20:33:07 +0000

    bitbake/fetch2: Drop horrible SRCREV hack which is no longer needed
    
    (From Poky rev: 0e5404cedadaea6738ef6468d7eb8a24d23d9bab)
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

0	3	lib/bb/fetch2/__init__.py

commit 901cd79ef948c4ff9694634f553db26ca62a8ee5
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2011-02-06 10:20:18 +0000

    bitbake/fetch2/git: Switch to completely use bare clones
    
    We no longer need index/workdir support in the mirror tree and it causes all
    kind of reference naming problems.Simplifying the code to remove this and use
    just bare clones addresses this problem.
    
    We increase the "version" number on the mirror tarballs to reflect the change
    and ensure older mirror tarballs are not used as they would break.
    
    (From Poky rev: e4c1e99f234491af1c0fc886e73deedaef108a1a)
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

4	9	lib/bb/fetch2/git.py

commit 6130729c49cc7500102ec22817e039bc982234bc
Author: Saul Wold <sgw@linux.intel.com>
Date:   2011-02-05 14:11:25 -0800

    fetch2/git.py: Fix problem when fetching with no origin
    
    When updating a git repo, its possible to not have an origin,
    so fail gracefully with a debug message.
    
    (From Poky rev: 192f631129e25b959d501c46c3156b7037b49c22)
    
    Signed-off-by: Saul Wold <sgw@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

6	2	lib/bb/fetch2/git.py

commit 23a74be8c3d4b685cda8bb96317e866160a0e104
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2011-02-05 14:16:45 +0100

    bitbake/fetch2/git: Ensure we prune origin to remove stale branches
    
    Thanks to Bruce Ashfield for the tip.
    
    (From Poky rev: 96810cade04cad44d70a7c6e51aacdf89caef92b)
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	0	lib/bb/fetch2/git.py

commit 06ca9563a619116f37989da6e54fef821a662215
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2011-02-03 20:16:05 +0000

    bitbake/fetch2/git: Ensure deleted branches upstream are removed, all branch tags are forced to the upstream revisions and all revisions and tags are always fetched
    
    (From Poky rev: dfc5faf717ac1f917af398097d5295128548a55d)
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

10	7	lib/bb/fetch2/git.py

commit 9188a6a7db68370cc2d26eb1884f76c99e6b596e
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2011-02-03 18:24:25 +0000

    bitbake/fetch2: Remove old local file acceleration code
    
    Since local mirror fetches are always symlinked from the download directory
    directly, there is no need for this premirrors hack which doesn't cover
    mirrors and also abuses the localpath variable with inconsistent results.
    
    (From Poky rev: 282a828f3dc373d8f1397827ebbe1be1c54f2d2a)
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

4	18	lib/bb/fetch2/__init__.py

commit 83f9445081595630488a5d3e170d282a13836c98
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2011-02-03 18:22:06 +0000

    bitbake/fetch2: Ensure that mirror fetches are symlinked from the download directory
    
    When files are fetched from a mirror source that happens to be local,
    ensure links are created for the file since subsequent fetch calls
    can then follow the links to find files.
    
    Any other approach such as the existing manipulations of localpath
    internally to the fetcher are prone to errors, races and other issues.
    
    (From Poky rev: fa9fda05e1d269446b51050195b891346482e8bb)
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

17	3	lib/bb/fetch2/__init__.py

commit 2217e9af98d5cd7755b84b5961298efa845910f8
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2011-02-03 18:19:23 +0000

    bitbake/fetch2: When encoding a file:// url, drop user and host information
    
    When processing a cvs SRC_URI to a file:// mirror, the user and host information
    will break the mirror processing. This patch addresses it by only constructing
    valid urls.
    
    (From Poky rev: 7f99605562119a13a2510a3c990e3cf577ad764e)
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	2	lib/bb/fetch2/__init__.py

commit b987a08a030cbd2528e1824b7716a43592881bf8
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2011-02-03 00:16:23 +0000

    bitbake/lib/bb/fetch2: Assign a default name in the names array as empty strings as names cause problems for python
    
    (From Poky rev: a55d86b4051f6d063f9a67db026f7da6f9b50cc6)
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/fetch2/__init__.py

commit f422c499b14977be84125108cb8611f6645ff097
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2011-02-02 18:48:13 +0000

    bitbake/fetch2: Add missing parameter to localcount_internal_helper
    
    (From Poky rev: 08cd6c1cb9639e958e0c60a02e317a22cf43f880)
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/fetch2/__init__.py

commit e8878a7d97fcb186a9c5166bc77a87daaba8ca3d
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2011-02-02 17:46:37 +0000

    bitbake/fetch2/git: Ensure target directory exists when copying files
    
    (From Poky rev: adfa6c40dadebb18bfd457859300d8c093b007f7)
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	0	lib/bb/fetch2/git.py

commit 7b7a4517c60025c075dc8da973ceb2860d4c1e06
Author: Yu Ke <ke.yu@intel.com>
Date:   2011-01-26 20:14:06 +0800

    fetch2: Allow multiple src rev to be used in one src_uri
    
    * SRC_URI format:
    the SRC_URI are extended to allow multiple src rev:
    name=<name1>,<name2>,...<name-n>
    branch=<branch1>,<branch2>,...,<branch-n>
    also SRCREV can be defined with
    SRCREV_<name1> = xxxxx
    SRCREV_<name2> = xxxxx
    
    * FetchData extention
    to support multiple src rev, several FetchData data are added:
    - FetchData.names: list of name in SRC_URI,  one name per srcrev. name is the index of revision and branch
    - FetchData.revisions: dictionary of name->revision.
    - FetchData.branches: dictionary of name->branch.
    
    For example, linux-yocto recipes becomes:
    SRC_URI = "git://git.pokylinux.org/linux-yocto-2.6.37;protocol=git;branch=${KBRANCH},meta;name=machine,meta"
    
    FetchData.names = ['machine', 'meta']
    FetchData.revisions = { 'machine':xxxxx, 'meta':xxxxxx }
    FetchData.branches = { 'machine':${KBRANCH}, 'meta':'meta'}
    
    * generic revision handling extension
    the related revision handling code in fetch2.__init__.py are changed accordingly. the major change is add name parameter to indicate which src rev to handling. originally there is one src rev per FetchData, so FetchData parameter is enough. now since one FetchData has multiple src rev, it is necessary to use FetchData + name to specifiy src rev.
    
    * git extension
    git fetcher are also revised to take advantage of the multiple src rev in FetchData. especially the download() method are enhanced to fetch multiple src rev.
    
    * other fetcher (svn, hg, ...) does not support multiple src rev. they just sync the API to add name, and then simply ignore the name. no actually functional change
    
    (From Poky rev: 0e837e6844be449659bb96a1498e54a8b9442d13)
    
    Signed-off-by: Yu Ke <ke.yu@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

36	23	lib/bb/fetch2/__init__.py
2	2	lib/bb/fetch2/bzr.py
31	35	lib/bb/fetch2/git.py
2	2	lib/bb/fetch2/hg.py
2	2	lib/bb/fetch2/svn.py

commit 26b9af80971dfe5f0d59c950ff92aff8d59569e0
Author: Yu Ke <ke.yu@intel.com>
Date:   2011-01-19 00:58:42 +0800

    git.py: Remove the source tree tarball archives
    
    Since we're now always providing the git source control files it becomes
    pointless to handle the tarballs of specific git revisions so drop this
    part of the fetcher.
    
    (From Poky rev: affcfe468a0c2993c0c4ace446248f85aee4315f)
    
    Signed-off-by: Yu Ke <ke.yu@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

5	58	lib/bb/fetch2/git.py

commit cbbcabe119ac59b1ceedd2491ab77f00d5d17d42
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2011-02-02 12:48:32 +0000

    bitbake/fetch2/git: Add nocheckout option to disable checkouts and always add scm data to checkouts
    
    (From Poky rev: 05048e0f9168ceb7d66f6ac79dcae42f1e696826)
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

12	9	lib/bb/fetch2/git.py

commit adb78a15e60a733dd2636f332e55f1e1bc7107ac
Author: Yu Ke <ke.yu@intel.com>
Date:   2011-01-19 00:22:13 +0800

    bb.fetch2: Add git unpack
    
    The git download method clones the git repository to the local machine. The unpack process
    can be optimised to be a local to local machine clone or a direct readtree operation to the
    destination using git.will clone git repo to local, so git unpack can be simplified
    to only checkouting the code to the work dir. For fullclone case, we also
    need to manually copy all the ref info, which is needed by the later do_kernel_checkout().
    Rather than use hardlinks, we reference the repository using alternatives since the
    download directory may be on a different filesystem.
    
    [Change to use -s by Richard Purdie]
    
    (From Poky rev: 3a3fc6b071f09970e7f79fb4f1a8f0013917371e)
    
    Signed-off-by: Yu Ke <ke.yu@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

25	0	lib/bb/fetch2/git.py

commit 2f7e2b2d79957d85a70f7bc61c17561bda837b77
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2011-02-01 23:33:19 +0000

    bitbake/fetch2: Ensure the local revision counter takes a default value of 0, not None
    
    (From Poky rev: 05954ef4d7d882f34e2bb1f3bc44ad6f80c11d4c)
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/fetch2/__init__.py

commit 4674898eddaccf1b620b5c9f8ea9bb194fff37ee
Author: Yu Ke <ke.yu@intel.com>
Date:   2011-01-24 15:56:54 +0800

    bitbake/fetch2: Instrument fetchers when making network access
    
    (From Poky rev: 029f8584d547c0792ffbe2f83451dcdfe2a3db7f)
    
    Signed-off-by: Yu Ke <ke.yu@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

4	0	lib/bb/fetch2/bzr.py
2	0	lib/bb/fetch2/cvs.py
3	0	lib/bb/fetch2/git.py
3	0	lib/bb/fetch2/hg.py
2	0	lib/bb/fetch2/osc.py
2	0	lib/bb/fetch2/repo.py
2	0	lib/bb/fetch2/ssh.py
3	1	lib/bb/fetch2/svn.py
1	0	lib/bb/fetch2/wget.py

commit a605deb12ace4c7abdf72bbcdfb59d9fc3569801
Author: Yu Ke <ke.yu@intel.com>
Date:   2011-01-24 14:58:26 +0800

    bb.fetch2: add "BB_NO_NETWORK" option
    
    Sometime user want a purely local fetching, i.e. using local mirror without
    any remote netowrk access. BB_NO_NETWORK option is introduced for this purpose
    
    check_network_access() is the guard for BB_NO_NETWOKR option. it should be
    put in any place that fetcher use network access
    
    (From Poky rev: 098e8ded339f3bf864f3bad9871028176f70b12b)
    
    Signed-off-by: Yu Ke <ke.yu@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

10	0	lib/bb/fetch2/__init__.py

commit cd3705347a72fe869c955e0ab4111b6bdad913c9
Author: Yu Ke <ke.yu@intel.com>
Date:   2011-01-19 00:17:39 +0800

    bb.fetch2: remove the obsolate Fetch.try_mirrors referrence
    
    Fetch.try_mirrors is no longer exists, so the code is obsolate
    
    (From Poky rev: 733de7596c2ed78a846541b3290f01c21ff96606)
    
    Signed-off-by: Yu Ke <ke.yu@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

0	7	lib/bb/fetch2/git.py

commit dee27c176a78e8855d7062459f3df6af53de031d
Author: Yu Ke <ke.yu@intel.com>
Date:   2011-01-18 23:35:30 +0800

    git.py: split download to download() and build_mirror_data()
    
    the download is to fetch the source from URL, the build_mirror_data is
    to create the mirror tar ball. the original go() method mix them together,
    it is more clean to split them.
    
    (From Poky rev: ef918a72de97fd2189e1c8487e371d13e18088fd)
    
    Signed-off-by: Yu Ke <ke.yu@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

4	0	lib/bb/fetch2/__init__.py
5	3	lib/bb/fetch2/git.py

commit a8f231507842a8202783276f554ad42ce762c935
Author: Yu Ke <ke.yu@intel.com>
Date:   2011-01-18 23:03:53 +0800

    bb.fetch2: rename "go" with "download" to better reflect its functionality
    
    no functional change
    
    (From Poky rev: e05918937c515dff845fcb4c9e94f8ecbea8c957)
    
    Signed-off-by: Yu Ke <ke.yu@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

4	4	lib/bb/fetch2/__init__.py
1	1	lib/bb/fetch2/bzr.py
1	1	lib/bb/fetch2/cvs.py
3	3	lib/bb/fetch2/git.py
1	1	lib/bb/fetch2/hg.py
1	1	lib/bb/fetch2/local.py
1	1	lib/bb/fetch2/osc.py
1	1	lib/bb/fetch2/perforce.py
1	1	lib/bb/fetch2/repo.py
1	1	lib/bb/fetch2/ssh.py
1	1	lib/bb/fetch2/svk.py
1	1	lib/bb/fetch2/svn.py
2	2	lib/bb/fetch2/wget.py

commit 84a521be512cc10ba13097ad251e9ce94e2df68c
Author: Yu Ke <ke.yu@intel.com>
Date:   2011-01-18 22:41:23 +0800

    bb.fetch: add fetch version to distinguish bb.fetch and bb.fetch2
    
    there is case that we need to distingush bb.fetch and bb.fetch2,
    and use different API for bb.fetch and bb.fetch2. so it is necessary
    to add version info for distinguish purpose
    
    (From Poky rev: f12e71484593039cd58b6e7fadd038b28b05d849)
    
    Signed-off-by: Yu Ke <ke.yu@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	0	lib/bb/fetch/__init__.py
2	0	lib/bb/fetch2/__init__.py

commit d6fac93d81c822de09c660269430b1aabb5594ee
Author: Yu Ke <ke.yu@intel.com>
Date:   2011-01-18 22:08:09 +0800

    bb.fetch2: revise the Fetch.unpack API
    
    change the unpack to use the urldata and rootdir parameter
    - urldata is the FetchData instance
    - rootdir is the dir to put the extracted source. the original unpack
      use current dir (os.getcwd) as destination dir, which is not flexible
      and error-prone (error will occur if caller not chdir to dest dir)
    
    (From Poky rev: 84ff79413a3b56f287f42b8ca1dd2ab194337c42)
    
    Signed-off-by: Yu Ke <ke.yu@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

15	18	lib/bb/fetch2/__init__.py

commit c7c143cde76cc17fc4830e18e21c89f66cc02af0
Author: Yu Ke <ke.yu@intel.com>
Date:   2011-01-18 21:53:36 +0800

    bb.fetch2: add unpack method in fetcher
    
    copy exactly the base.bbclass:oe_unpack_file() to bb.fetch2 as the code base
    
    (From Poky rev: d8698b92ffcc2cbd29b57d3dc8e851d3d6c137f2)
    
    Signed-off-by: Yu Ke <ke.yu@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

84	0	lib/bb/fetch2/__init__.py

commit c557a67a7904772e31326b4c216b59ad1dbc985b
Author: Yu Ke <ke.yu@intel.com>
Date:   2010-12-27 16:20:34 +0800

    Fetcher: only set __BB_DONT_CACHE when SRCREV = "${AUTOREV}"
    
    we should cache SRCREV whenever possible, the only exception is
    when SREREV is auto rev. so change the logic to only set __BB_DONT_CACHE
    at SRCREV = "${AUTOREV}" case
    
    (From Poky rev: 2b2dbf76126650750cb8a6778b837af6fe4c8b21)
    
    Signed-off-by: Yu Ke <ke.yu@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	3	lib/bb/fetch2/__init__.py

commit 99c81a1ae3ea5894d9c78caae30edda455ebce4f
Author: Yu Ke <ke.yu@intel.com>
Date:   2010-12-27 09:31:38 +0800

    Fetcher: break the "SRCREVINACTION" deadlock
    
    Current fetcher has annoying "SRCREVINACTION" deadlock,
    which occurs when SRCREV=${AUTOREV}=@bb.fetch.get_srcrev():
    get_srcrev()->setup_localpath()->srcrev_internal_helper()
    ->evaluate SRCREV->get_srcrev()
    
    current fetcher resolve the deadlock by introducing a
    "SRCREVINACTION" condition check. Althoguh it works, it is
    indeed not clean.
    
    This patch use antoehr idea to break the deadlock: break
    the dependency among SRCREV and get_srcrev(), i.e. assign
    a specific keyword "AUTOINC" to AUTOREV. when Fetcher meet
    this keyword, it will check and set the latest revision to
    urldata.revision. get_srcrev later can use the urldata.revision
    for value evaluation(SRCPV etc). In this case, SRCREV no longer
    depends on get_srcrev, and there is not deadlock anymore.
    
    (From Poky rev: 1589a1172f9432aed1cc9ce006f68cddf3073774)
    
    Signed-off-by: Yu Ke <ke.yu@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	0	lib/bb/fetch/__init__.py
10	24	lib/bb/fetch2/__init__.py
0	6	lib/bb/fetch2/bzr.py
1	7	lib/bb/fetch2/git.py
2	8	lib/bb/fetch2/hg.py
2	8	lib/bb/fetch2/svn.py

commit c0475b7825381492c9ceaf7f5d9f77c4890a8534
Author: Yu Ke <ke.yu@intel.com>
Date:   2010-12-27 10:48:34 +0800

    bb.fetch2.bzr: add bzr urldata_init
    
    move the bzr specific urldata init from localpath to urldata_init
    so that it can be called early
    
    (From Poky rev: 550c3bd82115b4bdb8235da53cfc18b1dc39ad96)
    
    Signed-off-by: Yu Ke <ke.yu@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

5	2	lib/bb/fetch2/bzr.py

commit ae008059b3ce70bcf5771035bba6f31df8db880a
Author: Yu Ke <ke.yu@intel.com>
Date:   2010-12-27 10:35:19 +0800

    bb.fetch2.hg: add hg urldata_init
    
    move the hg specific urldata init from localpath to urldata_init
    so that it can be called early
    
    (From Poky rev: f684ff18a2b9565823a41750af369dee392f6142)
    
    Signed-off-by: Yu Ke <ke.yu@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

9	5	lib/bb/fetch2/hg.py

commit 6807ecbf3de0a30e878ff67914dea24ec0615320
Author: Yu Ke <ke.yu@intel.com>
Date:   2010-12-27 10:07:04 +0800

    bb.fetch2.svn.py: add urldata_init
    
    move the svn specific urldata init from localpath to urldata_init
    so that it can be called early
    
    (From Poky rev: 7420e70f4f03a18f9d5a0d3226918088af1032bd)
    
    Signed-off-by: Yu Ke <ke.yu@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

5	1	lib/bb/fetch2/svn.py

commit 190896c09522e78052f067557777186f75bfd6c8
Author: Yu Ke <ke.yu@intel.com>
Date:   2010-12-27 09:50:25 +0800

    bb.fetch2.git.py: add git urldata_init
    
    move the git specific urldata init from localpath to urldata_init
    so that it can be called early
    
    (From Poky rev: 54e34f6e255d1717beada23638a5783c9dda42ea)
    
    Signed-off-by: Yu Ke <ke.yu@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

9	4	lib/bb/fetch2/git.py

commit ffc1cf8bdbd439f70fda35e64ab7b174914b5479
Author: Yu Ke <ke.yu@intel.com>
Date:   2011-01-08 16:40:18 +0800

    bb.fetch2: add urldata_init call for Fetch class
    
    FetchData has some fetch method specific data, and only fetch method knows how
    to initialize it. originally it is mostly initialized in Fetch.localpath().
    But now there is requirement to call Fetch.latest_revision() before
    Fetch.localpath(), thus require another earlier place for initialization. so
    urldata_init is introduced for this purpose. it will be called in FetchData:__init__
    and make all the Fetch functions useable after that.
    
    (From Poky rev: 2892cbfb114de1d2e2b5b479d5f928646ce5c831)
    
    Signed-off-by: Yu Ke <ke.yu@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	0	lib/bb/fetch2/__init__.py

commit 67f2bc9fdb5d1002b1b4f4ae9021ae78403a12de
Author: Yu Ke <ke.yu@intel.com>
Date:   2011-01-08 10:26:28 +0800

    BBHandler: remove bb.fetch referrence
    
    BBHandler.py no longer use bb.fetch, so remove its import statement
    
    (From Poky rev: 9e3a92c04a5be4932a0324af4a74bce871126e9d)
    
    Signed-off-by: Yu Ke <ke.yu@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/parse/parse_py/BBHandler.py

commit 7a73e3969031711c3e97a854b7aa05839cd5c7d3
Author: Saul Wold <sgw@linux.intel.com>
Date:   2011-02-08 09:24:12 -0800

    bitbake/utils.py: add glob name matching to remove
    
    (From Poky rev: 07088f7711e0b53c4fac3685d15d406cf4793602)
    
    Signed-off-by: Saul Wold <sgw@linux.intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

9	8	lib/bb/utils.py

commit 8e1f6bfe1ef508a61ea38a2dd922684adb6efcaf
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2011-02-07 14:49:10 +0000

    bitbake/msg: Ensure lower level debug messages have DEBUG prefix and reuse log level values from formatter
    
    (From Poky rev: 7586adb360d8075d3e97184dfcafb1b13ce5f838)
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

9	5	lib/bb/msg.py

commit 2cce5bd9dd93321ad159454d49760254c10a9ff6
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2011-02-07 14:46:22 +0000

    __init__.py: Fix debug log level handling to correct debug output
    
    (From Poky rev: d7eebbe9dbf0d790d4af93466f5c27127cae0999)
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/__init__.py

commit d761cf98284b02eb3d3a1f879782c501c284b698
Author: Javier Martin <javier.martin@vista-silicon.com>
Date:   2011-01-31 12:27:54 +0100

    Export KRB5CCNAME variable
    
    This allows fetching git repositories using Kerberos authentication.
    
    Signed-off-by: Javier Martin <javier.martin@vista-silicon.com>
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

1	1	lib/bb/fetch/__init__.py
1	0	lib/bb/utils.py

commit b88dccd7c65a6edcccffca757eb5a4d982c2a7eb
Author: Andreas Oberritter <obi@opendreambox.org>
Date:   2011-01-04 15:32:07 +0000

    .gitignore: add *.pyo
    
    * python generates pyo files if PYTHONOPTIMIZE is set
    
    Signed-off-by: Andreas Oberritter <obi@opendreambox.org>
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

1	0	.gitignore

commit f30b3af975a071d1584817054a2996f08a3aba4f
Author: Javier Martin <javier.martin@vista-silicon.com>
Date:   2011-01-27 09:38:21 +0100

    Fix comparison with SRCREVINACTION constant
    
    Use '==' instead of 'is', otherwise it will always return
    true since 'rev' and "SRCREVINACTION" are not the same object.
    
    Signed-off-by: Javier Martin <javier.martin@vista-silicon.com>
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

1	1	lib/bb/fetch/__init__.py

commit e4db09fd123100960f2e7c0a5a228d13010d11d8
Author: Chris Larson <chris_larson@mentor.com>
Date:   2011-02-08 15:35:03 -0700

    event: fix exception format
    
    Forgot to concatenate the lines returned by format_exception.
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

2	2	lib/bb/event.py

commit c0f3ff3eb5f5424f4f95133bec62bff49a8d087a
Author: Chris Larson <chris_larson@mentor.com>
Date:   2011-02-08 13:51:46 -0700

    event: limit the number of traceback entries to 5
    
    This is slightly more sane.
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

2	1	lib/bb/event.py

commit 7486b38603f2766adaf976a9f95e9276c83abe31
Author: Chris Larson <chris_larson@mentor.com>
Date:   2011-02-08 13:42:46 -0700

    persist_data: kill unreachable break line
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

0	1	lib/bb/persist_data.py

commit 3539c9474a0b53f57e614544c70a7197ecdfb130
Author: Chris Larson <chris_larson@mentor.com>
Date:   2011-02-08 13:41:36 -0700

    Shift traceback pre-formatting into LogHandler
    
    It's cleaner to leave it behaving as usual, passing the exception data in the
    exc_info attribute of the LogRecord where it normally lies, and then let
    LogHandler make it pickleable so it can be sent to the UI.
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

1	4	lib/bb/__init__.py
4	0	lib/bb/event.py

commit d93fcbd64ab5d806288424170f55323b4297e7d6
Author: Chris Larson <chris_larson@mentor.com>
Date:   2011-02-08 10:41:58 -0700

    persist_data: loop on database lock for table creation
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

2	2	lib/bb/persist_data.py

commit 16e296b918e3a897153e2c93133bd9dbb6ae17c4
Author: Chris Larson <chris_larson@mentor.com>
Date:   2011-02-08 09:53:47 -0700

    build: improve set -x handling
    
    - set -x always, not just when debugging
    - set -x immediately before executing the function, rather than at the top of
      the script, so the output is no longer cluttered with all the variable and
      function definitions
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

1	2	lib/bb/build.py

commit a4e8313927d60f06cd5f82d56742bb06b9fbfdfe
Merge: 2cc6b695 b801e442
Author: Chris Larson <chris_larson@mentor.com>
Date:   2011-02-07 13:38:10 -0700

    Merge branch '1.10'

commit 2cc6b6951bd17832866ec710029d119d2df31ba4
Author: Chris Larson <chris_larson@mentor.com>
Date:   2011-02-07 10:58:40 -0700

    bitbake-layers: fix bug with env vars leaking in
    
    I forgot that bin/bitbake is what does the environment filtering based upon
    BB_ENV_WHITELIST, etc.
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

1	0	bin/bitbake-layers

commit 78b6d4cb26cec3321f8eec9889205a6b93b2ee18
Author: Chris Larson <chris_larson@mentor.com>
Date:   2011-02-07 10:50:27 -0700

    Add initial bitbake-layers script
    
    This script has subcommands which operate against your bitbake layers, either
    displaying useful information, or acting against them.  Currently, it only
    provides a show_appends command, which shows you what bbappends are in effect,
    and warns you if you have appends which are not being utilized.
    
    Currently, a bug exists when using this due to the DataContext stuff, but I'm
    not certain as to the root cause, it appears to be the bb package relying
    implicitly on the way the bitbake script does things.  A fix for that issue
    will be forthcoming, as will further subcommands.
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

153	0	bin/bitbake-layers

commit c8d8388ce9662574a390be3b849c07d1b044275d
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2011-01-28 10:21:41 +0000

    bitbake/runqueue.py: Avoid starvation of events to the server
    
    The server UI was reading 1024 bytes, then sleeping for 0.25 seconds. Since
    most new LogRecord events are larger than this it leads to a build up of data
    which is only processed slowly, leading to a bottleneck and a slow down of
    all bitbake processes.
    
    Thanks to Dongxiao Xu <dongxiao.xu@intel.com> for the great work in debugging
    this. A large value has been left in for the read() command just to ensure some
    fairness amongst process handling if a task tries to log truly huge amounts of
    data to the server, or goes crazy and ensures the main loop doesn't stall.
    
    (From Poky rev: 06c6db7929c75f576a395fb442abe447b833fc3b)
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/runqueue.py

commit 5bc773d46166938e68a17564a94ca1a7e62f00f1
Author: Chris Larson <chris_larson@mentor.com>
Date:   2011-01-20 18:51:52 -0700

    Add a few items to .gitignore
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

3	0	.gitignore

commit 088d516e02bb2b4ce8a50bbaa967e944c46e620b
Author: Chris Larson <chris_larson@mentor.com>
Date:   2011-01-20 14:32:16 -0700

    cache: fix docstring usage
    
    Use comments instead of docstrings where appropriate in CacheData.
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

2	7	lib/bb/cache.py

commit dc0190ae9682f8a59d1688a503b48ebf64e3b115
Author: Chris Larson <chris_larson@mentor.com>
Date:   2011-01-17 08:50:40 -0700

    cooker: also respond to SystemExit for execute_runqueue
    
    Without this, bitbake appears to hang when encountering an invalid task.  In
    reality, the SystemExit flows up uncaught, the server may go away, and the UI
    doesn't know about it, so requires us to ^C to exit.
    
    This is a temporary measure.  Poky's bitbake handles invalid tasks
    differently, and avoids this *particular* issue, but we do need to ensure that
    the server responds to SystemExit from the idle function in a sane way.
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

8	0	lib/bb/cooker.py

commit 259dd464ab89f630d86f0ebf9b627bd19710712d
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2011-01-12 13:45:39 +0000

    bitbake/knotty.py: Ensure task note messages are only surpressed at default log levels
    
    (From Poky rev: 3f08b7f1eadc8d181c76339d14c7abb4f49cad57)
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

6	2	lib/bb/ui/knotty.py

commit 8c5555f5ed6d61db57de80d2820c8cec64a27239
Author: Bernhard Reutner-Fischer <rep.dot.nop@gmail.com>
Date:   2011-01-11 19:21:55 +0100

    codeparser: fix spacing in diagnostic messages
    
    Signed-off-by: Bernhard Reutner-Fischer <rep.dot.nop@gmail.com>

2	2	lib/bb/codeparser.py

commit d3489b141cac1197324661680fe38b8a88bc49b4
Author: Bernhard Reutner-Fischer <rep.dot.nop@gmail.com>
Date:   2011-01-10 23:05:19 +0100

    *: use utils.remove() some more
    
    Signed-off-by: Bernhard Reutner-Fischer <rep.dot.nop@gmail.com>

2	4	lib/bb/build.py
3	8	lib/bb/fetch/__init__.py
2	2	lib/bb/fetch/osc.py
3	8	lib/bb/fetch2/__init__.py
3	1	lib/bb/utils.py

commit 86c6434f093ce5e55d1febfb424a8e595ffc2d17
Author: Bernhard Reutner-Fischer <rep.dot.nop@gmail.com>
Date:   2011-01-10 16:32:56 +0100

    build: remove duplicate import of utils
    
    Signed-off-by: Bernhard Reutner-Fischer <rep.dot.nop@gmail.com>

0	1	lib/bb/build.py

commit 84ea54267177988eb65253aa266c354e31e71672
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2011-01-10 22:34:01 +0000

    runqueue.py: Call bb.cache.Cache.loadDataFull function directly when dumping signatures as per the rest of runqueue
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/runqueue.py

commit 7c0f59cd415e3ddbbab16947b6e9c5a74dea171b
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2011-01-10 21:59:34 +0000

    bitbake/runqueue.py: Fix del_stamp calls and -f option to bitbake with the BasicHash siggen code
    
    (From Poky rev: 48e567bb477ad468d)
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

6	5	lib/bb/runqueue.py

commit 8385bfb7da3a3b71f340a787d7f1502ba61c5b81
Author: Chris Larson <chris_larson@mentor.com>
Date:   2011-01-10 12:30:05 -0700

    msg: no need to hardcode the logging levels
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

2	2	lib/bb/msg.py

commit 4210eb0b783bf9bbdf80b6c6806f66f3e6ec1e77
Author: Chris Larson <chris_larson@mentor.com>
Date:   2011-01-10 12:00:41 -0700

    vim: properly highlight python inside of ${@}
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

9	10	contrib/vim/syntax/bitbake.vim

commit f36354a1bfd3f92979c5ad61a1e5d796f8246f60
Author: Chris Larson <chris_larson@mentor.com>
Date:   2011-01-10 12:00:09 -0700

    vim: handle highlighting exports without assignment
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

2	0	contrib/vim/syntax/bitbake.vim

commit 29ce70ac857a155b27f1909286bc3a0f7429bea0
Author: Chris Larson <chris_larson@mentor.com>
Date:   2011-01-10 11:57:59 -0700

    vim: add an ftplugin for indentation settings
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

1	0	contrib/vim/ftplugin/bitbake.vim

commit f49da3120615b2a3f10211126395b88a59a9f100
Author: Chris Larson <chris_larson@mentor.com>
Date:   2011-01-10 11:54:52 -0700

    bitbake: handle IOError from event_queue.get
    
    These can occur in a particular ^C shutdown, so just break out of the event
    queue empty loop if we encounter it.
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

1	1	bin/bitbake

commit 0153ace246e7c88366f45c8f035a2b4505a1c115
Author: Chris Larson <chris_larson@mentor.com>
Date:   2011-01-10 09:20:50 -0700

    Inject taskpid into log records via our log handler
    
    It turns out that while log filters added with addFilter are only associated
    with that logger, and not its children, handlers are inherited, and handlers
    can be filters.   So, let's add filtering to our existing LogHandler class
    which dispatches our log records as bitbake events.
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

0	8	lib/bb/__init__.py
4	0	lib/bb/event.py

commit de2518ab761d4c1a37d1d5d1d2224b0451e84e5f
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2011-01-10 18:12:53 +0000

    Switch to fetch2 fetcher code based on the environment variable BBFETCH2
    
    (From Poky rev: af06e4a8efbcaff657c397c34f2cb893d2d7f7f7)
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	0	lib/bb/__init__.py

commit 614d6fa073865cf6ba59527ff012ca943fd037d1
Author: Yu Ke <ke.yu@intel.com>
Date:   2011-01-10 18:05:07 +0000

    bb.fetch2: replace bb.fetch with bb.fetch2 in the bb.fetch
    
    bb.fetch2 is copied from bb.fetch, and has many bb.fetch referrence.
    Fix these referrence with bb.fetch2 referrence
    
    (From Poky rev: c64b445f38179a117d39319f762f9dc2435da0ea)
    
    Signed-off-by: Yu Ke <ke.yu@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

11	11	lib/bb/fetch2/__init__.py
1	1	lib/bb/fetch2/bzr.py
1	1	lib/bb/fetch2/cvs.py
4	4	lib/bb/fetch2/git.py
5	5	lib/bb/fetch2/hg.py
1	1	lib/bb/fetch2/local.py
4	4	lib/bb/fetch2/osc.py
3	3	lib/bb/fetch2/perforce.py
2	2	lib/bb/fetch2/repo.py
2	2	lib/bb/fetch2/ssh.py
4	4	lib/bb/fetch2/svk.py
5	5	lib/bb/fetch2/svn.py
1	1	lib/bb/fetch2/wget.py

commit 79f972e9af213a116d6f0207f6a294544279dbfb
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2011-01-10 14:26:56 +0000

    fetch2/git: Remove duplicated code only added for backwards compatibility
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	80	lib/bb/fetch2/git.py

commit 7c567d55f4c44e5086f1580b833bf4cfcec4e202
Author: Yu Ke <ke.yu@intel.com>
Date:   2011-01-10 14:25:04 +0000

    bitbake: copy bb.fetch to bb.fetch2 as initial code base for fetcher overhaul
    
    Signed-off-by: Yu Ke <ke.yu@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

836	0	lib/bb/fetch2/__init__.py
148	0	lib/bb/fetch2/bzr.py
172	0	lib/bb/fetch2/cvs.py
339	0	lib/bb/fetch2/git.py
180	0	lib/bb/fetch2/hg.py
73	0	lib/bb/fetch2/local.py
143	0	lib/bb/fetch2/osc.py
206	0	lib/bb/fetch2/perforce.py
98	0	lib/bb/fetch2/repo.py
118	0	lib/bb/fetch2/ssh.py
104	0	lib/bb/fetch2/svk.py
204	0	lib/bb/fetch2/svn.py
93	0	lib/bb/fetch2/wget.py

commit 12b3aeeafcd8b97c162bf236e1e37586ac24db24
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2011-01-10 13:19:29 +0000

    utils.py: Update log message to use the logger calls
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/utils.py

commit 34bea8c2253cfb219e099337798a1758435ef5cd
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2011-01-10 13:08:09 +0000

    event.py: Improve debug about invalid events
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/event.py

commit e2a39605e3c975fa228c75ba5cb4482600e5a8a7
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2011-01-10 13:00:39 +0000

    persist_data: Don't loop forever waiting on database locks
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	1	lib/bb/persist_data.py

commit a1adbe7a3c752832220e7ba645ff770075730d18
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2011-01-06 19:48:47 +0000

    bitbake/runqueue.py: Fix a bug where do_setscene dependencies would be ignored
    
    (From Poky rev: df8569b4d89ce83e3cafd87f2f37b795d1bfbd6d)
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/runqueue.py

commit 03176f98185c0e1111fc7f5b31b7a6da17ce5875
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2011-01-10 12:53:11 +0000

    runqueue.py: Fix undefined schedulers variable reference
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

4	2	lib/bb/runqueue.py

commit 43b1781b45604227da7867f1b80eb43e9bc79e81
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2011-01-10 12:51:56 +0000

    runqueue.py: Add debug to help resolve partial log message failure
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/runqueue.py

commit 6575e21914d2e71a6c3e8c2036aa7ce7922498de
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2011-01-10 12:51:00 +0000

    runqueue.py: Add missing result return value in setscene failure path
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/runqueue.py

commit 0b7bcf9bc504c920005563264b87dea6fd88a4c2
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2011-01-10 12:50:10 +0000

    runqueue.py: Fix up some lost range->xrange conversions misplaced as part of the poky sync up
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

13	13	lib/bb/runqueue.py

commit 8d39a9d204b24f4f132a9e4d732531b584a910fa
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2011-01-10 12:17:14 +0000

    fetch/__init__.py: Add missing debug level argument
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/fetch/__init__.py

commit 644f130d7eb7bcc175df91b38d46f6f919f9f9d1
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2011-01-07 11:04:38 +0000

    bitbake/siggen.py: Add a signature generator which adds the hash to the stamp files
    
    (From Poky rev: 97789a160ad21ccc614f976fa5e2b306d816aabf)
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

11	0	lib/bb/siggen.py

commit e4a298dc4e712232a456051b8d04629e57512ca1
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2011-01-06 19:47:00 +0000

    bitbake build/siggen/runqueue: Fix stampfile parameters
    
    The current parameters are not useful to the stampfile generator function
    as they can't uniquely define a task. This updated things so the
    parameters can identify unique tasks.
    
    (From Poky rev: 66c6200ff34e8eeca5d1a689bbf9d6a83818248f)
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	2	lib/bb/build.py
6	6	lib/bb/runqueue.py
1	1	lib/bb/siggen.py

commit 4245b27fa8d62c80858b6a050fed260583af7498
Author: Yu Ke <ke.yu@intel.com>
Date:   2010-12-29 15:28:48 +0800

    bb.utils: check if lock file is writable, to fix Yocto bug 606
    
    Bug 606 report that if $DL_DIR is read-only, do_fetch will
    simply hang without any error message.
    
    The root cause is that: bb.fetch.go()->bb.utils.lockfile()
    will try to lock file ${DL_DIR}/xxxxx.lock. Since ${DL_DIR}
    is read-only, it will cause IOError exception. Although
    lockfile() can catch the exception, currently code simply
    ignore all the exception and continue the loop. it make
    sense if the exception is caused by locking contention,
    but in the read-only $DL_DIR case, it cause endless waiting
    unfortunately.
    
    So this patch add read-only check for lockfile to avoid the
    silent hang.
    
    (From Poky rev: 6ee0c26e21f48dcd47af88ed5c174e76e76a3e42)
    
    Signed-off-by: Yu Ke <ke.yu@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

4	0	lib/bb/utils.py

commit 61897c0f57c7f05d85db180bf56b3772bacdb154
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2011-01-07 23:54:42 +0000

    bitbake/knotty.py: Don't show log messages of NOTE and below for task processes
    
    This cleans up the knotty console messages to be a lot quieter and cleaning,
    in keeping with the expectations of most users.
    
    (From Poky rev: b22e345e05efcc3f66278af8f09fb083afe32b68)
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	1	lib/bb/ui/knotty.py

commit cf4a309cce7e4f637799f3df6c37172db1d62ae9
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2011-01-07 23:52:19 +0000

    bitbake/__init__.py: Add taskpid to all LogRecords (subclassed to be BBLogRecords)
    
    This allows us to identify which task messages are from.
    
    (From Poky rev: f8e7215f6c4ece8c0a74ceee8da707cf791038e8)
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

8	0	lib/bb/__init__.py

commit 2d97dedfb92b0d75e757dced705c7e037ef15e3a
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2011-01-07 23:50:17 +0000

    bitbake/msg.py: Add named definitions for all logging levels
    
    (From Poky rev: a13352cfaf4b5d19196151e362851b1516e6af15)
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

11	6	lib/bb/msg.py

commit d93bd42e8a6f66bf7a7a638d98e5e06ccd5a2c33
Merge: 96ee6840 315b83d1
Author: Chris Larson <chris_larson@mentor.com>
Date:   2011-01-07 08:51:43 -0700

    Merge branch 'poky-sync'
    
    * poky-sync:
      build: kill unneeded environment setup bits
      parse: save python functions into the metadata
      Include exported variables in task process env
      runqueue: start implementing quieterrors
      Overhaul environment handling
      runqueue: resurrect use of file objects for pipein/pipeout
      runqueue: clean up message log levels
      runqueue: use correct task ID when checking validity of setscene tasks
      Add support for 'noexec' tasks
      runqueue: implement cache checking from metadata
      runqueue: pass task hash information to tasks
      runqueue: avoid unnecessary delays
      Implement task signatures
      data: Add emit_func and generate_dependencies
      codeparser: Implement persistent cache
      data_smart: track variable references
      codeparser: add module for parsing shell/python
      runqueue: implement scenequeue
      fetch: add SRC_URI checksum
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

commit 96ee6840010c1ae1080e6bf7ff0f4eb2d361e84b
Author: Chris Larson <chris_larson@mentor.com>
Date:   2011-01-07 08:38:41 -0700

    cache: don't expand variables for skipped recipes
    
    Errors can result from these expansions, but for skipped recipes, we
    shouldn't care about those failures.  This fixes the same issue which
    Richard Purdie fixed in poky, commit 847b717.
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

13	1	lib/bb/cache.py

commit 6de4f9f5857ecce5bbd4d490ecbbd3570e5b3ee5
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2011-01-07 14:03:27 +0000

    bitbake/build.py: Fix del_stamp work correctly after recent stamp function changes
    
    (From Poky rev: 5da9747)
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

1	1	lib/bb/build.py

commit 01c4bffcd918b74f4c61405cca3b42a3b104cd35
Author: Lianhao Lu <lianhao.lu@intel.com>
Date:   2011-01-07 14:17:10 +0800

    bitbake/data.py: corrected the output for shell syntax.
    
    [BUGID# 645], modify the emit_var()
    1. Added "#" to the beginning of each line if the comment contains
    multiple lines.
    
    2. Added "\" to the end of each line if the shell variable value
    contains multiple lines.
    
    (From Poky rev: 6f454c10bcdd5)
    
    Signed-off-by: Lianhao Lu <lianhao.lu@intel.com>
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

3	1	lib/bb/data.py

commit bee33a9623c763eb11e8009ffa76869861a9d4a7
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2011-01-06 19:43:41 +0000

    bitbake build.py: Stamp handling improvements
    
    * Move stamp file deletion out of the internal stamp helper function
    * Add a new function to return the path to a stamp for a given task
    
    (From Poky rev: ec6e4793dc79c61b780b74571db4cd66c1c04251)
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

11	5	lib/bb/build.py

commit 94709a0904ca3f02f5067aacf244f300a1d16627
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2011-01-06 19:40:41 +0000

    bitbake build.py: Use localdata for stamp handling, not d
    
    (From Poky rev: 4a10a5b438f49577fb29f4e277e2300cdce10ab8)
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

2	2	lib/bb/build.py

commit cf37932ad689ebb8f9008df38b18ea54a73132b3
Author: Richard Purdie <richard.purdie@linuxfoundation.org>
Date:   2011-01-06 15:41:39 +0000

    bitbake/build.py: Ditch the extract_stamp function as its just going to complicate improving the stamp handling functions
    
    (From Poky rev: 51a2e8712a9b94de53253e198c64c0fa428e4349)
    
    Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

9	10	lib/bb/build.py

commit 9615c538b894f71a2d1a0ba6b3f260db91e75786
Author: Chris Larson <chris_larson@mentor.com>
Date:   2011-01-04 13:34:08 -0700

    parse: pass filename, lineno into the ast
    
    We will be needing this information to improve the tracebacks of python code
    from the metadata, as well as to give the user information about where
    variables were defined, so they know how it ended up the way it is.
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

52	45	lib/bb/parse/ast.py
7	7	lib/bb/parse/parse_py/BBHandler.py
4	4	lib/bb/parse/parse_py/ConfHandler.py

commit aa9646717b3ee1006628246a7c495f601e62391c
Author: Chris Larson <chris_larson@mentor.com>
Date:   2011-01-04 13:07:27 -0700

    parse.ast: drop __word__ regular expression
    
    We can use the string split method for this instead.
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

3	4	lib/bb/parse/ast.py

commit 0b11a3d4eab84b372fd45b9537cf0327008daf8d
Author: Chris Larson <chris_larson@mentor.com>
Date:   2011-01-04 13:06:49 -0700

    parse.ast: avoid code duplication for inherit
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

5	6	lib/bb/parse/ast.py

commit 01f582992f64dc77d54df0312b9eecb566821f16
Author: Chris Larson <chris_larson@mentor.com>
Date:   2011-01-04 13:03:24 -0700

    process: simplify the log option for run
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

1	5	lib/bb/process.py

commit c8ff0fd3e9f050a668f1a069cf37ee37db3664fa
Author: Chris Larson <chris_larson@mentor.com>
Date:   2011-01-05 11:20:05 -0700

    event: use BBLogFormatter in print_ui_queue
    
    This ensures that when a failure occurs very early on in bitbake startup, the
    message formatting ematches that used by the UIs.
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

2	1	lib/bb/event.py

commit dc2264387617586b5c0a61e126c75edde5e7abcd
Author: Chris Larson <chris_larson@mentor.com>
Date:   2011-01-05 11:19:21 -0700

    build: use logger.isEnabledFor, not getEffectiveLevel
    
    I think this is less confusing, and avoids needing to know about the *range*
    of logging levels, instead simply asking what we really want to know.
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

2	2	lib/bb/build.py

commit b801e442b0163a73fe4624e3a7dec4bf7bb63f3e
Author: C Michael Sundius <msundius@sundius.com>
Date:   2010-08-02 14:56:11 -0700

    Allow %20 in a file name in the SRC_URI
    
    Signed-off-by: C Michael Sundius <msundius@sundius.com>
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

2	1	lib/bb/fetch/wget.py

commit 315b83d1de954e51d0d077ff00140a7ec41ffbc7
Author: Chris Larson <chris_larson@mentor.com>
Date:   2010-12-29 18:47:41 -0700

    build: kill unneeded environment setup bits
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

1	6	lib/bb/build.py

commit e8d490bc2f26332f1763dce47fdd5791ce3b7e75
Author: Chris Larson <chris_larson@mentor.com>
Date:   2010-11-26 14:11:06 -0700

    vercmp: don't choke on empty first version components
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

1	1	lib/bb/utils.py

commit 47aa508e8b4321588c1331cf9a209127cb3535e8
Author: Chris Larson <chris_larson@mentor.com>
Date:   2010-09-10 11:33:48 -0700

    Don't show tracebacks for SystemExit or KeyboardInterrupt
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

1	2	lib/bb/utils.py

commit f5c086fd1a094d9fb9e99783d4190f26c9129157
Author: Chris Larson <chris_larson@mentor.com>
Date:   2010-09-10 11:14:54 -0700

    Fix exit code display for task failure
    
    Per the python documentation, os.waitpid returns the exitcode shifted up by 8
    bits, and we weren't compensating, resulting in a display of 'failed with 256'
    when a worker process exits with a code of 1.
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

3	3	lib/bb/runqueue.py

commit 479716be4a0ec12225c7d13e6c6676727e5d2298
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2010-08-20 09:38:24 +0100

    bitbake/server: Raise a shutdown event if we're seeing exceptions
    
    Signed-off-by: Richard Purdie <rpurdie@linux.intel.com>

1	0	lib/bb/server/none.py

commit 089dc31932a85455ed0fec8209d0451af4310f94
Author: Bernhard Reutner-Fischer <rep.dot.nop@gmail.com>
Date:   2011-01-03 20:57:24 +0100

    ConfHandler: commentary typo fixes
    
    Signed-off-by: Bernhard Reutner-Fischer <rep.dot.nop@gmail.com>
    Signed-off-by: Richard Purdie <rpurdie@linux.intel.com>

3	3	lib/bb/parse/parse_py/ConfHandler.py

commit 413af91e56a6d2368f6cbe22c0e2a337e1289e55
Author: Bernhard Reutner-Fischer <rep.dot.nop@gmail.com>
Date:   2011-01-03 20:57:23 +0100

    event: fix unicode handler registration
    
    Signed-off-by: Bernhard Reutner-Fischer <rep.dot.nop@gmail.com>
    Signed-off-by: Richard Purdie <rpurdie@linux.intel.com>

1	1	lib/bb/event.py

commit 884365228fcaac07421ac1440d4946693fb628c5
Author: Bernhard Reutner-Fischer <rep.dot.nop@gmail.com>
Date:   2011-01-03 20:57:22 +0100

    cache: defer marking fn as clean
    
    Only mark fn as clean if it is clean.
    This saves us from removing (prematurely added) fn from our clean set
    and saves me a few percent of runtime (and misleading debugging output
    from remove()).
    
    Signed-off-by: Bernhard Reutner-Fischer <rep.dot.nop@gmail.com>
    Signed-off-by: Richard Purdie <rpurdie@linux.intel.com>

1	4	lib/bb/cache.py

commit 739a8ce6ac688061afd55cd3c980d0e9e45c5930
Author: Bernhard Reutner-Fischer <rep.dot.nop@gmail.com>
Date:   2011-01-03 20:57:21 +0100

    BBHandler: use basename directly in handler()
    
    Signed-off-by: Bernhard Reutner-Fischer <rep.dot.nop@gmail.com>
    Signed-off-by: Richard Purdie <rpurdie@linux.intel.com>

2	2	lib/bb/parse/parse_py/BBHandler.py

commit ba060160fdf1278a273fb2b77d36b8c681807ecf
Author: Bernhard Reutner-Fischer <rep.dot.nop@gmail.com>
Date:   2011-01-03 20:57:20 +0100

    data: fewer newlines for (un)export
    
    Previously we emitted two newlines for export and unexport.
    One newline for export and unexport is enough (and makes the scripts
    look better and a tad smaller).
    
    Signed-off-by: Bernhard Reutner-Fischer <rep.dot.nop@gmail.com>
    Signed-off-by: Richard Purdie <rpurdie@linux.intel.com>

2	2	lib/bb/data.py

commit bcabe2dfb587042e139890329ff52d9bb9201cf4
Author: Bernhard Reutner-Fischer <rep.dot.nop@gmail.com>
Date:   2011-01-03 20:57:19 +0100

    parse: Use constants from stat instead of magic numbers
    
    Signed-off-by: Bernhard Reutner-Fischer <rep.dot.nop@gmail.com>
    Signed-off-by: Richard Purdie <rpurdie@linux.intel.com>

4	3	lib/bb/parse/__init__.py

commit bbfaf3e1d87543187ffb0122e7474986feff3338
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2010-08-26 18:06:30 +0100

    parse: save python functions into the metadata
    
    Signed-off-by: Richard Purdie <rpurdie@linux.intel.com>

8	4	lib/bb/parse/ast.py
3	2	lib/bb/parse/parse_py/BBHandler.py

commit 64d945b2b66ae6f71b7aebd713f1be047bd22bbe
Author: Chris Larson <chris_larson@mentor.com>
Date:   2010-12-21 20:23:22 -0500

    Include exported variables in task process env
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

15	0	lib/bb/data.py
2	0	lib/bb/runqueue.py

commit 49d8852c231e4437a9b29e0986a9acf365559546
Author: Chris Larson <chris_larson@mentor.com>
Date:   2010-12-22 13:18:00 -0500

    runqueue: start implementing quieterrors
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

6	2	lib/bb/runqueue.py

commit 8bc6f3eb7f735e606202393542b8b610d0cbc3d8
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2010-11-28 17:39:09 +0000

    Overhaul environment handling
    
    Currently, anything whitelisted in the environment makes it into the worker
    processes. This is undesireable and the worker environment should be as
    clean as possible. This patch adapts bitbake sosme variables are loaded into
    bitbake's datastore but not exported by default. Any variable can be exported
    by setting its export flag.
    
    Signed-off-by: Richard Purdie <rpurdie@linux.intel.com>
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

3	1	lib/bb/data.py
34	16	lib/bb/utils.py

commit c30630548b66e59e055e372bec4736d118bac131
Author: Chris Larson <chris_larson@mentor.com>
Date:   2010-12-20 15:23:13 -0500

    runqueue: resurrect use of file objects for pipein/pipeout
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

1	5	lib/bb/event.py
9	7	lib/bb/runqueue.py

commit 9ac2ce32b9071b7b5a2579e3f164bfb9b3a80ec3
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2010-12-17 10:45:51 +0000

    runqueue: clean up message log levels
    
    Signed-off-by: Richard Purdie <rpurdie@linux.intel.com>

5	5	lib/bb/runqueue.py

commit 42b08455b9cc6a48e1c563084c9698542a5c6c96
Author: Kevin Tian <kevin.tian@intel.com>
Date:   2010-12-14 19:21:24 +0800

    runqueue: use correct task ID when checking validity of setscene tasks
    
    sstate hash validation is done at initialization of RunQueueExecuteScenequeue.
    However the index of 'valid' list returned from the validation doesn't
    correspond to setscene task ID. It's just an intermediate namespace between
    runqueue and sstate hash func. Use it as setscene task ID fully mess the flow.
    Previously this doesn't cause trouble because all setscene tasks are passed. Commit
    58396a5d24c62710fd0a9f3780d84ac8a95d8e7c add 'noexec' concept to setscene
    tasks which grabs some tasks out of the list and thus trigger this problem
    
    Without this fix there're ~50 recipes (gzip-native, glib, ...) rebuilt weirdly
    with a minimal build, even though existing sstate packages could accelerate them.
    
    there's another typo using wrong task ID in a debug message which further hide
    this issue
    
    Signed-off-by: Kevin Tian <kevin.tian@intel.com>

10	4	lib/bb/runqueue.py

commit b7b63f6ba8b9ba99193573a1ba03736765f559e5
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2010-11-06 14:33:05 +0000

    Add support for 'noexec' tasks
    
    Signed-off-by: Richard Purdie <rpurdie@linux.intel.com>

1	0	lib/bb/build.py
32	12	lib/bb/runqueue.py
8	2	lib/bb/ui/knotty.py

commit 189a5f29c7c775c0988eed2dad860b1f790ca409
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2010-10-05 22:21:34 +0100

    runqueue: implement cache checking from metadata
    
    This lets us speed up setscene processing, by letting the function from the
    metadata inform us about the necessity of running the setscene functions.
    
    Signed-off-by: Richard Purdie <rpurdie@linux.intel.com>

4	0	lib/bb/cache.py
24	1	lib/bb/runqueue.py

commit 1d318acb06a80c635dc2b4a935cb2fafb603f40c
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2010-09-27 15:57:13 +0100

    runqueue: pass task hash information to tasks
    
    Signed-off-by: Richard Purdie <rpurdie@linux.intel.com>
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

14	0	lib/bb/runqueue.py
8	1	lib/bb/siggen.py

commit 11dfa9062e52a8e5c1c736752d0bcd48ab6349c7
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2010-09-13 16:57:13 +0100

    runqueue: avoid unnecessary delays
    
    Signed-off-by: Richard Purdie <rpurdie@linux.intel.com>
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

43	43	lib/bb/runqueue.py

commit 10c771f2f961c61628b283e9962e8aa6df73eab1
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2010-08-31 14:49:43 +0100

    Implement task signatures
    
    Includes functionality to find out what changes between two different
    signature data dumps.
    
    Signed-off-by: Richard Purdie <rpurdie@linux.intel.com>
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

3	0	bin/bitbake
12	0	bin/bitbake-diffsigs
20	1	lib/bb/cache.py
2	0	lib/bb/cooker.py
4	0	lib/bb/parse/__init__.py
3	3	lib/bb/parse/ast.py
41	4	lib/bb/runqueue.py
256	0	lib/bb/siggen.py
1	0	lib/bb/utils.py

commit edbdf6fc89d915f06b62c5a06726e0e46a940d2e
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2010-08-03 14:30:20 +0100

    data: Add emit_func and generate_dependencies
    
    These functions allow generation of dependency data between functions and
    variables allowing moves to be made towards generating checksums and allowing
    use of the dependency information in other parts of bitbake.
    
    Signed-off-by: Richard Purdie <rpurdie@linux.intel.com>

1	1	lib/bb/build.py
77	0	lib/bb/data.py
2	0	lib/bb/parse/ast.py

commit 4b7aab109f746ad9be2699c0fb6f4a4e65d65936
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2010-08-31 14:19:22 +0100

    codeparser: Implement persistent cache
    
    For a given input to this code, the output doesn't change to implement a persistent
    cache of the data to speed up parsing.
    
    Signed-off-by: Richard Purdie <rpurdie@linux.intel.com>

64	12	lib/bb/codeparser.py
4	1	lib/bb/cooker.py

commit dab657bf8a841cb872c7418d41fdecb21f36780d
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2010-08-25 14:26:37 +0100

    data_smart: track variable references
    
    Signed-off-by: Richard Purdie <rpurdie@linux.intel.com>

49	23	lib/bb/data_smart.py

commit 4318da793a1b5008d7c122e5dac414d5c652a57d
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2010-08-02 10:20:20 +0100

    codeparser: add module for parsing shell/python
    
    This commit is derived from Chris Larson's checksum work, turned into a
    standalone piece of code for parsing python and shell functions.
    
    The deindent code has been replaced with code to work around indentation
    for speed. The original NodeVisitor in the ast was replaced with a faster
    class walk call.
    
    Signed-off-by: Richard Purdie <rpurdie@linux.intel.com>

284	0	lib/bb/codeparser.py

commit f51f6f8928145b41770c0322c901ab7c3043bc0e
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2010-08-19 11:36:29 +0100

    runqueue: implement scenequeue
    
    Signed-off-by: Richard Purdie <rpurdie@linux.intel.com>

275	45	lib/bb/runqueue.py

commit ce6071c64dd98aada6649fa7811fdc6f92b6f654
Author: Yu Ke <ke.yu@intel.com>
Date:   2010-12-17 13:52:52 +0800

    fetch: add SRC_URI checksum
    
    This patch adds per-recipe SRC_URI checksum verification.
    
    - SRC_URI format
    The format of SRC_URI checksum follow OE definition:
    
    1. SRC_URI has single src
    SRC_URI = "http://some.domain/file.tar.gz"
    SRC_URI[md5sum] = "xxxxxxxxxxxxxxx"
    SRC_URI[sha256sum] = "xxxxxxxxxxxxxxxxxxxxxx"
    
    2. SRC_URI has multiple src, every src need specify name
    SRC_URI = "http://some.domain/file1.tar.gz;name=name1 \
               http://some.domain/file2.tar.gz;name=name2 "
    SRC_URI[name1.md5sum] = "xxxxxxxxxxxxxxx"
    SRC_URI[name1.sha256sum] = "xxxxxxxxxxxxxxxxxxxxxx"
    SRC_URI[name2.md5sum] = "xxxxxxxxxxxxxxx"
    SRC_URI[name2.sha256sum] = "xxxxxxxxxxxxxxxxxxxxxx"
    
    - SRC_URI checking invocation:
    the checksum checking is invoked in do_fetch phase,
    so it can be invoked manually by
    
    if recipes has no SRC_URI checksum item, bitbake will show warning:
    "
    WARNING: Missing SRC_URI checksum for xxxx.tar.gz, consider to add
    SRC_URI[md5sum] = "5c69f16d452b0bb3d44bc3c10556c072"
    SRC_URI[sha256sum] = "f4e0ada8d4d516bbb8600a3ee7d9046c9c79e38cd781df9ffc46d8f16acd1768"
    "
    thus recipe author can add it to recpie file after SRC_URI
    
    - control variable BB_STRICT_CHECKSUM
    when SRC_URI checksum is missing, this variable decide pass or not
    if BB_STRICT_CHECKSUM = "1", missing checksum is fatal
    
    Signed-off-by: Yu Ke <ke.yu@intel.com>
    Signed-off-by: Richard Purdie <rpurdie@linux.intel.com>
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

49	0	lib/bb/fetch/__init__.py

commit 5ec4ca7e45bdf6d259503fc67155395e89ba6329
Author: Chris Larson <chris_larson@mentor.com>
Date:   2010-12-29 23:44:21 -0700

    process: fix handling of the input argument
    
    When using a logfile, we weren't sending input to the child process.
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

19	16	lib/bb/process.py

commit d88dfcc749c57bb7ea3f5293ad6c6c687f7bb258
Author: Chris Larson <chris_larson@mentor.com>
Date:   2010-12-29 18:39:50 -0700

    fetch: handle no sortable_buildindex for git
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

7	3	lib/bb/fetch/git.py

commit 4d9e3f12a2eac8fe9999e6822f0dcd8498d99330
Author: Chris Larson <chris_larson@mentor.com>
Date:   2010-12-29 17:52:54 -0700

    utils: kill unnecessary duplicated chmod
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

0	2	lib/bb/utils.py

commit 85e5a357ab5daaa293e567daee1b7c663cdc7f5c
Author: Chris Larson <chris_larson@mentor.com>
Date:   2010-12-29 16:46:21 -0700

    fetch: fix git rev key compat for sortable
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

44	0	lib/bb/fetch/git.py

commit d68a4e7ccf576cde38a9569e328341375bc8bc4e
Author: Chris Larson <chris_larson@mentor.com>
Date:   2010-12-28 10:02:49 -0700

    bb.debug: handle caller not passing a debug level
    
    This is a compatibility measure, as previous versions did not error out when
    this occurred, and will most likely be dropped in the next bitbake minor
    version in favor of a fatal error.
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

4	0	lib/bb/__init__.py

commit 8c0afc13ad5eefea62b0b136f5b66792ba4e44cb
Author: Chris Larson <chris_larson@mentor.com>
Date:   2010-12-29 16:23:14 -0700

    fetch: resurrect branch inclusion in git revision key
    
    This is similar to Richard Purdie's commit, but falls back to checking the
    persist_data database for the old key if the new does not exist, so as to
    retain compatibility for at least one bitbake minor version.
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

32	2	lib/bb/fetch/git.py

commit 683894e3a9be25b060e60be900a5bc1271d450d2
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2010-10-09 17:24:16 +0100

    fetch: Ensure SRCREV is still set correctly if the pn-X override has been expanded
    
    Signed-off-by: Richard Purdie <rpurdie@linux.intel.com>

2	0	lib/bb/fetch/__init__.py

commit 2b9cd8c4d882e5857c71583433a22f45e242de36
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2010-09-09 15:09:50 +0100

    fetch: Fix named SRCREVS variable name ordering
    
    Retains backward compatibility.
    
    Signed-off-by: Richard Purdie <rpurdie@linux.intel.com>

3	1	lib/bb/fetch/__init__.py

commit 0b0317966d031354f13299db12629ac789235434
Author: Chris Larson <chris_larson@mentor.com>
Date:   2010-12-28 17:23:34 -0700

    build: fix empty function execution
    
    - If the function is empty *or* unset, don't exec it.
    - If the function is unset, warn.
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

3	2	lib/bb/build.py

commit e9b07b8e84f117c942dd37478001f4b1b5b3b6a3
Author: Chris Larson <chris_larson@mentor.com>
Date:   2010-12-28 10:29:04 -0700

    build: work around do_clean issue by creating T in exec_func
    
    In some repositories (e.g. poky), do_clean removes WORKDIR, then uses
    exec_func, which expects T to exist, so let's make sure it does.  I think its
    fair to assume that the runfile dir exists in exec_func, so this is a
    temporary measure.
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

1	0	lib/bb/build.py

commit a69398a2f288fe307c70e1506562ea19eeeef34e
Author: Chris Larson <chris_larson@mentor.com>
Date:   2010-12-28 10:28:32 -0700

    build: allow creation of FuncFailed with no function name
    
    This is only for compatibility, and will likely be dropped after this next
    bitbake release.
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

5	2	lib/bb/build.py

commit 55fa677c1c3d2ba66ce8ce1f3abc803bf9fb8300
Author: Chris Larson <chris_larson@mentor.com>
Date:   2010-12-28 10:31:55 -0700

    build: only warn about unset functions, not empty ones
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

1	1	lib/bb/build.py

commit c58ffedd14d2a29c4e521c92ccbf4c34b956dc1c
Author: Chris Larson <chris_larson@mentor.com>
Date:   2010-12-23 19:29:50 -0700

    persist_data: unbork the resurrect of select lock wait
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

1	1	lib/bb/persist_data.py

commit b0a3cc0eacbf537a8c5f020c456fa08f6ca7c1e4
Author: Chris Larson <chris_larson@mentor.com>
Date:   2010-12-23 19:22:21 -0700

    data_smart: don't include functions in name lookups
    
    For raw name lookups in python snippets, don't return the values for functions
    in the metadata.  This was necessary to fix issues once the methodpool
    functions get added to the metadata.
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

5	4	lib/bb/data_smart.py

commit 29f6bceac00d4699fcf5e9664626175ef56fd376
Author: Chris Larson <chris_larson@mentor.com>
Date:   2010-12-23 17:04:07 -0700

    runqueue: simplify next buildable task
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

3	3	lib/bb/runqueue.py

commit 8b1b323856cc4f822db5b49092a5ca125e4d6a0e
Author: Chris Larson <chris_larson@mentor.com>
Date:   2010-12-23 13:05:55 -0700

    Prepare for 1.10.2
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

19	14	ChangeLog
1	1	bin/bitbake
1	1	lib/bb/__init__.py

commit 628c5159d1151b89f2b7210c8819489e8dc9a84d
Author: Chris Larson <chris_larson@mentor.com>
Date:   2010-12-23 10:36:39 -0700

    persist_data: resurrect the lock wait for selects
    
    Think this got inadvertantly dropped when switching to the new API.
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

7	7	lib/bb/persist_data.py

commit c510e54c3930e6903e9429b19a8f12f2de754191
Merge: 457171b5 80e3d3a1
Author: Chris Larson <chris_larson@mentor.com>
Date:   2010-12-22 15:14:01 -0700

    Merge remote branch 'foerster/depexp-sorting'
    
    * foerster/depexp-sorting:
      depexp: add sorting of all package lists

commit 457171b5b2cfd77b5bf4cc34b91b710add620ad0
Author: Chris Larson <chris_larson@mentor.com>
Date:   2010-12-22 12:07:09 -0700

    build: pass the correct filename to better_{compile,exec}
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

1	1	lib/bb/build.py

commit a148e6a63c842ac586ac1dddbd9008f93cdea297
Author: Chris Larson <chris_larson@mentor.com>
Date:   2010-12-22 12:06:54 -0700

    utils: show the actual exception in better_exec
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

4	2	lib/bb/utils.py

commit 6fb448a6cfb00aeb5dfc6c047915e0941e754348
Author: Chris Larson <chris_larson@mentor.com>
Date:   2010-12-22 11:00:43 -0700

    pysh: add missing os.path import
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

1	0	lib/bb/pysh/pyshyacc.py

commit a4230811ffbfa853a86eb06cba8e16e1cc24bcb2
Author: Chris Larson <chris_larson@mentor.com>
Date:   2010-12-22 11:00:22 -0700

    data_smart: handle None values in expandVarrefs
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

1	1	lib/bb/data_smart.py

commit 5cde120003af97a5cf5c6eff2a02bb1480f9414b
Author: Bernhard Reutner-Fischer <rep.dot.nop@gmail.com>
Date:   2010-12-22 16:41:32 +0100

    runqueue: fix typo in documentation of calculate_task_weights
    
    Signed-off-by: Bernhard Reutner-Fischer <rep.dot.nop@gmail.com>

1	1	lib/bb/runqueue.py

commit 9175024d1ace0e18233392532cd9ca66059d5f95
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2010-08-25 00:58:23 +0100

    bitbake/runqueue.py: Ensure rqexe always exists and that empty task lists cause a graceful exit
    
    Signed-off-by: Richard Purdie <rpurdie@linux.intel.com>
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

16	4	lib/bb/runqueue.py

commit 80e3d3a130b9dee72c11c6946bb5ff7705111d7c
Author: Bob Foerster <robert@erafx.com>
Date:   2010-12-21 08:12:21 -0500

    depexp: add sorting of all package lists
    
    Without sorting, it's very difficult to find the information you're
    looking for.  Now, the lists are all sorted alphabetically for easy
    viewing.
    
    Signed-off-by: Bob Foerster <robert@erafx.com>

2	1	lib/bb/ui/depexp.py

commit ce5ab0fc524a1c2c48c4c39d6fc8aae23019207b
Author: Chris Larson <chris_larson@mentor.com>
Date:   2010-12-19 19:30:49 -0700

    Use os.devnull, not /dev/null
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

1	1	lib/bb/build.py
1	1	lib/bb/runqueue.py

commit 24857e2ceb405916b0b0b3e75c6c2375a909b9ba
Author: Chris Larson <chris_larson@mentor.com>
Date:   2010-12-18 10:57:12 -0700

    shell: remove
    
    bb.shell is unused and incompatible with current bitbake.  We can resurrect it
    in a more functional form when we add the text input to the goggle and ncurses
    UIs.
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

0	820	lib/bb/shell.py

commit c3aec3e887d32ab361e5b6d864679adb135b5786
Author: Chris Larson <chris_larson@mentor.com>
Date:   2010-12-18 10:49:15 -0700

    Revert "server: kill stdin/stdout/stderr"
    
    This is a useful thing, but requires that tasks behave correctly, sending
    their output via the usual bitbake messaging mechanisms, rather than via
    stdout.  We'll postpone this until after the release.
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

0	9	lib/bb/server/process.py
0	15	lib/bb/utils.py

commit 8672abb230dc78c9dec0731bfbabf53a3a7c9f8f
Author: Chris Larson <chris_larson@mentor.com>
Date:   2010-12-18 10:22:43 -0700

    server: fix NULL file mode
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

1	1	lib/bb/server/process.py

commit de2368ce38dbf6772383832f972d0d3ef4ac0cd2
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2010-08-04 11:30:39 +0100

    build: Add support for pre and postfuncs for tasks
    
    Signed-off-by: Richard Purdie <rpurdie@linux.intel.com>
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

7	0	lib/bb/build.py
2	2	lib/bb/data_smart.py

commit 23c6122437b5011d2213d717d8529cd1221b42b5
Author: Chris Larson <chris_larson@mentor.com>
Date:   2010-12-17 14:35:36 -0700

    server: drop none and xmlrpc
    
    These are no longer used, and are no longer compatible with the current UIs.
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

0	183	lib/bb/server/none.py
0	252	lib/bb/server/xmlrpc.py

commit db14a900e140ba084bd2841c3708cbf1069e2354
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2010-08-20 15:11:44 +0100

    utils: Allow copyfile to copy files which aren't readable
    
    Signed-off-by: Richard Purdie <rpurdie@linux.intel.com>

3	0	lib/bb/utils.py

commit 7498466f0e42beea6f5f411209a892b636c7783c
Author: Bernhard Reutner-Fischer <rep.dot.nop@gmail.com>
Date:   2010-12-17 22:56:08 +0100

    runqueue: use fewer newlines in error path
    
    Signed-off-by: Bernhard Reutner-Fischer <rep.dot.nop@gmail.com>

2	2	lib/bb/runqueue.py

commit 976e4f84a8147ad762442df7ff4820611a21d227
Author: Chris Larson <chris_larson@mentor.com>
Date:   2010-12-17 14:46:41 -0700

    logger usage cleanup
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

1	1	lib/bb/build.py
1	1	lib/bb/runqueue.py
1	1	lib/bb/ui/knotty.py

commit 2b07525d80f5d635e7bdcd4a9b1b93a3b834f7ce
Author: Chris Larson <chris_larson@mentor.com>
Date:   2010-12-17 14:46:55 -0700

    runqueue: kill pre-server-ui-split remnant
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

0	5	lib/bb/runqueue.py

commit 99cdb61b30d0c75c8f831c78346cc9f8ca7945dd
Author: Bernhard Reutner-Fischer <rep.dot.nop@gmail.com>
Date:   2010-12-17 21:18:00 +0100

    utils: fix typo in error message
    
    Signed-off-by: Bernhard Reutner-Fischer <rep.dot.nop@gmail.com>

1	1	lib/bb/utils.py

commit 447c87f006806b9f3d5a1304960969d6bfb1a906
Author: Bernhard Reutner-Fischer <rep.dot.nop@gmail.com>
Date:   2010-12-17 20:55:51 +0100

    bitbake.conf: use bb.utils.which
    
    Signed-off-by: Bernhard Reutner-Fischer <rep.dot.nop@gmail.com>

1	1	conf/bitbake.conf

commit b23356a96c3df98af2ac5168ed1d350efc1a3dcd
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2010-12-05 22:51:38 +0000

    bitbake/utils.py: Ensure the last lines of functions are printed in tracebacks
    
    Signed-off-by: Richard Purdie <rpurdie@linux.intel.com>

5	3	lib/bb/utils.py

commit 70cba0e84da29fa49bc232a8a6185a75a300bce8
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2010-12-05 22:52:44 +0000

    bitbake/utils.py: Improve traceback to be more helpful/clear to users
    
    Signed-off-by: Richard Purdie <rpurdie@linux.intel.com>

26	9	lib/bb/utils.py

commit 33e36916dfda773d92f6b0f2bbbda00cc07f9261
Author: Bob Foerster <robert@erafx.com>
Date:   2010-12-18 03:06:57 +0800

    Timeout UI runCommand calls if server doesn't respond (or dies)
    
    Signed-off-by: Bob Foerster <robert@erafx.com>

4	2	lib/bb/server/process.py

commit 40778a6e9e82c7ea4673a74fc19574430fa63e8d
Author: Chris Larson <chris_larson@mentor.com>
Date:   2010-12-17 12:15:48 -0700

    Move LAYERDIR expansion hack into DataSmart
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

0	2	TODO
1	13	lib/bb/cooker.py
21	0	lib/bb/data_smart.py

commit 2bc893dc407bf608cac7e12673161b75b712da83
Author: Chris Larson <chris_larson@mentor.com>
Date:   2010-12-17 11:54:09 -0700

    parse: use bb.utils.which
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

1	1	lib/bb/parse/__init__.py

commit 9723a1c474b72b096c5a3136bf446ed69f3a749e
Author: Chris Larson <chris_larson@mentor.com>
Date:   2010-12-17 11:53:54 -0700

    Update persist_data usage to the new API
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

15	18	lib/bb/fetch/__init__.py

commit dc7893d0da5834d7a02be4314cefee0d1f9e3b48
Author: Chris Larson <chris_larson@mentor.com>
Date:   2010-12-17 12:13:28 -0700

    Revert "build: stop injecting os/bb into __builtins__"
    
    Temporary revert, will resurrect.
    
    This reverts commit 566657c13de3fefb5043b71de953fb805799da95.

10	2	lib/bb/build.py
10	2	lib/bb/ui/uihelper.py

commit dc5a5c39291ec223cd761dce59d29eee7316cb70
Author: Chris Larson <chris_larson@mentor.com>
Date:   2010-12-17 11:49:31 -0700

    Fix logging level names for post-server-ui-split
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

21	0	lib/bb/msg.py
0	10	lib/bb/ui/knotty.py

commit 71f8b122dc8477b12911ff7b145a42c4c97a118f
Author: Chris Larson <chris_larson@mentor.com>
Date:   2010-12-17 11:01:51 -0700

    build: fix file mode for /dev/null
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

1	1	lib/bb/build.py
12	31	lib/bb/utils.py

commit 1ad8b924c90bfb953c53db090cfe3abc324afc16
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2010-12-05 22:52:44 +0000

    bitbake/utils.py: Improve traceback to be more helpful/clear to users
    
    Signed-off-by: Richard Purdie <rpurdie@linux.intel.com>

26	9	lib/bb/utils.py

commit 1537e94b9e8d0abe9263b6a644f1d772f1a176e7
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2010-12-05 22:51:38 +0000

    bitbake/utils.py: Ensure the last lines of functions are printed in tracebacks
    
    Signed-off-by: Richard Purdie <rpurdie@linux.intel.com>

5	3	lib/bb/utils.py

commit 566657c13de3fefb5043b71de953fb805799da95
Author: Chris Larson <chris_larson@mentor.com>
Date:   2010-12-17 08:28:25 -0700

    build: stop injecting os/bb into __builtins__
    
    For one, we should be able to avoid this via _context in bb.utils.  For two,
    __builtins__ only has to exist for CPython, so this causes problems running
    bitbake under other python implementations (though we could change to doing
    setattr()s against the __builtin__ module, let's avoid this instead).
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

2	10	lib/bb/build.py
2	10	lib/bb/ui/uihelper.py

commit b0cbc728e5285f71d043458b4db71ea6bae7e0cd
Author: Chris Larson <chris_larson@mentor.com>
Date:   2010-12-17 10:12:46 -0600

    bin/bitbake: [HACK] Empty ui event queue on shutdown
    
    This is a workaround to ensure the user always sees any queued up log
    messages, even if the UI has shut down without showing them.  This is far from
    ideal.  The correct fix is to alter the UIs to shut down more cleanly,
    ensuring they display any remaining queued up events to the user before they
    exit.
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

8	0	bin/bitbake

commit db56f34e22e9a7c425f59d8f946c60e0a63f5f75
Author: Chris Larson <chris_larson@mentor.com>
Date:   2010-12-17 10:13:18 -0600

    Ensure LogHandler is set up for the server construction
    
    If we add the LogHandler object in the server.main, rather than earlier, any
    log messages emitted during the construction of the server (and, therefore,
    during the construction of the cooker) will not be seen.  This includes the
    error(s) which the cooker can emit when parsing the command line.  With this,
    we again see the error if you try to use -g without specifying a recipe to
    operate against.
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

6	0	bin/bitbake
0	3	lib/bb/server/process.py

commit 7c7648e62d9f162cdc2a93a350bfba6366b8d158
Author: Chris Larson <chris_larson@mentor.com>
Date:   2010-12-17 10:22:43 -0600

    cooker: ensure parseCommandLine can get BBPKGS
    
    Without this, one can't use BBPKGS with bitbake -g, for example.
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

2	2	lib/bb/cooker.py

commit b947e7aa405966262c0614cae02e7978ec637095
Author: Bob Foerster <robert@erafx.com>
Date:   2010-12-17 23:20:39 +0800

    Resurrect alternative UIs
    
    The various alternative UIs have been updated to once again be functional
    with the latest bitbake internals.  Each of the UIs still have much room for
    functional improvement.
    
    In particular, they have been updated to:
     - interact with the new process based server
     - handle the current set of events and notifications fired from the server
       and its associated subsystems
    
    Signed-off-by: Bob Foerster <robert@erafx.com>

1	1	bin/bitbake
1	1	lib/bb/ui/crumbs/progress.py
175	50	lib/bb/ui/crumbs/runningbuild.py
60	13	lib/bb/ui/depexp.py
33	7	lib/bb/ui/goggle.py
4	0	lib/bb/ui/knotty.py
37	25	lib/bb/ui/ncurses.py

commit 6dc863f714beda6ca7ff8cd3e830a9bc8a39123d
Author: Bernhard Reutner-Fischer <rep.dot.nop@gmail.com>
Date:   2010-12-17 12:29:49 +0100

    utils: don't overwrite builtin dir() function
    
    Signed-off-by: Bernhard Reutner-Fischer <rep.dot.nop@gmail.com>

2	2	lib/bb/utils.py

commit 0ef8a9b3780525a28567ebe42956e5cae79ada8c
Author: Bernhard Reutner-Fischer <rep.dot.nop@gmail.com>
Date:   2010-12-17 12:26:35 +0100

    bzr: use utils.remove instead of os.system
    
    Signed-off-by: Bernhard Reutner-Fischer <rep.dot.nop@gmail.com>

1	1	lib/bb/fetch/bzr.py

commit c84a22b7a399cb10ead393d40e89080d63bf0b11
Author: Bernhard Reutner-Fischer <rep.dot.nop@gmail.com>
Date:   2010-12-17 12:25:53 +0100

    build: use utils.remove instead of os.system
    
    Signed-off-by: Bernhard Reutner-Fischer <rep.dot.nop@gmail.com>

1	1	lib/bb/build.py

commit 4b36be445a05a544cd3a456acd1dcc8f962359e2
Author: Chris Larson <chris_larson@mentor.com>
Date:   2010-12-16 12:18:31 -0700

    utils: drop unnecessary debug msgs from mkdirhier
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

0	2	lib/bb/utils.py

commit 3f851320391f2b14206c8f5112f270176c51a089
Author: Chris Larson <chris_larson@mentor.com>
Date:   2010-12-16 08:38:57 -0700

    Forcibly shut down the server if the UI is terminated
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

16	10	bin/bitbake
1	1	lib/bb/server/process.py

commit 20eb69cfc69a9af00cc65e7e90c295e46f74a0d4
Author: Chris Larson <chris_larson@mentor.com>
Date:   2010-12-16 08:50:31 -0700

    server: ensure the cooker is stopped when shutting down
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

2	0	lib/bb/server/process.py

commit 416dfe211ff0c37d746efe113bb6064b7e57d43a
Author: Chris Larson <chris_larson@mentor.com>
Date:   2010-12-10 10:37:11 -0700

    server: kill stdin/stdout/stderr
    
    This ensures that nothing run from the server can touch the console, in
    particular event handlers and python tasks, both of which can use bb.msg or
    the bitbake loggers to send output to the UI in a correct fashion instead.
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

9	1	lib/bb/server/process.py
15	0	lib/bb/utils.py

commit 588d339f2bde8ab6547bc0c1c4e7b83310b1318f
Author: Bob Foerster <robert@erafx.com>
Date:   2010-11-26 16:15:36 -0500

    server: fix interrupt handling for process
    
    SIGINT is now blocked within the server context, thus allowing the UI to fully
    handle all user interaction.  There is no longer a need to check for
    KeyboardInterrupt Exceptions anywhere within the server context.
    
    Signed-off-by: Bob Foerster <robert@erafx.com>
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

12	11	bin/bitbake
8	7	lib/bb/cooker.py
2	1	lib/bb/event.py
34	30	lib/bb/server/process.py

commit bdd7813d8eecf7b6b636322e748ca6bf69118513
Author: Bob Foerster <rfoerster@layerzero.com>
Date:   2010-11-22 10:13:56 -0500

    Show the user progress when loading the cache
    
    Signed-off-by: Bob Foerster <robert@erafx.com>
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

18	0	lib/bb/cache.py
1	0	lib/bb/cooker.py
19	0	lib/bb/event.py
24	8	lib/bb/ui/knotty.py

commit 65b615c6df4c3891e3c600947c3f96f802407fa4
Author: Bob Foerster <rfoerster@layerzero.com>
Date:   2010-11-24 12:53:12 -0500

    Run the server and UI in separate processes
    
    This uses the python multiprocessing module, both to spawn the server process
    and for communication between the processes.
    
    Signed-off-by: Bob Foerster <robert@erafx.com>
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

26	22	bin/bitbake
1	1	lib/bb/command.py
6	40	lib/bb/cooker.py
1	1	lib/bb/event.py
135	0	lib/bb/server/process.py
2	5	lib/bb/ui/knotty.py

commit 144887553097a288a76b8de78f71548d5ef9a350
Author: Chris Larson <chris_larson@mentor.com>
Date:   2010-12-16 10:39:21 -0700

    cooker: fix remnant rq/rqdata issue from poky sync
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

1	1	lib/bb/cooker.py

commit 0ea334430d492f82896c8b114dd3da214a37ae99
Author: Chris Larson <chris_larson@mentor.com>
Date:   2010-12-16 07:51:53 -0700

    Revert "build: kill stdout in python functions"
    
    We have a better solution for this on the separate-ui-and-server branch, so
    this version is no longer necessary.
    
    This reverts commit 20929afdd87e5124891f121c3640aa9efa368c2c.
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

0	4	lib/bb/build.py

commit ef97bd82a3e18efde30c6a4973c957924ef353cb
Author: Chris Larson <chris_larson@mentor.com>
Date:   2010-12-16 07:51:05 -0700

    runqueue: fix remnant rq/rqdata reference from poky sync
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

1	1	lib/bb/runqueue.py

commit d527ca441539618c990291fb8340f552ac760bce
Author: Chris Larson <chris_larson@mentor.com>
Date:   2010-12-15 13:50:28 -0700

    knotty: exit with 1 if we see a critical log message
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

2	0	lib/bb/ui/knotty.py

commit 1f5d49ce64e5e1c7705edbfa3c8e19649c21edd2
Author: Chris Larson <chris_larson@mentor.com>
Date:   2010-12-15 22:07:38 -0700

    cooker: don't swallow recipe parse errors
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

6	2	lib/bb/cooker.py

commit 4e25db1f8266279ad4a2967676dbd33068932fb7
Author: Chris Larson <chris_larson@mentor.com>
Date:   2010-12-15 18:30:07 -0700

    runqueue: resurrect the fix in 90c2b6c
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

1	1	lib/bb/runqueue.py

commit ed8d503e67045b87414d88ef40763a02ddd41da2
Author: Chris Larson <chris_larson@mentor.com>
Date:   2010-12-15 18:28:52 -0700

    build: fix log file display
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

14	13	lib/bb/build.py

commit f42e6d33b986183eee2c74aa7b1bbc9b339276a9
Author: Andreas Oberritter <obi@opendreambox.org>
Date:   2010-12-09 21:22:11 +0000

    manual: document scmdata=keep for CVS, SVN and Git
    
    Signed-off-by: Andreas Oberritter <obi@opendreambox.org>
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

3	3	doc/manual/usermanual.xml

commit 05cbc1d1a01c667c77688f36fbc5b61c5f452a3a
Author: Andreas Oberritter <obi@opendreambox.org>
Date:   2010-12-08 13:38:23 +0000

    fetchers: Add parameter scmdata=keep to include .git/ and others in generated tarballs.
    
    * Allows generating version information from SCMs during build.
    * Note that tar doesn't need to use --exclude '.git', because
      git checkout-index doesn't clone the repository.
    
    Signed-off-by: Andreas Oberritter <obi@opendreambox.org>
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

8	1	lib/bb/fetch/bzr.py
8	2	lib/bb/fetch/cvs.py
11	5	lib/bb/fetch/git.py
7	1	lib/bb/fetch/hg.py
7	1	lib/bb/fetch/repo.py
7	1	lib/bb/fetch/svn.py

commit 3a4b5eb20e41bd3cecd9d7e8dff7d076d8a7bb9a
Author: Chris Larson <chris_larson@mentor.com>
Date:   2010-12-15 15:35:13 -0700

    build: fix FuncFailed for the no logfile case
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

4	8	lib/bb/build.py

commit 7d80a5355cb540aae8d3082c1efebb72da4f93c6
Author: Chris Larson <chris_larson@mentor.com>
Date:   2010-12-15 15:13:07 -0700

    process: handle OSErrors other than file not found
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

7	3	lib/bb/process.py

commit beadff2eca1eb95f0411115dd72ddb4c3c44c604
Author: Chris Larson <chris_larson@mentor.com>
Date:   2010-12-15 14:55:04 -0700

    build: write logfiles per task, not per function
    
    Based on d14f9bf6 from poky, reworked for master and other cleanup.
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

49	49	lib/bb/build.py

commit f2c64c91aed62a38d5c5a58abd3f80d3f79d05d7
Author: Paul Eggleton <paul.eggleton@linux.intel.com>
Date:   2010-12-10 15:30:30 +0000

    data_smart: add optional expansion to getVarFlag()
    
    Add a parameter to getVarFlag() to auto-expand the value of the flag. This
    makes getVarFlag() more consistent with getVar(), and allows expansion of
    vardeps and vardepsexclude (which has been done in this commit).
    
    Signed-off-by: Paul Eggleton <paul.eggleton@linux.intel.com>

6	3	lib/bb/data_smart.py

commit bebdb554b5affc960b462bf2c59657fb78357f50
Author: Chris Larson <chris_larson@mentor.com>
Date:   2010-12-15 08:41:52 -0700

    build: fix copy/paste thinko regarding LC_ALL
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

1	1	lib/bb/build.py

commit 49e06bba60169f7511f385f438859d982ee1c99e
Author: Chris Larson <chris_larson@mentor.com>
Date:   2010-12-14 21:08:06 -0500

    runqueue: fix check_stamp_task call in chck_stamp_fn
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

4	4	lib/bb/runqueue.py

commit 82f0e471f0fee66a07e8fa48c601b54b84b98a03
Author: Chris Larson <chris_larson@mentor.com>
Date:   2010-12-14 20:42:23 -0500

    runqueue: fix a get_task_id call
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

1	1	lib/bb/runqueue.py

commit 0ebb46e25261cfc85aaef2790cba7c1ec057c306
Author: Chris Larson <chris_larson@mentor.com>
Date:   2010-12-14 09:25:58 -0700

    build: ensure LogTee has a valid name property
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

7	9	lib/bb/build.py

commit 1c8be64732fdf4f3a608c090b3dc92065d6058d6
Author: Chris Larson <chris_larson@mentor.com>
Date:   2010-12-14 09:20:33 -0700

    build: fix -D with shell functions
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

22	9	lib/bb/build.py

commit 2c8683234acf514706b2b69f5b29405485e664dd
Author: Chris Larson <chris_larson@mentor.com>
Date:   2010-12-14 08:10:36 -0700

    Fix PWD issue with new exec_func_shell
    
    The previous attempt was incorrect.  The issue isn't that subprocess fails to
    set PWD, it's that PWD is in the metadata, inherited from the environment, and
    is re-exported, overwriting the actual accurate one in the shell environment
    with the old one from the metadata.  So, ensure that PWD in the metadata is
    not exported.
    
    We can ditch this when the environment handling is reworked (e.g. poky's
    commit to do so).
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

3	0	lib/bb/build.py
0	2	lib/bb/process.py

commit 76aeea2c23a518046d0b26f1a6fc43287a180a9d
Author: Chris Larson <chris_larson@mentor.com>
Date:   2010-12-13 16:24:14 -0700

    Ensure that the invalid UI error goes to stderr
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

20	17	bin/bitbake

commit efa5485c8f9d488ba058c40734cc55296d3de6eb
Author: Chris Larson <chris_larson@mentor.com>
Date:   2010-12-13 15:58:15 -0700

    build: set PWD in the subprocess preexec hook
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

4	3	lib/bb/process.py

commit ab831e867f09b47001cb8da2f8f060e04febf237
Author: Chris Larson <chris_larson@mentor.com>
Date:   2010-12-06 14:58:55 -0700

    Move the runq task start/failed messages to the UI
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

3	9	lib/bb/runqueue.py
11	0	lib/bb/ui/knotty.py

commit 9e7d7f7e5381c45fe54680e9e4000de54b3cb9ed
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2010-08-18 17:21:40 +0100

    bitbake/runqueue.py: Factor task skipping code into a function
    
    Signed-off-by: Richard Purdie <rpurdie@linux.intel.com>

8	5	lib/bb/runqueue.py

commit e7c7e1f2e58dc985a9041f4eb426947e33d00910
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2010-08-18 17:13:06 +0100

    bitbake/runqueue.py: Create RunQueueExecute and RunQueueExecuteTasks classes, further splitting up runqueue
    
    Signed-off-by: Richard Purdie <rpurdie@linux.intel.com>

164	149	lib/bb/runqueue.py

commit bf978ca01720505a922001d14a708d2eedb0386a
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2010-08-18 11:30:53 +0100

    bitbake: Split Runqueue into two classes, a data processor and the execution part
    
    Signed-off-by: Richard Purdie <rpurdie@linux.intel.com>

7	7	lib/bb/cooker.py
134	119	lib/bb/runqueue.py

commit 1c38f19fb8da2e6c55394162d0142e7146387e54
Author: Chris Larson <chris_larson@mentor.com>
Date:   2010-12-13 10:03:55 -0700

    Silence python 2.7 nested context manager warning
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

1	0	bin/bitbake

commit c51ed5d7a9971fad6019dac6c35a71b8a54ab16a
Author: Chris Larson <chris_larson@mentor.com>
Date:   2010-12-10 16:53:19 -0700

    Rename command events, adjust compareRevisions
    
    - Moved the logic for comparing revisions from cooker into command
    - Removed 'Cooker' from the event names
    - Renamed the 'ExitCode' event into CommandExit, and changed CommandFailed to
      be a subclass of CommandExit
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

24	34	lib/bb/command.py
0	4	lib/bb/cooker.py
1	1	lib/bb/fetch/__init__.py
7	3	lib/bb/ui/depexp.py
5	5	lib/bb/ui/knotty.py
4	2	lib/bb/ui/ncurses.py

commit d9e8b8af308ae871efdc8ef0782be30af8c1f894
Author: Chris Larson <chris_larson@mentor.com>
Date:   2010-09-21 18:11:54 -0700

    Rework the persist_data API
    
    Rather than having to run .addDomain() and then .getValue(domain, key),
    .setValue(domain, key), etc, now it just works as mappings.
    
    As an example:
    
        setValue(domain, key) -> persist[domain][key] = value
    
    It also arranges things so we can construct objects of this type using any
    arbitrary filename/path for the sqlite3 database, rather than being so
    tightly bound to the metadata.
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

134	63	lib/bb/persist_data.py

commit 8b0753c090b0065a982198708c840f7c78dc0d23
Author: Chris Larson <chris_larson@mentor.com>
Date:   2010-12-10 18:10:33 -0500

    build: don't create ${B} when the 'dirs' flag is unset
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

2	1	lib/bb/build.py

commit b16c0c1dc3b7e03b02555e9803767a0d695e67f1
Author: Chris Larson <chris_larson@mentor.com>
Date:   2010-12-10 14:38:48 -0700

    event: use cPickle for events
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

4	1	lib/bb/event.py

commit f57f8f3cc980e3ae1693c2e065227e951ed0b1c0
Author: Chris Larson <chris_larson@mentor.com>
Date:   2010-12-10 14:27:28 -0700

    utils: fix 'lock' variable reference
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

1	1	lib/bb/utils.py

commit db7f960e5f103a424a4319f1867fb540e643c1ec
Author: Chris Larson <chris_larson@mentor.com>
Date:   2010-12-10 11:04:08 -0500

    bb.event: fix MsgBase ref in fire_class_handlers
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

1	2	lib/bb/event.py

commit 240d4a7ae80a6636c302ae84266ddfed7a7fcedd
Author: Chris Larson <chris_larson@mentor.com>
Date:   2010-12-10 10:51:47 -0500

    Kill the uncaught exception handler
    
    We now wrap the main() in a try/except, ensuring that both the main portion of
    bin/bitbake and the UI raising an exception will be shown to the user.  For
    the server and workers, we can ensure in the server itself that exceptions are
    handled correctly.
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

6	12	bin/bitbake

commit 20929afdd87e5124891f121c3640aa9efa368c2c
Author: Chris Larson <chris_larson@mentor.com>
Date:   2010-12-09 22:47:00 -0500

    build: kill stdout in python functions
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

5	1	lib/bb/build.py

commit ee1cce6ab21ddda60a7a070d03e98ff8485a5e71
Author: Chris Larson <chris_larson@mentor.com>
Date:   2010-12-09 23:38:35 -0500

    build: send logging messages to the log file for python functions
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

11	3	lib/bb/build.py
9	0	lib/bb/msg.py
2	10	lib/bb/ui/knotty.py

commit 411b808b81216473c3dbeca783ec5bc99152da26
Author: Chris Larson <chris_larson@mentor.com>
Date:   2010-12-10 09:54:53 -0500

    Revert "bitbake/git.py: Make sure different branches can have different revisions without triggering build count increases"
    
    Per Martin Jansa, this breaks compatibility.  We can revisit in the future,
    likely during the fetcher rewrite.
    
    This reverts commit f3292fa11723c748ef1b4270384abf6d586a822e.

1	1	lib/bb/fetch/git.py

commit 51076c3737bf8b51d12cfaf2c7c5f82fa64a662d
Author: Chris Larson <chris_larson@mentor.com>
Date:   2010-12-09 22:34:47 -0500

    build: fix remnant access of logfile in exec_func_python
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

1	1	lib/bb/build.py

commit 4262c26d36d1c1b6801ac422716a227c1f6b9589
Author: Chris Larson <chris_larson@mentor.com>
Date:   2010-12-09 21:50:23 -0500

    utils: fix calls to close() in the lock/unlock functions
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

9	8	lib/bb/utils.py

commit f99ee4680c9f67b7ed13fc06044ba2382f9a782c
Author: Chris Larson <chris_larson@mentor.com>
Date:   2010-12-09 20:29:31 -0500

    build: use a contextmanager for locks
    
    Also don't bother passing logfile to exec_func_python, at least until we start
    adding the logfile as a file handler to the bitbake logger.
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

22	26	lib/bb/build.py
13	0	lib/bb/utils.py

commit 53740977521bc81ffa37adfa7bbeb8f2a80ea165
Author: Chris Larson <chris_larson@mentor.com>
Date:   2010-12-09 20:14:48 -0500

    build: use bb.process instead of os.system
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

88	134	lib/bb/build.py
11	0	lib/bb/utils.py

commit c63e55564a8840083dbd8634b10fe6f76d1f1354
Author: Chris Larson <chris_larson@mentor.com>
Date:   2010-12-09 20:14:40 -0500

    process: add subprocess-based bits
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

107	0	lib/bb/process.py

commit 4d081a0ed759bd526ab01849d650bd9e8d80ddd1
Author: Chris Larson <chris_larson@mentor.com>
Date:   2010-12-09 14:05:22 -0500

    Rename the ui 'init' method to 'main'
    
    As these may run the UI in a blocking fashion and then return the exit code,
    'init' was an inappropriate name, and 'main' is more appropriate.
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

5	18	bin/bitbake
1	1	lib/bb/ui/depexp.py
1	1	lib/bb/ui/goggle.py
1	1	lib/bb/ui/knotty.py
1	1	lib/bb/ui/ncurses.py
1	1	lib/bb/ui/puccho.py

commit 5670134ab2eb573d39df3c3231677cdb1a1dfc72
Author: Chris Larson <chris_larson@mentor.com>
Date:   2010-11-23 15:30:45 -0700

    cooker: use re match, not search in re_match_strings
    
    We want to match the requested pattern at the beginning of the string,
    otherwise things behave in an unintuitive manner wrt ASSUME_PROVIDED (e.g.
    ASSUME_PROVIDED += "gtk+" will also assume foo-gtk+ is provided), and the user
    can always use '.*gtk+' to get the old behavior.
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

1	1	lib/bb/taskdata.py

commit e48e9a2150ee76aaf151f6d5bc9e86e6ae4de514
Author: Chris Larson <chris_larson@mentor.com>
Date:   2010-11-23 15:30:23 -0700

    taskdata: use 'any' in re_match_strings
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

3	7	lib/bb/taskdata.py

commit 6b6ae76ba57ec5151529c647da3f9c66c382de82
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2010-12-07 12:25:24 +0000

    bitbake/data_smart: Refactor _append/_prepend code to remove duplication
    
    Signed-off-by: Richard Purdie <rpurdie@linux.intel.com>

23	36	lib/bb/data_smart.py

commit ba95240541cefa0984dc506719a15929bf1157da
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2010-12-06 00:39:20 +0000

    bitbake/data_smart: Fix append/prepend/override ordering issue
    
    Where a variable name consisted of an append/prepend combined with an override
    and there was also an append/prepend to the variable, the override could be lost
    if the override was not in OVERRIDES.
    
    For example:
    
    FOO = "A"
    FOO_append = "B"
    FOO_append_virtclass-native = "C"
    
    could result in "AB" even though virtclass-native was in OVERRIDES.
    
    With this patch applied, the result is "ABC" as would be expected.
    
    The problem was the deletion of the _append/_prepend flag was happening
    if *any* append/prepend was procesed, the result should really be that
    it should contain any unprocessed append/prepend.
    
    Kevin Tian deserves credit for looking into this and working out the
    problem here.
    
    Signed-off-by: Richard Purdie <rpurdie@linux.intel.com>

16	8	lib/bb/data_smart.py

commit 61c804d59738929b36051acd84287581611441b0
Author: Joshua Lock <josh@linux.intel.com>
Date:   2010-11-11 10:26:48 +0000

    bitbake/goggle: interaction tweaks
    
    Set the goggle window to a more sane default size (640x480) and hook up the
    close button.
    
    Signed-off-by: Joshua Lock <josh@linux.intel.com>

2	0	lib/bb/ui/goggle.py

commit c606c9d17417dde81142688f5646e02313670d01
Author: Joshua Lock <josh@linux.intel.com>
Date:   2010-11-25 15:15:10 +0000

    bitbake/depexp: Factor ProgressBar into a separate class in crumbs/
    
    ProgressBar will be useful in other UI elements so make it it's own class.
    Make ProgressBar a subclass of gtk.Dialog, rather than gtk.Window, so that we
    can suggest the window manager parent the ProgressBar to the widget passed at
    as parent.
    
    Signed-off-by: Joshua Lock <josh@linux.intel.com>

17	0	lib/bb/ui/crumbs/progress.py
4	15	lib/bb/ui/depexp.py

commit d2c4d0b2af43eb6b09086db1f8fe9e87e0bc6d23
Author: Joshua Lock <josh@linux.intel.com>
Date:   2010-11-25 15:54:19 +0000

    bitbake/crumbs: add optional pbar parameter to RunningBuild.handle_event()
    
    Defaults to None, but if set will pass the ParseProgress sofar and total to
    pbar's update() method.
    
    Signed-off-by: Joshua Lock <josh@linux.intel.com>

9	1	lib/bb/ui/crumbs/runningbuild.py

commit 4113f293427a6c64f0bbf948ada241b3ea32592b
Author: Joshua Lock <josh@linux.intel.com>
Date:   2010-11-25 15:56:07 +0000

    bitbake/goggle: add a ProgressBar for parse progress
    
    Construct a ProgressBar and pass it to the RunningBuild.handle_event() so
    that goggle users are notified of metadata parsing progress.
    
    UI's with status make users less nervous
    
    Signed-off-by: Joshua Lock <josh@linux.intel.com>

6	3	lib/bb/ui/goggle.py

commit 0debaba64490b609c0b503c00ee5709d89a445b6
Author: Joshua Lock <josh@linux.intel.com>
Date:   2010-12-01 14:40:21 +0000

    bitbake/xmlrpc: Modify xmlrpc server to work with Python 2.7
    
    Python 2.7's library changes some of xmlrpclib's internal implementation such
    that interacting with a proxy to BitBakes SimpleXMLRPCServer would cause
    BitBake to crash.
    
    The issue was traced to changes in the xmlrpclib.Transport implementation and
    Python bug #8194 (http://bugs.python.org/issue8194).
    
    This patch introduces a workaround by create a subclass of
    xmlrpclib.Transport, which overrides the offending methods with the Python
    2.6.6 implementation copy and pasted from the Python 2.6.6 xmlrpclib, and
    using this BBTransport implementation for both xmlrpclib.Server objects we
    create.
    
    Signed-off-by: Joshua Lock <josh@linux.intel.com>

66	2	lib/bb/server/xmlrpc.py

commit 860102f6a7f31da3fd3b56cd56e2074b2f29ad11
Author: Joshua Lock <josh@linux.intel.com>
Date:   2010-12-06 15:34:50 +0000

    bitbake/goggle: automatically show most recently added message
    
    It seems likely that the user would want to view the most recently emitted
    messages so this patch sets the message dislay treeview to scroll to any
    newly added rows.
    
    Signed-off-by: Joshua Lock <josh@linux.intel.com>

4	0	lib/bb/ui/goggle.py

commit 380025786b7b384696d12fb71cc504bd418d801c
Author: Joshua Lock <josh@linux.intel.com>
Date:   2010-11-11 10:18:11 +0000

    bitbake/crumbs: fix the event name determination
    
    Due to some recent change *somewhere* we need to explicitly look at the
    name attribute on the instances class, rather than the name attribute of
    the instance.
    
    Signed-off-by: Joshua Lock <josh@linux.intel.com>

1	1	lib/bb/ui/crumbs/runningbuild.py

commit 38f59ad6dbfdc51577927ccc133903fa965c51a3
Author: Joshua Lock <josh@linux.intel.com>
Date:   2010-11-11 10:14:11 +0000

    bitbake/crumbs: do the test for ignored messages sooner
    
    Move the test for ignored messages to the start of the message handling loop to
    avoid doing work for messages which are only going to be ignored.
    
    Signed-off-by: Joshua Lock <josh@linux.intel.com>

3	4	lib/bb/ui/crumbs/runningbuild.py

commit 9d7dac26f24327022b410f178feaca8ac1f0eaf5
Author: Joshua Lock <josh@linux.intel.com>
Date:   2010-11-11 10:13:08 +0000

    bitbake/crumbs: Fix crumbs UI for bitbake event class name changes
    
    Some of the events we where trying to look for have had their class names
    changed, fix these references.
    
    Signed-off-by: Joshua Lock <josh@linux.intel.com>

4	3	lib/bb/ui/crumbs/runningbuild.py

commit 6c086dab25e690fcae0bf7d42ea4e440ce3b9722
Author: Joshua Lock <josh@linux.intel.com>
Date:   2010-12-01 16:59:04 +0000

    bitbake/cooker: fix idle command processing in servers
    
    idle command processing in each of the servers does not handle an explicit
    None return value, which means the goggle UI ends up repeatedly adding
    "Tasks Summary:" rows to the list.
    
    This patch modifies BBCooker.buildTargets.buildTargetsIdle to return False
    when BuildCompleted is fired, as is done in BBCooker.buildFile.buildFileIdle.
    It may be that the correct way to fix this is to change the idle command
    processing in the servers.
    
    Signed-off-by: Joshua Lock <josh@linux.intel.com>
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

1	1	lib/bb/cooker.py

commit fc64eff03fe1f41e59128cb3df0ef2161e24a8cb
Author: Chris Larson <chris_larson@mentor.com>
Date:   2010-12-08 15:08:18 -0500

    cooker: add shutdown/stop methods
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

2	2	lib/bb/command.py
6	0	lib/bb/cooker.py

commit c7c8945ef7ca9465312e630b7fa5f0a87ac8b6c7
Author: Chris Larson <chris_larson@mentor.com>
Date:   2010-12-08 14:30:33 -0500

    cooker: merge cookerState and cookerAction
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

4	3	lib/bb/command.py
11	22	lib/bb/cooker.py

commit 9caf65e79f95fe0045e727391e974c4c1e7411ff
Author: Chris Larson <chris_larson@mentor.com>
Date:   2010-12-07 13:00:22 -0500

    cooker: use a pool, abort on first parse error
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

59	84	lib/bb/cooker.py

commit 89ce8df075ac8c9a5478c86405e6e6b60346a51c
Author: Chris Larson <chris_larson@mentor.com>
Date:   2010-12-06 21:58:07 -0700

    knotty: use enumerate for task waiting
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

1	3	lib/bb/ui/knotty.py

commit c3d005cbbae3d56da9926666cfb1501c2bf96ea7
Author: Chris Larson <chris_larson@mentor.com>
Date:   2010-12-06 21:06:13 -0700

    knotty: shift non-interactive progress into a class
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

33	15	lib/bb/ui/knotty.py

commit 3aaddb8c434d0ea839c0b52de5a56be1be4641dd
Author: Chris Larson <chris_larson@mentor.com>
Date:   2010-12-06 08:19:37 -0700

    Merged the following poky fetcher fixes:
    
    - bitbake/fetch: Allow checking of a single url at a time (massive sstate
      speed improvement)
    - bitbake/fetch: Fix handling of mirrors when checking for url validity
    - bitbake/fetch: When fetchers return errors, ensure any partial download is
      cleared
    - bitbake/fetch: Make URL checking slightly less verbose (distracting with the
      sstate code)
    - bitbake/fetch/git: Ensure fullclone repositories are fully fetched
    - bitbake/fetcher: Deal with a ton of different bugs
    - bitbake/fetch/git.py: Fix git fetcher to correctly use mirror tarballs
    - bitbake/fetch/__init__.py: Abstract mirror variable handling and enhance to
      accept \n delimitation in variables
    - bitbake/fetch: fix logic to prevent fetches when the file already exists
    - bitbake/fetch: ensure the go() method completes when not using premirrors
    - Export ALL_PROXY for bitbake commands
    - bitbake: Add proxy variables to standard export list
    - bitbake/fetch/git: fix try_premirror() definition .Method takes 4
      parameters.
    - bitbake/fetch: fix by moving try_premirror() to the right place
    - bitbake/fetch: add try_premirror method and special case git fetcher
    - fetch: fix setting of localpath in SRC_URI parameters
    - bitbake/fetch: ensure the mirrored repository is updated as required
    - bitbake/git: define a forcefetch method
    - bitbake/fetch: Respect forcefetch even when pulling from a mirror
    - bitbake/git.py: Make sure different branches can have different revisions
      without triggering build count increases
    - bitbake/git.py: Allow tracking of branches in SRC_URI without cloning for
      use with fullclone
    - bitbake/git.py: Make sure a full clone checkout always updates
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

75	48	lib/bb/fetch/__init__.py
47	9	lib/bb/fetch/git.py

commit d00b03bd2ec378cd09146a70e3d940f351d92f01
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2010-08-23 13:01:05 +0100

    utils.py: Fix bb.copyfile to change the permissions of the file back correctly
    
    Signed-off-by: Richard Purdie <rpurdie@linux.intel.com>

4	0	lib/bb/utils.py

commit 3b66db2b56616fee15428b5ebdc97388f3b6126b
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2010-08-20 12:52:33 +0100

    bitbake/utils.py: Improve better_exec debug output
    
    Signed-off-by: Richard Purdie <rpurdie@linux.intel.com>

9	5	lib/bb/utils.py

commit 873633d8bc15fa50bf642e864b2953f66a4d74b2
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2010-08-19 23:26:46 +0100

    bitbake/utils.py: Give useful debug information when no lineno information is available
    
    Signed-off-by: Richard Purdie <rpurdie@linux.intel.com>
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

10	6	lib/bb/utils.py

commit fb5ae7ac1140b163ee843053bd02e5144969f65c
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2010-08-17 09:28:33 +0100

    bitbake/utils.py: Allow explode_dep_versions to handle the commas join_deps can introduce into strings
    
    Signed-off-by: Richard Purdie <rpurdie@linux.intel.com>

1	1	lib/bb/utils.py

commit b4b78785526e4a6c6b67ff59ede65ef204cef339
Author: Mark Hatle <mark.hatle@windriver.com>
Date:   2010-09-30 15:04:18 -0500

    build.py: Add a symlink for the logging
    
    [BUGID #375]
    
    When configuring for the log file output, we generate a symlink to the
    target filename.  This link uses the same file naming, but without the
    active pid, making it easier to see which log file is the last one
    generated.
    
    Signed-off-by: Mark Hatle <mark.hatle@windriver.com>

17	0	lib/bb/build.py

commit 61c78368b732739be5ece4777fa570adf5a6c83b
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2010-09-13 15:39:07 +0100

    bitbake/build.py: Set BB_FILENAME to represent the .bb file being built (including any virtual prefix)
    
    Signed-off-by: Richard Purdie <rpurdie@linux.intel.com>

2	1	lib/bb/build.py
1	1	lib/bb/runqueue.py

commit 6386e99b770be17af53495ec3a7d6c830272b743
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2010-08-05 12:40:00 +0100

    bitbake/build.py: Note when calling functions that don't exist. Should probably error
    
    Signed-off-by: Richard Purdie <rpurdie@linux.intel.com>
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

1	0	lib/bb/build.py

commit c9bf739c8a3b41b5802aa57de476be3ff7e3c538
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2010-08-05 10:09:13 +0100

    bitbake/build.py: Set the current taskname in the BB_CURRENTTASK variable
    
    Signed-off-by: Richard Purdie <rpurdie@linux.intel.com>

1	0	lib/bb/build.py

commit f1a184fe8759f1e047ceb1afb0cfac4be6e4a876
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2010-08-20 09:38:24 +0100

    bitbake/server: Raise a shutdown event if we're seeing exceptions
    
    Signed-off-by: Richard Purdie <rpurdie@linux.intel.com>

1	0	lib/bb/server/none.py

commit 62604b9e05981487c054c0bab5599bd7c59f99a0
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2010-08-18 17:37:15 +0100

    bitbake/cooker.py: Allow idle handlers to pass through a true value
    
    Signed-off-by: Richard Purdie <rpurdie@linux.intel.com>

4	1	lib/bb/cooker.py
3	1	lib/bb/runqueue.py

commit f2681f1362fdb5af6f35bde39307487c41172264
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2010-08-18 17:17:50 +0100

    bitbake/runqueue.py: Drop duplicated class
    
    Signed-off-by: Richard Purdie <rpurdie@linux.intel.com>

0	6	lib/bb/runqueue.py

commit 424428a764651183218f9cc93bc05496867aa5de
Author: Chris Larson <chris_larson@mentor.com>
Date:   2010-12-03 12:39:11 -0500

    Fix the <100 recipe progress fix
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

1	1	lib/bb/cooker.py

commit 57402ee727c8c1d8f5017534fb0f5e0b20aaaa5b
Author: Chris Larson <chris_larson@mentor.com>
Date:   2010-12-03 12:15:04 -0500

    Error more pleasantly when trying to use python2.4
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

11	10	bin/bitbake

commit 44c325306e55336b7b416fd88b39874012a3f603
Author: Chris Larson <chris_larson@mentor.com>
Date:   2010-12-02 12:05:51 -0700

    Don't show a traceback for a python version error
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

4	1	bin/bitbake

commit 2be5169a01e57bcfcb1f75cbd6bac3bf0f230edd
Author: Chris Larson <chris_larson@mentor.com>
Date:   2010-11-30 13:57:36 -0700

    cooker: don't choke on <100 recipes to parse
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

1	1	lib/bb/cooker.py

commit 618480f7739f6ae846f67a57bee5a78efb37839d
Author: Chris Larson <chris_larson@mentor.com>
Date:   2010-11-30 08:25:13 -0700

    cooker: no cached in progressbar and add ETA
    
    Rather than updating the progress bar based on the recipe being processed
    (whether cached or parsed), consider only parsed recipes.  This reduces the
    instability in progress rate introduced by the cached entries, and allows the
    ETA to be resurrected and be a bit more useful.
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

9	15	lib/bb/cooker.py
1	3	lib/bb/event.py
2	2	lib/bb/ui/knotty.py

commit d5a3c78bd0dace12e8038fd19dfd8938b29fc72d
Merge: e75aa94e 4fe4ffbe
Author: Chris Larson <chris_larson@mentor.com>
Date:   2010-11-29 12:36:22 -0700

    Merge branch 'feature/parallel-parsing'
    
    * feature/parallel-parsing:
      cache: change to more incremental format
      cooker: pass back child exceptions to the server
      cache: bump cachever per master
      cache: ensure 'pn' is included in the pkgvars
      knotty: drop the ETA from the progressbar for now
      cooker: ensure that the cache sync completes
      cooker: get number of threads in constructor
      cooker: don't add info for skipped recipes
      cooker: show progress bar before initializing the cache
      cooker: save progress chunk value (total/100)
      cooker: stop loading the cache for -b
      cooker: don't fire unnecessary parse progress events
      cache: don't add info to cache if cache is disabled
      cache: sync the cache file to disk in the background
      Simplify cache syncing
      Split up the ParseProgress event
      Experimental usage of the 'progressbar' module
      Implement parallel parsing support
      cache: don't write out the cache unnecessarily
      cache: create and use a RecipeInfo class
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

commit 4fe4ffbef3885887c97eebe021edc3f23feab9ea
Author: Chris Larson <chris_larson@mentor.com>
Date:   2010-11-29 08:50:19 -0700

    cache: change to more incremental format
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

33	22	lib/bb/cache.py

commit 0f68f8bcd0e0aa944f76f88a4a85c9bcc1e42bee
Author: Chris Larson <chris_larson@mentor.com>
Date:   2010-11-29 08:06:30 -0700

    cooker: pass back child exceptions to the server
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

12	6	lib/bb/cooker.py

commit e75aa94e9477933c5a40021b2a8e844db54f29da
Author: Chris Larson <chris_larson@mentor.com>
Date:   2010-11-26 14:11:06 -0700

    vercmp: don't choke on empty first version components
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

1	1	lib/bb/utils.py

commit 97e92abe49663eee189c89c1dc91fe69891faf73
Author: Chris Larson <chris_larson@mentor.com>
Date:   2010-11-26 10:08:05 -0700

    Use __file__, not sys.argv[0]
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

1	1	bin/bitbake
1	1	bin/bitdoc

commit 24a44f661a78759ff764b207c94591daeb7e89fb
Author: Chris Larson <chris_larson@mentor.com>
Date:   2010-11-23 21:38:34 -0700

    cache: bump cachever per master
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

1	1	lib/bb/cache.py

commit cefc28a2aa1e5703119dacfd885c8c159a1e47a3
Author: Chris Larson <chris_larson@mentor.com>
Date:   2010-11-23 20:08:06 -0700

    cache: ensure 'pn' is included in the pkgvars
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

10	11	lib/bb/cache.py

commit 720484ada07153aa22fec050fc76f623675258d0
Author: Chris Larson <chris_larson@mentor.com>
Date:   2010-11-23 20:00:42 -0700

    cache: fix rrecs_pkg
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

2	2	lib/bb/cache.py

commit 80867372dcbef91ebaf7d77a77ca871741dd3f74
Author: Chris Larson <chris_larson@mentor.com>
Date:   2010-11-23 14:02:40 -0500

    knotty: drop the ETA from the progressbar for now
    
    Currently, the progress bar is an indication of the processing of our recipes,
    which includes loading the cache file, then for each recipe, either adding the
    existing cached information to the CacheData or parsing the recipe from disk.
    These tasks clearly take different amounts of time, so the ETA is unreliable
    today.  We'll resurrect this functionality after we revamp the progress
    handling, fully incorporating the load of the cache file.
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

1	1	lib/bb/ui/knotty.py

commit 97ce57e6f860d3e6f34cc7a603ed1eeac4f423d3
Author: Chris Larson <chris_larson@mentor.com>
Date:   2010-11-23 11:46:49 -0600

    cooker: ensure that the cache sync completes
    
    Without explicitly joining the thread, it's possible for the process to end
    (e.g. after a bitbake -p) and kill off the thread without waiting for it to
    exit cleanly.  So, register the thread join with atexit.
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

4	1	lib/bb/cooker.py

commit e7fd259d1528f48b0812fb7b0a54dd6d5d22f4a9
Author: Chris Larson <chris_larson@mentor.com>
Date:   2010-11-23 07:20:08 -0700

    cooker: get number of threads in constructor
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

3	3	lib/bb/cooker.py

commit ac596d55de4ad86e1cdc84dabfea1350dd54efd0
Author: Chris Larson <chris_larson@mentor.com>
Date:   2010-11-22 14:13:52 -0700

    cooker: don't add info for skipped recipes
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

3	2	lib/bb/cooker.py

commit f6d0a5c219f9deb84f702450d30d868ba6271f77
Author: Chris Larson <chris_larson@mentor.com>
Date:   2010-11-21 11:59:05 -0700

    cooker: show progress bar before initializing the cache
    
    This ensures that the time spent loading the cache from disk occurs with the
    progress bar up.  Though the progress bar stays at 0% during this period, I
    think this is an improvement over the multi-second stall which occurred
    previously before the progress bar came up.  Ideally, we'd integrate cache
    loading from disk into the progress display, but this is a first step.
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

17	13	lib/bb/cooker.py

commit 09333737cbeeb9875d938521ddcd519fc808bcc3
Author: Chris Larson <chris_larson@mentor.com>
Date:   2010-11-19 12:00:37 -0700

    cooker: save progress chunk value (total/100)
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

2	1	lib/bb/cooker.py

commit dd0ec2f7b18e2a9ab06c499b775670516bd06ac8
Author: Chris Larson <chris_larson@mentor.com>
Date:   2010-11-19 11:46:42 -0700

    cooker: stop loading the cache for -b
    
    Previously, the cache was actually being loaded from disk twice whenever using
    -b or -e -b.  This also moves the bb_cache instance into the CookerParser, as
    it's not needed by the cooker itself at all.
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

1	1	lib/bb/cache.py
28	25	lib/bb/cooker.py
1	1	lib/bb/runqueue.py
2	4	lib/bb/shell.py

commit 7cf7d5f14405681496fced3640a50a20ef1acac1
Author: Bob Foerster <robert@erafx.com>
Date:   2010-11-19 11:03:28 -0500

    cooker: don't fire unnecessary parse progress events
    
    Signed-off-by: Bob Foerster <robert@erafx.com>

3	1	lib/bb/cooker.py

commit f12bb303f3d86a68d0b3dda1112dd654b9251704
Author: Chris Larson <chris_larson@mentor.com>
Date:   2010-11-19 08:03:09 -0700

    cache: don't add info to cache if cache is disabled
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

3	0	lib/bb/cache.py

commit 5ab6c5c7b007b8c77c751582141afc07c183d672
Author: Chris Larson <chris_larson@mentor.com>
Date:   2010-11-18 22:47:36 -0700

    cache: sync the cache file to disk in the background
    
    This version uses a thread rather than a process, to avoid problems with
    waitpid handling.  This gives slightly less overall build time reduction than
    the separate process for it did (this reduces a -c compile coreutils-native by
    about 3 seconds, while the process reduced it by 7 seconds), however this time
    is quite insignificant relative to a typical build.
    
    The biggest issue with non-backgrounded syncing is the perceived delay before
    work begins, and this resolves that without breaking anything, or so it seems.
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

2	1	lib/bb/cooker.py

commit 343b6f6255ad020c39e30742175a241f0859a5a6
Author: Chris Larson <chris_larson@mentor.com>
Date:   2010-11-18 22:28:09 -0700

    Simplify cache syncing
    
    Rather than adding nocache items to the cache, then copying the cache and
    removing them to sync it, don't add them in the first place.  Also use 'with'
    for the cachefile.
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

13	22	lib/bb/cache.py

commit df7776f0bbbca99f09686b1d56c855cae16d2ec2
Author: Chris Larson <chris_larson@mentor.com>
Date:   2010-11-18 23:52:15 -0500

    Split up the ParseProgress event
    
    We now have ParseStarted, ParseProgress, and ParseCompleted.  I think this
    clarifies matters, and avoids sending all our statistics with every parse
    progress event.
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

13	13	lib/bb/cooker.py
16	4	lib/bb/event.py
19	15	lib/bb/ui/knotty.py
9	9	lib/bb/ui/uievent.py

commit 64feb03bc2accecb49033df65e0a939ef5ab5986
Author: Chris Larson <chris_larson@mentor.com>
Date:   2010-11-18 21:15:07 -0700

    Experimental usage of the 'progressbar' module
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

12	8	lib/bb/ui/knotty.py
384	0	lib/progressbar.py
1	1	setup.py

commit c7b3ec819549e51e438d293969e205883fee725f
Author: Chris Larson <chris_larson@mentor.com>
Date:   2010-11-18 20:21:54 -0700

    Implement parallel parsing support
    
    This utilizes python's multiprocessing module.  The default number of threads
    to be used is the same as the number of available processor cores, however,
    you can manually set this with the BB_NUMBER_PARSE_THREADS variable.
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

59	39	lib/bb/cache.py
94	36	lib/bb/cooker.py

commit 1e0c4dbcbec886a30b89f8b4bb365c3c927ef609
Author: Chris Larson <chris_larson@mentor.com>
Date:   2010-11-16 21:55:19 -0700

    cache: don't write out the cache unnecessarily
    
    If the only recipes's we reparsed this run were those flagged as not to be
    cached, there's no point in re-saving the cache, as those items won't be
    included anyway.
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

5	1	lib/bb/cache.py

commit 992cc252452221f5f23575e50eb67528b2838fdb
Author: Chris Larson <chris_larson@mentor.com>
Date:   2010-11-16 12:58:52 -0700

    cache: create and use a RecipeInfo class
    
    This class holds the particular pieces of information about a recipe which are
    needed for runqueue to do its job.
    
    By using it, I think we improve code clarity, reduce method sizes, reduce
    overuse of primitive types, and prepare for parallel parsing.  In addition,
    this ditches the leaky abstraction whereby bb.cache attempted to hide the
    difference between cached data and a full recipe parse.  This was a remnant
    from the way things used to be done, and the code using it had to know the
    difference anyway.  If we choose to reimplement caching of the full recipes,
    we can do it in bb.parse, in a completely transparent way.
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

176	166	lib/bb/cache.py
1	2	lib/bb/cooker.py

commit 73b40f06444cb877a5960b2aa66abf7dacbd88f0
Author: Bob Foerster <robert@erafx.com>
Date:   2010-11-20 04:39:22 +0800

    Prefer xrange over range for small performance gain.
    
    range() allocates an actual list when called.  xrange() is just an iterator
    and creates the next range item on demand.  This provides a slight
    performance increase.
    
    In python 3, range will do what xrange does currently, but the upgrade will
    be handled by the 2to3 tool.
    
    Signed-off-by: Bob Foerster <robert@erafx.com>

1	1	lib/bb/cooker.py
21	21	lib/bb/runqueue.py
4	4	lib/bb/taskdata.py
5	5	lib/bb/utils.py

commit bc0e147762769659b025b650b6b8da01ecf2248c
Author: Chris Larson <chris_larson@mentor.com>
Date:   2010-11-20 16:35:14 -0700

    Revert "svn fetcher: warn people to switch to SRCREV"
    
    1) too spammy
    2) can be implemented in the metadata instead
    
    This reverts commit 8da9744fcdf856abebcfbe9e3bc1b8cf07bc317b.

1	2	lib/bb/fetch/svn.py

commit 1074f9a5c529e364404daf545b8465415d63a556
Author: Chris Larson <chris_larson@mentor.com>
Date:   2010-11-19 15:51:45 -0700

    cooker: fix UnboundLocalError
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

1	1	lib/bb/cooker.py

commit 6dac30d2256acaa0bb340f2b1040afe21e0bc421
Author: Chris Larson <chris_larson@mentor.com>
Date:   2010-11-19 12:16:40 -0700

    runqueue: speed up bitbake -n
    
    From scratch, bitbake -n task-boot times:
    
        Before: 4:39.73
        After:  1:52.58
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

25	18	lib/bb/runqueue.py

commit 16a9d689e61c35cfca94bbecd9772eab3c5072ba
Author: Chris Larson <chris_larson@mentor.com>
Date:   2010-11-19 11:06:38 -0700

    cache: make loadDataFull a classmethod
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

5	4	lib/bb/cache.py

commit 60b9b18eafad5ac46c7cf1048d749d673c2ee0ad
Author: Chris Larson <chris_larson@mentor.com>
Date:   2010-11-18 19:51:51 -0700

    Revert "persist_data: cache connection and use cursor"
    
    Caching the database connection can cause serious issues if it results in
    multiple processes (e.g. multiple tasks) simultaneously using the same
    connection.
    
    This reverts commit 8a6876752b90efd81d92f0947bfc9527d8260969.
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

4	5	lib/bb/fetch/__init__.py
6	11	lib/bb/persist_data.py

commit 8da9744fcdf856abebcfbe9e3bc1b8cf07bc317b
Author: Bernhard Reutner-Fischer <rep.dot.nop@gmail.com>
Date:   2010-11-19 16:38:51 +0100

    svn fetcher: warn people to switch to SRCREV
    
    as noted by rp in ac00ca89a4e43cd4f38ba86455079d31be78e644
    
    Signed-off-by: Bernhard Reutner-Fischer <rep.dot.nop@gmail.com>

2	1	lib/bb/fetch/svn.py

commit e88834fb7c6821cc29c12d296f2edd51f6eb3746
Author: Bernhard Reutner-Fischer <rep.dot.nop@gmail.com>
Date:   2010-11-17 15:40:51 +0100

    fetch: be more pythonic
    
    no functional changes
    
    Signed-off-by: Bernhard Reutner-Fischer <rep.dot.nop@gmail.com>

1	3	lib/bb/fetch/__init__.py
1	3	lib/bb/fetch/bzr.py
4	14	lib/bb/fetch/cvs.py
2	7	lib/bb/fetch/hg.py
2	4	lib/bb/fetch/osc.py
2	5	lib/bb/fetch/perforce.py
5	18	lib/bb/fetch/repo.py
3	7	lib/bb/fetch/svk.py
1	3	lib/bb/fetch/svn.py

commit c360b01df18d90a513a3d61d395f905102e7568e
Author: Bernhard Reutner-Fischer <rep.dot.nop@gmail.com>
Date:   2010-11-17 15:04:42 +0100

    fetch: use os.path.join
    
    Signed-off-by: Bernhard Reutner-Fischer <rep.dot.nop@gmail.com>

1	1	lib/bb/fetch/__init__.py

commit 823a02185ed109054c6c1ae366221aaed0353f24
Author: Bernhard Reutner-Fischer <rep.dot.nop@gmail.com>
Date:   2010-11-17 14:44:40 +0100

    fetch: add common helper _strip_leading_slashes()
    
    Several fetcher need a way to strip leading slashes off a local path.
    This helper-function consolidates all such occurances.
    
    Signed-off-by: Bernhard Reutner-Fischer <rep.dot.nop@gmail.com>

7	0	lib/bb/fetch/__init__.py
1	4	lib/bb/fetch/bzr.py
1	4	lib/bb/fetch/hg.py
2	8	lib/bb/fetch/osc.py
1	2	lib/bb/fetch/perforce.py
1	4	lib/bb/fetch/svn.py

commit b8bb4433de7a981c6826173e926ca34705c4ac70
Author: Bernhard Reutner-Fischer <rep.dot.nop@gmail.com>
Date:   2010-11-17 11:55:21 +0100

    fetch: rename suppports_srcrev to supports_srcrev
    
    osc had it already spelled correctly?!
    
    Signed-off-by: Bernhard Reutner-Fischer <rep.dot.nop@gmail.com>

3	3	lib/bb/fetch/__init__.py
1	1	lib/bb/fetch/bzr.py
1	1	lib/bb/fetch/git.py
1	1	lib/bb/fetch/hg.py
1	1	lib/bb/fetch/repo.py
1	1	lib/bb/fetch/svn.py

commit 67984ba0ac2db79874541bc031f2e3e9ff7a6c32
Author: Chris Larson <chris_larson@mentor.com>
Date:   2010-11-18 11:14:38 -0700

    cache: Add debug msg for a nonexistant dep file
    
    If a recipe depends on a file, and that file is out of date, we show a
    message, but if that file was removed, we do not, until now.
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

2	0	lib/bb/cache.py

commit e084430446be2544dd1a6b627088f888c37cc7f0
Author: Chris Larson <chris_larson@mentor.com>
Date:   2010-11-18 11:14:27 -0700

    cache: use new style classes
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

3	6	lib/bb/cache.py

commit 06420ff839ffc37de3e42474b8b0e47c4608a985
Author: Chris Larson <chris_larson@mentor.com>
Date:   2010-11-17 20:27:25 -0700

    cache: pyflakes/pep8/pylint cleanup
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

40	29	lib/bb/cache.py

commit 3a776ef947e23b1a04bdd9e78a3a0c4616249b0e
Author: Chris Larson <chris_larson@mentor.com>
Date:   2010-11-16 17:43:33 -0700

    cache: use set for clean, checked
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

9	11	lib/bb/cache.py

commit 7171019b11ad656d0edb979564941fcf92ab0a02
Author: Chris Larson <chris_larson@mentor.com>
Date:   2010-11-16 13:06:10 -0700

    cache: make use of defaultdict
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

10	34	lib/bb/cache.py

commit 0c8e0f3191252ccedb83c431c48e5c7d905e2717
Author: Chris Larson <chris_larson@mentor.com>
Date:   2010-11-16 13:01:51 -0700

    Pre-explode rundeps/runrecs in CacheData
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

6	4	lib/bb/cache.py
2	2	lib/bb/cooker.py
2	2	lib/bb/taskdata.py

commit b3d5432cff0ff28f4c8a5bcf10efa3e383b4fd4d
Author: Chris Larson <chris_larson@mentor.com>
Date:   2010-11-18 10:54:10 -0700

    persist_data: handle locked db for SELECT
    
    Parallel processes interacting with the persist_data db can quite easily
    explode without this.
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

3	4	lib/bb/persist_data.py

commit 5b85de2c71973ba490b95a5d9ab634635f395142
Author: Bernhard Reutner-Fischer <rep.dot.nop@gmail.com>
Date:   2010-11-15 16:27:27 +0100

    BBHandler: use os.path in inherit()
    
    Signed-off-by: Bernhard Reutner-Fischer <rep.dot.nop@gmail.com>

1	1	lib/bb/parse/parse_py/BBHandler.py

commit 858d704d713d15bf97053eb1374758c74b0d8874
Author: Bernhard Reutner-Fischer <rep.dot.nop@gmail.com>
Date:   2010-11-14 13:08:03 +0100

    BBHandler: simplify supports()
    
    Signed-off-by: Bernhard Reutner-Fischer <rep.dot.nop@gmail.com>

2	1	lib/bb/parse/parse_py/BBHandler.py

commit de34a403e206867e09410ad4925c7b9cff04fee6
Author: Bernhard Reutner-Fischer <rep.dot.nop@gmail.com>
Date:   2010-11-14 00:36:37 +0100

    bb.cache: only log if the respective action was taken
    
    This avoids alot of misleading log-messages like "Removing FOO from cache"
    if FOO was not in the cache and as such is not a removal candidate.
    
    Signed-off-by: Bernhard Reutner-Fischer <rep.dot.nop@gmail.com>

8	5	lib/bb/cache.py

commit 6e24f573a0e95068eb9237c1d264ad1148b2f690
Author: Chris Larson <chris_larson@mentor.com>
Date:   2010-11-11 08:57:15 -0700

    bb.pysh: add Case support to format_commands
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

3	0	lib/bb/pysh/pyshyacc.py

commit ff4753e362714a3c4c759c2fad8a9e5b8fe5bef5
Author: Chris Larson <chris_larson@mentor.com>
Date:   2010-11-11 08:57:04 -0700

    bb.pysh: fix writing pyshtables all over the place
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

4	1	lib/bb/pysh/pyshyacc.py

commit 1cbf8a9403b4b60d59bfd90a51c3e4246ab834d6
Author: Chris Larson <chris_larson@mentor.com>
Date:   2010-11-11 08:54:47 -0700

    Move the pysh package into the bb package
    
    The pysh we're using is modified, and we don't want to risk it conflicting
    with one from elsewhere.
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

0	0	lib/{ => bb}/pysh/__init__.py
0	0	lib/{ => bb}/pysh/builtin.py
0	0	lib/{ => bb}/pysh/interp.py
0	0	lib/{ => bb}/pysh/lsprof.py
0	0	lib/{ => bb}/pysh/pysh.py
0	0	lib/{ => bb}/pysh/pyshlex.py
0	0	lib/{ => bb}/pysh/pyshyacc.py
0	0	lib/{ => bb}/pysh/sherrors.py
0	0	lib/{ => bb}/pysh/subprocess_fix.py
1	1	setup.py

commit 3be3b9be62bed55f5c44c654f7ce9d9027845f47
Author: Chris Larson <chris_larson@mentor.com>
Date:   2010-11-11 08:43:48 -0700

    Don't ship our own copy of PLY, require it
    
    PLY is publically available, so there's no point in shipping ours.  We still
    retain a local copy, however, so we don't lose the ability to run bitbake in
    place in the source tree.
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

2	1	setup.py

commit daa3ffe35997e5fb37da9da9fdd2b7bc3aebe410
Author: Chris Larson <chris_larson@mentor.com>
Date:   2010-11-11 08:43:26 -0700

    Add missing codegen.py to the distutils install
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

1	0	setup.py

commit cc11b9c20e1309f117cfc1c1ab6778cd0f0f2720
Author: Chris Larson <chris_larson@mentor.com>
Date:   2010-11-11 08:42:51 -0700

    Per Luke Leighton, drop setuptools/ez_setup usage
    
    They are unnecessary for us.
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

0	270	ez_setup.py
14	18	setup.py

commit 01b85608d8a37f8af66dfd80133e950120679079
Author: Peter Chubb <peter.chubb@nicta.com.au>
Date:   2009-09-03 17:31:40 +0000

    Allow mercurial fetcher to follow tip
    
    There are occasions when developing when I want a package always to
    grab the latest copy of a package.  Witht eh CVS fetcher you can do
    this by setting the `date' tag to `now'.  This patch adds similar
    functionality to the mercurial fetcher: if the revision to fetch is
    `tip' then always grab from the server, and don't use the cached
    tarball.
    
    Oh, and I fixed a typo in the Class comment.
    
    Signed-off-by: Peter Chubb <peter.chubb@nicta.com.au>
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

8	1	lib/bb/fetch/hg.py

commit c992193528b34e7157487fa36e88e9d354705d36
Author: Chris Larson <chris_larson@mentor.com>
Date:   2010-11-04 08:47:11 -0700

    Fix GraphViz .dot output for rdepends and rrecs
    
    Use bb.utils.explode_deps to break up the rdepends and rrecommends strings.
    This fixes the same issue which was fixed by a number of patches floating
    around, but uses explode_deps rather than regular expressions.
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

2	2	lib/bb/cooker.py

commit 83cdb23f8b89453a3527a276bd0b4deb85d63deb
Author: Chris Larson <chris_larson@mentor.com>
Date:   2010-11-04 08:47:11 -0700

    Fix GraphViz .dot output for rdepends and rrecs
    
    Use bb.utils.explode_deps to break up the rdepends and rrecommends strings.
    This fixes the same issue which was fixed by a number of patches floating
    around, but uses explode_deps rather than regular expressions.
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

2	2	lib/bb/cooker.py

commit 92637a355d55cb66de91b4314bc0e7cf1ac64ade
Author: Chris Larson <chris_larson@mentor.com>
Date:   2010-10-27 18:16:47 -0700

    Make 'cache is clean' message debug
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

1	1	lib/bb/cache.py

commit 75ea005ac8fc05b2b3afca803d77a6b5f558efee
Author: Eric BENARD <eric@eukrea.com>
Date:   2010-09-06 08:51:52 +0000

    bitbake: lib/bb/fetch/hg: fix fetching from a mercurial repository
    
    * without this fix, we get :
    updating working directory
    74 files updated, 0 files merged, 0 files removed, 0 files unresolved
    abort: There is no Mercurial repository here (.hg not found)!
    
    Signed-off-by: Eric Bénard <eric@eukrea.com>
    Tested-by: Frans Meulenbroeks <fransmeulenbroeks@gmail.com>
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

1	0	lib/bb/fetch/hg.py

commit 850d6158ea9daa58e896fd6b258d586df797dcf4
Author: Chris Larson <chris_larson@mentor.com>
Date:   2010-10-21 14:14:23 -0700

    Resurrect display of failed files
    
    This was inadvertantly removed when trying to reduce the amount of duplicated
    information the user sees when a failure occurs.
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

4	0	lib/bb/cooker.py

commit 0922a865747a6c511d1e673dc903a60274801caf
Author: Eric BENARD <eric@eukrea.com>
Date:   2010-09-06 08:51:52 +0000

    bitbake: lib/bb/fetch/hg: fix fetching from a mercurial repository
    
    * without this fix, we get :
    updating working directory
    74 files updated, 0 files merged, 0 files removed, 0 files unresolved
    abort: There is no Mercurial repository here (.hg not found)!
    
    Signed-off-by: Eric Bénard <eric@eukrea.com>
    Tested-by: Frans Meulenbroeks <fransmeulenbroeks@gmail.com>
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

1	0	lib/bb/fetch/hg.py

commit 2bcc6b38b6cad6f040980bc1d844c26a315e51bd
Author: Chris Larson <chris_larson@mentor.com>
Date:   2010-10-14 17:45:07 -0700

    Add 1.10.1 entry to ChangeLog
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

7	0	ChangeLog

commit c88cf0dd127b0477ad90f0972b69624af55c7304
Author: Joshua Lock <josh@linux.intel.com>
Date:   2010-10-05 12:44:08 +0100

    fetch: if mirror fetching fails, ensure exception is raised
    
    We catch any exception raised by the fetchers go() method and attempt to work
    around it by trying any (post) mirrors which are configured. However, should
    the mirrors fail the exception is lost and the fetch is assumed to have
    completed successfully.
    
    Instead, save the exception and if the local file does not exist after trying
    the mirrors re-raise the exception.
    
    Fixes poky [BUGID #362]
    
    Signed-off-by: Joshua Lock <josh@linux.intel.com>
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

3	1	lib/bb/fetch/__init__.py

commit 12066bf508a1459b1971a7ce666799e1f0124e36
Author: Joshua Lock <josh@linux.intel.com>
Date:   2010-10-05 12:44:08 +0100

    fetch: if mirror fetching fails, ensure exception is raised
    
    We catch any exception raised by the fetchers go() method and attempt to work
    around it by trying any (post) mirrors which are configured. However, should
    the mirrors fail the exception is lost and the fetch is assumed to have
    completed successfully.
    
    Instead, save the exception and if the local file does not exist after trying
    the mirrors re-raise the exception.
    
    Fixes poky [BUGID #362]
    
    Signed-off-by: Joshua Lock <josh@linux.intel.com>
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

3	1	lib/bb/fetch/__init__.py

commit 606fa1fd97cbd47a6a7ebdc7a2e6aa93a8f65cf5
Author: Chris Larson <chris_larson@mentor.com>
Date:   2010-10-05 19:35:23 -0700

    Access metadata vars as locals in python snippets
    
    Example:
    FOO = "bar"
    BAR = "${@FOO + '/baz'}"
    
    ${BAR} == "bar/baz"
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

13	1	lib/bb/data_smart.py

commit 8d661ce0c303e8d69f17c1d095545d5ed086d1d5
Author: Chris Larson <chris_larson@mentor.com>
Date:   2010-10-05 20:19:31 -0700

    Fix __getitem__ for DataSmart
    
    Ensure it raises KeyError for a missing key, this is required to use this as a
    mapping in various places, e.g. as locals in an eval.
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

6	2	lib/bb/data_smart.py

commit f264cb6d43472525ad787b0887764ea696ec52ba
Author: Khem Raj <raj.khem@gmail.com>
Date:   2010-09-24 15:46:59 -0700

    fetchers: Use tar --exclude pattern to remove SCM files
    
    This option will exclude the SCM metadata from tar files.
    
    Tested with gcc where svn tar which used to be 156M for gcc 4.5
    is now 77M
    
    Signed-off-by: Khem Raj <raj.khem@gmail.com>

1	1	lib/bb/fetch/bzr.py
1	1	lib/bb/fetch/cvs.py
1	1	lib/bb/fetch/git.py
1	1	lib/bb/fetch/hg.py
1	1	lib/bb/fetch/svn.py

commit bed8e09971dc577f5443ad3d89aa14634c54eb16
Author: Chris Larson <chris_larson@mentor.com>
Date:   2010-09-28 08:52:32 -0700

    Fix syntax issue and don't include 'd' in ui_queue
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

2	2	lib/bb/cooker.py
2	2	lib/bb/event.py

commit 73488aeb317ed306f2ecf99cc9d3708526a5933c
Author: Chris Larson <chris_larson@mentor.com>
Date:   2010-09-28 08:24:55 -0700

    Queue up events before the UI is spawned
    
    - Queue up any events fired to the UI before the UI exists
    - At exit, check if UIs exist, and if not, flush the queue of LogRecords to
      the console directly.
    - When establishing a connection from the UI to the server, flush the queue of
      events to the queue in the server connection, so the UI will receive them
      when it begins its event loop.
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

48	48	lib/bb/cooker.py
21	0	lib/bb/event.py
3	1	lib/bb/server/none.py
2	0	lib/bb/server/xmlrpc.py

commit f29ceb22b6a79ff62287a1eb398811fd81ec5c18
Author: Chris Larson <chris_larson@mentor.com>
Date:   2010-09-24 07:50:26 -0700

    Fix another little bug with undefined var from cache
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

1	1	lib/bb/cache.py

commit 99c324fe7395a44da78403c615797104413503a5
Author: Chris Larson <chris_larson@mentor.com>
Date:   2010-09-24 07:44:23 -0700

    bb.cache: fix bug from last commit with loading from cache
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

1	1	lib/bb/cache.py

commit c7eb4c989459d182fdf9c81a627d32b7ef11626b
Author: Chris Larson <chris_larson@mentor.com>
Date:   2010-09-23 11:21:29 -0700

    Reduce bb.cache memory usage a bit
    
    - Don't store key/value pairs when the value is None
    - Delete the depends_cache when we're done with it
    
    This reduces the memory usage after sync on initial parse by roughly 11.5% on
    this machine.
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

3	2	lib/bb/cache.py

commit 085e66f9c14123ea2c0f1e34f7737cf77071f86d
Author: Chris Larson <chris_larson@mentor.com>
Date:   2010-09-12 13:54:13 -0700

    Fix FuncFailed construction
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

2	2	lib/bb/build.py

commit c07cc08f7fd503ac3013ccc43c79198c4c3b7b29
Author: Chris Larson <chris_larson@mentor.com>
Date:   2010-09-10 14:20:47 -0700

    Restore FuncFailed argument compatibility
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

11	5	lib/bb/build.py

commit 760f647ba044009150ee219869fc9dea171a7535
Author: Chris Larson <chris_larson@mentor.com>
Date:   2010-09-10 13:02:04 -0700

    Only reference logfiles that exist
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

1	1	lib/bb/build.py

commit dafe92fe9f387450d9f9e9ff41c99388998b7495
Author: Chris Larson <chris_larson@mentor.com>
Date:   2010-09-10 11:34:39 -0700

    Fix bitbake -k issue introduced by build exception cleanup
    
    A SystemExit from a python function wasn't being raised as a FuncFailed, which
    resulted in it not being caught by the exception handlers in the runqueue for
    the worker process, which resulted in a SystemExit exit, rather than os._exit,
    which causes all manner of problems when used in a forked process.  This fixes
    it by ensuring we raise a FuncFailed when seeing exceptions which aren't
    instances of Exception.
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

2	2	lib/bb/build.py

commit e3005501a6841edc72ff3f5dc5848dfcf69083e4
Author: Chris Larson <chris_larson@mentor.com>
Date:   2010-09-10 11:34:23 -0700

    Move display of FuncFailed exception info into the runqueue
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

0	1	lib/bb/build.py
0	2	lib/bb/runqueue.py

commit d71984b3934c3dd9791c3bc00f332b79a1985a05
Author: Chris Larson <chris_larson@mentor.com>
Date:   2010-09-10 11:33:48 -0700

    Don't show tracebacks for SystemExit or KeyboardInterrupt
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

1	2	lib/bb/utils.py

commit 90c2b6cb24dc9c82f0a9aa9d23f2d1ed2e6ff301
Author: Chris Larson <chris_larson@mentor.com>
Date:   2010-09-10 11:14:54 -0700

    Fix exit code display for task failure
    
    Per the python documentation, os.waitpid returns the exitcode shifted up by 8
    bits, and we weren't compensating, resulting in a display of 'failed with 256'
    when a worker process exits with a code of 1.
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

3	2	lib/bb/runqueue.py

commit 06b742aae2b8013cbb269cc30554cff89e3a5667
Author: Chris Larson <chris_larson@mentor.com>
Date:   2010-09-09 18:03:40 -0700

    Simplify build exception handling
    
    - Drop EventException
    - Use FuncFailed as the primary function failure exception, using TaskFailed
      for the event (leaving it up to the process running exec_{func,task} to
      display the more detailed information available in the exception).
    - Switch InvalidTask to an exception rather than an event, as that's a
      critical issue.
    - Reduce the number of messages shown to the user when a task fails -- they
      don't need to be told it fails 12 times.  Work remains in this area though.
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

30	35	lib/bb/build.py
2	6	lib/bb/cooker.py
3	7	lib/bb/runqueue.py
2	4	lib/bb/shell.py

commit b42221cabeb1193ade134d1d3c0318203ab8eb93
Author: Chris Larson <chris_larson@mentor.com>
Date:   2010-09-09 17:57:51 -0700

    Turn Event into a new style class
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

1	1	lib/bb/event.py

commit 82928613256bad92fde9f4071244a53e20fc89ee
Author: Chris Larson <chris_larson@mentor.com>
Date:   2010-09-09 17:57:33 -0700

    Work around issue with pickling of traceback objects
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

4	0	lib/bb/__init__.py

commit 29634acd262b06fd14f6ef1e134346f274cf448f
Author: Chris Larson <chris_larson@mentor.com>
Date:   2010-09-09 17:57:09 -0700

    Don't show uncaught exception message for KeyboardInterrupt
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

5	1	bin/bitbake

commit 1b21daf052c49f3126dac001712ec01ad63c5f60
Author: Chris Larson <chris_larson@mentor.com>
Date:   2010-09-08 11:31:36 -0700

    Apply fix for issue where the loggers were constructed with the wrong class
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

4	1	lib/bb/__init__.py

commit 992e460f24d4da707c76d6e6d74d3684c9646279
Author: Chris Larson <chris_larson@mentor.com>
Date:   2010-09-07 15:09:24 -0700

    Fix providerlog NameError
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

3	3	lib/bb/taskdata.py

commit 45c8a4f57d15ec675c0202f91c825b4b62abcfb9
Merge: f7c181a0 8341458e
Author: Chris Larson <chris_larson@mentor.com>
Date:   2010-09-03 18:58:22 -0700

    Merge branch 'logging'
    
    * logging:
      Drop 'fn' arguments to bb.msg functions
      Add pending deprecation warnings to the bb.msg functions
      Switch bitbake internals to use logging directly rather than bb.msg
      Use logging in the knotty ui, and pass the log record across directly
      Use the python logging module under the hood for bb.msg

commit 8341458e3d21b45db84e46bd32f8ad270000ce3c
Author: Chris Larson <chris_larson@mentor.com>
Date:   2010-09-03 18:49:02 -0700

    Drop 'fn' arguments to bb.msg functions
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

6	6	lib/bb/msg.py

commit 60293a42b5500b6139bcd912bf294f862ef9936b
Author: Chris Larson <chris_larson@mentor.com>
Date:   2010-08-11 09:47:31 -0700

    Add pending deprecation warnings to the bb.msg functions
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

0	1	TODO
13	0	lib/bb/msg.py

commit 3b2c1fe5ca56daebb24073a9dd45723d3efd2a8d
Author: Chris Larson <chris_larson@mentor.com>
Date:   2010-06-10 10:35:31 -0700

    Switch bitbake internals to use logging directly rather than bb.msg
    
    We use a custom Logger subclass for our loggers
    
    This logger provides:
    - 'debug' method which accepts a debug level
    - 'plain' method which bypasses log formatting
    - 'verbose' method which is more detail than info, but less than debug
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

9	8	TODO
6	6	bin/bitbake
0	12	classes/base.bbclass
25	6	lib/bb/__init__.py
14	8	lib/bb/build.py
26	27	lib/bb/cache.py
61	65	lib/bb/cooker.py
5	5	lib/bb/data_smart.py
16	19	lib/bb/fetch/__init__.py
6	7	lib/bb/fetch/bzr.py
6	7	lib/bb/fetch/cvs.py
5	4	lib/bb/fetch/git.py
8	6	lib/bb/fetch/hg.py
1	1	lib/bb/fetch/local.py
6	5	lib/bb/fetch/osc.py
10	8	lib/bb/fetch/perforce.py
1	1	lib/bb/fetch/repo.py
6	4	lib/bb/fetch/svk.py
8	6	lib/bb/fetch/svn.py
5	8	lib/bb/fetch/wget.py
12	7	lib/bb/msg.py
6	2	lib/bb/parse/__init__.py
8	4	lib/bb/parse/ast.py
5	4	lib/bb/parse/parse_py/BBHandler.py
3	2	lib/bb/parse/parse_py/ConfHandler.py
6	2	lib/bb/persist_data.py
14	11	lib/bb/providers.py
51	53	lib/bb/runqueue.py
32	29	lib/bb/taskdata.py
14	13	lib/bb/utils.py

commit d237fa4e030c3339beed5268678645e7bb735a06
Author: Chris Larson <chris_larson@mentor.com>
Date:   2010-08-30 18:01:46 -0700

    Switch the debug_level dictionary to a defaultdict
    
    This already exists in master, but in a different form.
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

2	1	lib/bb/msg.py

commit 47482fb9f1b925784e748705abdc9fcec2ce374a
Author: Jeff Dike <jdike@linux.intel.com>
Date:   2010-06-29 13:33:24 +0100

    create cooker object after cleaning the environment
    
    Previously, the cooker object was created before the environment was
    cleaned, saving everything that was in the environment and dumping
    into the run scripts.
    
    The patch ensures that the cooker gets a cleaned environment when it's
    created.
    
    (From Poky rev: 6418d0492a60ed37d13e1060c2e8c09cd127c450)
    
    Signed-off-by: Jeff Dike <jdike@linux.intel.com>
    Signed-off-by: Richard Purdie <rpurdie@linux.intel.com>

2	2	bin/bitbake

commit c23c015cf8af1868faf293b19b80a5faf7e736a5
Author: Chris Larson <chris_larson@mentor.com>
Date:   2010-06-10 08:05:52 -0700

    Use logging in the knotty ui, and pass the log record across directly
    
    This kills firing of Msg* events in favor of just passing along LogRecord
    objects.  These objects hold more than just level and message, but can also
    have exception information, so the UI can decide what to do with that.
    
    As an aside, when using the 'none' server, this results in the log messages in
    the server being displayed directly via the logging module and the UI's
    handler, rather than going through the server's event queue.  As a result of
    doing it this way, we have to override the event handlers of the base logger
    when spawning a worker process, to ensure they log via events rather than
    directly.
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

4	1	bin/bitbake
1	13	lib/bb/event.py
9	1	lib/bb/runqueue.py
38	31	lib/bb/ui/knotty.py

commit 47ca82397bc395b598c6b68b24cdee9e0d8a76d8
Author: Chris Larson <chris_larson@mentor.com>
Date:   2010-06-09 16:17:29 -0700

    Use the python logging module under the hood for bb.msg
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

6	14	TODO
5	2	bin/bitbake
10	0	lib/bb/__init__.py
46	2	lib/bb/event.py
66	64	lib/bb/msg.py
6	6	lib/bb/ui/knotty.py
5	6	lib/bb/utils.py

commit f432c71b34fbb4856fb5d08700b412302e5313da
Author: Chris Larson <chris_larson@mentor.com>
Date:   2010-08-06 16:19:12 -0700

    Fix IndexError encountered when a 'depends' flag references a nonexistant task
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

3	1	lib/bb/runqueue.py

commit f7c181a0f6ab0b4d33bf80a0e24a788de441f82b
Author: C Michael Sundius <msundius@sundius.com>
Date:   2010-08-02 14:56:11 -0700

    Allow %20 in a file name in the SRC_URI
    
    Signed-off-by: C Michael Sundius <msundius@sundius.com>
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

2	1	lib/bb/fetch/wget.py

commit 0adcb7c37583da49e19bd2da63230ca799118a59
Author: Chris Larson <chris_larson@mentor.com>
Date:   2010-08-13 08:57:38 -0700

    Add 1.10.0 entry to ChangeLog
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

3	0	ChangeLog

commit 57018687f60b222ab220dd904c4bf870780171e9
Author: Chris Larson <chris_larson@mentor.com>
Date:   2010-06-10 09:29:55 -0700

    Ignore python warnings that come from places we don't care about
    
    Only shows warnings that come from bb, oe, or <string>
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

5	1	bin/bitbake

commit ddff0a5ab2c80f6e250d4849693d722f3d7e1047
Merge: 5da7785f a8c61e41
Author: Chris Larson <chris_larson@mentor.com>
Date:   2010-08-11 13:52:30 -0700

    Merge branch 'sched'
    
    * sched:
      Split out 'find next buildable task' into a separate generator function
      Let the RunQueueScheduler control the number of active tasks
      Add the ability to use runqueue schedulers from the metadata

commit 5da7785f1b50c64844aee746ae20a234074155b0
Merge: 7898f9a2 89b5351c
Author: Chris Larson <chris_larson@mentor.com>
Date:   2010-08-11 13:52:21 -0700

    Merge branch 'data'
    
    * data:
      Make DataSmart inherit the MutableMapping ABC

commit a8c61e41bc6277222e4cde667ad0b24bd1597aa0
Author: Chris Larson <chris_larson@mentor.com>
Date:   2010-07-23 14:32:14 -0700

    Split out 'find next buildable task' into a separate generator function
    
    It needs to be a generator, so scheduler subclasses have the option to skip
    buildable tasks and return a later one.
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

13	7	lib/bb/runqueue.py

commit 1387423e747f59866fd1cb99a7d90605e668823f
Author: Chris Larson <chris_larson@mentor.com>
Date:   2010-07-23 13:42:54 -0700

    Let the RunQueueScheduler control the number of active tasks
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

8	12	lib/bb/runqueue.py

commit 4dd38d5cfb80f9bb72bc41a629c3320b38f7314d
Author: Chris Larson <chris_larson@mentor.com>
Date:   2010-07-22 11:27:10 -0700

    Add the ability to use runqueue schedulers from the metadata
    
    If you create a runqueue scheduler class in a python module, available in the
    usual python search path, you can now make it available to bitbake via the
    BB_SCHEDULERS variable, and the user can then select it as they select any
    other scheduler.
    
    Example usage:
    
        In a test.py I placed appropriately:
    
            import bb.runqueue
    
            class TestScheduler(bb.runqueue.RunQueueScheduler):
                name = "myscheduler"
    
        In local.conf, to make it available and select it:
    
            BB_SCHEDULERS = "test.TestScheduler"
            BB_SCHEDULER = "myscheduler"
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

23	6	lib/bb/runqueue.py

commit 7898f9a20f0aa4afd97bc456487cc0d4d318a067
Author: Holger Hans Peter Freyther <zecke@selfish.org>
Date:   2010-08-07 22:58:47 +0800

    misc: Update the email address to a working one.

1	1	AUTHORS

commit 4b0fd70539e73d99282fa89d47ad2d5f642ca4f4
Author: Chris Larson <chris_larson@mentor.com>
Date:   2010-08-06 16:19:12 -0700

    Fix IndexError encountered when a 'depends' flag references a nonexistant task
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

3	1	lib/bb/runqueue.py

commit 39087138ffd5d427f07ecaa580a40885c5ffaff3
Author: Chris Larson <chris_larson@mentor.com>
Date:   2010-08-06 16:08:32 -0700

    Drop the 'ui failed to start' message, as the ui_init does more in knotty
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

1	5	bin/bitbake

commit 499a2d28d578cdd6df7cd30ccb79cc2b2796fb65
Author: Chris Larson <chris_larson@mentor.com>
Date:   2010-03-31 08:59:00 -0700

    Make realfile optional for better_exec, using the existing fn in the code object
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

4	2	lib/bb/utils.py

commit e5f6e0e9de4c6d1dfdd269d2bf7f83c00c415a27
Author: Chris Larson <clarson@kergoth.com>
Date:   2010-08-04 21:58:51 -0700

    When shutting down, send SIGTERM, not SIGINT
    
    SIGINT should be from the user, not a script.  It also doesn't work as
    reliably to shut down processes, as it's not always interpreted as a
    termination request.  In addition, it causes KeyboardInterrupt exceptions in
    the worker processes, which can interfere with our exception handling.
    
    Signed-off-by: Chris Larson <clarson@kergoth.com>

2	2	lib/bb/runqueue.py

commit e43b46fe68567d8906722f27d8bd9d11504ee2c8
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2010-08-04 15:38:35 +0100

    cooker.py: Fix case of -b option with a full filepath
    
    (From Poky rev: c10d02a)
    
    Signed-off-by: Richard Purdie <rpurdie@linux.intel.com>

1	1	lib/bb/cooker.py

commit 0cc632761e75f66a8ce5ca2fe370f7551ccbfdf0
Author: Bernhard Reutner-Fischer <rep.dot.nop@gmail.com>
Date:   2010-08-03 17:02:43 +0200

    *: Fix typo in documentation
    
    s/dictonary/dictionary/
    
    Signed-off-by: Bernhard Reutner-Fischer <rep.dot.nop@gmail.com>

1	1	ChangeLog
1	1	lib/bb/build.py
1	1	lib/bb/utils.py

commit 9fe82429168e0f5c3f4778275d910984ba1c7752
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2010-07-16 15:10:22 +0100

    Add support for .bbappend files (see mailing lists for detais)
    
    (From Poky rev: 63e6ba85677b8aa9f4cf9942a1fccbb8a8c72660)
    
    Signed-off-by: Richard Purdie <rpurdie@linux.intel.com>

7	5	lib/bb/cache.py
42	21	lib/bb/cooker.py
5	1	lib/bb/parse/ast.py
1	1	lib/bb/runqueue.py

commit d6ff58eb2d2a708bdd7961a50a877101ce420e59
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2010-07-25 11:32:42 +0100

    fetch: Only mark srcrev recipes as uncached when outside of SRCREV caching mode
    
    (From Poky rev: 36cfff8ed5b8a777a09cc8abcd8b01a1f297e404)
    
    Signed-off-by: Richard Purdie <rpurdie@linux.intel.com>

2	1	lib/bb/fetch/__init__.py

commit 5dff297128b362197f618f4a8101ac269de176ea
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2010-07-25 11:33:11 +0100

    cache: If one virtual of a recipe is uncached, remove all versions from the cache
    
    (From Poky rev: 7edde59de4fd8b19af55e8377138db6ee3dbb3d8)
    
    Signed-off-by: Richard Purdie <rpurdie@linux.intel.com>

14	0	lib/bb/cache.py

commit d0a6e9c5c1887a885e0e73eba264ca66801f5ed0
Author: Chris Larson <chris_larson@mentor.com>
Date:   2010-08-02 13:42:23 -0700

    Add pysh, ply, and codegen to lib/ to prepare for future work
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

570	0	lib/codegen.py
4	0	lib/ply/__init__.py
1058	0	lib/ply/lex.py
3276	0	lib/ply/yacc.py
0	0	lib/pysh/__init__.py
710	0	lib/pysh/builtin.py
1367	0	lib/pysh/interp.py
116	0	lib/pysh/lsprof.py
167	0	lib/pysh/pysh.py
888	0	lib/pysh/pyshlex.py
772	0	lib/pysh/pyshyacc.py
41	0	lib/pysh/sherrors.py
77	0	lib/pysh/subprocess_fix.py

commit 0964af191fcefab2f4f549caea977ad68055d8eb
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2010-07-01 23:54:13 +0100

    Fix handling of empty variables in local config files
    
    (From Poky rev: dbd9308)
    
    Signed-off-by: Richard Purdie <rpurdie@linux.intel.com>

1	1	lib/bb/cooker.py

commit ed50160a159c5a6b9f69755a155507179687306c
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2010-03-23 22:33:02 +0000

    Gross hack to fix packaged-staging with BBCLASSEXTEND packages
    
    (From Poky rev: 589df80ca1b825afd138531bb796aa8617ed0991)
    
    Signed-off-by: Richard Purdie <rpurdie@linux.intel.com>

2	0	lib/bb/runqueue.py

commit 1cb72e371322c271ee7f2d008c6f7899fb38b4fd
Author: Bernhard Reutner-Fischer <rep.dot.nop@gmail.com>
Date:   2010-07-26 11:50:21 +0200

    utils: Fix number of arguments to bb.msg functions
    
    the 'fn' argument of them is not used, should be removed anytime:
    sed -i -e
    '/^def.*fn/s/,[[:space:]]*fn[[:space:]]*=[[:space:]]*None[[:space:]]*)/)/g'
    lib/bb/msg.py
    
    Signed-off-by: Bernhard Reutner-Fischer <rep.dot.nop@gmail.com>

2	2	lib/bb/utils.py

commit 2ed36a3d57de25e1af31d657a7b0b14857e5056a
Author: Bernhard Reutner-Fischer <rep.dot.nop@gmail.com>
Date:   2010-07-14 23:26:00 +0200

    *: cosmetic whitespace removal
    
    Signed-off-by: Bernhard Reutner-Fischer <rep.dot.nop@gmail.com>

1	1	lib/bb/fetch/__init__.py
1	1	lib/bb/runqueue.py

commit 6497cedf9cfc03201250af816995dd2bd85c36ef
Author: Chris Larson <chris_larson@mentor.com>
Date:   2010-07-22 10:54:58 -0700

    Let the runqueue find the user selected scheduler dynamically
    
    Searches the module (bb.runqueue) for any new style classes which are
    instances of RunQueueScheduler, and uses the one whose 'name' attribute
    matches the value of BB_SCHEDULER.
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

15	5	lib/bb/runqueue.py

commit b632c7cd790299ee4add561a0f632cb53d55e843
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2010-07-06 17:45:18 +0100

    runqueue: Allow passing of success/failure handlers to runqueue_process_waitpid()
    
    (From Poky rev: 6598f98ba8fc2d058a1a5d948b48f81a2b052776)
    
    Signed-off-by: Richard Purdie <rpurdie@linux.intel.com>

5	5	lib/bb/runqueue.py

commit 00a8b436525f77a9f114af406fa71d1c283f1abb
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2010-07-06 17:47:43 +0100

    runqueue: Allow taskname to be passed to check_stamp_task()
    
    (From Poky rev: 8c238504536c9af824557622a1e284ebf0b884a5)
    
    Signed-off-by: Richard Purdie <rpurdie@linux.intel.com>

5	4	lib/bb/runqueue.py

commit a76cd47722dfc752daace3cbb31696868ca54313
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2010-07-06 17:46:13 +0100

    runqueue: Make child process error scary so user is less likely to ignore
    
    (From Poky rev: 009343b2a298d0fd94ef4bbf780c76cca622e9e0)
    
    Signed-off-by: Richard Purdie <rpurdie@linux.intel.com>

1	1	lib/bb/runqueue.py

commit 1d410d81a26bbae57d14eacb65b5bfe7667b7e53
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2010-07-06 17:42:40 +0100

    runqueue: Fix number of running tasks accounting (include failed tasks)
    
    (From Poky rev: 2d263840b03cfaa93ea8b8bd036273838b7f6a5f)
    
    Signed-off-by: Richard Purdie <rpurdie@linux.intel.com>

1	1	lib/bb/runqueue.py

commit b3982373f78162b4337519de846f3d65fc3e7bbc
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2010-07-06 17:41:55 +0100

    runqueue: Remove unneeded exception catching from fork_off_task()
    
    (From Poky rev: 3cd042f5055eb217e71213fbe2243575d604c186)
    
    Signed-off-by: Richard Purdie <rpurdie@linux.intel.com>

0	3	lib/bb/runqueue.py

commit 5540fea512c6b342ebf7891d3c35408d9a075a13
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2010-07-06 17:41:11 +0100

    runqueue: Separate out task forking code into a new function
    
    (From Poky rev: 5c44f9a78dd310b31df2d84128c4b3ca468d685d)
    
    Signed-off-by: Richard Purdie <rpurdie@linux.intel.com>

61	56	lib/bb/runqueue.py

commit 1d4a2da0ccdb3047e0be172e0adb788913af4ef0
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2010-07-05 15:42:25 +0100

    runqueue: Combine the waitpid result handling code into a function
    
    (From Poky rev: 8a5b5080a2fa0db7972573cfcd8e04abedb22618)
    
    Signed-off-by: Richard Purdie <rpurdie@linux.intel.com>

21	28	lib/bb/runqueue.py

commit 5af44edac688621d249a34c75d8dc12d22953baf
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2010-07-05 15:04:06 +0100

    Remove two layers of unnecessary functions from task execution
    
    (From Poky rev: 90db9f30749b3f93a6c7d503af544ee8e0ca1728)
    
    Signed-off-by: Richard Purdie <rpurdie@linux.intel.com>

0	32	lib/bb/cooker.py
12	2	lib/bb/runqueue.py

commit c82926ccdd4ec4e3ad6e78a381dacb96adf9b409
Author: Bernhard Reutner-Fischer <rep.dot.nop@gmail.com>
Date:   2010-06-18 12:50:15 +0200

    *: use print() as a function
    
    to make python3 happy
    
    Signed-off-by: Bernhard Reutner-Fischer <rep.dot.nop@gmail.com>

3	3	bin/bitbake
2	2	doc/manual/usermanual.xml
2	2	ez_setup.py
5	5	lib/bb/msg.py

commit c9e66bbae78e4804a28b3ac6cfd2de39d9c6c450
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2010-07-01 23:54:13 +0100

    Fix handling of empty variables in local config files
    
    (From Poky rev: dbd9308)
    
    Signed-off-by: Richard Purdie <rpurdie@linux.intel.com>

1	1	lib/bb/cooker.py

commit 748d38adb40f6c80750ff5f656d975acbf878f9c
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2010-03-23 22:33:02 +0000

    Gross hack to fix packaged-staging with BBCLASSEXTEND packages
    
    (From Poky rev: 589df80ca1b825afd138531bb796aa8617ed0991)
    
    Signed-off-by: Richard Purdie <rpurdie@linux.intel.com>

2	0	lib/bb/runqueue.py

commit 277e8e80c3e1101cdadf234ae74803b9a8d45d25
Author: Jeff Dike <jdike@linux.intel.com>
Date:   2010-06-29 13:33:24 +0100

    create cooker object after cleaning the environment
    
    Previously, the cooker object was created before the environment was
    cleaned, saving everything that was in the environment and dumping
    into the run scripts.
    
    The patch ensures that the cooker gets a cleaned environment when it's
    created.
    
    (From Poky rev: 6418d0492a60ed37d13e1060c2e8c09cd127c450)
    
    Signed-off-by: Jeff Dike <jdike@linux.intel.com>
    Signed-off-by: Richard Purdie <rpurdie@linux.intel.com>

2	2	bin/bitbake

commit 0cd35a24d3e8d0f38b19efa66dd00096008a25af
Author: Jeff Dike <jdike@linux.intel.com>
Date:   2010-06-29 13:32:04 +0100

    Move the logger initialization from cooker to utils
    
    In order to move the environment cleaning, which wants to log a
    message, before cooker creation, the logging facility initialization
    needs to happen earlier.  So, it is now in init_logger in utils.py and
    called from bitbake before the creation of the data object.
    
    It also seems more correct to initialize a global facility like this
    from a more global context than the creation of an object, of which
    there could theoretically be many.
    
    (From Poky rev: f9d7e9e3be89ac9141fb0eb7c71eef5a9a82add9)
    
    Signed-off-by: Jeff Dike <jdike@linux.intel.com>
    Signed-off-by: Richard Purdie <rpurdie@linux.intel.com>

3	0	bin/bitbake
0	11	lib/bb/cooker.py
16	0	lib/bb/utils.py

commit ca257adc587bb0937ea76d8b32b654fdbf4192b8
Author: Nitin A Kamble <nitin.a.kamble@intel.com>
Date:   2010-06-03 21:50:02 -0700

    bitbake decodeurl: fix the file:// url handling
    
    Without this patch decoding a url of this kind file://dir/filename gives
    path=/filename host=dir.
    With the patch it decodes as path=/dir/filename host=""
    
    Probably nobody stumbled on this issue yet because nobody used
    file:// urls with directory names in the path.
    
    (From Poky rev: c3682bf89bdf236a4b4d834069d947b6a1456791)
    
    Signed-off-by: Nitin A Kamble <nitin.a.kamble@intel.com>
    Signed-off-by: Richard Purdie <rpurdie@linux.intel.com>

1	1	lib/bb/fetch/__init__.py

commit 9c4527fe66690999a6b56efaa56b54a92cd279bf
Author: Joshua Lock <josh@linux.intel.com>
Date:   2010-06-25 13:52:51 +0100

    allow fakeroot functionality to be provided by an alternative program
    
    If the variable FAKEROOT is set its value will be used, otherwise we default
    to fakeroot.
    
    (From Poky rev: 43f0d63237604e85e1af9d289a9aaeac96b86362)
    
    Signed-off-by: Joshua Lock <josh@linux.intel.com>
    Signed-off-by: Richard Purdie <rpurdie@linux.intel.com>

1	1	lib/bb/build.py

commit 3e808d6a5cdb78482f71c91a3d81d64262b005d6
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2010-06-30 09:47:36 +0100

    Add bb.utils.join_deps to handle creation of dependency strings with versions
    
    (From Poky rev: 9a543b75cab2daf6536afce100cb5d6031fca9e)
    
    Signed-off-by: Richard Purdie <rpurdie@linux.intel.com>

12	0	lib/bb/utils.py

commit dc92299412afde3b978ca7adf76647763dfba6cc
Author: Chris Larson <chris_larson@mentor.com>
Date:   2010-06-24 11:01:25 -0700

    Add a couple long term, high impact TODO items
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

16	0	TODO

commit b781317b5006bc047a59e7fa3c93344115e78ccb
Author: Chris Larson <chris_larson@mentor.com>
Date:   2010-06-24 10:53:36 -0700

    Add a warning if a BBFILE_PATTERN doesn't match any bb files
    
    Likely cause is, of course, typo in the pattern or incorrect BBFILES, so we
    should warn the user about this.
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

10	2	lib/bb/cooker.py

commit 61780379d4512d8a803f19b3af4b19152e246cd6
Author: Chris Larson <chris_larson@mentor.com>
Date:   2010-06-20 12:07:34 -0700

    3.0 prep

13	12	lib/bb/fetch/__init__.py
1	0	lib/bb/fetch/perforce.py
2	0	lib/bb/parse/ast.py
5	4	lib/bb/parse/parse_py/BBHandler.py
5	3	lib/bb/parse/parse_py/__init__.py
5	3	lib/bb/ui/ncurses.py

commit 219be63895b20daa646066ae52872ce90a9da1e8
Author: Chris Larson <chris_larson@mentor.com>
Date:   2010-06-20 12:08:07 -0700

    Apply some 2to3 refactorings

1	1	bin/bitbake
12	14	bin/bitdoc
3	3	lib/bb/COW.py
9	9	lib/bb/cooker.py
1	1	lib/bb/fetch/__init__.py
7	6	lib/bb/parse/ast.py
1	1	lib/bb/runqueue.py
5	4	lib/bb/shell.py
1	1	lib/bb/ui/knotty.py
1	1	lib/bb/ui/ncurses.py
2	2	lib/bb/utils.py

commit 40925230781ddd550bf21d90714c5349f9240a51
Author: Chris Larson <chris_larson@mentor.com>
Date:   2010-06-18 07:56:55 -0700

    Drop a couple usages of readlines
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

21	22	lib/bb/ui/crumbs/buildmanager.py
14	14	lib/bb/ui/puccho.py

commit 65a51bb20677148a29b9e472f6d9d0a97798f024
Author: Chris Larson <chris_larson@mentor.com>
Date:   2010-06-18 08:07:51 -0700

    Until the interactive mode is fixed, kill it from the valid options, to avoid confusion
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

1	0	TODO
0	3	bin/bitbake
0	3	lib/bb/cooker.py

commit 1bddc77268e57e236c274fd91c889ea00a13891b
Author: Chris Larson <chris_larson@mentor.com>
Date:   2010-06-18 08:06:37 -0700

    Fix syntax error in shell.py
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

1	0	lib/bb/shell.py

commit 966490c555cbdc09f52e1dcc68d3772c28ad9cee
Author: Chris Larson <chris_larson@mentor.com>
Date:   2010-06-18 17:31:37 -0700

    Add missing 'return False' to the SystemExit handler in runAsyncCommand
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

1	0	lib/bb/command.py

commit 58e1b0a5dbd0f1ca137ad7ed1bd7ad9975a20fb7
Author: Chris Larson <chris_larson@mentor.com>
Date:   2010-06-18 09:21:31 -0700

    Move serverConnection.terminate() back into the finally
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

2	1	bin/bitbake

commit 2b9dc5b55e24b4946ff03bf30ca52a48547caaad
Author: Chris Larson <chris_larson@mentor.com>
Date:   2010-06-17 13:52:53 -0700

    Limit the traceback length in the default exception handler
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

1	1	bin/bitbake

commit f5b7e16adf86950d91a88a343031e71beb0f08a6
Author: Chris Larson <chris_larson@mentor.com>
Date:   2010-06-16 06:53:24 -0700

    Switch from our own 'dummywrite' class to StringIO
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

7	10	lib/bb/cooker.py

commit e3cc9bc7b6ef1a2eca78235790a051329bceb9a4
Author: Chris Larson <chris_larson@mentor.com>
Date:   2010-06-10 09:14:39 -0700

    Switch a fatal usage to SystemExit ("T" not set)
    
    This failure is one the *user* needs to see, as it may have to do with their
    setup, but where they don't need to see a traceback and all, since they're not
    developers, so I think SystemExit is appropriate here.
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

1	1	lib/bb/build.py

commit 07757a1bf1129cc6a967a7cf1815d3d46a6bbdcf
Author: Chris Larson <chris_larson@mentor.com>
Date:   2010-06-16 10:15:08 -0700

    Resurrect the excepthook, this time just sending the info with bb.fatal
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

8	0	bin/bitbake

commit 1a04610dea376340b9ea4c109f64995b4fd6ad02
Author: Cliff Brake <cbrake@bec-systems.com>
Date:   2010-06-15 17:29:54 -0700

    remove return in finally statement
    
    causes exceptions to not be handled after the finally statement
    
    Signed-off-by: Cliff Brake <cbrake@bec-systems.com>
    Signed-off-by: Chris Larson <clarson@kergoth.com>

3	3	bin/bitbake

commit 1239df8b82ddcd607630da5a888ca83051a22fa8
Author: Chris Larson <chris_larson@mentor.com>
Date:   2010-06-10 15:09:55 -0700

    cooker: Kill __getitem__ usage on exception objects (python 3 prep)
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

4	4	lib/bb/cooker.py

commit 17f40d036814e4abf6d87363fff7823c8c85c298
Author: Chris Larson <chris_larson@mentor.com>
Date:   2010-06-10 10:21:41 -0700

    Handle SystemExit and KeyboardInterrupt sanely when executing a command
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

10	1	lib/bb/command.py

commit 9ec9c0e560d4fa6df74a90f598f9db92713525a2
Author: Chris Larson <chris_larson@mentor.com>
Date:   2010-06-10 10:36:06 -0700

    Drop unnecessarly duplicated messages wrt FuncFailed
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

1	4	lib/bb/build.py

commit bd0edc19f691146e748b91255be7a5788a070de6
Author: Chris Larson <chris_larson@mentor.com>
Date:   2010-06-10 10:23:03 -0700

    knotty: use the future division to prep for 3.x
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

3	2	lib/bb/ui/knotty.py

commit ef8475796fbab4f76a72bbc106da4c35e3afe2e1
Author: Chris Larson <chris_larson@mentor.com>
Date:   2010-06-10 10:36:19 -0700

    Kill the unnecessary setVarFlag debugging message
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

0	1	lib/bb/parse/ast.py

commit d2ae94bb9b71f7daa132cb6efbfa1cba5280d77c
Author: Chris Larson <chris_larson@mentor.com>
Date:   2010-06-10 10:46:57 -0700

    Add exception bits to TODO
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

8	0	TODO

commit 2197182fe5837d74f1499c644e882e87cf035238
Author: Chris Larson <chris_larson@mentor.com>
Date:   2010-06-10 10:44:20 -0700

    knotty: stop freaking out and dying when bb.build has removed the empty logfile
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

1	1	lib/bb/ui/knotty.py

commit 0c885752d69e4108e2960d59ec1bd6c911dd141a
Author: Chris Larson <chris_larson@mentor.com>
Date:   2010-06-10 09:46:02 -0700

    Use bb.utils.mkdirhier in bb.cache to shut up the pending deprecation warning
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

1	1	lib/bb/cache.py

commit 43700fa1ca1d2635de4ed46110057cb164ee82d1
Author: Chris Larson <chris_larson@mentor.com>
Date:   2010-06-10 09:43:39 -0700

    Use PendingDeprecationWarning for functions moved from bb to bb.utils
    
    This is necessary, as there has not yet been a release with the bb.utils
    versions in place.  We can't show them a deprecation warning when they can't
    safely change it yet.  Show a PendingDeprecationWarning until 1.10 releases
    and OE requires it, then we can move to DeprecationWarning.
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

1	1	lib/bb/__init__.py

commit 4718d128a522ba450fecea0a87ee55a5a296dd2c
Author: Chris Larson <chris_larson@mentor.com>
Date:   2010-06-10 08:32:03 -0700

    Add fatal bits and LAYERDIR bits to TODO
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

4	0	TODO

commit 681b73fcc04e22e692ed61650ad53c800b64cace
Author: Chris Larson <chris_larson@mentor.com>
Date:   2010-06-10 07:47:16 -0700

    Start ditching fatal() calls in favor of raising appropriate exceptions
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

3	3	lib/bb/fetch/__init__.py

commit 2c66ddc2713061ba31363ea69c24944f4a7cd3a8
Author: Chris Larson <chris_larson@mentor.com>
Date:   2010-06-10 08:05:33 -0700

    Drop the non-debug traceback suppressor, at this point I think it does more harm than good
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

0	13	bin/bitbake

commit f84f382f340d6db15b9e5afb8c7c93969249a958
Author: Ryan Phillips <ryan_d_phillips@dell.com>
Date:   2010-06-08 14:20:55 -0500

    Change wget fetcher to use the runfetchcmd
    
    * Fixes proxy support to honor standard proxy environment variables.
    * Quote environment variables
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

2	1	lib/bb/fetch/__init__.py
4	24	lib/bb/fetch/wget.py

commit 5bb24832761bd518cb0249125f67939e0cbd0998
Author: Chris Larson <chris_larson@mentor.com>
Date:   2010-06-09 19:26:21 -0700

    Show a traceback when a task fails due to an exception
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

4	3	lib/bb/runqueue.py

commit 37c77fb0ae2c893d23095de6c43476d8c891c679
Author: Chris Larson <chris_larson@mentor.com>
Date:   2010-06-09 15:06:02 -0700

    Update the TODO
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

41	5	TODO

commit 837c84ce47c298316b941a5f3d2479bd2643686b
Author: Bernhard Reutner-Fischer <rep.dot.nop@gmail.com>
Date:   2010-06-09 18:06:57 +0200

    parser: fix harmless typo in variable name
    
    s/absolsute/absolute/
    
    Signed-off-by: Bernhard Reutner-Fischer <rep.dot.nop@gmail.com>

4	4	lib/bb/parse/parse_py/BBHandler.py

commit 2b64afa107dc24db510d0001b6eb58f0d5913d2f
Author: Chris Larson <chris_larson@mentor.com>
Date:   2010-06-08 17:03:34 -0700

    Fix the silent exit when the specified task doesn't exist
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

2	4	lib/bb/msg.py

commit 36b980c16bf74b3c2066cc120f9f27e11f189a63
Author: Chris Larson <chris_larson@mentor.com>
Date:   2010-06-08 13:20:35 -0700

    Move the output of no provider and multiple provider messages into the UI
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

2	1	lib/bb/event.py
8	29	lib/bb/taskdata.py
18	2	lib/bb/ui/knotty.py

commit 49b8bab706c59e93287f8540187b62ba3ece0a11
Author: Chris Larson <chris_larson@mentor.com>
Date:   2010-06-08 12:28:36 -0700

    Reorganize the main exception handling so an attribute exception raised in the ui isn't misinterpreted
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

8	5	bin/bitbake

commit e07f759dae96c0819c35bb67e1da18ca361bb584
Author: Chris Larson <chris_larson@mentor.com>
Date:   2010-06-08 11:42:49 -0700

    Make knotty ignore the NoProvider event
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

8	15	lib/bb/ui/knotty.py

commit 0b963e52eca0447d5bbfc87d826ad662fe940381
Author: Chris Larson <chris_larson@mentor.com>
Date:   2010-06-08 08:01:16 -0700

    Don't tell the user we're sending SIGINT to the remaining 0 tasks
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

7	6	lib/bb/runqueue.py

commit ec1f2773b4811b3beb52710120bb5a9b215c174e
Author: Bernhard Reutner-Fischer <rep.dot.nop@gmail.com>
Date:   2010-06-07 20:50:05 +0200

    cooker: use time.strftime() instead of spawing sh with date
    
    time.strftime() defaults to using time.localtime(), use that instead
    of spawning "sh -c 'date +<FMT>'"
    
    Signed-off-by: Bernhard Reutner-Fischer <rep.dot.nop@gmail.com>

1	1	lib/bb/cooker.py

commit acca7eb8450cbe30d65b5b266f1a642e7965df8a
Author: Chris Larson <chris_larson@mentor.com>
Date:   2010-06-04 16:44:07 -0700

    Adjust the exception handling based on Cliff Brake's patch
    
    Rather than printing the exception ourselves, might as well re-raise and let
    the default exception handler do it for us.
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

2	1	bin/bitbake

commit 34f396e749303367e657911bf10c43086dff7552
Author: Robert P. J. Day <rpjday@crashcourse.ca>
Date:   2010-06-03 05:58:09 -0400

    Fix a couple typos in the CVS Fetcher section.
    
    "DL_DIRS" -> "DL_DIR"
    Remove superfluous trailing ">" after CVSDIR.
    
    Signed-off-by: Robert P. J. Day <rpjday@crashcourse.ca>
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

2	2	doc/manual/usermanual.xml

commit 1c5661f9346bc3b250838dfcf172f41b4707d717
Author: Robert P. J. Day <rpjday@crashcourse.ca>
Date:   2010-06-03 05:26:17 -0400

    Fix a couple typos in setup.py.
    
    Signed-off-by: Robert P. J. Day <rpjday@crashcourse.ca>
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

1	1	setup.py

commit fa45f5625e13a82bec70d5f10815f52fbe705166
Author: Bernhard Reutner-Fischer <rep.dot.nop@gmail.com>
Date:   2010-06-04 14:04:42 +0200

    cache: do not chdir unnecessarily
    
    previously we called chdir() twice for every target, this patch reduces
    the amount of chdir() calls via openembedded master from some 16000 to
    4.
    
    Signed-off-by: Bernhard Reutner-Fischer <rep.dot.nop@gmail.com>
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

12	4	lib/bb/cache.py

commit 8a6876752b90efd81d92f0947bfc9527d8260969
Author: Bernhard Reutner-Fischer <rep.dot.nop@gmail.com>
Date:   2010-06-04 14:04:41 +0200

    persist_data: cache connection and use cursor
    
    Store database connection to persistent database in fetcher.
    
    Signed-off-by: Bernhard Reutner-Fischer <rep.dot.nop@gmail.com>
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

5	4	lib/bb/fetch/__init__.py
13	8	lib/bb/persist_data.py

commit f7c69462b8ba726861898817cc5b13174c78e35a
Author: Bernhard Reutner-Fischer <rep.dot.nop@gmail.com>
Date:   2010-06-04 14:04:40 +0200

    cache: use a set() for __depends
    
    to make updating depends easier/more intuitive/eventually faster
    
    Signed-off-by: Bernhard Reutner-Fischer <rep.dot.nop@gmail.com>
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

4	6	lib/bb/cache.py
2	2	lib/bb/parse/__init__.py

commit c0cf85beda4cf8748fd270c037442cde7b98146b
Author: Bernhard Reutner-Fischer <rep.dot.nop@gmail.com>
Date:   2010-06-04 14:04:39 +0200

    cache: use max() to determine newest_mtime
    
    Signed-off-by: Bernhard Reutner-Fischer <rep.dot.nop@gmail.com>
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

4	3	lib/bb/cache.py

commit 09fe0d403c75229931c10eabc7eecc0dc60058fe
Author: Bernhard Reutner-Fischer <rep.dot.nop@gmail.com>
Date:   2010-06-04 14:04:38 +0200

    cache: use os.path ops instead of stat
    
    Signed-off-by: Bernhard Reutner-Fischer <rep.dot.nop@gmail.com>
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

2	8	lib/bb/cache.py

commit fd40c85cb292f7c6c6a302c11d2600697d9dee09
Author: Chris Larson <chris_larson@mentor.com>
Date:   2010-04-14 14:38:18 -0700

    Search up the directory tree for bblayers.conf
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

12	2	lib/bb/cooker.py

commit 902b3c26c752aece62aac3feda5a7c0c6d995d3d
Author: Chris Larson <chris_larson@mentor.com>
Date:   2010-04-14 14:30:09 -0700

    Add a hack to avoid the req that all vars using LAYERDIR be immediately expanded
    
    See the comment in the code for details.
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

14	0	lib/bb/cooker.py

commit 75875baa5b4074c49bbef0042d07dbe69f75d79e
Author: Chris Larson <chris_larson@mentor.com>
Date:   2010-04-14 14:27:29 -0700

    Move the unset BBPATH sanity check after the bblayers processing
    
    This way we can fully utilize bblayers, you can do everything in bblayers.conf
    and avoid setting any environment variables at all.
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

3	0	lib/bb/cooker.py
1	4	lib/bb/parse/parse_py/ConfHandler.py

commit 1cfcbee014478eb129ed382c13622317412b036e
Author: Chris Larson <chris_larson@mentor.com>
Date:   2010-06-04 13:10:00 -0700

    Make the file not found error actually useable.
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

5	3	lib/bb/parse/__init__.py

commit d6951f72ace6be1d89803793d8882107f977f557
Author: Chris Larson <chris_larson@mentor.com>
Date:   2010-06-04 13:10:00 -0700

    Make the file not found error actually useable.
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

5	3	lib/bb/parse/__init__.py

commit b786f1f60fb50565295e7c8e979b471327d924f3
Author: Bernhard Reutner-Fischer <rep.dot.nop@gmail.com>
Date:   2010-06-04 14:04:37 +0200

    fetch: commentary typo fix in fetcher_init()
    
    Signed-off-by: Bernhard Reutner-Fischer <rep.dot.nop@gmail.com>

1	1	lib/bb/fetch/__init__.py

commit 9937d5992d72104c670e069f4c46cc62a490e18f
Author: Bernhard Reutner-Fischer <rep.dot.nop@gmail.com>
Date:   2010-06-04 14:04:36 +0200

    cache: fix typo in error message of cacheValidUpdate()
    
    Signed-off-by: Bernhard Reutner-Fischer <rep.dot.nop@gmail.com>

1	1	lib/bb/cache.py

commit 1497dd0d5bc0cca0de7d0ee9d314287000a0c34d
Author: Bernhard Reutner-Fischer <rep.dot.nop@gmail.com>
Date:   2010-06-04 14:04:35 +0200

    fetch: documentation typo fix
    
    s/initilize/initialize/
    
    Signed-off-by: Bernhard Reutner-Fischer <rep.dot.nop@gmail.com>

1	1	lib/bb/fetch/__init__.py

commit a5b1c0605328660de15bb8127b6f7d798c664d32
Author: Khem Raj <raj.khem@gmail.com>
Date:   2010-05-04 22:56:49 -0700

    fetch: Check for existence of tar file along with md5 signature
    
    Signed-off-by: Khem Raj <raj.khem@gmail.com>
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

2	2	lib/bb/fetch/__init__.py

commit 084dfe47be8baab3827d3969be43282691fb7688
Author: Chris Larson <chris_larson@mentor.com>
Date:   2010-05-22 16:36:08 -0700

    Revert "In expand, drop the unnecessary second regular expression match"
    
    This reverts commit 05462fa7908fc22988b3dc9d376798d0a46ccb5a.

11	11	lib/bb/data_smart.py

commit 211f44ce0e15c7c419606e9ef3568d9cea6775b7
Author: Chris Larson <chris_larson@mentor.com>
Date:   2010-04-20 14:23:18 -0700

    Don't emit vars starting with __, as those are internal
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

1	1	lib/bb/data.py

commit 05462fa7908fc22988b3dc9d376798d0a46ccb5a
Author: Chris Larson <chris_larson@mentor.com>
Date:   2010-05-21 13:08:44 -0700

    In expand, drop the unnecessary second regular expression match
    
    Signed-off-by: Imran Mehmood <imran_mehmood@mentor.com>
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

11	11	lib/bb/data_smart.py

commit b017acd39b811a00305002a8044e7d02e79f41d7
Author: Chris Larson <chris_larson@mentor.com>
Date:   2010-04-21 10:57:17 -0700

    Simplify _findVar a bit
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

6	9	lib/bb/data_smart.py

commit 2f7c498abcf675e5b8de197d8056a0581670c2bd
Author: Chris Larson <chris_larson@mentor.com>
Date:   2010-04-21 16:47:10 -0700

    Fix major bug that slipped in when moving update_data
    
    The root cause is, I was testing the use of renameVar() from finalize, in
    order to get flags copied over when an override is applied, but renameVar
    removes the original, whereas the old code did not do so.  Going back to the
    old method, will revisit the override/flags later on.
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

10	9	lib/bb/data_smart.py

commit 1b378ddf3dc9b2aa5384e8b28945b63fc623a6a4
Author: Chris Larson <clarson@kergoth.com>
Date:   2010-04-20 18:47:36 -0700

    Move a var definition in cooker.parse_next
    
    Signed-off-by: Chris Larson <clarson@kergoth.com>

1	1	lib/bb/cooker.py

commit 1cc11164a85a5b30d6b9184cb5a8f7f7ac1aaff2
Author: Chris Larson <chris_larson@mentor.com>
Date:   2010-04-20 15:56:20 -0700

    Enhance the expansion exception message
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

3	6	lib/bb/data.py

commit cf1a51eab11f645c95e5fa278221f78c129b9dd1
Author: Chris Larson <chris_larson@mentor.com>
Date:   2010-04-20 15:54:42 -0700

    For ${@}, run str() on the result
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

4	6	lib/bb/data_smart.py

commit 5b09e28cb4a2c6c99ad58e71fb803160922a7e1e
Author: Chris Larson <chris_larson@mentor.com>
Date:   2010-04-20 13:44:06 -0700

    Allow emission of non-string objects in emit_var, instead running str() on it first
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

2	4	lib/bb/data.py

commit db718ec6f67c7c0d0efb4ba0b5b24384f707dcf5
Author: Chris Larson <chris_larson@mentor.com>
Date:   2010-04-20 13:51:35 -0700

    emit_env: clean up, iterate once
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

7	11	lib/bb/data.py

commit 9cb52edf9198fe6db735abbb61d0c4026c97a8d9
Author: Chris Larson <chris_larson@mentor.com>
Date:   2010-04-20 12:23:41 -0700

    Fix the debug level check in print_exception
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

1	1	bin/bitbake

commit fe36a726b9f930bbd6fd758c0aee78559e95f02b
Author: Chris Larson <chris_larson@mentor.com>
Date:   2010-04-20 11:53:31 -0700

    Don't try to expand non-string values
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

15	13	lib/bb/build.py
4	4	lib/bb/cache.py
1	1	lib/bb/cooker.py
1	1	lib/bb/parse/parse_py/BBHandler.py

commit 89b5351c656d263b0ce513cee043bc046d20a01e
Author: Chris Larson <chris_larson@mentor.com>
Date:   2010-04-12 18:56:25 -0700

    Make DataSmart inherit the MutableMapping ABC
    
    Provide __len__, __iter__, and the getitem/setitem/delitem methods, and its
    mixed in versions of keys(), values(), items(), etc will automatically behave,
    making the DataSmart act more like a real mapping.
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

20	14	lib/bb/data_smart.py

commit f936f1c0edf70860ea0f39ec1a500ba43b56f289
Author: Chris Larson <chris_larson@mentor.com>
Date:   2010-04-15 08:45:15 -0700

    Move the python version check into the python package
    
    This ensures the check is run for anyone using the package, including
    setup.py, though it's sad that it's necessary, since all it really wants is
    __version__.
    
    Ideally, we'd avoid the version check entirely in favor of checking for
    functionality, but that's rather difficult with language constructs like
    context managers, so this'll do for now.
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

1	5	bin/bitbake
4	0	lib/bb/__init__.py

commit 8f4b7b10f8740a41c085beeca5105f15204b0979
Author: Chris Larson <chris_larson@mentor.com>
Date:   2010-04-15 08:14:53 -0700

    Drop an unnecessary second python version check and use the less ugly sys.version_info
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

2	6	bin/bitbake

commit 6c89c332664a7789d02a701e7e530838ab778264
Author: Chris Larson <chris_larson@mentor.com>
Date:   2010-04-15 08:05:10 -0700

    Bump version to 1.11.0
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

1	1	bin/bitbake
1	1	lib/bb/__init__.py

commit bef07c6dc7e3b7b8c995d70ea429d141278b6eb6
Author: Chris Larson <chris_larson@mentor.com>
Date:   2010-04-15 08:04:35 -0700

    Bump version from 1.9.0 to 1.10.0
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

1	1	bin/bitbake
1	1	lib/bb/__init__.py

commit 87c15dfcbeb10e7cafb14726209e4954671b3dbe
Author: Chris Larson <chris_larson@mentor.com>
Date:   2010-04-15 07:49:54 -0700

    Move the python version check before the module imports, in case the modules utilize the newer python features
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

7	4	bin/bitbake

commit 1c6b31c649474b4c2b63ef9d9311e61de20bc8c2
Author: Chris Larson <chris_larson@mentor.com>
Date:   2010-04-14 14:38:18 -0700

    Search up the directory tree for bblayers.conf
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

12	2	lib/bb/cooker.py

commit 849dbd63244cbc4eaca0f1beedbb67baca024629
Author: Chris Larson <chris_larson@mentor.com>
Date:   2010-04-14 14:30:09 -0700

    Add a hack to avoid the req that all vars using LAYERDIR be immediately expanded
    
    See the comment in the code for details.
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

14	0	lib/bb/cooker.py

commit 5def1c8c31432968349f9b29d6333d7962260a8b
Author: Chris Larson <chris_larson@mentor.com>
Date:   2010-04-14 14:27:29 -0700

    Move the unset BBPATH sanity check after the bblayers processing
    
    This way we can fully utilize bblayers, you can do everything in bblayers.conf
    and avoid setting any environment variables at all.
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

3	0	lib/bb/cooker.py
1	4	lib/bb/parse/parse_py/ConfHandler.py

commit 83674a3a5564ecb1f9d2c9b2d5b1eeb3c31272ab
Author: Chris Larson <chris_larson@mentor.com>
Date:   2010-04-12 08:14:11 -0700

    Kill unnecessary usages of the types module
    
    types.IntType -> int
    types.StringType -> basestring
    ...
    
    Also moves our ImmutableTypes tuple into our own namespace.
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

12	11	lib/bb/COW.py
2	2	lib/bb/data.py
4	4	lib/bb/data_smart.py
1	2	lib/bb/fetch/__init__.py
3	3	lib/bb/utils.py

commit d39ab776e7ceaefc8361150151cf0892dcb70d9c
Author: Chris Larson <chris_larson@mentor.com>
Date:   2010-04-11 17:03:55 -0700

    Apply some 2to3 transforms that don't cause issues in 2.6
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

1	1	ez_setup.py
2	2	lib/bb/build.py
4	4	lib/bb/cache.py
190	190	lib/bb/daemonize.py
1	1	lib/bb/data.py
8	8	lib/bb/data_smart.py
2	2	lib/bb/fetch/cvs.py
13	13	lib/bb/fetch/perforce.py
1	1	lib/bb/fetch/wget.py
2	2	lib/bb/parse/__init__.py
1	1	lib/bb/parse/ast.py
3	3	lib/bb/parse/parse_py/BBHandler.py
1	1	lib/bb/parse/parse_py/ConfHandler.py
2	2	lib/bb/persist_data.py
5	6	lib/bb/runqueue.py
1	1	lib/bb/server/none.py
1	1	lib/bb/server/xmlrpc.py
2	2	lib/bb/taskdata.py
2	2	lib/bb/ui/crumbs/buildmanager.py
3	3	lib/bb/ui/crumbs/runningbuild.py
1	1	lib/bb/ui/depexp.py
1	1	lib/bb/ui/goggle.py
1	1	lib/bb/ui/knotty.py
1	1	lib/bb/ui/ncurses.py
3	3	lib/bb/ui/puccho.py
1	1	lib/bb/ui/uievent.py
16	16	lib/bb/utils.py

commit b3b314aade1f0a04e888361e1ac946e5195e1509
Author: Chris Larson <chris_larson@mentor.com>
Date:   2010-04-11 17:21:14 -0700

    Add __contains__ to COWDictMeta
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

3	0	lib/bb/COW.py

commit 188af3ef5fdb5cd86b74147bf5eafc085ac489be
Author: Chris Larson <chris_larson@mentor.com>
Date:   2010-04-11 16:39:24 -0700

    Drop unused bb.data.expandData function
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

0	16	lib/bb/data.py

commit 661fe59445161c5bc6a2e73b7fcbf9d20c492e27
Author: Chris Larson <chris_larson@mentor.com>
Date:   2010-04-10 22:07:43 -0700

    Ignore deprecation warnings for now
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

1	0	bin/bitbake

commit ddea2978cb969cf1381cfee5c055de0c9e56a4e3
Author: Chris Larson <chris_larson@mentor.com>
Date:   2010-04-10 22:05:02 -0700

    Switch some references to moved functions
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

4	3	lib/bb/build.py
2	1	lib/bb/fetch/local.py
3	2	lib/bb/fetch/wget.py
2	1	lib/bb/persist_data.py

commit 30ae747cc5c733512e417c61fca23c0cd15b0e44
Author: Chris Larson <chris_larson@mentor.com>
Date:   2010-04-10 22:04:52 -0700

    Add a missing import of print_function
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

1	0	lib/bb/fetch/__init__.py

commit ff2e28d0d9723ccd0e9dd635447b6d889cc9f597
Author: Chris Larson <chris_larson@mentor.com>
Date:   2010-04-09 19:46:14 -0700

    Apply the 2to3 print function transform
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

60	59	lib/bb/COW.py
17	16	lib/bb/cooker.py
2	2	lib/bb/event.py
1	1	lib/bb/fetch/__init__.py
1	1	lib/bb/fetch/git.py
1	1	lib/bb/fetch/ssh.py
6	6	lib/bb/msg.py
2	2	lib/bb/runqueue.py
2	2	lib/bb/server/xmlrpc.py
73	73	lib/bb/shell.py
2	2	lib/bb/ui/crumbs/buildmanager.py
9	9	lib/bb/ui/depexp.py
3	3	lib/bb/ui/goggle.py
22	22	lib/bb/ui/knotty.py
3	3	lib/bb/ui/ncurses.py
5	5	lib/bb/ui/puccho.py
11	11	lib/bb/utils.py
1	1	setup.py

commit 78f56049ba863b2e585b89db12b32697eb879bbc
Author: Chris Larson <chris_larson@mentor.com>
Date:   2010-04-09 16:51:09 -0700

    Deprecate the usage of certain objects via certain modules
    
    As an example, this displays a deprecation warning for the use of
    "bb.encodeurl" when you should be using "bb.fetch.encodeurl".  It includes a
    convenience function for this purpose.  It should be of use when moving
    objects between modules permanently, changing the API the user sees.
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

41	3	lib/bb/__init__.py
1	1	lib/bb/parse/parse_py/BBHandler.py

commit afe20ccdd25590a4cf56dd9f65aad91b9b61b801
Author: Chris Larson <chris_larson@mentor.com>
Date:   2010-04-09 14:01:11 -0700

    Exception handling fixups

2	2	lib/bb/data_smart.py

commit 20b6f2d1d2d4541e612e8cffbdf1ca4822a3e394
Author: Chris Larson <chris_larson@mentor.com>
Date:   2010-03-24 17:05:38 -0700

    Add some missing docstrings
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

3	0	lib/bb/data.py

commit b4983cc7bfe5300c1d2904f34fb03d4fb2f41d90
Author: Chris Larson <chris_larson@mentor.com>
Date:   2010-04-09 11:51:29 -0700

    Drop __all__ usage
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

0	30	lib/bb/__init__.py
0	2	lib/bb/parse/__init__.py
0	2	lib/bb/parse/parse_py/__init__.py

commit eb83df5bc7077685f314df01949cf06850e4693c
Author: Chris Larson <chris_larson@mentor.com>
Date:   2010-04-08 15:42:53 -0700

    Drop some unused functions
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

0	28	lib/bb/data.py

commit 5cc47a49518c69c94f8b78e9dda6d542ba17b1e8
Author: Chris Larson <chris_larson@mentor.com>
Date:   2010-04-08 15:16:17 -0700

    Drop some unused classes
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

0	1	lib/bb/__init__.py
0	3	lib/bb/data.py

commit b79ca5f1cc2d262de877047769ce25279ba26672
Author: Chris Larson <chris_larson@mentor.com>
Date:   2010-04-09 11:47:08 -0700

    Drop some unused vars
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

1	1	lib/bb/utils.py

commit 4fa052f426e3205ebace713eaa22deddc0420e8a
Author: Chris Larson <chris_larson@mentor.com>
Date:   2010-04-08 10:22:29 -0700

    Import fixups
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

1	1	bin/bitbake
2	1	lib/bb/__init__.py
0	1	lib/bb/build.py
3	4	lib/bb/cache.py
3	4	lib/bb/cooker.py
2	3	lib/bb/data_smart.py
1	1	lib/bb/event.py
1	2	lib/bb/fetch/repo.py
4	3	lib/bb/msg.py
1	0	lib/bb/parse/ast.py
3	3	lib/bb/parse/parse_py/BBHandler.py
1	1	lib/bb/parse/parse_py/ConfHandler.py
1	1	lib/bb/runqueue.py
2	2	lib/bb/shell.py
9	14	lib/bb/utils.py

commit 2caf134b43a44dad30af4fbe33033b3c58deee57
Author: Chris Larson <chris_larson@mentor.com>
Date:   2010-03-24 16:56:12 -0700

    Formatting cleanups
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

51	47	bin/bitbake
1	7	ez_setup.py
10	10	lib/bb/COW.py
5	6	lib/bb/build.py
14	14	lib/bb/cache.py
2	5	lib/bb/command.py
12	13	lib/bb/cooker.py
147	148	lib/bb/daemonize.py
17	18	lib/bb/data.py
22	24	lib/bb/data_smart.py
2	3	lib/bb/event.py
16	16	lib/bb/fetch/__init__.py
3	4	lib/bb/fetch/bzr.py
1	1	lib/bb/fetch/cvs.py
5	6	lib/bb/fetch/git.py
3	4	lib/bb/fetch/hg.py
3	3	lib/bb/fetch/local.py
5	5	lib/bb/fetch/osc.py
3	5	lib/bb/fetch/perforce.py
1	1	lib/bb/fetch/svn.py
1	1	lib/bb/msg.py
1	1	lib/bb/parse/ast.py
1	1	lib/bb/parse/parse_py/BBHandler.py
1	1	lib/bb/parse/parse_py/ConfHandler.py
5	8	lib/bb/persist_data.py
8	8	lib/bb/providers.py
46	47	lib/bb/runqueue.py
0	1	lib/bb/server/none.py
4	5	lib/bb/server/xmlrpc.py
4	4	lib/bb/shell.py
11	13	lib/bb/taskdata.py
0	1	lib/bb/ui/__init__.py
0	1	lib/bb/ui/crumbs/__init__.py
19	20	lib/bb/ui/crumbs/buildmanager.py
11	13	lib/bb/ui/crumbs/runningbuild.py
1	2	lib/bb/ui/depexp.py
6	7	lib/bb/ui/goggle.py
1	1	lib/bb/ui/knotty.py
3	4	lib/bb/ui/ncurses.py
55	55	lib/bb/ui/puccho.py
2	3	lib/bb/ui/uievent.py
93	92	lib/bb/utils.py

commit 297305b3742323d09d9ca58e958c4f18e945a148
Author: Chris Larson <chris_larson@mentor.com>
Date:   2010-04-09 15:56:14 -0700

    Don't run metadata event handlers for bb.msg events
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

4	0	lib/bb/event.py

commit 03a6c26f8da226f442c3cab557e4733f7cd6eeac
Author: Chris Larson <chris_larson@mentor.com>
Date:   2010-04-09 17:11:03 -0700

    Stop using functions via 'bb' that were moved from there to other modules
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

5	5	lib/bb/fetch/__init__.py
2	1	lib/bb/parse/__init__.py
2	1	lib/bb/parse/parse_py/ConfHandler.py

commit 6ccc01a1a72ec354de52fef2bf5620384b8461ce
Author: Chris Larson <chris_larson@mentor.com>
Date:   2010-04-09 19:34:07 -0700

    Add a function to get the debug level, without poking into debug_levels manually
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

3	0	lib/bb/msg.py

commit 8441fab6f27191fcc3c153a10753871e6aef08b1
Author: Chris Larson <chris_larson@mentor.com>
Date:   2010-04-09 19:33:04 -0700

    Fix invalid logging domain warning
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

3	3	lib/bb/msg.py

commit 85c000cc7db47cfd489cf282c58db2dab0d87908
Author: Chris Larson <chris_larson@mentor.com>
Date:   2010-04-09 19:29:56 -0700

    Bump minimum python version check to 2.6.
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

2	2	bin/bitbake

commit bef33dfc36713d8c93e38e63ddac2e4f9858e787
Author: Chris Larson <chris_larson@mentor.com>
Date:   2010-04-09 19:27:21 -0700

    Make the default domain a proper domain, not a string
    
    This lets you do -l Default on the commandline to bump the debug level of
    messages with no domain, without bumping the level of everything else.
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

29	26	lib/bb/msg.py

commit db95af590f742c8186e84046ad9704fae1733720
Author: Chris Larson <chris_larson@mentor.com>
Date:   2010-04-09 19:22:52 -0700

    Implement bb.msg.domain as a named tuple, drop the Enum class
    
    Also fixes some bb.msg references from within bb.msg.
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

21	19	lib/bb/msg.py
0	40	lib/bb/utils.py

commit 90c68238cb62afa1c39e1d4fff1f418c9ec047e5
Author: Chris Larson <chris_larson@mentor.com>
Date:   2010-04-09 17:55:11 -0700

    Fix an error in the ncurses UI
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

3	3	lib/bb/ui/ncurses.py

commit 648415a562d92109c4945cb3cc98ed2ec44667a7
Author: Chris Larson <chris_larson@mentor.com>
Date:   2010-04-09 15:55:55 -0700

    Display python warnings via bb.msg
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

18	2	bin/bitbake

commit 17c414d0c050c42d4beb3f1dd84573020aacb392
Author: Chris Larson <chris_larson@mentor.com>
Date:   2010-04-09 15:55:17 -0700

    Immediately display messages if no UI handlers are installed yet
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

12	3	lib/bb/msg.py

commit 7d00bab300961431f9960cf6759966f608580bc0
Author: Chris Larson <chris_larson@mentor.com>
Date:   2010-04-09 13:25:58 -0700

    Use __import__ for the ui rather than exec
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

6	6	bin/bitbake

commit 50b7b817d418532583da3bad62a36fcefe3637a2
Author: Chris Larson <chris_larson@mentor.com>
Date:   2010-04-09 13:25:34 -0700

    Fix the task event handling in the ncurses UI
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

1	1	lib/bb/ui/ncurses.py

commit 92a2e2e90981c0615171abe03645a772d84f6986
Author: Chris Larson <chris_larson@mentor.com>
Date:   2010-04-09 12:33:29 -0700

    Ensure we always utilize the correct messaging domains
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

1	1	lib/bb/cache.py
5	5	lib/bb/cooker.py
3	3	lib/bb/fetch/perforce.py
1	1	lib/bb/parse/parse_py/ConfHandler.py
1	1	lib/bb/runqueue.py
3	3	lib/bb/utils.py

commit ed35b30f8e09b0bfc15102fa6483c55d6b7d61de
Author: Chris Larson <chris_larson@mentor.com>
Date:   2010-04-08 16:30:52 -0700

    bb.event: NotHandled and Handled are on the way out
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

1	3	doc/manual/usermanual.xml
6	2	lib/bb/event.py

commit 47449b2fc433e5725839ca4f7e9bca931a475838
Author: Chris Larson <chris_larson@mentor.com>
Date:   2010-04-08 16:01:14 -0700

    Rename the finalise method for consistency
    
    Apparently the finalise spelling is becoming less common in British English.
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

4	4	lib/bb/parse/ast.py

commit ff801397785567cb84b3615de86bff764d65decf
Author: Chris Larson <chris_larson@mentor.com>
Date:   2010-04-08 15:43:47 -0700

    Move update_data into the DataSmart class as a finalize() method
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

2	136	lib/bb/data.py
65	0	lib/bb/data_smart.py

commit 69a3e4895b88110fd3a25167aa16cf7c00463175
Author: Chris Larson <chris_larson@mentor.com>
Date:   2010-04-08 15:11:28 -0700

    Initialize pkgs_to_build in the BBConfiguration constructor
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

1	1	bin/bitbake

commit 3a11c2807972bbbddffde2fa67fc380d159da467
Author: Chris Larson <chris_larson@mentor.com>
Date:   2010-04-09 11:49:36 -0700

    Drop doctest, as we aren't utilizing it
    
    We should add back in some proper unit testing.  Doctest is rather limited,
    and we haven't actually made use of it since the original implementation of
    the datastore when the project started, as far as I'm aware.
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

0	6	lib/bb/__init__.py
13	150	lib/bb/data.py
0	30	lib/bb/fetch/__init__.py
1	19	lib/bb/utils.py

commit 1e83e9200fb5d477ba6fc0aa722dab0904412351
Author: Chris Larson <chris_larson@mentor.com>
Date:   2010-04-08 16:02:52 -0700

    Add bin/bitbakec to .gitignore
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

1	0	.gitignore

commit f1c7fe9fc12161ceb3fe201cde370b929b208729
Author: Enrico Scholz <enrico.scholz@informatik.tu-chemnitz.de>
Date:   2010-03-21 23:02:56 +0100

    Made '-b' work with BBCLASSEXTEND
    
    When BBCLASSEXTEND is set, '-b' builds usually failed with messages
    like
    
    | ERROR: Parsing error data_fn virtual:native:<recipe>.bb and fn
    <recipe>.bb don't match
    |
    |   File ".../bb/providers.py", line 47, in sortPriorities
    |     priority = dataCache.bbfile_priority[f]
    | KeyError: 'virtual:native:<recipe>.bb'
    
    This patch fixes it and allows to specify the alternative class in a
    way like
    
    | ./bitbake -b virtual:native:<recipe>.bb
    
    This patch was written to be so minimal as possible; variables should be
    probably renamed to reflect their new meaning.
    
    Signed-off-by: Enrico Scholz <enrico.scholz@informatik.tu-chemnitz.de>

1	0	lib/bb/cache.py
10	4	lib/bb/cooker.py

commit c4e31d7fe1d15a1e3ef2a453e7c7812d403d22cb
Author: Chris Larson <chris_larson@mentor.com>
Date:   2010-04-06 15:29:19 -0700

    Resurrect the old bb.vercmp as bb.utils.vercmp, and its deps
    
    This is just for compatibility.  We may drop it in the future, or rewrite it,
    as it's not particularly pythonic.
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

1	1	lib/bb/__init__.py
143	0	lib/bb/utils.py

commit bf58d43444642d31293a341ce72292003ca5c162
Author: Chris Larson <clarson@kergoth.com>
Date:   2010-04-06 08:52:54 -0700

    Pass the config metadata into the Cache constructor rather than the cooker
    
    Cache only uses the config metadata from the cooker, no need for the cooker itself.
    
    Signed-off-by: Chris Larson <clarson@kergoth.com>

4	4	lib/bb/cache.py

commit 0c2ed40277e157406ea25c858f14c3cebb73c21b
Author: Chris Larson <chris_larson@mentor.com>
Date:   2010-03-31 09:14:18 -0700

    Resurrect merged anonfunc execution
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

9	4	lib/bb/parse/ast.py

commit 5ead16f14f996bcbb2fb14277b8ce5a9317b8160
Author: Chris Larson <chris_larson@mentor.com>
Date:   2010-03-31 08:52:41 -0700

    Add & utilize a simple_exec utility function
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

1	1	lib/bb/event.py
3	0	lib/bb/utils.py

commit 424d7e267b009cc19b8503eadab782736d9597d0
Author: Chris Larson <chris_larson@mentor.com>
Date:   2010-03-30 20:06:07 -0700

    Consolidate the exec/eval bits, switch anonfunc to better_exec, etc
    
    The methodpool, ${@} expansions, anonymous python functions, event handlers
    now all run with the same global context, ensuring a consistent environment
    for them.  Added a bb.utils.better_eval function which does an eval() with the
    same globals as better_exec.
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

3	5	lib/bb/build.py
1	7	lib/bb/data_smart.py
7	2	lib/bb/event.py
5	5	lib/bb/methodpool.py
6	30	lib/bb/parse/ast.py
14	4	lib/bb/utils.py

commit 97da0cebbaf4dd1b46e58bd2e80cab6c007ae7c9
Author: Chris Larson <chris_larson@mentor.com>
Date:   2010-03-30 16:59:46 -0700

    Pass an empty locals dict in expansion, since list comprehensions apparently leak their '_' helper variable
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

2	2	lib/bb/data_smart.py

commit 49534d928a37e0804ca84eed186cd22363023b2e
Author: Chris Larson <chris_larson@mentor.com>
Date:   2010-03-30 16:21:23 -0700

    Two minor changes to the way python snippet expansion happens
    
    - Use a single dictionary for the context, both global & local, since for some
      reason it chokes wanting a global "d" rather than a local in the metadata.
    - First compile the string into a code object before running eval, so we can
      include the variable name in an evaluation error.
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

8	8	lib/bb/data_smart.py

commit b32f9759550dae02ca6e618050059a8deac6c650
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2010-03-25 17:33:41 +0000

    bitbake/event.py: Run class eventhandlers in the task context but ensure UI handlers run in the server context
    
    (From Poky rev: d3d36d9f440288fa8bc0901ebefe875fc92409c4)
    
    Signed-off-by: Richard Purdie <rpurdie@linux.intel.com>

17	8	lib/bb/event.py

commit acc27c3988b58e5a4709d547c03936c9846dcc08
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2010-03-25 17:31:23 +0000

    bitbake/cooker.py: Finishing the command needs to happen after the BuildCompleted event else the cooker can shutdown first
    
    (From Poky rev: 871f731e5733c27664c4a341cf4b6b0770cb1909)
    
    Signed-off-by: Richard Purdie <rpurdie@linux.intel.com>

2	2	lib/bb/cooker.py

commit fea0acdaf68430e6b34f97fdaac3d0c8fe13c872
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2010-03-25 17:28:34 +0000

    cache.py: Bump the cache version after the BBVERSIONS update
    
    (From Poky rev: fb245be03d8e3327165033045245f5f853c0b0d4)
    
    Signed-off-by: Richard Purdie <rpurdie@linux.intel.com>

1	1	lib/bb/cache.py

commit 69374497b557a5e99ffc7cbe5e075d63e2d9cfaa
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2010-03-25 15:46:18 +0000

    bb.manifest: Drop, its unused and obsolete. No point in having dead code around
    
    Signed-off-by: Richard Purdie <rpurdie@linux.intel.com>

0	144	lib/bb/manifest.py

commit b1b06133da4ca379a60775552d481f7fbf77e999
Author: Chris Larson <clarson@mvista.com>
Date:   2009-12-06 19:52:52 +0000

    BBFILES: use a set to remove duplicates when collecting.
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

4	4	lib/bb/cooker.py

commit 4b2a268ce8dad63d21619c1b9acc1de86d222d93
Author: Chris Larson <chris_larson@mentor.com>
Date:   2010-03-24 19:00:12 -0700

    bb/command was importing bb and accessing some of its own classes indirectly as bb.command.<class>
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

5	3	lib/bb/command.py

commit 3eb01a20cbbb2e7a2f6278089bcc9bb70021738f
Author: Chris Larson <chris_larson@mentor.com>
Date:   2010-03-24 18:59:24 -0700

    Why is bb/__init__.py importing bb?
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

2	1	lib/bb/__init__.py

commit 6a73dda60f50e9b3e5513795d1ec7207d1446de2
Author: Chris Larson <chris_larson@mentor.com>
Date:   2010-03-24 18:58:59 -0700

    data_smart: be explicit about what we make available to eval'd python code
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

7	2	lib/bb/data_smart.py

commit e1e4ccf203e38070eeafd31a622671996cff61a1
Author: Chris Larson <chris_larson@mentor.com>
Date:   2010-03-24 17:48:49 -0700

    Fix 7 references to undefined variables, as spotted by pyflakes
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

2	2	lib/bb/fetch/__init__.py
1	1	lib/bb/runqueue.py
1	1	lib/bb/taskdata.py
3	4	lib/bb/utils.py

commit 62983ad9b151ee8d51e8cf9a31c736c7813edf16
Author: Chris Larson <chris_larson@mentor.com>
Date:   2010-03-24 09:21:53 -0700

    bb.utils: remove old portage remnants
    
    The following utility functions were removed.  Note that in this particular
    case we're bypassing a proper deprecation process, as these functions are
    clearly not utilized, are obvious remnants of old ways of doing things, and
    some of which do not even function properly.
    
    - tokenize
    - evaluate
    - flatten
    - relparse
    
    - ververify
    - isjustname
    - isspecific
    - catpkgsplit
    - pkgsplit
    - pkgcmp
    - dep_parenreduce
    - dep_opconvert
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

1	17	lib/bb/__init__.py
0	571	lib/bb/utils.py

commit 7af05cba87ec9f3ea5e53689b3d9f0a63784d1b5
Author: Chris Larson <chris_larson@mentor.com>
Date:   2010-03-23 20:33:19 -0700

    bb.utils: utilize string.letters and string.digits
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

3	5	lib/bb/utils.py

commit 4725d83f532cad96168aa9affdedb33b6fc897b7
Author: Chris Larson <chris_larson@mentor.com>
Date:   2010-03-24 10:31:06 -0700

    bb.which: fix broken direction/reverse argument
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

1	1	lib/bb/utils.py

commit 5593de13a18792e36d15dfd2a9579b36284e4d67
Author: Chris Larson <chris_larson@mentor.com>
Date:   2010-03-23 20:24:32 -0700

    crumbs: fix hassattr typo
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

1	1	lib/bb/ui/crumbs/runningbuild.py

commit 4ee9a56e16f1eb3c1649eaa3127b09ab0e93d1ec
Author: Chris Larson <chris_larson@mentor.com>
Date:   2010-03-19 17:22:19 -0700

    Implement BBVERSIONS
    
    This implements a feature similar to BBCLASSEXTEND, but for generating
    multiple versions of a given recipe.  For example: BBVERSIONS = "1.0 2.0 git".
    
    In addition to the above, one can utilize [a-b] style patterns, and can have a
    :<basever> postfix, which allows you to essentially name the range of
    versions.  Both the current version and the basever end up in OVERRIDES, and
    the basever gets placed into the BPV variable.  The default BPV, if none is
    specified, is the original PV of the recipe, before bbversions processing.
    
    In this way, you can do things like:
    BBVERSIONS = "1.0.[0-6]:1.0.0+
                  1.0.[7-9]:1.0.7+"
    
    SRC_URI_append_1.0.7+ = "file://some_extra_patch.patch;patch=1"
    
    Or you can create a recipe per range, and name the recipe file as such: nano_1.0.7+.bb.
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

13	1	doc/manual/usermanual.xml
5	5	lib/bb/cache.py
114	0	lib/bb/parse/ast.py
2	24	lib/bb/parse/parse_py/BBHandler.py

commit b2486ec57c6a7adf09d0960fdf6727881b324d2f
Author: Bernhard Reutner-Fischer <rep.dot.nop@gmail.com>
Date:   2010-03-13 12:01:38 +0100

    utils: improve wording of error message
    
    Signed-off-by: Bernhard Reutner-Fischer <rep.dot.nop@gmail.com>
    Signed-off-by: Chris Larson <clarson@kergoth.com>

1	1	lib/bb/utils.py

commit d612d22b073f68b8cf1bb7344e0487820040d80d
Author: Enrico Scholz <enrico.scholz@informatik.tu-chemnitz.de>
Date:   2010-03-21 23:25:25 +0100

    Expand PREMIRRORS
    
    When not expanding PREMIRRORS, the functions fails/does not work correctly
    when PREMIRRORS is not a plain string (e.g. contains ${...} or a ${@...}
    statements).
    
    Signed-off-by: Enrico Scholz <enrico.scholz@informatik.tu-chemnitz.de>
    Signed-off-by: Chris Larson <clarson@kergoth.com>

1	1	lib/bb/fetch/__init__.py

commit 879229d12c2830dba9e0cb794e61e3c698b8dcc7
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2010-03-22 17:58:27 +0000

    usermanual.xml: Add documentation on bblayers.conf
    
    Signed-off-by: Richard Purdie <rpurdie@linux.intel.com>

3	1	doc/manual/usermanual.xml

commit 6034a2d8460aeceacadbf3eeb7bfe956b215555c
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2010-03-22 17:48:31 +0000

    cooker.py: Add support for a bblayers.conf file
    
    (From Poky rev: 666c753)
    
    Signed-off-by: Richard Purdie <rpurdie@linux.intel.com>

25	8	lib/bb/cooker.py

commit 060ef3d957615b7eb1209dc0d01ebeb53f8c4edc
Author: Bernhard Reutner-Fischer <rep.dot.nop@gmail.com>
Date:   2010-03-01 09:20:29 +0100

    cooker: bail out early if no files to build
    
    This prevents a misleading backtrace:
    ERROR: no files to build.
    Command execution failed: Traceback (most recent call last):
      File ".../bitbake/build/lib/bb/command.py", line 83, in runAsyncCommand
        self.cooker.updateCache()
      File ".../bitbake/build/lib/bb/cooker.py", line 779, in updateCache
        if not self.parser.parse_next():
      File ".../bitbake/build/lib/bb/cooker.py", line 969, in parse_next
        cooker.bb_cache.sync()
    UnboundLocalError: local variable 'cooker' referenced before assignment
    
    Signed-off-by: Bernhard Reutner-Fischer <rep.dot.nop@gmail.com>
    Signed-off-by: Chris Larson <clarson@kergoth.com>

2	1	lib/bb/cooker.py

commit 3062e96181fe845cfd286990b0216888ddd3d228
Author: Chris Larson <clarson@kergoth.com>
Date:   2010-03-01 18:45:15 -0500

    Fix issues with BBCLASSEXTEND set by anonymous python, and rename some variables to improve code clarity
    
    Signed-off-by: Chris Larson <clarson@kergoth.com>

16	14	lib/bb/parse/parse_py/BBHandler.py

commit 74f50fbca194c9c72bd2a540f4b9de458cb08e2d
Author: Chris Larson <chris_larson@mentor.com>
Date:   2010-02-25 09:42:28 -0700

    Implement ??= operator
    
    ??= is a lazy, conditional assignment.  Whereas a ?= immediately assigns to
    the variable if the variable has not yet been set, ??= does not apply the
    default assignment until the end of the parse.  As a result, the final ??= for
    a given variable is used, as opposed to the first as in ?=.
    
    Note that the initial implementation relies upon finalise() to apply the
    defaults, so a "bitbake -e" without specifying a recipe will not show the
    defaults as set by ??=.  Moving application of the default into getVar adds
    too large a performance hit.  We may want to revisit this later.
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

7	1	doc/manual/usermanual.xml
11	0	lib/bb/parse/ast.py
1	1	lib/bb/parse/parse_py/ConfHandler.py

commit 5b6ccb16c6e71e23dac6920cd2df994d67c2587b
Author: Chris Larson <clarson@mvista.com>
Date:   2009-06-11 13:10:04 -0700

    Avoid unnecessary calls to keys() when iterating over dictionaries.
    
    dict objects provide an __iter__ method for the iteration which gives you the
    keys, so calling keys directly is unnecessary, and isn't really a best
    practice.  The only time you really need to call the keys is if there's a
    danger of the dict changing out from underneith you, either due to external
    forces or due to modification of the iterable in the loop.  Iterations over
    os.environ are apparently subject to such changes, so they must continue to
    use keys().
    
    As an aside, also switches a couple spots to using sorted() rather than
    creating a temporary list with keys() and sorting that.
    
    Signed-off-by: Chris Larson <clarson@mvista.com>

3	6	lib/bb/cooker.py
2	2	lib/bb/data_smart.py
2	2	lib/bb/fetch/__init__.py
1	1	lib/bb/manifest.py
4	8	lib/bb/providers.py
8	10	lib/bb/shell.py

commit 446cc0cebd4daff7f849717f4cb89ac1b4c6b755
Author: Bernhard Reutner-Fischer <rep.dot.nop@gmail.com>
Date:   2010-02-25 14:21:21 +0100

    knotty: tweak failure phrase
    
    ..to make copy and paste of the logfile easier.
    
    Signed-off-by: Bernhard Reutner-Fischer <rep.dot.nop@gmail.com>
    Signed-off-by: Chris Larson <clarson@kergoth.com>

1	1	lib/bb/ui/knotty.py

commit 0bbcbe3548f39ca46c5aa3bf1a8681026e51cbf0
Author: Chris Larson <chris_larson@mentor.com>
Date:   2010-02-24 09:32:26 -0700

    Fix ud.basecmd error introduced by the FETCHCMD_git commit
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

2	1	lib/bb/fetch/git.py

commit f68406e864c9837feb56cbec993b620481445cc2
Author: Tom Rini <tom_rini@mentor.com>
Date:   2010-02-24 07:19:24 -0700

    Add initial 'repo' fetcher
    
    Signed-off-by: Tom Rini <tom_rini@mentor.com>
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

2	0	lib/bb/fetch/__init__.py
106	0	lib/bb/fetch/repo.py

commit c7d038d404afaf4ce3735af5134163759da6f6ef
Author: Chris Larson <chris_larson@mentor.com>
Date:   2010-02-23 11:55:43 -0700

    Re-getVar BBCLASSEXTEND after finalise()
    
    This ensures that an anonymous python function is able to manipulate the
    BBCLASSEXTEND contents, and, therefore, amend.inc files are able to add to it.
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

2	3	lib/bb/parse/parse_py/BBHandler.py

commit 641e6cf3ec3ab4d26929cf4d2a3704ff07eed4d6
Author: Chris Larson <chris_larson@mentor.com>
Date:   2010-02-19 16:26:33 -0700

    Error early if BBPATH is unset, rather than falling back to share/bitbake
    
    Better to error as early as possible rather than experience strange behavior
    resulting from the use of the largely useless stock bitbake.conf/base.bbclass.
    
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

1	5	lib/bb/parse/parse_py/ConfHandler.py

commit 989af2c20c5bb151a8d968696b7f6e48145b1b6b
Author: Chris Larson <clarson@mvista.com>
Date:   2009-07-22 11:19:02 -0700

    Add PERSISTENT_DIR to bitbake.conf, as bb.fetch requires it or CACHE.
    
    Signed-off-by: Chris Larson <clarson@mvista.com>

1	0	conf/bitbake.conf

commit 79b93e6929c5feeb1ad05bd17f589c69f00b77f6
Author: Chris Larson <clarson@mvista.com>
Date:   2009-07-19 21:57:09 -0700

    Kill unused projectdir in bb package.
    
    Signed-off-by: Chris Larson <clarson@mvista.com>

1	12	lib/bb/__init__.py

commit 686288444d22091dee66e20ec49b9c53f8c980b7
Author: Chris Larson <clarson@kergoth.com>
Date:   2009-07-19 10:07:00 -0700

    Fix msg usage in the moved utility functions.
    
    Signed-off-by: Chris Larson <clarson@kergoth.com>

15	15	lib/bb/utils.py

commit ff720ec59b30671c951dbf3b96df10ef56b8b505
Author: Chris Larson <clarson@kergoth.com>
Date:   2009-07-19 10:05:52 -0700

    Move most utility functions from bb into bb.utils.
    
    Signed-off-by: Chris Larson <clarson@kergoth.com>

5	909	lib/bb/__init__.py
759	0	lib/bb/utils.py

commit b66c129edc7d78fed9d41b0c634744ec81931b21
Author: Chris Larson <clarson@kergoth.com>
Date:   2009-07-19 09:54:46 -0700

    Move compat imports in the bb package to avoid circular dep issues.
    
    Signed-off-by: Chris Larson <clarson@kergoth.com>

4	5	lib/bb/__init__.py

commit 867d36f9afce2d298874ac7563e5b3852ef04659
Author: Chris Larson <clarson@kergoth.com>
Date:   2009-07-19 09:51:29 -0700

    Move encodeurl, decodeurl into bb.fetch.
    
    Signed-off-by: Chris Larson <clarson@kergoth.com>

1	108	lib/bb/__init__.py
94	0	lib/bb/fetch/__init__.py

commit e616483b237dafff7f90ba1c09e9ee7c383a2e47
Author: Chris Larson <clarson@kergoth.com>
Date:   2009-07-19 09:49:36 -0700

    Move MalformedUrl, VarExpandError into appropriate modules.
    
    Signed-off-by: Chris Larson <clarson@kergoth.com>

3	5	lib/bb/__init__.py
3	0	lib/bb/data.py
3	0	lib/bb/fetch/__init__.py

commit f3afb79ecac30d973a3c62ff6baf28d8b7388a24
Author: Martyn Welch <martyn.welch@ge.com>
Date:   2010-01-26 14:35:51 +0000

    Add FETCHCMD parameter for git
    
    The Git fetcher currently hardwires the git command to "git". Allow the
    path and any additional wrappers to the Git command to be provided via
    FETCHCMD functionality, as with some of the other fetchers.
    
    If FETCHCMD_git is not define in bitbake.conf, the fetcher defaults to "git".
    
    Signed-off-by: Malcolm Crossley <malcolm.crossley@ge.com>
    Signed-off-by: Martyn Welch <martyn.welch@ge.com>
    Signed-off-by: Chris Larson <chris_larson@mentor.com>

13	10	lib/bb/fetch/git.py

commit a19d5a0da25898d73da2a7c9d31fdbb554cc10f9
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2010-02-16 15:38:55 +0000

    Revert "providers.py: sort eligible providers by DEFAULT_PREFERENCE"
    
    This breaks preferred providers functionality
    
    This reverts commit ee9afccf33b220a21b74fab279925eeb4771249b.

0	2	lib/bb/providers.py

commit 80d278fdae84413c8542f63fc3b93a125b8b7f62
Author: Joshua Lock <josh@linux.intel.com>
Date:   2010-02-05 12:41:08 +0000

    fix invalid method and logic
    
    The previous bitbake change included an invalid method call and inverted logic.
    
    (From Poky rev: 52cbb074235fc7b1bcd94bc1147c4607612fe701)
    
    Signed-off-by: Joshua Lock <josh@linux.intel.com>
    Signed-off-by: Richard Purdie <rpurdie@linux.intel.com>

3	3	lib/bb/fetch/__init__.py

commit f084f2aaea012ffddba924610d0954f743993c17
Author: Joshua Lock <josh@linux.intel.com>
Date:   2010-02-05 12:08:15 +0000

    Test premirrors and mirrors in checkstatus()
    
    checkstatus() is used to ensure we can fetch a copy of each file, so it makes
    sense to also test PREMIRRORS and MIRRORS in the method.
    
    This patch adds calls to try_mirrors() to the Fetch.checkstatus() method and
    changes the try_mirrors() method to take a check argument, which is False by
    default. When check is True try_mirrors() will call a fetchers checkstatus()
    with the replaced uri.
    
    (From Poky rev: ec92133d6fc049b4b666d670d3ac263de5a1d103)
    
    Signed-off-by: Joshua Lock <josh@linux.intel.com>
    Signed-off-by: Richard Purdie <rpurdie@linux.intel.com>

18	4	lib/bb/fetch/__init__.py

commit 1d65af155751885cf2a84df586b8a28e21cd9078
Author: Joshua Lock <josh@linux.intel.com>
Date:   2010-02-04 14:08:34 +0000

    Fix try_mirrors() logic, was only trying the first mirror.
    
    The logic in try_mirrors() was buggy such that only the first entry in the
    mirrors list was tried.
    
    This patch fixes this. Thanks to Richard for the review.
    
    (From Poky rev: c9fd126f64ec57cc0799ad03f32f509b5266e0ff)
    
    Signed-off-by: Joshua Lock <josh@linux.intel.com>
    Signed-off-by: Richard Purdie <rpurdie@linux.intel.com>

2	1	lib/bb/fetch/__init__.py

commit 3a97876c379fd5f5f0822b75834349323e8ce09a
Author: Joshua Lock <josh@linux.intel.com>
Date:   2010-02-03 16:08:09 +0000

    if PREMIRRORS set test for local file in FetchData.setup_localpath
    
    When we are using PREMIRRORS it's possible a mirror in the local namespace
    (some filesystem path, i.e. an NFS share) provides read-only files.
    This is a perfectly valid scenario so this patch fixes bitbake so that for
    such a scenario locapath is set to the files path rather than some child
    of DL_DIR.
    
    (From Poky rev: afe12428a9229b9a96f9e98c86d95786689aaf79)
    
    Signed-off-by: Joshua Lock <josh@linux.intel.com>
    Signed-off-by: Richard Purdie <rpurdie@linux.intel.com>

22	8	lib/bb/fetch/__init__.py

commit bfc1926034d3eb545c6683ea7ef2db79927a0838
Author: Joshua Lock <josh@linux.intel.com>
Date:   2010-02-02 17:57:20 +0000

    Enhance the fetchers' support for local mirrors
    
    Modify the try_mirrors() function to return the localpath of the fetched file
    and update the data dictionary to reflect this.
    Secondly the metadata files, lock and md5, should always be stored relative to
    the ${DL_DIR} as it is possible that the localpath is a read-only directory,
    for example in the scenario where there is a read-only file:// mirror.
    
    (From Poky rev: b571168ac7716a8ee4bee98ba5c3b53f70a13118)
    
    Signed-off-by: Joshua Lock <josh@linux.intel.com>
    Signed-off-by: Richard Purdie <rpurdie@linux.intel.com>

15	7	lib/bb/fetch/__init__.py

commit 11375c3f74511ce59ad5a625bfda4121a8714345
Author: Joshua Lock <josh@linux.intel.com>
Date:   2010-02-01 16:56:16 +0000

    unify mirror support and make it independant of the fetcher
    
    This patch serves two purposes. Firstly it unifies the concept of mirrors into
    PREMIRRORS and MIRRORS. PREMIRRORS are tried before the SRC_URI defined in the
    recipe whereas MIRRORS are tried only if that fails.
    The tarball stash was conceptually inline with a PREMIRROR only with special
    handling within the wget fetcher and therefore only worked with certain
    fetch types.
    Secondly the patch removes the need for individual fetch implementations to
    worry about mirror handling.
    
    With this patch, the base fetch implementation will first try to use a
    PREMIRROR to fetch the desired object, if this fails the native fetch method
    for the object will be tried and if this fails will try to fetch a copy from
    one of the MIRRORS.
    
    (From Poky rev: 0737552c1de18c64db8a5a52248a3e7b217f30aa)
    
    Signed-off-by: Joshua Lock <josh@linux.intel.com>
    Signed-off-by: Richard Purdie <rpurdie@linux.intel.com>

50	44	lib/bb/fetch/__init__.py
0	5	lib/bb/fetch/bzr.py
0	5	lib/bb/fetch/cvs.py
3	6	lib/bb/fetch/git.py
0	5	lib/bb/fetch/hg.py
0	5	lib/bb/fetch/osc.py
0	5	lib/bb/fetch/perforce.py
0	3	lib/bb/fetch/svk.py
0	5	lib/bb/fetch/svn.py
0	16	lib/bb/fetch/wget.py

commit 57cec31f4d5918ce219a1586746fe1301492edb9
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2010-02-12 13:50:19 +0000

    utils.py: Don't error if an exported environment variable is unset (i.e. None)
    
    (From Poky rev: 62c103ce0e154ee5bf6183987adc90fc6df154c6)
    
    Signed-off-by: Richard Purdie <rpurdie@linux.intel.com>

1	1	lib/bb/utils.py

commit 8c8c2e6665b26c3e3c83f6e97f4b7e95a0e8e3f8
Author: Holger Freyther <ich@tamarin.(none)>
Date:   2009-05-17 05:59:06 +0200

    [cache] copy instead of deepcopy in sync
    
    We only intend to modify the dict, no need to copy all
    elements.

1	1	lib/bb/cache.py

commit 7ea31b2842b45ffe1ca688f55207f8676442a108
Author: Chris Larson <clarson@mvista.com>
Date:   2009-07-21 12:00:29 -0700

    [parse] In ast, make StatementGroup inherit list, and add a AstNode base class.
    
    Signed-off-by: Chris Larson <clarson@mvista.com>

13	22	lib/bb/parse/ast.py

commit 3cd06ed487ee0617892f154cff461379a323a1fb
Author: Chris Larson <clarson@kergoth.com>
Date:   2009-07-18 22:36:32 -0700

    [parse] Use bb.which in resolve_file
    
    Signed-off-by: Chris Larson <clarson@kergoth.com>

3	7	lib/bb/parse/__init__.py

commit 9c8bd8f6e4817d567fad1ce78238563dd426a835
Author: Holger Freyther <ich@tamarin.(none)>
Date:   2009-05-19 13:59:50 +0200

    [parser] Make resolve_file only resolve the path
    
    Do not attempt to open the file in the resolve_file method
    (a lot like bb.which... maybe bb.which can be used). This way
    we don't need to open/close a file which we have already parsed.

6	12	lib/bb/parse/__init__.py
4	3	lib/bb/parse/parse_py/BBHandler.py
2	1	lib/bb/parse/parse_py/ConfHandler.py

commit 8cc26d4bf4b854bd731ce4798832903102f4baf5
Author: Holger Freyther <ich@tamarin.(none)>
Date:   2009-05-19 13:53:12 +0200

    [parser] Cache parsed .inc and .bbclass files for a parse speedup
    
    Have a growing dict with .inc and .bbclass'es. This avoids to reparse
    files we have already seen.

23	14	lib/bb/parse/parse_py/BBHandler.py

commit e838f398e20afe4d202bc0b5881272004aeec4dd
Author: Holger Freyther <ich@tamarin.(none)>
Date:   2009-05-19 13:22:30 +0200

    [parser] prepare to cache some .bbcclass and .inc files
    
    Our parser is shit but instead to replace it now we will see
    how long we can drive the wave by caching parsed files. This
    will not go through the feeder again but we can just reevaluate
    the StatementGroup.

18	11	lib/bb/parse/parse_py/BBHandler.py

commit 9e9d10bf332609d3957f08b440a09453890d214d
Author: Holger Freyther <ich@tamarin.(none)>
Date:   2009-05-19 12:10:37 +0200

    [parser] Remove the "data" from feeder, evaluate after parsing a file
    
    Evaluate the statements after having parsed one file. This is
    referred to as "entwirren" and we can remove the direct evaluation
    and postpone a bit, in the future we can use a cached copy instead
    of parsing the original.

2	6	lib/bb/parse/__init__.py
13	31	lib/bb/parse/ast.py
22	17	lib/bb/parse/parse_py/BBHandler.py
14	10	lib/bb/parse/parse_py/ConfHandler.py

commit fda0707d772e0964a0185d4ec4d016522f6972f3
Author: Chris Larson <clarson@mvista.com>
Date:   2009-07-21 16:22:30 -0700

    [parse] Move vars_from_file from bb.parse.BBHandler into bb.parse.
    
    Signed-off-by: Chris Larson <clarson@mvista.com>

20	0	lib/bb/parse/__init__.py
3	21	lib/bb/parse/parse_py/BBHandler.py

commit 0a2bb3dd790e3e40867195f14f4e174f98f8a47c
Author: Chris Larson <clarson@mvista.com>
Date:   2009-07-22 11:09:25 -0700

    [parse] Don't use relative import of parse_py.
    
    Signed-off-by: Chris Larson <clarson@mvista.com>

1	1	lib/bb/parse/__init__.py

commit c83e3e7a22601113493064b055f8dc4fb28ee9fa
Author: Holger Freyther <ich@tamarin.(none)>
Date:   2009-05-19 10:57:00 +0200

    [parse] Move the last method to the AST...

10	1	lib/bb/parse/ast.py

commit 8be92b571b0cb4d7d9c0e057d6c56fcf53f40d61
Author: Holger Freyther <ich@tamarin.(none)>
Date:   2009-05-19 10:52:18 +0200

    [parser] Move more methods to the ast scheme

48	31	lib/bb/parse/ast.py

commit 02a264900c2995227d62863fc4446325e34a8c5e
Author: Holger Freyther <ich@tamarin.(none)>
Date:   2009-05-19 10:10:26 +0200

    [parser] Move one more item to the ast

41	34	lib/bb/parse/ast.py

commit 61d2e778302799d4a8f40c406923742cea405fa8
Author: Holger Freyther <ich@tamarin.(none)>
Date:   2009-05-19 10:02:55 +0200

    [parser] Move methodflags over to the ast

23	15	lib/bb/parse/ast.py

commit 9c97696f37499b4d0ec5c034c51e4cf6bc425ba2
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2010-02-12 17:45:51 +0000

    [parser] Build fix
    
    Signed-off-by: Richard Purdie <rpurdie@linux.intel.com>

2	2	lib/bb/parse/ast.py

commit 08ff6da3690aa8edf270f8150517cfd433b57362
Author: Holger Freyther <ich@tamarin.(none)>
Date:   2009-05-19 09:51:29 +0200

    [parser] Move more statements over the two phase AST
    
    Create the data first, then evaluate on the data dict

40	17	lib/bb/parse/ast.py

commit 0626614d44fcde8d42533da7586dea9930032638
Author: Holger Freyther <ich@tamarin.(none)>
Date:   2009-05-19 09:46:42 +0200

    [parse] Change handling include through the AstNode
    
    Disable the recursively evaluating the statement for now
    as it is causing problems.

2	8	lib/bb/parse/ast.py

commit a3ebc01f30840d23b4afc62d80276dbf25ba783a
Author: Holger Freyther <ich@tamarin.(none)>
Date:   2009-05-19 09:37:41 +0200

    [parser] Call eval and remove non ast code

1	2	lib/bb/parse/ast.py

commit 9d0895119d33898e76017d25e0944bd8eb6b12b8
Author: Holger Freyther <ich@tamarin.(none)>
Date:   2009-05-19 09:37:07 +0200

    [parser] Call eval immeditaley to test this code

4	33	lib/bb/parse/ast.py

commit e226264a2f2426a43d3c2bbcb0cd42c21eb9964c
Author: Holger Freyther <ich@tamarin.(none)>
Date:   2009-05-18 20:03:50 +0200

    [parser] Prepare to cease out getFunc
    
    getFunc is now a method of the data node, hopefully we can kill the other
    version soon.

17	12	lib/bb/parse/ast.py

commit 6073a5b8e4ca8af8e1a8e0234fad7b08baf76c99
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2010-02-12 14:41:28 +0000

    [parser] Preserve include vs. require behaviour
    
    Signed-off-by: Richard Purdie <rpurdie@linux.intel.com>

7	3	lib/bb/parse/ast.py

commit 47c8c2a0605a7de16170a25851ee13081f82a20d
Author: Holger Freyther <ich@tamarin.(none)>
Date:   2009-05-18 19:50:14 +0200

    [parser] Firs set of AST nodes with construction and eval
    
    First set of ConfHandling with AST nodes. The include can
    use a speed up and things might need to be migrated... into
    this class.

78	0	lib/bb/parse/ast.py

commit adc5290baacecd380a9936cc2455792bd9e88a13
Author: Holger Freyther <ich@tamarin.(none)>
Date:   2009-05-18 19:53:53 +0200

    [parser] Add documentation about usage of this code

1	0	lib/bb/parse/parse_py/BBHandler.py

commit 15e3e7233ea42b109d42f00576485cd041da51d5
Author: Holger Freyther <ich@tamarin.(none)>
Date:   2009-05-18 19:56:36 +0200

    [parser] Move the finalise into the ast as well

39	0	lib/bb/parse/ast.py
2	43	lib/bb/parse/parse_py/BBHandler.py

commit 9fe314b8b86d3e8be442140a338663f926bd3769
Author: Holger Freyther <ich@tamarin.(none)>
Date:   2009-05-18 19:24:07 +0200

    [parser] Cary a Statement Node through the parsing
    
    When parsing we will collect a number of statements
    that can be evaluated...The plan is to be evaluate
    things twice (old+new) and then compare the result,
    it should be the same.

6	2	lib/bb/parse/__init__.py
61	53	lib/bb/parse/ast.py
16	15	lib/bb/parse/parse_py/BBHandler.py
9	9	lib/bb/parse/parse_py/ConfHandler.py

commit 1809bc0b55e68cfab165de285d36f05fc3982644
Author: Holger Freyther <ich@tamarin.(none)>
Date:   2010-02-12 14:14:49 +0000

    [parser] Move evaluating into the ast class...

191	0	lib/bb/parse/ast.py
11	128	lib/bb/parse/parse_py/BBHandler.py
5	52	lib/bb/parse/parse_py/ConfHandler.py

commit ee9afccf33b220a21b74fab279925eeb4771249b
Author: Bernhard Reutner-Fischer <rep.dot.nop@gmail.com>
Date:   2010-02-08 18:50:33 +0100

    providers.py: sort eligible providers by DEFAULT_PREFERENCE
    
    Signed-off-by: Bernhard Reutner-Fischer <rep.dot.nop@gmail.com>

2	0	lib/bb/providers.py

commit 00eaf76fdc32eb515995b47dfa69eb90ca904b37
Author: Bernhard Reutner-Fischer <rep.dot.nop@gmail.com>
Date:   2010-02-08 18:50:34 +0100

    runqueue.py: improve printing dependent tasks
    
    Print names instead of Task-IDs (and not mentioning they're task ids).
    
    Previously we printed e.g.:
    Dependency loop #1 found:
      Task 89 (/there/src/oe/openembedded/recipes/busybox/busybox-native_1.15.2.bb, do_configure) (depends: Set([88, 282, 92, 87]))
    
    Now we say
    Dependency loop #1 found:
      Task 89 (/there/src/oe/openembedded/recipes/busybox/busybox-native_1.15.2.bb, do_configure) (dependent Task-IDs ['busybox-native, do_patch', 'update-rc.d, do_populate_staging', 'busybox-native, do_populate_staging', 'shasum-native.bb, do_populate_staging', 'busybox-native, do_unpack'])
    
    Signed-off-by: Bernhard Reutner-Fischer <rep.dot.nop@gmail.com>

10	2	lib/bb/runqueue.py

commit 457fb59f10ed59269b8bda3ee53bbeded5d33eb5
Author: Bernhard Reutner-Fischer <rep.dot.nop@gmail.com>
Date:   2010-02-08 18:49:49 +0100

    taskdata.py: fix typo in debug message
    
    Signed-off-by: Bernhard Reutner-Fischer <rep.dot.nop@gmail.com>

1	1	lib/bb/taskdata.py

commit f633be9c458747f76e77ce3b49e39105345eb684
Author: Bernhard Reutner-Fischer <rep.dot.nop@gmail.com>
Date:   2010-02-08 18:49:48 +0100

    providers.py: commentary typo fix
    
    Signed-off-by: Bernhard Reutner-Fischer <rep.dot.nop@gmail.com>

1	1	lib/bb/providers.py

commit 37a474a73cf2a05b8b4d7ae7c8174dae5887a2d0
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2010-01-27 12:40:02 +0000

    build.py: No need for this gross hack now (from Poky)
    
    Signed-off-by: Richard Purdie <rpurdie@linux.intel.com>

1	3	lib/bb/build.py

commit ac6792045959cfee56279c1c4597521e990848e7
Author: Khem Raj <raj.khem@gmail.com>
Date:   2010-01-22 19:23:00 -0800

    BBHandler: pass lineno and fn to handleMethod
    
    * lineno and fn are needed in handleMethod
      to restore the functionality as it was before.
    
    Signed-off-by: Khem Raj <raj.khem@gmail.com>
    Signed-off-by: Chris Larson <clarson@kergoth.com>

2	2	lib/bb/parse/parse_py/BBHandler.py

commit 0929b51ed6dcb4c660f3374dd70edf4abd97463f
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2010-01-22 16:16:15 +0000

    bitbake: Don't import xmlrpc server unless needed
    
    Signed-off-by: Richard Purdie <rpurdie@linux.intel.com>

2	1	bin/bitbake
0	2	lib/bb/server/__init__.py

commit 8a12a503c49ccd3a181891cf2f34394f6f146bef
Author: Martin Jansa <martin.jansa@gmail.com>
Date:   2010-01-22 14:20:18 +0100

    setup.py: remove removed bbimage from installed scripts
    
    Signed-off-by: Richard Purdie <rpurdie@linux.intel.com>

1	1	setup.py

commit d520ae0764016906ff61ec33b14eabc908aa8408
Author: Martin Jansa <martin.jansa@gmail.com>
Date:   2010-01-22 14:20:17 +0100

    parse_py/ConfHandler.py: missing colon after else
    
    Signed-off-by: Richard Purdie <rpurdie@linux.intel.com>

1	1	lib/bb/parse/parse_py/ConfHandler.py

commit f4d0b61fdebc73f4e3b6821a98c3f9a7e5486214
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2010-01-22 09:00:44 +0000

    bin/bitbake: Add import server
    
    Signed-off-by: Richard Purdie <rpurdie@linux.intel.com>

1	0	bin/bitbake

commit 423830fff74b5c8350b417e18034f50fc951690c
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2010-01-22 00:04:24 +0000

    cooker: Drop unneeded import
    
    Signed-off-by: Richard Purdie <rpurdie@linux.intel.com>

0	1	lib/bb/cooker.py

commit e0f5b5422bd8acc804404aa8d50b03781e253ba9
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2010-01-21 23:53:43 +0000

    bbimage: Drop, nobody should be using that now as its pointless
    
    Signed-off-by: Richard Purdie <rpurdie@linux.intel.com>

0	160	bin/bbimage

commit 426338a756e80e88a9d54052675afe83b1b31754
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2010-01-21 23:50:22 +0000

    bitbake: Fix UI failure exception handling with python 2.6
    
    Signed-off-by: Richard Purdie <rpurdie@linux.intel.com>

1	1	bin/bitbake

commit 006822fd531e4206e48dd31ee4857900bd2c6390
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2010-01-21 23:50:09 +0000

    knotty: Improve task failure message handling using the uihelper code
    
    Signed-off-by: Richard Purdie <rpurdie@linux.intel.com>

5	5	lib/bb/runqueue.py
20	0	lib/bb/ui/knotty.py
6	5	lib/bb/ui/uihelper.py

commit 3909fd9c8e861222cd5b8139b684eddc54c11cf2
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2010-01-21 23:47:26 +0000

    runqueue.py: Use fcntl to make the worker pipes non-blocking
    
    Signed-off-by: Richard Purdie <rpurdie@linux.intel.com>

6	1	lib/bb/runqueue.py

commit c37691389e68cd63993e95cf667a1a9e1d9e2b5d
Author: Khem Raj <raj.khem@gmail.com>
Date:   2010-01-21 14:06:43 -0800

    contrib/vim: Update with the changes from Ricardo Salveti and other fixes.
    
    Signed-off-by: Khem Raj <raj.khem@gmail.com>
    Signed-off-by: Richard Purdie <rpurdie@linux.intel.com>

24	4	contrib/vim/ftdetect/bitbake.vim
85	0	contrib/vim/plugin/newbb.vim
95	100	contrib/vim/syntax/bitbake.vim

commit 4cbebf09cb8bf3f93cad8875fc618e904a659dca
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2010-01-21 16:00:21 +0000

    bitbake/event: If the server disappears, we just exit too
    
    Signed-off-by: Richard Purdie <rpurdie@linux.intel.com>

6	3	lib/bb/event.py

commit 1f112daeda5815c841f096de794dc7d24576e5a6
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2010-01-21 15:59:16 +0000

    runqueue: When a task fails, make sure the server still processes events from other workers
    
    Signed-off-by: Richard Purdie <rpurdie@linux.intel.com>

11	1	lib/bb/runqueue.py

commit 824a032672c8673cae28e492aa916a4750b94efa
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2010-01-21 13:14:25 +0000

    ConfHandler: Fix require vs. include behaviour
    
    Signed-off-by: Richard Purdie <rpurdie@linux.intel.com>

4	1	lib/bb/parse/parse_py/ConfHandler.py

commit cb067b1bf95c4531d57df0a5538a3287729da384
Author: Holger Freyther <ich@tamarin.(none)>
Date:   2009-05-17 15:56:40 +0200

    [parser] Move more stuff out the feeder

48	38	lib/bb/parse/parse_py/ConfHandler.py

commit eb486ac7d32935ecae8585b3b32f75c81b5df5e8
Author: Holger Freyther <ich@tamarin.(none)>
Date:   2009-05-17 13:00:42 +0200

    [parse] Move inherit handling to method

6	4	lib/bb/parse/parse_py/BBHandler.py

commit f45c63a0c02834de4d2efa98fc555ed195bd9deb
Author: Holger Freyther <ich@tamarin.(none)>
Date:   2009-05-17 12:55:18 +0200

    [parsers] Move out more functions

78	70	lib/bb/parse/parse_py/BBHandler.py

commit f99153c9a850647eca2eccc77a5d1f3e04fd4a1f
Author: Holger Freyther <ich@tamarin.(none)>
Date:   2009-05-17 12:42:43 +0200

    [parser] Move more stuff out to separate methods...

25	20	lib/bb/parse/parse_py/BBHandler.py

commit 9dd2fd070e9a72430dae804e5c0c36dbaba8ca3a
Author: Holger Freyther <ich@tamarin.(none)>
Date:   2009-05-17 12:32:36 +0200

    [parser] Move the handling of a method to a function
    
    We want to convert this into a proper AST. So move all
    such operations to methods... Later change them to generate
    a node... and create that node from here.

15	11	lib/bb/parse/parse_py/BBHandler.py

commit 0746350494c5019a7fd52e46df6aa53658d4e389
Author: Holger Freyther <ich@tamarin.(none)>
Date:   2009-05-17 06:19:39 +0200

    [parse] Unify opening a file...

19	0	lib/bb/parse/__init__.py
2	16	lib/bb/parse/parse_py/BBHandler.py
2	21	lib/bb/parse/parse_py/ConfHandler.py

commit 1ff6931c013975cd5a7ed6ef1c9671ee773e88fb
Author: Holger Freyther <ich@tamarin.(none)>
Date:   2009-05-17 06:06:14 +0200

    [parser] Kill obtain/localpath from the parser
    
    With obtain it was possible to use an existing fetcher to
    download a bb or config file. In practive no one has used it
    and it was likely broken in regard to depends_cache... Remove
    it for now, simplfiy the code.

2	4	lib/bb/parse/parse_py/BBHandler.py
1	50	lib/bb/parse/parse_py/ConfHandler.py

commit df8309c11a43a9488ca25ec114a2dd3d49b041ff
Author: Theodore A. Roth <taroth@gmail.com>
Date:   2009-03-02 12:08:09 -0800

    usermanual.xml: Add section for ?= var setting.
    
    Signed-off-by: Richard Purdie <rpurdie@linux.intel.com>

5	0	doc/manual/usermanual.xml

commit 74979370eff1a8b7b7f8a4ca146ad9d4bf83c9af
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2010-01-21 10:44:21 +0000

    Fix bb.plain and bb.warn function, initial patch from Petri Lehtinen <petri.lehtinen+bitbake-dev@inoi.fi>
    
    Signed-off-by: Richard Purdie <rpurdie@linux.intel.com>

2	2	lib/bb/__init__.py

commit 25326cf21c4dd0064c93df5e359e3123d2936e4a
Author: Martin Jansa <martin.jansa@gmail.com>
Date:   2010-01-16 22:58:15 +0100

    git: remove repodir usage after 57b3a9a86bf8c6940187c6a899cedbbbb484884a
    
    Signed-off-by: Richard Purdie <rpurdie@linux.intel.com>

1	1	lib/bb/fetch/git.py

commit 4051d2f4e73cf24d5460d4507e8f8893de79b9b4
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2010-01-21 10:26:32 +0000

    runqueue: Fix typo
    
    Signed-off-by: Richard Purdie <rpurdie@linux.intel.com>

1	1	lib/bb/runqueue.py

commit 095211d8e245ae81d3246340b5bd2b322d39a6f5
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2010-01-20 12:16:40 +0000

    Improve BBCLASSEXTEND handling for skipped packages and report better parsing statistics
    
    Signed-off-by: Richard Purdie <rpurdie@linux.intel.com>

44	45	lib/bb/cache.py
12	9	lib/bb/cooker.py
3	2	lib/bb/event.py
18	10	lib/bb/parse/parse_py/BBHandler.py
2	2	lib/bb/ui/knotty.py

commit 5b2b17413e9b4939a3bfabe65f415b043342ad9e
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2010-01-19 15:31:52 +0000

    taskdata: Improve error message if incorrectly formatted tasks are found (from poky)
    
    Signed-off-by: Richard Purdie <rpurdie@linux.intel.com>

2	0	lib/bb/taskdata.py
1	1	lib/bb/utils.py

commit 37187389858bd9b52296a528c19d301689a8b06f
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2010-01-19 15:30:22 +0000

    data_smart.py: Fix error where update-rc.d would not get added to the dependency tree (from Poky)
    
    If there was a variable such as:
    
    X_${Y}_append = "Z" The "Z" would be lost if X_${Y} was unset. This was due to a bug in the renameVar
    function used by expandKeys().
    
    Signed-off-by: Richard Purdie <rpurdie@linux.intel.com>

6	5	lib/bb/data_smart.py

commit 09610424fc83053f7d21d3a0f097fc33772bc45d
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2010-01-19 15:29:26 +0000

    BBHandler: Only add do_ prefix to tasks if its not already present (from Poky)
    
    Signed-off-by: Richard Purdie <rpurdie@linux.intel.com>

2	1	lib/bb/parse/parse_py/BBHandler.py

commit 2d1203f446a3527e4d261828b3c10df249119007
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2010-01-19 15:28:37 +0000

    providers: Apply modified version of a patch from Martin Jansa <martin.jansa@gmail.com> to allow wildcards at the end of PREFERRED_VERSION strings
    
    Signed-off-by: Richard Purdie <rpurdie@linux.intel.com>

13	1	lib/bb/providers.py

commit 4508c49b463d9feaa15b6579ef495019282050e4
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2010-01-19 15:07:59 +0000

    Drop version requirement to 2.5 apart from XMLRPC mode
    
    Signed-off-by: Richard Purdie <rpurdie@linux.intel.com>

2	2	bin/bitbake
5	1	lib/bb/server/xmlrpc.py

commit c8aa1c378b7473c82a1ee43f4cecfa65eb44bf7b
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2010-01-19 14:49:50 +0000

    fetch: Add GIT_PROXY_COMMAND to runfetchcmd function
    
    Signed-off-by: Richard Purdie <rpurdie@linux.intel.com>

1	1	lib/bb/fetch/__init__.py

commit ee8bf6df161b68dd1194941c3ab27c54eb6ff8c1
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2010-01-19 14:49:27 +0000

    bitdoc: Fixup against recent core changes
    
    Signed-off-by: Richard Purdie <rpurdie@linux.intel.com>

2	0	bin/bitdoc

commit 36953fd09e134331a9e1aa7dd5619c628362ff4d
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2010-01-19 13:22:00 +0000

    runqueue.py: Improve IPC between worker threads and the server allowing proper event handling
    
    Signed-off-by: Richard Purdie <rpurdie@linux.intel.com>

17	0	lib/bb/event.py
57	9	lib/bb/runqueue.py

commit d1df2bb2426a76798977b5623a303622e8bed14c
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2010-01-19 10:27:29 +0000

    ui: Convert remaining event handlers to use isinstance
    
    Signed-off-by: Richard Purdie <rpurdie@linux.intel.com>

14	14	lib/bb/ui/crumbs/runningbuild.py
10	10	lib/bb/ui/depexp.py
22	22	lib/bb/ui/ncurses.py
11	11	lib/bb/ui/uihelper.py

commit 2778a69e31715ecb7a2fafc986d82d6f7df3074b
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2010-01-19 09:56:25 +0000

    event.py: Convert to using pickle for events and isinstance in knotty UI handler
    
    Signed-off-by: Richard Purdie <rpurdie@linux.intel.com>

5	2	lib/bb/event.py
3	3	lib/bb/server/none.py
33	33	lib/bb/ui/knotty.py
2	4	lib/bb/ui/uievent.py

commit 45997fbe2a4630952f9632fdb44a067d3c3aafca
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2010-01-19 09:55:21 +0000

    server/xmlrpc: Fix idle timeout handling and missing parameter
    
    Signed-off-by: Richard Purdie <rpurdie@linux.intel.com>

3	1	lib/bb/server/xmlrpc.py

commit 280f611d16e52e60416b32cdfa484c96bdd5e50e
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2010-01-19 09:53:51 +0000

    event.py: Drop unused events
    
    Signed-off-by: Richard Purdie <rpurdie@linux.intel.com>

0	35	lib/bb/event.py

commit 3162f336ed21b2646a82b0b87132656cbb59fc81
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2010-01-19 09:47:36 +0000

    event.py: Pass the datastore to the fire command, don't build it into events
    
    Signed-off-by: Richard Purdie <rpurdie@linux.intel.com>

4	4	lib/bb/build.py
8	8	lib/bb/command.py
11	11	lib/bb/cooker.py
18	31	lib/bb/event.py
8	8	lib/bb/msg.py
1	1	lib/bb/parse/parse_py/BBHandler.py
16	16	lib/bb/runqueue.py
7	7	lib/bb/taskdata.py

commit 19a6dc1fe6e6a0d957710197e4420a3fc2b821f4
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2010-01-18 22:14:01 +0000

    server: Improve idle handling timeouts
    
    Signed-off-by: Richard Purdie <rpurdie@linux.intel.com>

1	1	lib/bb/cooker.py
28	15	lib/bb/server/none.py
12	6	lib/bb/server/xmlrpc.py

commit 4d67b81dd837c2132e34fe3354e258fa51ebeaad
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2010-01-18 17:40:10 +0000

    Add none server type to avoid xmlrpc in the default case
    
    Signed-off-by: Richard Purdie <rpurdie@linux.intel.com>

11	26	bin/bitbake
0	2	lib/bb/cooker.py
1	0	lib/bb/server/__init__.py
168	0	lib/bb/server/none.py
30	0	lib/bb/server/xmlrpc.py

commit c295c4646729883f9724ce3ae55d8454aab86ab1
Merge: fe3de257 c6ca4e31
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2010-01-18 11:53:55 +0000

    Merge branch 'contrib-rday' of ssh://git@git.openembedded.net/bitbake
    
    Conflicts:
            doc/bitbake.1

commit c6ca4e316894d9b63818413be8f3c5a46c5f7901
Author: Robert P. J. Day <rpjday@crashcourse.ca>
Date:   2010-01-16 12:45:39 -0500

    Fix a couple copy-and-paste errors in fetcher comments.

1	1	lib/bb/fetch/svk.py
1	1	lib/bb/fetch/wget.py

commit af80e1cef90ab66c3768d0bbc0760e0ffdbf4e93
Author: Robert P. J. Day <rpjday@crashcourse.ca>
Date:   2010-01-16 12:37:51 -0500

    "pserver" is not a valid type for a CVS fetch, it's now a possible
    method instead.  This just gets rid of a historical holdover.

1	1	lib/bb/fetch/cvs.py

commit 782a22a9946c28b38850958ba560f26ce3a37ed7
Author: Robert P. J. Day <rpjday@crashcourse.ca>
Date:   2010-01-16 04:51:59 -0500

    Fix an obvious copy-and-paste error in the documentation for a
    local fetch, and remove the option for a "patch" type URL, since
    patches use a "file" type URL.

2	2	lib/bb/fetch/local.py

commit b4253d889ad953809ce0f744f2007ec5119e8a52
Author: Robert P. J. Day <rpjday@crashcourse.ca>
Date:   2010-01-16 04:50:51 -0500

    Fix a number of obvious documentation typoes.

2	2	doc/bitbake.1
8	8	doc/manual/usermanual.xml

commit 84535d1bb695e5983f003372c35a30a1cea4f8ba
Author: Robert P. J. Day <rpjday@crashcourse.ca>
Date:   2010-01-16 04:47:33 -0500

    Remove the now-obsolete reference to "bbread".

1	10	doc/manual/usermanual.xml

commit fe3de257f8fe2eb151f901d2e22686c3f5172740
Author: Robert P. J. Day <rpjday@crashcourse.ca>
Date:   2010-01-16 10:37:55 +0100

    Fix typoes

1	1	doc/bitbake.1

commit 23ceeda52b95625f72eebc2b71fe09efffb62c4d
Author: Robert P. J. Day <rpjday@crashcourse.ca>
Date:   2010-01-13 15:40:40 -0500

    Correct a number of misspellings of "seperate".
    
    Signed-off-by: Robert P. J. Day <rpjday@crashcourse.ca>

1	1	doc/bitbake.1
5	5	doc/manual/usermanual.xml

commit 5c845093fc548cd660d4bf61e8ade9d1c7f2609a
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2010-01-14 18:52:43 +0000

    Solidify server class creation
    
    Signed-off-by: Richard Purdie <rpurdie@linux.intel.com>

5	5	bin/bitbake
2	3	lib/bb/cooker.py
1	1	lib/bb/server/xmlrpc.py

commit 08ed701a6ce0a6f49a0eb44e8818612c7b68ebc5
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2009-12-18 17:41:37 +0000

    .gitignore: Ignore backup files
    
    Signed-off-by: Richard Purdie <rpurdie@linux.intel.com>

1	0	.gitignore

commit e70c3b82f368602316a5d0fc8770283824f68d41
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2009-12-18 17:41:21 +0000

    Move xmlrpcserver.py into lib/bb/server as xmlrpc.py
    
    Signed-off-by: Richard Purdie <rpurdie@linux.intel.com>

3	2	lib/bb/cooker.py
1	0	lib/bb/server/__init__.py
0	0	lib/bb/{xmlrpcserver.py => server/xmlrpc.py}

commit 0159f66e0d95c45537de4ab77924ba6521022370
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2009-12-18 17:08:41 +0000

    fetch: Clean up debug
    
    Signed-off-by: Richard Purdie <rpurdie@linux.intel.com>

2	1	lib/bb/fetch/git.py

commit efb0474231ed286073a5a5904094320da8cab28d
Author: Guo Hongruan <camelguo@gmail.com>
Date:   2009-12-15 17:10:13 +0800

    Enable --ignore-deps options to access regular expression string
    
    1. Add a function named re_match_strings(target,strings), to match
       target using the string in strings which can be regular expression

17	4	lib/bb/taskdata.py

commit 7291af8802cbe0f68487848618266c76598e2cff
Author: Paul Eggleton <bluelightning@bluelightning.org>
Date:   2009-12-14 10:15:55 +0000

    git: Allow fetching a single subdirectory from a git repository
    
    Signed-off-by: Richard Purdie <rpurdie@rpsys.net>

28	3	lib/bb/fetch/git.py

commit 26b3e7d250c741cb12902540cbf556a2d577f744
Author: Richard Purdie <rpurdie@rpsys.net>
Date:   2009-12-14 09:31:11 +0000

    fetch/__init__.py: Remove uneeded debug
    
    Signed-off-by: Richard Purdie <rpurdie@rpsys.net>

0	1	lib/bb/fetch/__init__.py

commit c6ab8f38841d6b4cf5f3f2f0c00d010c92b1ce85
Author: Richard Purdie <rpurdie@rpsys.net>
Date:   2009-12-14 09:23:56 +0000

    git.py: Trap empty return values and error (from Poky)
    
    Signed-off-by: Richard Purdie <rpurdie@rpsys.net>

4	1	lib/bb/fetch/git.py

commit ab53474dcffac74bbd2e9d159eb03641bb12cfdd
Author: Richard Purdie <rpurdie@rpsys.net>
Date:   2009-12-14 09:22:27 +0000

    fetch/git.py: Add fullclone parameter to allow WORKDIRs to contain full git repositories (from Poky)
    
    Signed-off-by: Richard Purdie <rpurdie@rpsys.net>

8	2	lib/bb/fetch/git.py

commit 57b3a9a86bf8c6940187c6a899cedbbbb484884a
Author: Richard Purdie <rpurdie@rpsys.net>
Date:   2009-12-14 09:20:49 +0000

    fetch/git.py: Move variable init into the localpath function
    
    Signed-off-by: Richard Purdie <rpurdie@rpsys.net>

19	21	lib/bb/fetch/git.py

commit 0e75e9aa269d20a0430d950b1d3c425f46e671db
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2009-11-22 00:10:08 +0000

    cooker.py: Fix variable name: targets doesn't exist, should be item
    
    Signed-off-by: Richard Purdie <rpurdie@linux.intel.com>

1	1	lib/bb/cooker.py

commit 08e8144be8b564f2dea35c1680a4653f043ec2e2
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2009-11-22 00:04:45 +0000

    fetch/git.py: BB_GIT_CLONE_FOR_SRCREV updates
    
    Based on a patch from Martin Jansa <Martin.Jansa@gmail.com>:
    
    * Add a _sortable_buildindex attribute and return the index separate from
      the revision
    * This means the git.py internal cache is no longer needed
    * Adds the returned value to the cache so if the mechanism for
      selecting the index changes, the values increase.
    
    Signed-off-by: Richard Purdie <rpurdie@linux.intel.com>

6	4	lib/bb/fetch/__init__.py
14	22	lib/bb/fetch/git.py

commit ec786d3246aaffd0109ad13f81b932b07448a572
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2009-11-21 23:38:18 +0000

    fetch/__init__.py: Replace _sortable_revision_valid attribute with an init call for fetchers to clean up logic
    
    Signed-off-by: Richard Purdie <rpurdie@linux.intel.com>

7	4	lib/bb/fetch/__init__.py
7	4	lib/bb/fetch/git.py

commit 2f32735463159e9e42e03819d6b505dba49c7f17
Author: Martin Jansa <Martin.Jansa@gmail.com>
Date:   2009-11-17 08:24:52 +0100

    Optional LOCALCOUNT for recipe
    
    * Instead of autoincrement from persistent cache when srcrev is changed.
    * Should be used by distributions with multiple builders, where consistent
      PV is needed.
    * Can be used instead of PR bump in PVs like this "0.0+${PR}+gitr${SRCPV}"
    * BB_LOCALCOUNT_OVERRIDE to enable setting LOCALCOUNT for recipe
    * This way LOCALCOUNTs can be specified directly in recipes instead of
      separated distro config (as not all want to use them). And will be
      used only when BB_LOCALCOUNT_OVERRIDE set in distro config.
    
    Signed-off-by: Richard Purdie <rpurdie@linux.intel.com>

25	1	lib/bb/fetch/__init__.py

commit 727ce6ffe33a119cb17f7d91b173f11a055eea3c
Author: Denys Dmytriyenko <denis@denix.org>
Date:   2009-10-12 04:00:47 +0000

    utils.py: add special handling for version delimiters
    
    Make version comparison work properly for pre-releases and release-candidates,
    when there is an extra suffix in the field, such as:
    PV = "2.6.29+2.6.30-rc5-${PR}+gitr${SRCREV}"
    
    More details: http://thread.gmane.org/gmane.comp.handhelds.openembedded/26691
    
    Signed-off-by: Denys Dmytriyenko <denis@denix.org>
    Signed-off-by: Richard Purdie <rpurdie@rpsys.net>

15	1	lib/bb/utils.py

commit 44949581e9a0ba19d11fc13f253948274b223088
Author: Richard Purdie <rpurdie@rpsys.net>
Date:   2009-11-06 16:34:35 +0000

    fetch/__init__.py: Allow SRC_URI to be overridden in fetcher go() function
    
    Signed-off-by: Richard Purdie <rpurdie@rpsys.net>

5	3	lib/bb/fetch/__init__.py

commit 442aef9f43e640d006681b9100abecc865cab930
Author: Chris Conroy <Chris.Conroy@hillcrestlabs.com>
Date:   2009-09-21 16:07:40 -0400

    providers.py: Fix package sorting order to reflect priorities
    
    I found that the code that sorts packages does not respect the priority
    order.
    
    By iterating over sortpkg_pn.keys() instead of pkg_pn.keys(), it
    produces the expected order based on the priorities I have set.
    
    Signed-off-by: Richard Purdie <rpurdie@rpsys.net>

1	1	lib/bb/providers.py

commit 054758a54ac5a2c18944a8f312b03a51c5ab9e8b
Author: Richard Purdie <rpurdie@rpsys.net>
Date:   2009-11-04 00:47:09 +0000

    git.py: Search mirrors for tarballs before fetching, not just local directories
    
    Signed-off-by: Richard Purdie <rpurdie@rpsys.net>

1	1	lib/bb/fetch/git.py

commit b3af6f278af06f2b51f83ac59b43dc3b14f0c60b
Author: Richard Purdie <rpurdie@rpsys.net>
Date:   2009-11-04 00:42:17 +0000

    fetch/__init__.py: Try and make the sortable_revision code mode readable
    
    Signed-off-by: Richard Purdie <rpurdie@rpsys.net>

3	4	lib/bb/fetch/__init__.py
2	2	lib/bb/fetch/git.py

commit f75ac81a5523e4e0c67575788fba9edcb89574ba
Author: Richard Purdie <rpurdie@rpsys.net>
Date:   2009-11-03 22:19:40 +0000

    BBHandler.py: Use exec_func, not exec_func_python
    
    Signed-off-by: Richard Purdie <rpurdie@rpsys.net>

1	1	lib/bb/parse/parse_py/BBHandler.py

commit 40856c0b1dc0eff48e9a49c34cdfc5f469c8e9f4
Author: Richard Purdie <rpurdie@rpsys.net>
Date:   2009-10-17 20:15:21 +0100

    Improve anonymous python function handling sp functions use the methodpool and are no longer concatenated
    
    Signed-off-by: Richard Purdie <rpurdie@rpsys.net>

7	2	lib/bb/build.py
17	12	lib/bb/parse/parse_py/BBHandler.py

commit 14748abaf482bf3f18485653716a8fc90efbd4c8
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2009-10-23 10:39:43 +0100

    fetch/svk: Fix up breakage. Evidently nobody uses svk
    
    Signed-off-by: Richard Purdie <rpurdie@linux.intel.com>

2	3	lib/bb/fetch/svk.py

commit 8462cc8e1da94ff744ed82c33462fdb997c998cc
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2009-10-23 10:25:30 +0100

    build.py: Make sure the logfile exists before checking its size. Previously this broke upon recursive calls.
    
    Signed-off-by: Richard Purdie <rpurdie@linux.intel.com>

1	1	lib/bb/build.py

commit 05faed88484f805b75839c11bfc433c4cc6d4507
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2009-10-23 10:23:25 +0100

    Add hg fetcher auto revisioning, patch from Carl Simonson <simonsonc@gmail.com>
    
    Signed-off-by: Richard Purdie <rpurdie@linux.intel.com>

28	0	lib/bb/fetch/hg.py

commit ee0200c47f1fa048f4ff3844d5018b30344104a0
Author: Richard Purdie <rpurdie@rpsys.net>
Date:   2009-10-17 19:48:34 +0100

    fetch/__init__.py: Fix a bug where errors could corrupt bitbake internal state wrt SRCREVINACTION (from Poky)
    
    Signed-off-by: Richard Purdie <rpurdie@rpsys.net>

5	3	lib/bb/fetch/__init__.py

commit 1863e9954571e6fd6ee0a0fd307ca226bff86bad
Author: Richard Purdie <rpurdie@rpsys.net>
Date:   2009-10-17 19:46:48 +0100

    fetch/__init__.py: Remove hardcoded use of SRC_URI - OE.dev was adjusted for this a long time ago (from Poky)
    
    Signed-off-by: Richard Purdie <rpurdie@rpsys.net>

2	3	lib/bb/fetch/__init__.py

commit 2a6abd3ee10a709de0d96d15ce9f232847ebda7a
Author: Richard Purdie <rpurdie@rpsys.net>
Date:   2009-10-17 19:30:34 +0100

    BBHandler: Drop unused internal __functions__ variable
    
    Signed-off-by: Richard Purdie <rpurdie@rpsys.net>

0	7	lib/bb/parse/parse_py/BBHandler.py

commit 0a6f8c8888bd6d50b99dd6074a2fdc63fda4cc8b
Author: Richard Purdie <rpurdie@rpsys.net>
Date:   2009-10-17 19:29:48 +0100

    knotty: Add new event from compare reivions code
    
    Signed-off-by: Richard Purdie <rpurdie@rpsys.net>

3	0	lib/bb/ui/knotty.py

commit ce152513d725c53e7100be47952275aacfd58adb
Author: Richard Purdie <rpurdie@rpsys.net>
Date:   2009-10-17 19:28:35 +0100

    build.py: Optimisation to remove zero sized log files (from Poky)
    
    Signed-off-by: Richard Purdie <rpurdie@rpsys.net>

4	0	lib/bb/build.py

commit c618232784a9e398c65d96341d37c640a48c40eb
Author: Richard Purdie <rpurdie@rpsys.net>
Date:   2009-10-17 19:27:31 +0100

    runqueue.py: Small optimisation in set creation removing an update call (from Poky)
    
    Signed-off-by: Richard Purdie <rpurdie@rpsys.net>

3	2	lib/bb/runqueue.py

commit fc2e3ba87c7f685b47ac090d3a04dcac7c6737bd
Author: Richard Purdie <rpurdie@rpsys.net>
Date:   2009-10-17 19:05:57 +0100

    cache.py: Add check for leakage of SRCREVINACTION variable (from Poky)
    
    Signed-off-by: Richard Purdie <rpurdie@rpsys.net>

5	0	lib/bb/cache.py

commit 6252c7d5c1c7123d16fc3c7db2edc6751420f12c
Author: Richard Purdie <rpurdie@rpsys.net>
Date:   2009-10-17 19:02:09 +0100

    Add a compare-versions command which returns whether the SRCREV versions have changed since bitbake was last run (from Poky)
    
    Signed-off-by: Richard Purdie <rpurdie@rpsys.net>

3	0	bin/bitbake
19	0	lib/bb/command.py
6	0	lib/bb/cooker.py
25	0	lib/bb/fetch/__init__.py
1	1	lib/bb/fetch/wget.py
11	0	lib/bb/persist_data.py

commit c4b18ff5e26e4f52336fe1fc5a0e215e4d4d9aaa
Author: Søren Holm <sgh@sgh.dk>
Date:   2009-10-01 15:23:59 +0200

    shell: Add install command
    
    Add an install command similiar to the other existing commands.
    
    Signed-off-by: Holger Hans Peter Freyther <zecke@selfish.org>

5	0	lib/bb/shell.py

commit 3adb0d1c23f8b0d153859e78899a0694a27aa0af
Author: Chris Larson <clarson@mvista.com>
Date:   2009-07-16 10:49:49 -0700

    cache: only invalidate for non-existent depends if they used to exist.
    
    Previously, if a file listed in the cached __depends did not exist, it would
    always invalidate the cache.  Now it only does so if the cached version
    existed, and the current does not.  In this way, we can support storing
    entries in __depends for files which may or may not exist, and ensure that
    creating such a file results in cache invalidation.  Specifically, this is for
    the amend.inc implementation.
    
    Signed-off-by: Chris Larson <clarson@mvista.com>

1	1	lib/bb/cache.py

commit afd1840d9d02178e451fe897bc21400105aa0fb3
Author: Chris Larson <clarson@mvista.com>
Date:   2009-09-10 11:49:50 -0700

    Only print python exception tracebacks if debugging is enabled.
    
    Uses sys.excepthook to replace the toplevel exception handler with a version
    that obeys the debug level of the 'default' messaging domain.  A non-zero
    value there will result in displaying the full traceback.
    
    Signed-off-by: Chris Larson <clarson@mvista.com>

13	0	bin/bitbake

commit a002f4f0d13ea7dca261b77d5e2278c3fd35acda
Author: Chris Larson <clarson@mvista.com>
Date:   2009-09-12 22:42:45 -0700

    Add a RecipeParsed event, which can be used as an alternative to anonymous functions.
    
    Signed-off-by: Chris Larson <clarson@mvista.com>

7	0	lib/bb/event.py
2	0	lib/bb/parse/parse_py/BBHandler.py
2	0	lib/bb/ui/knotty.py

commit 30d00e1a550931cb7f62e6574a7dd2d7b33f182b
Author: Chris Larson <clarson@mvista.com>
Date:   2009-08-27 12:20:10 -0700

    daemonize: Kill the forcing of umask to 0 in our children.
    
    It forces the daemon umask to the module level UMASK variable, which defaults
    to 0, so the bitbake daemons end up with a umask of 0.  Fixed by setting UMASK
    to None and making it only run umask when it's not None, so our children will
    inherit the parent umask
    
    Signed-off-by: Chris Larson <clarson@mvista.com>

4	2	lib/bb/daemonize.py

commit b33543799373ea57f4b7da07de5369031c3f9e14
Author: Chris Larson <clarson@kergoth.com>
Date:   2009-07-29 13:26:56 -0700

    Initial switch from distutils to setuptools.
    
    Signed-off-by: Chris Larson <clarson@kergoth.com>

0	61	MANIFEST
11	0	MANIFEST.in
276	0	ez_setup.py
10	3	lib/bb/parse/parse_py/ConfHandler.py
45	40	setup.py

commit a632e95610ce94576f7f82341eb73e5ada4807b4
Author: Marcin Juszkiewicz <marcin@juszkiewicz.com.pl>
Date:   2009-07-24 20:54:17 +0200

    AUTHORS: update my email

1	1	AUTHORS

commit 21b5e1d2fcee728727eca85de927e452c2cfb0d3
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2009-07-23 19:51:03 +0100

    command/cooker: Remve the need for the cache for -e -b options
    
    Signed-off-by: Richard Purdie <rpurdie@linux.intel.com>

9	7	lib/bb/command.py
3	3	lib/bb/cooker.py

commit 157a8b835e94096168b8b5f304555dbe4b8c9ea8
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2009-07-23 19:43:17 +0100

    command/cooker: Improve showEnvironment functionality
    
    Allow showEnvironment to function without loading the cache by adding
    a second caching version.
    
    Signed-off-by: Richard Purdie <rpurdie@linux.intel.com>

12	3	lib/bb/command.py
3	1	lib/bb/cooker.py

commit 40ef9511101d81dfd6439f888469b4f86abfdd16
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2009-07-23 19:33:18 +0100

    cooker: Fix cooker parser for case where there are no recipes
    
    Signed-off-by: Richard Purdie <rpurdie@linux.intel.com>

31	29	lib/bb/cooker.py

commit 05129b857915ac93254469aa3c5e0207e234d922
Author: Chris Larson <clarson@mvista.com>
Date:   2009-07-23 10:44:55 -0700

    Update the minimal base.bbclass & bitbake.conf.
    
    I could argue in favor of the removal of these entirely, as their usefulness
    is limited, and I've yet to see anyone use bitbake for anything without using
    OE as a base.  It's something to consider, anyway, but this at least makes
    them parse without complaining.
    
    Signed-off-by: Chris Larson <clarson@mvista.com>

1	1	classes/base.bbclass
1	0	conf/bitbake.conf

commit d715da0ab6fecb85d1bd4722dbc315a6ec079599
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2009-07-23 17:58:56 +0100

    runqueue: Improve recursive task dependency calculation speed (from Poky)
    
    At present there is a bottleneck in runqueue in the
    get_recursive_tdepends() function which bothers me as we never used to
    have it. It appeared when we fixed some correctness issues with the
    dependency tree and the code in this area has grown adhoc for too long.
    
    As an example the above function was getting called 500,000 times in my
    main test case of building an image. Its particularly problematic in
    builds with many recursive dependencies such as 'bitbake world'.
    
    This commit rewrites the problematic function entirely with the
    following benefits:
    
    * Replaces the most illegible code in that function with code thats
      easier to understand
    * Builds the dependency tree per filename, not per task since we don't
      need it per task which is a performance win
    * Improves the documentation in places
    * Much faster execution
    * Reuses the main dependency tree data, doesn't make its own.
    
    The code functions very differently to the original. Previously the
    recursive dependency tree and the main dependency tree were separate. In
    this implementation we use the main tree to build the recursive tree
    after the main tree has been completed, then inject the dependencies.
    
    Compared with the original this actually inserts small numbers (4 in my
    test cases) of additional dependencies into the task graph such as
    image_recipe:do_rootfs -> image_recipe:do_package_write_ipk which is
    arguably an bug in the existing implementation. I've checked into this,
    understand why its happening and believe none of the additional
    dependencies should cause any complications.
    
    Signed-off-by: Richard Purdie <rpurdie@linux.intel.com>

92	130	lib/bb/runqueue.py

commit bbe3ee4b62b887f408ef7e43ebc1b7b54a238f9a
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2009-07-23 17:56:42 +0100

    bin/bitbake: Add python 2.6 check (from Poky)
    
    Now we need python 2.6 check for it otherwise bitbake appears to hang.
    
    Signed-off-by: Richard Purdie <rpurdie@linux.intel.com>

4	0	bin/bitbake

commit a519d723a17e1cc8e87872a7b0243763f0125e6f
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2009-07-23 17:53:32 +0100

    cooker.py: Improve server idle handling (from Poky)
    
    This patch:
      * Uses the xmlrpc timeout controls added in python 2.6 removing the need to
        hack the class instead. The hacking didn't work for 2.6.
      * Converts the parsing function to parse a file per call to the function
      * Allows checking for xmlrpc commands between parsing files allowing the user
        to interrupt parsing.
      * Starts to teach the command queue about command properties such as whether
        they require the cache.
    
    Signed-off-by: Richard Purdie <rpurdie@linux.intel.com>

20	2	lib/bb/command.py
100	90	lib/bb/cooker.py
17	29	lib/bb/xmlrpcserver.py

commit 72bf7476b2492b6524cb8ff87ee5f4e86b28d975
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2009-07-23 17:48:18 +0100

    providers.py: Add caching for the dynamic package regexps (from Poky)
    
    Add caching for the dyanmic package regexps which improves task data
    performance significantly.
    
    Signed-off-by: Richard Purdie <rpurdie@linux.intel.com>

12	5	lib/bb/providers.py

commit 720df03c5c45810d8ef89a8dbca6edb9301ca262
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2009-07-23 17:46:20 +0100

    utils.py: Add build_environment function (from Poky)
    
    Add a function to bring the command environment in sync with the data
    dictonary.
    
    Signed-off-by: Richard Purdie <rpurdie@linux.intel.com>

10	0	lib/bb/utils.py

commit fa8ea72686fc851d827bdc8ac3540def0387330e
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2009-07-23 17:45:22 +0100

    ui/puccho: Improve path specification to glade files (from Poky)
    
    Signed-off-by: Richard Purdie <rpurdie@linux.intel.com>

2	2	lib/bb/ui/puccho.py

commit 4c676d7732a9e9ec61ad66b2e83a4eca0956f7ab
Author: Chris Larson <clarson@mvista.com>
Date:   2009-07-22 11:12:27 -0700

    Add .gitignore, ignore *.pyc.
    
    Signed-off-by: Chris Larson <clarson@mvista.com>

1	0	.gitignore

commit fccae58a704543c86f936dde5c1ba026fadfaabe
Author: Chris Larson <clarson@mvista.com>
Date:   2009-07-17 15:26:45 -0700

    taskdata: fix a possible infinite loop when multiple eligible providers aren't buildable
    
    The code which removes providers which aren't buildable from the eligible list
    modifies the list while iterating it, resulting in skipping some entries.  If
    the list contained two failed providers in sequence, it left the second behind
    in the eligible list.
    
    Fixed by replacing the block with a list comprehension that constructs a new
    eligible list without the failed entries.
    
    Signed-off-by: Chris Larson <clarson@mvista.com>

2	10	lib/bb/taskdata.py

commit c3d58e612592e8128f946cb94bb25d85ad9d171e
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2009-06-19 10:30:15 +0000

    Merge the BBCLASSEXTEND code from Poky. This allows once recipe to provide mutliple targets (e.g. -native and -sdk) and has been discussed on the OE mailing list

1	0	ChangeLog
62	8	lib/bb/cache.py
3	9	lib/bb/cooker.py
15	2	lib/bb/parse/parse_py/BBHandler.py
1	1	lib/bb/shell.py

commit 45acd91e3f7b5f195c0921f1d7a3beb700525400
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2009-05-12 14:29:20 +0000

    providers.py: Fix + character escaping from PACKAGES_DYNAMIC (thanks Otavio Salvador)

1	0	ChangeLog
1	2	lib/bb/providers.py

commit 43d486cd8bcc95eb60bd1530b462b1c43618da0f
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2009-05-11 21:49:13 +0000

    data.py: Make sure allowed variables inherited from the environment are exported again (from Poky)
    shell.py: When running a stage task in bbshell, run populate_staging, not the stage task (from Poky)

2	0	ChangeLog
1	0	lib/bb/data.py
1	1	lib/bb/shell.py

commit 51e7a28a098a194e6cdf10532e6b1ac586669a0f
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2009-05-11 21:33:14 +0000

    fetch/__init__.py: Set HOME environmental variable when running fetcher commands (from Poky)

1	0	ChangeLog
1	1	lib/bb/fetch/__init__.py

commit fdd4ccc42c19e9f5c069c83fd09f3bd15333cbb9
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2009-05-11 21:31:17 +0000

    fetch/git.py: Add username handling to git fetcher (from Poky)

1	0	ChangeLog
6	1	lib/bb/fetch/git.py

commit 5e8f28da755ad3c308b9e94e3849dcaf34d4b255
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2009-05-11 21:29:24 +0000

    fetch/wget.py: Fix wget fetching of urls with parameters specified (from Poky)

2	1	ChangeLog
1	1	lib/bb/fetch/wget.py

commit 36e892cedf337b771b51852d4875962abaa199d7
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2009-05-11 21:27:24 +0000

    fetch/hg.py: Fix hg checkouts of specific revisions (from Poky)

1	0	ChangeLog
6	3	lib/bb/fetch/hg.py

commit 531c2f77e305c229d39d0390896ee56da59ca6de
Author: Holger Hans Peter Freyther <zecke@selfish.org>
Date:   2009-05-11 06:13:07 +0000

    [bb] Remove unused imports reported by pyflakes

0	2	lib/bb/COW.py
1	1	lib/bb/data.py
2	2	lib/bb/msg.py
1	1	lib/bb/providers.py
1	2	lib/bb/taskdata.py
1	1	lib/bb/xmlrpcserver.py

commit 667bf5b303718f604afa06a3f2f5f7608005c096
Author: Holger Hans Peter Freyther <zecke@selfish.org>
Date:   2009-05-11 06:13:00 +0000

    [ui] Fix import statements reported by pyflakes
    
    We ignore the following kind of warnings
        import gtk
        import gtk.glade...
    
    as glade is not imported by default and need that extra line,
    pyflakes does not know...

0	2	lib/bb/ui/crumbs/buildmanager.py
0	1	lib/bb/ui/crumbs/runningbuild.py
1	0	lib/bb/ui/depexp.py
1	2	lib/bb/ui/goggle.py
0	3	lib/bb/ui/knotty.py
3	2	lib/bb/ui/ncurses.py
0	1	lib/bb/ui/puccho.py
1	1	lib/bb/ui/uievent.py

commit 08486ea715c8f5e48dfa8936326df5261ba3f5cb
Author: Holger Hans Peter Freyther <zecke@selfish.org>
Date:   2009-05-11 06:12:55 +0000

    [svk] pyflakes things the go method is broken...
    
    Is anyone still using svk? I don't want to mess with this code
    when it might work (due a global) but I might break it... my guess
    is that is supposed to be ud.date.

1	0	lib/bb/fetch/svk.py

commit 4d88a4782706edee3a03ce51dc0cd60bfe4107cb
Author: Holger Hans Peter Freyther <zecke@selfish.org>
Date:   2009-05-11 06:12:40 +0000

    [fetchers] Make pyflakes happy by removing these import statements
    
    We don't use the modules, no need to import them here.

1	7	lib/bb/fetch/__init__.py
0	1	lib/bb/fetch/bzr.py
1	1	lib/bb/fetch/cvs.py
1	2	lib/bb/fetch/git.py
1	1	lib/bb/fetch/hg.py
1	1	lib/bb/fetch/local.py
1	2	lib/bb/fetch/perforce.py
0	2	lib/bb/fetch/ssh.py
1	1	lib/bb/fetch/svk.py
1	1	lib/bb/fetch/svn.py
1	1	lib/bb/fetch/wget.py

commit a8d10f237928b05af745de6327d77d796f514dba
Author: Holger Hans Peter Freyther <zecke@selfish.org>
Date:   2009-05-11 04:30:12 +0000

    [bb] Fix the tests by setting a debug level at start
    
    In preparation for python3.0 make sure our test cases
    are working again.

1	0	lib/bb/__init__.py
2	0	lib/bb/data.py

commit 845070a26d27b8f2db6a373f6ff3cc74548d96e3
Author: Marcin Juszkiewicz <marcin@juszkiewicz.com.pl>
Date:   2009-04-21 19:15:53 +0000

    lib: remove use of 'sets' to make Python 2.6 happy
    
    Acked-by: Chris Larson <clarson@kergoth.com>

2	2	lib/bb/COW.py
1	2	lib/bb/cache.py
2	3	lib/bb/cooker.py
2	3	lib/bb/data_smart.py
3	4	lib/bb/runqueue.py

commit 60e36de1b7c72139933bc1760094f28a64dc6b43
Author: Chris Larson <clarson@kergoth.com>
Date:   2009-04-17 23:14:05 +0000

    bb.fetch.go: iterate over SRC_URI, not urldata.
    
    urldata can contain urls other than just what's in SRC_URI.  The urls of
    mirrors, premirrors, stashes, etc can end up in there as well, and we don't
    want bb.fetch.go to be fetching those things directly.
    
    Signed-off-by: Chris Larson <clarson@mvista.com>

3	2	lib/bb/fetch/__init__.py

commit c3a887302b587bc14f88e7a757c6aeddc24c79ba
Author: Chris Larson <clarson@kergoth.com>
Date:   2009-04-17 23:13:54 +0000

    bb.fetch.git: make empty host pass a file uri to git.
    
    Signed-off-by: Tom Rini <trini@embeddedalley.com>
    Signed-off-by: Chris Larson <clarson@mvista.com>

4	1	lib/bb/fetch/git.py

commit 81b37c19c8716a56c93a519f15af76f5fede3e4d
Author: Chris Larson <clarson@kergoth.com>
Date:   2009-04-17 16:18:26 +0000

    bb.fetch: make try_mirror go through the dispatcher rather than using wget directly.
    
    Signed-off-by: Chris Larson <clarson@mvista.com>

18	13	lib/bb/fetch/__init__.py

commit a50104766965a8f48a8455502b804a18a9be5c02
Author: Chris Larson <clarson@kergoth.com>
Date:   2009-04-08 17:35:38 +0000

    Make the bbpath change for includes temporary rather than permanent.
    
    We currently modify BBPATH so that an include/require looks in the current
    working directory before it looks elsewhere.  Modifying it permanently
    doesn't gain anything, just polluting it with locations that don't need to
    stay there.
    
    Signed-off-by: Chris Larson <clarson@mvista.com>

0	6	lib/bb/parse/parse_py/BBHandler.py
7	0	lib/bb/parse/parse_py/ConfHandler.py

commit eedbd1c47fda11e4a3d6c8278e864d5fff1ecbd4
Author: Chris Larson <clarson@kergoth.com>
Date:   2009-04-08 17:35:19 +0000

    BBMASK: survive a non-existant path and don't keep the dir after globbing.
    
    Signed-off-by: Chris Larson <clarson@mvista.com>

7	4	lib/bb/cooker.py

commit 1ec5e8fbc4859a96834e1f4ba475a175aab57a5c
Author: Chris Larson <clarson@kergoth.com>
Date:   2009-04-08 17:35:05 +0000

    BBPKGS: act as a default that can be overridden via the cmdline.
    
    Signed-off-by: Chris Larson <clarson@mvista.com>

1	1	lib/bb/cooker.py

commit 4dd4c12f9672f662a80a4ae46027cae8a0605be6
Author: Holger Hans Peter Freyther <zecke@selfish.org>
Date:   2009-02-26 17:58:06 +0000

    Clean up by Otavio Salvador

1	4	lib/bb/fetch/git.py

commit 6bca82b5b9426d079a4b216ddcfa60dd76ebda9a
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2009-01-03 00:00:37 +0000

    cache.py: Simplfy logic (from Poky)

9	11	lib/bb/cache.py

commit 0eb1c4d7aafcd10843d3ca18ed225b0734b1ec56
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2009-01-02 23:52:02 +0000

    BBHandler: Move handler finalisation code into a separate function

35	57	lib/bb/parse/parse_py/BBHandler.py

commit 2ef2baff4ee6071bb2ebb783266e5e26ec2dbb98
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2009-01-02 17:26:01 +0000

    utils.py: Add bb.utils.prune_suffix function

1	0	ChangeLog
12	0	lib/bb/utils.py

commit f2cef98d8be009580b87a9b6e1b526444a86ee63
Author: Holger Hans Peter Freyther <zecke@selfish.org>
Date:   2008-12-14 20:07:11 +0000

    Tag BitBake 1.8.12 (update versions, MANIFEST, ChangeLog)

1	0	MANIFEST

commit e575ca0bdb74143321d810cc51cc5dcd629d944b
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2008-12-06 13:18:19 +0000

    Add puccho, goggle and crumbs metadata from Poky (by Robert Bradford)

18	0	lib/bb/ui/crumbs/__init__.py
459	0	lib/bb/ui/crumbs/buildmanager.py
606	0	lib/bb/ui/crumbs/puccho.glade
181	0	lib/bb/ui/crumbs/runningbuild.py
78	0	lib/bb/ui/goggle.py
426	0	lib/bb/ui/puccho.py

commit fa8cb50e731c86207cc0f6b748925db4c6e14195
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2008-12-06 13:13:58 +0000

    bin/bitbake: Fix cooker log handling after recent changes

4	8	bin/bitbake

commit 322861718500f16e29f1b92dfe956c1c76e84480
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2008-12-06 13:09:42 +0000

    cooker.py: Rearrange the code to allow init of new UIs

19	16	lib/bb/cooker.py

commit eeca44bb6767e852c129bf61c4cfd776537ec19b
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2008-12-06 13:04:01 +0000

    shell.py: Catch up with core changes

1	5	lib/bb/shell.py

commit 9f5dbcce6fd49383821d5f36fb88d35ddabc613f
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2008-12-06 13:03:19 +0000

    Update the UIs against the core changes and allow dynamic loading of the UI so UIs become truly plugable.

15	36	bin/bitbake
1	1	lib/bb/ui/depexp.py
7	4	lib/bb/ui/knotty.py
3	2	lib/bb/ui/ncurses.py

commit a946f9b948adb5046de65ee98c5cdebd803888d5
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2008-12-06 12:59:55 +0000

    Rename depexplorer -> depexp for consistency

0	0	lib/bb/ui/{depexplorer.py => depexp.py}

commit 6bc2abc8d569b813ad5507d0b6600889983e80fd
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2008-12-06 12:58:29 +0000

    command.py: Standardise to getVariable and setVariable functions for consistent naming

10	1	lib/bb/command.py
2	2	lib/bb/ui/knotty.py

commit f7d2413939ba15b024a853c960c27d22a4a3ac4e
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2008-12-06 12:57:17 +0000

    Pass around the tasks to execute rather than using magic variables. Also use the empty_environment() function to clear the environment

6	3	lib/bb/command.py
27	11	lib/bb/cooker.py
0	2	lib/bb/data.py
1	5	lib/bb/shell.py
7	0	lib/bb/utils.py

commit a59037d9b5baecfdf389a6d57712ea709d0b1ff6
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2008-12-06 12:43:35 +0000

    utils.py: Add empty_environment() function and call this from the cooker instead of hiding in data.py (from Poky)

4	0	ChangeLog

commit 731d2a04190caf41befe5ea4d93a4daf0fd856b8
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2008-12-06 12:37:35 +0000

    fetch/__init__.py: export more variables to the fetcher commands to allow ssh checkouts and checkouts through proxies to work better. Also allow user and pswd options in urls globally and improve proxy handling when using mirrors (from Poky)

11	1	lib/bb/fetch/__init__.py

commit cc170b312aa15b5ba48756fd63fd3c57649f1599
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2008-12-06 12:29:00 +0000

    wget.py: Add support for HTTP_PROXY and HTTP_PROXY_IGNORE variables to the wget fetcher

1	0	ChangeLog

commit 080eb8764a5a6ec3d7522ef8ec45b58547196d3e
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2008-12-06 12:27:37 +0000

    utils.py: Add clean_environment() function and call where appropriate (from Poky)

4	9	bin/bitbake
25	0	lib/bb/fetch/wget.py
15	0	lib/bb/utils.py

commit 92a1332420012712b19d5b080aa0bacb6bace4d1
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2008-12-06 12:16:38 +0000

    BBHandler: Improve file not fuond error message

1	0	ChangeLog

commit 11d7f5d78afaa98fb2b72cec0e6ad669a75413d0
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2008-12-06 12:12:52 +0000

    git.py: Add username handling to the git fetcher (Robert Bragg from Poky)

8	3	lib/bb/fetch/git.py

commit 2a2513138d9d1f5c7b6a1a6994b4f75deadb232c
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2008-12-06 12:09:11 +0000

    utils.py: Improve lock file function error handling (from Poky)

1	0	ChangeLog
18	9	lib/bb/utils.py

commit f0a99305198672cba31ae3a77e750de72ab129f3
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2008-12-06 12:06:47 +0000

    providers.py: Fix typos and add some further debug which can occassionaly be useful for debugging problems

3	2	lib/bb/providers.py

commit ae431c25bf8607da8367f673aeaf5b2ffa705193
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2008-12-06 12:05:19 +0000

    event.py: Remove the Pkg* events, the make no sense in the task based model bitbake now uses (From Rob Bradford in Poky)

0	4	lib/bb/cooker.py
0	12	lib/bb/event.py

commit 18baf8f89cbef4a9e965c6319f6a01b9cd7166bf
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2008-12-06 12:03:51 +0000

    cooker.py: Pass the task to run to tryBuild directly, don't use self.configuration.cmd (From Rob Bradford in Poky)

2	2	lib/bb/cooker.py
1	2	lib/bb/runqueue.py

commit 08f4da09006c75e0df862bf839a7687a691284e4
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2008-12-06 12:01:36 +0000

    runqueue.py: Fire the task started event from the worker process, not the server so the pid field is useful (from Rob Bradford in Poky)

6	2	lib/bb/runqueue.py

commit 3e4cedc7a4ca8f128d95ba09bb53dad8a11a9cf1
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2008-12-06 12:00:15 +0000

    Add the pid to the event messages so we can identify which worker events come from (From Rob Bradford in Poky)

5	0	lib/bb/event.py
4	0	lib/bb/runqueue.py

commit 9029933711a69ea0861f8cb86589933a68e6f46a
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2008-12-06 11:57:41 +0000

    Rename online/offline to sync/async for less confusion (from Rob Bradford in Poky)

38	38	lib/bb/command.py
4	4	lib/bb/cooker.py

commit 8438f8e8d2dae3a8a265cdbf5917293bf21701bb
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2008-12-06 11:52:21 +0000

    build.py: Add better debug to exec_func_python when python function execution fails from Poky)

9	2	lib/bb/build.py

commit 8c112e0aa9c8e12e1560a8894d5dfecd370a6bcc
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2008-12-06 11:50:02 +0000

    Add tryaltconfigs option to control whether bitbake trys using alternative providers to fulfil failed dependencies. It defaults to off, changing the default since this behaviour confuses many users and isn't often useful (from Poky).

3	0	ChangeLog
3	0	bin/bitbake
3	0	doc/bitbake.1
1	1	lib/bb/runqueue.py
2	1	lib/bb/taskdata.py

commit 0bc7836736f0087d91ac72ea3bbf9cc608687881
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2008-12-06 11:43:08 +0000

    When SRCREV autorevisioning for a recipe is in use, don't cache the recipe (from Poky)

1	0	ChangeLog
11	2	lib/bb/cache.py
2	0	lib/bb/fetch/__init__.py

commit 4ceea8cbc01c04fc1456b8219caf9c2df3d35fd2
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2008-12-06 11:32:59 +0000

    Add osc fetcher (from Joshua Lock in Poky)

1	0	ChangeLog
2	0	lib/bb/fetch/__init__.py
155	0	lib/bb/fetch/osc.py

commit 42e57e467b8334230436f24dc4bdfff64b52d2b3
Author: Holger Hans Peter Freyther <zecke@selfish.org>
Date:   2008-11-03 12:50:35 +0000

    [svn] Add @rev to svn checkout command
    
    Patch by borgcube@gmx.li
    
    Svn tries to be smart about revisions. So, when you check out an older revision of a file it goes to the latest revision (HEAD) and tries to go back to the old file. In this case it was impossible, since the whole thing was moved outside of svn's scope, so svn can't find the file in the HEAD revision.
    
    Svn treats this situation as an exception and provides the "peg-revision"-syntax for that. So where you would normally do
    svn co -r1337 http://url/to/somewhere/module module
    
    you would now have to do
    svn co -r1337 http://url/to/somewhere/module@1337 module,
    the @1337 telling svn to go start looking at revision 1337 instead of HEAD.

1	0	ChangeLog
3	1	lib/bb/fetch/svn.py

commit 58fe5ad52d94e26500fd1d3adb1a195d2703f2b0
Author: Marcin Juszkiewicz <marcin@juszkiewicz.com.pl>
Date:   2008-10-27 13:39:22 +0000

    cache: not existing cache file is not out of date

5	1	lib/bb/cache.py

commit 9ea8f9ea02fbe8954ade53f55f976d78834882af
Author: Marcin Juszkiewicz <marcin@juszkiewicz.com.pl>
Date:   2008-10-27 13:38:52 +0000

    taskdata: improved error message when BitBake is called with not existing target

12	3	lib/bb/taskdata.py

commit b74f8202306384b4f4def1150c03a89f5e0ee854
Author: Holger Hans Peter Freyther <zecke@selfish.org>
Date:   2008-10-26 16:50:02 +0000

    fetch/hg.py: Properly format the command if the user URI parameter is empty.

1	1	lib/bb/fetch/hg.py

commit c75988fc755c8b08d34e811ee2d8cb5496459347
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2008-10-20 14:10:09 +0000

    cooker.py: Fix an init problem (from poky)

1	1	lib/bb/cooker.py

commit 367918d3fa3e74ceacef33b269e035c666c8a875
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2008-10-20 14:07:13 +0000

    runqueue.py: Fix nostamp flag handling (from Poky)

1	1	lib/bb/runqueue.py

commit 037615297ccceb86b21971c2222afded83d9fbcd
Author: Holger Hans Peter Freyther <zecke@selfish.org>
Date:   2008-10-13 12:54:01 +0000

    [fetch] Always add PN to the _revision_key we get from the fetcher
        This is extending r1101 to always append something to the
        _revision_key of the fetcher. alphaone spotted that it was missing
        for the latest_revision case.

5	3	lib/bb/fetch/__init__.py

commit f6ec708818097f5ea9b23f3dea9fff6779844567
Author: Holger Hans Peter Freyther <zecke@selfish.org>
Date:   2008-10-12 22:14:10 +0000

    [git] Do not run git-rev-list everytime to increase the speed
        Cache the result of git-rev-list for a repo and hash. This
        speeds up do_package of the linux kernel tremendously.

7	1	lib/bb/fetch/git.py

commit b6a962e082b32cc32490ca6417b5d037c7d56959
Author: Holger Hans Peter Freyther <zecke@selfish.org>
Date:   2008-10-12 22:14:09 +0000

    [git] Optionally use git-rev-list to get a sortable revision
        With setting BB_GIT_CLONE_FOR_SRCREV="1" you can get a sensible
        and global (per repository with only fast forwards) revision. The downsides
        are you will have to have a repository at parse time which means you will
        git-clone certain trees you don't even use. This is also the reason why
        this is optional. This also means you might need to download your git
        checkouts to get this feature working.

35	0	lib/bb/fetch/git.py

commit 92a448ac98fc22d21170ffdcb8220bffabd9e2da
Author: Holger Hans Peter Freyther <zecke@selfish.org>
Date:   2008-10-12 22:14:08 +0000

    [git] Do not git-fetch if we already have the rev we want
        When not having internet do not fail on a not needed git-fetch

10	5	lib/bb/fetch/git.py

commit f82988a88c3e1ee8c5b784d1d2d2e41b4df2e3d3
Author: Holger Hans Peter Freyther <zecke@selfish.org>
Date:   2008-10-12 22:14:08 +0000

    [git] Disable downloading of checkouts.
        Instead of calling try_mirror check if we have a local checkout
        already. This code fetched a new checkout even if you had a local
        repository which is rather bad if you don't have internet but a full
        repository. And the overhead of a full checkout vs. repository is not
        too big anyway.

1	1	lib/bb/fetch/git.py

commit 33d4bb2864920e7ddb3fb8f47dbeb5ac95b7f44e
Author: Holger Hans Peter Freyther <zecke@selfish.org>
Date:   2008-10-12 22:14:07 +0000

    Allow to conditionally implement sortable revision in the fetcher

7	1	lib/bb/fetch/__init__.py

commit 161f708084e68041338e16d2a7ff3fcbb31db0a8
Author: Holger Hans Peter Freyther <zecke@selfish.org>
Date:   2008-10-12 22:02:23 +0000

    Make the revision key unique by adding the PN
        If two different recipes (e.g. linux-openmoko and linux-openmoko-devel)
        use the same git repository but with different SRCREVs the count just
        incremented on each parsing. By adding PN to the key we keep the count on
        a per package level. Spotted by Graeme.

2	0	lib/bb/fetch/__init__.py

commit 24b23417acc0d34a7dbcd6fe1d05aad87d46abe3
Author: Holger Hans Peter Freyther <zecke@selfish.org>
Date:   2008-10-08 01:48:01 +0000

    [bb.utils] Make prunedir cope with symlinks to directories
    
    2008-10-07  Julian Chu  <Julian_Chu@openmoko.com>
    
            Reviewed by Holger.
    
            The packagekit git repository contains a symlink and on fetching the
            pruning failed as "packagekit" is not a directory but a symlink to a
            directory.
    
            * lib/bb/utils.py:

1	0	ChangeLog
4	1	lib/bb/utils.py

commit 7a6dd971812c57b06c8d6dc40cd89df3839de5d3
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2008-09-30 22:19:07 +0000

    fetch/perforce.py: Fix to use commandline options instead of being overriden by the environment from Martyn Welch

1	0	ChangeLog
13	11	lib/bb/fetch/perforce.py

commit 40189d005ae6ef21a40692192cd12d4c2992b32b
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2008-09-30 21:11:09 +0000

    utils.py: Fix error message (from Joshua Lock)

1	1	lib/bb/utils.py

commit e1737a7506856f0660bf0fcf05517e1337dba1df
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2008-09-30 21:08:24 +0000

    bin/bitbake: Add better environmental variable handling. By default it will now only pass certain whitelisted variables into the data store. If BB_PRESERVE_ENV is set bitbake will use all variable from the environment. If BB_ENV_WHITELIST is set, that whitelist will be used instead of the internal bitbake one. Alternatively, BB_ENV_EXTRAWHITE can be used to extend the internal whitelist.

5	0	ChangeLog
11	0	bin/bitbake
6	15	lib/bb/data.py
0	3	lib/bb/data_smart.py
54	0	lib/bb/utils.py

commit 35562ac01ad18d3dc5374827e8fb5548a0a3537e
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2008-09-30 20:41:10 +0000

    cooker.py: Add parseConfiguration() function and move inheritFromOS call outside the parser and into cooker

1	0	bin/bitbake
4	0	lib/bb/cooker.py
0	1	lib/bb/parse/parse_py/ConfHandler.py

commit c6741cbaa6a7ebb5ae30c39f65701d76573a960d
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2008-09-30 20:28:11 +0000

    cooker.py: Rename __depends to __base_depends after configuration parsing so we don't recheck the validity of the config files time after time. Also bump the cache revision to match the format change (from poky)

2	0	ChangeLog
1	1	lib/bb/cache.py
1	0	lib/bb/cooker.py

commit db2d02b7ee22557bfe56509f52e931a91a22d5d0
Author: Marcin Juszkiewicz <marcin@juszkiewicz.com.pl>
Date:   2008-09-30 20:19:12 +0000

    AUTHORS: update my email address

1	1	AUTHORS

commit 5a99826452116929e22023af052ee130554a8ae3
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2008-09-30 20:13:00 +0000

    parse/__init__.py: Fix missing update_mtime function causing shell reparsing breakage (from poky)

4	0	lib/bb/parse/__init__.py

commit 10aea1a81a18c646d5f95f07eddc3cf8cc086f93
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2008-09-30 20:10:52 +0000

    providers.py: Fix PACKAGES_DYNAMIC handling of packages with '++' in the name (from poky)

1	0	ChangeLog
1	0	lib/bb/providers.py

commit 60794b169f005a712aa1c1668b45640fdd1832cf
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2008-09-30 20:05:51 +0000

    fetch/hg.py: Fix hg fetcher username/password handling and fix crash

1	0	ChangeLog
8	2	lib/bb/fetch/hg.py

commit b3acedac34137d83dda0f4aafe2c4af9031364e4
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2008-09-30 20:04:19 +0000

    fetch/__init__.py: Raise an exception if SRCREV == 'INVALID' (from Poky)

1	0	ChangeLog
5	0	lib/bb/fetch/__init__.py

commit af88d22ee676fde9af6477eb75dde9ca38e8d17e
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2008-09-30 20:01:46 +0000

    utils.py:  Move prunedir function to utils.py and add explode_dep_versions function

1	0	ChangeLog
2	11	lib/bb/fetch/git.py
37	0	lib/bb/utils.py

commit 301f25d11610f2394dd4d977dd0de533ceb345b9
Author: Chris Larson <clarson@kergoth.com>
Date:   2008-09-11 17:51:05 +0000

    Vim syntax:
    - Highlight variable expansions as PreProc, both the braces & the contents.
    - Highlight inline python (${@...}) as PreProc for the braces and as actual
      python inside.

21	14	contrib/vim/syntax/bitbake.vim

commit 7edb5f6d85e215fd2697672789add3108e4e76e5
Author: Holger Hans Peter Freyther <zecke@selfish.org>
Date:   2008-07-27 07:44:26 +0000

    [cvs] Allow to checkout by date and time
        With putting YYYYYMMDDHHmm into the SRCDATE bitbake will checkout
        using "-D YYYYMMDD HH:mm UTC". Be careful when you switch from SRCDATE
        with time and without to always get updatable packages.

1	0	ChangeLog
5	1	lib/bb/fetch/cvs.py

commit 9ba94cc8c0d0c178050c09e6b47bb5c0db408a7a
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2008-07-19 21:12:10 +0000

    providers.py: Fix indentation errors

2	2	lib/bb/providers.py

commit ac40dabb22b6dd6a85c57933f4097e111a8d49a5
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2008-07-19 17:58:18 +0000

    providers.py: When a regexp fails to compile for PACKAGES_DYNAMIC, print a more useful error (#4444)

1	0	ChangeLog
5	1	lib/bb/providers.py

commit 1501addb048501716c300ca7422135d11e977252
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2008-06-10 09:33:30 +0000

    Revert the '-' character fix in class names since it breaks things

1	0	ChangeLog
2	2	lib/bb/parse/parse_py/BBHandler.py

commit 9577a9d25f9e5af4709338268df5d5d29a010eb8
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2008-05-21 21:26:46 +0000

    build.py: Make sure expandKeys has been called on the data dictonary before running tasks fixing various strange issues (from poky). Correctly add a task override in the form task-TASKNAME which whilst a change in behaviour shouldn't matter since the original approach didn't work at all

2	0	ChangeLog
2	1	lib/bb/build.py

commit 0e1ff8f8befd09b2060499e1ccddc9bb68b41118
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2008-05-19 20:39:48 +0000

    manuals: Add missing options documentation (thanks to zecke for noticing and the patch)

7	6	doc/bitbake.1
2	0	doc/manual/usermanual.xml

commit cde4e4f6a65aa8532f066cdd2e240bbe06995d0c
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2008-05-19 20:16:03 +0000

    BBHandler.py: Correctly handle '-' characters in class names (#2958)

1	0	ChangeLog
2	2	lib/bb/parse/parse_py/BBHandler.py

commit 4c0b17f16b58b3fad56bc6c3857c411ce58992e4
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2008-05-12 14:21:36 +0000

    utils.py:  Add md5 and sha256 checksum generation functions from Ross Burton (via Poky)

1	0	ChangeLog
1	8	lib/bb/fetch/__init__.py
31	0	lib/bb/utils.py

commit 35c3263578d2120d534444fa5e81d845ad9208cb
Author: Holger Hans Peter Freyther <zecke@selfish.org>
Date:   2008-05-11 13:45:48 +0000

    Allow to store the PersistData in a PERSISTENT_DIR.
    
    If PERSISTENT_DIR is used wiping the tmpdir will not wipe the PersistData
    which sometines is wanted (e.g. for git SRCREVs).
    
    Acked-By: Richard

2	0	ChangeLog
2	2	lib/bb/persist_data.py

commit 9bfc553546313cf2322a9e3824fec388b20e80d5
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2008-05-09 13:12:47 +0000

    runqueue.py: Add bb.runqueue.check_stamp_fn() for use by packaged-staging, also improve check_stamp_task debug output

1	0	ChangeLog
21	3	lib/bb/runqueue.py

commit 5c0671c7028c135e2da5ef832c452af505df740d
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2008-05-09 10:23:19 +0000

    runqueue/taskdata.py: Make sure recrdeps tasks include all inter-task dependencies of a given fn

1	0	ChangeLog
6	2	lib/bb/runqueue.py
10	0	lib/bb/taskdata.py

commit 02a48b3e3962b5dc25def67154816de6f97e7f43
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2008-05-09 10:12:27 +0000

    runqueue.py: Flush stdout/stderr before forking to fix duplicate console output

1	0	ChangeLog
2	0	lib/bb/runqueue.py

commit 8b41c6d1dcf7ac54386913ab17ae9524f6061b00
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2008-05-09 10:08:56 +0000

    providers.py: No longer weight providers on the basis of a package being "already staged". This leads to builds being non-deterministic.

2	0	ChangeLog
0	28	lib/bb/providers.py

commit 03f02503c29892ccbe7db92585903d4c4b16c0e9
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2008-05-05 09:22:57 +0000

    runqueue.py: Fix default whitelist variable value

1	1	lib/bb/runqueue.py

commit 814203c59006bea789034825fbd3a0cc6d1b1ee2
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2008-05-04 23:01:39 +0000

    runqueue.py: Add BB_STAMP_WHITELIST option which contains a list of stamps to ignore when checking stamp dependencies and using a BB_STAMP_POLICY of 'whitelist'. Useful for packaged-staging

2	0	ChangeLog
21	2	lib/bb/runqueue.py

commit e9bf48c6c049dc58878e53c9d0f1f8e6fb856ea0
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2008-05-04 22:58:17 +0000

    providers.py: Improve runtime PREFERRED_PROVIDERS warning messages to be more user friendly

2	1	ChangeLog
7	1	lib/bb/providers.py

commit d9d3da757fa395472728c5cf3cab3bdc27b3448b
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2008-04-27 12:51:57 +0000

    fetchers: Tweak the new checkstatus code to handle some corner cases better

3	0	lib/bb/fetch/local.py
1	1	lib/bb/fetch/wget.py

commit 91e4ef14fc1858c4f49ca65d29fe41339fe2bdbd
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2008-04-27 11:20:24 +0000

    trunk cvs.py: Sync with 1.8 branch

1	1	lib/bb/fetch/cvs.py

commit 39304af2d2d33ec5bf00b4f05e9a67ee36c0f035
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2008-04-27 11:16:02 +0000

    ncurses.py: Develop slightly further, various improvements

77	45	lib/bb/ui/ncurses.py

commit 4d376349347de388b92f477f102d1bbf299328af
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2008-04-27 11:13:59 +0000

    uihelper.py: Fill out the code a bit more

19	9	lib/bb/ui/uihelper.py

commit 06560a3a3747d69d22d4bd0ab247eae37e21d0e4
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2008-04-27 11:13:07 +0000

    runqueue.py: Improve failed task state engine handling

12	10	lib/bb/runqueue.py

commit 1310946bb0a71cd02b3aedd6fc53d0d082011941
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2008-04-27 11:11:38 +0000

    cooker.py: Reorder calls to avoid cache issues

4	4	lib/bb/cooker.py

commit f0b571546a47708a7e8ca75d21d3e8e6f84741f7
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2008-04-27 11:09:50 +0000

    lib/bb/fetch: Add ability to fetchers to check URL validity without downloading

1	0	ChangeLog
24	0	lib/bb/fetch/__init__.py
8	0	lib/bb/fetch/local.py
11	5	lib/bb/fetch/wget.py

commit 24bfa3d4b2c07ca5d6773a985130c085d2e56dd9
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2008-04-08 11:36:36 +0000

    fetch/__init__.py: Improve runfetchcmd so errors are seen and various GIT variables are exported

1	0	ChangeLog
14	5	lib/bb/fetch/__init__.py

commit 376946192e314ee0bd7d29e754e57bbbba52a36a
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2008-04-08 10:29:07 +0000

    fetch/cvs.py Add proxy support to CVS fetcher (patch from Cyril Chemparathy/Poky)

1	0	ChangeLog
8	1	lib/bb/fetch/cvs.py

commit 9d3fe600317f92b563ea9def9f2b904cb9e3a90e
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2008-04-06 20:58:07 +0000

    Add experimental/toy dependency explorer UI (based on some code from Ross Burton but the bugs are mine)

271	0	lib/bb/ui/depexplorer.py

commit 37adfd0e97484f56bc5201904f59a6b1d67545fb
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2008-04-06 20:52:59 +0000

    Add experimental/toy dependency explorer UI (based on some code from Ross Burton but the bugs are mine\!)

16	8	bin/bitbake

commit e91230439ca2563f43de616cc78e4011cb58ab9d
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2008-04-06 20:02:59 +0000

    xmlrpcserver.py: Drop python 2.4 hacks, add BitBakeServerCommands class to make the server commands clearer

1	2	lib/bb/cooker.py
48	70	lib/bb/xmlrpcserver.py

commit 7f00f95223bd2f7dfca94e8c0379a91f8096043e
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2008-04-06 20:01:20 +0000

    event.py: Clean up the event handling code and some legacy funtions

22	60	lib/bb/event.py

commit 1fa41048d64006c143c6acfe1562b0946750a25e
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2008-04-06 20:00:22 +0000

    utils.py: Improve compile/execute error messages

1	1	lib/bb/ui/uievent.py
2	2	lib/bb/utils.py

commit e85b699179d7a09bc029443a10df3cb636af3930
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2008-04-06 19:52:09 +0000

    knotty.py: Rename frontend to server to make things a bit clearer

7	7	lib/bb/ui/knotty.py

commit 5e1b4cba247d9219c7c920a1ce9d1990a37fc733
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2008-03-28 17:18:42 +0000

    cache.py: Fix a bug where changed files weren't getting spotted and an invalid cache was being used

2	2	lib/bb/cache.py

commit b078757f05a7f9b004e88e7f94638d962f9df7fb
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2008-03-17 12:21:35 +0000

    git.py:  Work around refs/HEAD issues with git over http (fixes #3410)

1	0	ChangeLog
2	2	lib/bb/fetch/git.py

commit 38ce7b95b9f76afaf1d2fe9b39817411b0b3ba57
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2008-03-16 12:54:01 +0000

    Add return value handling (thanks pH5)

1	0	ChangeLog
4	2	bin/bitbake
9	4	lib/bb/ui/knotty.py

commit 8b25cead6217c458cc6db32b9705ecdf3b2ff66f
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2008-03-16 12:07:31 +0000

    cooker.py: Remove leftover from old code, fixing double parsing whe using the -b option

0	1	lib/bb/cooker.py

commit be5a87bcaa11221d3843b284cedde44805f107b1
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2008-03-15 12:41:09 +0000

    cooker.py: Turn buildFile into a fully blown offline command with idle function fixing -b issues

0	1	lib/bb/command.py
24	10	lib/bb/cooker.py

commit cc88a6c51e26525aed8a0685fc98b197a1c62691
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2008-03-15 12:10:03 +0000

    build.py: Fix incorrect variables (thanks pH5)

5	5	lib/bb/build.py

commit 45512f91ea2eb3838f12d111001621195931fff0
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2008-03-13 23:32:03 +0000

    cache.py: Ignore cache load errors and always just rebuild

1	1	lib/bb/cache.py

commit 849d6163a419627bb34d246a125d8ea155ac6caf
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2008-03-13 23:31:19 +0000

    build.py: Fix incorrect variable name

1	1	lib/bb/build.py

commit a2318f4052ff4ebcfcbd68062b910a465d6bd17d
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2008-03-13 23:31:00 +0000

    runqueue.py: Fix typo (thanks pH5)

1	1	lib/bb/runqueue.py

commit e194c60f27eff767c63b8e8fbfe006f275ad4ecd
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2008-03-13 23:30:31 +0000

    ui/knotty.py: Ignore StampUpdate events

2	0	lib/bb/ui/knotty.py

commit c93014671c0cfe7670335e204f3e14f0d42d0eb6
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2008-03-13 22:46:17 +0000

    cache.py: Improve the way various data structures are handled to speed up the hot cache data path

39	37	lib/bb/cache.py
2	2	lib/bb/taskdata.py

commit 4ad6a9e946f7128112f147610aedf69b0432ec0b
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2008-03-13 22:31:01 +0000

    runqueue.py: Fix problems with recrdeptask handling where some idepends weren't handled correctly

2	0	ChangeLog
37	7	lib/bb/runqueue.py

commit cabc373a669801b0bbee6cf74a17c00796948ca1
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2008-03-13 22:27:20 +0000

    runqueue.py: Switch to check_stamp code since its simpler than check_stamps and accounts for tasks which adjust other stamps in the system such as packaged staging. The drawback is we can't 'accelerate' task numbers to get an accurate idea of how many tasks will run

37	9	lib/bb/runqueue.py

commit a86ac9e2f8932e5a1ec7596b5129ae7b6fe5349b
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2008-03-13 22:21:49 +0000

    runqueue.py: Fix check_stamps function

13	8	lib/bb/runqueue.py

commit 187d8221fb7e0b4785a8e760c648975a5ae812b7
Author: Michael 'Mickey' Lauer <mickey@vanille-media.de>
Date:   2008-03-08 12:00:06 +0000

    cooker: fix traceback when using -b and -f together

1	0	ChangeLog
1	1	lib/bb/cooker.py

commit 0dc5e80d24b1ebc01b9ad279e7d4287a48650b4a
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2008-03-06 10:35:04 +0000

    taskdata.py: When handling build target failures make sure idepends are checked and failed where needed. Fixes --continue mode crashes.

2	0	ChangeLog
10	14	lib/bb/runqueue.py
7	3	lib/bb/taskdata.py

commit b90175e1b53cffd4bb02a71a63453af3f14d4065
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2008-02-29 23:06:43 +0000

    cache.py: Bump the cache version since digraph was removed and mayb still be present in old cache files

1	1	lib/bb/cache.py

commit 9f6ed770dafb78b98f646f1736fd41e56e579996
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2008-02-28 22:18:05 +0000

    build.py: Fix task variable expansion issue

6	2	lib/bb/build.py

commit 89dcff155111d4ae4d2a0242081c630c163df20f
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2008-02-28 09:10:47 +0000

    runqueue.py: Add BB_SCHEDULER and BB_STAMP_POLICY variables

4	0	ChangeLog
15	6	lib/bb/runqueue.py

commit bb91105472eff555d3c934f0953b6907a5fb42f1
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2008-02-27 23:51:25 +0000

    runqueue.py: Fix recursive looping issue

3	2	lib/bb/runqueue.py

commit 435d04828a06ade315e5dc7d74e35e51f5429e40
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2008-02-27 23:50:44 +0000

    fetch/__init__.py: Make fetcher timestamp updating non-fatal when permissions don't allow updates

2	0	ChangeLog
10	2	lib/bb/fetch/__init__.py

commit f0b8d75a283610dd5b0705ce91feb1e857239891
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2008-02-26 17:58:24 +0000

    Remove digraph and switch to new stamp checking code.

2	0	ChangeLog
0	179	lib/bb/__init__.py
34	142	lib/bb/build.py
0	1	lib/bb/cache.py
5	7	lib/bb/cooker.py
14	21	lib/bb/parse/parse_py/BBHandler.py
9	17	lib/bb/runqueue.py
2	3	lib/bb/taskdata.py

commit 68631d637275502e8303ccef5a1046753bd0d4dc
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2008-02-26 17:32:00 +0000

    Convert -b option to use taskdata/runqueue

1	0	ChangeLog
39	7	lib/bb/cooker.py

commit e608db7e231d300c99790f07e49b8951e1e3c0fa
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2008-02-26 17:23:31 +0000

    runqueue.py: Add StampUpdate event

1	0	ChangeLog
17	0	lib/bb/event.py
92	7	lib/bb/runqueue.py

commit d2d97c5dc951398d5bf3f4b70b748d82d0b0e01b
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2008-02-26 17:09:20 +0000

    shell.py: Update to use cooker.buildFile()

1	0	ChangeLog
5	18	lib/bb/shell.py

commit a3c573c197e5f25dedb973e4fb4dc2763266d743
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2008-02-26 16:57:08 +0000

    utils.py: Tweak explode_deps function to remove unused manipulation

4	4	lib/bb/utils.py

commit da1b19c7fbb81761ff98628601556fb8f7e856e5
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2008-02-24 23:37:47 +0000

    build.py: Remove uneeded mkdirhiercall

0	1	lib/bb/build.py

commit 39e91db237daff104d26377c2270914b9252de8a
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2008-02-24 11:35:18 +0000

    build.py: Convert exec_task to use getVarFlags

1	0	ChangeLog
22	15	lib/bb/build.py

commit 62200483d82d456a506255dab76d97ba233d1cb3
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2008-02-24 11:31:46 +0000

    cooker:Remove a debug message from the parsing loop to lower overhead

2	1	ChangeLog
1	1	lib/bb/cooker.py

commit 83ac72a4b90ea1333a1b6d7bafca1c7578e6e71e
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2008-02-24 11:29:18 +0000

    cache: Optmise cache handling by more quickly detecting an invalid cache, only saving the cache when its changed, moving the cache validity check into the parsing loop and factoring some getVar calls outside a for loop.

3	0	ChangeLog
44	18	lib/bb/cache.py

commit b349ab740ccdbd363f151b40cf9e9787af6ef201
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2008-02-24 11:25:23 +0000

    data_smart: Fix getVarFlags bug in data_smart

1	0	ChangeLog
2	2	lib/bb/data_smart.py

commit 0697bf5fd51840ed192f711e14b9b39f6f17c244
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2008-02-23 23:24:31 +0000

    bbimage: Update to reflect recent core changes

5	0	bin/bbimage

commit 48e2aa0ae3c39ec546a6c8fc8a2a661d8f0ca4d0
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2008-02-23 17:54:00 +0000

    cooker, BBHandler: Change parseConfigurationFile so it works on real data, not a copy.  Handle 'base' inherit and all other INHERITs from parseConfigurationFile instead of BBHandler

3	0	ChangeLog
7	11	lib/bb/cooker.py
5	11	lib/bb/parse/parse_py/BBHandler.py

commit f543c2deea635e65c6b5b61dbda2401fb773a353
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2008-01-22 13:09:16 +0000

    git.py: Fix git branch tags fetching

1	0	ChangeLog
1	1	lib/bb/fetch/git.py

commit 5c2f85e2f600eba5dca367fc6358d1eee64aacc0
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2008-01-21 10:04:52 +0000

    runqueue.py: Fix exit code for build failures in --continue mode

1	0	ChangeLog
3	3	lib/bb/runqueue.py

commit 325d9944b725eb4cb839686192d3f5860a9eb163
Author: Michael 'Mickey' Lauer <mickey@vanille-media.de>
Date:   2008-01-20 13:23:51 +0000

    (trunk) fetcher/git: remove debug output, add docstring

3	2	lib/bb/fetch/git.py

commit 5970f6c957f53bfa3bb4aa7c7fc855f1e2848e55
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2008-01-20 12:53:08 +0000

    persist_data.py: Add sqlite version checks

2	2	bin/bitbake
5	1	lib/bb/persist_data.py

commit b8800106d2d2d641b7fd895d08f4b41806ae8ee4
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2008-01-20 12:26:28 +0000

    bitbake: Make trunk python 2.5+ only

5	0	bin/bitbake

commit b0b0f8043985c95163b952dcda5574fc9850b4b8
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2008-01-20 12:07:40 +0000

    cvs.py: Add norecurse and fullpath options to cvs fetcher (from Poky/Marcin)

1	0	ChangeLog
19	4	lib/bb/fetch/cvs.py

commit 152bd6c4ec09bef0af71aafc4c0f2ba3891c745d
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2008-01-19 18:56:40 +0000

    taskdata/runqueue.py: Make taskdata and runqueue errors more user friendly

2	1	ChangeLog
2	2	lib/bb/runqueue.py
26	15	lib/bb/taskdata.py

commit d7fc941539c87b962a97a4dae3024d67e5d2c2a3
Author: Michael 'Mickey' Lauer <mickey@vanille-media.de>
Date:   2008-01-18 20:36:20 +0000

    bitbake 1.9.x: add branch support to the git fetcher -- thanks Otavio Salvador.

1	0	ChangeLog
4	1	lib/bb/fetch/git.py

commit ad27c240d742f409b6300c6e5dcf1046189f1388
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2008-01-12 18:40:48 +0000

    wget.py: Change the wget fetcher failure handling to avoid lockfile problems

1	0	ChangeLog
3	3	lib/bb/fetch/wget.py

commit dd92fb24249198bea7e0afe4488162f5fa91f1e4
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2008-01-06 23:50:56 +0000

    cooker.py: Fix -g option breakage from previous commits

1	3	lib/bb/cooker.py

commit e7012f75948114bb8a7596e2a9543af012d1e30e
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2008-01-06 17:35:11 +0000

    fetchers: Properly raise errors for invalid source URI protocols (from poky). utils.py: Fix a spelling mistake.

1	0	ChangeLog
2	1	lib/bb/fetch/__init__.py
2	2	lib/bb/utils.py

commit 97750696168d286a1005cd8b7272d31c4c270be6
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2008-01-06 13:13:02 +0000

    shell.py: Fix shell data updating problems (#1880)

1	0	ChangeLog
0	2	lib/bb/cooker.py
15	13	lib/bb/shell.py

commit 6a1d6ac78b01221860a1a6566f5dc975a91d6fb8
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2008-01-06 12:37:38 +0000

    Fix shell showdata command (#3259)

1	0	ChangeLog
2	1	lib/bb/command.py
3	3	lib/bb/shell.py

commit 3cf1af3efb8da9dffdd57423c73360c8ce727cca
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2008-01-06 10:59:05 +0000

    cooker.py: Add support for '-e target' (#3432)

1	0	ChangeLog
40	11	lib/bb/cooker.py

commit 66dfbb0fe1d25283e9a176f1b13415735968fb7e
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2008-01-06 00:54:46 +0000

    runqueue.py:  Don't give a stacktrace for invalid tasks, have a user friendly message (#3431)

1	0	ChangeLog
3	0	lib/bb/runqueue.py

commit 223e4cbbaa8a0ea96fba850b8d6f7cb938794ef0
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2008-01-06 00:05:09 +0000

    runqueue.py: Add task scheduler abstraction and some example schedulers. Improve circular dependency chain debugging code and user feedback.

2	0	ChangeLog
237	74	lib/bb/runqueue.py

commit 2dcf122a9a157f002d053411bc10e219b679658a
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2008-01-05 23:58:56 +0000

    runqueue.py: Improve code comments

1	0	ChangeLog
52	9	lib/bb/runqueue.py

commit 32d2d4f60fa13cd6c4039e4eef158851ad001a7b
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2008-01-05 23:52:36 +0000

    runqueue.py: Disable task number acceleration since it can allow the tasks to run out of sequence

2	0	ChangeLog
12	11	lib/bb/runqueue.py

commit 4a9408ef274bbf63620f137f4de2d3b9f17f372c
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2007-12-01 21:35:33 +0000

    Add selfstamp and lockfiles flags

1	0	ChangeLog
11	1	lib/bb/build.py

commit ea8030bcd70b57dbb7b34247c70670b2c249b85a
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2007-11-24 18:15:49 +0000

    Add bb.utils.lockfile() and bb.utils.unlockfile() from Poky. Use these functions in the fetcher code

1	0	ChangeLog
3	6	lib/bb/fetch/__init__.py
36	1	lib/bb/utils.py

commit 6ab4071912b1e6e93147d4ba538f6780986e0683
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2007-11-17 22:54:37 +0000

    Fetcher SRCREV handling updates, improvements and fixes from Poky, typo fix for bin/bitbake

1	0	ChangeLog
1	1	bin/bitbake
51	2	lib/bb/fetch/__init__.py
13	14	lib/bb/fetch/bzr.py
12	5	lib/bb/fetch/git.py
0	9	lib/bb/fetch/hg.py
7	9	lib/bb/fetch/svn.py

commit e1df62ac1aa1da88dfe3d80d917386f47627a5aa
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2007-11-17 22:47:49 +0000

    perforce.py: Typo fix from Embedded Alley

1	1	lib/bb/fetch/perforce.py

commit e843427c801f7ce51e970f07cee259de982f8d76
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2007-11-08 09:47:39 +0000

    git.py: Use git-fetch instead of git-pull removing any need for merges when fetching (we don't care about the index). Fixes fetch errors. Add BB_GENERATE_MIRROR_TARBALLS option, set to 0 to make git fetches faster at the expense of not creating mirror tarballs. (from poky)

4	0	ChangeLog
5	5	lib/bb/fetch/git.py

commit 5f09c666d1050a1140f1adb7c2da8593a706995c
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2007-10-30 12:36:07 +0000

    runqueue.py:  Allow multiple options for deptask flag (from poky), fix comment typo in trunk.

1	0	ChangeLog
4	4	lib/bb/runqueue.py

commit c4c6dc3beda55471fed12aa6c738e414ca862914
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2007-10-30 12:17:04 +0000

    bb/__init__.py: Add bb.copyfile function similar to bb.movefile (and improve movefile error reporting)

1	0	ChangeLog
75	16	lib/bb/__init__.py

commit 332e97786fc56bbd063bfe19cb3b65b738657611
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2007-10-22 12:25:28 +0000

    data.py: Fix unexport handling (#3135)

1	0	ChangeLog
3	3	lib/bb/data.py

commit 81e85dd541f964cf3c23a2a76a00c72896122e42
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2007-10-21 23:33:01 +0000

    taskdata.py: Fix 'depends' flag splitting

1	0	ChangeLog
6	2	lib/bb/taskdata.py

commit 4508aec12f61c603bd563260b3bc412cce196df9
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2007-10-21 23:11:16 +0000

    providers.py: Fix bogus preferred_version return values

1	0	ChangeLog
2	1	lib/bb/providers.py

commit 2efe83bfe12515762eb40932dab98463d5a58f8b
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2007-09-17 08:04:18 +0000

    BBHandler: Don't add duplicates to BBPATH

1	0	ChangeLog
4	2	lib/bb/parse/parse_py/BBHandler.py

commit 3fc25b4666d696fc73f66ea840b950de4217d6f4
Author: Holger Hans Peter Freyther <zecke@selfish.org>
Date:   2007-09-09 12:41:02 +0000

    Fix the MANIFEST to include the two new files

2	0	MANIFEST

commit b807fdd653c0f7ccb8eb8da00af15e1ca8b46b75
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2007-09-05 21:08:54 +0000

    fetch/: Add mercurial (hg) fetcher from Robert Schuster (#2913)

1	0	ChangeLog
2	0	lib/bb/fetch/__init__.py
150	0	lib/bb/fetch/hg.py

commit 6b4f90b04a3ac5c74c472698c44671d5757ce770
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2007-09-05 20:58:55 +0000

    bzr.py: bzr fetcher tweaks from Robert Schuster (#2913)

1	0	ChangeLog
3	7	lib/bb/fetch/bzr.py

commit 51d58b3897100757d4954da918bae980ee2602f4
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2007-09-05 09:01:37 +0000

    build.py: Add support for cleaning directories before a task in the form: do_taskname[cleandirs] = 'dir'

2	0	ChangeLog
5	2	lib/bb/build.py

commit 256d262676410b26be9f537fd232f847ef696789
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2007-09-05 08:06:22 +0000

    fetch: Add bzr fetcher

1	0	ChangeLog
2	0	lib/bb/fetch/__init__.py
159	0	lib/bb/fetch/bzr.py

commit 789712931efb7944da1e7ebbe17d85f568f7f5d3
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2007-09-04 22:46:26 +0000

    Add support for the syntax "export VARIABLE"

1	0	ChangeLog
6	0	lib/bb/parse/parse_py/ConfHandler.py

commit 03d7612faf36b212ddad914f6113f81c6c4fcd94
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2007-09-02 14:32:50 +0000

    BBHandler.py: Improve debug message

1	1	lib/bb/parse/parse_py/BBHandler.py

commit 65fd0dacc74da703ea276d451ccf67ca0dbc8013
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2007-08-25 22:47:47 +0000

    ncurses.py: Tweak version field

1	1	lib/bb/ui/ncurses.py

commit 294cbd5ac862ce47e6489fbd1df8d0a5dcc84f52
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2007-08-25 22:47:14 +0000

    command.py: Add generateDepTreeEvent command

10	1	lib/bb/command.py

commit 45cd75519876ea93117e9176e30b9a850a884056
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2007-08-25 22:46:29 +0000

    event.py: Add DepTreeGenerated event

10	0	lib/bb/event.py

commit 5bc319348eecbf47163cb363fc3ebb86cfa2517f
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2007-08-25 22:45:53 +0000

    cooker.py: Split generateDotGraph into data and file generation sections

105	27	lib/bb/cooker.py

commit e54a8bb9c40e2775b0fd24a2e39902e22b70cca1
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2007-08-25 15:14:07 +0000

    bin/bitbake: Add UI selection option

17	3	bin/bitbake

commit b5b067c18dd66ed6d26394cd2637e131f912ed4c
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2007-08-25 15:13:10 +0000

    ncurses.py: Update so it runs again

19	5	lib/bb/ui/ncurses.py

commit 622454edf402c3d545d6696c88e02799c8979303
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2007-08-25 14:33:39 +0000

    svn.py: Handle paths in svn fetcher module parameter

1	0	ChangeLog
1	1	lib/bb/fetch/svn.py

commit faeb86a641a7c90f90ff678116a702c5758f9851
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2007-08-25 09:20:32 +0000

    runqueue.py: Detect builds of tasks with overlapping providers and warn (will become a fatal error) (#1359).Add MULTI_PROVIDER_WHITELIST variable to allow known safe multiple providers to be listed.

2	0	ChangeLog
4	1	lib/bb/cache.py
25	0	lib/bb/runqueue.py

commit c6f6f054b25a0c6156f92444876d4dd66f5c9588
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2007-08-24 10:07:57 +0000

    providers.py: Fix regressions

6	3	lib/bb/providers.py

commit 89bcd40a42d2f6f3bec3992bc993a0319231b92a
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2007-08-24 08:11:10 +0000

    providers.py: Backport various providers fixed from trunk (+update Changelogs)

5	0	ChangeLog

commit b050179bb03ee1a540ceb5236bde76d459417fbf
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2007-08-23 22:52:55 +0000

    providers.py: Sort providers by default preference as well as priority before processing

13	7	lib/bb/providers.py

commit 72980f55b16ddce236e54bdee41a022da0c57e4d
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2007-08-23 22:13:49 +0000

    ptoviders.py: Remove debugging

1	1	lib/bb/providers.py

commit 5eb2972420a5a957b63bdadd4d941321fc355eb9
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2007-08-23 22:09:53 +0000

    runqueue.py: Fix debugging function

2	2	lib/bb/runqueue.py

commit 2564db50f79f3fa618dfd39b34caff1a539f2fe3
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2007-08-23 22:09:27 +0000

    providers.py: Adjust logic so providers with a PREFERRED_VERSION set take priority over providers without a PREFERRED_VERSION available

59	16	lib/bb/providers.py

commit 3dea8c5058d6c55130a8f2e3397ad06c3f9f33d5
Author: Marcin Juszkiewicz <marcin@juszkiewicz.com.pl>
Date:   2007-08-23 08:03:02 +0000

    bitbake: use Psyco only on x86 (no support for other archs) - taken from Poky

1	0	ChangeLog
10	8	lib/bb/cooker.py

commit 3b27d82fb990743378fc5cbade748d8ffda9d5ed
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2007-08-19 23:51:06 +0000

    __init__.py: Fix a bug in decodeurl where http://some.where.com/somefile.tgz decoded to host="" (#1530)

5	4	lib/bb/__init__.py

commit 38a55340aa25265842f30475dc152e9672d9077c
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2007-08-19 22:51:51 +0000

    cooker.py: Warn about malformed PREFERRED_PROVIDERS (#1072)

5	1	lib/bb/cooker.py

commit 44f551d533283e46ef662973d6a14e0bdd7d8ad9
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2007-08-19 22:45:50 +0000

    knotty.py: Improve BBINCLUDELOGS_LINES handling (#97)

17	11	lib/bb/ui/knotty.py

commit d000c10c17f967ed5a73353d5defa25ed294efa1
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2007-08-19 22:22:52 +0000

    cooker.py: Add support for BB_NICE_LEVEL option (#1627)

8	6	lib/bb/cooker.py

commit 7bef534e23ecccee4d956694e598e8c4da218c04
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2007-08-19 17:41:16 +0000

    event.py: masked files are not included in total

1	1	lib/bb/event.py

commit 16a8c1f505c3f3cf473b78f26816f2df6cd42638
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2007-08-19 11:05:17 +0000

    setup.py: Update to include bb.ui (thanks pH5)

1	1	setup.py

commit 697c4df9942242ac093ecde2e1fc4823269f06ff
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2007-08-18 23:44:44 +0000

    knotty.py: Implement INCLUDELOGS handling

21	19	lib/bb/ui/knotty.py

commit abc17c2cad754eed635dbbe2f207e044e95fdf2a
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2007-08-18 23:44:02 +0000

    command.py: Add readVariable command

14	0	lib/bb/command.py

commit 85dd3b168b5455f4bd676f7610e2bd555af3f637
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2007-08-18 21:59:10 +0000

    command.py: Add parseFiles command. Tweak cooker to match

7	0	lib/bb/command.py
7	10	lib/bb/cooker.py

commit a8e0d4b30b432a0fb8b2436826b5272f19a14e6d
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2007-08-18 18:44:33 +0000

    cooker.py: Handle error cases (e.g. no targets specified) more neatly

17	5	lib/bb/cooker.py
2	0	lib/bb/ui/knotty.py

commit 5f283282c7e6fa235f4396c53c69bceb11ed1083
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2007-08-18 18:19:31 +0000

    command.py: Turn showEnvironment into an offline command

8	10	lib/bb/command.py

commit 0fe5bfa2e12c97d1a9f8d7d855ec9d68a9e33a39
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2007-08-18 18:17:50 +0000

    cooker.py: Make showEnvironment perform better

7	3	lib/bb/cooker.py

commit f36d094889861d0c6b1c96119e4f1a35222b5255
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2007-08-18 18:15:58 +0000

    uievent.py: Fix teardown races

6	7	lib/bb/ui/uievent.py

commit 880f02a7a52c96e35cfae4e7a753721f2adaa516
Author: Holger Hans Peter Freyther <zecke@selfish.org>
Date:   2007-08-18 17:31:56 +0000

    [regression] Make SRCDATE/CVSDATE for the fetchers work again. This regressed in r653
    
    PN should always be set for files as it comes from bitbake.conf but as we are close
    to a release make the least intrusive change and copy SRCDATE and CVSDATE to the above
    line as well. I think the second return is dead code and we should remove it.

1	0	ChangeLog
1	1	lib/bb/fetch/__init__.py

commit b7626eccd2d5ecdf20cd2a19195c2a084a287d31
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2007-08-18 16:00:04 +0000

    runqueue.py: Fix accounting errors

12	13	lib/bb/runqueue.py

commit c8d0e6df69d6b49aa80c9cde5557b5a3c12a88dc
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2007-08-18 15:35:52 +0000

    bin/bitbake: Fix execution order

4	3	bin/bitbake

commit 39e7932136753be7eb3de65b813b7a8f2d0396de
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2007-08-18 15:29:12 +0000

    runqueue.py: Update to work with the UI code

192	84	lib/bb/runqueue.py

commit c1b3651f62d746aac452eb47426d1b8d65d4a437
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2007-08-18 15:14:36 +0000

    cooker.py: Update to work with the UI code

152	91	lib/bb/cooker.py

commit 5ce09ba7589b82d010e96658c19ce5ca0cfa1ac4
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2007-08-18 15:11:00 +0000

    build.py: Add _message to TaskBase, add gross hack to logfile name generation to make things work for now

5	1	lib/bb/build.py

commit 38f75d2349c6e7bd5b81532345f03e046e4e5245
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2007-08-18 15:08:40 +0000

    __init__.py: Add command module

1	0	lib/bb/__init__.py

commit 5ad206f80f257d206494059eae54dad9db08028d
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2007-08-18 15:07:51 +0000

    event.py: Add _message variable to PkgBase, add error field to ParseProgress

3	1	lib/bb/event.py

commit a012ec2737be4b118979a2c2de5bb0d4360e8a6e
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2007-08-18 15:05:45 +0000

    Update MANIFEST

8	0	MANIFEST

commit 40f847ba89d5e6943773d7d1cc3b083cbf3346cd
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2007-08-18 15:04:23 +0000

    bin/bitbake: Switch to use new UI code

53	17	bin/bitbake

commit 6840a536c97438fc090cb2f004f090bbd4a21297
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2007-08-18 15:03:04 +0000

    msg.py: Rely on fired events, no longer print directly

3	7	lib/bb/msg.py

commit 8b11b43dcf17f0e3bc1c0a24c869cd421d301b2c
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2007-08-18 14:55:45 +0000

    Add the start of several UI modules

18	0	lib/bb/ui/__init__.py
140	0	lib/bb/ui/knotty.py
287	0	lib/bb/ui/ncurses.py
128	0	lib/bb/ui/uievent.py
39	0	lib/bb/ui/uihelper.py

commit a3cf76b9969853774a4b76f0780ba46f363e0321
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2007-08-18 14:55:05 +0000

    Add the command module (needs rewriting)

183	0	lib/bb/command.py

commit fb697ba6e66461a7c88098597c419c7f4dbd2d97
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2007-08-18 14:47:30 +0000

    Add xmlrpcserver module

179	0	lib/bb/xmlrpcserver.py

commit 946d02a320109cb0b74b1e38a84d2ccc887930d4
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2007-08-18 14:46:31 +0000

    cooker.py: Only try to change terminal flags on terminals

8	6	lib/bb/cooker.py

commit c7f8a7ea848dd0da5aafa8f194552c6316e38ea0
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2007-08-18 14:43:20 +0000

    fetch/__init__.py: Don't create .lock files for local files

19	18	lib/bb/fetch/__init__.py

commit 531ea59fab144ec011018680b601c24c439136a9
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2007-08-18 14:42:06 +0000

    Add daemonize module

189	0	lib/bb/daemonize.py

commit 5dce311dd8210e102f35e4cea95c639a5ea81cd4
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2007-08-18 10:45:49 +0000

    cookey.py: Clear the terminal TOSTOP flag if set (and warn the user)

1	0	ChangeLog
10	0	lib/bb/cooker.py

commit 3db1eb0bc13f5cd219ac78e92c81f9613174a9d2
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2007-08-17 23:41:54 +0000

    runqueue.py: Fix idepends handling to avoid dependency errors, improve debugging capability

1	0	ChangeLog
17	13	lib/bb/runqueue.py

commit 0dd28a461b7dc1a997715b13e7b26aa775380cfa
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2007-08-17 23:35:17 +0000

    data.py: Split expandKeys into two for loops to benefit from the expand_cache (12% speedup)

1	0	ChangeLog
7	0	lib/bb/data.py

commit 6feef6e7d33a42343447e234eb97000c6513958f
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2007-08-17 23:31:37 +0000

    bb/__init.py: Sort digraph output to make builds more reproducible

2	0	ChangeLog
12	2	lib/bb/__init__.py

commit 1747e5529d91bbcc577b2e7a16a3beb2716eec1c
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2007-08-17 23:25:14 +0000

    taskdata.py: Improve dump_data debugging code

17	4	lib/bb/taskdata.py

commit 4439b3110b952d49c9486bb14168556390adfb8f
Author: Holger Hans Peter Freyther <zecke@selfish.org>
Date:   2007-08-17 14:46:56 +0000

    Print the list of missing DEPENDS/RDEPENDS on the "No buildable providers available for required build target..." error message
    
    I'm not certain to get all occurences of fail_fnid but the printed message is a usability improvement. So this change might be not complete but good enough to be applied.

2	0	ChangeLog
11	9	lib/bb/taskdata.py

commit 8405eb1631300cdf32b8c6c385b1b2a1d1a1946b
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2007-08-17 00:10:17 +0000

    BBHandler.py/build.py: Rework add_task to be more efficient (6% speedup, 7% number of function calls reduction)

28	25	lib/bb/build.py
13	5	lib/bb/parse/parse_py/BBHandler.py

commit 79257d7d643a3820b5ce0089df6f65396ef4c95f
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2007-08-16 16:35:37 +0000

    build.py: Expand data to addtask

1	0	ChangeLog
4	0	lib/bb/build.py

commit cc8e6c3f8b4d660584db1df974903a84e8de1eda
Author: Holger Hans Peter Freyther <zecke@selfish.org>
Date:   2007-08-16 12:35:31 +0000

    Fix syntax and indention

2	2	lib/bb/fetch/svn.py

commit 09050012d7584837f48db42d596bfacaa7f540f5
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2007-08-16 12:29:23 +0000

    svn.py: Handle case where SRCREV=None

6	3	lib/bb/fetch/svn.py

commit 44920dce81d51fe72fd52356dc4232cf3e476fc8
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2007-08-16 12:20:07 +0000

    git.py: Fix reference to tag

1	1	lib/bb/fetch/git.py

commit 42874afea69af641795d018f5857e6d2e2dc0ee3
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2007-08-16 09:56:13 +0000

    git.py: Handle tag=master correctly (from poky)

1	1	lib/bb/fetch/git.py

commit ddcf96906664a52652cfce41bb3d712835692087
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2007-08-16 09:54:58 +0000

    data_smart.py: Add has_key() check before accessing data

1	1	lib/bb/data_smart.py

commit 28f456f24127bf50cf203659e47619f9444e257d
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2007-08-16 00:06:43 +0000

    Update trunk Changelog

2	2	ChangeLog

commit 1f2cbe690f40054d98871e0ac6ed67c72b143fc7
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2007-08-15 23:58:45 +0000

    runqueue.py: Fix None/Zero confusion causing dependency bugs

7	7	lib/bb/runqueue.py

commit 9388498f080a084ed56a7f94d642a8520bfdcfe2
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2007-08-15 22:57:25 +0000

    data/data_smart.py: Add data.renameVar()

15	19	lib/bb/data.py
22	0	lib/bb/data_smart.py

commit 71486b49624ed785c85b4800fc034719c554ebd9
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2007-08-15 21:44:58 +0000

    build.py: Add back python function output through a new mechanism to emulate old behaviour (for now)

4	2	lib/bb/build.py

commit 2aeb46dc02e116bffd1afb20307ddd81ebb7dc35
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2007-08-15 21:44:06 +0000

    fetch/__init__.py: Add locking so multiple fetch processes don't compete for the same file

2	0	ChangeLog
14	1	lib/bb/fetch/__init__.py

commit 4ad6d163a160eeff112a96d1dc0cfd20d92a60b3
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2007-08-15 08:59:14 +0000

    Backports to the 1.8 branch (msg.plain, providers changes)

6	0	ChangeLog

commit d2fde99da55982cf739428e838fee7d6545ccea7
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2007-08-15 08:45:32 +0000

    providers.py: Sort the list of providers before processing so dependency problems are reproducible rather than effectively random

5	0	lib/bb/providers.py

commit 6f26f8a3b5551df2caf226e78aba1e919fb3f94e
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2007-08-15 08:44:40 +0000

    cooker.py: Improve/fix the bitbake versions output

8	4	lib/bb/cooker.py

commit 87511e7e23a9dd4ade579261bf202e06902b78e6
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2007-08-15 08:44:07 +0000

    msg.py: Fix plain message type

1	1	lib/bb/__init__.py
2	2	lib/bb/msg.py

commit 623bc81f1a721d416edd56816b98faed8822fe2f
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2007-08-14 09:57:35 +0000

    providers.py: Move providers code into the providers module

56	2	lib/bb/providers.py
7	36	lib/bb/taskdata.py

commit e555d0f54bb45891e9a03afca509a8545dc56ed3
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2007-08-14 09:56:35 +0000

    msg.py: Handle unset domains correctly

6	2	lib/bb/msg.py

commit ed2efea750697641dc0fe1d6289651e17594fe12
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2007-08-13 23:49:15 +0000

    runqueue.py: Mark completed tasks as buildable to avoid sanity check errors

2	0	lib/bb/runqueue.py

commit a2b62b191b0358418343d57203e557b15437b393
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2007-08-13 23:48:02 +0000

    msg.py: Add checks for unset domains

2	2	lib/bb/msg.py

commit 256d1315f3c4421a5bee89942df15edc296ce41c
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2007-08-13 23:13:15 +0000

    cooker.py: Switch to using bb.msg.plain

10	5	lib/bb/cooker.py

commit 4685f9874613c62092c1298fb2a19b4810daa1ea
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2007-08-13 22:52:02 +0000

    msg.py: Add plain message type, remove legacy logging code

10	4	lib/bb/__init__.py
1	1	lib/bb/cooker.py
14	26	lib/bb/msg.py

commit 26dc3ba77e318dd370008e5d9f0be8091e14a9b5
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2007-08-13 21:27:36 +0000

    cooker.py: Refactor pkgs_to_build into a function, further cleanups

28	20	lib/bb/cooker.py

commit 0666d21e366068d575d7d1e97055bd7df2b6d8ea
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2007-08-13 21:02:21 +0000

    data.py: Comment last accidental commit

1	0	lib/bb/data.py

commit 6f28bbe7c91492dd970bfce4dd6a15521a8d70a1
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2007-08-13 21:00:50 +0000

    cooker.py: Start UI merge: Cleanup exit status handling and collect exit calls into one place. Move buildSetVars() function calls. Cleanup whitespace. Make some of the core functions more generic.

71	52	lib/bb/cooker.py
4	0	lib/bb/data.py

commit 44c630f93dc130f881b178d73941bd6594ae7b51
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2007-08-12 21:18:02 +0000

    cooker.py: Allow the -b -e option combination to take regular expressions

1	0	ChangeLog
15	6	lib/bb/cooker.py

commit a3272369a8f2c2d91ac1f0bee5e139ad05438f53
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2007-08-12 17:06:00 +0000

    ConfHandler.py: Apply OVERRIDES before performing immediate expansions

1	0	ChangeLog
3	1	lib/bb/parse/parse_py/ConfHandler.py

commit fbe8d7cfb3b01a5df6f9b297c23fe61b30f4b3f9
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2007-08-12 12:09:59 +0000

    bb/__init__.py: Improve which function

13	7	lib/bb/__init__.py

commit df14ebde92034f452d764552592d71eaea988232
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2007-08-12 12:09:22 +0000

    fetch/local.py: Fix local fetcher's localpath return values (remove parameters)

1	0	ChangeLog
3	1	lib/bb/fetch/local.py

commit bb72494052c5b5b615af78c386ab0351c1758ba1
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2007-08-11 23:30:39 +0000

    fetch/__init__.py: Add SRCREV_FORMAT support

1	0	ChangeLog
15	2	lib/bb/fetch/__init__.py

commit 3af72d7ae4b6023651197b469e86cc0268794d8d
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2007-08-11 23:11:24 +0000

    fetch/__init__.py: Add BB_SRCREV_POLICY variable (clear or cache) to control SRCREV cache

1	0	ChangeLog
9	2	lib/bb/fetch/__init__.py

commit 88447e9873d1a5b58c4d699f10abc2614f517a75
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2007-08-11 18:51:04 +0000

    bitbake: Add profiling option -P

1	1	ChangeLog
18	1	bin/bitbake

commit 9d4b5affc531cbb85ff4fb8626901d67902a2a31
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2007-08-11 18:24:37 +0000

    fetch/__init__.py: Fix double newline output from fetcher commands (from poky)

1	1	lib/bb/fetch/__init__.py

commit 03a67eb10b550e5638dba83b8c9549560fe3bd07
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2007-08-11 18:18:55 +0000

    runqueue.py: Improve the progress indicator by skipping tasks that have already run before starting the build rather than during it

3	0	ChangeLog
1	1	lib/bb/parse/parse_py/ConfHandler.py
12	0	lib/bb/runqueue.py

commit 656f3bd77b21d3bab3a6b5eaef0d1765f44cea50
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2007-08-11 18:12:02 +0000

    fetch/__init__.py: Reinstate global urldata cache instead of using the persistent store for performance reasons

2	0	ChangeLog
34	56	lib/bb/fetch/__init__.py
2	2	lib/bb/parse/parse_py/ConfHandler.py

commit 276d2ee1a45994aa1d5ea1a2e5729ef11cd015d8
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2007-08-11 18:08:03 +0000

    providers.py: Add pn-PN to overrides when evalutating PREFERRED_VERSION (from poky)

1	1	lib/bb/providers.py

commit 4de39954e9e7f75363e110ec49382a12783a3091
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2007-08-05 23:02:47 +0000

    lib/bb/runqueue.py: Make sure intertask depends get processed correcting in recursive depends

17	1	lib/bb/runqueue.py

commit 257ba22941e2843c7c77d113b2ea0a0627a39cb2
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2007-08-05 13:01:43 +0000

    BBHandler: Don't generate the A variable which is time consuming and doesn't appear to get used

1	0	ChangeLog
21	19	lib/bb/parse/parse_py/BBHandler.py

commit 1c94534d7e7c7d5b521e373cead522b8c753ade8
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2007-08-05 09:31:00 +0000

    persist_data: Retry if database locked, update MANIFEST

1	0	MANIFEST
15	3	lib/bb/persist_data.py

commit 2aad7b5c742dd4c1ca299390b517258e2bf6d344
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2007-08-03 08:54:34 +0000

    git.py: Fix tag problem

1	1	lib/bb/fetch/git.py

commit befeeef96230980a170a0de329fe9ea4af2d3ce5
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2007-08-02 23:52:40 +0000

    fetcher updates: Add SRCREV support to git, fix svn SRCREV lockdown support, clean up fetcher force options, finish sortable_revision implementation

22	5	lib/bb/fetch/__init__.py
22	13	lib/bb/fetch/git.py
1	1	lib/bb/fetch/perforce.py
10	3	lib/bb/fetch/svn.py

commit 9aa602e50df18b4b91631f4357a54dcde3a487d9
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2007-07-31 17:21:49 +0000

    Work around fetcher recursion problems for now

26	14	lib/bb/fetch/__init__.py

commit a52ff5fad454ccb1fff682ea10996b0432aa9b0f
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2007-07-31 15:11:39 +0000

    Various fetcher bugfixes

1	1	lib/bb/fetch/__init__.py
2	2	lib/bb/fetch/svn.py

commit 7bbd04ec784ddee896e1b1beb67fe008b1f21206
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2007-07-31 13:09:51 +0000

    data.emit_var() - only call getVar if we need the variable

1	0	ChangeLog
23	17	lib/bb/data.py

commit 76536bdec1a300fde82df84096a6c979faeac6a9
Author: Michael 'Mickey' Lauer <mickey@vanille-media.de>
Date:   2007-07-31 05:35:15 +0000

    fetch/svn.py: use LC_ALL=C LANG=C (LC_ALL= LANG= doesn't work on all distributions)

1	1	lib/bb/fetch/svn.py

commit 3616a71753eed03f8ae98433c32fa54c1021f0ba
Author: Michael 'Mickey' Lauer <mickey@vanille-media.de>
Date:   2007-07-31 04:12:33 +0000

    fetch/__init__.py: fix error in error reporting statement ;)

2	2	lib/bb/fetch/__init__.py

commit ac00ca89a4e43cd4f38ba86455079d31be78e644
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2007-07-30 22:57:56 +0000

    svn fetcher: Add SRCREV support

1	0	ChangeLog
67	2	lib/bb/fetch/__init__.py
1	0	lib/bb/fetch/git.py
66	39	lib/bb/fetch/svn.py

commit 89bbfe40b9ae3c4cb7ebefcdbde6fe0b6f981e38
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2007-07-29 21:36:39 +0000

    persist_data.py: Try harder to import an sqlite package. Show how to change the connection lock timeout

5	2	lib/bb/persist_data.py

commit 1cbe52b9b6d15b6c8878fa8c3aac06c804dc6be2
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2007-07-29 21:21:00 +0000

    event.py: Add ConfigParsed Event after configuration parsing is complete

1	0	ChangeLog
2	0	lib/bb/cooker.py
2	0	lib/bb/event.py

commit 1320cbc28ed1e1870ef9f2de9cc8d1706548f066
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2007-07-29 17:28:25 +0000

    persist_data: Remove bogus testing code

0	1	lib/bb/persist_data.py

commit b88ec57f859dac3758e809f2ed18f45748fa9e54
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2007-07-28 22:59:23 +0000

    Update parser to work optimally with the new fetcher code

3	3	lib/bb/parse/parse_py/BBHandler.py
7	4	lib/bb/parse/parse_py/ConfHandler.py

commit e2a30f5b3fb3a7942b2a41099879c36354f4822e
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2007-07-28 17:22:49 +0000

    Convert fetcher to use persist_data to remove global urldata variable and cleanup

2	0	lib/bb/cooker.py
110	63	lib/bb/fetch/__init__.py

commit 423c8e8909b0427f7bd90e43d9633dc13856ee9a
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2007-07-28 17:16:37 +0000

    Add persistent data store module

1	0	lib/bb/msg.py
92	0	lib/bb/persist_data.py

commit 69c2651927ee78b436d48a28ac47a3e061e2ea45
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2007-07-28 17:14:46 +0000

    Remove ununsed module references

1	1	lib/bb/build.py
1	1	lib/bb/runqueue.py
1	1	lib/bb/taskdata.py

commit 093063fcaf5d057bc136dbfe9d548f7dacbd0cd9
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2007-07-26 00:05:49 +0000

    fetch/__init__.py: Start to fill out FetchData

5	5	lib/bb/fetch/__init__.py

commit 298234dd6f1e778b5a146acb6caf71b8015389dc
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2007-07-25 23:51:55 +0000

    git.py: Add latest_revision function

6	0	lib/bb/fetch/git.py

commit 48cf1be534b40f217a1a088aa8c82415596cd96c
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2007-07-25 23:43:45 +0000

    svn.py: Add latest_revision and sortable_revison functions

14	0	lib/bb/fetch/svn.py

commit 94822eb878957e9c0e94ae3c0c0999e34c34aa2a
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2007-07-25 23:41:59 +0000

    fetchers: Add runfetchcmd function to handle command execution

30	0	lib/bb/fetch/__init__.py
13	25	lib/bb/fetch/git.py
8	8	lib/bb/fetch/svn.py

commit 3ea1cec4a3faf810f702ab8097df33f9a06315a1
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2007-07-25 21:26:43 +0000

    svn.py: Fix #2624 and #2644 by changing svn layout in SVNDIR (backport)

4	0	ChangeLog

commit 4e20ca743962a51c3064cb8213c89b66837c4e88
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2007-07-25 21:21:42 +0000

    svn.py: Fix #2624 and #2644 by changing svn layout in SVNDIR

9	4	lib/bb/fetch/svn.py

commit faadbc9bccb7fcf25ae274fee9bf387a5bbd8829
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2007-07-22 15:13:38 +0000

    Improve certain error messages

1	0	ChangeLog
2	0	lib/bb/cooker.py
1	1	lib/bb/parse/parse_py/BBHandler.py

commit 279e9499118f47ce4a803c8cfd383161facdc988
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2007-06-30 23:15:52 +0000

    svn fetcher: Create common 'build svn command' function

1	0	ChangeLog
35	29	lib/bb/fetch/svn.py

commit f3666e79440fa93268cf466dad7fab64f04407c5
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2007-06-26 16:44:48 +0000

    taskdata: Remove supriours PREFERRED_PROVIDER warnings

1	0	ChangeLog
1	0	lib/bb/taskdata.py

commit e6809a17b9b01598cd64d73e314e995a87036ddf
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2007-06-12 10:31:05 +0000

    runqueue.py: Message fix from hrw

1	1	lib/bb/runqueue.py

commit 043b2ea55d13aefb9d26451f9b5c7d148cac6d40
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2007-06-12 10:26:28 +0000

    runqueue.py: Correctly redirect stdin when forking.
    cooker.py: If parsing errors are found, exit, too many users miss the errors

2	0	ChangeLog
5	1	lib/bb/cooker.py
2	1	lib/bb/runqueue.py

commit a8ebcce92d2eefca5fcaa06c025d7ac86f6e3cb7
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2007-06-10 16:59:30 +0000

    bitbake trunk/1.8: Update manual

1	0	ChangeLog
53	1	doc/manual/usermanual.xml

commit 4e5751020bf84588d38e2ed4df030d95fdab59d6
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2007-05-20 23:50:32 +0000

    taskdata.py: Promote certain warnings from debug to note 2 level

1	0	ChangeLog
3	3	lib/bb/taskdata.py

commit c5b5d33a871888ef0c3d4eb11e8b025cc37ffcfe
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2007-05-20 22:49:30 +0000

    runqueue.py: Use correct variable for task length

3	3	lib/bb/runqueue.py

commit 3b6c8cd95173408e4cab3e47bce0f59d50e2d502
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2007-05-20 16:35:23 +0000

    cooker.py: Fix invalid regexp in BBMASK error handling (missing import) (#1124)

2	1	ChangeLog
1	1	lib/bb/cooker.py

commit 9869eca97eaed0bdcef3d6f6ea064189f39d36da
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2007-05-20 16:24:25 +0000

    BBHandler.py:  Raise ParseError for filenames with multiple underscores instead of infinitely looping (1.6, 1.8, trunk)

1	0	ChangeLog
2	0	lib/bb/parse/parse_py/BBHandler.py

commit f62c389eaf6f00f1567d8ee094e84b78ea691603
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2007-05-20 12:12:12 +0000

    runqueue.py: Fix bug when target was in ASSUME_PROVIDED (#2236)

1	0	ChangeLog
4	0	lib/bb/runqueue.py

commit 9fdb24e0c74523cc83423a6cc873d9bc51c1b791
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2007-05-19 17:48:17 +0000

    Fix a second kind of __inherit_cache race (trunk + branches)

1	1	ChangeLog
1	1	lib/bb/parse/parse_py/BBHandler.py

commit e5790003f3c96b4dec5c14417ff95bb8bf5535f9
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2007-05-19 17:40:24 +0000

    parse_py/BBHandler.py: Make sure __inherit_cache is updated before calling include()

1	0	ChangeLog
1	1	lib/bb/parse/parse_py/BBHandler.py

commit 1ff4062c5aa599061d0b09adf6a42c5e80f4fe13
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2007-04-18 22:21:40 +0000

    cache.py: Add helpful debugging information to error message

2	0	lib/bb/cache.py

commit 9922a68c18fa288c61ef15e433dbdf3d057ae806
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2007-04-18 22:20:24 +0000

    taskdata.py: Add error message

1	0	lib/bb/taskdata.py

commit bc4091ba0d0260f90910ec24a521f2a84a31fea6
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2007-04-18 22:16:55 +0000

    cooker.py: Fix cache errors when generation dotGraphs

1	1	ChangeLog
1	1	lib/bb/cooker.py

commit 834ba60196e5b155347e4e723b5aa78d547e197c
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2007-04-03 11:28:34 +0000

    build.py: Expand dependency flag data

1	0	lib/bb/build.py

commit 5d59ed1cc85e56c8b497db79216204b725c6011c
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2007-04-01 23:10:52 +0000

    cooker.py: Make -I option a generic one to extend ASSUME_PROVIDED

1	0	ChangeLog
2	2	bin/bitbake
4	6	lib/bb/cooker.py

commit ff9cb57bbfdfa19a0414d64f35b92966a792884d
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2007-04-01 10:04:02 +0000

    taskdata.py: Remove debug

0	2	lib/bb/taskdata.py

commit f3e8792d5810fa0a554de00386863371b2e69085
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2007-03-31 23:30:58 +0000

    taskdata/runqueue.py: Add code to handle inter-task dependencies

1	0	ChangeLog
9	0	lib/bb/runqueue.py
14	1	lib/bb/taskdata.py

commit f21b4c902a9f21200ded7b322c744c07f39517fd
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2007-03-31 22:01:03 +0000

    ConfHandler.py: Allow operations other than assignment on flag variables

1	0	ChangeLog
11	5	lib/bb/parse/parse_py/ConfHandler.py

commit 2c74267c530e8cc80c3aee1d537322f73c7b436b
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2007-03-24 18:16:52 +0000

    Fix PE handling to use strings and update showVersions to add PE support (closes #2027)

1	1	lib/bb/cache.py
3	3	lib/bb/cooker.py
3	3	lib/bb/providers.py
1	1	lib/bb/utils.py

commit d1fbbd9e27228e10daddd02e3f4f19974c37eb7b
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2007-03-23 15:05:24 +0000

    cache.py: Catch truncated cache errors

1	0	ChangeLog
3	0	lib/bb/cache.py

commit beaa8fb19033c59962b8b2331a112f92913717d4
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2007-03-20 14:46:01 +0000

    build.py: Remove BBINCLUDELOGS for now since its breaking things. It will return in the tty UI handler eventually

0	16	lib/bb/build.py

commit 2f404cdde82286f6126ce3b40f9e99392508c777
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2007-03-20 09:45:52 +0000

    build.py: Use a try/finally to make sure logs get redirected after function execution even if an exception occurs

27	26	lib/bb/build.py

commit 266c4154bf0461180f3ceda3045a38af8e9d593a
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2007-03-19 23:42:11 +0000

    event.py: Add ParseProgress class

14	0	lib/bb/event.py

commit 9fbc534768e6f7b68a5f3f9012e7425d6e921153
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2007-03-19 23:41:11 +0000

    event.py: Allow basic (ugly) UI event handler registration

32	1	lib/bb/event.py

commit 07d64b641bd0e6df8892bfeb3058ae7c7b34bcb3
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2007-03-19 23:28:29 +0000

    build.py: Treat python functions the same as shell functions with respect to logging

2	0	ChangeLog
104	93	lib/bb/build.py

commit 3f90c8336a8298f8f9ecb51e9a60bb55e3e0a50b
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2007-03-19 23:12:00 +0000

    Add PE (Package Epoch) support from Philipp Zabel (pH5)

3	0	ChangeLog
4	3	lib/bb/cache.py
25	11	lib/bb/providers.py
5	3	lib/bb/utils.py

commit 607fb683509e032a64198d998a46f7e6056118b6
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2007-03-19 22:42:57 +0000

    BBHandler.py: Use 'TMPDIR/anonfunc' as T for anonymous functions

1	1	lib/bb/parse/parse_py/BBHandler.py

commit 721f45238e4d0734e4046caa2c4680166bb4ee61
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2007-03-19 21:29:26 +0000

    Prepare for release

3	0	ChangeLog

commit de40590c04a8d033f7cf6366be39090c9c411cbf
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2007-03-19 21:11:46 +0000

    MANIFEST: Add COPYING

1	0	MANIFEST

commit 5e51c97fda1ada8fab5b3ef99146941436f3edec
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2007-03-11 22:49:40 +0000

    Update ChangeLog for 1.7.x changes, cleanup TODO

40	7	ChangeLog
0	12	TODO

commit c4ce0efa721e9e0a00e7f1747f24467fdca31fe2
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2007-03-07 14:21:47 +0000

    runqueue.py: Fix parameters to get_user_idstring()

4	4	lib/bb/runqueue.py

commit 410f84c582b407765697eb62fb40ed41d6eca8ed
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2007-03-05 17:17:03 +0000

    shell.py: Fix syntax warning reported by pH5

2	4	lib/bb/shell.py

commit 84187dfabc6b57a047d1436e06d616c816e30555
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2007-03-04 23:31:05 +0000

    Update versions

3	3	bin/bitbake
1	1	lib/bb/__init__.py

commit 45761125ff7b1553c55dbb8a6df9f3b4eee98170
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2007-03-04 20:58:20 +0000

    cooker.py: Split cook into several functions

113	94	lib/bb/cooker.py

commit 4daf1e31e030bf23f419bcaa59678b6c32b7b3e2
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2007-03-04 18:27:52 +0000

    runqueue.py: Split execute_runqueue into components

109	100	lib/bb/runqueue.py

commit d1dba3e0dafdc67e5c76217341054ec387928206
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2007-03-04 15:41:49 +0000

    runqueue.py: Refactor some functions/data

50	50	lib/bb/runqueue.py

commit 9e36b690d050470f222f4cd74fb944bfee099795
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2007-03-04 15:21:36 +0000

    cooker.py: Move some functionality to the module init function

2	2	bin/bitbake
31	31	lib/bb/cooker.py

commit 9b8c5d0c6ce444811eb0cfd182695df29c917fa9
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2007-03-04 15:15:38 +0000

    runqueue.py: Try to kill remaining processes but don't error if they no longer exist (reported by koen)

4	1	lib/bb/runqueue.py

commit a49a4f406aceb8d96af0a24c62bdd70e82aa2c74
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2007-03-04 15:08:31 +0000

    runqueue.py: Remove extra now unneeded parameter

1	1	lib/bb/runqueue.py

commit 070cea906556906c3d1df891a57cc6399c7ff81f
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2007-03-04 15:00:11 +0000

    cooker.py: Remove old reference to BBStatistics

0	2	lib/bb/cooker.py

commit b9a1c1afdabf2339301ec9dc48789b404596cb37
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2007-03-04 14:55:06 +0000

    runqueue.py: Improve initialization instead of repeating parameters

5	5	lib/bb/cooker.py
34	29	lib/bb/runqueue.py
3	3	lib/bb/shell.py

commit bc4966063955265a7ae108c86d9811a38e9588fd
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2007-03-04 14:23:56 +0000

    cooker.py, runqueue.py: Move statistics implementation from cooker to runqueue

2	35	lib/bb/cooker.py
38	17	lib/bb/runqueue.py

commit a4e1902ac27cf2bf9fc193d3e80d20aaaa4b154f
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2007-03-04 13:21:14 +0000

    event.py: Remove data dependencies to resolve a dependency loop

2	3	lib/bb/event.py

commit 97e3290a32c70fdc9b24d120311bb8daa0a76b11
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2007-03-04 13:18:20 +0000

    shell.py: Remove build_cache_fail references since this no longer works as intended

4	9	lib/bb/shell.py

commit 3aac909e75508d07a7b429d65b2adfe19b8fbaf1
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2007-03-04 13:14:03 +0000

    providers.py: Remove now unused parameter from filterProviders

1	10	lib/bb/providers.py

commit 7ca1b1fb189288ea6547f224557fa4a4cbd77889
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2007-03-04 13:09:53 +0000

    msg.py: Add events for standard message types

30	1	lib/bb/msg.py

commit 6c9f1fb359e9e95874d1b6c0e9eb3b86c0986d55
Author: Chris Larson <clarson@kergoth.com>
Date:   2007-02-27 20:03:44 +0000

    Bitbake: cooker.py: Fix find_bbfiles.  Previously, an attempt to put a path to a directory (not a glob of the .bb files) in BBFILES would fail, as it was calling out 'find' but not chomping off the newlines from the find output.  Now it's using os.walk() to populate the list instead.

11	7	lib/bb/cooker.py

commit 2f6d37c0c7b67e8ee926065cba4cdcc5a9187eb3
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2007-02-21 20:53:44 +0000

    runqueue.py: Fix recrdeptask handling (from poky)

2	2	lib/bb/runqueue.py

commit 78d39c98c04ce4fdd3deb2b7e323e29af992dac5
Author: Holger Hans Peter Freyther <zecke@selfish.org>
Date:   2007-02-16 11:54:07 +0000

    trunk/bitbake: Update the MANIFEST as well

14	11	MANIFEST

commit b068bb53caf9227dac1341cb8d5f4dac1b57bbf8
Author: Marcin Juszkiewicz <marcin@juszkiewicz.com.pl>
Date:   2007-01-23 22:03:08 +0000

    fetch/svn.py: use username/password when provided in SRC_URI - close OE#1781
    
    Subversion will still ask if self-signed SSL certificate will be used.

6	0	lib/bb/fetch/svn.py

commit eff447767819401f54ce20e4019962959c9f86c5
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2007-01-12 13:17:11 +0000

    runqueue.py: Check for failed dependencies before trying to find a fnid

4	4	lib/bb/runqueue.py

commit ef51c7aabb688bd9a26ed0e6697f9d73771e7c86
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2007-01-12 13:04:10 +0000

    runqueue.py: Fix prepare_runqueue parameters

1	1	lib/bb/runqueue.py

commit 8c8b9ba8a2c8743f3cca6c33e964eb8cd153b6f4
Author: Holger Hans Peter Freyther <zecke@selfish.org>
Date:   2007-01-10 20:48:34 +0000

    trunk/bitbake/lib/bb/build.py: Put LC_ALL=C on os.system call
        For our french and strange friends place LC_ALL=C
        in all task calls. This should give us english log
        messages

2	1	lib/bb/build.py

commit 1d8bea09757b1159b5b3ed0179c3bd006df12ba3
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2007-01-07 18:16:58 +0000

    runqueue.py: Give the user some idea of the number of tasks involved

10	2	lib/bb/runqueue.py

commit 4304b6a876cecbaa762a130dad90de6074a584ee
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2007-01-07 17:59:32 +0000

    shell.py: Fix up force flag handling for directly named files

5	0	lib/bb/shell.py

commit d9fdd61adb7c9c9ff3058632fc82ad78000d98fd
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2007-01-07 17:48:58 +0000

    Make -f (force) flag handling work properly

2	3	lib/bb/build.py
7	8	lib/bb/cooker.py
14	8	lib/bb/runqueue.py

commit 12f9999a2042c582197f96eb5f5fab411133e753
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2007-01-07 17:26:23 +0000

    runqueue.py: Pass cooker to prepare_runqueue (for now)

2	2	lib/bb/cooker.py
1	1	lib/bb/runqueue.py
1	1	lib/bb/shell.py

commit 1a678c62b504b2cf8b20c6fdfbf2de2c634f5d7b
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2007-01-07 17:22:23 +0000

    build.py: Add del_stamp function to remove existing stamps (factoring common functionality into a shared function).

38	8	lib/bb/build.py

commit bf53f26d286e73eb5097b9fe54fd785fa5c82cd2
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2007-01-07 17:19:36 +0000

    build.py: Merge stamp_is_current and stamp_is_current_cache into one function. This needs rethinking eventually.

26	52	lib/bb/build.py
1	1	lib/bb/runqueue.py

commit 2cd95a9371a40fe5a2a9b2879ed2a6db0e63061e
Author: Holger Hans Peter Freyther <zecke@selfish.org>
Date:   2007-01-06 19:48:12 +0000

    Make cvs_port a string and an empty one as well. This should fix the concatination error koen was seeing and describing in #1753

1	1	lib/bb/fetch/cvs.py

commit 366758334a1682add46cadae0b34f2bfc88d8b43
Author: Marcin Juszkiewicz <marcin@juszkiewicz.com.pl>
Date:   2007-01-06 08:59:39 +0000

    CVS Fetcher: Added support for non-default port (needed or rxvt-unicode in OE).

5	1	lib/bb/fetch/cvs.py

commit d25bfb5029f00523b38fea216def0c466d244bad
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2007-01-04 22:55:21 +0000

    runqueue.py: Don't create recurisve tasks if they don't exist but still follow dependencies. Also allow multiple recrdeptask entries.

19	11	lib/bb/runqueue.py

commit 98e59284e1ebf8605fafa0f9c33677938628c1e8
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2007-01-04 22:53:43 +0000

    taskqueue.py: Add tasks to be queried but not created

7	2	lib/bb/taskdata.py

commit 0f560607321b7c120d1d8c91fd0d26a9fc3040cc
Author: Marcin Juszkiewicz <marcin@juszkiewicz.com.pl>
Date:   2007-01-04 11:09:36 +0000

    moved 'here comes the log' message back to proper place

1	1	lib/bb/build.py

commit 03ec10fd3c983234751f97cafdfb546dc7d1884f
Author: Marcin Juszkiewicz <marcin@juszkiewicz.com.pl>
Date:   2007-01-04 11:02:50 +0000

    build.by: Added option to limit amount of log lines displayed - close #97
    - option is named BBINCLUDELOGS_LINES and is integer
    - if option is set then logs are passed via 'tail' command

13	9	lib/bb/build.py

commit 9d577dd8a617c9df7f4e450644985f8821cbc158
Author: Marcin Juszkiewicz <marcin@juszkiewicz.com.pl>
Date:   2007-01-04 10:33:42 +0000

    drop shebangs from lib/bb scripts
    - those scripts are not called by hand by bitbake users
      and most of package linting tools (lintian/Debian, rpmlint/Fedora)
      complain about not executable scripts.
    - if someone want to run them by hand then he will be able to do it
      with calling 'python SCRIPT'

0	1	lib/bb/__init__.py
0	1	lib/bb/build.py
0	1	lib/bb/cache.py
0	1	lib/bb/data.py
0	1	lib/bb/event.py
0	1	lib/bb/fetch/__init__.py
0	1	lib/bb/fetch/cvs.py
0	1	lib/bb/fetch/git.py
0	1	lib/bb/fetch/local.py
0	1	lib/bb/fetch/perforce.py
0	1	lib/bb/fetch/ssh.py
0	1	lib/bb/fetch/svk.py
0	1	lib/bb/fetch/svn.py
0	1	lib/bb/fetch/wget.py
0	1	lib/bb/msg.py
0	1	lib/bb/providers.py
0	1	lib/bb/shell.py

commit 8ca7fd7573eee2468027adf8b808a32cbe9edb31
Author: Marcin Juszkiewicz <marcin@juszkiewicz.com.pl>
Date:   2007-01-04 10:28:09 +0000

    setup.py: use FHS compatible directories

4	4	setup.py

commit d550e18b3dd9684341ddc47c4fc17aca20251804
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2007-01-02 17:28:49 +0000

    svn fetcher: Don't have a date in the filename for specific svn revisions

3	0	lib/bb/fetch/svn.py

commit ea7a304080cb20094c68d67dc4c5e772008504b7
Author: Holger Hans Peter Freyther <zecke@selfish.org>
Date:   2006-12-08 20:51:04 +0000

    Add proper GPLv2 headers to all BitBake files
    
        BitBake trunk is now GPLv2 only, no mix of
        MIT,FreeBSD License is left.
    
        Update GPL headers to point to the correct
        address of the FSF
    
        Update the list of authors. Uli Luckas,
        Seb Frankengul and Tim Amsell contributed to
        the sourcecode as well

3	0	AUTHORS
339	0	COPYING
19	0	HEADER
12	12	bin/bbimage
10	10	bin/bitbake
10	18	bin/bitdoc
22	7	lib/bb/COW.py
20	21	lib/bb/__init__.py
24	23	lib/bb/build.py
17	18	lib/bb/cache.py
10	10	lib/bb/cooker.py
18	18	lib/bb/data.py
20	20	lib/bb/data_smart.py
15	15	lib/bb/event.py
17	17	lib/bb/fetch/__init__.py
18	16	lib/bb/fetch/cvs.py
15	14	lib/bb/fetch/git.py
17	16	lib/bb/fetch/local.py
17	16	lib/bb/fetch/perforce.py
24	21	lib/bb/fetch/ssh.py
18	25	lib/bb/fetch/svk.py
21	21	lib/bb/fetch/svn.py
17	16	lib/bb/fetch/wget.py
12	12	lib/bb/manifest.py
10	25	lib/bb/methodpool.py
15	15	lib/bb/msg.py
18	16	lib/bb/parse/__init__.py
20	16	lib/bb/parse/parse_py/BBHandler.py
19	16	lib/bb/parse/parse_py/ConfHandler.py
18	17	lib/bb/parse/parse_py/__init__.py
10	10	lib/bb/providers.py
15	12	lib/bb/runqueue.py
10	9	lib/bb/shell.py
15	11	lib/bb/taskdata.py
15	15	lib/bb/utils.py
14	13	setup.py

commit 31a11a03bcd6c356bc22db74870fe0d250406fcb
Author: Holger Hans Peter Freyther <zecke@selfish.org>
Date:   2006-12-08 20:46:42 +0000

    Update the GPL to the current version of the FSF
    
        Update the address of the FSF

13	14	doc/COPYING.GPL

commit 0a1bf3ff6583396b3855f0d53c01ba3ba11e90ff
Author: Holger Hans Peter Freyther <zecke@selfish.org>
Date:   2006-12-08 20:43:38 +0000

    Remove the first attempt to integrate Marc's flex/lemon
    
        Remove the first C implementation. I'm too lazy to
        create proper license headers for what will be replaced
        with the bitbake-parser code soon(tm).

0	188	lib/bb/parse/parse_c/BBHandler.py
0	36	lib/bb/parse/parse_c/Makefile
0	12	lib/bb/parse/parse_c/README.build
0	28	lib/bb/parse/parse_c/__init__.py
0	253	lib/bb/parse/parse_c/bitbakec.pyx
0	1157	lib/bb/parse/parse_c/bitbakeparser.cc
0	29	lib/bb/parse/parse_c/bitbakeparser.h
0	179	lib/bb/parse/parse_c/bitbakeparser.y
0	3209	lib/bb/parse/parse_c/bitbakescanner.cc
0	319	lib/bb/parse/parse_c/bitbakescanner.l
0	48	lib/bb/parse/parse_c/lexer.h
0	19	lib/bb/parse/parse_c/lexerc.h
0	56	lib/bb/parse/parse_c/python_output.h
0	96	lib/bb/parse/parse_c/token.h

commit c5cec2bf12ffaf9dfc46eb8ff27997fbbe7c01b3
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2006-12-06 22:45:39 +0000

    cooker.py: Clean up pkgs_to_build handling

6	3	bin/bitbake
7	12	lib/bb/cooker.py

commit 6ee0bc7b9036a9b7b2dd105e068ea4f8e58e0b03
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2006-12-06 22:27:35 +0000

    bitbake: Move cooker from bin/bitbake to lib/bb/cooker.py

1	0	MANIFEST
3	647	bin/bitbake
671	0	lib/bb/cooker.py

commit 066862d76d3e337d9f2b39d9ff8d4d7a85db225a
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2006-12-06 20:13:21 +0000

    runqeue.py: Send SIGINT, not SIGTERM when ending tasks. Use process groups to ensure all children are terminated.

5	3	lib/bb/runqueue.py

commit 49b429b2f7bcfa7e6250e651998a8a1b8a6b1e64
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2006-12-06 20:12:23 +0000

    fetch/__init__.py: Have getSrcDate process an optional srcdate parameter within the url

5	2	lib/bb/fetch/__init__.py

commit e142e86dd15d13f8ffc4b5e0ecbf764277fccbda
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2006-12-06 20:10:31 +0000

    Fix docs typo (from ross@o-hand.com)

1	1	bin/bitbake
1	1	doc/manual/usermanual.xml

commit d0d0082e2f329082c193d5b1f9d45a25b1a18afe
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2006-11-30 09:29:02 +0000

    bin/bitbake: Fix incorrect variable reference

1	1	bin/bitbake

commit d7c4ca7e8f8dc8c870878b5a11271beebbfdea4e
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2006-11-30 09:15:18 +0000

    shell.py: Fix typo (thanks to pH5 for spotting)

1	1	lib/bb/shell.py

commit 6ac75ab2af4e1f1efd2a3b59703b469c8acd6ebf
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2006-11-29 23:09:18 +0000

    fix typo

1	1	bin/bitbake

commit 68ea8d7e0fe9e11ab0b5e208d74090380e2079fc
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2006-11-29 22:54:28 +0000

    bin/bitbake: Update generateDotGraph to use taskData/runQueue correcting the dependency graphs. depends.dot now includes both rdepends and depends, all-depends.dot isn't generated and a new comprehensive task-depends.dot is generated.

64	153	bin/bitbake

commit 5344fd209aef52d8bc379c1da134ad59107d68ab
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2006-11-25 21:54:27 +0000

    data.py: Revert inherits_class change - merge error :-(

1	1	lib/bb/data.py

commit c3e63d7ac7ad9cb9a3cedd54fc6298e120394efc
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2006-11-25 21:47:30 +0000

    data.py: Fix inherits_class() so it doesn't split lists. Add unexport handling to emit_env.

4	1	lib/bb/data.py

commit 09d282d8ba526239e92e850fdf914af2bbbe6f34
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2006-11-25 21:45:33 +0000

    runqueue: Avoid running task sanity checks upon task failure

1	2	lib/bb/runqueue.py

commit f74e16af441de5629cc1ffb176f4386912388aa2
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2006-11-25 21:44:14 +0000

    data_smart: Micro optimisation - search for "${" instead of "$"

1	1	lib/bb/data_smart.py

commit 81ca79c7e495ad09c74b189922f89acc1e4c3691
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2006-11-25 21:39:59 +0000

    BBHandle: Remove unused __bbpath_found__ variable

2	4	lib/bb/parse/parse_py/BBHandler.py

commit 82284aaf474cef1618e6c23228d5ddba25b84b78
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2006-11-25 21:37:09 +0000

    fetch/__init__.py: Store urldata by 'FILE' to solve url contamination between .bb files

11	6	lib/bb/fetch/__init__.py

commit 8e940e00365f07077cd409fce03358448ce2365f
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2006-11-22 10:14:03 +0000

    git.py: Fix typo (from koen)

1	1	lib/bb/fetch/git.py

commit 5dea3d00b8fa7b59a6742f802e02ef4521d46f5f
Author: Marcin Juszkiewicz <marcin@juszkiewicz.com.pl>
Date:   2006-11-19 18:40:16 +0000

    AUTHORS: added myself

1	0	AUTHORS

commit aa8e5ee8619f3c1e700b5e072f25ed859e44be4e
Author: Marcin Juszkiewicz <marcin@juszkiewicz.com.pl>
Date:   2006-11-19 18:39:35 +0000

    svn fetcher: added my (C) as this is code which I wrote in 2004 (pre-bitbake times)
    
    http://oe-devel.bkbits.net:8080/oe.deprecated/cset%401.780

4	0	lib/bb/fetch/svn.py

commit 8c2c72fe352c84ec1802cc8cc828155fb4828e6c
Author: Marcin Juszkiewicz <marcin@juszkiewicz.com.pl>
Date:   2006-11-19 16:17:34 +0000

    added bitbake manpage based on --help output

117	0	doc/bitbake.1

commit 8daecd8e3883538d9175a9bb0dddd2c923680c44
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2006-11-19 11:05:58 +0000

    BBHandle.py: Instead of iterating through data.keys(d) calling getVarFlag each time, memorise the list of handlers in __BBHANDLERS and tasks in __BBTASKS. Against 600 .bb files in poky, this removes 2 million function calls in total of which 700,000 were to getVarTask resulting in a 5-10% speedup

12	10	lib/bb/parse/parse_py/BBHandler.py

commit ec552e1b99dcf3eb7544adc526654b9cc8b6b3f2
Author: Holger Hans Peter Freyther <zecke@selfish.org>
Date:   2006-11-18 21:18:14 +0000

    Hack to avoid 3 million key expansions by a simple string match

3	0	lib/bb/data.py

commit 1f554840eb45e8642db00c36ec9303e239575c14
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2006-11-18 20:52:25 +0000

    ConfHandler, BBHandler: Optmise number of expand calls

4	10	lib/bb/parse/parse_py/BBHandler.py
3	6	lib/bb/parse/parse_py/ConfHandler.py

commit f6941af19394817f7ac7bcf58291e9dc0138df53
Author: Holger Hans Peter Freyther <zecke@selfish.org>
Date:   2006-11-18 17:01:36 +0000

    bitbake/ old parser: Compile all anonfuncs at once!
    
        This gives a small speed-up and forces anonfuncs
        to follow the same spacing/et/noet settings

15	14	lib/bb/parse/parse_py/BBHandler.py

commit c5422f79e211247c07db3d52ad373e8c40d287f5
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2006-11-18 15:47:42 +0000

    runqueue.py: Change failed tasks handling so all failed tasks are reported, not just the first. Also add signal handling so Ctrl+C only interrupts the main tasks upon the first keypress, the second keypress sends SIGTERM to all children

3	3	bin/bitbake
45	24	lib/bb/runqueue.py
3	2	lib/bb/shell.py

commit 712fe375531520eea9b68d24f49fbe9598e3c562
Author: Holger Hans Peter Freyther <zecke@selfish.org>
Date:   2006-11-17 22:10:41 +0000

    Remember that we have compiled and added this file.
    
    This reduces the time of the new parser from 2:42 to
    1:6. The old one takes 1:42 on this macbook here

1	0	lib/bb/methodpool.py

commit 84a7ed3beb00581226fef0a2cdffcde9e7a1e6ea
Author: Holger Hans Peter Freyther <zecke@selfish.org>
Date:   2006-11-17 14:53:46 +0000

    Micro-Optimisation for parsing. Do not join and split the inherit_cache over and over again

2	2	lib/bb/data.py
3	3	lib/bb/parse/parse_py/BBHandler.py

commit c47b0af82f5f4fdd551e1efdd3290cc2c996c35c
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2006-11-16 20:15:42 +0000

    runqueue.py: Enhance dependency chain debug messages

13	5	lib/bb/runqueue.py

commit b5a2bec2d68db936f53f77ba00a96e28e18b857b
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2006-11-15 23:20:29 +0000

    bin/bitbake: Improve -b error message

9	5	bin/bitbake

commit d5074e451a68a702cec762e7f9f914a6c5b90db0
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2006-11-14 21:13:56 +0000

    tastdata.py: Minor speedup

3	0	lib/bb/taskdata.py

commit 55e1f35cd030d0cfb5421fd7f5ba5652f14d869a
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2006-11-14 21:12:05 +0000

    cache.py: Share the parser's mtime_cache, reducing the number of stat syscalls

1	4	lib/bb/cache.py
8	3	lib/bb/parse/__init__.py

commit a142dcfbee4cba9fc51a6baadb0e62c06ab9cf2a
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2006-11-14 15:09:11 +0000

    git.py: Fix conversion error

1	1	lib/bb/fetch/git.py

commit 49a36dd19d8b8a2ec55b476610373dfb46e1e8cf
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2006-11-14 10:23:27 +0000

    taskqueue/runqueue.py: Remove matches_in_list and both_contain functions and use tasks_lookup instead - 33% speedup for world runqueue calculation

1	4	lib/bb/runqueue.py
0	25	lib/bb/taskdata.py

commit 9aa5ce0e3bc7c5e1e51aaa64f5b5e70ddaa2623c
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2006-11-14 09:40:33 +0000

    runqueue.py: Catch EventException and don't print a backtrace

4	1	lib/bb/runqueue.py

commit da559df645a363f45709582719d52a534e50d2f8
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2006-11-14 02:29:44 +0000

    taskdata.py: Stop failed dependencies being added back into taskData. Improve multiple provders messages

17	7	lib/bb/taskdata.py

commit a26a1eb162196be9333e1387f7345146ce0654a2
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2006-11-13 22:47:00 +0000

    Add perforce fetcher from Jordan Crouse, suitably modified for recent bitbake changes

1	0	MANIFEST
2	0	lib/bb/fetch/__init__.py
213	0	lib/bb/fetch/perforce.py

commit 49c23575241b231c0b9a24a8667e70908c378777
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2006-11-13 15:30:21 +0000

    runqueue.py: Fix inverted logic. Less speed, more haste.

1	1	lib/bb/runqueue.py

commit a1466353cc60cfb76fdf975405325ad3a3295604
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2006-11-13 15:26:40 +0000

    runqueue.py: Fix indentation

1	1	lib/bb/runqueue.py

commit f0082c4ff200680f97b12dae7ae6b9a476e1db40
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2006-11-13 15:20:30 +0000

    runqueue.py: Improve handling of zero length task lists in -k case

8	1	lib/bb/runqueue.py

commit 82e5c98315dcb9219faed895cb049605ac7a49b7
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2006-11-13 00:19:15 +0000

    Bump to version 1.7.4

1	1	bin/bitbake
1	1	lib/bb/__init__.py

commit 06c2839b59d436cef634fb3043a2d01a71557c94
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2006-11-13 00:18:18 +0000

    providers.py: Make PREFERRED_PROVIDER_foobar defaults to foobar if available

13	1	lib/bb/providers.py

commit 6370c39e7072d1dbecdc9893a4dbd9e4c8ba8602
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2006-11-12 23:59:27 +0000

    runqueue.py: Avoid errors in builds with build failures when using -k option

3	0	lib/bb/runqueue.py

commit 751f0847ef30cc54a62565cbc04b0ceb68df3c12
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2006-11-12 23:58:26 +0000

    runqueue.py: Have recrdeptask follow depends as well as rdepends (and rdepends of depends and depends of rdepends)

33	2	lib/bb/runqueue.py

commit 9a3f4a9a8ceed01fbe85b9452d10e009674399bd
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2006-11-12 23:56:39 +0000

    taskdata.py: Add some extra debug to dump_data and optimise depid and rdepid to avoid duplicates

10	8	lib/bb/taskdata.py

commit 8e50f607be5f4095a501729c78fd6806d1df2d69
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2006-11-12 21:57:23 +0000

    taskdata.py: Add missing error message for unbuildable targets

1	0	lib/bb/taskdata.py

commit bbf7d97053826da0471ccbc2cb0a8072c7bd28cc
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2006-11-12 19:35:57 +0000

    runqueue.py: Add sanity check for zero length task list

3	0	lib/bb/runqueue.py

commit df426e8aed988cdc58d30e709674a8286ffb5adb
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2006-11-12 19:34:40 +0000

    runqueue.py: raise build failure exceptions instead of trapping them to allow stack traces to be seen

2	4	lib/bb/runqueue.py

commit 4bb7faebc5f7261ed6972eb944fe60257283229d
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2006-11-12 19:20:50 +0000

    bitbake: Add calls to expandKeys, fixing issues in bug #1294

9	2	bin/bitbake

commit d3b3f4f43b92d905e710bc9d242f9d8b7159198b
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2006-11-12 19:18:18 +0000

    taskdata.py: Improve abort flag handling, fixing several bugs

1	1	bin/bitbake
1	3	lib/bb/runqueue.py
1	1	lib/bb/shell.py
25	26	lib/bb/taskdata.py

commit 7272ac4f2b36d7de0180c47f3966a0dc679f86c7
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2006-11-12 18:25:48 +0000

    svk.py: Remove unused variables

2	7	lib/bb/fetch/svk.py

commit ea20a53342fc224eb9511b0bfe53d9d726daf6e1
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2006-11-12 18:12:17 +0000

    Fetchers: More cleanups, error handling fixes, fix SRCDATE handling to account for PN 'overrides'

6	1	lib/bb/fetch/__init__.py
12	16	lib/bb/fetch/cvs.py
1	0	lib/bb/fetch/svk.py
6	7	lib/bb/fetch/svn.py

commit 45a24b5c03684f19b49b8b26b764618c959367df
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2006-11-12 17:21:07 +0000

    Fetchers: Add forcefetch method for handling of SRCDATE now or tag=master. Move md5 code from wget.py into the fetchre core. Start generating md5 stamps for all downloads including scm tarballs. When a download is accessed, touch the md5 file to allow easy creation of source mirrors

51	3	lib/bb/fetch/__init__.py
10	5	lib/bb/fetch/cvs.py
10	5	lib/bb/fetch/git.py
1	0	lib/bb/fetch/local.py
6	1	lib/bb/fetch/svk.py
10	5	lib/bb/fetch/svn.py
12	64	lib/bb/fetch/wget.py

commit ab6bc07a319278a1b61ab58dc660ad7e9508542a
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2006-11-12 15:30:35 +0000

    fetchers: Only call createCopy and update_data after checking if the download already exists. Refactor parameters to wget's fetch_uri and make md5 a global urldata option.

1	0	lib/bb/fetch/__init__.py
4	4	lib/bb/fetch/cvs.py
5	8	lib/bb/fetch/svk.py
4	4	lib/bb/fetch/svn.py
16	19	lib/bb/fetch/wget.py

commit 3f4f2ae322ba807b0729f33f3490cf77acd081f9
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2006-11-12 15:15:31 +0000

    svn.py: Fix a references to date

1	1	lib/bb/fetch/cvs.py
1	1	lib/bb/fetch/svk.py
1	1	lib/bb/fetch/svn.py

commit 1bf8ea8a4f19cf9085e621ee9591eba98e94ae3f
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2006-11-12 15:10:51 +0000

    svn.py: Fix a reference to parm

1	1	lib/bb/fetch/svn.py

commit 62e0c9065bafc92bfe897fb06ad9c2c160ef5340
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2006-11-12 15:03:40 +0000

    fetchers: Cleanup more variables

3	0	lib/bb/fetch/__init__.py
8	22	lib/bb/fetch/cvs.py
3	5	lib/bb/fetch/git.py
1	1	lib/bb/fetch/ssh.py
15	36	lib/bb/fetch/svk.py
11	26	lib/bb/fetch/svn.py
1	1	lib/bb/fetch/wget.py

commit d5613e9243a9dcea76deb9eb38b82d4ca0faf0d5
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2006-11-12 14:31:10 +0000

    fetchers: Remove check_for_tarball() in favour of try_mirror directly

0	20	lib/bb/fetch/__init__.py
1	1	lib/bb/fetch/cvs.py
1	1	lib/bb/fetch/svk.py
1	1	lib/bb/fetch/svn.py

commit 9e86f17c8fdbd17ce4b3d0716a6b36fe58dc87d6
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2006-11-12 14:25:28 +0000

    fetchers: Create a urldata object which is passed between the different url methods. Start to use this to remove duplicate code and duplicate function execution, simplifying the fetchers

47	37	lib/bb/fetch/__init__.py
50	79	lib/bb/fetch/cvs.py
24	55	lib/bb/fetch/git.py
7	10	lib/bb/fetch/local.py
3	3	lib/bb/fetch/ssh.py
24	34	lib/bb/fetch/svk.py
28	53	lib/bb/fetch/svn.py
14	23	lib/bb/fetch/wget.py

commit e8c28acecb269b3f115f5a548f5f3897f38d9296
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2006-11-12 00:12:32 +0000

    fetchers: Refactor interating through urls into the fetcher core (preparing for common md5/tarball stash code)

3	3	lib/bb/fetch/__init__.py
107	112	lib/bb/fetch/cvs.py
57	60	lib/bb/fetch/git.py
1	1	lib/bb/fetch/local.py
42	46	lib/bb/fetch/ssh.py
72	75	lib/bb/fetch/svk.py
96	101	lib/bb/fetch/svn.py
43	47	lib/bb/fetch/wget.py

commit e9cd560307a02c33452f13f4cd3ab0280af28b69
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2006-11-11 19:10:44 +0000

    Add ssh fetcher written by kergoth (from poky)

1	0	MANIFEST
2	0	lib/bb/fetch/__init__.py
122	0	lib/bb/fetch/ssh.py

commit ab37bc79f591e9e650b77f140fa4d9a4a2e744d4
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2006-11-10 13:53:10 +0000

    data.py: Fix emit_env() to expand keynames as well as values

4	2	lib/bb/data.py

commit e4f50150c041f490ae80dedb96232e157f1978eb
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2006-11-09 23:12:09 +0000

    Improve errors messages for required vs. inherited files

1	1	lib/bb/parse/parse_py/BBHandler.py
4	4	lib/bb/parse/parse_py/ConfHandler.py

commit 1b1175753e8f3ffce3395250b7c6be5e80b65bff
Author: Holger Hans Peter Freyther <zecke@selfish.org>
Date:   2006-11-09 22:44:01 +0000

    lib/bb/parse/parse_py/BBHandler.py: Commit the parsed method at EOF
    
        Make sure to commit the pending __body__ when we are
        __inpython__. Currently sending '' lead to simply appending
        it to the body.
        We create a special LINE Number to indicate the EOF which
        will lead to closing/comitting the code.
    
        The side effects of this can be huge... I mean huge

12	2	lib/bb/parse/parse_py/BBHandler.py

commit c70a3471af3a92af4d23d4d2852dce83925783e7
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2006-11-05 11:14:56 +0000

    BBHandler.py: make inherit fail if the class doesn't exist (#1478)

1	1	lib/bb/parse/parse_py/BBHandler.py

commit 812f39806107aa4c7e1154ae55f33731092d8854
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2006-11-04 19:06:40 +0000

    shell.py: Add support for the abort flag

5	0	lib/bb/shell.py

commit b4e6c51d376a78b357df1e31b3338326a03063e8
Author: Holger Hans Peter Freyther <zecke@selfish.org>
Date:   2006-11-01 11:18:27 +0000

    bitbake/trunk/bitbake: Add more files to the MANIFEST and make it work again

9	7	MANIFEST

commit 3e2e4f6c2f840c1720799af648aa43dbff6d4687
Author: Holger Hans Peter Freyther <zecke@selfish.org>
Date:   2006-11-01 11:11:36 +0000

    BitBake: Tag 1.6.2 and 1.7.2 of BitBake

3	1	ChangeLog
1	1	bin/bitbake
1	1	lib/bb/__init__.py

commit 67033ead9f6ab0c79f8188fccd37241b055c2503
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2006-10-29 13:35:17 +0000

    cache.py: Allow version field in DEPENDS (ignored for now)

1	1	lib/bb/cache.py

commit 2e8b325476c2d4bc3b986aaabde10c650c3960c6
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2006-10-21 11:45:55 +0000

    bump 1.7 versions

1	1	bin/bitbake
1	1	lib/bb/__init__.py

commit ae1ea674dcb9efb5d1b9b3e532efb77c1bb56a7a
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2006-10-04 08:12:55 +0000

    bin/bitbake: fix typo

1	1	bin/bitbake

commit 4996ccfe1a8d27f8a4137c9c7877ab7dc95b6a21
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2006-10-03 22:45:05 +0000

    bin/bitbake: Move handle_data() into parse_bbfiles instead of the callback

5	6	bin/bitbake

commit dd853767e178ea6ac854459ba103ff92637662b3
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2006-10-03 22:39:12 +0000

    cache.py: Stop passing cooker around as its no longer needed

3	3	bin/bitbake
4	4	lib/bb/cache.py
2	2	lib/bb/shell.py

commit f1252d5dab221b267716f09c969ff34e9af711ed
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2006-10-03 22:34:21 +0000

    parse_py/ConfHandler.py: Remove broken default options (as identified by mithro)

4	4	lib/bb/parse/parse_py/ConfHandler.py

commit 3a54f0ed22aeb00974ce83a2f93a74da367b0fbd
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2006-10-03 22:32:55 +0000

    data_smart.py: Add expand_cache, caching expanded data (but wiped on any write to the data) - gives a performance improvement

12	0	lib/bb/data_smart.py

commit dc5c6e0d051a5ee450f9b805fc6dcbeab4f41adb
Author: Chris Larson <clarson@kergoth.com>
Date:   2006-09-28 18:36:47 +0000

    Minor bugfix in taskdata, the dump function was passing a list to bb.msg.debug where it expected a string.  Use ', '.join() to create a string.

2	2	lib/bb/taskdata.py

commit b21d40d78d168791a568f28d268a5096e65ae936
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2006-09-16 22:30:33 +0000

    taskdata.py: Remove a seemingly incorrect line of code fixing issues reported by pH5. This code was likely added for a reason so lets see what breaks...

1	1	lib/bb/taskdata.py

commit 0351bc01ed0900ca56158b4f4b47d036eb3feb3f
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2006-09-16 14:27:25 +0000

    Fix -f force option when used without -b

1	1	bin/bitbake
6	4	lib/bb/runqueue.py

commit 3b432f5ff530d88a32fc780c1be7bf97250a6202
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2006-09-16 14:26:35 +0000

    taskData.py: Only mark external targets as external

2	1	lib/bb/taskdata.py

commit 7b911bc9e947b11cdc0d4a1a44f82b67bed1432b
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2006-09-15 15:34:54 +0000

    cache.py: Don't error if a file doesn't exist, just mark the cache entry invalid

4	0	lib/bb/cache.py

commit 567c057c897e7ff2450b734a02e65f4418263206
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2006-09-14 22:17:29 +0000

    taskqueue.py: Add a small cache for task ids for a big speed improvement

12	8	lib/bb/taskdata.py

commit 2a5ebb0c674cd6e948ee6d0186e0c863b6c9cf05
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2006-09-14 20:40:43 +0000

    runqueue.py: Convert Deps and RunDeps fields into sets, add debugging code for tracing indriect circular dependencies

15	6	lib/bb/runqueue.py

commit 7ce6b7c9e4ec3cca5db691c2335121f082ac667a
Author: Michael 'Mickey' Lauer <mickey@vanille-media.de>
Date:   2006-09-11 22:50:28 +0000

    * shell: fix 'which' command
    * shell: use 'rebuild' task for implementing rebuild

3	3	lib/bb/shell.py

commit 26d8603e38718d7ec27b0fd5ae09f654447e26f2
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2006-09-11 11:46:32 +0000

    bin/bitbake: parse.handle must have an absolute path

10	14	bin/bitbake

commit 2a86e0295a606ce90776ffe5dd3c5303e18e65a3
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2006-09-11 11:34:00 +0000

    bitbake/lib/bb/shell.py:
    bitbake/bin/bitbake:
    Split collect_bbfiles into collect_bbfiles and parse_bbfiles
    Allow -b option to accept an expression which uniquely identifies a .bb file instead of requiring a full path
    Disable BBFILES support within .bb files (it was already non-functional)

53	24	bin/bitbake
2	1	lib/bb/shell.py

commit 3877abf437ff67a010b3e14c28da7f2c42bbd332
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2006-09-11 11:28:08 +0000

    cache.py: The cache doesn't really need to know about any progress callback - adjust logging accordingly

2	4	lib/bb/cache.py

commit 9fc8a2d3004214d5b82bed01d19da92064805ac1
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2006-09-10 22:02:58 +0000

    taskdata.py: Clean up mesage handling for unbuildable targets - log at debug level unless the target was directly requested

34	10	lib/bb/taskdata.py

commit bf86c921de1ca498cc4e19f5c875859e9ce2762c
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2006-09-10 21:39:29 +0000

    build.py: Really fix debug_level references causing excessive debug output (s/general/default - thanks for spotting koen)

3	3	lib/bb/build.py

commit e7701494d2b624ad52cb14f16afeb47aea3c3b0e
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2006-09-10 21:34:05 +0000

    build.py: Fix debug_level references causing excessive debug output

3	3	lib/bb/build.py

commit 410f5ff7cec72c03d2fc030a8fb91b0fdbce11f0
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2006-09-10 21:17:02 +0000

    cache.py: Drop uneeded BUILD_ALL_DEPS variable

0	2	lib/bb/cache.py

commit ebed7f1cd6b8046a2467e141badbf7776e24cce9
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2006-09-10 21:16:02 +0000

    lib/bb/shell.py - Use taskData and runQueue directly
    lib/bb/runqueue.py - Add fn to TaskFailure
    bin/bitbake - Remove now uneeded buildProvider

5	36	bin/bitbake
6	4	lib/bb/runqueue.py
35	10	lib/bb/shell.py

commit 37333edd9afa7ff7a8926ba85d1cc2c246cc6c1e
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2006-09-10 21:12:04 +0000

    msg.py: Each -l option increases the debug level of that logging domain by 1 (similar to -D behaviour).

5	3	lib/bb/msg.py

commit 04d17a49bdbabe3ba2cdd14df1edbab0d69c0d95
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2006-09-10 21:10:10 +0000

    runqueue.py: Upon failure in abort mode, raise an exception rather than sys.exit

2	2	lib/bb/runqueue.py

commit db9333b8c21fc361a4a49c6409d68b04bbaa8f86
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2006-09-09 23:29:36 +0000

    Turn BBParsingStatus into CacheData and move to cache.py

2	142	bin/bitbake
140	1	lib/bb/cache.py
2	2	lib/bb/shell.py

commit 2a0e2b7924f32e0fff7a7371be805700b646525f
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2006-09-09 23:04:32 +0000

    providers.py: Improve findBestProvider debug messages to explain the infamous 'preferred version 2.4 of glibc not available' messgae

7	4	lib/bb/providers.py

commit e09090c9352d24f998b31bdde84ad2b6b9f279ab
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2006-09-09 21:49:34 +0000

    build.py: Add interactive flag for tasks to optionally disable console redirection. Default to maintain backwards compatibility

25	22	lib/bb/build.py

commit 613f2cfa92c04a9b1f367b8e7d13b32e9913cc3c
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2006-09-09 21:43:06 +0000

    bbimage: Add call to init logging variable

1	0	bin/bbimage

commit fdb2e3ced1a00dc029c69878a7afb63bf4643797
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2006-09-09 21:24:20 +0000

    Add bitbake -l option to specify debug domains to show

9	0	bin/bitbake
17	6	lib/bb/msg.py

commit be966771286d0d43c9bb398406109170849ba13a
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2006-09-09 17:47:52 +0000

    Complete conversion to use bb.msg

3	3	bin/bitbake
7	7	lib/bb/build.py
11	11	lib/bb/cache.py
4	3	lib/bb/data.py
4	3	lib/bb/data_smart.py
12	1	lib/bb/msg.py
6	6	lib/bb/parse/parse_py/BBHandler.py
9	10	lib/bb/parse/parse_py/ConfHandler.py
1	1	lib/bb/providers.py
8	8	lib/bb/runqueue.py
1	1	lib/bb/taskdata.py
7	7	lib/bb/utils.py

commit 2bc178d17fa4f0ac52e0cc8d35f04e6a4f68fde5
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2006-09-09 16:58:58 +0000

    Convert fetchers to use bb.msg

9	9	lib/bb/fetch/__init__.py
5	5	lib/bb/fetch/cvs.py
4	4	lib/bb/fetch/git.py
4	4	lib/bb/fetch/svk.py
6	6	lib/bb/fetch/svn.py
3	3	lib/bb/fetch/wget.py
1	1	lib/bb/msg.py

commit 26e5964968e15905a281b085866bccc293cab039
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2006-09-09 16:43:55 +0000

    runqueue.py: Improve error messages (and make get_error_idstring a more global function)

11	10	lib/bb/runqueue.py

commit 87b24a9c7f8dfbd33a73fe439a14b7f98b8f0c78
Author: Holger Hans Peter Freyther <zecke@selfish.org>
Date:   2006-09-08 21:55:12 +0000

    bitbake/trunk/bitbake/bin/bbimage: prepend the path to BitBake instead of appending to fix #1108
    
        We want the 'local' libraries to be loaded before the installed copy. E.g.
        if you have a old version of BitBake installed but run a newer version
        from a local directory you want to load the BitBake libraries from the local
        directory

2	2	bin/bbimage

commit c8454706174f835881f850334946904afab9d400
Author: Holger Hans Peter Freyther <zecke@selfish.org>
Date:   2006-09-08 21:52:32 +0000

    bitbake/bin/bitbake: Richard deserves a real (C) on BitBake

1	1	bin/bitbake

commit 659850b990f7223b701190117232415b57903c81
Author: Holger Hans Peter Freyther <zecke@selfish.org>
Date:   2006-09-08 21:40:30 +0000

    bitbake/trunk/bitbake: Update the ChangeLog to mention Richards great changes and Paul's svn fetcher change

6	0	ChangeLog

commit 5668456a58dac33b2e1f94420feb9df7097bbf40
Author: Holger Hans Peter Freyther <zecke@selfish.org>
Date:   2006-09-08 21:39:53 +0000

    bitbake/trunk/bitbake: Do svn co's to a permanent directory (SVNDIR) to be more similiar to the CVS fetcher
        Patch courtsey Paul Sokolovsky to address #1367 to have a
        permanent directory for subversion to ease updating of huge
        repositories.

4	1	conf/bitbake.conf
32	31	lib/bb/fetch/svn.py

commit 51ee10fea0ad16c23504ea0a12f2b7c744953216
Author: Holger Hans Peter Freyther <zecke@selfish.org>
Date:   2006-09-08 21:34:51 +0000

    bitbake/trunk/bitbake: Mention BitBake 1.6 as the stable branch

1	1	bin/bitbake

commit 2d71a8df2296704dd99579fb88a15ed3bd57b33b
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2006-08-23 12:16:24 +0000

    runqueue.py: Improve circular depends error message

1	1	lib/bb/runqueue.py

commit 4c1dfdfc082909280ba0634e9585d94528a2fcbb
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2006-08-22 14:14:08 +0000

    runqueue.py: Fix the case where BB_NUMBER_THREADS is unset

1	3	lib/bb/runqueue.py

commit 0345a4082e094dd424034e9c1f2ca2ba778ffdf0
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2006-08-22 14:07:46 +0000

    runqueue.py: Make sure number_tasks is a number

1	1	lib/bb/runqueue.py

commit 01e908f33d38aa2acab9bd696d5f4c50c72c6635
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2006-08-22 11:09:55 +0000

    runqueue.py: Make sure depends is initialised

1	0	lib/bb/runqueue.py

commit bf60b43dca8bf44d74509fa87bd5ae6bb0dc3963
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2006-08-21 21:58:45 +0000

    taskdata.py: Fix so only warn about failed providers once.

2	2	lib/bb/taskdata.py

commit f6f410e5c55876888f2bda70101c78d3da8e968d
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2006-08-21 16:31:17 +0000

    runqueue.py: Print summary of active tasks when aborting a build run

7	1	lib/bb/runqueue.py

commit 0c7c3788a6a91561fb35c9405fd303a724613c34
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2006-08-21 15:38:17 +0000

    taskdata.py: Add handling to remove/ignore files which fail after after the checks earlier in add_[r]provider

6	1	lib/bb/taskdata.py

commit 0b9bfc970e5d1dad5f917b98db23ae272ac5e823
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2006-08-20 22:26:42 +0000

    runqueue.py: Fix and disable some debug

4	3	lib/bb/runqueue.py

commit a6e26ec83270de1ae9993c054be25e4ccbde1a8e
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2006-08-20 21:52:23 +0000

    bitbake/lib/bb/taskdata.py:
    bitbake/lib/bb/__init__.py:
    bitbake/lib/bb/shell.py:
    bitbake/lib/bb/runqueue.py:
    bitbake/lib/bb/msg.py:
    bitbake/MANIFEST:
    bitbake/bin/bitbake:
        Major rewrite and modularisation of the dependecy code. The code in bin/bitbake
        is replaced by the taskdata and runqueue modules. The code is designed to support
        multiple threads (although the initial threading algothirm is simplistic). The
        new code is aimed to be maintainable and debuggable (once msy.py is finished).

2	0	MANIFEST
67	254	bin/bitbake
2	0	lib/bb/__init__.py
1	1	lib/bb/msg.py
423	0	lib/bb/runqueue.py
1	1	lib/bb/shell.py
534	0	lib/bb/taskdata.py

commit b1bd6a2abfa177520991263efc4a5b365a625a0c
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2006-08-20 21:36:57 +0000

    bitbake/lib/bb/build.py:
        - Add flag to disable exec_task dependency execution

4	2	lib/bb/build.py

commit c32e0f52570186622d95ba78c4bb34658720817b
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2006-08-20 21:34:35 +0000

    bitbake/lib/bb/providers.py:
        - Add NoRProvider exception

4	1	lib/bb/providers.py

commit b083d8583bcfc16be440d07ca8d37032d6c67d8f
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2006-08-16 09:47:34 +0000

    Remove a debug statement that crept in

0	1	lib/bb/build.py

commit 830259ba7868901c24b6e08ada12fba1c4308d6b
Author: Holger Hans Peter Freyther <zecke@selfish.org>
Date:   2006-08-15 15:28:48 +0000

    bitbake: Trunk is now at version 1.7.0

1	1	bin/bitbake
1	1	lib/bb/__init__.py

commit d739f0b92c3c5862e8ead81d55ea5576214db6f8
Author: Holger Hans Peter Freyther <zecke@selfish.org>
Date:   2006-08-15 15:16:30 +0000

    bitbake: Assign release number 1.6.0 to the trunk and update the ChangeLog

22	0	ChangeLog
1	1	bin/bitbake
1	1	lib/bb/__init__.py

commit 29750dce93431687d8c270fe77f00d6d12f72340
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2006-08-14 00:25:51 +0000

    trunk/bitbake/bin/bitbake:
     * Fix up getRuntimeProviders calls in previous commit

3	3	bin/bitbake

commit 9019bfe861522f7fb9d9759d91cc3ea66f909ad5
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2006-08-14 00:22:37 +0000

    trunk/bitbake/lib/bb/providers.py:
    trunk/bitbake/bin/bitbake:
      * Move getProvidersRun -> bb.providers.getRuntimeProviders
      * Make filterProviders build_cache_fail parameter optional, pending
        rethink/removal
      * Add NoProvider exception

3	26	bin/bitbake
30	1	lib/bb/providers.py

commit 3639a965293f5b60efec38b5489b574076a5d3b6
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2006-08-14 00:14:33 +0000

    trunk/bitbake/bin/bitbake:
      * fix references to findBestProvider (closes #1288)

2	2	bin/bitbake

commit d08eb8a983ad64327c18166bd0a30e56b741bd13
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2006-08-13 23:56:42 +0000

    trunk/bitbake/bin/bitbake:
      * Add some variables to the data cache
      * Move self.preferred into the same place as other similar cache data
    trunk/bitbake/lib/bb/cache.py:
      * Bump cache version number

16	8	bin/bitbake
1	2	lib/bb/cache.py

commit be8b569c58fa7d4e7bb06f1128be38d4fd62b82a
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2006-08-13 23:46:54 +0000

    trunk/bitbake/lib/bb/build.py:
      * Add version of stamp_is_current that works with cached data
      * Tweak mkstamp to work over broken? NFS filesystems (simply opening
        the file for write access wasn't enough to change the file's timestamp)
      * Have add_task create _task_deps variable containing various task flags
        for cache use

63	3	lib/bb/build.py

commit 2f4702ca15eb7a77a44e011e6e400b528bb7f85e
Author: Holger Hans Peter Freyther <zecke@selfish.org>
Date:   2006-07-25 20:37:57 +0000

     r420@snorf:  ich | 2006-07-25 21:29:45 +0200
     Tabs -> Space
     r421@snorf:  ich | 2006-07-25 21:45:00 +0200
     lib/bb/parser/parse_c: Check if we parse a configuration file
         Check if we parse a configuration file and if we parse a config
         file and see illegal constructs like methods we will throw
         and parse error.
     r422@snorf:  ich | 2006-07-25 21:48:05 +0200
     lib/bb/parse/parse_c: Make sure to return 0 if we return -1 in some branch
     r423@snorf:  ich | 2006-07-25 22:21:06 +0200
     lib/bb/parse/parse_c: Modify BBPATH, handle inherits
    
         Add BBPATH to the dirname of the current fn. Handle INHERITS
         and include these files.
     r424@snorf:  ich | 2006-07-25 22:22:50 +0200
     lib/bb/parse/parse_c: Handle IOErrors on inheriting INHERITS

77	30	lib/bb/parse/parse_c/BBHandler.py
67	18	lib/bb/parse/parse_c/bitbakec.pyx
71	73	lib/bb/parse/parse_c/bitbakeparser.cc
67	60	lib/bb/parse/parse_c/bitbakescanner.cc
2	1	lib/bb/parse/parse_c/bitbakescanner.l
1	0	lib/bb/parse/parse_c/lexer.h
1	0	lib/bb/parse/parse_c/lexerc.h

commit 6dca45af90bd838e138c8d9b18c9f5bf657903a3
Author: Holger Hans Peter Freyther <zecke@selfish.org>
Date:   2006-07-25 17:41:07 +0000

     bitbake/doc/manual: Do not mention rdepends.dot

1	1	doc/manual/usermanual.xml

commit f2788eda48b082f658667002143f64eb30bbe64c
Author: Holger Hans Peter Freyther <zecke@selfish.org>
Date:   2006-07-23 21:33:21 +0000

    lib/bb/parse/parse_c: Throw Parse Exceptions, crash less often
    
        -Make sure TOPDIR is set (do not declare this as an error here)
        -Do not crash on 'NULL' strings
        -Throws exceptions properly using 'except -1' from within our
         cdef.

32	6	lib/bb/parse/parse_c/BBHandler.py
2	2	lib/bb/parse/parse_c/Makefile
19	9	lib/bb/parse/parse_c/bitbakec.pyx
2	1	lib/bb/parse/parse_c/bitbakescanner.cc
2	1	lib/bb/parse/parse_c/bitbakescanner.l
4	3	lib/bb/parse/parse_c/lexer.h
1	0	lib/bb/parse/parse_c/lexerc.h

commit 6624e4bf969b08d04fe345a2f7c097f5147ca7f1
Author: Holger Hans Peter Freyther <zecke@selfish.org>
Date:   2006-07-23 20:17:59 +0000

    lib/bb/parse/parser_c: Handle includes, requires, cope with our syntax
    
        -be able to parse variables like PREFERRED_PROVIDER_virtual/kernel
        -handle includes and requires, add 's' to %(fn)
        -be less verbose

7	7	lib/bb/parse/parse_c/BBHandler.py
38	32	lib/bb/parse/parse_c/bitbakec.pyx
45	45	lib/bb/parse/parse_c/bitbakescanner.cc
13	13	lib/bb/parse/parse_c/bitbakescanner.l

commit 31321c2cb61f6a2cf0b208edc4e235642c9d53c2
Author: Holger Hans Peter Freyther <zecke@selfish.org>
Date:   2006-07-23 17:56:00 +0000

    bitbake/lib/parser/parse_c: Avoid some segfaults

18	10	lib/bb/parse/parse_c/bitbakec.pyx

commit d65d6084e379ea956fe6d2ed8e02817f5fbd3d18
Author: Michael 'Mickey' Lauer <mickey@vanille-media.de>
Date:   2006-07-15 09:34:02 +0000

    msg needs to import sys, it calls it

1	1	lib/bb/msg.py

commit b2917b3e2b262d24592e0abe22248504e3ff7517
Author: Chris Larson <clarson@kergoth.com>
Date:   2006-07-11 11:45:56 +0000

    Testing CIA notification, again.

0	0	a

commit 08992a6682b9a9fc854fceb5d80794c0ce3f57a7
Author: Chris Larson <clarson@kergoth.com>
Date:   2006-07-11 11:45:43 +0000

    Testing CIA notification.

0	0	a

commit ca0888b2368682a524d425a10b23a554e5ba0e8d
Author: Michael 'Mickey' Lauer <mickey@vanille-media.de>
Date:   2006-07-11 11:29:54 +0000

    switch pastebin provider to http://rafb.net/paste
    patch courtesy Zwelch

19	22	lib/bb/shell.py

commit 345c08effd86188cfd12af686153feebdca664ca
Author: Chris Larson <clarson@kergoth.com>
Date:   2006-07-10 19:22:06 +0000

    Contrib: update the Vim syntax highlighting to include the 'require' keyword and '.=' and '=.'.  Add a Vim ftdetect plugin to properly set the filetype on bitbake files.

4	0	contrib/vim/ftdetect/bitbake.vim
4	4	contrib/vim/syntax/bitbake.vim

commit 628e7791d754ad68b810f275bb346e3c04949026
Author: Holger Hans Peter Freyther <zecke@selfish.org>
Date:   2006-07-09 21:06:40 +0000

    bitbake c parser: first steps torwards a working parser

9	7	lib/bb/parse/parse_c/BBHandler.py
6	6	lib/bb/parse/parse_c/Makefile
7	7	lib/bb/parse/parse_c/bitbakec.pyx

commit 4651e6cf84fea69c52d88b57f7ccc9a322933d7b
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2006-07-08 16:30:02 +0000

    bitbake/lib/bb/__init__.py:
    bitbake/lib/bb/build.py:
    bitbake/lib/bb/utils.py:
    bitbake/lib/bb/shell.py:
    bitbake/lib/bb/providers.py:
    bitbake/lib/bb/msg.py:
    bitbake/bin/bitbake:
    bitbake/bin/bitdoc:
    bitbake/classes/base.bbclass:
            Start an overhaul of the message handling in bitbake:
            - Introduce a new msg module to replace the existing simple calls.
            - The msg module adds the conncept of message domains so ultimately we can
              select which kinds of debug messages we want to see (it uses an Enum class
              for this)
            - Add a warn logging level for things the user should really pay attention to
              as note is a little overloaded at present
            - Start converting to use the new fuctions

69	73	bin/bitbake
1	1	bin/bitdoc
1	1	classes/base.bbclass
7	15	lib/bb/__init__.py
5	5	lib/bb/build.py
84	0	lib/bb/msg.py
6	7	lib/bb/providers.py
2	2	lib/bb/shell.py
40	0	lib/bb/utils.py

commit da652d60033fc735e6d5000fa05c6c8174ab3125
Author: Holger Hans Peter Freyther <zecke@selfish.org>
Date:   2006-07-08 14:41:46 +0000

    lib/bb/build.py: fix for 1017, try to change back to the prevdir
    
        In the case of rm_work.bbclass we might have deleted the
        directory where we come from. Do not fail to avoid
        the issues described in #1017

4	1	lib/bb/build.py

commit f9cb6a4ae685c7580c7b4eb267179c0448325914
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2006-07-08 12:56:31 +0000

    bitbake/lib/bb/build.py:
            - Remove some stale inactive code

0	19	lib/bb/build.py

commit 856526609b2cd88a3f272ff6f4564d877a1e8c43
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2006-07-08 12:54:31 +0000

    bitbake/lib/bb/providers.py:
    bitbake/lib/bb/__init__.py:
    bitbake/lib/bb/shell.py:
    bitbake/bin/bitbake:
            * Move providers functions into their own file. The arguments are horrible
              at present but we have to start somewhere with the cleanup and refactoring.

4	137	bin/bitbake
1	0	lib/bb/__init__.py
163	0	lib/bb/providers.py
2	2	lib/bb/shell.py

commit 7d55491f88ff90a4c16ad87b1483d55b1824acfc
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2006-07-08 12:47:40 +0000

    lib/bb/fetch/git.py: Add some commands to clean up the git directories to make things faster and use less space

3	0	lib/bb/fetch/git.py

commit f43dad99ae018be3779724899be89f00eda935f4
Author: Holger Hans Peter Freyther <zecke@selfish.org>
Date:   2006-05-31 21:10:06 +0000

    bitbake/lib/bb/fetch/*:  Implement special 'now' handling for BitBake
        Patch courtsey Justin Patrin to teach BitBake SRCDATE="now" handling.
        If SRCDATE is set to now we will not look at the temporary DL_DIR
        for a saved tarball as we want to download a new version. OpenEmbedded
        should consider stamping the do fetch phase.
    
        Justin thanks for the patch and sorry for all the trouble
    
    
    bitbake/doc/manual/usermanual.xml: Document the 'now' method for svn,svk and cvs

4	4	doc/manual/usermanual.xml
23	0	lib/bb/fetch/__init__.py
1	1	lib/bb/fetch/cvs.py
1	3	lib/bb/fetch/svk.py
5	1	lib/bb/fetch/svn.py

commit 55d4e1b0ed5df0c1d7b66e21f61302849b65aec9
Author: Holger Hans Peter Freyther <zecke@selfish.org>
Date:   2006-05-31 20:46:53 +0000

    bitbake/doc/manual/usermanual.xml: Use version 2.5 of the license
    
        The CreateCommons license is now at version 2.5. The spirit
        remains unchanged.

1	1	doc/manual/usermanual.xml

commit 12b971ea5449a110dcf7ef3d8524d861c1507872
Author: Holger Hans Peter Freyther <zecke@selfish.org>
Date:   2006-05-28 00:00:56 +0000

     bitbake/bin/bitbake: DOT code cleanup
         Really use myFilterProvider which will take care
         of the PREFERRED_PROVIDER, and add documentation
         to the code.

14	13	bin/bitbake

commit c61025dc7f932c6668aad40e75cdb0be202a97a5
Author: Holger Hans Peter Freyther <zecke@selfish.org>
Date:   2006-05-27 23:59:21 +0000

     bitbake/bin/bitbake: Add code to handle RDEPENDS
    
         Add code to handle the RDEPENDS. We use getRunProviders
         and the rundeps variable of BBParsingStatus to get the
         providers, similiar to addRunDeps.
         The graph is now not looking too bad.

32	17	bin/bitbake

commit 861a02a1f89cd6ecb4857d73a72667baa31d9d1f
Author: Holger Hans Peter Freyther <zecke@selfish.org>
Date:   2006-05-27 23:56:41 +0000

     bitbake/bin/bitbake: We need to look at seen_depends everytime and can't filter
    
         Due the recursion we need to reevualate seen_depends everytime.
         Move the variables/files down to the actual call...

17	18	bin/bitbake

commit 98b125fde0bc73627aaeca7ed7bd5cc027f1a942
Author: Holger Hans Peter Freyther <zecke@selfish.org>
Date:   2006-05-27 23:56:07 +0000

     bitbake/bin/bitbake: Add first version of mixed dependency handling
    
         First version of showing DEPENDS and RDEPENDS in the same graph.
         The is one issue that some provider get handled twice and we
         see two arrows.

49	10	bin/bitbake

commit 1f3bf62b33dc7a8dfdb872cae5d0b747e30774e4
Author: Holger Hans Peter Freyther <zecke@selfish.org>
Date:   2006-05-27 20:30:57 +0000

     bitbake/bin/bitbake: Kill the generation of the RDEPENDS for
    
         RDEPENDS needs different handling than DEPENDS. Looking
         in providers is not enough most of the times.

1	8	bin/bitbake

commit db5e03f497f952f6aacec7a96d727a4a74ef437d
Author: Holger Hans Peter Freyther <zecke@selfish.org>
Date:   2006-05-27 20:30:45 +0000

     bitbake/bin/bitbake: Kill whitespace

3	3	bin/bitbake

commit 1dfe641838065683874c4824f7c41fdbd03e5fde
Author: Holger Hans Peter Freyther <zecke@selfish.org>
Date:   2006-05-27 20:30:37 +0000

     bitbake/bin/bitbake: CLI help updates, DOT generatin emits version
         Emit the Version of the provider in the node as well. Create
         a myFilterProvider to take PREFERRED_PROVIDER into account.

62	23	bin/bitbake

commit 5d054be0c2c88791997c5a41de08d4ad17bdf3bb
Author: Holger Hans Peter Freyther <zecke@selfish.org>
Date:   2006-05-27 20:30:27 +0000

     doc/manual/usermanual.xml: Add some Bla about using the -g option
    
         Start documenting the -g option... well start with it. Hopefully
         someone else will document it.

21	3	doc/manual/usermanual.xml

commit e15fd00b048820e7aa656dfc9a34a0977fe667d3
Author: Holger Hans Peter Freyther <zecke@selfish.org>
Date:   2006-05-27 20:30:17 +0000

     doc/manual/usermanual.xml: Simplify the sentence

1	1	doc/manual/usermanual.xml

commit a918a86cabea73974144fbf8183f4b4d723d0c0c
Author: Holger Hans Peter Freyther <zecke@selfish.org>
Date:   2006-05-27 20:30:08 +0000

     doc/manual/usermanual.xml: Fix the EventHandler example
    
         The python method needs a closing brace. Add the
         missing one.

1	0	doc/manual/usermanual.xml

commit 0da4abd2993305a3c762445b2535dbbabbe3905e
Author: Holger Hans Peter Freyther <zecke@selfish.org>
Date:   2006-05-27 20:29:54 +0000

     fetcher module:
         Add ParameterError as Exception from bug report #72

3	0	lib/bb/fetch/__init__.py

commit bcdbdcb7e327233f14ce833ca1b5a439b950070e
Author: Holger Hans Peter Freyther <zecke@selfish.org>
Date:   2006-05-27 20:29:17 +0000

     bitbake/lib/bb/shell.py:
         -Rename last trace of pastebin.com to oe.pastebin.com
          (which was in a comment any way)

1	1	lib/bb/shell.py

commit 2414aea0b9cd882041badcb982b8c6f89d0abf32
Author: Holger Hans Peter Freyther <zecke@selfish.org>
Date:   2006-05-27 20:29:01 +0000

     bitbake/lib/bb/data.py:
         Add another testcase regarding createCopy
         and update_data

10	0	lib/bb/data.py

commit cd274900a153bc491289381168a63c3b24895e0f
Author: Holger Hans Peter Freyther <zecke@selfish.org>
Date:   2006-05-26 22:36:44 +0000

    bitbake/bin/bitbake: Add option to ignore dependencies on graph
    
            If your dependency graph should not show specific
            depends, e.g. the virtual/libc, quilt-native depends
            use -I virtual/libc -I quilt-native to do so.

13	4	bin/bitbake

commit d9823679b9ba9ef351eb057a16b2dc09ba64d252
Author: Holger Hans Peter Freyther <zecke@selfish.org>
Date:   2006-05-25 21:38:06 +0000

    bitbake/bin/bitbake: Make sure we add all handlers from INHERIT
    
        The code had the assumption that at least one .inc
        file was included (always included). This is not true
        in the NSLu2 case. The code now makes sure we load each
        bbclass we have in the INHERIT line either directly or
        indirectly. And then we can safely add all event handlers.
    
        Todo: Add HANDLERS += to only load the HANDLERS and not
        all classes.

12	4	bin/bitbake

commit 56d3fb063fc91c8ca3dd4a212c790ac121ba0bfe
Author: Holger Hans Peter Freyther <zecke@selfish.org>
Date:   2006-05-25 17:51:33 +0000

    bitbake/bin/bitbake: Generate DOT depedency start
            Add option -g to generate graphs for
            DEPENDS and RDEPENDS. Currently these
            are emitted in two different files for now.
    
            For the future:
                    -Add option to stop at level X
                    -Emit both DEPENDS and RDEPENDS into
                     the same graph...

87	0	bin/bitbake

commit 32abd610ea1661766a9f53b42de98f9ffba145f6
Author: Holger Hans Peter Freyther <zecke@selfish.org>
Date:   2006-05-06 13:45:38 +0000

    bitbake/lib/bb/shell.py:
        No need to use imp on bin/bitbake

1	2	lib/bb/shell.py

commit b708cf280fd1bc9566f822eeff4cc670a3ce28a0
Author: Holger Hans Peter Freyther <zecke@selfish.org>
Date:   2006-05-06 13:10:59 +0000

    bitbake/bin/bitbake:
        BBConfiguration do not initialise the
        configuration twice
    
        Save a copy of th configuration data and update
        it.

15	3	bin/bitbake

commit f22c825e68d83deb5483896e6c3fe93885e6df8a
Author: Holger Hans Peter Freyther <zecke@selfish.org>
Date:   2006-05-06 12:54:06 +0000

    bitbake/lib/bb/cache.py:
        -Do not use the cooker directly in load_bbfile
        -do not set TOPDIR etc. This should be set
         by parse.init()

9	19	lib/bb/cache.py

commit 97687696a1e785a6318b55f61d45412644123806
Author: Holger Hans Peter Freyther <zecke@selfish.org>
Date:   2006-05-04 20:36:12 +0000

    bitbake/lib/bb/data_smart.py: Double OVERRIDE expansion fix
    
        INITSCRIPT_PARAMS_${PN}_slugos. We will expandKeys
        and end up with INITSCRIPT_PARAMS_busybox_slugos
        then (we have slugos in OVERRIDES) and we get
        INITSCRIPT_PARAMS_busybox. Now adding busybox to OVERRIDES
        and nothing changed. The reason is simple. The update_data
        code is using __getitem__ and __setitem__ to access
        the data object. This method does not pay the cookie
        monster. This is why we don't know that for the OVERRIDE
        busybox INITSCRIPT_PARAMS is available. We now pay the
        cookie monster and it looks better

4	11	lib/bb/data_smart.py

commit 8e95431593bf13c2e15ccb1406a1edfdf3e1a290
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2006-05-03 14:31:36 +0000

    bitbake/bin/bitbake:
            - Make the update_data for buildDepGraph act on a copy of self.configuration.data
              fixing certain dependency errors.

4	2	bin/bitbake

commit 93ed727d3900ac350daa47405000f650bd6cce65
Author: Holger Hans Peter Freyther <zecke@selfish.org>
Date:   2006-05-03 11:59:51 +0000

    bitbake/lib/bb/shell.py:
        -Make it work, mickeyl please remove old
            code ;)

1	1	lib/bb/shell.py

commit 13602f74210ef012e7c8d534b3ffabe7a402becd
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2006-04-29 10:25:13 +0000

    lib/bb/fetch/cvs.py:
    lib/bb/fetch/__init__.py:
    lib/bb/fetch/svn.py:
            - Move the DL_DIR check into try_mirror since every fetcher will do this.
              (git fetcher already assumes this check is made)

4	0	lib/bb/fetch/__init__.py
1	5	lib/bb/fetch/cvs.py
1	5	lib/bb/fetch/svn.py

commit 332b6ddd9efcebab3c40b5ead95ceac447f9b877
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2006-04-29 10:20:04 +0000

    fetch/__init__.py:
            - Allow multiple entries in tarball stash and iterate through them

3	3	lib/bb/fetch/__init__.py

commit e908294685fa16cb742c7fbb31e33008f9fe37f2
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2006-04-29 10:14:23 +0000

    bb/data_smart.py:
            - Doesn't need pickle anymore so don't import it

0	5	lib/bb/data_smart.py

commit 016d87b9035ddd1ff99ebf84ed67f3ec817c0608
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2006-04-29 10:13:18 +0000

    lib/bb/fetch/git.py:
            - git clone now makes a checkout by default. Disable this.

1	1	lib/bb/fetch/git.py

commit 83b652ff904ee0edd8cef15ad51e9853eeb6dee8
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2006-04-29 10:12:12 +0000

    lib/bb/cache.py:
            - Check the directory exists before chdir. Catches the parsing error
              instead of crashing bitbake.

2	1	lib/bb/cache.py

commit 481141291a4e6bc0cfb2d6cb22d3c8f0762be43e
Author: Holger Hans Peter Freyther <zecke@selfish.org>
Date:   2006-04-28 21:40:51 +0000

     bitbake/lib/bb/data_smart.py:
         Remove my broken COW version, use mithros COW module
         instead. Make it 'work' with the code
    
     bitbake/lib/bb/data.py:
         Update to use the iter protocol again and has_key

6	6	lib/bb/data.py
9	24	lib/bb/data_smart.py

commit 6d7d68d1c50d2d5abc09f00167310cd60fc58d8d
Author: Holger Hans Peter Freyther <zecke@selfish.org>
Date:   2006-04-28 21:07:16 +0000

     bitbake/lib/bb/parse/__init__.py:
         Bug 895. __depends is a single string with "filename@time" the
         string gets splitted by ' ' as it is assumed that
         "filename@time filename2@time2" is true. Basicly on PPC/Darwin
         we have "PowerPC Macintosh.conf" splitting by space leads to the
         error observed by koen.
         Resolution:
             As we use __depends only as a list, save it as a list. This
             avoids the int->str->int, and split, append, join operations.
    
    
     bitbake/lib/bb/cache.py:
         __depends is now a list, change the version of the cache and
         simplify the method.

8	11	lib/bb/cache.py
3	3	lib/bb/parse/__init__.py

commit cb6e46a7a2af3115d410b80bbf11c3a9de906503
Author: Marcin Juszkiewicz <marcin@juszkiewicz.com.pl>
Date:   2006-04-28 14:52:27 +0000

    bitbake.conf: force CVSROOT during cvs update

1	1	conf/bitbake.conf

commit 148263c72dd8a888bb5d2744798e7b49f14f9487
Author: Holger Hans Peter Freyther <zecke@selfish.org>
Date:   2006-04-25 12:39:12 +0000

    bitbake/lib/bb/parse/parse_c/bitbakec.pyx:
            -Add missing argument to the getVar
             call. (messing with mithros code)

5	5	lib/bb/parse/parse_c/bitbakec.pyx

commit 1764764007afec6143e0eec5394ef95c6e7d0be4
Author: Holger Hans Peter Freyther <zecke@selfish.org>
Date:   2006-04-25 12:06:29 +0000

    bitbake/lib/bb/cache.py:
        -Do not 'crash'/fail when cachedir is None.
         If it is none os.path.join would fail
        -Also check if we have a cache only once.
        -Potential Backport Candidate

11	4	lib/bb/cache.py

commit 629e9df5c7384c5470e37470b0bfe7657d61a8d3
Author: Tim Ansell <mithro@mithis.com>
Date:   2006-04-24 09:54:32 +0000

    Delete now works. Other cleanup and fixes.

198	45	lib/bb/COW.py

commit b0d769ce515d866eea92011741b8dd5423bd5360
Author: Tim Ansell <mithro@mithis.com>
Date:   2006-04-24 07:25:35 +0000

    Degrades to copy on mutable types - Cheap is the mutable types are already COW.

90	9	lib/bb/COW.py

commit d9a49650fa59bf11fb4abd7120b574aa03b3fc85
Author: Holger Hans Peter Freyther <zecke@selfish.org>
Date:   2006-04-22 11:27:28 +0000

    bitbake/bin/bitbake:
        This is a unstable BitBake version. Warn the
        users about it... or annoy them enough to switch
        to the stable branch.

5	0	bin/bitbake

commit 37838951f5cdfde6677c3d6085decbb3efaca6da
Author: Michael 'Mickey' Lauer <mickey@vanille-media.de>
Date:   2006-04-21 13:58:48 +0000

    shell: reparsing no longer checks whether it came from cache or not
    shell: use our private pastebin: oe.pastebin.com

7	6	lib/bb/shell.py

commit 6d430b21246b478d983d51cf047984b219e3efff
Author: Tim Ansell <mithro@mithis.com>
Date:   2006-04-21 13:49:05 +0000

    COW example...

71	0	lib/bb/COW.py

commit 31e7ded89431fdd967c5faf26290048273a3240c
Author: Holger Hans Peter Freyther <zecke@selfish.org>
Date:   2006-04-20 12:19:55 +0000

    bitbake/lib/bb/data_smart.py:
        -Avoid issues with the assignment. Make sure
         we assign special to special and seen to
         seen.

1	1	lib/bb/data_smart.py

commit c838622ba339686fd1cf19cb2803c03025b571bf
Author: Holger Hans Peter Freyther <zecke@selfish.org>
Date:   2006-04-20 09:11:15 +0000

    bitbake/lib/bb:
        Make the Cookie Monster Dict a METACLASS? To
        exploit automatically the COW features...
        Small performance analysis is showing that this
        is saving some time (and memory as well)

26	6	lib/bb/data.py
28	16	lib/bb/data_smart.py

commit 91215ed6a0b6ee2ded135e9611e96e829fda48a1
Author: Holger Hans Peter Freyther <zecke@selfish.org>
Date:   2006-04-19 19:30:16 +0000

    bitbake versions:
            -Make trunk 1.5.0 which will go to 1.6.0
            -The stable branch is now 1.4.1 which will
             be 1.4.2 on release

1	1	bin/bitbake
1	1	lib/bb/__init__.py

commit dac817896d2142da465c1998a1b1524284586565
Author: Holger Hans Peter Freyther <zecke@selfish.org>
Date:   2006-04-19 19:27:10 +0000

    bitbake/
        Merge -453 to HEAD into the trunk from the branch

1	1	ChangeLog
3	0	MANIFEST
1	1	bin/bitbake
1	1	lib/bb/__init__.py

commit 54cfb6711c0263040437defcc0ed38f56f20f41a
Author: Holger Hans Peter Freyther <zecke@selfish.org>
Date:   2006-04-17 20:08:00 +0000

    bin/bitbake:
        Add hack to register even handlers seen by the configuration
        file. We assume that we included at least one .inc file so
        INHERITS += got used.
        We should add a HANDLERS variable which will be responsible
        for installing the handlers

7	0	bin/bitbake

commit 493663782fc5cc6d882ee4c3ade504de9f2c3711
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2006-04-16 23:53:10 +0000

    bitbake/lib/bb/cache.py:
            * When clearing stale cache entries, clear depends_cache as well as
              the clean list.

7	11	lib/bb/cache.py

commit 6d7bf8a684406b3b23be74a8b127cdb2b399aec5
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2006-04-16 23:45:39 +0000

    bitbake/bin/bitbake:
            * Fix a loadDataFull call the last changeset missed
            * Only follow all dependencies when cmd == build
              (fixes the recursive cleaning bug)

4	2	bin/bitbake

commit 246f778013ced2807f9327697603ded29b7eefad
Author: Holger Hans Peter Freyther <zecke@selfish.org>
Date:   2006-04-16 22:41:39 +0000

    Revert r444 as it is giving errors with keys...

6	6	lib/bb/data.py
16	79	lib/bb/data_smart.py

commit eae1d47349f0527200f607d49f1ce5752ab90ed9
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2006-04-16 22:11:50 +0000

    bitbake/lib/bb/cache.py:
            * Add cache version handling to allow cache format changes in
              the future.

19	3	lib/bb/cache.py

commit 3122f2d579cc5443a12e50d0ca84bed8fed72811
Author: Holger Hans Peter Freyther <zecke@selfish.org>
Date:   2006-04-16 21:30:16 +0000

    bitbake/bin/bitbake:
        -Change version to 1.3.9 we will change it to 1.4.0 for the
         final release
    
    bitbake/lib/__init__.py:
        -Change the version as well

1	1	bin/bitbake
1	1	lib/bb/__init__.py

commit a4650e5706d6bdd534262693e0b9258efd867895
Author: Holger Hans Peter Freyther <zecke@selfish.org>
Date:   2006-04-16 21:11:16 +0000

    bitbake/lib/bb/data_smart.py:
        My first failed attempt to create something compatible
        with a Dictionary with COW/parenting features
    
        Use this new class for the Override Helpers
    
    bitbake/lib/bb/data.py:
        Update to the new data structure, it can't be treated
        as a dict, it is not a dict.
        We will use keys() (O(n)) and get

6	6	lib/bb/data.py
79	16	lib/bb/data_smart.py

commit efe9309e8dfd0df68ac1d554233b74e189a5d7cd
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2006-04-16 18:21:08 +0000

    bitbake/lib/bb/cache.py:
    bitbake/lib/bb/shell.py:
    bitbake/bin/bitbake:
            * Remove a useless return value from loadDataFull
    bitbake/ChangeLog:
            * Update the changelog with recent changes

3	0	ChangeLog
1	1	bin/bitbake
1	1	lib/bb/cache.py
1	1	lib/bb/shell.py

commit 4244b32348371f655632d97f0e347d730447d7ca
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2006-04-16 17:39:07 +0000

    bitbake/lib/bb/cache.py:
            * Detect and remove deleted files from the cache
            * Add/enable/fix cache debugging
    bitbake/bin/bitbake:
            * Cache rdepends and rrecommends against filenames as well as pn

17	12	bin/bitbake
13	4	lib/bb/cache.py

commit a89122ac10d9a5cbe9ea1988ebd604c176240a78
Author: Holger Hans Peter Freyther <zecke@selfish.org>
Date:   2006-04-16 16:56:15 +0000

    lib/bb/shell.py:
        -Make it work...

1	1	lib/bb/shell.py

commit d310ca69caef55c13663d037f17b43619dbc49bc
Author: Tim Ansell <mithro@mithis.com>
Date:   2006-04-16 06:07:15 +0000

    80% Complete C parser for bitbake.

46	40	lib/bb/parse/parse_c/BBHandler.py
36	0	lib/bb/parse/parse_c/Makefile
180	0	lib/bb/parse/parse_c/bitbakec.pyx
280	226	lib/bb/parse/parse_c/bitbakeparser.cc
24	22	lib/bb/parse/parse_c/bitbakeparser.h
14	0	lib/bb/parse/parse_c/bitbakeparser.y
935	860	lib/bb/parse/parse_c/bitbakescanner.cc
48	19	lib/bb/parse/parse_c/bitbakescanner.l
10	17	lib/bb/parse/parse_c/lexer.h
17	0	lib/bb/parse/parse_c/lexerc.h
6	1	lib/bb/parse/parse_c/python_output.h

commit b4b29732ea7e010334c3f26e3caa2ef23ccb0899
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2006-04-16 00:30:06 +0000

    bitbake/lib/bb/cache.py:
            Add cache documentation

72	4	lib/bb/cache.py

commit 40d07e863a1fb8a747f9efb1d483b5ac50ca449f
Author: Holger Hans Peter Freyther <zecke@selfish.org>
Date:   2006-04-15 23:18:07 +0000

    bitbake/lib/bb/data.py:
        -Remove the 'Proxies' for the pkgdata Cache
        -Remove the pkgdata() method as we now have
         a different caching strategy
        -Alter init_db to only take a parent and call
         createCopy directly
    
    bitbake/lib/bb/data_smart.py:
        -Remove the DataSmartPackage class as it is not
         needed
    
    
    bitbake/lib/bb/cache.py:
        -Call init_db with the only reasonable argument

1	1	lib/bb/cache.py
5	75	lib/bb/data.py
0	29	lib/bb/data_smart.py

commit 17ecb65b392e98860661502015759782b55028a7
Author: Holger Hans Peter Freyther <zecke@selfish.org>
Date:   2006-04-15 22:57:52 +0000

    lib/bb/data_smart.py:
        For now we are forced to deepcopy these two dictonaries. This is
        a first aid band aid to have something working.
        We will kill the DataSmartPackage class completely

8	3	lib/bb/data_smart.py

commit b03a424879367fd4118f60abda7f78bc5f27b957
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2006-04-15 22:52:28 +0000

    bitbake/lib/bb/data.py:
    bitbake/lib/bb/__init__.py:
    bitbake/lib/bb/data_smart.py:
    bitbake/lib/bb/cache.py:
    bitbake/lib/bb/shell.py:
    bitbake/bin/bitbake:
            * Major cache refactoring. Change the cache to store only the data bitbake needs
            for dependency calculations instead of all the metadata.
            * Separate the cache code into its own file.
            * Update the rest of the code to work with the cache changes.
            * Temporarily break the shell's poke command.

84	129	bin/bitbake
2	1	lib/bb/__init__.py
212	0	lib/bb/cache.py
0	3	lib/bb/data.py
2	67	lib/bb/data_smart.py
17	14	lib/bb/shell.py

commit 67e3bddeb1dc82ab58a856b9d763b21858b1c819
Author: Holger Hans Peter Freyther <zecke@selfish.org>
Date:   2006-04-15 21:24:01 +0000

    bitbake/lib/bb/data_smart.py:
        Partially undo r420. We do not need to shadow the
        variable, for our view we have set our version (an empty one)
        already

0	2	lib/bb/data_smart.py

commit f133b4045bfb1f5f86e5b86a319b926e4881ee5f
Author: Holger Hans Peter Freyther <zecke@selfish.org>
Date:   2006-04-14 22:48:14 +0000

     bitbake/lib/bb/methodpool.py:
         -Extract the names from the just compiled code
         -Iterate over each key (leaving out Keys and None)
         -And see if we have seen the name already.
         -If we have seen it, raise an error...

12	0	lib/bb/methodpool.py

commit 5fc9855dbda6dd6da1db04d13dc2c4383e6596da
Author: Holger Hans Peter Freyther <zecke@selfish.org>
Date:   2006-04-14 22:47:55 +0000

     bitbake/lib/bb/methodpool.py:
         -Document the usage of the three variables

5	0	lib/bb/methodpool.py

commit 52ba0c6e4863279ace3aa1d2ce75e0f254e915d6
Author: Holger Hans Peter Freyther <zecke@selfish.org>
Date:   2006-04-14 22:47:09 +0000

     bitbake/lib/bb/parse/parse_py/BBHandler.py:
         -Document the way we handle root

3	0	lib/bb/parse/parse_py/BBHandler.py

commit 898ea9241d2fb6e44fe4be7332d15beae6f6b318
Author: Holger Hans Peter Freyther <zecke@selfish.org>
Date:   2006-04-14 22:46:48 +0000

     bitbake/lib/bb/methodpool.bb:
         -Revert the last change. We have no method names available
          which makes tracking of replacing not possible...

0	5	lib/bb/methodpool.py

commit 5685ace397e90229a037aa8d7652a84f22155d46
Author: Holger Hans Peter Freyther <zecke@selfish.org>
Date:   2006-04-14 22:46:27 +0000

     bitbake/lib/bb/methodpool.py:
         -Add sanity check to the methodpool. If the same method
          is registered by two differen files then we will throw
          an error

5	0	lib/bb/methodpool.py

commit 01f734216b1f986ee82058df2832de99f6ffd1cb
Author: Holger Hans Peter Freyther <zecke@selfish.org>
Date:   2006-04-14 20:08:35 +0000

     bitbake/ChangeLog:
         Mention the cache breakage and the updated User Manual
         explaining the Options of the Fetchers

2	0	ChangeLog

commit 322a10bf9fb9c1d86445b373209087a1f9a71dfa
Author: Holger Hans Peter Freyther <zecke@selfish.org>
Date:   2006-04-14 20:08:06 +0000

     bitbake/AUTHORS:
         Add Richard and sort the file using the alphabet (if that is
         not the order you expect, then this is due using a different
         alphabet)

2	1	AUTHORS

commit d5d958744fff66cf5286022d78cbec1839fca2e2
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2006-04-14 18:22:20 +0000

    bitbake/lib/bb/fetch/git.py:
            Prune packed git objects to slightly decrease the git fetchers disk usage.

1	0	lib/bb/fetch/git.py

commit b303cfeeabd675ddf89b05cfbd5b3ec6dca18109
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2006-04-14 18:20:57 +0000

    bin/bitbake:
            Update output to more accurately describe what bitbake's doing
            when handling already staged packages.

3	3	bin/bitbake

commit 402f55a058425223160ef42d6ebb311a85a2b968
Author: Holger Hans Peter Freyther <zecke@selfish.org>
Date:   2006-03-30 18:14:56 +0000

    lib/bb/data_smart.py:
            -The pickling API is not too obvious. One can
             not call p.dump multiple times. Instead
             we store it as a tuple.
            -Same applies for unpickling.
            -Hmm current programming languages suck. It
             can't be true to use multiple assignment
             for something as easy as a 'symmetric'
             command.

2	6	lib/bb/data_smart.py

commit c8c16719c4eb2e1d5552da807def819bcdb24210
Author: Holger Hans Peter Freyther <zecke@selfish.org>
Date:   2006-03-29 21:04:42 +0000

    bitbke/lib/bb/data_smart.py:
        -createCopy is not called, instead
         a constructor is invoked. Copy the
         cookies here as well.
    
         Currently I only copy them from 'clean' as
         we should have them pickled already...

2	0	lib/bb/data_smart.py

commit 639d13506fa829082427427f299f3df7e9d193cb
Author: Holger Hans Peter Freyther <zecke@selfish.org>
Date:   2006-03-29 20:24:43 +0000

    bitbake/lib/bb/data_smart.py:
        Remember what we paid to the Cookie Monster.
        Make a copy of it. Currently we do no removal
        of these keys so I hope to get around the
        shallow copies as welbitbake/lib/bb/data_smart.py:
        Remember what we paid to the Cookie Monster.
        Make a copy of it. Currently we do no removal
        of these keys so I hope to get around the
        shallow copies as welll

2	0	lib/bb/data_smart.py

commit db1c998b31da06d7f3eb09fc6f59a1915b7b549e
Author: Holger Hans Peter Freyther <zecke@selfish.org>
Date:   2006-03-29 18:25:25 +0000

    bitbake/lib/bb/data.py:
        -Only have one expand method in the dict
         implementation.
        -Apply some magic knowledge by feeding the
         cookie master.
        -Speed up update_data by asking the Cookie
         Monster for help.
         We do not iterate over each key, but the
         keys we know that have the data we care
         about. This gives a huge speed improvement
         to parsing.
    
    bitbake/lib/bb/data_smart.py:
        -Make setVar more expensive by feeding the cookie
         monster

98	92	lib/bb/data.py
40	37	lib/bb/data_smart.py

commit b2d4f4baa1e41026b858db2338b276aef7c754e1
Author: Holger Hans Peter Freyther <zecke@selfish.org>
Date:   2006-03-23 23:32:03 +0000

    bitbake/lib/bb/cache:
            -Fix the method invocation in methodpool
             to use the right amount of arguments
            -Update data_smart to the new cache layout
             of the file functions

5	5	lib/bb/data_smart.py
1	1	lib/bb/methodpool.py

commit 8816a61bbec0e2349757ca80b274f65ed4669b9d
Author: Holger Hans Peter Freyther <zecke@selfish.org>
Date:   2006-03-23 23:11:02 +0000

    bitbake/method pool:
            Create a common implementation of the global
            method handling. It will be shared by the parsers
            and the cache.
            This commit breaks the cache again

1	0	MANIFEST
2	1	lib/bb/__init__.py
81	0	lib/bb/methodpool.py
10	12	lib/bb/parse/parse_py/BBHandler.py

commit e792c7bf1566ee509f50efb945e39df60a826cdd
Author: Holger Hans Peter Freyther <zecke@selfish.org>
Date:   2006-03-22 16:08:03 +0000

    lib/bb/event.py:
            -Add Registered and AlreadyRegistered
             as return values for register

7	1	lib/bb/event.py

commit 2658d3c95d43dfcff95a6cd7285f3966dfa5bb2e
Author: Holger Hans Peter Freyther <zecke@selfish.org>
Date:   2006-03-22 16:03:39 +0000

    lib/bb/data_smart.py:
            ReAdd the handlers when unpickling the file
    
    parse/parse_py/BBHandler.py:
            Save the once added handlers in the bitbake
            file.

9	0	lib/bb/data_smart.py
12	1	lib/bb/parse/parse_py/BBHandler.py

commit d278633c0bebe89ab2490856f57540fe263bb545
Author: Holger Hans Peter Freyther <zecke@selfish.org>
Date:   2006-03-22 13:48:02 +0000

    bin/bitbake:
        -Do not add handlers again. It is 'fast' enough
         to iterate over them in the BBHandler do not
         add them in bitbake again.
         This temporarily breaks the cache - which
         will be fixed shortly
    
    lib/bb/event.py:
        -Have a data structure that operates faster on
         lookups
        -Change register/remove to take a 'name' parameter
    
    lib/bb/parse/parse_py/BBHandler.py:
        -Update to the new event.register syntax

0	3	bin/bitbake
22	16	lib/bb/event.py
1	2	lib/bb/parse/parse_py/BBHandler.py

commit e745c0f774837f15e908aca66c175df800030aa7
Author: Holger Hans Peter Freyther <zecke@selfish.org>
Date:   2006-03-22 10:09:43 +0000

    parse/parse_py/BBHandler.py:
            Compile and Execute methods from .inc
            and .class files only once.
            I'm not sure about a performance win here
            at least it is not decreasing performance

26	9	lib/bb/parse/parse_py/BBHandler.py

commit af598e9c6d567cfdca7a17b0a6187fd7a622f6a4
Author: Holger Hans Peter Freyther <zecke@selfish.org>
Date:   2006-03-21 21:53:28 +0000

    bin/bitbake: Micro Optimisation
        Do not build the World Package List unless we want
        to build 'world'. This saves from 10 to 20 seconds
        on a usual build.
        I think people doing a world build can survice the
        extra seconds.

7	1	bin/bitbake

commit 1564778d579eddaa9deae78ed68153a0122f4391
Author: Holger Hans Peter Freyther <zecke@selfish.org>
Date:   2006-03-21 21:40:36 +0000

    parse/parse_c/BBHandler:
        Implement some bits of the C parser. We will
        do the easy things in python and then initialize
        the lexer/parser.

47	5	lib/bb/parse/parse_c/BBHandler.py

commit 92e0454966f2ed91e79c03f8abf1e81280ccbc75
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2006-03-20 18:16:55 +0000

    bin/bitbake:
            Fix RRECOMMENDS_${PN} and RPROVIDES_${PN} handling.

3	1	bin/bitbake

commit 2ed01ee5321d42db50dc9ad6b2b7043d2d4153ce
Author: Holger Hans Peter Freyther <zecke@selfish.org>
Date:   2006-03-20 00:26:22 +0000

    parse/parse_c:
        -python_output will be called from the parser. Once we have
         each method implemented we have a working C++ parser
        -Add BBHandler. It will parse .bbclass, .inc and .bb files
         for us and calls into c (if speed critical we might remove
         that fascade)
        -make scanner get FILE* and PyObject* as input
        -make parser call python_output with lex_t
        -bitbakescanner.cc,bitbakeparser.cc update generated code
    
        -Parsing flow:
        parse -> handle -> parse_c.BBHandler -> parse_c.C -> lex
        -> (lemon *-> python_output) ... return

65	0	lib/bb/parse/parse_c/BBHandler.py
28	0	lib/bb/parse/parse_c/__init__.py
90	89	lib/bb/parse/parse_c/bitbakeparser.cc
27	26	lib/bb/parse/parse_c/bitbakeparser.y
4	10	lib/bb/parse/parse_c/bitbakescanner.cc
4	10	lib/bb/parse/parse_c/bitbakescanner.l
15	3	lib/bb/parse/parse_c/lexer.h
51	0	lib/bb/parse/parse_c/python_output.h
4	5	lib/bb/parse/parse_c/token.h

commit a2a7d6a6cf38627a6005069a080845dcb11af831
Author: Holger Hans Peter Freyther <zecke@selfish.org>
Date:   2006-03-19 23:02:27 +0000

    bitbake/bin/bitbake:
        Create a ordinary main method. This makes invoking
        the hotshot profiling tool much more easy

6	2	bin/bitbake

commit 75dafa252a42b9f27f426f6e1e1a666db9b698d3
Author: Holger Hans Peter Freyther <zecke@selfish.org>
Date:   2006-03-19 19:57:58 +0000

    parse_c:
        Add require to the scanner

857	723	lib/bb/parse/parse_c/bitbakescanner.cc
6	1	lib/bb/parse/parse_c/bitbakescanner.l

commit 8f6a1e7805cf205aebdbec0ca51d9da7b9effde5
Author: Holger Hans Peter Freyther <zecke@selfish.org>
Date:   2006-03-19 19:42:45 +0000

    bitbake/lib/bb/parse/parse_c:
        -Update grammar to use require
        -Make code compile (almost)
        -Add the generated code to svn for portability
         reasons.

12	0	lib/bb/parse/parse_c/README.build
1104	0	lib/bb/parse/parse_c/bitbakeparser.cc
27	0	lib/bb/parse/parse_c/bitbakeparser.h
0	133	lib/bb/parse/parse_c/bitbakeparser.py
10	7	lib/bb/parse/parse_c/bitbakeparser.y
2998	0	lib/bb/parse/parse_c/bitbakescanner.cc
1	0	lib/bb/parse/parse_c/{bitbakeparser.l => bitbakescanner.l}
1	1	lib/bb/parse/parse_c/lexer.h
17	3	lib/bb/parse/parse_c/token.h

commit f0a0475b4f23bcabdb8fdceed237f6b9eba50bf9
Author: Holger Hans Peter Freyther <zecke@selfish.org>
Date:   2006-03-18 12:38:53 +0000

    bitbake/bin/bitdoc:
        Make it work with python2.3 and python2.4

1	1	bin/bitdoc

commit 34b8779c8fbaddc8903f8c8f3f208492fca6659f
Author: Holger Hans Peter Freyther <zecke@selfish.org>
Date:   2006-03-17 23:48:40 +0000

    bitbake/bin/bitdoc:
        -Use paragraphs instead of 'pre'. This enables line
         wrapping for too big comments

6	6	bin/bitdoc

commit a6cf366435511c684503ba19b3205382c88e5295
Author: Holger Hans Peter Freyther <zecke@selfish.org>
Date:   2006-03-17 23:38:17 +0000

    bitbake/bin/bitdoc:
        -Do not link to keys.html and groups.html, use the right
         site
        -Make it possible to have descriptions for groups as well

11	4	bin/bitdoc

commit 0e230f1beb02b3c24dfa854b45d43e298e2b1b16
Author: Holger Hans Peter Freyther <zecke@selfish.org>
Date:   2006-03-17 23:29:43 +0000

    bitbake/bitdoc:
        -Work on case insensitive filesystems where keys.html == keyS.html
        -Create all_groups.html and all_keys site
        -Sort the keys in a group
        -Emit the ',' only when needed

15	11	bin/bitdoc

commit e18c4858e5be51560cbba5d6f81a2d7c0ca5a3f7
Author: Holger Hans Peter Freyther <zecke@selfish.org>
Date:   2006-03-17 20:49:22 +0000

    bitbake/lib/bb:
        Bump the minor minor version again

1	1	lib/bb/__init__.py

commit 2a1e8b3e288dcebc44d13be2493f8fbf58159b5a
Author: Holger Hans Peter Freyther <zecke@selfish.org>
Date:   2006-03-17 09:47:14 +0000

    lib/bb/fetch.py:
            -svn_rsh was used, but the code was unreachable leading to
             runtime errors
            -now if the proto is svn+ssh, honor rsh parameter of the
             URL

4	0	lib/bb/fetch/svn.py

commit 069d1b9c2b1c56c022e89d7205a082009f529878
Author: Holger Hans Peter Freyther <zecke@selfish.org>
Date:   2006-03-16 23:53:37 +0000

    bitbake/bin/bitdoc:
        -We do not need make, we only need bb.parse

1	1	bin/bitdoc

commit e446f7468672de9ceabaf67eaa0b8fb5f26d2311
Author: Holger Hans Peter Freyther <zecke@selfish.org>
Date:   2006-03-16 23:46:56 +0000

    bitbake/doc/manual:
        Start documenting the available fetchers and their VARIABLES
        and Parameters

82	2	doc/manual/usermanual.xml

commit ca5d762cf9bc6fcc8e0ab47b976cde0f98786f27
Author: Holger Hans Peter Freyther <zecke@selfish.org>
Date:   2006-03-16 23:41:59 +0000

    bitbake/lib/bb/fetch/svn:
        Remove the CVS origin from the SVN fetcher. ext and pserver
        are not used by subversion.

0	14	lib/bb/fetch/svn.py

commit d17325cdaad9c3a4e0de1dbbbd546a5778839162
Author: Holger Hans Peter Freyther <zecke@selfish.org>
Date:   2006-03-13 22:58:51 +0000

    bitbake/lib/bb/event.py:
        Introduce a NoProvider Event. It contains
        a 'runtime' flag, the item name and the
        configuration data.
    
    bitbake/bin/bitbake:
        Fire the NoProvider event at some spots. There
        are more events we need to fire. Ideally the
        BitBake UI would just be a handler...

4	0	bin/bitbake
13	0	lib/bb/event.py

commit 42af6588791236c95c21053ac9d6c54281cf1952
Author: Holger Hans Peter Freyther <zecke@selfish.org>
Date:   2006-03-08 16:11:05 +0000

    lib/bb/utils.py:
            Do not report RuntimeErrors for SkipPackage and FuncFailed

2	2	lib/bb/utils.py

commit 4c5de91d3d9eab1181e93cb6497f3cb46ce92e9a
Author: Holger Hans Peter Freyther <zecke@selfish.org>
Date:   2006-03-08 13:13:28 +0000

    bitbake/lib/bb/utils.py:
            Kill the code duplication

18	18	lib/bb/utils.py

commit f48a54fc1eaddd135dcc235c241476493e34c516
Author: Holger Hans Peter Freyther <zecke@selfish.org>
Date:   2006-03-08 13:05:44 +0000

    lib/bb/utils.py:
         Do not go past the buffer
         (this looks like copy and paste)

2	2	lib/bb/utils.py

commit cffd991f8c01ac3840a0f7cd0653182ef55075de
Author: Holger Hans Peter Freyther <zecke@selfish.org>
Date:   2006-03-08 12:39:56 +0000

    bitbake/lib/bb/utils.py:
            Do not report Skipped Packages as runtime
            error

3	0	lib/bb/utils.py

commit 151e1ffec553df79b0e5441cb597c31eba4e2b31
Author: Holger Hans Peter Freyther <zecke@selfish.org>
Date:   2006-03-07 21:43:24 +0000

    lib/bb/utils.py:
        -Be less verbose

0	1	lib/bb/utils.py

commit bec09a6e13da5d6c71d5c113e463274f9fcf26be
Author: Holger Hans Peter Freyther <zecke@selfish.org>
Date:   2006-03-07 21:42:24 +0000

    bitbake/lib/bb/utils.py:
        -This not Thiis
        -Print the RuntimeError with context gosh
         that is looking awesome.
        -Now debugging errors in custom bbclasses,
         python methods should be much more easy

22	12	lib/bb/utils.py

commit 0f0d84599f32882abc81c6cfb2c78b515a87f892
Author: Holger Hans Peter Freyther <zecke@selfish.org>
Date:   2006-03-07 21:40:50 +0000

    bitbake/lib/bb/data_smart.py:
        Give a filename to the better compile method.
        (sorry)

1	1	lib/bb/data_smart.py

commit 170b111819a30df7c9e7d5423ef614ad121272dd
Author: Holger Hans Peter Freyther <zecke@selfish.org>
Date:   2006-03-07 20:21:51 +0000

    bitbake/lib/bb/utils.py:
        Create a work in progress version for
        better_execute. With advanced error reporting
        facilities.
    
    bitbake/lib/bb/build.py:
        Use better_execute
    
    bitbake/parse/parse_py/BBHandler.py:
        Use better_execute instead of exex

1	1	lib/bb/build.py
1	1	lib/bb/parse/parse_py/BBHandler.py
32	0	lib/bb/utils.py

commit 47c54dc6793f3ba77dfacc8a24dbb91da362cd64
Author: Holger Hans Peter Freyther <zecke@selfish.org>
Date:   2006-03-07 20:19:56 +0000

    bitbake/lib/bb/data_smart.py,event.py:
        Use bb.utils.better_compile instead of
        the simple compile for better error
        reporting

3	3	lib/bb/data_smart.py
4	3	lib/bb/event.py

commit 6a9052244e058ed5b3eef56bb2f65d1aca85c242
Author: Holger Hans Peter Freyther <zecke@selfish.org>
Date:   2006-03-05 17:09:52 +0000

    bitbake/bin/bitbake:
         Prepend the lib module instead of appending to
         override the system installation
    
    bitbake/lib/bb/data.py:
         Same as above, prepend instead of append

1	1	bin/bitbake
1	1	lib/bb/data.py

commit c40815faf4e83d77bd7febf93edec435892357be
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2006-03-01 23:06:59 +0000

    bitbake/lib/bb/fetch/git.py:
            Improvements to the git fetcher including using the src mirrors,
            updates to use modern git commands, making the code more efficent
            and remove some old debug.

1	0	ChangeLog
42	39	lib/bb/fetch/git.py

commit 4f807c93f8f72eb73b8600d1f73a3e26014a3167
Author: Holger Hans Peter Freyther <zecke@selfish.org>
Date:   2006-02-26 11:07:47 +0000

    bitbake/parser,build,utils:
        We compile strings into code. In case of erros the traceback
        is not useful at all. It doesn't print the function name,
        accurate line number etc.
        Introduce a better_compile method that excepts the Error
        and prints the surrounding lines of code.
        We make use of it on the parsing level and execution level
        of python methods.

4	3	lib/bb/build.py
2	2	lib/bb/parse/parse_py/BBHandler.py
23	0	lib/bb/utils.py

commit 7dc97df197bde5dde7fffad737f493b0cb94c576
Author: Holger Hans Peter Freyther <zecke@selfish.org>
Date:   2006-02-26 11:02:09 +0000

    bitbake/lib/bb/__init__.py:
        Remove the configuration reading class. We have
        two parsers already

0	32	lib/bb/__init__.py

commit f856d4e8a75c7c219f80cdf7a7d30a815427aedc
Author: Holger Hans Peter Freyther <zecke@selfish.org>
Date:   2006-02-26 11:01:25 +0000

    bitbake/lib/bb/event.py:
        Rename the removeCode and addCode to _removeCode and
        _addCode as they are private and internal.

5	5	lib/bb/event.py

commit f3980845a4ec19e7f3bcef08645709d8e57f85b0
Author: Holger Hans Peter Freyther <zecke@selfish.org>
Date:   2006-02-26 10:59:05 +0000

    bin/bitbake:
        Remove the whitespace... well I have seen it and
        removed it.

0	1	bin/bitbake

commit b7b93dc29477b20bba85c7a491b080bd49a926d9
Author: Holger Hans Peter Freyther <zecke@selfish.org>
Date:   2006-02-26 09:37:26 +0000

    lib/bb/data.py:
        Document the weird semantic of the setVarFlags. It behaves
        more like an addVarFlags call. Existing variables are not
        going to be removed.

5	0	lib/bb/data.py

commit d204565499c53b3919934d78a7695107de2d6a57
Author: Holger Hans Peter Freyther <zecke@selfish.org>
Date:   2006-02-25 15:46:31 +0000

    lib/bb/event.py:
        The Data Module is not a simple dict anymore. So use
        the bb.data.init() method to create a default data
        storage.

1	1	lib/bb/event.py

commit f1bcfdab022094d6dd49fbb4a22aeacbe58d12b5
Author: Holger Hans Peter Freyther <zecke@selfish.org>
Date:   2006-02-24 00:38:22 +0000

    bitbake/lib/event.bb:
            -make multiple providers inherit
             Event directly. Save the kind (runtime vs. buildtime)
             the item and the providers
    
    bin/bitbake:
            -Fire multiple providers issue as Event

3	0	bin/bitbake
24	1	lib/bb/event.py

commit d8073f1bfe1f259579b7b7400e5ae782187d3253
Author: Holger Hans Peter Freyther <zecke@selfish.org>
Date:   2006-02-24 00:11:25 +0000

    lib/bb/__init__.py:
        bump the version

1	1	lib/bb/__init__.py

commit 90b9b825916d8bfe6ba3037001707a9e8f56436c
Author: Holger Hans Peter Freyther <zecke@selfish.org>
Date:   2006-02-23 23:56:31 +0000

    lib/bb/event.py:
        Safe the number of failed packages even if the BuildCompleted
    
    bin/bitbake:
        count the number of broken packages

3	1	bin/bitbake
8	1	lib/bb/event.py

commit c31a81b1c376eb872f964a45790cde4843821390
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2006-02-21 20:22:00 +0000

    bitbake/bin/bitbake:
        - ASSUME_PROVIDED allowed to include runtime names

1	0	ChangeLog
3	1	bin/bitbake

commit 2f8ce29c8e0119487014cc109e4734f67bfe9a49
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2006-02-21 00:19:21 +0000

    bitbake/lib/bb/fetch/:
        - Remove useless bitkeeper fetcher

0	2	lib/bb/fetch/__init__.py
0	40	lib/bb/fetch/bk.py

commit dd4344ef656025fcc5d0ab88934940ac6105da99
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2006-02-21 00:16:11 +0000

    bitbake/lib/bb/utils.py:
        - Fix a RDEPENDS parsing bug in utils:explode_deps()
          (versions containing spaces didn't parse correctly)
    
    bitbake/lib/bb/fetch/git.py:
        - Update git fetcher behaviour to match git changes

5	0	ChangeLog
1	1	lib/bb/__init__.py
2	3	lib/bb/fetch/git.py
3	3	lib/bb/utils.py

commit 5fd71d34683315a35b5265242e1aea3c94de33fe
Author: Holger Hans Peter Freyther <zecke@selfish.org>
Date:   2006-02-17 19:54:17 +0000

    bitbake/MANIFEST:
        Install the svk.py file as well - even if it is
        work in progress.

1	0	MANIFEST

commit 2b133e03aef12fb65e589db65be84e48a916770e
Author: Holger Hans Peter Freyther <zecke@selfish.org>
Date:   2006-02-17 00:46:14 +0000

    bitbake/lib/bb/fetch/svk:
        -Hack a bit more on svk. It should now be able to do
         svk co's.
        -How to do 'depots' from a URI point of view still
         needs to be considered.
         Currently svk:/depot/;module=foo;rev=321 should work

15	41	lib/bb/fetch/svk.py

commit c39660395c385163f428cf26b8e4b8dc16431a79
Author: Holger Hans Peter Freyther <zecke@selfish.org>
Date:   2006-02-17 00:34:42 +0000

    bitbake/lib/bb/__init__:
        Add a try_mirror method responsible of trying the
        SRC_TARBALL_STASH to get the source from
    
    bitbake/lib/bb/{csv,git,svn}:
        Use this new try_mirror method to get the
        TARBALL_STASH method
    
    bitbake/lib/bb/svk:
        Add a skeleton (copy of svn) svk fetcher

28	1	lib/bb/fetch/__init__.py
3	15	lib/bb/fetch/cvs.py
3	16	lib/bb/fetch/git.py
181	0	lib/bb/fetch/svk.py
3	10	lib/bb/fetch/svn.py

commit 703c243ea7e1a92e88e546fff5332c31db524d0e
Author: Holger Hans Peter Freyther <zecke@selfish.org>
Date:   2006-02-16 23:34:01 +0000

    bitbake/doc/manual/usermanual.xml:
        As pointed out by a monkey on irc we have a copy
        and paste error in the example for the =. and .=
        operator.
        Hopefully this fixes this issue

2	2	doc/manual/usermanual.xml

commit 54ac824c7d84cf46581a5f6107377d40eb60b093
Author: Richard Purdie <rpurdie@linux.intel.com>
Date:   2006-02-15 12:59:47 +0000

    bitbake/bin/bitbake:
        Need to check both RDEPENDS and RDEPENDS_${PN} for RDEPENDS

2	1	bin/bitbake

commit 9a5ea24c80eca9592e0ad32cfdaf173e1815cb5e
Author: Holger Hans Peter Freyther <zecke@selfish.org>
Date:   2006-02-13 22:27:11 +0000

    bitbale/lib/bb/fetch/cvs.py:
        -Error out if the requested module does not exist
         with the specified SRCDATE.
    
        This happened with:
        /usr/bin/env cvs -d:pserver:anonymous@thinktux.net:/root co -D 20050926 e17/libs/evas/m4

1	1	lib/bb/fetch/cvs.py

commit 349e85c15a3287c60e3f4a29b29c1a54220314ae
Author: Holger Hans Peter Freyther <zecke@selfish.org>
Date:   2006-02-11 14:32:16 +0000

    bitbake/lib/bb:
        Bump the version to end up with 1.3.4.0

1	1	lib/bb/__init__.py

commit 512239ffde1a5076266b6f21c0ce06dd9421d47f
Author: Holger Hans Peter Freyther <zecke@selfish.org>
Date:   2006-02-11 14:31:35 +0000

    bitbake/bin/bitbake:
        Bump the version and hopefull we will end up as 1.3.4

1	1	bin/bitbake

commit 6791d5beb9aa46054bbf0a4a34f802be10eef9bd
Author: Holger Hans Peter Freyther <zecke@selfish.org>
Date:   2006-02-09 23:00:15 +0000

    bitbake/lib/bb:
        Use 1.3.3.0 instead - I felt like that..

1	1	lib/bb/__init__.py

commit 7e413d5b5fbd7e78344112b4ddfa75990412b1ed
Author: Holger Hans Peter Freyther <zecke@selfish.org>
Date:   2006-02-09 22:58:08 +0000

    bitbake/bin/bitbake:
        Bump the version to 1.3.3
    
    lib/bb/__init__.py:
        Bump the version to 1.3.2.2

1	1	bin/bitbake
1	1	lib/bb/__init__.py

commit 415e805220edd5745e4873f77f8d05a95049bcd9
Author: Holger Hans Peter Freyther <zecke@selfish.org>
Date:   2006-02-09 22:55:55 +0000

    bitbake/ChangeLog:
        Add the recent changes to the ChangeLog including
    
        -ph5's STAMP fix
        -Richard's RDEPENDS reverse tracking

12	6	ChangeLog

commit 7b1144214c00a01e1008752d7416043b3f863894
Author: Holger Hans Peter Freyther <zecke@selfish.org>
Date:   2006-02-09 22:48:24 +0000

    bitbake/bin/bitbake:
        Stop hardcoding the stamps directory directly but
        use the STAMP variable instead. The Package Version, Name
        and Release is already included in the STAMP variable.
    
        This patch was created by Phillip Zabel (pH5). Thank you

1	2	bin/bitbake

commit 6845f7c2009253d9aa06210433c94e91361d56be
Author: Holger Hans Peter Freyther <zecke@selfish.org>
Date:   2006-01-31 22:23:35 +0000

    bitbake/bin/bitbake:
        It could be that we have no buildable providers and
        eligible is None. Do not error in this case.
    
        This was spotted by mickeyl on a world build (with a
        lot of failures) and fixed by Richard Purdie again.

6	1	bin/bitbake

commit 234c29e0b72be4f3eec1a3a3f5a75f3d39540fbb
Author: Holger Hans Peter Freyther <zecke@selfish.org>
Date:   2006-01-23 22:12:09 +0000

    bitbake/lib/bb/parse/parse_py/ConfHandler.py:
        if we included the required file without an error
        we parsed that line and may return.
    
        This oversight was spotted by Richard Purdie. Thanks
        again.

1	0	lib/bb/parse/parse_py/ConfHandler.py

commit c33962d98ecb382a46189850598ce05f935085fc
Author: Holger Hans Peter Freyther <zecke@selfish.org>
Date:   2006-01-19 20:11:08 +0000

    bitbake/bin/bitbake:
        Patch by Richard Purdie to fix the selection of
        a preferred R provider

20	9	bin/bitbake

commit 000961421c2db3f08e2ee82f5cbdff8a747fac0d
Author: Holger Hans Peter Freyther <zecke@selfish.org>
Date:   2006-01-19 12:31:48 +0000

    bitbake/bin/bitbake:
            Patch by Richard Purdie to fix the recognition
            of circular dependencies.

19	12	bin/bitbake

commit 02a43ca809811ef6762c3db6a0b1f53b95d03966
Author: Holger Hans Peter Freyther <zecke@selfish.org>
Date:   2006-01-12 22:57:25 +0000

    bitbake/lib/bb/utils.py:
        -add explode_deps method to return
         a list of package names from a string (RDEPENDS)
    
        Patch courtsey Richard Purdie (rpurdie@openedhand.com)
    
    bitbake/bin/bitbake:
        -major overhaul on dependency tracking and improvement
         to the previous commit.
         Build Runtime Depends and Runtime Recommendations at the
         same time as the package is built.
    
        Patch courtsey Richard Purdie (rpurdie@openedhand.com)

174	57	bin/bitbake
24	0	lib/bb/utils.py

commit 7433c508fe6b772cea492826210a48774d11c68d
Author: Holger Hans Peter Freyther <zecke@selfish.org>
Date:   2006-01-12 14:46:19 +0000

    bitbake/lib/bb/shell.py:
        -Patch by ph5 to call the build method with the right
         amount of parameters.

1	1	lib/bb/shell.py

commit a5af872e89bab2acd13a3d6da45d1cfec4c5fbd2
Author: Holger Hans Peter Freyther <zecke@selfish.org>
Date:   2006-01-08 11:00:32 +0000

    bitbake/lib/bb/fetch/wget.py:
        -Do not error out if there is no md5sum key in
         the parameter map

4	1	lib/bb/fetch/wget.py

commit 0b8a6e19e37ec88875f951587c4021924cd758f9
Author: Holger Hans Peter Freyther <zecke@selfish.org>
Date:   2006-01-08 10:27:08 +0000

    bitbake/bin/bitbake:
        Build a reverse hash for PACKAGES, so runtimes dependencies
        can be resolved.
    
        E.g. which bb file is needed to get glibc-locale-de build.
    
        Patch by Richard Prudie of zaurus kernel and openedhand.com
        fame. Thanks!

58	10	bin/bitbake

commit f0d6e914a46879bda7ba960b602743c9f6f92331
Author: Holger Hans Peter Freyther <zecke@selfish.org>
Date:   2006-01-07 17:42:23 +0000

    bitbake/lib/bb/fetch:
        -Make the wget fetcher use md5sum parameter associated
         with a URL.
        -In a bitbake file for use with OpenEmbedded
         SRC_URI="http://www.froglogic.de;md5sum=ABCDEF" will now
         work.

6	6	lib/bb/fetch/wget.py

commit 34d1994b9bc47b22e219e93a3e1e27fc2cba41a6
Author: Holger Hans Peter Freyther <zecke@selfish.org>
Date:   2006-01-05 20:26:12 +0000

    bitbake/doc/manual:
        -Mention the new require keyword

6	0	doc/manual/usermanual.xml

commit c0b889a477758d2749788b868b27a362b17aa8c9
Author: Holger Hans Peter Freyther <zecke@selfish.org>
Date:   2006-01-05 20:16:28 +0000

    bitbake/:
        Update the ChangeLog to specially mention the
        contributions done by openedhand.com employees
        and the bugfixes they have done.

13	0	ChangeLog

commit c4e44beed02739556f01a7a1c26b0657d3e699b6
Author: Holger Hans Peter Freyther <zecke@selfish.org>
Date:   2006-01-05 20:14:21 +0000

    bitbake/lib/bb/fetch:
        Add a getSRCDate static method to the Fetcher Baseclass
        to extract the SRCDATE with fallbacks to CVSDATE and DATE
    
        Switch over users of CVSDATE to this new method.

9	0	lib/bb/fetch/__init__.py
2	2	lib/bb/fetch/cvs.py
2	2	lib/bb/fetch/svn.py

commit dcf8e5e245911ea22931904ebc76379cd0fa9d5f
Author: Holger Hans Peter Freyther <zecke@selfish.org>
Date:   2006-01-05 19:54:04 +0000

    bitbake/lib/bb/parse:
        -Implement the 'require' keyword in bitbake. The semantic
         inherits the semantic of include.
         It only differs in the way missing files are handled.
         Require will raise a ParseError when a 'required' file
         could not be found.
    
         -We add a new keyword and scan for it
         -We change the include method to carry an additional parameter

14	2	lib/bb/parse/parse_py/ConfHandler.py

commit a89d98cb9eae153302e820c7025d2d986998d32d
Author: Holger Hans Peter Freyther <zecke@selfish.org>
Date:   2005-12-29 15:44:23 +0000

    bitbake/lib/bb/fetch/svn.py:
        Apply patch courtsey Richard for #554 to include
        the path in the filename of the tar.gz snapshot

2	2	lib/bb/fetch/svn.py

commit 2dd616542d773a4d2b32065f81836b7ae2a53b3f
Author: Holger Hans Peter Freyther <zecke@selfish.org>
Date:   2005-12-29 15:39:24 +0000

    bitbake/lib/bb/fetch/svn.py:
        Apply patch courtsey Chris at openhand.com to make
        the svn fetcher honor the CVSDATE/DATE when
        fetching source.

1	1	lib/bb/fetch/svn.py

commit 9049457a51b8402c3e514be1afc4a163e09b22a0
Author: Holger Hans Peter Freyther <zecke@selfish.org>
Date:   2005-12-18 15:00:07 +0000

    bitbake/bb/fetch:
        Patch courtsey RP for #438. Move the fetchers
        into a separate module to ease the writing of
        new fetchers and to separate the individual
        implementations.
    
    bitbake/MANIFEST:
        added the new files
    
    bitbake/setup.py:
        added the fetch module

4	0	ChangeLog
7	1	MANIFEST
0	667	lib/bb/fetch.py
166	0	lib/bb/fetch/__init__.py
40	0	lib/bb/fetch/bk.py
214	0	lib/bb/fetch/cvs.py
165	0	lib/bb/fetch/git.py
61	0	lib/bb/fetch/local.py
189	0	lib/bb/fetch/svn.py
164	0	lib/bb/fetch/wget.py
1	1	setup.py

commit c89c6131044d120dd783e8bf264d7aa091a4f829
Author: Holger Hans Peter Freyther <zecke@selfish.org>
Date:   2005-12-15 20:18:11 +0000

    bin/bitbake:
        patch by pHilipp Zabel on #531. The variable
        was initialisied with one name and used with other
        names.
        I don't know if this lead to any exceptions but
        it is better this way.

1	1	bin/bitbake

commit f8c3971ef43dbf0f774852bec673d60e2923d967
Author: Holger Hans Peter Freyther <zecke@selfish.org>
Date:   2005-11-03 21:54:43 +0000

    bitbake/bin/bitbake
    
    Patch for #436 to fix
    
    CVSDATE = "xxx"
    CVSDATE_somepackage = "yyy"
    PREFERRED_VERSION_somepackage = "zzz-${CVSDATE}"
    
    results in "zzz-xxx", not the expected and preferred "zzz-yyy".
    
    This is due to PN not being in OVERRIDES at this stage of bitbake operation.
    
    
    
    applied RP's patch from http://bugs.openembedded.org/attachment.cgi?id=365&action=view
    
    
    thanks RP

7	1	bin/bitbake

commit f4aa4d1f2442e226ec4cdf23f2bf322c6fb4128c
Author: Holger Hans Peter Freyther <zecke@selfish.org>
Date:   2005-10-24 13:26:14 +0000

    BitBake MD5 SUM:
        -Attempt at verifying the MD5 SUM after the fetch and fail
         if the one specified does not match the one calculated.
        -Simplify the code writing the md5sum

20	9	lib/bb/fetch.py

commit c8cea831e627ca7398fba4276649097b2d18812b
Author: Holger Hans Peter Freyther <zecke@selfish.org>
Date:   2005-10-21 20:29:15 +0000

    BitBake Configuration Parser:
        -say what file could not be opened instead of simply saying
         file not found.

1	1	lib/bb/parse/parse_py/ConfHandler.py

commit 6a5f647e83145ab6d470469974c618511b458827
Author: Michael 'Mickey' Lauer <mickey@vanille-media.de>
Date:   2005-09-08 13:11:53 +0000

    parser: add function to update the mtime for one file, courtesy Justin Patrin
    parser: move import bb and import os out of the commands (import in a function that's called often has a performance penalty)
    lib: increase revision
    shell: add 'reparse' and 'fileReparse' commands, courtesy Justin Patrin

1	1	lib/bb/__init__.py
6	3	lib/bb/parse/__init__.py
30	1	lib/bb/shell.py

commit 3d7348c9eb7deebecce594f005f0019f9139e51c
Author: Holger Hans Peter Freyther <zecke@selfish.org>
Date:   2005-08-09 22:11:45 +0000

    bitbake/lib/bb/parse/parse_py/BBHandler.py:
            -Patch by pHilipp Zabel to allow dots
    in the function names. This fixes bug #139. It seems right
    to have dots in the packagename

1	1	lib/bb/parse/parse_py/BBHandler.py

commit 0e3b6ccc0b70f4d5eaf944cec5a790389d368fd2
Author: Holger Hans Peter Freyther <zecke@selfish.org>
Date:   2005-08-04 14:25:17 +0000

    bitbake/lib/bb/data_smart.py:
        -Do not write the global configuration file into each cached file.
         On unpickling reattach a current configuration file.
         This is based on the work of proti
         http://www.frankengul.org/~seb/cow/cow8a.patch and was adopted to
         the current data_smart instance.
    
         CVSDATE, BUILDSTART and similiar should be always current again

27	4	lib/bb/data_smart.py

commit 7064d4ac1d6842b2af522482a413ce0c08e1384a
Author: Holger Hans Peter Freyther <zecke@selfish.org>
Date:   2005-08-04 13:42:27 +0000

    bitbake/lib/bb/data.py:
        -Pass the configuration to the persistent data instance

1	1	lib/bb/data.py

commit 471564bc7111bc5488f77180d401347787df6f8a
Author: Holger Hans Peter Freyther <zecke@selfish.org>
Date:   2005-08-04 13:26:27 +0000

    bitbake/bin/bitbake:
        -Pass a configuration instance to pkgdata
    
    bitbake/lib/bb/data.py:
        -take an optional configuration for pkgdata
         to prepare merging the '[pickle,unpickle]_prep'
         protis older cow work.

1	1	bin/bitbake
4	3	lib/bb/data.py

commit b6f4c2ec5d50bb9c336e8c5343075381a9263219
Author: Holger Hans Peter Freyther <zecke@selfish.org>
Date:   2005-07-30 19:41:42 +0000

    bitbake/bin/bitbake:
        -use gmtime instead of localtime for the BUILDSTART variable

1	1	bin/bitbake

commit 2a10135df1c7c3721783c5fefeb9fe51c0c5fa91
Author: Holger Hans Peter Freyther <zecke@selfish.org>
Date:   2005-07-30 12:27:17 +0000

    Update the lib version to 1.3.2 as well

1	1	lib/bb/__init__.py

commit 2a659dda9bdb03cff38abc657f4e32e6e477cb89
Author: Holger Hans Peter Freyther <zecke@selfish.org>
Date:   2005-07-30 12:21:23 +0000

    bitbake/ChangeLog:
        -Update the ChangeLog in preparation of the bitbake 1.3.2 release

4	0	ChangeLog

commit 829552add935154f4ccdf15e1330540d0e7e232e
Author: Holger Hans Peter Freyther <zecke@selfish.org>
Date:   2005-07-30 12:20:27 +0000

    bitbake/doc/manual/usermanual.xml:
        -Update the result of bitbake --help
        -Add note of the removal of bbread and its replacement with bitbake -e

18	7	doc/manual/usermanual.xml

commit 783e917c87d84130bb6a6f6f48a87627431a53cd
Author: Holger Hans Peter Freyther <zecke@selfish.org>
Date:   2005-07-30 12:11:01 +0000

    bitbake/manual/usermanual.xml:
        -Provide an example for writing an event handler

14	2	doc/manual/usermanual.xml

commit 7095687aac08786821953c418970991fb35c41b4
Author: Holger Hans Peter Freyther <zecke@selfish.org>
Date:   2005-07-30 11:52:20 +0000

    bitbake/manual/usermanual.xml:
        -Update 1 to True to catch up with python 2.2 ;)

1	1	doc/manual/usermanual.xml

commit a988b9dce2a9677968c10f4402a9cb1dcdc5882b
Author: Holger Hans Peter Freyther <zecke@selfish.org>
Date:   2005-07-30 11:46:54 +0000

    bitbake/manual/usermanual.xml:
        -Add Documentation for the .= and =. operators we introduce
         with Bitbake 1.3.2.

9	0	doc/manual/usermanual.xml

commit 31c1e744eabbb0dd3967c0fc701f0e780c91d35c
Author: Holger Hans Peter Freyther <zecke@selfish.org>
Date:   2005-07-30 11:26:24 +0000

    bitbake/bin/bitdoc:
        -Sort the groups (I had not expected to still see this on my disk)

1	0	bin/bitdoc

commit 1ec240df4182d23ec6c0e142dd84aa50a71cd06c
Author: Phil Blundell <philb@gnu.org>
Date:   2005-07-27 22:58:35 +0000

    add .= and =. operators, as requested by Holger

5	1	lib/bb/parse/parse_py/ConfHandler.py

commit 5cb7569c4848235db23c073200682d70aa7fc722
Author: Holger Hans Peter Freyther <zecke@selfish.org>
Date:   2005-07-26 13:45:10 +0000

    bitbake/bin/bitbake:
            -Inject a BUILDSTART variable into each parsed file

3	1	bin/bitbake

commit fb071a9b8e971f3050d1d129df24ecc35d7c5cd5
Author: Holger Hans Peter Freyther <zecke@selfish.org>
Date:   2005-07-21 22:40:39 +0000

    bitbake/lib/bb/fetch.py:
         -Prepare the Wget fetcher to soon check the MD5SUMs in many
          different ways.

14	4	lib/bb/fetch.py

commit c9eeec9c91e4f0bb3410d3544e89a0fa741d273e
Author: Holger Hans Peter Freyther <zecke@selfish.org>
Date:   2005-07-21 22:20:44 +0000

    bitbake/lib/bb/fetch.py:
         -Remove decodeurl comment/testcase. We will readd to the right
         place to be a proper testcase.

0	3	lib/bb/fetch.py

commit e870cc5a7711a956fbdef41c112345429f2a9c48
Author: Holger Hans Peter Freyther <zecke@selfish.org>
Date:   2005-07-21 22:19:43 +0000

    bitbake/lib/bb/fetch.py:
         -Create a MD5SumException. We will throw it when the sums do
         not match.

3	0	lib/bb/fetch.py

commit 10668e5c62e0d46d8ecf341b8d850fa3099d36e4
Author: Holger Hans Peter Freyther <zecke@selfish.org>
Date:   2005-07-21 22:16:34 +0000

    bitbake/parse/parse_py/ConfHandler.py
         -ParseError was unknown to ConfHandler since the moving
          of the directories. Import ParseError into ConfHandler

1	0	lib/bb/parse/parse_py/ConfHandler.py

commit 28e1782b51ecf751d42388b196d7cdec068aa290
Author: Michael 'Mickey' Lauer <mickey@vanille-media.de>
Date:   2005-07-19 10:26:06 +0000

    update configuration data before entering the shell. patch courtesy Proti - thanks.

1	0	bin/bitbake

commit d3763859a04b5f1d7ecf50b164fb72f6750ccf7f
Author: Holger Hans Peter Freyther <zecke@selfish.org>
Date:   2005-07-12 13:28:47 +0000

    bitbake/setup.py:
        -Unmess the result of parser reorginisation even more. Introduce
        parse_py to distutils.

1	1	setup.py

commit 19257c3a8b3a7c8690b9ecf6c53b3c8c0619f81b
Author: Holger Hans Peter Freyther <zecke@selfish.org>
Date:   2005-07-11 16:24:44 +0000

    Sorry for the inconvience and add the missing file
    
    I wonder what would happen if I only commit after getting
    enough donations for a file...
    
    Currently it defaults to the python implementation

70	0	lib/bb/parse/__init__.py

commit 3e179a3126ba139c95cb65731f4cde0cf7560e4a
Author: Holger Hans Peter Freyther <zecke@selfish.org>
Date:   2005-07-10 21:59:23 +0000

    Getting closer...

2	5	lib/bb/parse/parse_c/bitbakeparser.l
6	1	lib/bb/parse/parse_c/bitbakeparser.py
1	1	lib/bb/parse/parse_c/bitbakeparser.y
1	0	lib/bb/parse/parse_c/lexer.h

commit e70e93a9915264742f4adf5c9e5d3b1b903b5009
Author: Holger Hans Peter Freyther <zecke@selfish.org>
Date:   2005-07-10 21:20:50 +0000

    More things done on the Bitbake C parser:
        -Implement token_t and switch the grammar actions
         to the new class
        -Start with the lex_t as well
        -Start with implementing the high level python
         side.

37	59	lib/bb/parse/parse_c/bitbakeparser.l
128	0	lib/bb/parse/parse_c/bitbakeparser.py
52	59	lib/bb/parse/parse_c/bitbakeparser.y
40	0	lib/bb/parse/parse_c/lexer.h
83	0	lib/bb/parse/parse_c/token.h

commit f2ff6edbddbc8be602e2513c90f4048c20e40705
Author: Holger Hans Peter Freyther <zecke@selfish.org>
Date:   2005-07-10 18:29:35 +0000

    Start with the excellent lexer and lemon Grammar from
    Marc Singer and turn it into a C module (after pybison
    was a total failure).
    
    Lexer Changes:
        Do not allow unquoted R_VALUE
    
    Grammar Changes:
        FILES_${PN} () {
        }
        T_VARIABLE is a legal start of a procedure

313	0	lib/bb/parse/parse_c/bitbakeparser.l
168	0	lib/bb/parse/parse_c/bitbakeparser.y

commit 67afbf5e1de58ee9584ccb55eca941762ccf8a0c
Author: Holger Hans Peter Freyther <zecke@selfish.org>
Date:   2005-07-10 18:03:23 +0000

    Prepare for the new tokenizer C-based parser as optional parser.
    For now import bb.parse will function the way it used to work

3	2	MANIFEST
0	76	lib/bb/parse/__init__.py
1	1	lib/bb/parse/{ => parse_py}/BBHandler.py
0	0	lib/bb/parse/{ => parse_py}/ConfHandler.py
32	0	lib/bb/parse/parse_py/__init__.py

commit 0ad43bae7e83199de7d848662986ac14ad95fd1f
Author: Holger Hans Peter Freyther <zecke@selfish.org>
Date:   2005-07-10 16:24:30 +0000

    trunk/bitbake/bin/bitbake:
        -Fix findBestProvider to work with BB collections (hopefully)
        without adding new regressions.
        This fixes bug #137 the patch is courtsey Seb (proti)

11	9	bin/bitbake

commit 2acea6dacf7911f7f7d96bbf4ab50ff6e9f56796
Author: Holger Hans Peter Freyther <zecke@selfish.org>
Date:   2005-07-08 21:29:22 +0000

    bitbake/bin/bitdoc:
        -Fix whitespaces
        -Sort the keynames in the key overview
        -Sort the related groups and keys alphabetical as well
        -Fix the URL from the Group description to the contained
         keys s/group/key/

37	19	bin/bitdoc

commit 88f19217cb650c6b89cd098adf5b5b0889915efb
Author: Michael 'Mickey' Lauer <mickey@vanille-media.de>
Date:   2005-07-07 10:23:59 +0000

    Shell:
    - remove '...' in output for "SHELL: Building <a number of providees>"
    - don't continue if building a number of providees and one fails

10	6	lib/bb/shell.py

commit c2cb41dc49aee4d6905519ec74c34e957a633b8d
Author: Michael 'Mickey' Lauer <mickey@vanille-media.de>
Date:   2005-07-06 19:25:34 +0000

    Shell:
    - experimental support for glob expression (wildcards) in command 'build'
    - add new command 'match <providers|files> <globexpr>' to see what matches against the expression

34	18	lib/bb/shell.py

commit 847ab802c90400d4fcde5e6b9d8c8eda0c29d01b
Author: Michael 'Mickey' Lauer <mickey@vanille-media.de>
Date:   2005-07-06 18:24:16 +0000

    Shell:
    - use shlex to parse command lines as a special service to hrw: Now you can say 'setvar FOO "this is a test"' :)
    - use a command queue in the main loop to unify offline (from startup file) and online processing
    - add some changes for 1.3.2. Could anyone fill in changes for 1.3.1 ?

13	8	ChangeLog
14	26	lib/bb/shell.py

commit cbaf5f4bdfdd3b686418d707215d5046c2d618e5
Author: Holger Hans Peter Freyther <zecke@selfish.org>
Date:   2005-07-06 17:34:56 +0000

    bitbake/
        Update MANIFEST and setup.py to cope with the removal
        of make.py and bbread and add utils.py to the MANIFEST

1	2	MANIFEST
0	1	setup.py

commit b8046ac57a466d24fca1f8a998ab82e195e4dbfd
Author: Michael 'Mickey' Lauer <mickey@vanille-media.de>
Date:   2005-07-06 15:42:10 +0000

    Shell: grab a deepcopy from the initial cooker data to reuse
    it in file**** commands. Otherwise we would pollute
    cooker.configuration.data (i.e. do_configure_append() appending
    multiple times). This fixes BitBake bug #133

12	2	lib/bb/shell.py

commit 82b3c9a47b8729ea2b93d3fda0f792ee4da43ad9
Author: Michael 'Mickey' Lauer <mickey@vanille-media.de>
Date:   2005-07-06 12:01:37 +0000

    add missing self to find_bbfiles() and get_bbfile()

2	2	bin/bitbake

commit 881272907af4d21bc710e6577eeadc40389c827a
Author: Michael 'Mickey' Lauer <mickey@vanille-media.de>
Date:   2005-07-06 08:47:24 +0000

    remove last trace of make.py

2	3	lib/bb/__init__.py

commit 9c95c952aa8f74469a55ed07b6e3925cb1644488
Author: Michael 'Mickey' Lauer <mickey@vanille-media.de>
Date:   2005-07-05 14:32:26 +0000

    This (large) patch reintegrates the bb.make module into the bitbake executable.
    Said make module has been factorered out back in the old days when we had two concurrent
    oemake implementations which were in need of code sharing. Nowadays, there's no
    more use of a seperated make module and in fact the split has always been a bit
    artificial.
    
    A brief overview of the changes:
     * create utils.py which contains three unbound functions for comparing versions
     * create a class BBConfiguration that holds variables which were formerly living in make module scope
     * make functions use the BBConfiguration instance that lives in BBCooker instance
     * move functions into the BBCooker class, adapt them to work as class methods
     * integrate the function of the bbread executable into BitBake; use it with option '-e' and (optionally) -b
     * remove make.py
     * remove bbread
     * adapt the shell module which has been using the make module directly

0	50	bin/bbread
262	56	bin/bitbake
0	246	lib/bb/make.py
30	33	lib/bb/shell.py
71	0	lib/bb/utils.py

commit a02943513551ed4ed27038c06afb9f5eecdea994
Author: Marcin Juszkiewicz <marcin@juszkiewicz.com.pl>
Date:   2005-06-30 09:44:36 +0000

    Fix for #88 - written by proti:
    The function should be shielded against the posibility that prevdir could be removed by the function.

3	1	lib/bb/build.py

commit 320a4e33d634f7c061d985ef7f693ec4496c6630
Author: Holger Hans Peter Freyther <zecke@selfish.org>
Date:   2005-06-27 21:40:28 +0000

    Patch by Yann Dirson to show a more verbose error log
    when not beeing able to parse a file

2	2	bin/bitbake

commit 5e37f20345f540fdc81d208523366803998404ce
Author: Holger Hans Peter Freyther <zecke@selfish.org>
Date:   2005-06-21 21:25:24 +0000

    bitbake Poke Changes:
        make.pkgdata is when used with a CACHE just a holder
        of a list of filenames + the path to the cache.
        Now when poking at files the changes will be lost immediately,
        we now offer a mean to mark a data instance as dirty and we
        will not throw it away in this case...
        setDirty is not meant to be public API

31	1	lib/bb/data.py
8	3	lib/bb/shell.py

commit 8f57cac25b6b15ccefdf3ef40ec257674832b417
Author: Michael 'Mickey' Lauer <mickey@vanille-media.de>
Date:   2005-06-21 20:48:19 +0000

    - fix _findProvider() for 'PN-PV'
    - add columnize helper function
    - outcomment poke function and add warning

32	13	lib/bb/shell.py

commit 75f4537cde17796b6b9c24efda3c5eea6b088159
Author: Holger Hans Peter Freyther <zecke@selfish.org>
Date:   2005-06-18 22:21:12 +0000

    bitbake/bin/bitbake:
        -Possible fix for #103 make findBestProvider operate
        on a given, limited pkg_pn (the one we created).

4	3	bin/bitbake

commit 1a9073eab57bb5206b25f082430cfe730abf04b0
Author: Holger Hans Peter Freyther <zecke@selfish.org>
Date:   2005-06-18 14:48:31 +0000

    bitbake/lib/bb/build.py:
        -Fix the task_cache as reference assumption as described
         in bug report #60
    
        Patch courtsey keturn

1	2	lib/bb/build.py

commit cfd998a05ecd138ee9313ea5d3f7ae5cf29cfd4a
Author: Michael 'Mickey' Lauer <mickey@vanille-media.de>
Date:   2005-06-17 13:24:41 +0000

    make the cache also work when you use softlinks to the packages - patch courtesy Holger Schurig

1	1	lib/bb/data_smart.py

commit 5b7ad9b4541206814290804bafa2db2e8c0acee8
Author: Michael 'Mickey' Lauer <mickey@vanille-media.de>
Date:   2005-06-17 10:46:21 +0000

    - add 'alias' command to allow shortcuts for commands
    - bbshell now processes ~/.bbsh_startup, if existing
    All commands valid inside the shell are valid in the startup file.
    Don't use | in startup files.

39	6	lib/bb/shell.py

commit 74d7a8c2aa6dd6fd02dc5b43a5d78d78e417145f
Author: Michael 'Mickey' Lauer <mickey@vanille-media.de>
Date:   2005-06-17 09:47:15 +0000

    - add 'peek' command: Example Usage: peek nano SRC_URI
    - add 'poke' command, outcommented because d.setVar seems not to be persistent

32	2	lib/bb/shell.py

commit 7794314a99aa1efe5e277eadde455bad3ff50f72
Author: Michael 'Mickey' Lauer <mickey@vanille-media.de>
Date:   2005-06-17 09:01:59 +0000

    make edit command more consistent:
    - 'edit' now accepts a providee
    - 'fileedit' now calls $EDITOR on a bbfile

20	4	lib/bb/shell.py

commit bff78be5bdac0d926868ecfc113462102f9c30e7
Author: Michael 'Mickey' Lauer <mickey@vanille-media.de>
Date:   2005-06-16 21:29:53 +0000

    - fix pasteLog and pasteBin failure codepaths. Thanks to keturn for spotting.

2	2	lib/bb/shell.py

commit cf7f0cd6ae454fd534f5364ad4c5d92de15560fd
Author: Michael 'Mickey' Lauer <mickey@vanille-media.de>
Date:   2005-06-16 18:50:13 +0000

    - add 'showdata' command
    - fix readline in python expert mode
    - add some more IDEAS

33	19	lib/bb/shell.py

commit ed02c29396ba8891e185dcc820fc5cce9fc768d9
Author: Michael 'Mickey' Lauer <mickey@vanille-media.de>
Date:   2005-06-16 16:43:08 +0000

    - add 'getvar' to print out a variable from the outer environment
    - 'print' now serves a different purpose, it lists either all bbfiles or all providers
    - add '|' to allow the output of commands be piped into grep, sort, and friends: Hint try:
      parse; print files | grep opie
    - internal: add debugOut()

69	29	lib/bb/shell.py

commit 7b98e16b246298835d10b9a09c57c0b71ca2e66a
Author: Holger Hans Peter Freyther <zecke@selfish.org>
Date:   2005-06-15 14:05:22 +0000

    BitBake (minor update):
         -Remove data_dict.py as it was not needed for sooo long
         -Remove TODOs related to data_dict.py
         -Remove data_dict from the MANIFEST

0	1	MANIFEST
0	2	TODO
0	244	lib/bb/data_dict.py

commit 5ae01b901dafcca40774b11aad1de779cfb4fc87
Author: Marcin Juszkiewicz <marcin@juszkiewicz.com.pl>
Date:   2005-06-15 09:15:50 +0000

    Keep all temporary files in proper place not in TMPDIR (patch by Holger Schurig)

0	1	bin/bbimage

commit 2dace1f31956d8e334f5b226828e3369663bb4ad
Author: Holger Hans Peter Freyther <zecke@selfish.org>
Date:   2005-06-14 22:06:39 +0000

    bitbake/lib/bb/__init__.py
        -Fix testcase by silenting the ververify error message

1	1	lib/bb/__init__.py

commit 4b4c7e596cd4667da773e73ff9864eca8d85804c
Author: Michael 'Mickey' Lauer <mickey@vanille-media.de>
Date:   2005-06-14 09:19:20 +0000

    - add 'fetch', 'unpack', 'patch', 'configure', 'compile', 'stage'
      which reflect the execution of the respective tasks on providees
    - add 'force' to toggle make.options.force
    - switch to a more sane context sensitive completion method inspecting the 'usage' attribute

46	8	lib/bb/shell.py

commit 6e9cf3a2cc7e27c2e3c6d9afa7f8e9bb2f38976e
Author: Holger Hans Peter Freyther <zecke@selfish.org>
Date:   2005-06-13 21:25:31 +0000

    BitBake:
        -Remove old code (python version >= 2.3 check)
        -Remove commented code (as we've a scm)
        -Fix most of the testcases (only one is failing)
          -by importing string
          -by removing new lines
          -by changing '"' to "'"
          -by reodering some elements

6	24	lib/bb/__init__.py

commit f40cd1fecd7bbccb7cf9615bf84ef393d05899d2
Author: Michael 'Mickey' Lauer <mickey@vanille-media.de>
Date:   2005-06-11 14:46:09 +0000

    collect_bbfiles:
    - save progress callback in function attribute
    - remain completely silent when no progress callback is requested

13	6	lib/bb/make.py

commit 8cf677f9b2c7bd0928b99d10b3507e10d58830d6
Author: Michael 'Mickey' Lauer <mickey@vanille-media.de>
Date:   2005-06-10 20:59:09 +0000

    OO overhaul:
     - Introduce classes for commands and the command processor
     - Autoregister available commands
     - Fix 'shell' command to work with unlimited number of parameters
     - Remove 'exec' command

392	374	lib/bb/shell.py

commit 3e08cf83ccf73d84f0783a448d8907e8d9cba388
Author: Michael 'Mickey' Lauer <mickey@vanille-media.de>
Date:   2005-06-10 09:20:28 +0000

    - capture bb.parse exception in 'filebuild'
    - restore sys.stdout during raw_input, this repairs
    tab completion which I broke two revisions ago

11	7	lib/bb/shell.py

commit 42f8a78f64f9db1d2c2ed7233e26862fd280729b
Author: Michael 'Mickey' Lauer <mickey@vanille-media.de>
Date:   2005-06-09 18:03:25 +0000

    add 'shell <command>' which hands a command over to the shell and dumps the output
    NOTE: Due to a limitation in the bbshell command processor, 'shell' and 'exec' are
    currently broken when using more than one parameter. This will be sorted out asap.

7	2	lib/bb/shell.py

commit 13afd4262338ce9343728c507821403bf8fee208
Author: Michael 'Mickey' Lauer <mickey@vanille-media.de>
Date:   2005-06-09 13:25:28 +0000

    Use socket.gethostname() instead of os.environ["HOST"]. That should work on all systems.

2	2	lib/bb/shell.py

commit 30d048460aae8cd668b539b7008c48109aaa5228
Author: Michael 'Mickey' Lauer <mickey@vanille-media.de>
Date:   2005-06-09 13:11:42 +0000

    Greatly improve pastebin functionality:
    The BitBake shell now features a generic output buffer for the last 10 commands.
    You can dump an overview about the buffered commands with 'buffers' and dump
    the contents of a buffer with 'buffer <n>'. Likewise, 'pastebin <n>' uploads
    the contents of the said buffer. NOTE: 'lasterror' is still available, but has been
    renamed to 'lastlog'. The old pastebin command is still available with 'pastelog'.

99	23	lib/bb/shell.py

commit deea4dec7f68b5378a789ba6fc71126cc00c1745
Author: Michael 'Mickey' Lauer <mickey@vanille-media.de>
Date:   2005-06-08 17:30:37 +0000

    remove sys.exc_info() hack and instead use the magic .args variable of the exception instance variable

6	7	bin/bitbake

commit 64bd726b67448c790d555cd0b0070be84b11b09e
Author: Michael 'Mickey' Lauer <mickey@vanille-media.de>
Date:   2005-06-08 17:29:51 +0000

    add pastebin command to upload the latest error log (if there is one)

59	3	lib/bb/shell.py

commit e010e8768a8bf0326467a44fcfcefe313f14aa43
Author: Michael 'Mickey' Lauer <mickey@vanille-media.de>
Date:   2005-06-08 17:29:07 +0000

    - set magic args attribute for event exception
    - remove event property
    - submit descriptive error messages when raising event exceptions

5	14	lib/bb/build.py

commit ecfaa95522bd3914b8fa36210566bd2406688806
Author: Michael 'Mickey' Lauer <mickey@vanille-media.de>
Date:   2005-06-07 13:33:36 +0000

    build in a try/except block and intercept faulty builds

6	3	lib/bb/shell.py

commit db872e763490b9cbc2f22bcee37b0d657ae7624c
Author: Holger Hans Peter Freyther <zecke@selfish.org>
Date:   2005-06-06 23:04:19 +0000

    bitbake/bin/bitdoc:
         -Small utility to generate a Hyper Linked online version
         out of documentation.conf.
         An example can be found here:http://handhelds.org/~zecke/oe_html/
    
         TODO:
          -Beautify the HTML output (shameless rip off from gtkdoc)
          -Sort the keys
          -Fix and extend OpenEmbedded's documentation.conf to follow the
           simple ruleset
         KEY[doc] = "This is the description. It can go on \
         @see MOO_RELATED, FOO_DOO, GRUFT, BLUR, TOCOTRONIC @group rock, POP \
         NewWave"
    
         It will extract the description, related keys (everything after @see
         separated by ',') and the groups this key is in. This simple rules
         should and could bring us forward.

510	0	bin/bitdoc

commit bc306889aac8944d0e8ac718ecc8b93cf6e114c6
Author: Michael 'Mickey' Lauer <mickey@vanille-media.de>
Date:   2005-06-03 12:05:26 +0000

    catch build exceptions also when building just one file

5	1	bin/bitbake

commit f32369ebe40f3291fde530b0b8c02d9a4c465bf6
Author: Holger Hans Peter Freyther <zecke@selfish.org>
Date:   2005-06-02 20:22:55 +0000

    bitbake/bin/bitbake:
       Rework handling of pkg_pn. I still wonder if we should
       set pkg_pn[pn] at all in this method.
    
       Patch courtsey proti

7	10	bin/bitbake

commit 3b29d981085aa7338c7863123537bb8468f5584c
Author: Michael 'Mickey' Lauer <mickey@vanille-media.de>
Date:   2005-06-01 14:08:52 +0000

    use cooker.findBestProvider() for the 'which' command

15	14	lib/bb/shell.py

commit 92eb4f94106f2b438a92bff9de4dcb29de76f6d2
Author: Holger Hans Peter Freyther <zecke@selfish.org>
Date:   2005-05-31 22:57:05 +0000

    bitbake/bin/bitbake:
            Create a common method to get the preferred version
            given a package name.
            This patch was done by proti (seb BEI frankengul.org)
            and made work by myself. The list in list logic does not
            seem 'obvious' and I need to consider how to kill it.
            (when I understand what the file_set should represent)

76	128	bin/bitbake

commit 98514dd57444c298fd7e993846727dfd93abe33e
Author: Michael 'Mickey' Lauer <mickey@vanille-media.de>
Date:   2005-05-30 22:10:10 +0000

    calculate absolute path when parsing a bitbake file. this fixes -b with
    relative paths

3	3	bin/bitbake

commit 127b47c3dbbd36d54311bc31b712493cb8e2b424
Author: Michael 'Mickey' Lauer <mickey@vanille-media.de>
Date:   2005-05-30 21:45:30 +0000

    fix stupid typo. this repairs bitbake -f

1	1	bin/bitbake

commit 54920c6184cb08e3abe3f80abb52d9bf36236f03
Author: Michael 'Mickey' Lauer <mickey@vanille-media.de>
Date:   2005-05-30 19:30:22 +0000

    add ; as command seperator
    unify error messages
    add new <directory> <bbfile> command

72	21	lib/bb/shell.py

commit bbc30a9a25af0ed075882ff2cd50415686de2fd7
Author: Michael 'Mickey' Lauer <mickey@vanille-media.de>
Date:   2005-05-30 15:04:16 +0000

    add some more things to TODO

7	1	lib/bb/shell.py

commit 8fb6bf3768ca0343f4e4c5ed5a7dae29eab92dab
Author: Michael 'Mickey' Lauer <mickey@vanille-media.de>
Date:   2005-05-30 14:57:28 +0000

    - fix bug in file*** commands (need to clean the _task_cache per
      package)
    - add fileRebuild (clean and rebuild a .bbfile)

32	17	lib/bb/shell.py

commit d78b3411cbedb78ad37fcb8a63d6ca301e5925df
Author: Michael 'Mickey' Lauer <mickey@vanille-media.de>
Date:   2005-05-30 11:39:42 +0000

    remove accidantly commited debug line

0	1	bin/bitbake

commit e94462fbe0a3e182e1a7ffdc275bb40e8f7e60df
Author: Michael 'Mickey' Lauer <mickey@vanille-media.de>
Date:   2005-05-29 21:33:46 +0000

    major update:
    - improve registerCommand
    - build, clean, and rebuild no longer work on providees or bbfiles, but just on providees
    - filebuild, fileclean and filerebuild work on bbfiles
    - add which 'providee'

110	67	lib/bb/shell.py

commit c1414e609e537e861998d365e4fab5724bfaba73
Author: Michael 'Mickey' Lauer <mickey@vanille-media.de>
Date:   2005-05-29 21:29:31 +0000

    misc. refactoring bits for bin/bitbake:
     - remove executeOneBB
     - add tryBuildPackage
     - add more docstrings
     - less abbrevations
     - s/buildPackage/buildProvider/

46	64	bin/bitbake

commit 14b8c61fd69b44e5cd2d32fff2b102783de3619c
Author: Holger Hans Peter Freyther <zecke@selfish.org>
Date:   2005-05-28 20:24:00 +0000

    bitbake/lib/bb/*:
            include 'time' into the scope. For bitbake 1.3.1 we need
            to define which modules will be visible when executing
            embedded python methods

1	1	lib/bb/data_dict.py
1	1	lib/bb/data_smart.py

commit d9f628338e61d9c6621eb0ae96b826c430a8d51e
Author: Holger Hans Peter Freyther <zecke@selfish.org>
Date:   2005-05-28 19:08:00 +0000

    bitbake/bin/bitbake:
            update_data() of make.cfg after we've parsed the
            each and every bitbake file.
            Call me paranoid but this way we make sure that changes
            made in the bb files are actually taken...

1	2	bin/bitbake

commit adeacca614de465701f395eea644fe7c21673bf4
Author: Michael 'Mickey' Lauer <mickey@vanille-media.de>
Date:   2005-05-27 16:00:52 +0000

    - add command specific tab completion
    - add expert mode - an embedded python interpreter
    - add exec command

40	14	lib/bb/shell.py

commit 00e7ab206e0836fb4c905c48ef69bd1685cb628e
Author: Holger Hans Peter Freyther <zecke@selfish.org>
Date:   2005-05-26 19:00:30 +0000

    bitbake:
            -Prepare the 1.3.0 release of bitbake

1	1	ChangeLog
1	1	lib/bb/__init__.py

commit 264723824c00946a1d6c8394f9e9f39d5bae56cc
Author: Michael 'Mickey' Lauer <mickey@vanille-media.de>
Date:   2005-05-26 14:59:58 +0000

    some fixes

18	8	lib/bb/shell.py

commit 804b3f593394569425a92e1dff5371494686131c
Author: Michael 'Mickey' Lauer <mickey@vanille-media.de>
Date:   2005-05-26 14:57:24 +0000

    catch parse error in parseConfigurationFile()

2	0	bin/bitbake

commit b651f051d6451fe1920f5c75325460a8271b5618
Author: Michael 'Mickey' Lauer <mickey@vanille-media.de>
Date:   2005-05-26 13:26:12 +0000

    add bbfile completion

44	12	lib/bb/shell.py

commit 4407d25b8fc3b8285cc78137a3dda1322f3c9189
Author: Michael 'Mickey' Lauer <mickey@vanille-media.de>
Date:   2005-05-26 13:25:30 +0000

    - remove checking for return if parse-only is set when executing just one BB
    - don't sys.exit() for parse-only, but return. This makes dropping into the Python interactive mode possible.

2	6	bin/bitbake

commit b640c969e03c27d8b9da0094c9fddd811ef29f94
Author: Phil Blundell <philb@gnu.org>
Date:   2005-05-26 12:30:02 +0000

    have bb.parse.handle() throw ParseError if the input file is not
    understood by any handler, rather than quietly returning None

1	1	lib/bb/parse/__init__.py

commit ac6e1e8af510415aa3804c8c12151d4e114a02c5
Author: Michael 'Mickey' Lauer <mickey@vanille-media.de>
Date:   2005-05-26 11:36:20 +0000

    - add more commands: edit, clean, rebuild.
    - load command history on startup
    - save command history on exit
    Bug: A bug can be seen when you call rebuild on a package more than once -
    somehow the make module no longer calls the tasks then.

56	12	lib/bb/shell.py

commit 2d569d5cae4437610719299d4eb196e68a4d19af
Author: Michael 'Mickey' Lauer <mickey@vanille-media.de>
Date:   2005-05-25 22:02:46 +0000

    call update_data right after parsing the conf files

2	0	bin/bitbake

commit f51a6c4375c318cd1b12bf24a513b90ec0cf7b06
Author: Michael 'Mickey' Lauer <mickey@vanille-media.de>
Date:   2005-05-25 21:55:06 +0000

    Python 2.3.x compatibility fix

4	0	lib/bb/shell.py

commit 3e169430b184bc7599655a0bc0556bd533cd8dd7
Author: Michael 'Mickey' Lauer <mickey@vanille-media.de>
Date:   2005-05-25 21:02:38 +0000

    add first (preview) version of the bitbake interactive mode

175	0	lib/bb/shell.py

commit aeeaebe546d498a9fccf3df875729e654e54bc40
Author: Michael 'Mickey' Lauer <mickey@vanille-media.de>
Date:   2005-05-25 21:02:11 +0000

    bitbake: factor out methods parseConfigurationFile() and handleCollections()

14	12	ChangeLog
1	0	MANIFEST
44	36	bin/bitbake

commit 8bf780c087df9dca19c9d16739731eca9f6e6bc9
Author: Phil Blundell <philb@gnu.org>
Date:   2005-05-25 10:14:30 +0000

    tolerate ${...} in function names

1	1	lib/bb/parse/BBHandler.py

commit 3c7ec421cafec9519fa483d1f93ac199085a5a1c
Author: Michael 'Mickey' Lauer <mickey@vanille-media.de>
Date:   2005-05-24 12:03:15 +0000

    Mickey's style and performance tunings, volume I:
     * substitute 'if dictionary.has_key( key )' with 'if key in dictionary'
    It's faster, more understandable and looks much better

10	10	bin/bitbake

commit e51d1ac7d4ec05510a61fc17639193f096783754
Author: Michael 'Mickey' Lauer <mickey@vanille-media.de>
Date:   2005-05-23 21:39:25 +0000

    update data to make _append's etc. appear. patch courtesy BB-Meister
    Zecke

1	0	bin/bbread

commit c435927465a9910eda87c93f9e5ca627d85bb987
Author: Holger Hans Peter Freyther <zecke@selfish.org>
Date:   2005-05-23 18:41:38 +0000

    bitbake/MANIFEST:
            -Include data_smart.py in the MANIFEST

1	0	MANIFEST

commit c00e010a4ef3a58165a5dd6dcc91f2179acfb6b6
Author: Holger Hans Peter Freyther <zecke@selfish.org>
Date:   2005-05-23 18:40:42 +0000

    bitbake/lib/bb module:
            Bump the version number to be different from the
            last version

1	1	lib/bb/__init__.py

commit 8cc087e28175169ea15a6fbdcb9ed738aae8f553
Author: Holger Hans Peter Freyther <zecke@selfish.org>
Date:   2005-05-23 18:39:43 +0000

    bitbake/TODO:
            -Not much is done yet but at least fake that we've done
            something

6	4	TODO

commit 7997c6a3f2dce1e0118dc76480370efc4cc725f1
Author: Michael 'Mickey' Lauer <mickey@vanille-media.de>
Date:   2005-05-23 16:53:40 +0000

    Slight OO refactoring of BitBake command line utility in order to
    prepare for the BitBake shell which will need to have instance based
    variables as opposed to module global ones.
    
    Sorry, this diff is larger than it should be, but I had to reorder
    methods and change indenting all over the place. What I basically did
    is:
    
     1.) Add a class managing the statistics values: BBStatistics
     2.) Add a class managing the build process: BBCooker
     3.) Refactor all unbound methods into the BBCooker class
     4.) Refactor all module global values into the BBCooker class
     5.) Adjust function calls and accesses of the module global values
    accordingly
    
    The shell module itself is under construction and will be uploaded asap.

611	584	bin/bitbake

commit 6e88d83377d4c0f5d8943decd38a83072dfcdd51
Author: Holger Hans Peter Freyther <zecke@selfish.org>
Date:   2005-05-22 22:41:43 +0000

    bitbake/bin/bitbake:
            -Drastically increase the amount of needed RAM to the
             unbelievable amount of 12MB when parsing ~2320 bb files.
            -Start creating the provider hash and other lists/dictionaries
             from the progressCallback. A BBStatusProgress struct was added
             to accumulate the data to be used in the buildPackage, showVersions
             and similiar methods.
             This makes it possible to kill the long delay and also building the
             provider hash completely.
             Only for building and checking if a package was built (has stamps) it
             is necessary to get the data instace from make.pkgdata.

128	115	bin/bitbake

commit aca518dcbcce2e4917a6e0da490d3339058fa908
Author: Holger Hans Peter Freyther <zecke@selfish.org>
Date:   2005-05-22 22:35:19 +0000

    bitbake/ChangeLog:
            -Mention changes in bitbake since the 1.2.1 release

14	0	ChangeLog

commit f39f4bfc157a682672ea549da653b29b10e3d284
Author: Holger Hans Peter Freyther <zecke@selfish.org>
Date:   2005-05-22 19:44:39 +0000

    bitbake/lib/bb/make.py:
            Pass more data to the parsing progressCallBack.
            We will soon use this data to eliminate the long
            delay before building.
    
    bitbake/bin/bitbake:
            Just change the signature of the callback method for now.
            We will soon keep the 'parsing status' in a instance
            we will fill while parsing and only evaluate in build_depgraph

1	1	bin/bitbake
3	1	lib/bb/make.py

commit 8f9a755afae17c950c8478fe1fbfe18c6c153a0b
Author: Holger Hans Peter Freyther <zecke@selfish.org>
Date:   2005-05-21 13:53:38 +0000

    bitbake/lib/bb/data_smart.py:
            -Do a deepcopy of the parent for the persistent
             data storage constructor.
            -Store the dict as _data member and not the instance
            -Operate on the dict in the methods instead of the
             DataSmart instances...
    
            Happy deletion of the cache

17	18	lib/bb/data_smart.py

commit 8d02dd8b56152eef07c375a511b78a87bfadad89
Author: Holger Hans Peter Freyther <zecke@selfish.org>
Date:   2005-05-20 21:51:03 +0000

    bitbake/lib/bb/fetch.py:
            -be less anoying and only print debug messages when
            d is none

1	3	lib/bb/fetch.py

commit 33d7ebb1af8d5c9666946f2487fb7bef5c651656
Author: Holger Hans Peter Freyther <zecke@selfish.org>
Date:   2005-05-20 19:39:59 +0000

    bitbake/lib/bb/fetch.py:
            -Warn when init is called without a data instance, we're not able to reorder
             them as it would break bitbake <= 1.2.1 and OpenEmbedded
    
    bitbake/lib/bb/parse/BBHandler.py:
            -Do not call fetch.init without a data instance. This changes the AtiCore
             problem the OE folks are seeing a bit...

6	0	lib/bb/fetch.py
1	1	lib/bb/parse/BBHandler.py

commit 39313e9749889bd43695e1b9adabb1c7f64dcc80
Author: Holger Hans Peter Freyther <zecke@selfish.org>
Date:   2005-05-20 19:37:06 +0000

    bitbake/lib/bb/data.py:
            -Don't be too keen finding a bug in expand when there is None...
             Fix the testcase to delete {TARGET_MOO} first.

1	0	lib/bb/data.py

commit 8e439a474fad2f1042aad192529fc71a89d23751
Author: Holger Hans Peter Freyther <zecke@selfish.org>
Date:   2005-05-20 19:11:10 +0000

    bitbake/lib/bb/data.py:
            -Write an expand test case that actually shows a bug I need to fix

3	0	lib/bb/data.py

commit e425d0f9704feea38d85ee1b07b9d110ac9e2146
Author: Holger Hans Peter Freyther <zecke@selfish.org>
Date:   2005-05-20 18:55:41 +0000

    bitbake/lib/bb/data.py:
           -Add two test cases to the expand method. The behaviour
            was not tested before.

8	0	lib/bb/data.py

commit 59fa71447a7bf91df0e4a1945f1ce4b9476578a3
Author: Holger Hans Peter Freyther <zecke@selfish.org>
Date:   2005-05-20 18:38:01 +0000

    bitbake/lib/bb/data.py:
            -We've killed the default arguments in the methods
             now the tests were updatet to initialize a data
             instance to work again.

56	45	lib/bb/data.py

commit 08f949ddbb175e09ef68c8d1cf852f88e94c6559
Author: Holger Hans Peter Freyther <zecke@selfish.org>
Date:   2005-05-20 18:11:10 +0000

    bitbake/lib/bb/data_dict.py:
            -Fix one bug in the unused data_dict.py. There is still one
             left... again cookies for the one finding it

2	2	lib/bb/data_dict.py

commit 9cc4de1c2d51eaeeb7eece1633e4ca67d4e7c711
Author: Holger Hans Peter Freyther <zecke@selfish.org>
Date:   2005-05-20 17:42:34 +0000

    bitbake/TODO:
            Add basics tasks I want to see finished

18	0	TODO

commit d4a0a60b98890a07199ff22fa0695dc727bacf32
Author: Holger Hans Peter Freyther <zecke@selfish.org>
Date:   2005-05-20 11:43:37 +0000

    bitbake/lib/bb/data_smart.py:
            Return only the mtime from the os.stat syscall
    
    bitbake/lib/bb/data_dict.py:
            Return only the mtime from the os.stat syscall

1	1	lib/bb/data_dict.py
1	1	lib/bb/data_smart.py

commit 97a47d30b9e12e494a3da59d7359eb930230e4c2
Author: Holger Hans Peter Freyther <zecke@selfish.org>
Date:   2005-05-18 22:37:01 +0000

    tbake/lib/bb/fetch.py:
            Stop sf.net from bull?#*... us. We will fail when we wanted to
            download a file and got something with a different name.
            This should solve sf.net related problems as we go immediately to
            the next mirror and it should work for all other packages as well.

7	0	lib/bb/fetch.py

commit 6409874a74c7f258d30dbc453649a1ea5c4595d0
Author: Holger Hans Peter Freyther <zecke@selfish.org>
Date:   2005-05-18 22:09:05 +0000

    bitbake/lib/bb/fetch.py
            Try to partially apply
    http://wiki.python.org/moin/PythonSpeed/PerformanceTips?highlight=%28performance%29#dots avoid
    finding data in bb

66	66	lib/bb/fetch.py

commit 156c33c33ba96a9a63c149b84f080e8b286ed1dd
Author: Chris Larson <clarson@kergoth.com>
Date:   2005-05-18 18:39:23 +0000

    Change the bb.__version__ to 1.2.1, and adjust setup.py to actually import the bb module to obtain the version it uses.

1	1	lib/bb/__init__.py
5	4	setup.py

commit d575731f5719d771d2e66a9100a6c3487ffba786
Author: Holger Hans Peter Freyther <zecke@selfish.org>
Date:   2005-05-18 18:37:44 +0000

    bitbake/bin/bitbake:
            Update the version to 1.2.1 (now a string)

1	1	bin/bitbake

commit b560d71c3e2eb227c0a31a0bddad01d27926a6d3
Author: Michael 'Mickey' Lauer <mickey@vanille-media.de>
Date:   2005-05-18 13:44:02 +0000

    add missing copyright and fix __ignored_dependencies scoping problem

3	2	bin/bitbake

commit 81efd77987f6decf256967fa16521a40c14d3518
Author: Holger Hans Peter Freyther <zecke@selfish.org>
Date:   2005-05-17 22:55:10 +0000

    lib/bb/data.py:
            Use the new data_smart dictionary
    
    lib/bb/data_smart.py:
            The old COW Implementation, made persistent and pass
            the test suite.
            I commit it because the persistent mode in data_dict.py seems
            broken and I don't want to leave you with a broken bitbake.
    
            Todo:
              -do a deepcopy on the parent. When we pickle we use sharing
             anyway and it is pretty obvious we will pickle as we're the
             persistent implementation.

3	3	lib/bb/data.py
329	0	lib/bb/data_smart.py

commit 5addf5a560142a6ed2ac362c0d379ae89b9c69f0
Author: Holger Hans Peter Freyther <zecke@selfish.org>
Date:   2005-05-17 22:47:14 +0000

    lib/bb/data.py:
            -Remove default arguments from the data methods. They
            cast errors.
            (we need to update the test case though)
    
    lib/bb/parse/ConfHandler.py:
            -Use the right dictionary

21	23	lib/bb/data.py
1	1	lib/bb/parse/ConfHandler.py

commit 77e7db02ba721211362517b1e63650d122762c3c
Author: Holger Hans Peter Freyther <zecke@selfish.org>
Date:   2005-05-17 22:30:59 +0000

    bin/bitbake:
            -Access pkgdata[] less. This means unpickling the data less often.
            This results in a faster initial parsing. We still access each
            file three times though

9	8	bin/bitbake

commit 75867c18e276d18f3207d2f61567332096a190b3
Author: Holger Hans Peter Freyther <zecke@selfish.org>
Date:   2005-05-17 22:25:07 +0000

    lib/bb/data.py:
            -Provide a special 'collection/dict' for the collected
             bb-files. If we use a persistent storage (CACHE) we will
             not hold any data instance in memory but load it from disk
             on demand.
             This reduces bitbakes memory usage to roughly 40MB. The initial
             parsing currently takes roughly thirty seconds more.
    
    lib/bb/make.py:
            -Use the new data implementation for pkgdata.
            -Do not access pkgdata[f] if we've the data already
             in our hands

40	0	lib/bb/data.py
12	9	lib/bb/make.py

commit d4540eb7fc75d936fe90502f4233fa051d695695
Author: Michael 'Mickey' Lauer <mickey@vanille-media.de>
Date:   2005-05-17 22:22:38 +0000

    add authors file

5	0	AUTHORS
2	0	MANIFEST

commit 3e4a93e745408f58009145b8b01e5740c406db91
Author: Holger Hans Peter Freyther <zecke@selfish.org>
Date:   2005-05-17 22:20:02 +0000

    lib/bb/data.py:
    ·       -Add a method to get the modify time of named bb.data instance
    ·       -Add a method to create a named bb.data instance. These instances
    ·       inherit the global configuration.
    
    lib/bb/data_dict.py:
    ·       -Add persistents to the data_dict implementation, on the commit
            method we will now pickle the internal dict
    
    lib/bb/make.py:
            -Use the new persistent/named bb.data methods.

7	0	lib/bb/data.py
68	0	lib/bb/data_dict.py
6	27	lib/bb/make.py

commit e629173521df39dbba8ff9b346ac7f1c727c1b18
Author: Holger Hans Peter Freyther <zecke@selfish.org>
Date:   2005-05-17 22:16:16 +0000

    lib/bb/build.py:
            Do not assume we hold a reference to the variable
            we got with a bb.data.getVar*. Always set changes
            back to the variable.

3	2	lib/bb/build.py

commit 874b3db5302dd7f90de6d5a3701cd05115155b6d
Author: Holger Hans Peter Freyther <zecke@selfish.org>
Date:   2005-05-17 22:02:04 +0000

    Add a ChangeLog to lay out the 'API' changes of bitbake

10	0	ChangeLog

commit 8417420700a69b521827e6ebf2e4d25aad6309cd
Author: Holger Hans Peter Freyther <zecke@selfish.org>
Date:   2005-05-17 19:20:55 +0000

    lib/bb/fetch.py:
      * Remove default params from the fetcher methods to avoid problems
        with scoping. The meaning of 'd' is quite overloaded and we try
        to undo it one by one. This change is a bit more invasive than
        I had hoped for but it is needed.
    
     -- Holger Hans Peter Freyther <freyther@handhelds.org>

11	10	lib/bb/fetch.py

commit af0493301ecf23bde89342a27ead6ab02e4d1f59
Author: Holger Hans Peter Freyther <zecke@selfish.org>
Date:   2005-05-17 18:16:03 +0000

    Add data_dict.py to the MANIFEST

1	0	MANIFEST

commit 150d9f2341f546392d26992b2adac7e3d1344ea4
Author: Holger Hans Peter Freyther <zecke@selfish.org>
Date:   2005-05-17 18:15:25 +0000

    createCopy:
            -Move a createCopy method into data.py
            -Make code creating deepcopies of the data instance
            use this new createCopy

1	1	bin/bbimage
1	2	lib/bb/build.py
15	4	lib/bb/data.py
4	1	lib/bb/data_dict.py
3	6	lib/bb/fetch.py
1	1	lib/bb/make.py
1	1	lib/bb/parse/BBHandler.py

commit c7f7cfd506f504f658088bc0c7ee9f487d8a3d3f
Author: Holger Hans Peter Freyther <zecke@selfish.org>
Date:   2005-05-17 18:04:46 +0000

    bitbake data module abstraction:
            -bb.data is now a delegate to hookable Data implementation.
            -bb.data.init() is the 'factory' method to create a instance
            of a concrete implementation.
            -Kill assumptions that bb.data.init() returns a {} (python dict)
            -Add the old Dictionary Based Implementation as data_dict.py

2	2	classes/base.bbclass
54	78	lib/bb/data.py
173	0	lib/bb/data_dict.py
2	2	lib/bb/parse/BBHandler.py
4	4	lib/bb/parse/ConfHandler.py

commit f07abf6a9cd413ef71db0023288f5868a9d83ec6
Author: Chris Larson <clarson@kergoth.com>
Date:   2005-03-11 04:44:44 +0000

    Adjust the version in setup.py.

4	3	setup.py

commit 621ea1dc73a57be57b2906cb6548cc7da1b2926a
Author: Phil Blundell <philb@gnu.org>
Date:   2005-01-23 18:42:20 +0000

    Evaluate dependencies in try_build(), even if stamp file is up to date for the current package.

4	4	bin/bitbake

commit 004adaed2b87b215217df433f1b91cd392762049
Author: Chris Larson <clarson@kergoth.com>
Date:   2005-01-22 05:50:23 +0000

    bin/bitbake:
        * check if a package's task is already complete _before_
          calling the functions to try to build it.
        * don't bother trying to build a package's deps if the package has
          already been built.
        * cache the information about the 'perhaps you should define
          PREFERRED_PROVIDER_blah' messages so that the user only sees one
          for each provider.

16	7	bin/bitbake

commit 59d4f4d495748b2aa8b2752cfa5a3b4fde84926e
Author: Chris Larson <clarson@kergoth.com>
Date:   2005-01-17 21:11:26 +0000

    Add -nochunks makefile targets for documentation generation (user's manual).

10	3	doc/manual/Makefile

commit 1a91ae2f3af7d16d371130b59df1f9394ccad3c6
Author: Chris Larson <clarson@kergoth.com>
Date:   2005-01-17 20:37:42 +0000

    Unbork our event classes a bit.  Added a 'data' property to the Build events to be more consistent with the other events.

3	11	lib/bb/build.py
21	15	lib/bb/event.py

commit 7f42f65bf5a8ac20e72f14c7eb0270287ff3ef4d
Author: Chris Larson <clarson@kergoth.com>
Date:   2005-01-17 19:36:04 +0000

    As recommended by pb_ and RP, prepend the task name with 'task_' when mangling OVERRIDES in bb.data.exec_task().

2	1	lib/bb/build.py

commit b52facd926218af09c61c0ce7ea1c3358f0d8292
Author: Phil Blundell <philb@gnu.org>
Date:   2005-01-16 23:18:20 +0000

    add current task name to OVERRIDES during execution

8	3	lib/bb/build.py

commit e0c294be9a790892cfbb2e339f29a2d036885d9f
Author: Chris Larson <clarson@kergoth.com>
Date:   2005-01-06 21:38:18 +0000

    Test trigger alterations.

0	0	testtrigger

commit f7b459dcc8c498483f13ccc13348d9219591e3ce
Author: Chris Larson <clarson@kergoth.com>
Date:   2005-01-06 21:37:05 +0000

    Test trigger alterations.

0	0	testtrigger

commit ec94f815cee7fecd357db423c85defe1b6af1a52
Author: Phil Blundell <philb@gnu.org>
Date:   2005-01-02 01:16:47 +0000

    correct transposed protocol/revision parameters to svn checkout;
    patch courtesy Paul Eggleton

1	1	lib/bb/fetch.py

commit 6017f6f9f44ae34bce1f2bcb249f89866998593e
Author: Phil Blundell <philb@gnu.org>
Date:   2004-12-27 12:57:18 +0000

    emit_var(): if showing all vars, emit even those with invalid names

1	1	lib/bb/data.py

commit 610ad3eaf5eb77e1d1d2d04780817b9936bbad9c
Author: Chris Larson <clarson@kergoth.com>
Date:   2004-12-26 06:01:39 +0000

    bbread: wrap the call to bb.data.emit_env() in a try: except block.

6	1	bin/bbread

commit 844f30ade19ab58182e6c673d6247b7a026ecc04
Author: Chris Larson <clarson@kergoth.com>
Date:   2004-12-26 01:32:08 +0000

    Remove references to 'BBMAKE' from the debug messages in the bitbake command.

7	7	bin/bitbake

commit 5bad6c59ffa16ce98f5d679d9f65bfc05f021046
Author: Chris Larson <clarson@kergoth.com>
Date:   2004-12-26 01:23:43 +0000

    Re-raise bb.build.FuncFailed if it's encountered in emit_var.  This ensures that builds of packages that attempt to read the kernel-version file (like kernel modules) fail as they should.

7	3	lib/bb/data.py

commit b573c353c8d55991b1bd1c3375d02b5a1f290abc
Author: Chris Larson <clarson@kergoth.com>
Date:   2004-12-24 16:48:30 +0000

    Update the user manual -- add example usage of the bitbake command.  add example usage of bbfile collections.

34	9	doc/manual/usermanual.xml

commit ba073f15aa52ebce3cdf5dedbc81c8f863641ab1
Author: Chris Larson <clarson@kergoth.com>
Date:   2004-12-24 00:58:43 +0000

    Add information on the bitbake command to the User Manual.

77	19	doc/manual/usermanual.xml

commit 93224b3c62cefc6e97b3f813e2dd731cdc878e4d
Author: Chris Larson <clarson@kergoth.com>
Date:   2004-12-22 23:04:35 +0000

    Handle the parse only cmdline option when using --buildfile.

4	0	bin/bitbake

commit 5854acd91e2cecbbfa9cc1b8d6c45c3e55820b6e
Author: Chris Larson <clarson@kergoth.com>
Date:   2004-12-22 22:57:45 +0000

    Apply patch from Richard Purdie to fix the --force support in the bitbake script.

2	0	bin/bitbake

commit 4fb6b2de51c7296041a4d43caa0a90a8319ceb8e
Author: Marcin Juszkiewicz <marcin@juszkiewicz.com.pl>
Date:   2004-12-14 18:37:07 +0000

    renamed to get less ambiguous name

0	0	contrib/vim/syntax/{bb.vim => bitbake.vim}

commit 48fec92d59896f3c7cc89b91715ea7839d62b0b3
Author: Marcin Juszkiewicz <marcin@juszkiewicz.com.pl>
Date:   2004-12-13 22:32:59 +0000

    fix building of one .bb file (-b parametr) - fix by pb

1	1	bin/bitbake

commit ce3a8a7c173f72c4f747ee7168eacbc9e84917cf
Author: Chris Larson <clarson@kergoth.com>
Date:   2004-12-10 21:57:53 +0000

    Set the 'url' in setup.py to our berlios.de project.

1	0	setup.py

commit 67a742e330b801625e44f6120d0bf56e9cd3be74
Author: Chris Larson <clarson@kergoth.com>
Date:   2004-12-10 02:23:20 +0000

    Clean out the cruft in the vim syntax.

12	31	contrib/vim/syntax/bb.vim

commit 16792155360c96af2ce4e83f94653ee70899a9ef
Author: Chris Larson <clarson@kergoth.com>
Date:   2004-12-10 02:19:44 +0000

    Make bbread use bb.make.load_bbfile() rather than calling handle on the .bb itself.

5	4	bin/bbread

commit dc320341163f7a52209af0c87a110e33370ecbb3
Author: Chris Larson <clarson@kergoth.com>
Date:   2004-12-09 14:51:34 +0000

    Fix the install paths of our datafiles in setup.py.

2	2	setup.py

commit 5c776397080bec022ab02f8b8133b285959ae79f
Author: Chris Larson <clarson@kergoth.com>
Date:   2004-12-09 13:03:17 +0000

    Clean up the BBPATH mangling bits in the parser.

6	9	lib/bb/parse/BBHandler.py

commit 6fc7d4f0f7390b45cd8b2ee8207a4a96f10ac563
Author: Chris Larson <clarson@kergoth.com>
Date:   2004-12-09 12:40:43 +0000

    Fix the BBPATH mangling fix..

2	0	lib/bb/parse/BBHandler.py

commit 7726a4cab1fb7de0edb155f2397b81c3aea18e73
Author: Chris Larson <clarson@kergoth.com>
Date:   2004-12-09 12:32:18 +0000

    Add the location of the .bb file to BBPATH in the parser's handle() function rather than load_oefile, since we need it done for 'include'd files as well as those directly loaded by the 'bitbake' commandline tool.

7	2	lib/bb/fetch.py
0	8	lib/bb/make.py
3	0	lib/bb/parse/BBHandler.py

commit 034c2463b47ad09b92788e24b6ec5158ed14fdf3
Author: Chris Larson <clarson@kergoth.com>
Date:   2004-12-09 12:04:45 +0000

    Adapt bits to the new way of handling the debug level.

1	1	classes/base.bbclass
3	3	lib/bb/build.py

commit a699538fcfbb08c520985cc4d8d1256fb89e2c32
Author: Chris Larson <clarson@kergoth.com>
Date:   2004-12-09 10:27:57 +0000

    Apply patch from seb (proti) to fix OEDEBUG and add a debug commandline argument.

4	3	bin/bitbake
10	2	lib/bb/__init__.py

commit 066a946940373baeffb5655f395d7cff29d0c0c2
Author: Chris Larson <clarson@kergoth.com>
Date:   2004-12-09 10:13:47 +0000

    Vim syntax: bugfix in the match of 'def' lines.

1	1	contrib/vim/syntax/bb.vim

commit fb40858a226af5643cca4a3852ee0072bc6ccc05
Author: Chris Larson <clarson@kergoth.com>
Date:   2004-12-09 08:19:06 +0000

    Vim syntax update: let syntax/python.vim do the highlighting for the actual 'def' line, rather than ripping it apart and doing it ourselves.

5	4	contrib/vim/syntax/bb.vim

commit a19eaad79fe677ea72dff32e1f48ddc0c5d9a4c8
Author: Chris Larson <clarson@kergoth.com>
Date:   2004-12-08 23:57:05 +0000

    Rework the way we handle do_clean and do_mrproper so that the .oeclass that defines the task can make it only clean the package and not its dependencies, rather than hardcoding the knowledge in the bitbake command.

12	10	bin/bitbake

commit de2cced45f5fd4787eda5bef1833e963643a21d9
Author: Chris Larson <clarson@kergoth.com>
Date:   2004-12-08 23:04:42 +0000

    Mention --help when bitbake is called with no arguments.

2	1	bin/bitbake

commit e440b93fea60bcaac84d19e8d99561f73f0bc023
Author: Chris Larson <clarson@kergoth.com>
Date:   2004-12-08 22:54:02 +0000

    Update bitbake command usage information: s/bbmake/bitmake/g, and remove the incorrect info about what packages are built by default (thanks to phil for spotting it).

2	3	bin/bitbake

commit 0192abf5d06a3c2e0290a838cadadf303363336c
Author: Chris Larson <clarson@kergoth.com>
Date:   2004-12-08 22:48:08 +0000

    Make bbread spit out a nicer error when it encounters an IOError.

1	1	MANIFEST
6	1	bin/bbread
1	1	setup.py

commit 694a396abf10001d2b605bbb83e55ab44805a17f
Author: Chris Larson <clarson@kergoth.com>
Date:   2004-12-08 22:45:06 +0000

    Rename bbmake to bitbake.

0	0	bin/{bbmake => bitbake}

commit ee57d219e06892812e4216ac58051ec835976e6f
Author: Chris Larson <clarson@kergoth.com>
Date:   2004-12-08 22:44:31 +0000

    Add a 'buildfile' commandline option to bbmake, which makes bbbuild unnecessary.

52	14	bin/bbmake

commit 7f9131e7fd45924b36aaeb2a12f76b8ad2c327e3
Author: Chris Larson <clarson@kergoth.com>
Date:   2004-12-08 21:42:57 +0000

    Update the 'usage' information displayed by --help in bbimage and bbmake.

1	1	bin/bbimage
7	14	bin/bbmake
26	2	doc/manual/usermanual.xml

commit e0a6ff0140b0fd4a61d3330d3ea77b9db76824e0
Author: Chris Larson <clarson@kergoth.com>
Date:   2004-12-08 21:25:48 +0000

    Adjust whitespace handling in the vim syntax a bit.

3	3	contrib/vim/syntax/bb.vim

commit b742cd9b24d0171bb39c54fec94bcebd4047358b
Author: Chris Larson <clarson@kergoth.com>
Date:   2004-12-08 21:15:49 +0000

    Vim syntax: add a catchall which should flag anything which isn't explicitly matched as Error, thereby highlighting some incorrect syntax as such.

4	0	contrib/vim/syntax/bb.vim

commit 4f80be8f2dba4ae89c055ba42f3bf7e2826ee537
Author: Chris Larson <clarson@kergoth.com>
Date:   2004-12-08 21:11:11 +0000

    Vim syntax bugfix: make it a bit more tolerant about locating the end of bitbake shell & python functions (noticed zap_root_password's ending } was followed by whitespace).

4	4	contrib/vim/syntax/bb.vim

commit e234b8ac086a7f5a296ea3168dfb20789147af82
Author: Chris Larson <clarson@kergoth.com>
Date:   2004-12-08 21:05:42 +0000

    Vim syntax: match variables defined using ?=.

2	2	contrib/vim/syntax/bb.vim

commit 24fb9f524f1d40846983e8ede5f78573a11542fc
Author: Chris Larson <clarson@kergoth.com>
Date:   2004-12-08 21:04:31 +0000

    Vim syntax: match & highlight the 'fakeroot' flag for functions.

3	1	contrib/vim/syntax/bb.vim

commit 0669996d356dabd3fb52927e98105fe97bb6c970
Author: Chris Larson <clarson@kergoth.com>
Date:   2004-12-08 19:23:47 +0000

    Vim syntax: limit the areas in which variable dereferences are matched and highlighted.

7	7	contrib/vim/syntax/bb.vim

commit e8bc5b52481dbdcfefc531c6bc93d0023413fab4
Author: Chris Larson <clarson@kergoth.com>
Date:   2004-12-08 11:48:04 +0000

    Vim syntax update: bugfix: don't recognize an empty line as the end of a 'def' block, but only a line which isnt empty and which doesn't start with whitespace.

1	1	contrib/vim/syntax/bb.vim

commit 5b667a934f4d6778cb7327ccb58712a6d6e180b2
Author: Chris Larson <clarson@kergoth.com>
Date:   2004-12-08 11:40:49 +0000

    Vim syntax update: 1) Add EXPORT_FUNCTIONS to our list of valid statements, and 2) Add '.' to the variable character class (so that things like IMAGE_FSTYPE_ext2.gz are properly highlighted).

7	7	contrib/vim/syntax/bb.vim

commit 81fdab93a2a4fbb849c09f4f5e054ffb1ae69b20
Author: Chris Larson <clarson@kergoth.com>
Date:   2004-12-08 11:37:45 +0000

    Vim syntax update: match and highlight variable definitions flagged as 'export'.

4	1	contrib/vim/syntax/bb.vim

commit 4d1158774e8d312b299aa76fc54e8f3b5a3a4bd3
Author: Chris Larson <clarson@kergoth.com>
Date:   2004-12-08 11:33:35 +0000

    Vim syntax update: Fix the statements (include/inherit/addtask/addhandler) to only match at the beginning of a line, in an oe statement.

3	1	contrib/vim/syntax/bb.vim

commit a36a6361e3f17f7377f9f34734fecbb64d2403dc
Author: Chris Larson <clarson@kergoth.com>
Date:   2004-12-08 11:15:12 +0000

    Vim syntax update: highlight := variable assignment.

2	2	contrib/vim/syntax/bb.vim

commit 9b67e1bd7adb6427ffe3c655f19a0b39c73af3b3
Author: Chris Larson <clarson@kergoth.com>
Date:   2004-12-08 09:51:02 +0000

    oe to bb rename in oedev.sh.

3	3	contrib/bbdev.sh

commit 8bee675cbbf298a88d12c4ff3bf5c22ba5f09d9d
Author: Chris Larson <clarson@kergoth.com>
Date:   2004-12-08 09:46:09 +0000

    Vim syntax update: Fix the var deref in var overrides to be more versatile and highlight them as string rather than statement+identifier.

5	4	contrib/vim/syntax/bb.vim

commit f0d85aef1e1068e9a48ebfe48a859dc62ec86187
Author: Chris Larson <clarson@kergoth.com>
Date:   2004-12-08 09:22:27 +0000

    Vim syntax update: 1) Highlight the quotes around a string as a String rather than as a Statement (like .conf highlighting rather than .sh), and 2) Highlight the value of a bitbake variable even if it isn't quoted.

3	1	contrib/vim/syntax/bb.vim

commit 52ec4c06aff0249f464bb82e31f490c15e1c6039
Author: Chris Larson <clarson@kergoth.com>
Date:   2004-12-08 09:04:11 +0000

    Vim syntax update: Highlight overrides that include variable derefences (i.e. FILES_${PN}).

3	1	contrib/vim/syntax/bb.vim

commit 3c752fa378be5c713590bd57ad98ff7bc4f8a83a
Author: Chris Larson <clarson@kergoth.com>
Date:   2004-12-08 07:40:37 +0000

    Vim syntax update: highlight backslashes used as line continuation within strings as 'Special'.

4	2	contrib/vim/syntax/bb.vim

commit da387eb0b1744511989b8c725e0042e5a283efb5
Author: Chris Larson <clarson@kergoth.com>
Date:   2004-12-08 07:24:33 +0000

    Vim syntax update: match anonymous python functions with no specified name.

1	1	contrib/vim/syntax/bb.vim

commit dee4f44b1c31704d626961fa2f0a3f67aec851eb
Author: Chris Larson <clarson@kergoth.com>
Date:   2004-12-08 07:13:05 +0000

    Add copyright & license to the vim syntax file.

4	0	contrib/vim/syntax/bb.vim

commit ec8dc1fb5f6643500993d25bd0255f5c1bbfb9de
Author: Chris Larson <clarson@kergoth.com>
Date:   2004-12-08 07:10:38 +0000

    Add README to contrib/.

1	0	contrib/README

commit c1fdf58a62368972dfa6b59356a1821e9616ff1d
Author: Chris Larson <clarson@kergoth.com>
Date:   2004-12-08 07:09:11 +0000

    Vim syntax update: highlight the ending ':' on a 'def' line.

1	1	contrib/vim/syntax/bb.vim

commit 34c541795eec36ad56733fd79e5de4871fda525e
Author: Chris Larson <clarson@kergoth.com>
Date:   2004-12-08 06:56:41 +0000

    Vim syntax update: highlight definitions of variable flags.

12	0	contrib/vim/syntax/bb.vim

commit 638ccde60d053fd43ac443b568760e57a75d6c5d
Author: Chris Larson <clarson@kergoth.com>
Date:   2004-12-08 06:47:07 +0000

    Vim syntax update: highlight the 'def' as a Statement, and add highlighting of the bitbake 'addtask', 'addhandler', 'inherit', and 'include' statements.

5	2	contrib/vim/syntax/bb.vim

commit 5c7f13d325631467ef9eb63230c507062e92e022
Author: Chris Larson <clarson@kergoth.com>
Date:   2004-12-08 06:43:12 +0000

    Vim syntax update: highlight the 'def'd python functions as such.

13	2	contrib/vim/syntax/bb.vim

commit 7d63e5d1cd326c40df4254d3533217f2f39b87bd
Author: Chris Larson <clarson@kergoth.com>
Date:   2004-12-08 06:27:44 +0000

    Vim syntax update: highlight the shell functions as shell.

17	1	contrib/vim/syntax/bb.vim

commit f1ef83662b095987915b54a9fe7c7b1582cc0f2f
Author: Chris Larson <clarson@kergoth.com>
Date:   2004-12-08 06:11:54 +0000

    Start adding vim syntax highlighting.

74	0	contrib/vim/syntax/bb.vim

commit fdb617fca0006d147f89fe02e8267c7d8ce4b69f
Author: Chris Larson <clarson@kergoth.com>
Date:   2004-12-07 21:10:58 +0000

    Clean up after the aforementioned tests.

0	0	test

commit eb0fd860c50a482286068eb3bb73300859effab2
Author: Chris Larson <clarson@kergoth.com>
Date:   2004-12-07 21:10:34 +0000

    Yet another test of the hooks.

0	0	test

commit e8721bd5796a012f1d802c7c86106d75e644a67b
Author: Chris Larson <clarson@kergoth.com>
Date:   2004-12-07 21:08:18 +0000

    Test hooks.

0	0	test

commit d19ee0051cf47c6060af65b1c70325dbff086a67
Author: Chris Larson <clarson@kergoth.com>
Date:   2004-12-07 21:08:04 +0000

    Test hooks.

0	0	test

commit a2cb4cc56dd42e5a8ac54c5f4323d7c10d79b257
Author: Chris Larson <clarson@kergoth.com>
Date:   2004-12-07 21:02:42 +0000

    Rearrange repository.

0	1277	build/lib/bb/__init__.py
0	405	build/lib/bb/build.py
0	490	build/lib/bb/data.py
0	204	build/lib/bb/event.py
0	632	build/lib/bb/fetch.py
0	263	build/lib/bb/make.py
0	144	build/lib/bb/manifest.py
0	376	build/lib/bb/parse/BBHandler.py
0	194	build/lib/bb/parse/ConfHandler.py
0	76	build/lib/bb/parse/__init__.py
0	155	build/scripts-2.3/bbimage
0	688	build/scripts-2.3/bbmake
0	38	build/scripts-2.3/bbread
-	-	dist/bitbake-1.0.linux-i686.tar.gz

commit d91e57c44e923b6b65396515ff878199d43763a1
Author: Chris Larson <clarson@kergoth.com>
Date:   2004-12-07 20:55:41 +0000

    Initial import.

23	0	MANIFEST
47	30	bin/{oeimage => bbimage}
163	156	bin/{oemake => bbmake}
38	0	bin/bbread
0	62	bin/build/install
0	0	bin/commander/__init__.py
0	20	bin/commander/aboutdialog.py
0	154	bin/commander/aboutdialogbase.ui
0	8	bin/commander/appinfo.py
0	33	bin/commander/application.py
0	10	bin/commander/commander.pro
-	-	bin/commander/images/checked.png
-	-	bin/commander/images/do_compile.png
-	-	bin/commander/images/do_configure.png
-	-	bin/commander/images/do_install.png
-	-	bin/commander/images/do_patch.png
-	-	bin/commander/images/do_stage.png
-	-	bin/commander/images/do_unpack.png
-	-	bin/commander/images/package.png
-	-	bin/commander/images/unchecked.png
-	-	bin/commander/images/virtual.png
0	137	bin/commander/mainwindow.py
0	742	bin/commander/mainwindowbase.ui
0	61	bin/commander/packages.py
0	71	bin/commander/packageview.py
0	170	bin/commander/provideritem.py
0	205	bin/commander/pythonshell.py
0	126	bin/oe/parse/SRPMHandler.py
0	143	bin/oebuild
0	49	bin/oecommander
0	22	bin/oeread
0	0	bin/utils/__init__.py
0	73	bin/utils/daemon.py
0	10	bin/utils/itertools.py
0	1399	bin/utils/optparse.py
0	355	bin/utils/textwrap.py
20	11	{bin/oe => build/lib/bb}/__init__.py
39	26	{bin/oe => build/lib/bb}/build.py
25	12	{bin/oe => build/lib/bb}/data.py
19	6	{bin/oe => build/lib/bb}/event.py
124	113	{bin/oe => build/lib/bb}/fetch.py
87	70	{bin/oe => build/lib/bb}/make.py
17	2	{bin/oe => build/lib/bb}/manifest.py
64	48	bin/oe/parse/OEHandler.py => build/lib/bb/parse/BBHandler.py
61	51	{bin/oe => build/lib/bb}/parse/ConfHandler.py
24	13	{bin/oe => build/lib/bb}/parse/__init__.py
155	0	build/scripts-2.3/bbimage
688	0	build/scripts-2.3/bbmake
38	0	build/scripts-2.3/bbread
79	0	classes/base.bbclass
55	0	conf/bitbake.conf
0	59	contrib/bash-completion
31	0	contrib/bbdev.sh
-	-	dist/bitbake-1.0.linux-i686.tar.gz
0	0	bin/COPYING => doc/COPYING.GPL
17	0	doc/COPYING.MIT
0	7	doc/README
49	0	doc/manual/Makefile
281	0	doc/manual/html.css
222	0	doc/manual/usermanual.xml
1277	0	lib/bb/__init__.py
405	0	lib/bb/build.py
490	0	lib/bb/data.py
204	0	lib/bb/event.py
632	0	lib/bb/fetch.py
263	0	lib/bb/make.py
144	0	lib/bb/manifest.py
376	0	lib/bb/parse/BBHandler.py
194	0	lib/bb/parse/ConfHandler.py
76	0	lib/bb/parse/__init__.py
67	0	setup.py

commit 9633dc85c57a0a6de1b088b49e589513087c2720
Author: Phil Blundell <philb@gnu.org>
Date:   2004-12-04 11:45:11 +0000

    support "oemake --world" as a (preferred) alternative for "oemake world".

32	23	bin/oemake

commit 2f9ed9c4fd84ff99fba694925034750668a72582
Author: Phil Blundell <philb@gnu.org>
Date:   2004-12-03 19:52:22 +0000

    if an exception occurs, during parsing, show which file caused it.
    be sure to propagate KeyboardInterrupt up correctly.

5	0	bin/oe/make.py

commit aff3227b5e4a3dee9bceb120aac11f4bf3ac6409
Author: Chris Larson <clarson@kergoth.com>
Date:   2004-12-03 06:32:11 +0000

    Fix oemake 'world' logic bug.

8	1	bin/oemake

commit c56846698432184fd75441f032dd0c799be85495
Author: Chris Larson <clarson@kergoth.com>
Date:   2004-12-01 10:15:18 +0000

    Add an 'EXCLUDE_FROM_WORLD' variable to oemake, which doesn't imply brokenness, to be used by images, native and cross oeclasses, etc.

1	1	bin/oemake

commit 4b31672dd72768e5011624cfec33c5ebad41c30c
Author: Chris Larson <clarson@kergoth.com>
Date:   2004-12-01 00:54:39 +0000

    BUGFIX: oe.build.mkstamp had a hardcoded path to the stamps dir.

1	1	bin/oe/build.py

commit eece1ffe92678310dd7103076f6f3597ab4199a4
Author: Phil Blundell <philb@gnu.org>
Date:   2004-11-28 11:57:07 +0000

    add 'oemake -s' option to dump out a table of latest and preferred versions for all packages

106	1	bin/oemake

commit 4d679fc4c8fc54e7f5c28b0eba92880557b437b9
Author: Marcin Juszkiewicz <marcin@juszkiewicz.com.pl>
Date:   2004-11-19 11:26:33 +0000

    subversion use revisions not date

13	28	bin/oe/fetch.py

commit 4ec10e8622f1cc1584b8da2ea7652156e88660be
Author: Chris Larson <clarson@kergoth.com>
Date:   2004-11-19 11:25:46 +0000

    Attempt to correct an unintended consequence of the localdir fix.

2	2	bin/oe/fetch.py

commit fcbb6403f7da39693249204d60ab393966c8574e
Author: Chris Larson <clarson@kergoth.com>
Date:   2004-11-19 01:56:25 +0000

    Auto merged

1	1	bin/oe/fetch.py

commit d06559aa833cf97749d42ba5065fac3473e36ac3
Author: Phil Blundell <philb@gnu.org>
Date:   2004-10-31 17:46:28 +0000

    apply patch from Murray Jensen to fix lost CVS_RSH when doing incremental update

1	0	bin/oe/fetch.py

commit 82bc6c7f2199b22c9db882fde5ffbb065aa03dc0
Author: Chris Larson <clarson@kergoth.com>
Date:   2004-10-27 20:44:02 +0000

    Make oeread suck a bit less.

0	4	bin/oeread

commit 5c0dbde5161d9819a1e3e617cdd8ee71d31b0c7d
Author: Chris Larson <clarson@kergoth.com>
Date:   2004-10-27 18:51:58 +0000

    Call oe.data.init() rather than manually initializing the dictionary.

5	5	bin/oe/make.py
1	1	bin/oemake
1	1	bin/oeread

commit 0599b6f7bec334d775a04ee348ae7be66cc289d8
Author: Marcin Juszkiewicz <marcin@juszkiewicz.com.pl>
Date:   2004-10-22 23:16:45 +0000

    Auto merged

21	18	bin/oe/fetch.py

commit d4bbb29088161bbb35d3198f526805471b24afef
Author: Holger Schurig <schurig@mn-solutions.de>
Date:   2004-10-18 09:16:36 +0000

    allow for "-d /usr/src/CVS" parameter to cvs if you set
    SRC_URI = "cvs:///usr/src/CVS;module=mnci/qt3/mnrdp;method=dir"

7	4	bin/oe/fetch.py

commit 55b4c3c1c170b0a4fb1c7a2e9dca5d5b544c96a3
Author: Phil Blundell <philb@gnu.org>
Date:   2004-10-15 21:22:05 +0000

    back out previous mistaken change

1	5	bin/oe/build.py

commit bb2aac48e2eb42c1fcb36db80eaf08e547534e48
Author: Phil Blundell <philb@gnu.org>
Date:   2004-10-13 19:29:07 +0000

    add current task to OVERRIDES during execution to facilitate "EXTRA_OEMAKE_prepend_do-compile = '-j3'"

5	1	bin/oe/build.py

commit 26778d806e610a3c729bf6305292cada442d7a61
Author: Rene Wagner <rw@nelianur.org>
Date:   2004-10-01 16:08:09 +0000

    fix OEMASK handling

4	3	bin/oe/make.py

commit 3e39808b342d2ac766c1741bf214145f85a7b2c4
Author: Phil Blundell <philb@gnu.org>
Date:   2004-09-21 21:52:04 +0000

    also accept ".inc" as a legitimate file extension

1	1	bin/oe/parse/OEHandler.py

commit 7bacc66cf2b8fa3469cfac7f5e658dc0278ab386
Author: Chris Larson <clarson@kergoth.com>
Date:   2004-09-18 06:12:07 +0000

    Add -n/--name option to oeimage, to allow us to force the IMAGE_NAME and thereby ensure it is what we expect it to be.

7	1	bin/oeimage

commit 0374cbc1df961c1576490a7dbdb19c6f7081aa1a
Author: Marcin Juszkiewicz <marcin@juszkiewicz.com.pl>
Date:   2004-08-26 09:05:29 +0000

    quiet cvs/svn tarball creating

2	2	bin/oe/fetch.py

commit 59622413a2f42a94b09d418e345cc6e9d227347d
Author: Marcin Juszkiewicz <marcin@juszkiewicz.com.pl>
Date:   2004-08-25 09:04:57 +0000

    subversion fetcher based on cvs one

169	0	bin/oe/fetch.py

commit b0fc04b3b76c3dda32f548bb6409cb8815ea6dd5
Author: Michael 'Mickey' Lauer <mickey@vanille-media.de>
Date:   2004-08-10 14:52:47 +0000

    update

7	1	doc/README

commit 4afd13ced66bf62738a01ea8d32080d913567bbd
Author: Phil Blundell <philb@gnu.org>
Date:   2004-08-07 14:35:46 +0000

    use _ not - to separate pv from pr in PREFERRED_VERSION_foo

1	1	bin/oemake

commit 783747de68347d49d0c50c93adbe16504be8e865
Author: Phil Blundell <philb@gnu.org>
Date:   2004-08-07 14:20:25 +0000

    admit blank lines as legitimate python content

1	1	bin/oe/parse/OEHandler.py

commit 2bf8b978a64315b1f444abf789441beb7b8b2a2f
Author: Phil Blundell <philb@gnu.org>
Date:   2004-08-07 13:54:42 +0000

    rework handling of comments, blank lines and \-continuation

14	9	bin/oe/parse/OEHandler.py

commit 58d600d8148b4a62604b1b53cabc6a2ba9cc45e4
Author: Michael 'Mickey' Lauer <mickey@vanille-media.de>
Date:   2004-08-06 21:44:00 +0000

    use an empty OEMASK if none is set

1	1	bin/oe/make.py

commit ccd66bba85442f46223b7cc514cd590829e5d37f
Author: Phil Blundell <philb@gnu.org>
Date:   2004-08-05 20:33:18 +0000

    only apply ?= assignments if variable is None, not if it is the empty string

1	1	bin/oe/parse/ConfHandler.py

commit 873dbc1f353c9807f0013a4b8cc8f8eee7ef80b5
Author: Chris Larson <clarson@kergoth.com>
Date:   2004-08-05 00:24:02 +0000

    Add 'localdir' parameter to the cvs fetcher, specifically for binutils cvs, for whom
    the 'binutils' module creates a local 'src' directory.

6	1	bin/oe/fetch.py

commit abe2e2833c201db44feb68e964541db74514e614
Author: Chris Larson <clarson@kergoth.com>
Date:   2004-08-04 19:56:10 +0000

    Change oeread behavior to act like showdata by default.

13	24	bin/oeread

commit c4f697a1028ef1756b7b19c98cc3e3858495f6ae
Author: Chris Larson <clarson@kergoth.com>
Date:   2004-08-04 19:55:37 +0000

    Don't hardcode the location of fakeroot, to allow us to ASSUME_PROVIDED fakeroot-native.

1	1	bin/oe/build.py

commit 9fd0c84611e49db92e94bbd94adf62aecd5ef301
Author: Chris Larson <clarson@kergoth.com>
Date:   2004-08-04 19:54:57 +0000

    Show filename of log when displaying it, on failure.

1	1	bin/oe/build.py

commit e5d034881df791902dd82fe9d6901fa11f0de2bb
Author: Phil Blundell <philb@gnu.org>
Date:   2004-08-04 15:51:28 +0000

    remove special-casing of tag=HEAD

2	2	bin/oe/fetch.py

commit ec09892511a43183785ebba7230f005690d60008
Author: Michael 'Mickey' Lauer <mickey@vanille-media.de>
Date:   2004-08-04 15:18:28 +0000

    improve keyboard error handling

1	0	bin/oemake

commit 3c05929dbe404cefc93838996d5390a8893eb6e5
Author: Michael 'Mickey' Lauer <mickey@vanille-media.de>
Date:   2004-08-04 15:17:07 +0000

    improve performance by compiling the OEMASK regexp out of the loop
    catch faulty OEMASKs and emit a user friendly error message

10	7	bin/oe/make.py

commit da8273d8164626e48755f26a487fd075388a24d4
Author: Phil Blundell <philb@gnu.org>
Date:   2004-08-02 11:56:03 +0000

    honour CVS_TARBALL_STASH_${PN}

6	1	bin/oe/fetch.py

commit 0af273b85c60279570acd5b06784d06d7c8a7d12
Author: Phil Blundell <philb@gnu.org>
Date:   2004-07-26 21:53:09 +0000

    add support for DEFAULT_PREFERENCE when selecting version to build (sorts higher than version)

6	2	bin/oemake

commit 374e997b2adecbe3b969fe63a14d65123972bb46
Author: Michael 'Mickey' Lauer <mickey@vanille-media.de>
Date:   2004-07-25 10:32:17 +0000

    receive tuple

2	2	bin/oebuild

commit 54d2db6dc040d43dc2f1ae54e7d9b21926baca87
Author: Michael 'Mickey' Lauer <mickey@vanille-media.de>
Date:   2004-07-24 16:55:14 +0000

    count number of parsed, cached, skipped packages and print a statistic line

8	4	bin/oe/make.py

commit e17c43afa5ae589afea2ce467f8cf2edd82f8ca3
Author: Phil Blundell <philb@gnu.org>
Date:   2004-07-22 14:35:49 +0000

    improve diagnostics when bad things happen during expansion

13	9	bin/oe/data.py

commit 3cb8d3c07205368095bb1391fb903c0108aea0f1
Author: Michael 'Mickey' Lauer <mickey@vanille-media.de>
Date:   2004-07-20 12:53:21 +0000

    reality check

1	3	bin/commander/aboutdialogbase.ui

commit 7ac6ddf4c4851590fea07992dcddc13bfe3c8f79
Author: Michael 'Mickey' Lauer <mickey@vanille-media.de>
Date:   2004-07-20 12:53:21 +0000

    get dir without having to rely on OEDIR

1	1	bin/commander/appinfo.py

commit 2e4ed63c1848b9e6d1f9a467c4b9760144ee7563
Author: Michael 'Mickey' Lauer <mickey@vanille-media.de>
Date:   2004-07-19 15:54:53 +0000

    slightly improve provider hash progress output

8	16	bin/oemake

commit 2492ddb5466f0de8edae4205e84786f83bf4a438
Author: Chris Larson <clarson@kergoth.com>
Date:   2004-07-17 00:51:51 +0000

    mvdir

0	0	{tools => contrib}/bash-completion

commit c71ae4ab664419cc7d53277fb9e70f68982bf8be
Author: Phil Blundell <philb@gnu.org>
Date:   2004-07-03 00:19:28 +0000

    fix formatting of diagnostic message

1	1	bin/oemake

commit 8de7df8b772d2c058f522bd212ef4b564eda3b34
Author: Phil Blundell <philb@gnu.org>
Date:   2004-07-02 18:35:12 +0000

    add support for PREFERRED_VERSION and oefile priority

164	40	bin/oemake

commit 357f7b932aa8f2c41dd7be8e99a3a5a672d3f94c
Author: Chris Larson <clarson@kergoth.com>
Date:   2004-07-02 02:25:04 +0000

    Import oe.build in the OEHandler.

1	1	bin/oe/parse/OEHandler.py

commit d2328aea13b0df12ca72da15acafa47d612cf20a
Author: Chris Larson <clarson@kergoth.com>
Date:   2004-07-01 23:29:02 +0000

    Kill off old unmaintained docs.

1	61	doc/README

commit 916eadd83a3d3b8990baf8d22c9bfbdcfbe2c2f8
Author: Chris Larson <clarson@kergoth.com>
Date:   2004-07-01 23:29:02 +0000

    Delete: doc/TRANSITION

0	54	doc/TRANSITION

commit 3c2969870da874f572adc59b11d22ee6a5e34c05
Author: Chris Larson <clarson@kergoth.com>
Date:   2004-07-01 23:29:02 +0000

    Delete: doc/TODO

0	128	doc/TODO

commit d051e11ee9763fa48970e75b42e11d3c5e7df8a1
Author: Chris Larson <clarson@kergoth.com>
Date:   2004-07-01 23:29:02 +0000

    Delete: doc/FAQ

0	23	doc/FAQ

commit aa6c133778eef78ec3526dd4004187d8950a83a5
Author: Chris Larson <clarson@kergoth.com>
Date:   2004-07-01 23:29:02 +0000

    Delete: doc/DEVEL

0	54	doc/DEVEL

commit 66e912e920d76890be2feb6ebbb013af2a77de0e
Author: Chris Larson <clarson@kergoth.com>
Date:   2004-07-01 23:29:02 +0000

    Delete: bin/parse_manifest

0	21	bin/parse_manifest

commit 5002fff5d33dc9432aeab68c14ffde1366e85185
Author: Chris Larson <clarson@kergoth.com>
Date:   2004-07-01 23:29:02 +0000

    Delete: bin/oemaked

0	37	bin/oemaked

commit bfd3c3ba95f992c83c8c0dbf9df2856dee58bd79
Author: Chris Larson <clarson@kergoth.com>
Date:   2004-07-01 23:29:02 +0000

    Delete: bin/oeinstall

0	205	bin/oeinstall

commit aff77da631e5ec837c353ce41e688ed1f2c57ddc
Author: Chris Larson <clarson@kergoth.com>
Date:   2004-07-01 23:29:02 +0000

    Delete: bin/file_manifest

0	42	bin/file_manifest

commit 27eaf94e7dee600f0b9f1406c6c1c407e0cfb82c
Author: Chris Larson <clarson@kergoth.com>
Date:   2004-07-01 23:29:02 +0000

    Delete: bin/README

0	5	bin/README

commit ef4f4ede5a51d300d6c445fa1d2a163c99ddc97e
Author: Chris Larson <clarson@kergoth.com>
Date:   2004-07-01 23:19:21 +0000

    Warn about usage of OEDIR.

3	0	bin/oe/parse/ConfHandler.py

commit cc83f35dce0b53017edabf87c79d34b29c726152
Author: Chris Larson <clarson@kergoth.com>
Date:   2004-07-01 00:21:53 +0000

    Move set_additional_vars call.

1	1	bin/oe/parse/OEHandler.py

commit 8b5fe678ad6a62e7bfeda56b341f701706c12381
Author: Phil Blundell <philb@gnu.org>
Date:   2004-06-27 19:16:07 +0000

    second attempt at pickling functions

6	6	bin/oe/make.py
2	3	bin/oe/parse/OEHandler.py

commit 0dd3dbe4d65ab8e4b6f99ff75f10ba917f465309
Author: Phil Blundell <philb@gnu.org>
Date:   2004-06-27 17:43:44 +0000

    store list of defined functions as "__functions" in metadata

4	1	bin/oe/parse/OEHandler.py

commit 55f4ec5e0b9d7c2e4c9caf6cde11e9dba4bdc4ee
Author: Phil Blundell <philb@gnu.org>
Date:   2004-06-27 17:43:44 +0000

    also pickle the functions listed in __functions

5	0	bin/oe/make.py

commit 2592e67cf6b575e660a7af8a0c7c45593fdf345c
Author: Phil Blundell <philb@gnu.org>
Date:   2004-06-26 08:26:19 +0000

    remove 'return' from call thunk for inherited functions, so that appending works

1	1	bin/oe/parse/OEHandler.py

commit 2a853825317fbed605f463af2408563eb1528a45
Author: Chris Larson <clarson@kergoth.com>
Date:   2004-06-22 19:50:36 +0000

    Allow _prepend/_append/_delete variable flags to flow from unexpanded variable names to expanded ones (e.g. FILES_${PN} -> FILES_packagename)

10	0	bin/oe/data.py

commit 876ae6e903ff11ef783574bb34171f7d8040e160
Author: Holger Hans Peter Freyther <zecke@selfish.org>
Date:   2004-06-21 21:21:01 +0000

    SRC_URI_append_machine = foo
    Was broken. update_data() was called before the OVERRIDES were completed.
    Now we keep the additional information until a valid machine is there. They don't hurt anyway.

8	4	bin/oe/data.py

commit 604ca04067dac9690f819f0ad6761ab4016f5137
Author: Phil Blundell <philb@gnu.org>
Date:   2004-06-12 22:41:11 +0000

    trap oe.build exceptions at top level to avoid python traceback spew

9	1	bin/oemake

commit f7da1d5fbb642ea52daf7621a76d325bdf160afc
Author: Phil Blundell <philb@gnu.org>
Date:   2004-06-12 19:26:28 +0000

    if a build fails, re-throw the exception rather than trying other providers

2	2	bin/oemake

commit 3869261fc8740f164bf65c1f1a6bec552b31b58a
Author: Marcin Juszkiewicz <marcin@juszkiewicz.com.pl>
Date:   2004-06-12 13:50:44 +0000

    oemake BUGFIX: only display the progress bar when stdout is a tty. Otherwise just show when the has building starts and ends.

18	11	bin/oemake

commit 0b2f029ac822b8ef2abc0cc9ceebfddf73566bd0
Author: Phil Blundell <philb@gnu.org>
Date:   2004-06-12 11:54:24 +0000

    automatically insert a leading/trailing space during +=/=+ catenations

2	2	bin/oe/parse/ConfHandler.py

commit d724acd3d2ee3088677718353371c96d7b5d168e
Author: Michael 'Mickey' Lauer <mickey@vanille-media.de>
Date:   2004-06-06 21:33:24 +0000

59	0	tools/bash-completion

commit 92d4c06d83e578b17b5ebbeda1d52fa745e74826
Author: Phil Blundell <philb@gnu.org>
Date:   2004-06-06 14:21:31 +0000

    allow / in variable names

2	2	bin/oe/parse/ConfHandler.py

commit 31fdc714c4347a931e3f060d6faf278c3085f67a
Author: Phil Blundell <philb@gnu.org>
Date:   2004-06-06 13:08:47 +0000

    add support for PREFERRED_PROVIDER_<virtual>

10	6	bin/oemake

commit 5b9b1d5b34223c73739481f8b8373ea03d3a6ebf
Author: Phil Blundell <philb@gnu.org>
Date:   2004-06-04 19:19:23 +0000

    add progress bar during provider hash building

25	2	bin/oemake

commit d60bcd4f10812c38f580ad65ec290808d19261d3
Author: Chris Larson <clarson@kergoth.com>
Date:   2004-06-01 23:54:42 +0000

    Minor indentation change - no hard tabs in the oe core.

4	4	bin/oe/data.py

commit f8c2af5215fa5e1daee24d31dcafc8b2bed102c7
Author: Phil Blundell <philb@gnu.org>
Date:   2004-06-01 23:49:46 +0000

    add oe.data.inherits_class()

6	0	bin/oe/data.py

commit 316e69b50c94795322f9bebd476024c4850b7e82
Author: Phil Blundell <philb@gnu.org>
Date:   2004-06-01 23:22:38 +0000

    remove bogus length check in expand() to fix meta-opie

0	3	bin/oe/data.py

commit 27aaaf05d86ae2e438a23fd308b255f0ccbb4d62
Author: Chris Larson <clarson@kergoth.com>
Date:   2004-05-27 05:15:57 +0000

    BUGFIX: correct indentation on that build debugging cset.

7	7	bin/oe/build.py

commit 75fd96e8844935e716c19e3ed823d5fae3ed15b2
Author: Chris Larson <clarson@kergoth.com>
Date:   2004-05-27 05:03:02 +0000

    Adapt oe.build code to pipe our logs through tee if OEDEBUG is set.

10	2	bin/oe/build.py

commit 83ef6a0cd741c6ca03ca8766958110175d64b410
Author: Holger Schurig <schurig@mn-solutions.de>
Date:   2004-05-25 08:56:08 +0000

    i am not executable

0	1	bin/oe/make.py
0	1	bin/oe/manifest.py

commit 665ce415b73f166baffbe6ac86bb2a55272f7a22
Author: Chris Larson <clarson@kergoth.com>
Date:   2004-05-22 16:51:59 +0000

    Deal with really annoying failure when the build code tries to return to a dir that doesnt exist.

2	1	bin/oe/build.py

commit 99fad5fb7fdd9ff54334ad6aa807055ce6354786
Author: Chris Larson <clarson@kergoth.com>
Date:   2004-05-22 01:08:31 +0000

    Remove unnecessary decodeurl debugging.

7	7	bin/oe/__init__.py

commit d91c7e6a716531804d36c62b5379055868552a2c
Author: Chris Larson <clarson@kergoth.com>
Date:   2004-05-22 01:04:23 +0000

    Bugfix in encodeurl per the recent decodeurl changes.

11	10	bin/oe/__init__.py

commit 63e2fc7f194063459f1e7e718dbdd14222b592ab
Author: Chris Larson <clarson@kergoth.com>
Date:   2004-05-22 00:57:22 +0000

    Bugfix in decodeurl's uri regex;  the previous version was losing parm's and chopping off the last char of the host in certain cases.

18	11	bin/oe/__init__.py

commit 2ecc73b853fff8b249d9d782b7138a01b20eb5f8
Author: Chris Larson <clarson@kergoth.com>
Date:   2004-05-22 00:25:30 +0000

    Rework decodeuri's regular expression for the uri to handle relative paths, and to use named groups for clarity.

17	17	bin/oe/__init__.py

commit 6cc5c5d8a35f15ccc8dce3e6fe780abd9c1255dd
Author: Chris Larson <clarson@kergoth.com>
Date:   2004-05-22 00:25:30 +0000

    Handle relative file:// paths.

11	1	bin/oe/fetch.py

commit 18b7a2a39c8dad827dc48e4fee268f5a8bcf0dbb
Author: Chris Larson <clarson@kergoth.com>
Date:   2004-05-22 00:14:36 +0000

    Fix A variable.

1	1	bin/oe/parse/OEHandler.py

commit 8f7b888deb240e53729b2aa6f7c4a9ada356365b
Author: Chris Larson <clarson@kergoth.com>
Date:   2004-05-21 23:51:48 +0000

    Dump a useful error message when our attempt to populate the 'A' environment variable fails due to a malformed url.

3	0	bin/oe/parse/OEHandler.py

commit 55d1075d81a0575cd3bde925e31c1626605ac1c7
Author: Holger Schurig <schurig@mn-solutions.de>
Date:   2004-05-19 12:01:39 +0000

    Delete: bin/oemakepkgs

0	194	bin/oemakepkgs

commit 0c7b449fa9cfbef80be5bbf2b91796247fdaa45e
Author: Chris Larson <clarson@kergoth.com>
Date:   2004-05-18 19:22:26 +0000

    Bugfix in OEPATH mangling when loading a .oe's metadata.  Previously the mangling was never undone, so the OEPATH grew to insane proportions, which made my xargs unhappy.

4	2	bin/oe/make.py

commit 0ded6c7ba6ba27c1fc0d1c7c2adbeda673ebd15c
Author: Phil Blundell <philb@gnu.org>
Date:   2004-05-17 19:33:24 +0000

    allow + and - in function names

1	1	bin/oe/parse/OEHandler.py

commit 4e42d152c93007490becb97a905844c6051e7851
Author: Phil Blundell <philb@gnu.org>
Date:   2004-05-17 19:26:16 +0000

    correct line numbers when handling backslash-continuation

1	0	bin/oe/parse/OEHandler.py

commit b21207b16efbeb3f70355fc397888bea31e61e54
Author: Chris Larson <clarson@kergoth.com>
Date:   2004-05-15 08:51:33 +0000

    Allow specifying rsh=[rsh cmd] in the cvs URI, so as to avoid manually screwing with CVS_RSH.

8	0	bin/oe/fetch.py

commit 81fd1418ade0d06e3e487f0d87868f03b5a6dd78
Author: Chris Larson <clarson@kergoth.com>
Date:   2004-05-15 04:08:52 +0000

    Display actual cause of a failure to open a .oe in oe.make.

2	2	bin/oe/make.py

commit 236c3e1bed1983f3fbdd05ad9795688c67f6b985
Author: Chris Larson <clarson@kergoth.com>
Date:   2004-05-14 00:17:42 +0000

    Correct the way we mkdir CACHE to use oe.mkdirhier (like mkdir -p rather than mkdir).

1	1	bin/oe/make.py

commit 14dedcd8e3527051839356fbdedaad7de5e1966e
Author: Michael 'Mickey' Lauer <mickey@vanille-media.de>
Date:   2004-05-13 13:05:43 +0000

    add documentation about common commands

11	10	bin/oemake

commit a2913633accd4f29a2dda02ead9ff2e242182e55
Author: Gerald Britton <gbritton@doomcom.org>
Date:   2004-05-09 07:24:15 +0000

    update data after anon funcs

1	0	bin/oe/parse/OEHandler.py

commit 47feded82168c501b08ea570bbc8a0a056f72b63
Author: Chris Larson <clarson@kergoth.com>
Date:   2004-05-09 06:06:05 +0000

    kill off some remnant tabs

2	2	bin/oe/parse/ConfHandler.py
3	3	bin/oe/parse/OEHandler.py
4	4	bin/oebuild
9	9	bin/oemakepkgs

commit c58ff91f983fc26b1459770d2c9988fa584c2bb0
Author: Chris Larson <clarson@kergoth.com>
Date:   2004-05-09 06:06:05 +0000

    Kill off some trailing whitespace

5	5	bin/oeimage
7	7	bin/oemake

commit b16f653bb9a6d7fb2a00de0808b54cf9355042e0
Author: Chris Larson <clarson@kergoth.com>
Date:   2004-05-09 05:51:18 +0000

    Correct an indentation bug, add some missing modelines, and correct all the modelines to no longer set tw, and to set sts.

12	10	bin/oe/__init__.py
1	1	bin/oe/build.py
1	1	bin/oe/data.py
1	1	bin/oe/event.py
1	1	bin/oe/fetch.py
1	1	bin/oe/make.py
1	1	bin/oe/manifest.py
1	1	bin/oe/parse/ConfHandler.py
1	1	bin/oe/parse/OEHandler.py
1	1	bin/oe/parse/SRPMHandler.py
1	1	bin/oe/parse/__init__.py
2	0	bin/oebuild
2	0	bin/oeimage
2	0	bin/oeinstall
2	0	bin/oemake
2	0	bin/oemaked
2	0	bin/oemakepkgs
2	0	bin/oeread
2	0	bin/parse_manifest

commit bbf97f7e23dbb4f45c4bac7d52b208c80cf58bdd
Author: Chris Larson <clarson@kergoth.com>
Date:   2004-05-09 05:37:10 +0000

    Indentation brokenness fixes.

8	10	bin/oe/__init__.py
2	2	bin/oemake

commit ef800a21b207a6ae6292dd6fff56e5e6fa585c7e
Author: Chris Larson <clarson@kergoth.com>
Date:   2004-05-09 05:34:34 +0000

    Mixed indentation is BAD.

56	56	bin/oemake

commit 9bc652e675c9f1d3e278bbcb9bf671bd50f4dac2
Author: Chris Larson <clarson@kergoth.com>
Date:   2004-05-09 05:26:34 +0000

    Whitespace changes.  Reformat things to better match the usual python indentation style, and add vim & emacs modelines to make it painless.

41	41	bin/build/install
10	8	bin/oe/__init__.py
3	1	bin/oe/build.py
370	368	bin/oe/data.py
107	105	bin/oe/event.py
365	363	bin/oe/fetch.py
43	41	bin/oe/make.py
115	113	bin/oe/manifest.py
147	144	bin/oe/parse/ConfHandler.py
303	300	bin/oe/parse/OEHandler.py
98	95	bin/oe/parse/SRPMHandler.py
29	26	bin/oe/parse/__init__.py
80	80	bin/oebuild
48	48	bin/oeimage
132	132	bin/oeinstall
271	271	bin/oemake
16	16	bin/oemaked
98	98	bin/oemakepkgs
21	21	bin/oeread
7	7	bin/parse_manifest

commit 38cf5e2107120c31f87d788175b9af1b72de2fab
Author: Chris Larson <clarson@kergoth.com>
Date:   2004-05-09 05:26:34 +0000

    Delete: bin/oespawn

0	131	bin/oespawn

commit 0a2296dea42d287da3e0b900e32fbf429bd29daa
Author: Michael 'Mickey' Lauer <mickey@vanille-media.de>
Date:   2004-05-08 22:47:20 +0000

    Auto merged

1	1	bin/oemake

commit 62ecb02fadfe2f96282a37cca8ced79188924172
Author: Chris Larson <clarson@kergoth.com>
Date:   2004-05-08 22:46:02 +0000

    oemake BUGFIX: only display the spinner when stdout is a tty.  Otherwise just show when the parsing starts and ends.

11	2	bin/oemake

commit 9f0b4f4faf9fc5ea92b48a0845b64e1a4df0efa3
Author: Chris Larson <clarson@kergoth.com>
Date:   2004-05-08 22:36:28 +0000

    Fix oemake -c clean to not clean the dependency tree for a package.

16	11	bin/oemake

commit 99a86a58be7589e82367466a5bb7345fb3a439e8
Author: Michael 'Mickey' Lauer <mickey@vanille-media.de>
Date:   2004-05-08 12:59:11 +0000

    exclude BROKEN packages from world - patch courtesy pb_.

2	0	bin/oemake

commit 9e5c1869021a7dce754d12ffc8afbfa6949e0d6c
Author: Michael 'Mickey' Lauer <mickey@vanille-media.de>
Date:   2004-05-04 19:26:05 +0000

    make += and =+ work when the variable was not previously defined - patch courtesy pb_.

2	2	bin/oe/parse/ConfHandler.py

commit 5f497e20ad5c41e2a377cb2f004c8768c5de7f53
Author: Michael 'Mickey' Lauer <mickey@vanille-media.de>
Date:   2004-05-03 20:31:17 +0000

    add support for CVS_TARBALL_STASH in fetch.py.  Set this to http://www.treke.net/oe/source/ in local.conf if you want to use tarballs in preference to direct CVS pulls - patch courtesy pb_.

13	1	bin/oe/fetch.py

commit 2679505d7e4294259aa3813843431faf50c6a64f
Author: Michael 'Mickey' Lauer <mickey@vanille-media.de>
Date:   2004-05-03 19:45:25 +0000

    avoid python traceback spew when exceptions are thrown during parsing - patch courtesy pb_.

11	8	bin/oebuild

commit 52ab9ffc08d265f3a5150cf4b85da118e6a6fd9b
Author: Michael 'Mickey' Lauer <mickey@vanille-media.de>
Date:   2004-05-03 11:43:16 +0000

    avoid python crash if latest version of a package becomes ineligible - patch courtesy pb_.

3	0	bin/oemake

commit 62ec27caa02d56265105500943998c2033f7fd0b
Author: Michael 'Mickey' Lauer <mickey@vanille-media.de>
Date:   2004-05-02 23:44:37 +0000

    process all cvs:// URIs even if one is already checked out - patch courtesy pb_.

1	1	bin/oe/fetch.py

commit 61b5c6d1ead0de5678c5a566d3b939fcac22a66b
Author: Michael 'Mickey' Lauer <mickey@vanille-media.de>
Date:   2004-04-30 18:11:48 +0000

    support += and =+ syntax for immediate prepend and append - patch courtesy pb_.

5	1	bin/oe/parse/ConfHandler.py

commit e4b737e72d21b372cb0b5889a2efbfc60feb02ba
Author: Michael 'Mickey' Lauer <mickey@vanille-media.de>
Date:   2004-04-30 17:12:27 +0000

    expand ASSUME_PROVIDED correctly - patch courtesy pb_.

1	1	bin/oemake

commit 53eea36464fcd7b8ba1c7c5113c99a69c841cac1
Author: Michael 'Mickey' Lauer <mickey@vanille-media.de>
Date:   2004-04-30 16:12:38 +0000

    fix python crash if cache contains no dependency information - patch courtesy pb_.

9	7	bin/oe/make.py

commit 32c7ed40732fd4e8ccb416bdad1064265d8e8dbf
Author: Michael 'Mickey' Lauer <mickey@vanille-media.de>
Date:   2004-04-30 15:33:33 +0000

    another try at importing ASSUME_PROVIDED patch - patch courtesy pb_.

101	96	bin/oemake

commit e98ba885428efbaa943a4bc369e0f0e41fc87c8a
Author: Michael 'Mickey' Lauer <mickey@vanille-media.de>
Date:   2004-04-30 15:26:34 +0000

    add dependency tracking for parse cache - patch courtesy pb_.

15	2	bin/oe/make.py
6	0	bin/oe/parse/ConfHandler.py
5	0	bin/oe/parse/OEHandler.py
16	0	bin/oe/parse/__init__.py

commit 28215a94d4317f56f350e2a98fb7f1d056d70e88
Author: Michael 'Mickey' Lauer <mickey@vanille-media.de>
Date:   2004-04-30 10:27:18 +0000

    first shot at caching .oe files

42	3	bin/oe/make.py

commit d341c2e9e047808eaa5dfe71bb3a9eb1b65e7079
Author: Chris Larson <clarson@kergoth.com>
Date:   2004-04-29 23:22:35 +0000

    Unbork prevention of the run.* script removal via OEDEBUG.

1	1	bin/oe/build.py

commit 1258f8080b927cb8e1d255d80bdd370df866a941
Author: Michael 'Mickey' Lauer <mickey@vanille-media.de>
Date:   2004-04-29 21:55:32 +0000

    add option '-p' to quit after parsing. this is nice for doing benchmarks
    add option '-d' to explicitly disallow using psyco.
    use the psyco JIT compiler when available

22	1	bin/oemake

commit 9657ec0206f3447a5471e09d01fb7f31fbdea1e5
Author: Michael 'Mickey' Lauer <mickey@vanille-media.de>
Date:   2004-04-28 09:10:21 +0000

    import sets below to give the Python version check a chance

1	1	bin/oemake

commit 077af4e7f06d25345071bb62603886342ee2d6d6
Author: Michael 'Mickey' Lauer <mickey@vanille-media.de>
Date:   2004-04-27 07:27:17 +0000

    Import patch tmpfile

8	2	bin/oemake

commit 5fa3f6ec012b97f3a10e26c51b8b5feb4ab57a72
Author: Michael 'Mickey' Lauer <mickey@vanille-media.de>
Date:   2004-04-26 15:36:01 +0000

    improve error message

2	2	bin/oemake

commit ceb141ca213de87d06d62c04f20df16dd7f470cf
Author: Chris Larson <clarson@kergoth.com>
Date:   2004-04-25 17:55:28 +0000

    Kill one instance of KeyboardInterrupt being swallowed (in the variable expansion code).

2	0	bin/oe/data.py

commit 1a71b939608f9eb72edb7cecec72718149200caf
Author: Michael 'Mickey' Lauer <mickey@vanille-media.de>
Date:   2004-04-25 10:22:45 +0000

    Import patch tmpfile

15	0	bin/oemake

commit c5471ece0ecc5dfa6f279bb75bdbcaa0f5ea86a1
Author: Michael 'Mickey' Lauer <mickey@vanille-media.de>
Date:   2004-04-24 17:27:44 +0000

    Import patch tmpfile

1	1	bin/oe/make.py

commit 123e0185b595a942af768c0d9cd5b36d3544db4e
Author: Michael 'Mickey' Lauer <mickey@vanille-media.de>
Date:   2004-04-23 21:24:13 +0000

    Import patch tmpfile

3	37	bin/oebuild

commit fdbfa74eaa13448611f710cd071b2644cad25a87
Author: Michael 'Mickey' Lauer <mickey@vanille-media.de>
Date:   2004-04-23 21:23:55 +0000

    Import patch tmpfile

3	2	bin/oe/make.py
2	2	bin/oe/parse/OEHandler.py
3	0	bin/oe/parse/__init__.py
16	16	bin/oemake

commit adb4e15a0d2c884a4115ce8e40a5fda0ef384ca6
Author: Michael 'Mickey' Lauer <mickey@vanille-media.de>
Date:   2004-04-23 18:58:26 +0000

    Import patch tmpfile

14	6	bin/oemake

commit b5a6b767149764037bed755dfbdfa8d51625c063
Author: Michael 'Mickey' Lauer <mickey@vanille-media.de>
Date:   2004-04-23 13:04:37 +0000

    fix off-by-one error in progress-callback

1	1	bin/oe/make.py

commit e034b6ed5fbd92a174e267bf2b26aa61f839c9dd
Author: Chris Larson <clarson@kergoth.com>
Date:   2004-04-21 22:17:28 +0000

    Add 'PREMIRRORS' support, which allows you to use a mirror by -default- instead of the uri listed in the .oe.  This is useful for a company or individual that wants to default to a local mirror, falling back to upstream.

13	3	bin/oe/fetch.py

commit 4179b854c08df4937925917ebf81d76f65ecd9bc
Author: Gerald Britton <gbritton@doomcom.org>
Date:   2004-04-21 05:20:52 +0000

    make 'set -e' in scripts actually work

1	1	bin/oe/build.py

commit 781ad5d3bd5c3763152c98c42932808aac481558
Author: Chris Larson <clarson@kergoth.com>
Date:   2004-04-20 23:32:38 +0000

    Rename: bin/oemake2 -> bin/oemake

247	133	bin/oemake
0	320	bin/oemake2

commit 718dbce1cc34ba7890660deb5136b99a7141ef6f
Author: Michael 'Mickey' Lauer <mickey@vanille-media.de>
Date:   2004-04-20 22:00:46 +0000

    Import patch tmpfile

5	1	bin/oe/data.py

commit 03e0ff9a97b9d259601f061f907c16e455e59a8d
Author: Michael 'Mickey' Lauer <mickey@vanille-media.de>
Date:   2004-04-20 17:57:03 +0000

    Import patch tmpfile

66	47	bin/oemake2

commit 8262012a90273a4726ebaaf5c4da61262542e69d
Author: Michael 'Mickey' Lauer <mickey@vanille-media.de>
Date:   2004-04-20 10:57:40 +0000

    Import patch tmpfile

37	18	bin/oemake2

commit 2f543bf4593b813b618c7ec3f18b9c0c106b7525
Author: Michael 'Mickey' Lauer <mickey@vanille-media.de>
Date:   2004-04-20 09:43:08 +0000

    Import patch oemake2.patch

72	34	bin/oemake2

commit b2438993f5f09d1d764cf89855913f881d4c2515
Author: Michael 'Mickey' Lauer <mickey@vanille-media.de>
Date:   2004-04-20 09:42:45 +0000

    Import patch data.patch

5	15	bin/oe/data.py

commit 0602a8ad8b7d212dcb60d6ebb90da77b815c31eb
Author: Michael 'Mickey' Lauer <mickey@vanille-media.de>
Date:   2004-04-17 12:09:35 +0000

    Import patch tmpfile

24	2	bin/oe/parse/OEHandler.py

commit 2770581a3c79e96b2dcc2c4ad17706eebef5b386
Author: Michael 'Mickey' Lauer <mickey@vanille-media.de>
Date:   2004-04-17 11:00:47 +0000

    Import patch handler.patch

4	2	bin/oe/parse/OEHandler.py

commit 1f1783706ae9554a20ba781b086f6da2fa5454a9
Author: Chris Larson <clarson@kergoth.com>
Date:   2004-04-14 18:36:38 +0000

    Handle md5sum not returning something sane, and handle the popen failing completely.

6	3	bin/oe/fetch.py

commit 012c93c0c758633164951576d318615ce3ad1a01
Author: Michael 'Mickey' Lauer <mickey@vanille-media.de>
Date:   2004-04-13 09:12:30 +0000

    This patch moves the comment stripping logic a bit later, so that it
    only takes effect when not within a function.

2	1	bin/oe/parse/OEHandler.py

commit 20b077d1e92c25d573ca61ae75ceb4424ed35fed
Author: Chris Larson <clarson@kergoth.com>
Date:   2004-04-12 22:23:07 +0000

    Fix the "already staged" check in oemake2 per the manifest changes.

1	1	bin/oemake2

commit f5d0eea17caa446d0e1172f2ee8f0a6a19b16bcf
Author: Chris Larson <clarson@kergoth.com>
Date:   2004-04-12 22:15:22 +0000

    Add a necessary line back in for the FILE var bits, that was inadvertantly lost in the merge.

2	0	bin/oe/parse/OEHandler.py

commit 841e3c400c5c982f17eae23d5cdee9b53d696cf0
Author: Chris Larson <clarson@kergoth.com>
Date:   2004-04-12 22:07:31 +0000

    Auto merged

8	0	bin/oe/parse/ConfHandler.py

commit a03720ad5d1012fa6d20bd4467ad453508525301
Author: Chris Larson <clarson@kergoth.com>
Date:   2004-04-12 22:07:31 +0000

6	1	bin/oe/parse/OEHandler.py

commit e2cc10d645b9082c8670d8b28359ca3ff66f14ba
Author: Chris Larson <clarson@kergoth.com>
Date:   2004-04-12 21:36:17 +0000

    Auto merged

1	0	bin/oe/parse/ConfHandler.py

commit 6e488be4fb668457e10033b606f904db93331cee
Author: Chris Larson <clarson@kergoth.com>
Date:   2004-04-12 21:36:17 +0000

    Adjust FILE handling; ensure .conf parsing sets it.

0	4	bin/oe/parse/OEHandler.py

commit 4e0e95b74f2f6f92ba65be2c90e3cebbc66425c1
Author: Chris Larson <clarson@kergoth.com>
Date:   2004-04-12 21:36:17 +0000

62	0	bin/build/install

commit 1e429dfad91bea3a32dae50e677f11c4476b944e
Author: erich <erich@mine.nu>
Date:   2004-04-11 17:16:08 +0000

    This patch shuffles some bits around so that make.py contains the code
     that's common to both oemake and oemake2.

50	85	bin/oe/make.py
94	8	bin/oemake

commit 8115170d0f84a74aa629f6526d80a9da3abd3d71
Author: erich <erich@mine.nu>
Date:   2004-04-11 17:16:08 +0000

244	0	bin/oemake2

commit 5b99415c25d9e7f88a3fdfe0c65a190cdd8c4894
Author: Michael 'Mickey' Lauer <mickey@vanille-media.de>
Date:   2004-04-11 11:57:56 +0000

    Import patch showdata.patch

8	7	bin/oe/data.py

commit 66cd138101b2786e87454e5be4ac64e5db48b7b8
Author: Michael 'Mickey' Lauer <mickey@vanille-media.de>
Date:   2004-04-11 11:57:45 +0000

    Import patch image.patch

17	2	bin/oeimage

commit 585dd157127e156d398276e1d3c94657b08cd76b
Author: erich <erich@mine.nu>
Date:   2004-04-09 00:51:27 +0000

    use cache in walkdown

1	1	bin/oemake

commit ca1fca6132e9ab83a7c98373513e6040cf57bf56
Author: erich <erich@mine.nu>
Date:   2004-04-09 00:51:27 +0000

    enable cache in walkdown

13	10	bin/oe/__init__.py

commit 5804ef7aaad6235c2ca5fbd06ef0babbd8980742
Author: Michael 'Mickey' Lauer <mickey@vanille-media.de>
Date:   2004-04-06 13:26:02 +0000

    more consistency in error messages

4	4	bin/oecommander

commit 66d23528c72b2346cdf26829eed3e35e542afb70
Author: Michael 'Mickey' Lauer <mickey@vanille-media.de>
Date:   2004-04-06 13:26:02 +0000

    gracefully continue even if readline is not present

4	1	bin/commander/pythonshell.py

commit d67ce54df6aa448629dee86fce94f7e1615f4718
Author: Michael 'Mickey' Lauer <mickey@vanille-media.de>
Date:   2004-04-04 17:47:14 +0000

    print information when expand fails

6	1	bin/oe/data.py

commit ee16c306182b4c27d1c2f3bd34c09f2c68eb1c31
Author: Michael 'Mickey' Lauer <mickey@vanille-media.de>
Date:   2004-04-04 17:42:46 +0000

    allow dumping the log if OEINCLUDELOGS is set

12	1	bin/oe/build.py

commit 300d03aa0f60aea913b284e43454b22187f975d5
Author: erich <erich@mine.nu>
Date:   2004-04-03 21:49:19 +0000

    backed out FILE (not) fix I submitted few hours ago

0	1	bin/oe/parse/ConfHandler.py

commit 8dac49ed4329dcebbf45b9e7fa149eab79b42d6d
Author: erich <erich@mine.nu>
Date:   2004-04-03 16:04:10 +0000

    ${FILE} was not expanded correctly

1	0	bin/oe/parse/ConfHandler.py

commit bea084e8f58029a422b9cb1a2a0a5d61adfb8acc
Author: Chris Larson <clarson@kergoth.com>
Date:   2004-04-01 21:50:29 +0000

    BUGFIX: another missing item from the merge with mickey's stuff.

1	1	bin/oe/__init__.py

commit f6608580a6067ee0363245f267187e95610f7227
Author: Chris Larson <clarson@kergoth.com>
Date:   2004-04-01 21:50:27 +0000

    BUGFIX: fix an incorrect automatic merge from bk.

0	1	bin/oe/parse/OEHandler.py

commit afa1228e39b190df1cdd604d2229f6a2c5b9c922
Author: Michael 'Mickey' Lauer <mickey@vanille-media.de>
Date:   2004-04-01 21:50:26 +0000

    eliminate usage of string module

3	4	bin/oe/parse/SRPMHandler.py
1	1	bin/oeimage
5	5	bin/oespawn

commit cb8d27888ac80f7dde3f41879fb7fe7331895bb5
Author: Chris Larson <clarson@kergoth.com>
Date:   2004-04-01 21:50:26 +0000

    Auto merged

22	19	bin/oe/__init__.py
4	4	bin/oe/data.py
16	16	bin/oe/fetch.py
1	1	bin/oe/manifest.py
6	6	bin/oeinstall
1	1	bin/oemake

commit ee6907e428a28b629351bdee4fc2793f451b129e
Author: Chris Larson <clarson@kergoth.com>
Date:   2004-04-01 21:50:26 +0000

    .

8	9	bin/oe/parse/OEHandler.py

commit 2dca7fedae44a3d130deae2d29d1a5b3ee8521de
Author: Chris Larson <clarson@kergoth.com>
Date:   2004-04-01 18:25:48 +0000

    Merges

7	7	bin/oe/build.py
2	0	bin/oemake

commit b65f6abc4e37b9f69527bfeef4dacc0c74499237
Author: Michael 'Mickey' Lauer <mickey@vanille-media.de>
Date:   2004-04-01 18:25:47 +0000

    use common make module

15	97	bin/commander/packages.py

commit cd084c49019178be79b98505eeebb9cda88bb4c2
Author: Michael 'Mickey' Lauer <mickey@vanille-media.de>
Date:   2004-04-01 18:25:47 +0000

    supply filename as argument to callback

205	0	bin/oe/make.py

commit 686efff8bd4ec356e90c681401905863974fc1c9
Author: Michael 'Mickey' Lauer <mickey@vanille-media.de>
Date:   2004-04-01 18:25:47 +0000

    compilefix

23	20	bin/commander/provideritem.py
0	0	bin/oe/make.py

commit ae26b516650d88085d1b3f94220585ca44772310
Author: Chris Larson <clarson@kergoth.com>
Date:   2004-04-01 18:25:47 +0000

    SCCS merged

1036	1035	bin/oe/__init__.py
285	286	bin/oe/build.py
82	269	bin/oemake

commit 2704f4aec4695d656d49e2db05946685dc2606c0
Author: Chris Larson <clarson@kergoth.com>
Date:   2004-03-31 18:14:29 +0000

    Adapt to new build vs source dir bits, and dont execute a function if hte function's body is empty.

7	7	bin/oe/build.py

commit bf8b27aba417bd4b7db247396ecd1bce58ab52fd
Author: Chris Larson <clarson@kergoth.com>
Date:   2004-03-31 18:14:28 +0000

    Teach the oe tools to catch Exception so they fail a bit cleaner on exceptions it doesnt normally know how to handle.

5	1	bin/oebuild
7	3	bin/oeinstall
8	1	bin/oemake
4	1	bin/oeread

commit 97b4ee511d31bf86954275fcd6a9351b0f2c4ac1
Author: Chris Larson <clarson@kergoth.com>
Date:   2004-03-31 18:14:27 +0000

    Raise an exception when a variable references itself, rather than exiting the process.

5	5	bin/oe/data.py

commit 0026c1665fac505da5c87de18fb14f91fe58a1d4
Author: Chris Larson <clarson@kergoth.com>
Date:   2004-03-31 18:14:27 +0000

    Add a parse error exception, and use that for unparsed lines rather than exiting the process.

1	1	bin/oe/parse/ConfHandler.py
7	1	bin/oe/parse/__init__.py

commit 58c23ffd9c13d1f50f75ba7276f784fabecdbca7
Author: Chris Larson <clarson@kergoth.com>
Date:   2004-03-31 18:14:24 +0000

    Improve performance by cutting down duplication expansions.

1	0	bin/oe/data.py
2	2	bin/oe/parse/OEHandler.py

commit 0f03cf5bdada50c4555e82b56347747a79b3b4c6
Author: Chris Larson <clarson@kergoth.com>
Date:   2004-03-31 18:14:22 +0000

    Implement a check for variable recursion at expansion time.

6	3	bin/oe/data.py

commit ab5070c00c937103e6bc739c8ef4cf2226d6effe
Author: Chris Larson <clarson@kergoth.com>
Date:   2004-03-31 18:14:21 +0000

    Unbork OEDEBUG (sorta)

2	2	bin/oe/__init__.py

commit f08c363e2529eba97bd1a630880979f3fcbf0d8b
Author: Chris Larson <clarson@kergoth.com>
Date:   2004-03-31 18:14:21 +0000

    Make use of STAGING_DATADIR

1	0	bin/oe/build.py

commit 81f775b1be7f201954140292695746f28aadf281
Author: Chris Larson <clarson@kergoth.com>
Date:   2004-03-31 18:14:21 +0000

    Fix manifest expansion.

25	16	bin/oe/manifest.py

commit 3ab3502883e89227305f50a90727796ffd83ebeb
Author: Chris Larson <clarson@kergoth.com>
Date:   2004-03-31 18:14:21 +0000

    Correct path search order for md5sum in fetch.

1	1	bin/oe/fetch.py

commit 7cbe1267696aba574124ab1880d40b81984a8347
Author: Chris Larson <clarson@kergoth.com>
Date:   2004-03-31 18:14:21 +0000

    BUGFIX: kill unnecessary empty line in function emission.

1	1	bin/oe/data.py

commit 485090905355b9a4ee8cc84add1e43527a26de08
Author: Chris Larson <clarson@kergoth.com>
Date:   2004-03-31 18:14:20 +0000

    Move some variable sets out of the parser, add support for anonymous functions (executed as a queue at the end of the parse), and fix a FILE variable bug.

2	2	bin/oe/build.py
0	3	bin/oe/parse/ConfHandler.py
34	65	bin/oe/parse/OEHandler.py

commit 1f07db1cc6b8141ad2b9d0ded5dd286dca972fa1
Author: Chris Larson <clarson@kergoth.com>
Date:   2004-03-31 18:14:19 +0000

    Manifest updates.. preparing to actually make use of it.

1	0	bin/file_manifest
1	0	bin/oe/__init__.py
119	0	bin/oe/manifest.py
19	0	bin/parse_manifest
0	213	bin/parse_manifest.py

commit 43ac7a3b773b53613b302381d85164631f744101
Author: Michael 'Mickey' Lauer <mickey@vanille-media.de>
Date:   2004-03-31 10:27:26 +0000

    support python function expansion

14	0	bin/oe/data.py

commit dca43f8b88f1e2ed911824c6881233d94f3be0c8
Author: erich <erich@mine.nu>
Date:   2004-03-31 04:48:46 +0000

    run fakeroot from ${STAGING_BINDIR}

1	1	bin/oe/build.py

commit bb40e64146b1839a5eb858fa02fb498106b5475e
Author: Chris Larson <clarson@kergoth.com>
Date:   2004-03-28 22:35:06 +0000

    Alterations to OE data behavior.

22	13	bin/oe/data.py

commit 4afba046a95a465bd0032da108334dfce4b4799a
Author: Chris Larson <clarson@kergoth.com>
Date:   2004-03-28 22:35:06 +0000

    Add commented set of the export flag on some vars, in case it becomes necessary.

3	1	bin/oe/parse/OEHandler.py

commit 63e99620936456ae01eaee8abf954fe207f74dd6
Author: Michael 'Mickey' Lauer <mickey@vanille-media.de>
Date:   2004-03-28 22:16:48 +0000

    support 'fakeroot' attribute for functions

5	1	bin/oe/build.py
7	4	bin/oe/data.py
6	1	bin/oe/parse/OEHandler.py

commit 3fdb63f18bd509771341150601d388a83bfcd2b2
Author: Michael 'Mickey' Lauer <mickey@vanille-media.de>
Date:   2004-03-27 23:48:46 +0000

    add version check

7	0	bin/oe/__init__.py

commit f01bb654e301957859cab61c54438bea445efcef
Author: Chris Larson <clarson@kergoth.com>
Date:   2004-03-27 14:39:57 +0000

    Change a few remnant a.has_key(b) users to b in a.

3	2	bin/oeread

commit a84a0889b2953e8fa80e74f9b9855338bdb7ee90
Author: Chris Larson <clarson@kergoth.com>
Date:   2004-03-23 23:08:27 +0000

    Teach oemake to obey OEMASK.

253	230	bin/oemake

commit bed2303857c474c149a2431213e9dbb9c0417641
Author: Chris Larson <clarson@kergoth.com>
Date:   2004-03-23 19:15:03 +0000

    BUGFIX: bug that resulted in ${TOPDIR} being unexpanded in a certain error path.

1	5	bin/oe/build.py

commit 579514481dd24474fc97c00d9d0edb3dd973930a
Author: Michael 'Mickey' Lauer <mickey@vanille-media.de>
Date:   2004-03-23 19:15:01 +0000

    refactor some things out into functions
    goal is to either be able to include oemake into the gui/frontend tools and reuse the functions
    or to factor the things out into a make.py file in bin/oe. Opinions on what to choose?

48	48	bin/oemake

commit 0ea3a11f8031ca7f91944def4b480c2e94b1fe97
Author: Michael 'Mickey' Lauer <mickey@vanille-media.de>
Date:   2004-03-23 19:15:01 +0000

    fix name

1	1	bin/commander/mainwindowbase.ui

commit 15ee96f646609b00747e18e33270a79f56bff10b
Author: Michael 'Mickey' Lauer <mickey@vanille-media.de>
Date:   2004-03-23 19:15:01 +0000

    check column
    add parameter for collapsing/expanding all

4	4	bin/commander/packageview.py

commit a4becee4a7854ba4b34b2339af05bcc300f1f47e
Author: Chris Larson <clarson@kergoth.com>
Date:   2004-03-16 20:29:21 +0000

    Handle empty fields specified with '-'

36	1	bin/parse_manifest.py

commit 2d8092b2c6a95d3766982ba951dce892062eb4cb
Author: Chris Larson <clarson@kergoth.com>
Date:   2004-03-16 20:29:21 +0000

    Add another field to the manifest, what the package name is, that provides the file.

6	6	bin/file_manifest

commit 4c96f9ec94b196b2bb5c98cad4ae86653c55f307
Author: Chris Larson <clarson@kergoth.com>
Date:   2004-03-16 18:48:56 +0000

    Output do_stage in the proof of concept file manifest parser.

3	1	bin/file_manifest
100	40	bin/parse_manifest.py

commit ada14fe3e544990774dfa0b02fb29d418245c727
Author: Chris Larson <clarson@kergoth.com>
Date:   2004-03-16 05:07:59 +0000

    BUGFIX: make oeread usable again.

2	2	bin/oeread

commit 3535e1edfcf1e5578a33fca1624bbbf43a747beb
Author: Chris Larson <clarson@kergoth.com>
Date:   2004-03-16 04:58:19 +0000

39	0	bin/file_manifest
118	0	bin/parse_manifest.py

commit 9d51add583a39dd3ae60adef0ae6f43dab3d29fa
Author: Chris Larson <clarson@kergoth.com>
Date:   2004-03-15 20:16:57 +0000

    Update the way we execute python functions, so on failure we actually see what function and line number the failure occurred at.  Also put said execution into its own scope to prevent namespace pollution.

9	4	bin/oe/build.py
1	1	bin/oe/parse/OEHandler.py

commit fb1288ba5727674c74597514b8e4906fe1117cf5
Author: Michael 'Mickey' Lauer <mickey@vanille-media.de>
Date:   2004-03-13 13:45:16 +0000

    give a reason when a task fails

2	1	bin/oe/build.py

commit 19aa0911c8317f41d7fa4162180f9416679b808b
Author: Chris Larson <clarson@kergoth.com>
Date:   2004-03-11 22:52:30 +0000

    Fix the attempts to unpack the wrong filename tarball when tag is set.

4	1	bin/oe/fetch.py

commit fa436f7f7661faf50850540e26378b7a6c4d3845
Author: Chris Larson <clarson@kergoth.com>
Date:   2004-03-11 22:46:29 +0000

    Fix fetching sources for tag (not branch) cvs checkouts.

4	1	bin/oe/fetch.py

commit 0c82f37a310f043ad80f4b0b14f0e3b6b7176d2e
Author: Chris Larson <clarson@kergoth.com>
Date:   2004-03-11 18:51:14 +0000

    Alter cvs fetching.. when date isnt set, set it to today.

2	2	bin/oe/fetch.py

commit 3945a3b68ee472235caae39ebca3a35a2c6f5b7a
Author: Michael 'Mickey' Lauer <mickey@vanille-media.de>
Date:   2004-03-08 21:47:50 +0000

    packages synchronize themselves
    expand all after rescanning

5	2	bin/commander/mainwindow.py

commit 9c2cc925a56963702e66dcbc87a94771aec3c218
Author: Michael 'Mickey' Lauer <mickey@vanille-media.de>
Date:   2004-03-08 21:47:50 +0000

    misc

37	9	bin/commander/provideritem.py

commit 0ffb4e5638f6c2a1dc652a410b9dd283afec299d
Author: Michael 'Mickey' Lauer <mickey@vanille-media.de>
Date:   2004-03-08 21:47:50 +0000

    getVar

3	0	bin/commander/packages.py

commit 09f587073649909aeb254df9d5b3a97a0e6250d1
Author: Michael 'Mickey' Lauer <mickey@vanille-media.de>
Date:   2004-03-08 21:47:50 +0000

    add expandAll

6	0	bin/commander/packageview.py

commit b254a20fb5c3f3959442e4b279102321984abde2
Author: Michael 'Mickey' Lauer <mickey@vanille-media.de>
Date:   2004-03-06 18:02:06 +0000

    version number increment

1	1	bin/commander/mainwindowbase.ui

commit 88f5cdda6c6378dc9933666416abe6294c25d4b2
Author: Michael 'Mickey' Lauer <mickey@vanille-media.de>
Date:   2004-03-06 18:02:06 +0000

    items are now grouped not only by virtual but also by multiple
    (even if there is only one version available, maybe change that later)

36	11	bin/commander/provideritem.py

commit 593deecde001e9850faea0b4efa6d31c5614a63e
Author: Chris Larson <clarson@kergoth.com>
Date:   2004-03-05 17:35:38 +0000

4	1	bin/oe/build.py

commit b723e0d290a92ba19138dcfd4fe925e2e5895d1c
Author: Chris Larson <clarson@kergoth.com>
Date:   2004-03-03 08:54:34 +0000

    Revert a re match change that borked patch application.

6	7	bin/oe/__init__.py

commit 726f4b0739c9fcf1f2e63d3bbd0bedac5ebaed16
Author: Chris Larson <clarson@kergoth.com>
Date:   2004-03-03 08:13:18 +0000

    Add initial pass at mirror support.

7	6	bin/oe/__init__.py
86	32	bin/oe/fetch.py

commit 9b40ad769070c6bc7af8faa30396d1d22ffcc64d
Author: Michael 'Mickey' Lauer <mickey@vanille-media.de>
Date:   2004-02-27 00:03:36 +0000

    update

1	0	bin/commander/commander.pro
34	2	bin/commander/packageview.py
50	14	bin/commander/provideritem.py

commit 9dc7d05ee816c70ab021c55e68d668ef8b48cc9f
Author: Michael 'Mickey' Lauer <mickey@vanille-media.de>
Date:   2004-02-27 00:03:36 +0000

    statustest

3	2	bin/commander/mainwindow.py

commit 40627dafcfe7cc2f30b5ffa542eec32bed6e1fb7
Author: Michael 'Mickey' Lauer <mickey@vanille-media.de>
Date:   2004-02-27 00:03:36 +0000

    increment verson

1	1	bin/commander/aboutdialogbase.ui
1	1	bin/commander/appinfo.py

commit 81ccc24bacff9a74d86a72d31b482ca0728017a6
Author: Michael 'Mickey' Lauer <mickey@vanille-media.de>
Date:   2004-02-27 00:03:36 +0000

-	-	bin/commander/images/checked.png
-	-	bin/commander/images/do_compile.png
-	-	bin/commander/images/do_configure.png
-	-	bin/commander/images/do_install.png
-	-	bin/commander/images/do_patch.png
-	-	bin/commander/images/do_stage.png
-	-	bin/commander/images/do_unpack.png
-	-	bin/commander/images/unchecked.png

commit cdd934a629aeacde2fe227bf766111adb90a36d2
Author: Michael 'Mickey' Lauer <mickey@vanille-media.de>
Date:   2004-02-26 17:08:38 +0000

    test

2	1	bin/commander/mainwindow.py

commit cafd41deea843d61e20f8873efe36d14cded877c
Author: Michael 'Mickey' Lauer <mickey@vanille-media.de>
Date:   2004-02-26 17:08:38 +0000

    packageview is now a custom widget

79	209	bin/commander/mainwindowbase.ui

commit f32f931afd07a4484d9be8507246c1b2f2c57db6
Author: Michael 'Mickey' Lauer <mickey@vanille-media.de>
Date:   2004-02-26 17:08:38 +0000

    more info

6	1	bin/commander/appinfo.py

commit c702e7001f4a985ee8bd5d57f6ed4c3a14f09cf0
Author: Michael 'Mickey' Lauer <mickey@vanille-media.de>
Date:   2004-02-26 17:08:38 +0000

    insert columns for check and status

10	12	bin/commander/provideritem.py

commit 71dad487672eae8796111b81fbea808e2ccd3bb9
Author: Michael 'Mickey' Lauer <mickey@vanille-media.de>
Date:   2004-02-26 17:08:38 +0000

33	0	bin/commander/packageview.py

commit ffc7ee783c8207bedc7e153007f9ee8ffb23c1e4
Author: Michael 'Mickey' Lauer <mickey@vanille-media.de>
Date:   2004-02-25 18:18:37 +0000

    update

11	21	bin/commander/mainwindow.py
23	17	bin/commander/mainwindowbase.ui
16	13	bin/commander/packages.py

commit 2d5f48b5f1dc073f7d68c76e36a4d43ef17fd89d
Author: Michael 'Mickey' Lauer <mickey@vanille-media.de>
Date:   2004-02-25 18:18:37 +0000

-	-	bin/commander/images/package.png
-	-	bin/commander/images/virtual.png
80	0	bin/commander/provideritem.py

commit ded2faf5ce54967b061e58bc60ec743ac9e77722
Author: Michael 'Mickey' Lauer <mickey@vanille-media.de>
Date:   2004-02-23 14:29:08 +0000

    make compatible with python 2.2

2	0	bin/utils/itertools.py

commit 36c722c302494103df167a61f5096bf572e45b90
Author: Michael 'Mickey' Lauer <mickey@vanille-media.de>
Date:   2004-02-21 14:29:22 +0000

    use oe.data to parse

3	3	bin/commander/packages.py

commit 6a2903edc8e93aee0083647d2bdfc1a331254b04
Author: Michael 'Mickey' Lauer <mickey@vanille-media.de>
Date:   2004-02-21 14:29:22 +0000

    more information in listview, will refactor into own class soon

19	6	bin/commander/mainwindow.py

commit 44b7b3acad4ce433d3e114dcef9877e7554e735a
Author: Michael 'Mickey' Lauer <mickey@vanille-media.de>
Date:   2004-02-21 14:29:22 +0000

    more columns, s/package/provider/

42	7	bin/commander/mainwindowbase.ui

commit 9671b5548f6518cf950d970743c5accf5e514267
Author: Michael 'Mickey' Lauer <mickey@vanille-media.de>
Date:   2004-02-21 14:29:22 +0000

    adjust

202	0	bin/commander/pythonshell.py

commit e395f0138be7d3564f39de1d2e2dc5d013088b31
Author: Michael 'Mickey' Lauer <mickey@vanille-media.de>
Date:   2004-02-18 22:45:50 +0000

    start rescan on launch

33	0	bin/commander/application.py

commit 30182e1dc0f48543e6b569cbc75b3e26b238d623
Author: Michael 'Mickey' Lauer <mickey@vanille-media.de>
Date:   2004-02-18 22:45:50 +0000

    refactoring

10	9	bin/oecommander

commit ee3c4a07625d39af20c6a254c46681c84f1ee3fa
Author: Michael 'Mickey' Lauer <mickey@vanille-media.de>
Date:   2004-02-18 22:45:50 +0000

    new stuff

49	5	bin/commander/mainwindow.py
93	23	bin/commander/mainwindowbase.ui

commit 766d067c5265da3af71a0fc29b984f42e856e84b
Author: Michael 'Mickey' Lauer <mickey@vanille-media.de>
Date:   2004-02-18 22:45:50 +0000

    don't use language or pyuic breaks parsing the <slots>

2	2	bin/commander/commander.pro

commit 7a16a16280b50cfe969a1827b04ce26d000a5de5
Author: Michael 'Mickey' Lauer <mickey@vanille-media.de>
Date:   2004-02-18 22:45:50 +0000

    add appcaption

1	0	bin/commander/appinfo.py

commit b27d1b38577a983cb13b734198cff939f933c26a
Author: Michael 'Mickey' Lauer <mickey@vanille-media.de>
Date:   2004-02-18 22:45:50 +0000

0	0	bin/commander/application.py
137	0	bin/commander/packages.py

commit 49377ec27f5c9ba5d4d30930372498177ac0fe2e
Author: Michael 'Mickey' Lauer <mickey@vanille-media.de>
Date:   2004-02-18 16:05:12 +0000

    move events to oe/event - we need them from various places

229	319	bin/oemake

commit 67ce553ffd7cc3c68a28c98943364d449e96dd76
Author: Michael 'Mickey' Lauer <mickey@vanille-media.de>
Date:   2004-02-18 16:05:12 +0000

    add event classes to this file

105	2	bin/oe/event.py

commit 5abb194ed4efe27146ed3aec7af538525e4eae7c
Author: Michael 'Mickey' Lauer <mickey@vanille-media.de>
Date:   2004-02-18 13:43:12 +0000

    dummy functions for NYI stuff

72	8	bin/commander/mainwindow.py

commit c3648117854403fbb0fc8a4b99f32b745ea1bbf9
Author: Michael 'Mickey' Lauer <mickey@vanille-media.de>
Date:   2004-02-18 13:43:12 +0000

    add import guard

6	5	bin/commander/aboutdialog.py

commit f09c0e62d1fc6261b6502b90546f7eb43d86af46
Author: Michael 'Mickey' Lauer <mickey@vanille-media.de>
Date:   2004-02-18 13:43:12 +0000

2	0	bin/commander/appinfo.py

commit f0ba193961cb6d54e894b39f4d54a34f39f30634
Author: Michael 'Mickey' Lauer <mickey@vanille-media.de>
Date:   2004-02-18 13:25:00 +0000

    rename and add an image

0	103	bin/commander/aboutdialog.ui
156	0	bin/commander/aboutdialogbase.ui

commit 0da039d92ce1ae1241b2d0f845d04d112e2414a2
Author: Michael 'Mickey' Lauer <mickey@vanille-media.de>
Date:   2004-02-18 13:25:00 +0000

    rename

0	761	bin/commander/mainwindow.ui
761	0	bin/commander/mainwindowbase.ui

commit 4338445d6b04c594a4731e9be155e45bf2e798d7
Author: Michael 'Mickey' Lauer <mickey@vanille-media.de>
Date:   2004-02-18 13:25:00 +0000

    cosmetics

7	8	bin/commander/commander.pro

commit 5a8839d162abb6587154efad683b560988151ef3
Author: Michael 'Mickey' Lauer <mickey@vanille-media.de>
Date:   2004-02-18 13:25:00 +0000

    add executable

48	0	bin/oecommander

commit 3b0e640b1097d0770ba3ea7b74e5aff50819a13e
Author: Michael 'Mickey' Lauer <mickey@vanille-media.de>
Date:   2004-02-18 13:25:00 +0000

0	0	bin/commander/__init__.py
19	0	bin/commander/aboutdialog.py
0	0	bin/commander/aboutdialogbase.ui
21	0	bin/commander/mainwindow.py
0	0	bin/commander/mainwindowbase.ui
0	0	bin/oecommander

commit d9ba10da7ff522e81c93e3443f390f277bec7f40
Author: Michael 'Mickey' Lauer <mickey@vanille-media.de>
Date:   2004-02-17 23:09:21 +0000

103	0	bin/commander/aboutdialog.ui
10	0	bin/commander/commander.pro
761	0	bin/commander/mainwindow.ui

commit 6076883ab109c62a8d7939cf058ce2e0ac0e96e8
Author: Michael 'Mickey' Lauer <mickey@vanille-media.de>
Date:   2004-02-16 18:07:40 +0000

    mvdir

8	0	bin/utils/itertools.py

commit 47fa6ca17490a8fca8c7c7ebdf63e8ad3b5ec044
Author: Michael 'Mickey' Lauer <mickey@vanille-media.de>
Date:   2004-02-16 18:07:40 +0000

    delete the spinner class and use a nice cycle generator
    convert option handling from getopt to optparse

43	109	bin/oemake

commit c4b1cf5388d815b25104040c572ad829162ce445
Author: Michael 'Mickey' Lauer <mickey@vanille-media.de>
Date:   2004-02-16 18:07:40 +0000

    Rename: bin/daemon.py -> bin/utils/daemon.py

0	0	bin/daemon.py
73	0	bin/utils/daemon.py

commit e2f5872483cd939003e15038dee29d2166cfa220
Author: Michael 'Mickey' Lauer <mickey@vanille-media.de>
Date:   2004-02-16 18:07:40 +0000

0	0	bin/utils/__init__.py
0	0	bin/utils/daemon.py
0	0	bin/utils/itertools.py
1399	0	bin/utils/optparse.py
355	0	bin/utils/textwrap.py

commit 4121395d88f3ed384e68ca13d41aa99348c5b456
Author: Chris Larson <clarson@kergoth.com>
Date:   2004-01-26 20:19:06 +0000

    Replacing B.has_key(A) calls with A in B.

4	4	bin/oe/__init__.py
1	1	bin/oe/build.py
11	11	bin/oe/data.py
9	9	bin/oe/fetch.py
4	4	bin/oe/parse/ConfHandler.py
1	1	bin/oe/parse/OEHandler.py
1	1	bin/oe/parse/SRPMHandler.py
5	5	bin/oeimage
7	7	bin/oeinstall
8	8	bin/oemake
1	1	bin/oemaked
2	2	bin/oemakepkgs
1	1	bin/oeread

commit 06ab870f18faf432a6c541237c89ed16de1e6617
Author: Gerald Britton <gbritton@doomcom.org>
Date:   2004-01-24 17:58:19 +0000

    another optimization, another few percent

8	11	bin/oe/data.py

commit dc0b2bc1f8092a9f37452c530999fcb1a1afbdd9
Author: Gerald Britton <gbritton@doomcom.org>
Date:   2004-01-24 17:43:45 +0000

4	4	bin/oe/data.py

commit 632a97e1f33fb9d4a80c18d6eb21667d0b91ecd5
Author: Gerald Britton <gbritton@doomcom.org>
Date:   2004-01-24 16:44:55 +0000

    Auto merged

24	31	bin/oe/data.py
6	7	bin/oe/parse/OEHandler.py

commit d410d0f5c06f0a63d5e834b11d94e27dff6e39cf
Author: Chris Larson <clarson@kergoth.com>
Date:   2004-01-24 16:36:08 +0000

    BUGFIX: silly bug in the overrides application.

2	4	bin/oe/data.py

commit 9a96ca56d620f5bc69f69c34c057fa3a887f0e30
Author: Chris Larson <clarson@kergoth.com>
Date:   2004-01-24 05:41:18 +0000

    Move compile of 'word' regex to the module scope.

1	2	bin/oe/parse/OEHandler.py

commit 5c8117ee447402ec484b722ac4eeb53b0e21f7b8
Author: Chris Larson <clarson@kergoth.com>
Date:   2004-01-24 04:50:58 +0000

    First pass of improvements to the data handling to improve oemake performance.

14	46	bin/oe/data.py
1	2	bin/oe/parse/ConfHandler.py
0	7	bin/oe/parse/OEHandler.py
0	7	bin/oe/parse/SRPMHandler.py

commit b161b0d5a05b969b63be2e9f73eb84fcd4f71bf3
Author: Chris Larson <clarson@kergoth.com>
Date:   2004-01-23 21:03:23 +0000

    Make oemake 'del' a package's metadata when said package's build is complete.

3	0	bin/oemake

commit 3d639a10c07685ff80f88bbfe43903fb6b3b4903
Author: Chris Larson <clarson@kergoth.com>
Date:   2004-01-23 19:10:46 +0000

    Add --abort/-a back, as a no-op with a warning.

4	1	bin/oemake

commit 43f642f2bbdcfa4e56394e4b8515678c5a2b1019
Author: Chris Larson <clarson@kergoth.com>
Date:   2004-01-23 19:07:06 +0000

    oemake syntax change.  abort on failure is now default, with -k commandline option to continue as much as possible (same cmdline opt as gmake.

5	5	bin/oemake

commit b269c96a4432e7c37c41c1d3b8c22d1adbc90c42
Author: Chris Larson <clarson@kergoth.com>
Date:   2004-01-23 18:58:04 +0000

    Add a spinner during oemake's .oe parsing.

29	0	bin/oemake

commit f4d8c2c99bf5344e44639f5342394a3d9aa328eb
Author: Chris Larson <clarson@kergoth.com>
Date:   2004-01-23 11:03:47 +0000

    Cosmetic change.. 'succeeded' changed to 'completed', since in the context of a task that may not actually need to do anything, completion is more accurate than success.

1	1	bin/oe/build.py
1	1	bin/oemake

commit a964ac4aa6dcf3b320105f137a539c8c6820467f
Author: Chris Larson <clarson@kergoth.com>
Date:   2004-01-23 10:47:18 +0000

    Revamp task handling to accomidate a change to oemake.  It now runs the builds directly, bypassing oebuild.

52	29	bin/oe/build.py
4	6	bin/oe/parse/OEHandler.py
23	6	bin/oemake

commit 606e9152eff765d49e22662b4d153027c5730680
Author: Holger Schurig <schurig@mn-solutions.de>
Date:   2004-01-23 10:23:26 +0000

    finished parsing of *.pkgfile

136	26	bin/oemakepkgs

commit fd126f444a7ad42b0bd03c68bfdd5199497b6bda
Author: Chris Larson <clarson@kergoth.com>
Date:   2004-01-23 10:02:30 +0000

    Alter data handling functions to skip operation on non-string metadata.

5	6	bin/oe/data.py

commit 0efd23c1da44c113a9f78975f468d73f52be635c
Author: Chris Larson <clarson@kergoth.com>
Date:   2004-01-23 08:00:16 +0000

    Kill deprecated env/metadata handling bits.

0	512	bin/oe/__init__.py
16	16	bin/oe/fetch.py

commit b2dc3e7502e41562a4429b1b9e55fa3d9320c6c0
Author: Chris Larson <clarson@kergoth.com>
Date:   2004-01-23 07:47:10 +0000

    Move task setup from oebuild into the .oe parser.

18	0	bin/oe/parse/OEHandler.py
0	24	bin/oebuild

commit 91bc0c88db09cc0aab4765a8121cbf4d2fc4fd92
Author: Chris Larson <clarson@kergoth.com>
Date:   2004-01-23 06:56:13 +0000

    Add a new syntax to .conf/.oe files for setting metadata about metadata, and use said syntax to remove varflags from the parse code out into the .conf/.oeclasses.

4	31	bin/oe/build.py
5	2	bin/oe/data.py
7	136	bin/oe/parse/ConfHandler.py

commit d5ce4a91e1d9420dbce7e66ee84f5b5b3aef8a90
Author: Holger Schurig <schurig@mn-solutions.de>
Date:   2004-01-22 22:24:08 +0000

    revert my enhancement

3	3	bin/oe/parse/ConfHandler.py

commit 788edc35c34a5e73074d655cc70cf68416d6c118
Author: Holger Schurig <schurig@mn-solutions.de>
Date:   2004-01-22 22:24:08 +0000

    display vars in an oe file

27	8	bin/oeread

commit fec19b7acdb7cfbbafa73aff9eb898f4e315c0f7
Author: Chris Larson <clarson@kergoth.com>
Date:   2004-01-22 21:20:58 +0000

    Add listtasks function.

2	0	bin/oe/build.py

commit 3fa5a1a56cb43b6bf35a872319b7f30b6921c0e1
Author: Holger Schurig <schurig@mn-solutions.de>
Date:   2004-01-22 16:23:37 +0000

    no need to os.path.join twice

2	3	bin/oe/parse/ConfHandler.py

commit 48f24393ca6750dcd4ff8e943c14898d8e5bfd3b
Author: Holger Schurig <schurig@mn-solutions.de>
Date:   2004-01-22 16:23:37 +0000

82	0	bin/oemakepkgs

commit 9317bee5f5bd8347ac27e098f5c5485e67457f4f
Author: Holger Schurig <schurig@mn-solutions.de>
Date:   2004-01-22 14:03:15 +0000

    fixed line number counting
    made debug output nicer

12	8	bin/oe/parse/ConfHandler.py

commit 667313432c8af8746662cd65f118f7639d6e1014
Author: Holger Schurig <schurig@mn-solutions.de>
Date:   2004-01-22 12:54:41 +0000

    move imports to the begin

3	5	bin/oemaked

commit 2b5e70bed74a5d7d45373d11716a8c21e3263d3f
Author: Holger Schurig <schurig@mn-solutions.de>
Date:   2004-01-22 12:54:41 +0000

    made it working (not yet useful)

10	2	bin/oeread

commit 6320a7cd6eec324905c94fe308a8a333eb69db76
Author: Holger Schurig <schurig@mn-solutions.de>
Date:   2004-01-22 12:54:41 +0000

    changed -v to -V, this is standard GNU and allows us to use -v for verbose someday
    move imports to the begin
    moved functions to beginning
    removed unneeded get_files()
    added some comments
    made usage-text more readable

46	39	bin/oebuild

commit a19471b7fa3e3a531e586565f15c8b730089524e
Author: Holger Schurig <schurig@mn-solutions.de>
Date:   2004-01-22 12:54:41 +0000

    changed -v to -V, this is standard GNU and allows us to use -v for verbose someday
    move imports to the begin
    moved functions to beginning
    made usage-text more readable

39	36	bin/oemake

commit 42de2ae4a2b45b4ce6e9178807cc56ba75518af5
Author: Holger Schurig <schurig@mn-solutions.de>
Date:   2004-01-22 12:54:41 +0000

    changed -v to -V, this is standard GNU and allows us to use -v for verbose someday
    move imports to the begin
    made usage-text more readable

11	9	bin/oespawn

commit 6f570b3ac266b4a1841c03e234b74df299916d0e
Author: Holger Schurig <schurig@mn-solutions.de>
Date:   2004-01-22 12:54:41 +0000

    changed -v to -V, this is standard GNU and allows us to use -v for verbose someday
    made usage-text more readable

8	4	bin/oeinstall

commit 25f8ac9075189dd98388afd7178dd3692a72de22
Author: Michael 'Mickey' Lauer <mickey@vanille-media.de>
Date:   2004-01-16 21:14:53 +0000

    import time into the environment (need it for some nice tricks in .oe files)

1	1	bin/oe/data.py

commit 07023c9191732e4747509d2dbe5fe4ecec1fa008
Author: Chris Larson <clarson@kergoth.com>
Date:   2004-01-16 03:33:43 +0000

    BUGFIX: incorrect format for supports()

1	1	bin/oe/parse/SRPMHandler.py

commit cb57cfd2b3e1cec7825e877d7e029d1bc48e2110
Author: Chris Larson <clarson@kergoth.com>
Date:   2004-01-16 03:26:28 +0000

    Add question regarding build order to the FAQ.

5	0	doc/FAQ

commit 8466a78b7b78cfdf880aeffa51821df3d834181d
Author: Chris Larson <clarson@kergoth.com>
Date:   2004-01-04 00:56:34 +0000

    Start removing some unnecessary old deprecated functions from the OE core.

1	245	bin/oe/__init__.py

commit c0229c86f7341a97cdb585ec6179809deabb321a
Author: Chris Larson <clarson@kergoth.com>
Date:   2004-01-04 00:56:34 +0000

    BUGFIX: localpath calls.

3	3	bin/oe/fetch.py

commit ea89afb7e51d8d5843d7cab1df8eb96d83f082ea
Author: Chris Larson <clarson@kergoth.com>
Date:   2004-01-02 19:15:41 +0000

    BUGFIX: Only add -r to co when tag is specified.

2	1	bin/oe/fetch.py

commit 9ff961cecaf96d0e1ea81b8cbf77e4c993ec6293
Author: Chris Larson <clarson@kergoth.com>
Date:   2004-01-02 17:37:53 +0000

    Get rid of OEDIR.  It'll still get added to the OEPATH if you set it, for compatibility, but is no longer used directly.  In addition, if you run /full/path/to/oebuild, or similar, it'll add the path where the binary is, and the dir above that, to OEPATH.

1	4	bin/oe/data.py
0	3	bin/oeimage
0	3	bin/oeinstall

commit b37b0d8808ef036885ee12991a95fd5da17d84fb
Author: Chris Larson <clarson@kergoth.com>
Date:   2004-01-02 17:37:53 +0000

    Auto merged

4	4	bin/oe/parse/ConfHandler.py

commit efcedaf17756fd6af23267a1ac431dfb362a026e
Author: Chris Larson <clarson@kergoth.com>
Date:   2004-01-02 17:08:25 +0000

    Missed a localpath call. Fixed.

1	1	bin/oe/fetch.py

commit 12c27ec1aac7a0102c985a5caece51cda7ae4066
Author: Chris Larson <clarson@kergoth.com>
Date:   2004-01-02 17:05:56 +0000

    Updates to the fetch code.. now pulls down from cvs, tars it up into a sanely named tarball, and passes that filename on to unpack for further operation.

79	23	bin/oe/fetch.py

commit 87896615da54edb3b6824200461d4bbf807af379
Author: Chris Larson <clarson@kergoth.com>
Date:   2004-01-02 17:05:56 +0000

    Adaptations to pass the metadata into localpath functions in fetch

5	5	bin/oe/parse/ConfHandler.py
3	3	bin/oe/parse/OEHandler.py
1	1	bin/oe/parse/SRPMHandler.py
5	5	bin/oe/parse/__init__.py

commit 476b32e636a99393cfdf177e115b78441887611c
Author: Michael 'Mickey' Lauer <mickey@vanille-media.de>
Date:   2003-12-20 02:36:44 +0000

18	0	doc/FAQ

commit d969e09e2e3649b792b6c85510053341c49230db
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-12-20 02:35:52 +0000

    Enhance cvs fetching step one - obey a cvs checkout command from FETCHCOMMAND variable, rather than hardcoded.

30	8	bin/oe/fetch.py

commit 6428bb8b40a57077e239566a66e7bfcffadbb7f1
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-12-16 18:06:07 +0000

    Output what file oemake is parsing..

1	0	bin/oemake

commit dbd906e22559aa9faec55e4e56a20154115ee437
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-12-06 02:37:48 +0000

    Use /usr/bin/env to locate python.

1	1	bin/oebuild
1	1	bin/oeimage
1	1	bin/oeinstall
1	1	bin/oemake
1	1	bin/oemaked
1	1	bin/oeread
1	1	bin/oespawn

commit 59b375ea188d75f3c614f94e677f29a4c7b36059
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-12-05 20:04:16 +0000

    Include site.conf, and add ${HOME}/.oe to OEPATH.

2	1	bin/oe/parse/ConfHandler.py

commit c3b33a226451ebca57ee81d3f017cd758178535c
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-12-02 21:19:50 +0000

    Fix oeinstall and oemake to call python, not python2.

1	1	bin/oeinstall
1	1	bin/oemake

commit 1bed011c09c9ba64b7b957f4656df5460bb532ce
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-11-27 04:57:47 +0000

    Write out a .md5 file for the Wget downloads.  Currently only being utilized as a per download stamp.

36	31	bin/oe/fetch.py

commit 0d42e677b3a398727d6a828d0469319c028bed04
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-11-27 03:06:35 +0000

    Increment tool version

1	1	bin/oe/__init__.py

commit c78168b4c9da2e697f584953659e87547675a54b
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-11-22 03:28:16 +0000

    Make oeinstall cmdline override INST_OEPKGS, and make oemake obey OEPKGS.

6	7	bin/oeinstall

commit 0e119fb4e7fb25aa0d6b448b545331d0eebd5507
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-11-22 03:28:16 +0000

    Handle the 'i depend on myself' situation cleanly.

19	5	bin/oe/__init__.py

commit 16a4b1233b801f198b4668195c76ecc4b660b230
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-11-22 03:28:16 +0000

    Fix a bug that caused issues with the metadata when one .oe includes another.. our DEPENDS were being reset.

49	6	bin/oemake

commit 61695622884fe8a342240c159a563bab335fb2da
Author: Michael 'Mickey' Lauer <mickey@vanille-media.de>
Date:   2003-11-15 00:50:40 +0000

    bring in sync with the facts

6	2	doc/DEVEL
2	2	doc/README

commit 4968e547bad70ff886aea92c5c59877b0d3b89d8
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-10-31 04:50:39 +0000

    Allow '+' in a variable name.

1	1	bin/oe/data.py
1	1	bin/oe/parse/ConfHandler.py

commit bbbf0516fd1844d1fc733e420f38fbef2f8f91ef
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-10-24 18:34:24 +0000

    Add INST_OEPKGS and OEPKGS to the set of vars inherited from the env.

2	0	bin/oe/parse/ConfHandler.py

commit 1d23da84c3b8129116bf68d1cec609b9855a060d
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-10-24 18:34:24 +0000

61	26	bin/oeinstall

commit 7cc504f8cdaf78b1a06335f6ad89d7c3bc86a954
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-10-23 19:21:33 +0000

    BUGFIX: the inheritance cache wasnt local to a given set of metadata, which caused all manner of brokenness in both oeinstall and oemake.

4	3	bin/oe/parse/OEHandler.py
21	17	bin/oeinstall

commit 4f3c9318485f1603adf97484eb418d6021e18259
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-10-23 15:42:33 +0000

    Revamp oeinstall, now supports multiple install types, though currently only tar is supported.

92	7	bin/oeinstall

commit 26fe1668c255424a24f98a0ce800cfd8e6a373db
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-10-15 23:10:25 +0000

1	1	doc/README

commit 937705f32add1ad77cccf68cf2184d21ed25ebfe
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-10-15 21:24:38 +0000

    Update TODO

17	20	doc/TODO

commit 285da5f38f50479d34ff6d19d477ea71cf87e387
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-10-15 21:09:44 +0000

    mvdir

0	271	bin/classes/base.oeclass
0	20	bin/classes/base_srpm.oeclass
0	16	bin/classes/rpm_core.oeclass

commit 23adc40a14f91263658396f9dd8d62de747ee3bc
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-10-15 21:09:44 +0000

    Delete: bin/build/README

0	5	bin/build/README

commit d30d4444b91aa216023e4ad2b7f803215f749f99
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-10-15 20:37:15 +0000

    Use 1/0 instead of True/False to work with python <2.3

4	4	bin/oe/build.py
2	2	bin/oe/parse/__init__.py

commit ff0b207cc64fb18d649b511ae2e31600b1a1085b
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-10-15 20:27:54 +0000

2	0	bin/oe/parse/OEHandler.py

commit 047a896ae11569d9eb4ca575f43dc3ba07804e86
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-10-14 20:13:35 +0000

    Move default PROVIDES (P, PF, PN, CATEGORY/P, CATEGORY/PF, CATEGORY/PN) into oe.conf from oemake.

0	7	bin/oemake
1	1	doc/TODO

commit f8c405c8d06a56512c1286b4443d7f6998dba32b
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-10-14 20:03:45 +0000

    Revamp the way we handle set of PN/PV/PR from filename, and change the file seperator for .oe's to _ (better now than later).

19	74	bin/oe/parse/OEHandler.py

commit 93f441cff1f2a9afed5551d6f0f65c223101780c
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-10-10 19:27:21 +0000

    Use bzip2 -dc fn | tar x -f - rather than tar -xj -f fn, for portability reasons.

1	1	bin/classes/base.oeclass

commit 05cc9efd24d619faa858fb819a4bd7bfa8823ee6
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-10-10 18:40:23 +0000

    Add VAR?=value to the parser.

6	2	bin/oe/parse/ConfHandler.py

commit d6b878d05b6c5f364b31fc6e6d762ebad03d8a81
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-10-07 01:16:59 +0000

    Display warnings when one of the autotools fails.

5	0	bin/classes/base.oeclass

commit b4e244434613b4db3dc58dea5d1106d35cbfa9f1
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-10-02 21:48:07 +0000

    BUGFIX: return '' when which doesnt find what its looking for.

1	1	bin/oe/__init__.py

commit 850442e92a64cd67cc8cf1075c7a8f1f5a953aca
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-10-02 06:03:29 +0000

    Make use of the 'include' variable to decide when to do vars_from_fn and update_data.

7	5	bin/oe/parse/OEHandler.py

commit 5b182d3f723901f1a096a8a3a9c8b7da167bf898
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-09-30 03:46:06 +0000

    BUGFIX: 'die' needed to display the passed arguments.

4	4	bin/classes/base.oeclass

commit 01d22431b0f6e9826782bf0f4a9054138872136d
Author: Gerald Britton <gbritton@doomcom.org>
Date:   2003-09-28 23:35:54 +0000

    fix inheriting from OS environment in includes, cleanup debugging

16	8	bin/oe/parse/ConfHandler.py
26	11	bin/oe/parse/OEHandler.py
11	8	bin/oe/parse/SRPMHandler.py
2	2	bin/oe/parse/__init__.py

commit 987f0cae375f6c8f583be2e28e69bd82f1ecac4c
Author: Gerald Britton <gbritton@doomcom.org>
Date:   2003-09-28 23:35:54 +0000

    eliminate dupes from paths, cleanup path inclusion a bit

8	1	bin/oe/data.py

commit d1c1554774708febb5403060a4c9e53bb9da16e0
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-09-28 23:15:25 +0000

2	0	doc/TODO

commit 2a386240ba9f0c3bf7784e87a9893a7895d82001
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-09-26 20:03:50 +0000

1	1	bin/classes/base.oeclass

commit 584764ccad93619a56ff1a0abc21af79fcd57f2a
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-09-24 16:59:24 +0000

    s/ARCH/TARGET_ARCH/g

129	0	bin/oespawn

commit f0028641cdc8bbf0ca6c46719835912b8ce36237
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-09-24 05:10:36 +0000

1	1	bin/classes/base.oeclass

commit 6c67336d4e9abb7013a65068cf111bf53a01860a
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-09-24 05:09:56 +0000

    Correct the output path for bunzipped/gunziped files.

7	2	bin/classes/base.oeclass

commit 1a4b1ec2dd20000237f34a6cca0c6c36aab06ad4
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-09-24 04:03:13 +0000

    BUGFIX: Make package_rpm happy again, both with ARCH->TARGET_ARCH, and subpackages.

2	2	bin/classes/rpm_core.oeclass

commit 2b403e68b6718d69435f51ceb3849f6f52e396c7
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-09-23 21:28:47 +0000

    Allow variable references within the key of a variable definition.  i.e. FILES_${PN}=*

12	1	bin/oe/data.py
1	1	bin/oe/parse/ConfHandler.py
1	0	bin/oe/parse/OEHandler.py

commit a92f9209112878c7e68dafb2ac925441f7ace127
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-09-23 18:22:48 +0000

    Packaging granularity fixes.

4	0	bin/oe/data.py
1	1	bin/oe/parse/ConfHandler.py

commit 8188faa6941c6faeaac51b47d634ef534a37726b
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-09-22 19:24:50 +0000

    BUGFIX: follow deps when using --cmd install

0	1	bin/oebuild
2	3	bin/oemake

commit 655946aa6a40e80a25949616968e4c00d10f2ce5
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-09-22 16:43:59 +0000

3	2	bin/oe/build.py
1	0	bin/oe/parse/ConfHandler.py
6	1	bin/oebuild
9	16	bin/oeinstall
25	5	bin/oemake
2	2	doc/DEVEL

commit 563974e5114be9538383de023accd5959e1b2fa8
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-09-20 04:17:20 +0000

54	0	doc/TRANSITION

commit ff745fbbabbd02ac6d2ec1681b2b42b889b0ac34
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-09-20 03:45:06 +0000

50	0	doc/DEVEL

commit 490344435fd68f47aeecc33011d1612575d5ac97
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-09-20 03:17:55 +0000

    Delete: doc/ebuild.5.txt

0	733	doc/ebuild.5.txt

commit 940dcdf4700dbd4e5ee83f29ee6350f008acd077
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-09-20 03:17:55 +0000

    Delete: doc/ebuild.1.txt

0	184	doc/ebuild.1.txt

commit c5a7385fa13b8d2555a72210168f6aef23506bbd
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-09-20 03:17:55 +0000

    Delete: doc/OVERVIEW

0	16	doc/OVERVIEW

commit 0349ce6cfcfa997f4b37e979f81b22729c37405e
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-09-20 03:17:55 +0000

    Delete: doc/EVENTS

0	44	doc/EVENTS

commit dd6b63b7ef77c398f1f555b9803b680722c74211
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-09-20 03:17:55 +0000

    Delete: doc/DIRSnVARS

0	134	doc/DIRSnVARS

commit 40ec4d37f256ca2b7cc781889f17a30628359da6
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-09-20 03:17:55 +0000

    Delete: doc/COMMANDS

0	31	doc/COMMANDS

commit 75bb56ae30d3afd2bba2d2ea016a251e9f29bd9e
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-09-20 03:17:55 +0000

    Delete: bin/oebuild.old

0	607	bin/oebuild.old

commit faeb6d363b9189cdbb34967f03e072865d9a6b00
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-09-20 03:17:55 +0000

    Add real, actual, content to README.

57	8	doc/README

commit b6e923ebdde838d42ee2f03995674c4b0a390e5f
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-09-20 03:17:55 +0000

    Add -f/--files to oeinstall.

82	0	bin/oeinstall

commit a28a551b69e35458c4b4892014160e628956c028
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-09-18 18:26:59 +0000

    Remove debugging bits that shouldnt have existed.

1	1	bin/oe/build.py

commit bc5032ca5c6d127ce80f437cd8ee6b4ba3ba9ab7
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-09-18 18:26:59 +0000

    Create image deploy dir if it doesnt exist.

5	0	bin/oeimage

commit 33e4f627e922d1d2666a9e259b5052ef44aeb72f
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-09-18 18:26:59 +0000

    Add oe.which() function.

15	0	bin/oe/__init__.py
4	0	doc/TODO

commit 68b838d8bfecde3247b806c3b1089813bfd53d5b
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-09-18 16:16:59 +0000

    Use oe.build to spawn the image cmd.

113	0	bin/oeimage

commit 134fa45556b95cae0f6077060f9a6cf29870f129
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-09-18 16:16:59 +0000

0	2	bin/oe/build.py

commit c8922d6535fc92323974b1ba56084b9925588ce1
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-09-17 22:06:44 +0000

    BUGFIX: proper default of 'packages' to all oe's in OEFILES.

1	1	bin/oemake

commit b14323a667e92cdfe422c9f5003d3ffad7581027
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-09-17 21:17:51 +0000

    Alter oemake syntax.  see oemake --help for details.

16	17	bin/oemake

commit c5046a53c07abff48d2fec4a276cbfe81507b1ce
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-09-17 19:31:50 +0000

    Update TODO

48	85	doc/TODO

commit 7be20bed17b094cedcafe74fb372540baa6855df
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-09-16 23:19:11 +0000

    Correct behavior of die and oefatal.

2	2	bin/classes/base.oeclass

commit 885e72976c11284d8e0ed0e26d49eea2b2e216a2
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-09-16 20:41:31 +0000

    Critical BUGFIX: Add 'directory' handling to unpack for cvs and bk sources.

6	5	bin/classes/base.oeclass

commit 6a80584c9bc85c9e92d9ad5111a63b19e7b75eaf
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-09-16 18:40:34 +0000

    Dont remove the log after success, its useful to have around.

1	1	bin/oe/build.py

commit 1f1a4f3abc523156b2ffde41b56cceada7f26fe2
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-09-16 18:40:34 +0000

    Delete: bin/build/oeset

0	11	bin/build/oeset

commit 5e779d9ed6d90af3511e46dd8d78c6cbff05be89
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-09-16 18:40:34 +0000

    Delete: bin/build/oenote

0	5	bin/build/oenote

commit cb44492081cce9c40926dab79335ca4da691ba0d
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-09-16 18:40:34 +0000

    Delete: bin/build/oefatal

0	5	bin/build/oefatal

commit 2fcda3499f371dab831911385de1a12ffc87003c
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-09-16 18:40:34 +0000

    Delete: bin/build/oedebug

0	13	bin/build/oedebug

commit 5fcbfe39b5ad744515bf73516c87a011496f0e81
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-09-16 18:40:34 +0000

    Auto merged

0	2	bin/build/die
0	38	bin/build/oe_runconf
0	9	bin/build/oe_runmake

commit f19d22005f47c90c6b26584701e139b3afb33ff8
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-09-16 18:40:34 +0000

    Add autotools oeclass, and move the bin/build bits away.

53	7	bin/classes/base.oeclass

commit 535dd19abe91f0acc31b162c92e28c0c303215da
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-09-16 05:59:52 +0000

    Update TODO

3	3	doc/TODO

commit dc432094fa3bbcb7d50a01c6cc6ede1e2c762c69
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-09-16 05:59:52 +0000

    Pass 'dirs' param in the reverse directly at export_functions time.

4	4	bin/oe/parse/OEHandler.py

commit 87d2c4731006ea219b282b6e611298bbc9a7c996
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-09-16 03:23:04 +0000

    Remove unnecessary debug output.

0	2	bin/oe/build.py

commit a07628e343deb04e0981475b5e74f518e92e3e38
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-09-16 02:37:34 +0000

    Move unpack into base oeclass.

31	7	bin/classes/base.oeclass

commit 7befafed4e3a1f6a97edd9eba39d5b49bd004ac2
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-09-16 02:37:34 +0000

    Delete: bin/build/oebuild.sh

0	411	bin/build/oebuild.sh

commit 96cbd95aec1eb04bc9412d38f4cff0cd66208c58
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-09-16 02:37:34 +0000

    Better log handling in exec_func_shell, and call 'sh', not 'bash'.

43	10	bin/oe/build.py

commit 2c06a743d4cf4f86637adfe9148dd00f0daba86f
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-09-16 02:37:34 +0000

2	0	bin/build/die
38	0	bin/build/oe_runconf
9	0	bin/build/oe_runmake
1	2	bin/oe/__init__.py

commit 1c4e019987742a00ce3946b4f96e2c96d3992b13
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-09-12 21:16:04 +0000

    Update TODO

5	8	doc/TODO

commit a23dea42158d201eef8ebcb109aa2ac44b477b09
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-09-12 21:16:04 +0000

    Allow PN-PV files dir

1	0	bin/oe/parse/OEHandler.py

commit 3a5f539c09a2e18ef1b3bf3d20b6d7247582a196
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-09-11 21:26:22 +0000

    Add mtd bits to TODO

22	4	doc/TODO

commit 1242948c62e3e3773e730218490ebef833840539
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-09-10 21:36:49 +0000

    Update TODO

9	4	doc/TODO

commit 338ad7bac991c4424fa6f0c5137fe5b705a78fa6
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-09-09 20:27:54 +0000

    Update TODO

30	26	doc/TODO

commit 9a567c7e9a5486beb6f7ca7bf71534900eee15bb
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-09-09 20:04:20 +0000

    BUGFIX: perms on sed'd libtool binaries

1	0	bin/build/oebuild.sh

commit d463ae45626f2d269ade06d2adace300e8d70fcf
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-09-09 17:55:58 +0000

    Add libtool handling to oe_runconf.  First, locates any ltmain.sh files in the source tree and updates them with ours.  Then, runs the configure.  Finally, searches for produced libtool binaries and seds out the hardcoded sys_lib_search_path_spec and sys_lib_dlsearch_path_spec vars.

11	0	bin/build/oebuild.sh

commit 442044a5dfe71cd7d586a6259499de7fcba60e50
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-09-09 06:00:45 +0000

    Update TODO

7	0	doc/TODO

commit 271b7948bd86d0d67b5fb0b95854438b202f7010
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-09-08 22:51:32 +0000

    Update TODO

9	1	doc/TODO

commit 6ce70278fe5f3b2c9a07b9f9a9e0521dbfd59f2b
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-09-08 22:51:24 +0000

    BUGFIX: the set_additional_vars was called before update_data, so overrides of components of additional vars wasnt working properly.

1	1	bin/oe/parse/OEHandler.py

commit 4f88758da76959cc8b9b2275033080d3315b7ed6
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-09-05 21:35:17 +0000

    Add busybox conversion to todo

5	1	doc/TODO

commit 3944c89a4ee0764221c89bae47d46c5abae17bc9
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-09-04 20:39:26 +0000

    Update TODO

10	4	doc/TODO

commit 623cc4357cabfa42bd210fcb5e0df8515bae40e4
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-09-04 20:39:26 +0000

    Return to previous dir after fetching

2	0	bin/oe/fetch.py

commit f021fef7eb79f7730be6f3f38b738627b088f1a6
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-09-04 20:39:26 +0000

    Correct patcher dependency

1	1	bin/classes/base.oeclass

commit 711faa9b6d947fa184e4e9744d53c116b6d6207b
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-09-04 15:36:18 +0000

    Add some more target filesystem paths

14	6	bin/build/oebuild.sh

commit 8dc535c9ede6d10297de75ced92b364512746c6b
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-09-04 00:28:32 +0000

6	6	bin/oe/parse/OEHandler.py

commit 24dbd08120edb3b7c97cc0dca8c7c447f6cdefd9
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-09-04 00:27:34 +0000

    Update TODO

34	16	doc/TODO

commit 4d96e6e9506116dad83847455f578cd96e4e9a96
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-09-02 21:26:36 +0000

    Update TODO

58	71	doc/TODO

commit 3325c317ba478becb641f787b758038352d8f904
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-09-02 17:55:01 +0000

    Update TODO

7	48	doc/TODO

commit 03177c5115dd4a785fe7bca5cd777696dc437a8e
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-09-02 17:55:01 +0000

    Convenience function

3	0	bin/oe/build.py

commit 13b69dcc4422d52273c8c543a4d7bae05d9fe1a0
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-09-02 17:55:01 +0000

    Add __str__ method to digraph for diagnostic purposes.

7	1	bin/oe/__init__.py

commit 002eeb208d7db45efef2355d1cdc508e1b212bf2
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-07-31 22:50:04 +0000

    Update TODO

3	6	doc/TODO

commit 20e2143fb1c7b7ef2c64b3ec2d31e010b0b06287
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-07-31 19:37:01 +0000

    Update oebuild and oemake usage information

4	2	bin/oebuild
2	0	bin/oemake

commit 806f18745b1011ab5c6a597f6c9b11ba8bd457cf
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-07-30 21:25:38 +0000

    BUGFIX: Make --cmd work for oemake (-c worked previously, just not --cmd)

1	1	bin/oemake

commit 6e922597f7aaa9183d5790eb8e6f8d703685ef30
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-07-30 21:22:11 +0000

    Remove the necessity to append do_ to commands to clean up UI.

3	4	bin/oebuild
5	5	bin/oemake
6	6	doc/TODO

commit 220c3e731ac449d0fd10b9917dc06a9920216592
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-07-30 02:04:38 +0000

    Complete TODO: Allow specifying TOPDIR via the environment or .conf file, without breaking upstream source operation.

2	0	bin/oe/parse/ConfHandler.py
8	4	bin/oebuild
1	1	doc/TODO

commit 3164bd5c985d14484df9049bf9d5fea81b0fe114
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-07-30 01:34:45 +0000

    Complete TODO item, allow -c/--cmd option for oemake to specify the task to execute on the oefiles.

35	17	bin/oemake
1	1	doc/TODO

commit 4acc440fdb665c186d4a740cf4e328b6ef6febc1
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-07-30 01:22:23 +0000

    Check for .oe files in current dir in oemake execution.

22	0	bin/oemake
1	1	doc/TODO

commit b8435c26b57eb9b10a9b1c1b306561485605fc9f
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-07-30 01:15:08 +0000

    Complete TODO items related to execution of oebuild with a single commandline argument.  Satisfying requirements for cmd and oefile defaults.

106	42	bin/oebuild
4	4	doc/TODO

commit a087689bf0c493ccf5c3826d2245d6ea5bf3b4ef
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-07-29 21:17:19 +0000

    Update TODO with more extensive requirements for upstream operation

39	0	doc/TODO

commit eaceb7537ec4dd5504a8a2ac8116fbd8d49290ab
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-07-28 23:54:49 +0000

    Prevent an infinate recursion case

15	0	bin/oe/__init__.py

commit 9111e8d6bd96a1fccca190638de618db105cfd86
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-07-28 23:54:49 +0000

    Allow deletion of prepends/appends items

3	0	bin/oe/data.py

commit f1b0c9f1e145996a53ae923d5c9db111f4807867
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-07-28 23:12:56 +0000

    Remove debug output

0	1	bin/classes/base.oeclass

commit 8865dd9f7088f538b8119ab2848a0ad7813ce308
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-07-28 23:12:56 +0000

    Give .oe files the ability to add items to oefiles (needed for upstream operation)

10	1	bin/oemake

commit 51273482c1d37ee6b8197d367dbe1e5d6af99fd8
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-07-28 23:12:56 +0000

    BUGFIX: vars_from_fn handling in the case of a filename only containing filename not version or revision.

8	6	bin/oe/parse/OEHandler.py

commit 1c2a553d03f41d70158c798a0092bfc960017d44
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-07-28 20:36:36 +0000

    Update TODO

10	17	doc/TODO

commit 0ea47a3222e5b405734a74d0fbf856f06d941ad1
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-07-28 20:36:36 +0000

    Revamp bits of the variable set from filename

42	17	bin/oe/parse/OEHandler.py

commit e736c2d066d18d08e8bc83c0c9c2cb1912d09cbc
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-07-28 20:36:36 +0000

    Preserve current path

6	0	bin/oe/build.py

commit 3c8b772acab0edbabb0eaec03ad9d6589ab01244
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-07-28 20:36:36 +0000

    Allow seperate build dir from src

3	4	bin/build/oebuild.sh

commit 6557d89b4ecab9d93fc0803f4d4bbfb4c7974582
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-07-28 20:36:36 +0000

    Adjustments to current path to facilitate better interaction in an upstream source dir.

17	2	bin/oebuild

commit 47705bc769a48768f5e63245af309697d8a6c2d6
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-07-28 20:36:36 +0000

8	6	bin/classes/base.oeclass

commit fac33cf42bddc1c3127d0e22dce3ed9c36278e04
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-07-25 19:47:27 +0000

    Update TODO

2	1	bin/oe/__init__.py
12	0	bin/oe/build.py
1	0	bin/oe/fetch.py
27	0	doc/TODO

commit 16a0cf163656d3aef221e48e8e74f35ed072248c
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-07-25 19:47:08 +0000

    Complete a few TODO items for functionality in an upstream source.  Specifically, bits regarding the automatic set of PN/PR/PV

66	12	bin/oe/parse/OEHandler.py

commit cafefc92744d47e158e0cd9528c2045704a0f73b
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-07-14 17:54:20 +0000

    Update documentation, and make use of doctest, for the 'data' implementation.

170	117	bin/oe/data.py

commit e13d0f203ecff8ba2aec8c83a2683afd1d583743
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-07-14 17:54:20 +0000

    Update TODO

14	15	doc/TODO

commit 216fdc8e03961ebad5bc4cb20f9a6732a485d5ea
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-07-10 19:27:52 +0000

    Rename oemake the make spawn tool to prevent namespace conflicts with oemake the package build tool

3	3	bin/build/oebuild.sh

commit 7bef6e879f507bfa513b4a3c4ec1ab0f19e017c5
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-07-10 19:27:52 +0000

    BUGFIX: Handle uncompressed patches properly

9	5	bin/classes/base.oeclass

commit 2726b020aa9ae9316c0da347003be7235172b972
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-07-09 18:19:58 +0000

    Update TODO

6	0	doc/TODO

commit 25349e31926f179f8e43ac47b8389d694541d0bf
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-07-09 18:15:09 +0000

    Move .oe/.conf obtaining into the handler rather than include.

30	23	bin/oe/parse/ConfHandler.py
4	2	bin/oe/parse/OEHandler.py
3	3	doc/TODO

commit 6f956b3a5455242ea1a20fd2cc91d0e3e6b1f427
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-07-09 17:58:32 +0000

    Update OEFILES based on cmdline files in oemake

1	0	bin/oemake

commit 4fccedafc1d8d0e6bf16680f10174c183fe3b8b9
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-07-09 17:58:32 +0000

    BUGFIX: dont require write access to .conf files

1	1	bin/oe/parse/ConfHandler.py

commit 047a5e0c55ef7cf8c802fc6851ac01e6f929b307
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-07-09 17:58:32 +0000

    Allow passing 'dirs' in, in exec_func. needed by the rootfs population .oe

3	2	bin/oe/build.py

commit b4aad2e554121fc0e16bdbe8ef8fb8b58e459ca5
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-07-09 17:06:49 +0000

    Revamp our _prepend/_append handling to fix the major bug mentioned in the TODO

60	18	bin/oe/data.py
5	1	doc/TODO

commit a6a0f42a0d66e5fdb731b498cfcf01ce8a37ccad
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-07-07 22:18:48 +0000

    Teach 'include' lines from .oe/.conf/.oeclass to be able to fetch it from upstream.  Note that it must be as is, does not unpack.

3	1	bin/oe/__init__.py
44	2	bin/oe/parse/ConfHandler.py
1	0	doc/TODO

commit 39003c532989155904c01cf49df186071eccaf62
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-07-07 17:34:52 +0000

    Update TODO.. add a couple items and remove the completed items to clean it up.

15	48	doc/TODO

commit 08b6738e340676cb057e3530333aca4250c13bf7
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-07-07 15:26:18 +0000

    Update TODO

25	0	doc/TODO

commit 4b3080da446a416f54199a8f170fab6c67600fdb
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-07-07 15:26:10 +0000

    Change a copy to a deepcopy to fix a bug in package metadata leakage into the next package.

13	8	bin/oemake

commit e6cd29b8d81f16a528e0940fa8653a22bde4e0d4
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-07-07 15:26:10 +0000

    BUGFIX: uncomment a miscommented block :)

2	2	bin/oe/data.py

commit 50955a8b419b5659a86170d83b992854954e759d
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-07-07 15:26:10 +0000

17	9	bin/oe/parse/OEHandler.py
0	2	bin/oebuild

commit 6bb575bc73ad550a31bc5accbb180d594d2cf7c3
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-07-03 19:26:40 +0000

    Update TODO

2	2	doc/TODO

commit 0701f7c5ebaaa45e191d98d1e2296bf7d71a04e1
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-07-03 18:57:56 +0000

    Teach oemake to handle wildcards in OEFILES

6	0	bin/oemake

commit 2f6277e8e74bc422c595101e6cb9447802688839
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-07-03 18:57:56 +0000

    BUGFIX: make INHERIT work.

1	0	bin/oe/parse/ConfHandler.py
3	6	bin/oe/parse/OEHandler.py
0	129	bin/oespawn

commit 3c9cf72c4970c9018c0545e8016248616cf21ceb
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-07-02 23:03:42 +0000

    BUGFIX: oedir vs topdir was breaking filesdir

10	7	bin/oe/parse/OEHandler.py

commit 04f565ba84db47aad257e338b2ca329dc1facec6
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-07-02 23:03:42 +0000

    BUGFIX: 1) wasnt expanding OEFILES, 2) was aborting when no .oe files were specified on the cmdline, despite OEFILES being set.

31	9	bin/oemake

commit f7cc6194075d2351c8551e41461ae6f73c5e0d5c
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-07-02 23:03:42 +0000

    Add an emit_var convenience function

29	18	bin/oe/data.py

commit da8310c38ceecc6803437b2adcadeb62b7baab10
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-07-02 23:03:42 +0000

129	0	bin/oespawn

commit 15295748029ae796bf87e3dc2c91182b2df3b796
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-07-02 18:33:35 +0000

    Update oebuild usage information

6	2	bin/oebuild

commit 2390095860e3bb660d1d76b8c72ca8486435538c
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-07-02 18:33:35 +0000

    Update TODO

7	1	doc/TODO

commit ea5833d533d2999fa4bd1a2b81d1ac74be210ce4
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-07-02 18:26:35 +0000

    Add -v/--version cmdline opt to oebuild

4	3	bin/oebuild

commit b1bbd99de1724a9c553b578187022c79577bdd53
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-07-02 17:48:49 +0000

    Turn on SCCS flag

26	9	bin/oebuild

commit 85ddd1808e2e3ef9fb5c3b2b296be668878563d7
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-07-01 22:43:31 +0000

    Add /usr/share/oe to the end of oepath regardless.. makes it easier to use the OE rpm.

1	1	bin/oe/parse/ConfHandler.py

commit ee3a90e1857f11e624f065ef07205fa1f22301b7
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-07-01 22:12:44 +0000

    Add optional third argument to getVar, which results in the data being expanded as well.

5	2	bin/oe/data.py

commit 989b3ce252e9cc014006e2d40e4fff9756b389b7
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-07-01 21:42:38 +0000

    add 'bk' as a valid version ending

1	1	bin/oe/__init__.py

commit 4ed65289ee1db62210436e1aafed91b303e6fdfb
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-07-01 21:42:38 +0000

    Add /usr/share/oe to the pythonpath.

3	1	bin/oebuild
1	0	bin/oemake

commit d68201d59e3f1ee8af145f0beb29fe80f03f99c6
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-07-01 21:01:36 +0000

    Finish up the rpm output form

1	19	bin/classes/base_srpm.oeclass
16	0	bin/classes/rpm_core.oeclass

commit e35d5513719d5c910b616572e36f53c7dda85ea1
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-07-01 18:00:41 +0000

    Update TODO

2	2	doc/TODO

commit e4788f36bc9d436a04974acf67137d0ca0af80d6
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-06-30 23:26:17 +0000

    Updates to the srpm builder.. it actually seems to function now, and populates the 'D' with the files using package.oeclass :)

16	14	bin/classes/base_srpm.oeclass
76	2	bin/oe/parse/SRPMHandler.py

commit de43dddcd0b2fad41419d598619aa7a5a8f96ce6
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-06-30 19:51:21 +0000

    BUGFIXES: we didnt reset some flags on certain pieces of metadata, as a result, overriding a variable would occasionally pick up remnants of the previous version of that variable.

28	14	bin/oe/parse/OEHandler.py

commit 42508af1e7005d47ea560d359f7bda6d9a83c78f
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-06-30 19:51:21 +0000

    BUGFIX: remove the duplicate event firing on start and stop for a task.

12	9	bin/oe/build.py

commit 53ab92d1cc3793f6fe6b31c19cc8bdd01dfd3c04
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-06-30 19:51:21 +0000

    BUGFIX: do_patch shouldnt fail when SRC_URI is unset

9	8	bin/classes/base.oeclass

commit b69f0dd0b1d83e61ca89d38c2b25b5b76f2f4e39
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-06-30 19:51:21 +0000

    BUGFIX: corrected a serious bug in the addtask implementation which would result in postdeps not propogating.

1	1	bin/oebuild

commit 1e5f7c586bb0ecdcfa9056d602593dd7fa53f250
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-06-30 19:51:21 +0000

    BUGFIX in python sub in export (${@pythoncode}), import oe and set the d local variable to the data class in use.

4	2	bin/oe/data.py

commit 63720964a92edea2bd5f31d9d78ce413ade5d301
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-06-30 19:51:21 +0000

    Add src.rpm handler

8	4	bin/classes/base_srpm.oeclass
1	0	bin/oe/parse/__init__.py

commit 205ed03f656bce365c1dd590a83fd135bbca2188
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-06-30 19:51:21 +0000

54	0	bin/oe/parse/SRPMHandler.py

commit 275fbc2ef540e32b80965947c77a7cf046333525
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-06-30 17:15:14 +0000

    srpm class naming change

32	0	bin/classes/base_srpm.oeclass

commit 5ad5342a953d7e0bea9ae89e417237b581eee79b
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-06-30 16:56:59 +0000

    Call update_data() in the .oe handler.

2	3	bin/oe/parse/OEHandler.py

commit b808c8feb05d545450c6f3029bb67e2d59b44e95
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-06-30 16:56:59 +0000

    1) prepend content/patcher to DEPENDS, to ensure we have patcher to do patch application, and 2) obey our PATH in patcher execution.

10	5	bin/classes/base.oeclass

commit 6a2a9435462d7b5b0c152297d624d09d7e8dc122
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-06-30 16:28:55 +0000

    BUGFIX: patch wasnt being added to the 'after' list for compile.

2	2	bin/classes/base.oeclass

commit 71fe734be74504fdc875aad12ce2f74431277d31
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-06-30 16:11:26 +0000

    Teach do_showdata to emit the python functions as well.

5	0	bin/classes/base.oeclass

commit 0b75e38e9e626ad33789a2bb49ecc2d9df4caae7
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-06-30 15:47:26 +0000

    Set 'nostamp' on do_showdata

2	1	bin/oe/build.py

commit d56e43c3c5b5405e8af7d621fb9809f60710e48f
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-06-30 15:47:26 +0000

    Add 'do_showdata' task, which does what do_showenv did in the previous incarnation of oebuild.  That is, it emits the entire contents of our store of metadata.  Often useful in debugging.

7	0	bin/classes/base.oeclass

commit 4bb5a79bf91be7cbc5ea2634e1e3c440203157a4
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-06-30 15:07:30 +0000

    Allow passing .oe files on the commandline as well as via OEFILES.

12	9	bin/oemake

commit 17821b4890285346da7013be372089d37bd6e95d
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-06-27 23:10:05 +0000

    Implement an inheritence cache.

5	2	bin/oe/parse/OEHandler.py

commit 14722673e734ce048c5132a51f10a7524e4c6cf8
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-06-27 22:48:19 +0000

    Changing the behaviors of include and inherit wrt non absolute paths

9	8	bin/oe/parse/ConfHandler.py
8	16	bin/oe/parse/OEHandler.py
2	1	bin/oebuild
3	3	bin/oemake

commit 23e4a4fc76241949356209b74c79e3ebdb1cf32c
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-06-27 21:12:08 +0000

    Pass config data into the overall build event handlers, thereby making them slightly more useful.

12	3	bin/oemake

commit 2f79a438b6157770a9bacd72e19583dbd8ab4137
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-06-27 20:17:40 +0000

    update TODO

14	3	doc/TODO

commit 6809dcc0ee6c461b8a8e6f510ef7794503c0a5a4
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-06-27 20:00:55 +0000

    Rename: bin/buildtest -> bin/tests/build

0	55	bin/buildtest

commit d8fb8f0d4ca722e49d8d3f969d041c0a4ab18ad1
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-06-27 20:00:55 +0000

    BUGFIX: D var was being hosed.

7	6	bin/oe/parse/OEHandler.py

commit 97c176355b52b6959a935a7e2ef2cc81958c462c
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-06-27 20:00:55 +0000

    Add BUILDNAME variable for overall build naming.

5	1	bin/classes/base.oeclass
38	0	bin/oemake

commit 5853aafbcfea608bd8c4b35e16e792c4b7a86934
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-06-27 20:00:55 +0000

    Add BUILDNAME and do_patch flags to initialization

2	0	bin/oe/parse/ConfHandler.py

commit d8b28d544cd7ba8e9c303e72f8ce2ed04ee71b3a
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-06-27 16:56:25 +0000

    Convert package and package_ipkg to new implementations of parsing and data, and add update_data (was update_env) to the new data impl.

104	0	bin/oe/data.py

commit 6444b7cfbc35b2ba210c404c4b41fa25eb004946
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-06-27 16:56:25 +0000

    Cleanup output

0	1	bin/classes/base.oeclass

commit a7a3dec183c3ccd5258abd96ff7010124ab6ab53
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-06-27 16:56:25 +0000

    BUGFIX: 'before' wasnt always working from addtask

4	5	bin/oebuild

commit fe9d72c38aa97ca86361c377997e94459a45c45a
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-06-26 23:54:24 +0000

    Rename: bin/oebuild2 -> bin/oebuild

47	579	bin/oebuild
0	75	bin/oebuild2

commit a344819ce2fdfe5d6631caff310d739508b4f718
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-06-26 23:54:24 +0000

    Rename: bin/oebuild -> bin/oebuild.old

607	0	bin/oebuild.old

commit bff07eb1c3ccc068dde92e43ef36ca547d4703f7
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-06-26 23:52:01 +0000

    Handle postdeps (aka 'before') for added tasks

14	1	bin/oebuild2

commit 274db28e0d782d9e61b8cda285a56a1b9e43b533
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-06-26 23:52:01 +0000

    Correct the intermix of flags amongst EXPORT_FUNCTION wrapper functions

27	12	bin/oe/parse/OEHandler.py

commit fe8fd83fa378b70df279bcc4d0772178cbfc4c41
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-06-26 23:52:01 +0000

    Correct dir creation and chdir in function execution

22	13	bin/oe/build.py

commit 32ef762f99a50aba209d1404a5c1670f3cb7e420
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-06-26 23:52:01 +0000

    Adjust output

3	1	bin/build/oebuild.sh

commit 457a838dd1be0d43d89d40e81bce54f0eac09ad9
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-06-26 23:52:01 +0000

    Add staging_bindir to path in emit_env

9	5	bin/oe/data.py

commit d4d4c964b589e17d8a0b08f9452fff7a3e216b1d
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-06-26 23:52:01 +0000

    Add clean and mrproper targets

42	8	bin/classes/base.oeclass
3	0	bin/oe/parse/ConfHandler.py

commit de126dc612b50f29c0b5553bdddef14e03af8371
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-06-26 20:39:00 +0000

    Update TODO

6	2	doc/TODO

commit ecd8ebc77c0d01c6d8f4d1ee357032952bb3cf38
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-06-26 20:13:09 +0000

    Enhancements all around, rework of the python function implementation, move do_fetch into the base class, set default flags for both config metadata and task metadata, and add a task execution cache and stamp checking to oebuild2.

55	17	bin/classes/base.oeclass
1	1	bin/oe/__init__.py
83	8	bin/oe/build.py
9	8	bin/oe/fetch.py
123	1	bin/oe/parse/ConfHandler.py
36	6	bin/oe/parse/OEHandler.py

commit a632b1e13f0009ad49090533e42dc75d154ce12e
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-06-26 05:38:22 +0000

    Update TODO

7	5	doc/TODO

commit 996405157129f170a449487f70b2a774154f699f
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-06-26 05:24:18 +0000

    Make use of the EventException

4	6	bin/oe/build.py
1	14	bin/oebuild2

commit 0e36cf0f40ea6b70753f635e0e46b63392943367
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-06-26 04:59:40 +0000

    Undo an accidental commit of changes to the event handler that would break the original oebuild.

4	8	bin/classes/base.oeclass

commit 2f8cab749ae8200b272d8fb761af095f75ff59be
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-06-26 04:56:49 +0000

    Minor status output formatting cleanups

8	4	bin/classes/base.oeclass
9	6	bin/oe/build.py
3	1	bin/oebuild2

commit 4e83f3a92e19f06d8683ec75fabe3bb433083464
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-06-26 04:56:49 +0000

2	2	bin/oe/parse/OEHandler.py

commit 3cf45683dc8854348720c321a0ec6f2810abb3dc
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-06-26 03:38:49 +0000

    Slight correction to emit_env wrt PATH

3	1	bin/oe/data.py

commit afd030b3c08a6f7d64ec49aa91217002bb07b3e6
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-06-26 03:38:49 +0000

    Slight cleanup in the build test

11	4	bin/buildtest

commit f88d25e9b9dbf207eff911e89032bb3bc1c85a75
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-06-26 03:38:49 +0000

    Remove unnecessary init that was moved into the parser init

0	7	bin/oemake

commit c8833d31f4d2a4ad6509f122c0bcaebf5703694c
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-06-26 03:38:49 +0000

    Move initial global conf var flag setup to the conf handler's init() function.

10	3	bin/oe/parse/ConfHandler.py

commit cf5f65030a7b88bc996a38d762fcd4cd74ff2310
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-06-26 03:38:49 +0000

    More addtask calls in the base oeclass for the initial task stack setup.

9	3	bin/classes/base.oeclass

commit 808aa6ca5afb34b728bcf75713a9b9a2d739a95f
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-06-26 03:38:49 +0000

    Major bugfix in the oehandler's set_automatic_vars function

1	1	bin/oe/parse/OEHandler.py

commit d34b3e42de52ef91233e16e79a4cac39420a89ba
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-06-26 03:38:49 +0000

73	0	bin/oebuild2

commit 151a67dc816f9d85c7313c07ab1efe2fecbf68a1
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-06-26 03:38:49 +0000

    BUGFIX: call data.expand on the vars we pull from the data store.

3	2	bin/oe/build.py

commit 17c1d274210dbb1b598a9f9a59710e8567e1d2f6
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-06-25 21:50:28 +0000

    Enhance delnode in our digraph.  Now supports (optionally) removing 1) references to this node from other nodes, or 2) other nodes that reference this node.

1	1	bin/buildtest
15	1	bin/oe/__init__.py
8	9	bin/oe/build.py

commit 26373889b58d155ef6e9b8d9c62c3a9bb380b2a7
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-06-25 21:21:36 +0000

    Alter function execution behavior with regard to directories.  Now uses a var flag to store the list of directories we want created prior to execution, and the last dir in the list is the one we 'cd' to.

3	3	bin/buildtest
20	8	bin/oe/build.py

commit 1bd7b7c809cb16c0d227023a35eb9d7e361b6826
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-06-25 20:55:54 +0000

    Updates to build test application: Execute a task that exercises our use of intertask dependencies, test task removal, and catch task execution failure.

25	4	bin/buildtest

commit eccc065407412b66720ff09151872b7b12189aae
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-06-25 20:55:54 +0000

    Move event firing and exception raising into the task functions, not the function call functions.  Also a few bugfixes, confirmation of add_task, exec_task, and remove_task functionality.

33	15	bin/oe/build.py

commit 66c76c75e904a838205f74180b91be9f99ad3d09
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-06-25 20:53:33 +0000

    BUGFIX: typo, its okeys, not oekeys.

1	1	bin/oe/__init__.py

commit 6c35b9772c1f67af80d125bfc3c01c44888bd40c
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-06-25 20:53:33 +0000

    BUGFIX: typo in emit_env

8	5	bin/oe/data.py

commit 9b25e060b678cbd902e44e7820eb3f4db1ed0085
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-06-25 20:22:35 +0000

27	0	bin/buildtest
192	0	bin/oe/build.py

commit 2d13794be49bc6b07295008f7f94136a74a67555
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-06-25 20:22:35 +0000

    Auto merged

1	0	bin/oe/__init__.py

commit 73909a8fefe0a5dc6f71d6ed2400cfa60b223227
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-06-25 19:20:02 +0000

    Use list comprehensions to clean up the followup function

4	10	bin/oebuild

commit 9c5a6fd13d33d26fc76ef52b968859581c209b5d
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-06-25 19:20:02 +0000

    Rename: bin/tests/parswe -> bin/tests/parse

0	11	bin/parse

commit 0b216b69769f10fac01ab5ab03f82eab31c007fc
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-06-25 19:20:02 +0000

    Rename: bin/fetch -> bin/tests/fetch

0	8	bin/fetch

commit 260be4c0635d53ecbdc2d85bef6c3c21101b5fd3
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-06-25 19:20:02 +0000

    Rename: bin/event -> bin/tests/event

0	32	bin/event

commit e8383d4d8303472d98947be00b59e54413035147
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-06-25 19:20:02 +0000

    Rename: bin/data -> bin/tests/data

0	34	bin/data

commit 250512edd6ee131dbfb574af99bb92689cd105cc
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-06-25 19:20:02 +0000

    Cleanup oebuild.sh, remove items which are no longer necessary.

1	83	bin/build/oebuild.sh

commit bc6f8e73fd7f67132f7060eace6938b059559d7c
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-06-25 19:20:02 +0000

    Add a few convenience methods to our digraph class.

33	0	bin/oe/__init__.py
5	45	bin/oemake

commit d3715b38d291f9371e519c1d5f270665a10d083d
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-06-25 01:00:13 +0000

    Add a small function for obtaining the name of a class or class instance, for use in event handlers.

9	15	bin/classes/base.oeclass
7	0	bin/oe/event.py

commit 16a0ab920bdb6972aaa19ed8c2155fc997c43b6d
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-06-25 00:37:02 +0000

    Escape the doublequotes in the variable contents in emit_env so as not to break the emitted variable definition.

5	1	bin/oe/__init__.py
5	1	bin/oe/data.py

commit ba3fc4bad92b69c06c3f27efbe20461a0e2d8789
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-06-23 21:38:02 +0000

    Change default package target to 'build' rather than 'package' to handle additional tasks like package_tarball that sit at the top of the task stack.

1	1	bin/oemake

commit 76f9ee041e1c172fdf732ec7138bcf4600d74ae4
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-06-23 21:38:02 +0000

    BUGFIX: lists dont have a prepend method :)

3	1	bin/oe/parse/OEHandler.py

commit 55077e7278181efbcf7bc9482328b63975ed56da
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-06-20 15:56:09 +0000

    update TODO

1	0	doc/TODO

commit a1bae9faaa7ce8bc0bd613e5bcc4a7faf80e8acc
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-06-20 15:56:09 +0000

    Call oemake if there's a makefile regardless of whether it had called oeconf.

2	0	bin/classes/base.oeclass

commit 5c8231bd72ec2bf48aee02a3cd734fcb71ad52a3
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-06-20 15:56:09 +0000

    BUGFIXES: 1) import fatal from oe, 2) set automatic vars only for .oe files.. then added a 'inherit' function, to make a TOOD item easier

32	20	bin/oe/parse/OEHandler.py

commit 4debdc93b010b8736fcb9ff841c422987679dcd8
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-06-20 15:56:09 +0000

    BUGFIX: import types

1	0	bin/oe/data.py

commit c9370c5e65055041e3b4a1339e7ee29f75ffc54e
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-06-20 00:14:21 +0000

    Better handle .oe files that reside outside the projectdir and oedir.

6	3	bin/oe/__init__.py

commit f40ba9acbc3470801766e3e2fa5dfa526859ef15
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-06-20 00:14:21 +0000

    BUGFIX: cvs checkouts with username but not password were broken.

2	1	bin/oe/fetch.py

commit 0a758b79f7663370dd197ccdb95b8f599be5278c
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-06-19 23:30:41 +0000

    Update TODO

1	1	doc/TODO

commit 29c3d80c873fff9232a52b04ce7329968bc2f823
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-06-19 23:30:41 +0000

    Bugfix the build task.

5	1	bin/classes/base.oeclass
1	7	bin/oebuild

commit ea843a1aa05570afb23a982824320fdb00333ec0
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-06-19 23:30:41 +0000

    Add UnsatisfiedDep info to the event docs, and add a small blurb about event handling.

14	1	doc/EVENTS

commit 4214c9ead86654a192842af670501f7520bad15c
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-06-19 16:09:29 +0000

16	0	doc/OVERVIEW

commit c71c0e05ba68628ee602013f835ee1189a2ee7b8
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-06-18 19:55:24 +0000

    Update TODO

8	6	doc/TODO

commit c735436b19173a876d80d152fe8dc6a45b1b549a
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-06-18 19:55:24 +0000

    Pull the pkg information from the obtained environment data, not from catpkgsplit directly.

5	3	bin/oemake

commit 7d14c9fec18c15238cee80ade41991c406205c29
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-06-18 19:55:24 +0000

    Move set_additional_vars into the new parsers.

59	30	bin/oe/parse/OEHandler.py

commit d044bd0cdce7127b11e568150ffb9164435c6c0d
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-06-18 19:55:24 +0000

    Changing the way fetching is handled.

20	8	bin/oe/fetch.py
68	72	bin/oebuild

commit aa6e74fc1e96121325b5de33e779f2b18d5c99bf
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-06-18 01:58:35 +0000

    Correct the dependency tree walk in the 'undo' code path for the rebuild handling.

34	15	bin/oebuild

commit bc26b0685fad010aea8e3427fbad8b74f46a4e28
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-06-18 00:46:44 +0000

    BUGFIX: exception handling in open of hte md5 stamp

1	1	bin/oebuild

commit 09cfe2ddd18f457f89a925c170fa42161b1d4f5e
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-06-18 00:37:15 +0000

    Update todo

2	2	doc/TODO

commit 760da002c71ef9e3d7fd01671ef0acfb5850b7bb
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-06-18 00:36:30 +0000

    Add md5 checking of certain env vars to determine build/rebuild of tasks :D

93	2	bin/oebuild

commit f8580dfc74fcc153a28eb9def98bdc2a55bd3380
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-06-17 23:27:36 +0000

    Add task event firing in the fetch function.

46	13	bin/oebuild

commit ad4f0e7d8930a8d45dd56943cc866e09147810a8
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-06-17 21:56:16 +0000

    Display the unsatisfied dep in the base event handler.

3	1	bin/classes/base.oeclass

commit e70d45eb7fd66840ee6b610ed8c3089db2339f22
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-06-17 21:56:16 +0000

    Add fire of an UnsatisfiedDep event, and properly remove things that depend on that package.

87	37	bin/oemake

commit 8ff9fe7c438e3e1cc922e0be92a939296a0d22de
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-06-17 19:25:03 +0000

    Docu updates per event handling

5	5	doc/EVENTS
0	14	doc/TODO

commit 988f7a7a1eeb4fcea7f18e9cbb62d51b2528710b
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-06-17 19:25:03 +0000

    Add a base event handler that simply outputs status information.

20	0	bin/classes/base.oeclass

commit 99c5954e601feb7c764bb88eb19f853d05596564
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-06-17 19:09:09 +0000

    Update TODO

7	3	doc/TODO

commit b2bac5384beed1cd82f856762245e4aabba9e353
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-06-17 19:09:09 +0000

    Fire TaskStart events

6	3	bin/oebuild

commit ffe855ee88ceaab5f3f2610ed6bee5064f4cfdea
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-06-17 19:09:09 +0000

    Correction to the parsers re: whitespace.

3	2	bin/oe/parse/ConfHandler.py
3	2	bin/oe/parse/OEHandler.py

commit 1a0a54d91c9e3f37b9c025034292ddefaee48671
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-06-17 19:09:09 +0000

    Add PkgStart, PkgSucceeded, PkgFailed events to oemake.

43	4	bin/oemake

commit ca9d5f5162a4621ade2fc127ac494f7f94c79d06
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-06-17 01:12:51 +0000

    Updating docu

12	3	doc/COMMANDS

commit 709609b25c20210535ad73f69cd3a4841331f497
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-06-17 01:12:51 +0000

    Further doc updates

31	0	doc/EVENTS
2	8	doc/TODO

commit 00f07b895ae11b5c938b2b65a42432815dbc9860
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-06-17 01:12:30 +0000

    Make use of handler env flag, to register a user defined event handler.

3	8	bin/oebuild

commit ca1b4d0625551e68eb5cf260cd54b901cfac4e16
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-06-17 01:12:30 +0000

    Add 'addhandler' command for specifying a user defined error handler.

0	73	bin/daemon.py
16	5	bin/oe/__init__.py
25	4	bin/oe/parse/OEHandler.py

commit b6be9faaf59fee5e5aab543a272dcafd41d2a83e
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-06-16 23:55:04 +0000

    Cleanup

0	22	bin/oemake

commit 8c6ec5214acfb68fa96f23fd8c333a49fe6f228d
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-06-16 23:55:04 +0000

73	0	bin/daemon.py

commit 669ee2c490719bee5048e89d94c827a5d20b58d2
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-06-16 23:14:59 +0000

    Update TODO

5	1	doc/TODO

commit 88ae646e81421b92caaaddad88b235214af83118
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-06-16 23:14:59 +0000

    Complete TODO item: interpackage dependency on both a specific version of a package, and on a package in general should work now.

12	12	bin/oemake

commit 4547708fd20e63cd014589d4a99e709ca02f024c
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-06-16 21:11:09 +0000

    Update TODO

17	5	doc/TODO

commit 5d74f2c6e208aeab2af416bb08f5d412e141c276
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-06-16 21:11:09 +0000

37	0	bin/oemaked

commit 676da7d5a7d0c886256ce786c0d8a7fa1862f9c0
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-06-16 18:03:33 +0000

    Update TODO

6	3	doc/TODO

commit bd47a1958240de5aa00dcc853441378796608dc3
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-06-16 18:03:33 +0000

    Adapt oemake to follow deps, and keep a cache of packages that we already attempted to build.

43	5	bin/oemake

commit a84916e241559073d181b0c62830ad2926d353d7
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-06-16 18:03:33 +0000

1	1	bin/oe/fetch.py

commit c054e61fab8c5ea7341b724292e2ed096bcd3670
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-06-16 17:39:37 +0000

    Make oemake follow dependencies, and handle provides, in its build of the items in OEFILES.

58	40	bin/oemake

commit 461eb08aab56b4449b3143ef97dd8d3ae69423ff
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-06-16 17:39:37 +0000

    Fix fetch use

7	7	bin/oebuild

commit 1900dde0ffa4b3f56ca431fb4236bc5e712b6ce4
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-06-16 02:41:27 +0000

    Better default values for the expandData() function.  Now if you supply only a single data var, it'll use that var for both read & write.

9	3	bin/oe/data.py

commit 60f4352dab7b3acec21186eefbfe3f9c1016de6a
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-06-16 02:41:27 +0000

    BUGFIX: fetch call from patcher function

5	2	bin/classes/base.oeclass

commit 48ec713fb08285e35e9b5925c2bd25eaab446535
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-06-16 02:41:27 +0000

    Add task events, and fire the events when appropriate.

8	2	bin/oe/event.py
53	8	bin/oebuild

commit a913076f4173e63a4859956e7bb6f79e3a806909
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-06-16 02:41:27 +0000

    Add pkg success and fail events to oemake impl.

4	15	bin/event
42	41	bin/oemake

commit 98eaea1ca098e6594e898248d30bfb3d027b753c
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-06-16 02:39:49 +0000

    Pull the init function from ConfHandler into OEHandler, since they share the same base init code for now.

38	20	bin/oe/parse/OEHandler.py

commit 435e3bd450da9f6bb5f646fc673ef699dc04465a
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-06-16 02:39:49 +0000

    Move OEPATH follow into handle functions of the parsers.

16	2	bin/oe/parse/ConfHandler.py

commit c58d924a8e53a36f414474c8bd226646634c8ebe
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-06-16 02:39:16 +0000

    Update TODO

10	5	doc/TODO

commit 14aec3ade1add8d54e96f0c93c90228ff80465c6
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-06-15 21:00:08 +0000

    Update TODO

25	4	doc/TODO

commit d2569c2605852db3cb79d739153b10be6da8be22
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-06-15 20:42:02 +0000

    event

4	1	bin/oe/__init__.py

commit 718b7a2ebf1599753f928b4d5618142871f42996
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-06-15 20:42:02 +0000

43	0	bin/event
73	0	bin/oe/event.py

commit c7231da662649618dacd0d7ee2108712884b2da7
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-06-14 17:29:02 +0000

    OE Package

2	2	bin/classes/base.oeclass
1	1	bin/data
3	3	bin/fetch
22	20	bin/oe/fetch.py
6	6	bin/oebuild
2	2	bin/oeread
3	3	bin/parse

commit 2c271ad4e03a310d98099d6e586aa809b1af69fd
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-06-14 17:29:02 +0000

    Further proof of concept in oemake

29	13	bin/oemake

commit 9caee7b7966e3b359d537fa873d9b7db6a76fd82
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-06-14 17:29:02 +0000

    Delete: bin/oeparse/__init__.py

0	31	bin/oeparse/__init__.py

commit 788b0f52783272a3bc2c9b6cf8028b2e3191678b
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-06-14 17:29:02 +0000

    Delete: bin/oeparse/OEHandler.py

0	114	bin/oeparse/OEHandler.py

commit 674500d5d190fbd0581472607e340ad93305b70b
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-06-14 17:29:02 +0000

    Delete: bin/oeparse/ConfHandler.py

0	69	bin/oeparse/ConfHandler.py

commit d26cc4f449893f608a32d672e71ddcc411ef9de7
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-06-14 17:29:02 +0000

    Delete: bin/oefetch.py

0	242	bin/oefetch.py

commit 4386f2fa0c7c43109185b0e07543490383f18935
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-06-14 17:29:02 +0000

    Delete: bin/oedata.py

0	201	bin/oedata.py

commit 80ca73fccca97bef59b858aaaa4fdc222b3177fa
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-06-14 17:29:02 +0000

    Delete: bin/oe.py

0	1828	bin/oe.py

commit 87cc9121873e7b8e52b1c7f0d6167d952e5221ed
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-06-14 17:29:02 +0000

    BUGFIX: Handle the case where a variable is None in our data store in the emit_env function

8	2	bin/oe/data.py

commit d5a0f03495492caae450cc78f11d3f6fa7b0171b
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-06-14 17:29:02 +0000

    Adding recent .oe parser enhancements back into the new package.

15	13	bin/oe/parse/ConfHandler.py
50	28	bin/oe/parse/OEHandler.py
6	1	bin/oe/parse/__init__.py

commit c8a03d912ca19107645fbc36ad98080bf54d68c4
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-06-14 17:29:02 +0000

58	8	bin/oe/__init__.py

commit 2a9efaf3a2a553063f03372521e6c8f23c7f4232
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-06-14 04:37:29 +0000

    bk cp oefetch.py oe/fetch.py

242	0	bin/oe/fetch.py

commit af552f3959da3c8231940361b8c4104d24b172b1
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-06-14 04:37:29 +0000

    bk cp oedata.py oe/data.py

201	0	bin/oe/data.py

commit eb1449d1ef22c6159526678bc225a6baaf2672c1
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-06-14 04:37:29 +0000

    bk cp oe.py oe/__init__.py

1828	0	bin/oe/__init__.py

commit 35a246fdd156a64831a4cd1ba246b929b18a8215
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-06-14 04:37:29 +0000

0	0	bin/oe/__init__.py
0	0	bin/oe/data.py
0	0	bin/oe/fetch.py
69	0	bin/oe/parse/ConfHandler.py
114	0	bin/oe/parse/OEHandler.py
31	0	bin/oe/parse/__init__.py

commit f2263ec2aff4228169c4300446e3303e516f2165
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-06-14 04:09:27 +0000

    update TODO

23	7	doc/TODO

commit a52297eee2c7e6e810834451505465e11c940d56
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-06-14 04:09:27 +0000

    Make oedata.emit_env expand the data prior to emitting.

1	0	bin/oedata.py

commit b15646de2fbd46e39284b6270e5060f19418d1ee
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-06-14 04:09:27 +0000

    Catch the IOError exception so as not to fail out if hte file doesnt exist (just for testing).

8	5	bin/oemake

commit 41c71bf1a3788d5e5723750b3126f47dde54bde0
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-06-14 03:52:35 +0000

    Add emit_env to the oedata stuff.

3	0	bin/data
31	0	bin/oedata.py

commit 1675e6961eeb638880e2c3aa377258497d6333d0
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-06-14 03:01:15 +0000

    Remove depcrecated fetch interface

0	123	bin/oe.py

commit d3e48b06b7d58504188326b5054a01fe99e161f8
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-06-14 02:54:35 +0000

    Alter oebuild to use new fetch syntax

2	3	bin/oebuild

commit 856c5fdd2d9f0f38099a554a95194a820a410b4d
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-06-14 02:54:35 +0000

    Adapt things to new fetch interface

2	3	bin/classes/base.oeclass
2	3	bin/oe.py

commit 2933a3f6321ac70f611190dbecf9fe4eef0f9d4e
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-06-14 02:44:20 +0000

    Update the fetch implementation to no longer use a FetchUrls class.

47	74	bin/oefetch.py

commit 0b2c01340a156fb21c7a9f0e2ae1e0e3cd6d0e00
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-06-14 02:44:20 +0000

    Update oemake implementations to test out the oeparse code.

38	10	bin/oemake

commit 2305553818c531cd65064486870f80b2aa7d2903
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-06-14 02:44:20 +0000

    Make oeread use the new oeparse code.

2	7	bin/oeread

commit d14970124c4ba7d2f4f0085aad7d8e8194c2315d
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-06-14 02:44:20 +0000

8	0	bin/fetch
69	0	bin/oeparse/ConfHandler.py
114	0	bin/oeparse/OEHandler.py
31	0	bin/oeparse/__init__.py
6	36	bin/parse

commit 3f15bc8242e8ef13078988e8f41cc1a254257a83
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-06-14 02:44:20 +0000

    Delete: bin/oeparser.py

0	292	bin/oeparser.py

commit a3d2cc538fc2c65280c2c36eb54ef4155ddf9613
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-06-14 02:44:20 +0000

    Add init and setData functions to oedata.

7	0	bin/oedata.py

commit 148fd12d6dffbd616541d3fd303b7a3235df8ecc
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-06-12 20:52:21 +0000

    Update TODO

3	1	doc/TODO

commit a9a57d30bc4d8aa02dbcbfa5ee6ef182eb866c07
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-06-12 20:45:34 +0000

    Add firstnonzero method to digraph class.

8	0	bin/oe.py

commit bb0a6062ee109bf37345bf83f18120ddd289c8de
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-06-12 20:36:35 +0000

59	0	bin/oemake

commit d2533ca20cfe0f32aff46dbee1d28ca50b5aab0b
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-06-12 20:06:40 +0000

10	9	bin/oebuild

commit 8667ffbf297414cd041b8f923204aaa5130d9d29
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-06-11 23:58:14 +0000

18	0	doc/TODO

commit e24b7d183ef62c502a3e51ca68bc8c69f08e5e6a
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-06-11 22:15:52 +0000

    Output a success message for the task the user supplied on the commandline

2	1	bin/oebuild

commit 9f2dd6577fc20da2c5adc1b8974efcf623af8c8b
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-06-11 22:15:52 +0000

    Make use of the new encodeurl function to strip off params in oefetch's wget method.

10	8	bin/oefetch.py

commit 60a72e37b27d2311980f33a1bb85b8135c3cecc7
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-06-11 22:15:52 +0000

    Add an encodeurl function, for rebuilding a url from a list as outputted by decodeurl.. thereby permitting url manipulations based on the individual decoded parameters.

42	0	bin/oe.py

commit 35061957ee9adaca9aa968969e5624b565c606e4
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-06-11 21:24:24 +0000

    Raise exception on failure in python patcher code

8	5	bin/classes/base.oeclass

commit fc7682e0ff0ec39a957e586120c061b07c9aa9db
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-06-11 21:24:24 +0000

    Error handling fixes.. use exceptions to handle function execution failure states, bugfix python function execution, and fix the stamp handling's dep checks.

46	18	bin/oebuild

commit 225f0180fa244f14423e1d84183faa697dc9e8dd
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-06-11 21:24:24 +0000

    Bugfix, remove the parms from the url prior to fetch

1	1	bin/oefetch.py

commit c3580fc57dbba86b3a61ea6a4ee4375747fbc366
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-06-11 21:24:24 +0000

    BUGFIXES: Dont expand all the per app missing vars immediately, expand at emit time.  Make the movefile function actually work, and remove some unused vars from envflags.

28	31	bin/oe.py

commit 0175c7983152968079a54a50c65950e2716dc281
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-06-11 04:22:40 +0000

    Remove inconsistencies in task vs func name, and fix EXPORT_FUNCTIONS for python functions.

9	1	bin/oe.py

commit 7e1f53dcc616f168110a2cc4eced5434bba7d74c
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-06-11 04:22:40 +0000

    Finishing up the python ver of the patch application func.

25	30	bin/classes/base.oeclass
48	44	bin/oebuild
16	1	bin/oefetch.py

commit 15e27422a1ddebf3f26f5093087384a8576a89b6
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-06-11 04:22:40 +0000

    BUGFIX: Correct extraction paths for .gz, .Z, etc now that we set A properly.

8	8	bin/build/oebuild.sh

commit 9bf73fdfeb91c077fad65da09258ef8419901b35
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-06-11 02:47:08 +0000

    BUGFIX: Dont emit a python function into the shell run code.

14	2	bin/oe.py

commit d159493167d9f15dace03afc90273a651100c96e
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-06-10 23:46:14 +0000

    Enhance include function for dealing with relative paths.

15	3	bin/oe.py

commit 5cb100df22317e31f606f3c5e561c0b58cddf193
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-06-10 23:25:47 +0000

    Exclude

1	2	bin/build/oebuild.sh

commit ffd371cfeaffc8e8eb77458abbce25296e73413a
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-06-10 23:22:31 +0000

    Fix for the unpacker wrt directories

2	1	bin/build/oebuild.sh

commit 7ab19f7c7d50a018323d5604f2a8bdf3dfe1b0a2
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-06-10 22:39:06 +0000

5	1	bin/build/oebuild.sh
13	5	bin/oe.py
13	1	bin/oefetch.py

commit 8af9c191b1570a14f7602201f99ae7633cf95dce
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-06-10 21:39:02 +0000

    New addtask syntax

1	1	bin/classes/base.oeclass

commit e976bf43bf83739da3108da00bdb813a3f906c0e
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-06-10 21:28:24 +0000

    In the exception handling for the fetch, use the value passed up as the message, for more verbose output.

6	3	bin/oebuild
1	1	bin/oefetch.py

commit 65f63a9e1f788559789555248bd9940be8455d76
Author: Holger Schurig <schurig@mn-solutions.de>
Date:   2003-06-10 20:18:04 +0000

    simplified the support() functions
    decodeurl() once, not up to n times
    don't calulate self.urls if we're going to raise an exception anyway

20	34	bin/oefetch.py

commit 7fc29a91180b2ceb7b4d27ffc19d736209fb75ec
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-06-10 18:16:16 +0000

    Check the fetch stamp in do_fetch to prevent unnecessary redownloads (since the wget method doesnt check for file completion yet.

3	0	bin/oebuild

commit 4332a83e4ca69490f77e93b4b730be492d10e265
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-06-10 16:30:52 +0000

    Correct the logic of the new addtask syntax

19	27	bin/oe.py

commit 94cc6e6db6d9012edded62f25d2d654cc1be109c
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-06-10 14:41:04 +0000

    Add bits for 'python' declaration for function format blocks

8	3	bin/oe.py
2	1	bin/oebuild

commit ec0f977b9f928664311a7ed838d1fa72d562edbd
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-06-10 14:26:02 +0000

    BUGFIX: in FetchUrls class that resulted in urls becoming a dict instead of an array when called a second time.

1	1	bin/oefetch.py

commit fa4ef90b68ec11c130b8c4b5553eb45e1d05d4e0
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-06-10 05:37:31 +0000

    slight reorder

1	0	doc/COMMANDS

commit 6954dfa4be3ae0d0b1a31b5e05d0aa0ba4f1c1e1
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-06-10 05:37:31 +0000

    Add fetch back to unpack deps, and correct naming of the fetch stamp.

2	3	bin/oebuild

commit 0938bf397aedce57eab4f84996ff7caa5ee6db91
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-06-10 05:10:30 +0000

    Update patcher use to make use of the addtask function.. we now have a new 'patch' task that sits between compile and unpack :)

7	10	bin/classes/base.oeclass
7	3	bin/oe.py
9	5	bin/oebuild

commit cff104fdb20491f66e6a891b5912e382078b229e
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-06-10 04:43:15 +0000

    Adding second and third opts to addtask command, to specify things the function depends on, and things that depend on the function.

29	1	bin/oe.py
54	5	bin/oebuild

commit fe79a59b0964e80167a795b28a3a140e384a8d82
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-06-10 04:43:15 +0000

    Add an exec_python_task function, and also add support glue for an 'addtask' function, for adding functions to the task stack.

10	0	bin/oeparser.py

commit 30d7da005ffd7ec50095445ac884ba88a44f2d75
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-06-10 00:39:05 +0000

    Make the base class use patcher for patch application.

33	1	bin/classes/base.oeclass

commit e96b5e80d440ba1204a25ba0aae4c493121d551f
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-06-09 22:48:34 +0000

    Allow passing data in the FileReader constructor

6	6	bin/oeparser.py

commit 93d1d1e4223f6a86f470f8f33df3938de34a84c6
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-06-09 22:48:34 +0000

    Correct the doc display for the usage information.. it shouldnt care that the function name is do_ or not.

5	4	bin/oebuild

commit 45ccc13902930f9a6eddb2c1921a827e889a8509
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-06-09 20:25:50 +0000

    Change note to fatal calls in the oebuild fetch exception handling, since the do_* functions dont implement proper failout and cleanup.

4	4	bin/oebuild

commit 32d5f94d3c459d69f2b9ff430ec717ad9e4563ac
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-06-09 20:25:21 +0000

31	0	bin/data
162	0	bin/oedata.py

commit 5444275377d24703fd4b62511b2cbfc1233997a7
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-06-09 17:56:21 +0000

    Add a instance of ConfigReader as an oeconf object in oeparser.py, thereby giving us a sane default globally accessible config reader.

20	5	bin/oeparser.py
11	9	bin/parse

commit ba480982dc46f0aa58a4a24e0d5d4a3efe382c7c
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-06-09 16:45:04 +0000

    Delete: bin/fetch

0	34	bin/fetch

commit c64b863aec75beaaff81f84c0263e80bd38fa4a8
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-06-09 16:32:37 +0000

    s/+=/=/

2	2	bin/oefetch.py

commit b1491e20f99cd401eb048d4f64b9034eae797ad0
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-06-09 16:32:37 +0000

    Call out mkdirhier to ensure DL_DIR exists.

2	0	bin/fetch

commit 4536a3a50a5444001627ea1755a449de7320a24a
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-06-09 16:24:32 +0000

    Use os.chdir() rather than a cd within the system() call.

10	32	bin/oefetch.py

commit 99ed52ee737e60b7c7577a361c0befe4ecd98132
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-06-09 16:24:32 +0000

    Pass .oe filename and follow OEPATH in parse test tool.

33	14	bin/parse

commit 1d4b1ad9f4e40c989e5d3763f1af5737cdea141b
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-06-09 16:24:32 +0000

    Alter oebuild to make use of oefetch so we can catch the corner bugs in its functionality.

18	3	bin/oebuild

commit afc5156ed94b12daf23bf1437f22590b2929a3f7
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-06-09 16:24:32 +0000

1	1	bin/fetch

commit 946b9df6188b732c13256c0a4e8d0f90cad786be
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-06-06 14:52:10 +0000

    Correction to the inherit code so that classname gets set properly when we go more than one level deep in inheritance.

2	2	bin/oe.py

commit ea80a4349cad1ee0d4d385f15bcd3db5026f9473
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-06-06 14:52:10 +0000

    Add a few exceptions and remove the return and fatal calls

13	4	bin/fetch
38	13	bin/oefetch.py

commit 435c8c53ac1906b61fc13a8893194960590db6b0
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-06-06 11:25:52 +0000

    Use localpath override from the user in the localpath methods as well.

28	20	bin/oefetch.py

commit d5348d4613e22a423878598f1f3f8fd899eefab1
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-06-06 10:35:41 +0000

    Add an extremely basic go() implementation for the Cvs class.

93	9	bin/oefetch.py

commit a1e4b645105092d02be0122f1305f00bda4b9c9d
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-06-06 10:35:41 +0000

1	1	bin/oeparser.py

commit da66394e490101388c9621236b0384944989ee33
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-06-05 22:47:34 +0000

    Alternate env dictionaries

12	10	bin/oe.py

commit 08033695133d132167ac0830e20685b5d1dd7187
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-06-05 22:47:34 +0000

    Add localpath method for Local fetch class, and allow user override of 'localpath' for methods.

64	112	bin/oefetch.py

commit af945810ba54307fd8ea9336587443253279b649
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-06-05 22:47:34 +0000

    Add initial .oe format parser using classes, and use it in the parse test app

143	38	bin/oeparser.py
14	4	bin/parse

commit 632697c4ddf0638d499c32b68d87f64aaf9f7475
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-06-05 22:47:34 +0000

    Add 'package' task after install, and add no-op implementation to base.oeclass.

6	1	bin/classes/base.oeclass
3	1	bin/oebuild

commit 3e55886206b8866a87c04abe43b396fa66ab24b0
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-06-05 22:47:34 +0000

4	5	bin/fetch

commit 383b0fbee8e9d2615a1ea558a3a3c737d39799cb
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-06-05 13:47:25 +0000

    use the "tasks" dict rather than globals() to list available tasks in usage()

27	22	bin/oebuild

commit b56bbd9d544213dfe4291dc9263fa2052c0f8cbf
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-06-05 13:47:25 +0000

24	0	bin/fetch
207	0	bin/oefetch.py

commit 241943bcfb7fdd55e0ece677bd333d1562357a1c
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-06-05 03:04:51 +0000

    Consistency in implementation.

162	0	bin/oeparser.py
10	0	bin/parse

commit ca91271d18609ebde8077dcf86740a4a22f18cad
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-06-05 03:04:51 +0000

    Add support to the expand function to pass in an alternative 'env' dict for expansion.

1	1	bin/oe.py

commit 3da9ff550bb0c937fe814b720224ef9e480fd99d
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-06-03 00:58:47 +0000

    Add test, showenv functions back in.

2	0	bin/oebuild

commit 84132f7ab6e5a9ca4020b99842cc90adaa186421
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-06-03 00:58:47 +0000

    Add support for := vs = in var=value statements. := evaluates the variable immediately, same as gnu makefiles

9	3	bin/oe.py

commit b95252d09a30d59be503d509ff649db9e28d74e1
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-06-03 00:36:16 +0000

    BUGFIX: dont freak if a var isnt in envflags (broke when i added the 'export' option support)

3	1	bin/oe.py

commit 6c36c6ee1c24212062a8701d15539d529dd405ad
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-06-03 00:31:44 +0000

    Some bugfixes after actually testing a seperate OEDIR vs build dir

6	4	bin/oe.py

commit 02ae3cbdb6dc23bd14b096a1a8632496deb945cf
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-06-03 00:31:44 +0000

2	3	bin/oebuild

commit 6df30109157e832fa394f40d8844e95ffa0773b0
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-06-02 20:54:21 +0000

    remove debug output for inheritance

1	1	bin/oe.py

commit 16a2cb21e7f3e94824d161d719d45adc36fb625f
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-06-02 20:54:21 +0000

    Implement task interdependencies, though we dont really have error handling atm.  We should use function return code or exceptions so that we can sanely cleanup on task execution failure.

59	5	bin/oebuild

commit 216c28ad4c8d2c32bbc1f639588df9b8379dbbe1
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-06-02 19:39:36 +0000

    Since oe.py defines a sane default for OEPATH, we can use it to locate the toplevel oe.conf.  Also follow oepath in sourcing of oebuild.sh

19	4	bin/oebuild

commit 0a4af380d62f6d3ae52b200c26ba33f5bb50f23c
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-06-02 19:39:36 +0000

    Rename: bin/build/base.oeclass -> bin/classes/base.oeclass

0	0	bin/{build => classes}/base.oeclass

commit 75d12197fc4e712a4b88d6bd8f61e425f121aa4b
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-06-02 19:39:36 +0000

    Implement the use of oepath.  Split OEDIR and TOPDIR paths, to facilitate a global /usr/share/oe vs the current build dir.

23	9	bin/oe.py

commit 4ce0132aa086befca1116f878d12c397cfb1b566
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-06-02 16:08:24 +0000

    log.[func].[pid] rather than log.fetch.[pid]

2	2	bin/oebuild

commit 896feb24c2e0a0706750e7fe517b6ef71b637c4b
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-06-02 16:08:24 +0000

    Dont use an absolute path in a call to os.path.join, as an absolute path results in it throwing out all previous path components, according to the documentation.

1	1	bin/oe.py

commit ecce89057ddf89c3584d502d9061a5e86dd639b2
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-06-02 15:27:54 +0000

    Misplaced plus

1	1	bin/oe.py

commit 681262ac9b89f9070cc20a40e216df091d0637c2
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-06-02 15:27:54 +0000

    Fetch called with two args when it only has one.

1	1	bin/oebuild

commit 847a030e14aa271ba70d2c1b3f6eb84d45074501
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-06-02 14:23:02 +0000

    Auto merged

4	3	bin/oe.py

commit f245a7dcfb288b94209677a0825661f98aa1849a
Author: Holger Schurig <schurig@mn-solutions.de>
Date:   2003-06-02 14:23:02 +0000

    misc update

1	1	doc/DIRSnVARS

commit 057a3c3e915f9e0f53415a53dd8473bd2bb3ae46
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-05-30 23:46:43 +0000

    Add support for 'export' declaration on var lines in conf and oe files, which sets the export flag for said env var.

11	7	bin/oe.py

commit d9d8fd192a75c2284a1e41163d29a224c5c9510c
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-05-30 22:25:40 +0000

    Move return statement so that fetch works for multiple sources

1	1	bin/oe.py

commit c5476a11d813eb30140edfcc2ef3e0a27dffdf99
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-05-30 22:08:20 +0000

    Export MAKE var

1	1	bin/oe.py

commit 710f38ab873272dedf62a060e848a6989a1b5ae4
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-05-30 21:33:31 +0000

30	0	bin/build/base.oeclass

commit 5cf0e09498e4929df89b03a53e654e9377e420a4
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-05-30 21:33:31 +0000

    'inherit' functionality

16	6	bin/build/oebuild.sh
49	6	bin/oe.py

commit 8c240d25f8718c3f44e8829047b6266dcffd5f0a
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-05-30 16:44:02 +0000

    Add 'include' directive for .oe files

9	0	bin/oe.py

commit 2b3eddaa4f6892d2078f172f283a6c1c5ea07b11
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-05-29 22:25:23 +0000

    Staging include dir fixes

2	1	bin/oebuild

commit 8cc10b3041808b047cd4a0f25656838feaab7c90
Author: Holger Schurig <schurig@mn-solutions.de>
Date:   2003-05-17 21:59:51 +0000

    env[] -> getenv at various places

16	13	bin/oebuild

commit 18c461a342e01fa6a4304616882067e6e7aa8605
Author: Holger Schurig <schurig@mn-solutions.de>
Date:   2003-05-17 21:59:51 +0000

    changed some comments
    added getenv()
    fixed calls to inherit_os_env()
    added warning on mismatching "" or '' in *.oe files
    calculate FILESDIR more intelligent

66	32	bin/oe.py

commit fc36cc0b52810c8e4da5ac8001673e3e3db02231
Author: Holger Schurig <schurig@mn-solutions.de>
Date:   2003-05-17 18:32:49 +0000

    made it run

5	2	bin/oebuild

commit 32ef4287c615ec1ef2823791e8cd410b68a396a8
Author: Holger Schurig <schurig@mn-solutions.de>
Date:   2003-05-17 18:32:49 +0000

    added checks after read_config()
    removed descriptions from envdesc, renamed envdesc -> envflags

129	161	bin/oe.py

commit d7f2adb38ec6cdeda4efeb04625de509d9d365aa
Author: Holger Schurig <schurig@mn-solutions.de>
Date:   2003-05-09 22:37:09 +0000

    added read_oe()
    added more variables to envdesc

138	46	bin/oe.py

commit 6757ed33b2d38b9de87429affc6d699cf6f0f904
Author: Holger Schurig <schurig@mn-solutions.de>
Date:   2003-05-09 22:37:09 +0000

    adapted to new situation

9	12	bin/oebuild
1	1	bin/oeread

commit cbd5d630ccbe78a8e043287937bf6e0e66b0ce26
Author: Holger Schurig <schurig@mn-solutions.de>
Date:   2003-05-09 16:51:00 +0000

    some renames

8	8	bin/build/oebuild.sh
6	3	bin/oebuild

commit f7b7055318b760837fc6de897cb7cf83b5798dd6
Author: Holger Schurig <schurig@mn-solutions.de>
Date:   2003-05-09 16:51:00 +0000

    RIP fetch2
    RIP getconfig
    RIP varexpand
    welcome readconfig
    welcome expand
    better docs on update_env()

190	499	bin/oe.py

commit cd782fd951cd4bc0e4ad96be218fc9436f2adaa2
Author: Holger Schurig <schurig@mn-solutions.de>
Date:   2003-05-09 16:51:00 +0000

9	0	bin/oeread

commit c34afc8fd37bbab7b6041f141284fc876b5b886d
Author: Holger Schurig <schurig@mn-solutions.de>
Date:   2003-05-06 22:05:14 +0000

    removed emit_env, it's now in oe.py
    unified most do_..() function
    added usage

100	109	bin/oebuild

commit 8005655141301a5d6dca2b77eade995db0e62d53
Author: Holger Schurig <schurig@mn-solutions.de>
Date:   2003-05-06 22:05:14 +0000

    pkg_..() & src_..() -> do_..()

20	15	bin/build/oebuild.sh

commit be9f726af56a98aa44b6996ae3b72aac6ab9f5bd
Author: Holger Schurig <schurig@mn-solutions.de>
Date:   2003-05-06 22:05:14 +0000

    misc

4	3	doc/DIRSnVARS

commit b65b0a876ca8f4d93be615cde1493d902ba856c9
Author: Holger Schurig <schurig@mn-solutions.de>
Date:   2003-05-06 22:05:14 +0000

    added STAMP, STAGE, STAGEINC, STAGELIB
    add_additional_vars()
    BUGFIX: debug_prepender

46	15	bin/oe.py

commit dc94a8d46c29510439a38d92fb41baee4f700fe5
Author: Holger Schurig <schurig@mn-solutions.de>
Date:   2003-05-06 22:05:14 +0000

21	0	doc/COMMANDS

commit fbe5bfd73df0a6d49e1f1cf72822b81088f08725
Author: Holger Schurig <schurig@mn-solutions.de>
Date:   2003-05-03 20:49:36 +0000

    generate OEBUILD env
    described OEBUILD, FEATURES, ALLOWED_FLAGS

22	7	bin/oe.py

commit 6f394010913e56ddfba140c31231059199e4ad64
Author: Holger Schurig <schurig@mn-solutions.de>
Date:   2003-05-03 20:49:36 +0000

    added lots of functions

253	54	bin/build/oebuild.sh

commit 2bfc4b65b4319adfb4eacca458143d72b2ce8fa7
Author: Holger Schurig <schurig@mn-solutions.de>
Date:   2003-05-03 15:38:45 +0000

    source bin/build/oebuild.sh
    removed some errors

14	7	bin/oebuild

commit b2c0ca1b12f13f39e07cf3ddd21691f5a7755e53
Author: Holger Schurig <schurig@mn-solutions.de>
Date:   2003-05-02 21:48:11 +0000

    pydoc-ified the file somewhat
    doctest cases for ververify
    prepender -> debug_prepender

43	22	bin/oe.py

commit 880c2f9dc65eed8b266861682779cae872850e7c
Author: Holger Schurig <schurig@mn-solutions.de>
Date:   2003-05-02 21:48:11 +0000

340	0	bin/COPYING

commit e67a96374746a7f8666a74fb1553789b2b0ebd71
Author: Holger Schurig <schurig@mn-solutions.de>
Date:   2003-04-29 19:11:45 +0000

    rearranged sourcecode, more doctests, more __doc__ strings

1562	1446	bin/oe.py

commit f489558490fa127aa027f4e6e773d0d8e67b4925
Author: Holger Schurig <schurig@mn-solutions.de>
Date:   2003-04-29 19:11:45 +0000

    moved some functions to oe.py
    from oe import * changed most of the source

73	78	bin/oebuild

commit 3ceda4be1020639971dbd3a741e509a53fdcf152
Author: Holger Schurig <schurig@mn-solutions.de>
Date:   2003-04-27 02:27:45 +0000

13	0	bin/build/oedebug
5	0	bin/build/oefatal
5	0	bin/build/oenote
11	0	bin/build/oeset

commit 2d4cb61003ad3dccd997bd1bbce30acb09050a5b
Author: Holger Schurig <schurig@mn-solutions.de>
Date:   2003-04-27 02:27:45 +0000

    BDEBUG -> OEDEBUG
    strip singe & double quites when reading *.oe files
    create contents of ${A} while fetching
    (TODO: this should be done just before src_extract)
    misc cleanups in envdesc

18	5	bin/oe.py

commit 075c595839a2d163e218cc83dec12a1f4edff196
Author: Holger Schurig <schurig@mn-solutions.de>
Date:   2003-04-27 02:27:45 +0000

    BDEBUG -> OEDEBUG
    keep run file when script did not work
    new: do_install()
    do_build() now does something sensible
    docstring for do_showenv()

40	38	bin/oebuild

commit b7118bb92144e078d810cd33b48395c86706428d
Author: Holger Schurig <schurig@mn-solutions.de>
Date:   2003-04-27 00:25:19 +0000

    noda suggested this hack to re-read local config after arch specific config files

21	15	bin/oe.py

commit 2ea04dfb188f9a8f301bd0d8064112eadae92d38
Author: Holger Schurig <schurig@mn-solutions.de>
Date:   2003-04-27 00:25:19 +0000

133	0	doc/DIRSnVARS

commit f216dc3587fb4347d143062b7d68442756b04e7f
Author: Holger Schurig <schurig@mn-solutions.de>
Date:   2003-04-26 21:21:20 +0000

12	0	doc/README
184	0	doc/ebuild.1.txt
733	0	doc/ebuild.5.txt

commit 19e432c6794e44463eba603ef567c636edc16201
Author: Holger Schurig <schurig@mn-solutions.de>
Date:   2003-04-21 22:53:32 +0000

    added decodeurl(), fetch_with_*()
    added doctests for some functions

264	72	bin/oe.py

commit 0c8166740517bdb4624c68d14418ec7b96b1b36d
Author: Holger Schurig <schurig@mn-solutions.de>
Date:   2003-04-21 22:53:32 +0000

    added 'oebuild showfetch ...'

48	20	bin/oebuild

commit 4ea1cd5d8d730155bf21e52e5be23829f2feb829
Author: Holger Schurig <schurig@mn-solutions.de>
Date:   2003-03-23 21:33:24 +0000

5	0	bin/build/README
254	0	bin/build/oebuild.sh

commit 28c67b5f33062980dfa57e7d81727384e61704ec
Author: Holger Schurig <schurig@mn-solutions.de>
Date:   2003-03-22 22:46:31 +0000

    nifty exec_shell_func()
    oebuild fetch/unpack/compile can work somewhat...

88	27	bin/oebuild

commit f9b8d952fcdebceb21c269f77995f1959d873fae
Author: Holger Schurig <schurig@mn-solutions.de>
Date:   2003-03-22 22:46:31 +0000

    BUGFIX: correct debug level handling in oe.debug()

7	8	bin/oe.py

commit 9449e634a03ceaa95e93217bea8f92e546d9c987
Author: Holger Schurig <schurig@mn-solutions.de>
Date:   2003-03-22 18:27:30 +0000

    moved some function from oebuild to oe.py
    made fetch() working, it's not yet as good as scripts/getsources from OZ
    added SUBTARGET to envdesc[]

338	133	bin/oe.py

commit 67334a56dfd18acda77adb1a004f6fd2c5c45c35
Author: Holger Schurig <schurig@mn-solutions.de>
Date:   2003-03-22 18:27:30 +0000

    added infrastructure for clean, mrproper, fetch etc
    moved some functions to oe.py

131	215	bin/oebuild

commit 8d4fd3c07ca9b9bd89aa652e91ea2677117630e9
Author: Holger Schurig <schurig@mn-solutions.de>
Date:   2003-03-22 11:04:57 +0000

    new BDEBUG for build-time-debug
    new debug(), note(), error() and fatal()
    new inherit_os_env()
    comments for the meaning of the fields in envdesc[]
    added warnlevels to envdesc[]

134	35	bin/oe.py

commit de2f758f63ad0b8c0b80e992409eaaafa87a794e
Author: Holger Schurig <schurig@mn-solutions.de>
Date:   2003-03-22 11:04:57 +0000

    let it emit a shell script

110	28	bin/oebuild

commit 15370662ee927a8d4f1b6962827d2f1d41593980
Author: Holger Schurig <schurig@mn-solutions.de>
Date:   2003-03-21 23:02:33 +0000

    BUGFIX: don't expand things to early, now the shell functions again have apostrophes/quotation-marks
    allow overriding of env-vars, too

50	37	bin/oebuild

commit 4d88c568fdc09a1e850a745f0038f7db24da4d66
Author: Holger Schurig <schurig@mn-solutions.de>
Date:   2003-03-21 22:20:00 +0000

5	0	bin/README

commit 7fcc3bddfd9fbf109ef11db0987e8bd5b26433e1
Author: Holger Schurig <schurig@mn-solutions.de>
Date:   2003-03-21 22:05:05 +0000

    added some more comments
    lot's of environment related stuff

196	4	bin/oe.py

commit ca9aff950b73eb5eb5bbac62752590151b0eb0a1
Author: Holger Schurig <schurig@mn-solutions.de>
Date:   2003-03-21 22:05:05 +0000

150	0	bin/oebuild

commit eac49810eceee742a52eba1e88169202f666ba03
Author: Holger Schurig <schurig@mn-solutions.de>
Date:   2003-02-27 21:57:59 +0000

    more worked throught

327	260	bin/oe.py

commit 2a44ca937febcb9304b602e31620497aac0aed4b
Author: Holger Schurig <schurig@mn-solutions.de>
Date:   2003-02-26 22:06:22 +0000

    added lot's of comments
    reformatted
    adatapted to our needs

260	139	bin/oe.py

commit dd7fd7e6d3dc0242245853b8ee179729771faced
Author: Holger Schurig <schurig@mn-solutions.de>
Date:   2003-02-26 22:06:22 +0000

    Delete: bin/parser

0	13	bin/parser

commit 580a130682ede5d564abf5254fa233feb11fa69e
Author: Holger Schurig <schurig@mn-solutions.de>
Date:   2003-02-25 20:43:13 +0000

    added VarExpandError exception
    added support for \n -> ' ' conversion
    nicer error messages
    corrected line numbering

39	19	bin/oe.py

commit 4482cdd123620a89666647de415b188a84d56b51
Author: Holger Schurig <schurig@mn-solutions.de>
Date:   2003-02-25 19:30:48 +0000

    Delete: bin/python/oe.py

0	0	bin/python/oe.py

commit 0a866478cc2ae23a4d60ea407b0d6d89146f3016
Author: Holger Schurig <schurig@mn-solutions.de>
Date:   2003-02-25 19:30:48 +0000

871	0	bin/oe.py

commit a59c15404c2352e4ccaf0ca3b87cb2f9abd359fa
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-02-21 04:03:45 +0000

    slight path correction

13	0	bin/parser
0	71	bin/python/oe.py

commit af645b03b585a9c92dc111188756b8f6badfec5f
Author: Chris Larson <clarson@kergoth.com>
Date:   2003-02-21 04:03:45 +0000

    .oe file parser function

71	0	bin/python/oe.py
